/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3288334340 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152004 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225617 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170894057 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584754 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364755 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2432696324 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122473 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122266 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122193 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122122 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121945 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121817 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121881 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121744 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898950 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952791526 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952797000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578194 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017876 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017875 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017872 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017871 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017870 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516584388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582915 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850590 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849419 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2432696334 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068448 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3321888870 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3321888869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321888866 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321888860 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888838 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3321888846 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888843 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321888855 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888810 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888817 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888814 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3321888828 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888805 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888804 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3321888794 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3321888793 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888792 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3321888786 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3321888780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3321888779 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291856001 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291856008 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856007 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856014 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791550 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791549 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791545 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791544 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791533 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848318 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854648 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848507 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848505 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848450 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225479 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225686 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225512 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225500 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225499 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225480 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3221225475 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225494 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2080375506 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2248146962 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2248146959 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2248146948 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2181038090 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038089 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587472 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2365587469 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587461 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2231369732 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3003153336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153289 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153195 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153062 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152921 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152874 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152821 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152768 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952800824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007896 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007967 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3170893834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893832 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893831 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893830 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3170893829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791520 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791522 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2952791519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791514 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791498 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952791497 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3170893828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952792510 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344588 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919119 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473540 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582423 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582450 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582405 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2080374799 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2080374798 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374797 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374796 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364675 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2164260867 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2181038087 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2181038083 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374790 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374789 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017866 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017877 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240742 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240741 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364690 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2382364689 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2382364682 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240704 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240659 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2415919121 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038088 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2181038084 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2164260874 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2164260868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952795110 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952795105 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952794203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791523 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952791524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345785 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121730 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121733 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121726 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791367 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952791370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791368 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952794811 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121803 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121806 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121827 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121799 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952792127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121995 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121992 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121989 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003150847 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122534 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122537 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122558 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122586 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007842 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007840 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007834 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007776 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122530 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120562388 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563334 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3120563270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120562359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007818 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007843 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2113929221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003146250 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122459 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122462 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122483 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122491 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122455 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340402 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122417 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122425 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122389 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122318 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122342 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122252 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122255 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122276 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008709 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122248 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003186895 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008730 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008715 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122182 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122203 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122175 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121867 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121891 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121899 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121863 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122108 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122111 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122140 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122104 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003166612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003185988 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121931 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121934 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121955 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121963 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121782 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007767 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007766 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007765 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121927 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008193 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899213 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008199 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122033 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122036 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122057 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122012 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121681 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121678 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122000 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008904 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003164608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008054 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344455 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344451 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2986344454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344452 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019899082 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899106 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899064 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899015 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899018 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899039 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898936 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019898939 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898960 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019898968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898932 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898910 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2466250783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121684 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898907 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3019898905 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121692 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122624 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584167 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584166 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818582992 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572610 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2315255829 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578116 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576343 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576413 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576418 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919243 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919163 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579393 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818575803 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818578877 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576158 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818575832 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572624 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572804 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572689 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919115 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2080374819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810244 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554438, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2348810244 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2348810244.node = NNI2348810244;
var NNI2332033028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2332033028.node = NNI2332033028;
NTI2332033028.base = NTI33555171;
NTI2348810244.base = NTI2332033028;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2080374819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080374819.node = NNI2080374819;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2415919113 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2415919113.node = NNI2415919113;
var NNI2415919115 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2415919115.node = NNI2415919115;
NTI2415919123.base = NTI2415919115;
NTI2818572689.base = NTI2415919123;
NTI2818572804.base = NTI2415919115;
NTI2818572635.base = NTI2415919115;
NTI2818572624.base = NTI2415919115;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2415919115;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2415919115, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2415919113, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818575832.base = NTI2818572292;
NTI2818576158.base = NTI2415919115;
NTI2818578877.base = NTI2415919115;
NTI2818575803.base = NTI2415919115;
NTI2818579393.base = NTI2415919115;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2415919163.base = NTI2415919115;
NTI2415919243.base = NTI2415919115;
NTI2415919234.base = NTI2415919115;
NTI2818576413.base = NTI2415919115;
var NNI2818576418 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576413, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576418.node = NNI2818576418;
NTI2818576343.base = NTI2415919115;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2415919115;
var NNI2818578074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2818578074.node = NNI2818578074;
var NNI2818578116 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2818578116.node = NNI2818578116;
var NNI2818578148 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2818578148.node = NNI2818578148;
var NNI2315255829 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2315255829.node = NNI2315255829;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572610.base = NTI2415919115;
NTI2818582992.base = NTI2415919115;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2415919113, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2818584167 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818584167.node = NNI2818584167;
var NNI2818584166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818584167, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2818584166.node = NNI2818584166;
var NNI3019898905 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3019898905.node = NNI3019898905;
var NNI3019898908 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898907, name: "Field1", sons: null}]};
NTI3019898908.node = NNI3019898908;
NTI3003121692.base = NTI3019898908;
NTI3003122624.base = NTI3003121692;
NTI2986345537.base = NTI33554435;
var NNI3003121667 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3003121667.node = NNI3003121667;
NTI3003121672.base = NTI3003121667;
var NNI3003121684 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121672, name: "Field2", sons: null}]};
NTI3003121684.node = NNI3003121684;
var NNI2466250783 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2466250783.node = NNI2466250783;
var NNI3019898910 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3019898910, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3019898910, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3019898910, name: "Green", len: 0, sons: null}}};
NTI3019898910.node = NNI3019898910;
var NNI3019898932 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI3019898932.node = NNI3019898932;
var NNI3019898988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}]};
NTI3019898988.node = NNI3019898988;
NTI3019898936.base = NTI3019898939;
var NNI3019898939 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019898936, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019898936, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019898932, name: "value", sons: null}]};
NTI3019898939.node = NNI3019898939;
NTI3019898960.base = NTI3019898939;
var NNI3019898968 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898960, name: "Field2", sons: null}]};
NTI3019898968.node = NNI3019898968;
NTI3019898904.base = NTI33554439;
var NNI3019899011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3019898904, name: "val", sons: null}]};
NTI3019899011.node = NNI3019899011;
NTI3019899015.base = NTI3019899018;
var NNI3019899018 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019899015, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019899015, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019899011, name: "value", sons: null}]};
NTI3019899018.node = NNI3019899018;
NTI3019899039.base = NTI3019899018;
var NNI3019899047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019899039, name: "Field2", sons: null}]};
NTI3019899047.node = NNI3019899047;
NTI3019899064.base = NTI3019898908;
var NNI3019899078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3019899064, name: "val", sons: null}]};
NTI3019899078.node = NNI3019899078;
NTI3019899082.base = NTI3019899085;
var NNI3019899085 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019899082, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019899082, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019899078, name: "value", sons: null}]};
NTI3019899085.node = NNI3019899085;
NTI3019899106.base = NTI3019899085;
var NNI3019899114 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019899106, name: "Field2", sons: null}]};
NTI3019899114.node = NNI3019899114;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI2986344451 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2986344451, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2986344451, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2986344451, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2986344451, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2986344451, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2986344451, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2986344451, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2986344451, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2986344451, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2986344451, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2986344451, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2986344451, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2986344451, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2986344451, name: "Assignment", len: 0, sons: null}}};
NTI2986344451.node = NNI2986344451;
NTI2986344455.base = NTI2986344452;
var NNI2986344454 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2986344452, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2986344451, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2986344455, name: "children", sons: null}]};
NTI2986344454.node = NNI2986344454;
NTI2986344452.base = NTI2986344454;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008054.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3003164608 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3003164608.node = NNI3003164608;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008904 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008904.node = NNI3087008904;
NTI3003122000.base = NTI2046820355;
NTI3003121681.base = NTI3003121684;
var NNI3003121678 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121681, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121678.node = NNI3003121678;
var NNI3003121668 = {kind: 1, offset: "queries", len: 0, typ: NTI3003121678, name: "queries", sons: null};
NTI3003121668.node = NNI3003121668;
var NNI3003122012 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122000, name: "Field2", sons: null}]};
NTI3003122012.node = NNI3003122012;
var NNI3003122029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null}]};
NTI3003122029.node = NNI3003122029;
var NNI3003122085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI3003122085.node = NNI3003122085;
NTI3003122033.base = NTI3003122036;
var NNI3003122036 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122033, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122033, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122029, name: "value", sons: null}]};
NTI3003122036.node = NNI3003122036;
NTI3003122057.base = NTI3003122036;
var NNI3003122065 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122057, name: "Field2", sons: null}]};
NTI3003122065.node = NNI3003122065;
NTI3087008199.base = NTI33554439;
NTI3019899213.base = NTI33554439;
NTI3087008193.base = NTI33554439;
NTI3087007767.base = NTI3087007751;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI3087007766 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI3087007767, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1191183280, name: "maxLoopIterations", sons: null}]};
NTI3087007766.node = NNI3087007766;
NTI3087007765.base = NTI3087007766;
var NNI3003121927 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007765, name: "val", sons: null}]};
NTI3003121927.node = NNI3003121927;
var NNI3003121782 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}]};
NTI3003121782.node = NNI3003121782;
NTI3003121931.base = NTI3003121934;
var NNI3003121934 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121931, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121931, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121927, name: "value", sons: null}]};
NTI3003121934.node = NNI3003121934;
NTI3003121955.base = NTI3003121934;
var NNI3003121963 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121955, name: "Field2", sons: null}]};
NTI3003121963.node = NNI3003121963;
NTI3003185988.base = NTI3087007751;
var NNI3003166612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3003166612.node = NNI3003166612;
var NNI3003122104 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122104.node = NNI3003122104;
NTI3003122108.base = NTI3003122111;
var NNI3003122111 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122108, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122108, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122104, name: "value", sons: null}]};
NTI3003122111.node = NNI3003122111;
NTI3003122132.base = NTI3003122111;
var NNI3003122140 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122132, name: "Field2", sons: null}]};
NTI3003122140.node = NNI3003122140;
NTI2013268507.base = NTI33554439;
NTI3087008383.base = NTI33554439;
var NNI3003121863 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null}]};
NTI3003121863.node = NNI3003121863;
NTI3003121867.base = NTI3003121870;
var NNI3003121870 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121867, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121867, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121863, name: "value", sons: null}]};
NTI3003121870.node = NNI3003121870;
NTI3003121891.base = NTI3003121870;
var NNI3003121899 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121891, name: "Field2", sons: null}]};
NTI3003121899.node = NNI3003121899;
var NNI3003122175 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087008904, name: "val", sons: null}]};
NTI3003122175.node = NNI3003122175;
NTI3003122179.base = NTI3003122182;
var NNI3003122182 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122179, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122179, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122175, name: "value", sons: null}]};
NTI3003122182.node = NNI3003122182;
NTI3003122203.base = NTI3003122182;
var NNI3003122211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122203, name: "Field2", sons: null}]};
NTI3003122211.node = NNI3003122211;
NTI3087008653.base = NTI33554439;
var NNI3087008718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008718.node = NNI3087008718;
NTI3087008715.base = NTI3087008718;
var NNI3087008712 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008715, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008712.node = NNI3087008712;
var NNI2986344567 = {kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null};
NTI2986344567.node = NNI2986344567;
var NNI3087008730 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008730.node = NNI3087008730;
var NNI3003186895 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003186895.node = NNI3003186895;
NTI3087008709.base = NTI3087008712;
var NNI3003122248 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087008709, name: "val", sons: null}]};
NTI3003122248.node = NNI3003122248;
NTI3003122252.base = NTI3003122255;
var NNI3003122255 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122252, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122252, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122248, name: "value", sons: null}]};
NTI3003122255.node = NNI3003122255;
NTI3003122276.base = NTI3003122255;
var NNI3003122284 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122276, name: "Field2", sons: null}]};
NTI3003122284.node = NNI3003122284;
var NNI3003122314 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007754, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null}]};
NTI3003122314.node = NNI3003122314;
var NNI3003122370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003122370.node = NNI3003122370;
NTI3003122318.base = NTI3003122321;
var NNI3003122321 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122318, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122318, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122314, name: "value", sons: null}]};
NTI3003122321.node = NNI3003122321;
NTI3003122342.base = NTI3003122321;
var NNI3003122350 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122342, name: "Field2", sons: null}]};
NTI3003122350.node = NNI3003122350;
var NNI3003122389 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007754, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122389.node = NNI3003122389;
NTI3003122393.base = NTI3003122396;
var NNI3003122396 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122393, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122393, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122389, name: "value", sons: null}]};
NTI3003122396.node = NNI3003122396;
NTI3003122417.base = NTI3003122396;
var NNI3003122425 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122417, name: "Field2", sons: null}]};
NTI3003122425.node = NNI3003122425;
NTI3137340402.base = NTI3087007751;
var NNI3003122455 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007765, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122455.node = NNI3003122455;
var NNI3003122511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}]};
NTI3003122511.node = NNI3003122511;
NTI3003122459.base = NTI3003122462;
var NNI3003122462 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122459, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122459, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122455, name: "value", sons: null}]};
NTI3003122462.node = NNI3003122462;
NTI3003122483.base = NTI3003122462;
var NNI3003122491 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122483, name: "Field2", sons: null}]};
NTI3003122491.node = NNI3003122491;
NTI3003146250.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
var NNI2113929221 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2113929221.node = NNI2113929221;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2516582403 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2516582403, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2516582403, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2516582403, name: "Bold", len: 0, sons: null}}};
NTI2516582403.node = NNI2516582403;
NTI3087007783.base = NTI2516582403;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI3087007778 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007843, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
var NNI3087007824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007824.node = NNI3087007824;
NTI3087007821.base = NTI3087007824;
var NNI3087007818 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007821, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007818.node = NNI3087007818;
var NNI3087007775 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007818, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}]};
NTI3087007775.node = NNI3087007775;
var NNI2130706720 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2130706720.node = NNI2130706720;
NTI3087008997.base = NTI3087007773;
NTI3120562359.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3120563270.base = NTI33554449;
NTI3120563334.base = NTI2516582403;
NTI3120563236.base = NTI33554449;
var NNI3120563706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563706.node = NNI3120563706;
var NNI3120563809 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563809.node = NNI3120563809;
NTI3120562388.base = NTI33554449;
var NNI3087007840 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007840.node = NNI3087007840;
NTI3087007837.base = NTI3087007840;
var NNI3087007834 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007837, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007834.node = NNI3087007834;
var NNI3087007826 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2046820355, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI3087007834, name: "replacements", sons: null}, 
{kind: 1, offset: "measureText", len: 0, typ: NTI3087007842, name: "measureText", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI3087007826.node = NNI3087007826;
NTI3087007776.base = NTI3087007826;
var NNI3003122530 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007776, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007775, name: "val", sons: null}]};
NTI3003122530.node = NNI3003122530;
var NNI3003122586 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}]};
NTI3003122586.node = NNI3003122586;
NTI3003122534.base = NTI3003122537;
var NNI3003122537 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122534, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122534, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122530, name: "value", sons: null}]};
NTI3003122537.node = NNI3003122537;
NTI3003122558.base = NTI3003122537;
var NNI3003122566 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122558, name: "Field2", sons: null}]};
NTI3003122566.node = NNI3003122566;
NTI3003150847.base = NTI33554439;
var NNI3003121995 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI3003121995.node = NNI3003121995;
NTI3003121992.base = NTI3003121995;
var NNI3003121989 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121992, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121989.node = NNI3003121989;
NTI3003122009.base = NTI3003122012;
var NNI3003122006 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003122009, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003122006.node = NNI3003122006;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
NTI2952792127.base = NTI2986344452;
var NNI3003121799 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007776, name: "val", sons: null}]};
NTI3003121799.node = NNI3003121799;
NTI3003121803.base = NTI3003121806;
var NNI3003121806 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121803, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121803, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121799, name: "value", sons: null}]};
NTI3003121806.node = NNI3003121806;
NTI3003121827.base = NTI3003121806;
var NNI3003121835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121827, name: "Field2", sons: null}]};
NTI3003121835.node = NNI3003121835;
var NNI2952791546 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706720, name: "Field1", sons: null}]};
NTI2952791546.node = NNI2952791546;
var NNI2952791367 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2952791367, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952791367, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2952791367, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2952791367, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2952791367, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2952791367.node = NNI2952791367;
var NNI2952791370 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2952791367, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2986344452, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2952791370.node = NNI2952791370;
NTI2952791368.base = NTI2952791370;
NTI2952794811.base = NTI2952791368;
var NNI2952791517 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344452, name: "Field2", sons: null}]};
NTI2952791517.node = NNI2952791517;
var NNI3003121726 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null}]};
NTI3003121726.node = NNI3003121726;
NTI3003121730.base = NTI3003121733;
var NNI3003121733 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121730, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121730, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121726, name: "value", sons: null}]};
NTI3003121733.node = NNI3003121733;
NTI3003121754.base = NTI3003121733;
var NNI3003121762 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121754, name: "Field2", sons: null}]};
NTI3003121762.node = NNI3003121762;
var NNI2986345785 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI2986345785.node = NNI2986345785;
NTI2818572428.base = NTI33554449;
var NNI2952791523 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2952791523, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952791523, name: "AstCompletion", len: 0, sons: null}}};
NTI2952791523.node = NNI2952791523;
var NNI2952791524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2952791523, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2986344451, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2952791524.node = NNI2952791524;
NTI3170893842.base = NTI2952791524;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2952794203.base = NTI2952791524;
var NNI2952795105 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2952795105.node = NNI2952795105;
var NNI2952795110 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952795105, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2952795110.node = NNI2952795110;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2181038088 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2181038088.node = NNI2181038088;
NTI2181038088.base = NTI33555171;
NTI2181038084.base = NTI2181038088;
var NNI2164260874 = {kind: 1, offset: "val", len: 0, typ: NTI2181038084, name: "val", sons: null};
NTI2164260874.node = NNI2164260874;
var NNI2164260868 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2164260874, name: "workspace", sons: null}]};
NTI2164260868.node = NNI2164260868;
NTI2164260868.base = NTI33555171;
NTI2818572427.base = NTI2164260868;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2415919121 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2415919121, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2415919121, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2415919121, name: "browser", len: 0, sons: null}}};
NTI2415919121.node = NNI2415919121;
var NNI2768240658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240659, name: "Field1", sons: null}]};
NTI2768240658.node = NNI2768240658;
NTI2768240657.base = NTI2768240658;
var NNI2768240651 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240657, name: "handlers", sons: null};
NTI2768240651.node = NNI2768240651;
var NNI2768240683 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240684, name: "Field1", sons: null}]};
NTI2768240683.node = NNI2768240683;
NTI2768240682.base = NTI2768240683;
var NNI2768240676 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240682, name: "handlers", sons: null};
NTI2768240676.node = NNI2768240676;
var NNI2768240705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240706, name: "Field1", sons: null}]};
NTI2768240705.node = NNI2768240705;
NTI2768240704.base = NTI2768240705;
var NNI2768240698 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240704, name: "handlers", sons: null};
NTI2768240698.node = NNI2768240698;
var NNI2768240722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240723, name: "Field1", sons: null}]};
NTI2768240722.node = NNI2768240722;
NTI2768240721.base = NTI2768240722;
var NNI2768240715 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240721, name: "handlers", sons: null};
NTI2768240715.node = NNI2768240715;
var NNI2382364689 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2382364690, name: "Field1", sons: null}]};
NTI2382364689.node = NNI2382364689;
NTI2382364688.base = NTI2382364689;
var NNI2382364682 = {kind: 1, offset: "handlers", len: 0, typ: NTI2382364688, name: "handlers", sons: null};
NTI2382364682.node = NNI2382364682;
var NNI2768240742 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240743, name: "Field1", sons: null}]};
NTI2768240742.node = NNI2768240742;
NTI2768240741.base = NTI2768240742;
var NNI2768240735 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240741, name: "handlers", sons: null};
NTI2768240735.node = NNI2768240735;
var NNI2785017865 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2785017877, name: "getTextBounds", sons: null};
NTI2785017865.node = NNI2785017865;
var NNI2768240644 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2768240651, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2768240651, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2768240651, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2768240676, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2768240676, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2768240698, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2768240715, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2382364682, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2768240735, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2785017865, name: "layoutOptions", sons: null}]};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
var NNI2785017867 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2130706720, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706720, name: "Field1", sons: null}]};
NTI2785017867.node = NNI2785017867;
var NNI2785017866 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2785017867, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2130706720, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2113929221, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2785017866.node = NNI2785017866;
NTI2785017866.base = NTI33555171;
NTI2785017859.base = NTI2785017866;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2080374790 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2080374790.node = NNI2080374790;
NTI2080374789.base = NTI2080374790;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2080374789, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2181038087.base = NTI2181038084;
var NNI2181038086 = {kind: 1, offset: "folders", len: 0, typ: NTI2181038087, name: "folders", sons: null};
NTI2181038086.node = NNI2181038086;
NTI2181038083.base = NTI2181038086;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463428.base = NTI33555171;
NTI2751463427.base = NTI2751463428;
NTI2164260867.base = NTI2164260868;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2080374797 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2080374789, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2080374798, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2080374799, name: "handleInput", sons: null}]};
NTI2080374797.node = NNI2080374797;
NTI2080374796.base = NTI2080374797;
var NNI2382364676 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2415919107, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2382364682, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2382364676.node = NNI2382364676;
NTI2382364676.base = NTI33555171;
NTI2382364675.base = NTI2382364676;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2164260867, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2382364675, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2516582438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2516582438.node = NNI2516582438;
NTI2516582435.base = NTI2516582438;
var NNI2516582432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582435, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582432.node = NNI2516582432;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582423.base = NTI2516582403;
var NNI2516582404 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2516582412, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2516582412, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2516582423, name: "fontStyle", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI2516582453 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2516582404, name: "Field2", sons: null}]};
NTI2516582453.node = NNI2516582453;
NTI2516582450.base = NTI2516582453;
var NNI2516582447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582450, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582447.node = NNI2516582447;
var NNI2516582424 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2516582432, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2516582447, name: "tokenColors", sons: null}]};
NTI2516582424.node = NNI2516582424;
NTI2516582405.base = NTI2516582424;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919107, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2382364675, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2449473540 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2415919107, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2382364682, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2449473540.node = NNI2449473540;
NTI2449473540.base = NTI33555171;
NTI2449473539.base = NTI2449473540;
NTI1291845718.base = NTI2449473539;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2382364675;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2415919121, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2768240643, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2466250783, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2466250783, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2466250783, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2785017859, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2181038083, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2751463427, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2516582405, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2382364675, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2080374796, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2415919123;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2415919119 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2415919119, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2415919119, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2415919119, name: "relative", len: 0, sons: null}}};
NTI2415919119.node = NNI2415919119;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2415919119, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572510 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2415919123, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2080374796, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2382364676;
var NNI2986344588 = {kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null};
NTI2986344588.node = NNI2986344588;
var NNI2952792510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI2952792510.node = NNI2952792510;
NTI2818572509.base = NTI2818572510;
NTI2952791514.base = NTI2952791517;
var NNI2952791511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952791514, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2952791511.node = NNI2952791511;
NTI2952791519.base = NTI2952791522;
NTI2952791520.base = NTI2952791368;
NTI2952791521.base = NTI2952791368;
var NNI2952791498 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008712, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2986344452, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2952791511, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2952791519, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2952791520, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2952791521, name: "redoOps", sons: null}]};
NTI2952791498.node = NNI2952791498;
NTI2952791498.base = NTI2164260868;
NTI2952791497.base = NTI2952791498;
NTI3170893829.base = NTI2952791524;
var NNI3170893832 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI3170893832.node = NNI3170893832;
NTI3170893831.base = NTI3170893832;
var NNI3170893828 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2952791497, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3170893829, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3170893830, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3170893831, name: "lastItems", sons: null}]};
NTI3170893828.node = NNI3170893828;
NTI3170893828.base = NTI2449473540;
NTI1979711564.base = NTI33554449;
NTI3170893834.base = NTI2952791524;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3087007967 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007967.node = NNI3087007967;
var NNI3087007896 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007896.node = NNI3087007896;
var NNI2952800824 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2952800824.node = NNI2952800824;
var NNI3003152662 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI3003152662.node = NNI3003152662;
var NNI3003152715 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}]};
NTI3003152715.node = NNI3003152715;
var NNI3003152768 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003152768.node = NNI3003152768;
var NNI3003152821 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}]};
NTI3003152821.node = NNI3003152821;
var NNI3003152874 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007748, name: "Field1", sons: null}]};
NTI3003152874.node = NNI3003152874;
var NNI3003152921 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003152921.node = NNI3003152921;
var NNI3003152968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087008904, name: "Field1", sons: null}]};
NTI3003152968.node = NNI3003152968;
var NNI3003153062 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087008709, name: "Field1", sons: null}]};
NTI3003153062.node = NNI3003153062;
var NNI3003153195 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007754, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007748, name: "Field1", sons: null}]};
NTI3003153195.node = NNI3003153195;
var NNI3003153242 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007754, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003153242.node = NNI3003153242;
var NNI3003153289 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007765, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003153289.node = NNI3003153289;
var NNI3003153336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007776, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007775, name: "Field1", sons: null}]};
NTI3003153336.node = NNI3003153336;
var NNI2231369732 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2231369732.node = NNI2231369732;
NTI2231369732.base = NTI2181038088;
NTI2181038089.base = NTI33554449;
NTI2181038090.base = NTI33554449;
var NNI2181038085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2181038089, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2181038090, name: "folders", sons: null}]};
NTI2181038085.node = NNI2181038085;
var NNI2365587459 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "done", len: 0, typ: NTI33554466, name: "done", sons: null}, 
{kind: 1, offset: "listing", len: 0, typ: NTI2181038085, name: "listing", sons: null}]};
NTI2365587459.node = NNI2365587459;
var NNI2365587475 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2365587459, name: "Field2", sons: null}]};
NTI2365587475.node = NNI2365587475;
NTI2365587472.base = NTI2365587475;
var NNI2365587469 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2365587472, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2365587469.node = NNI2365587469;
var NNI2365587461 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2365587469, name: "cachedDirectoryListings", sons: null}]};
NTI2365587461.node = NNI2365587461;
NTI2365587461.base = NTI2181038088;
var NNI2248146962 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2181038085, name: "Field2", sons: null}]};
NTI2248146962.node = NNI2248146962;
NTI2248146959.base = NTI2248146962;
var NNI2248146956 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2248146959, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2248146956.node = NNI2248146956;
var NNI2248146948 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2248146956, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2248146948.node = NNI2248146948;
NTI2248146948.base = NTI2181038088;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2080375506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080375506.node = NNI2080375506;
var NNI3221225480 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3221225480.node = NNI3221225480;
NTI3221225480.base = NTI33555171;
NTI3221225475.base = NTI3221225480;
NTI3221225495.base = NTI3221225475;
var NNI3221225500 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI3221225500.node = NNI3221225500;
NTI3221225499.base = NTI3221225500;
var NNI2499805188 = {kind: 1, offset: "canceled", len: 0, typ: NTI33554466, name: "canceled", sons: null};
NTI2499805188.node = NNI2499805188;
NTI2499805187.base = NTI2499805188;
var NNI3221225494 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3221225495, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3221225496, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3221225497, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3221225498, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3221225501, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3221225503, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3221225506, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3221225499, name: "lastItems", sons: null}, 
{kind: 1, offset: "cancellationToken", len: 0, typ: NTI2499805187, name: "cancellationToken", sons: null}]};
NTI3221225494.node = NNI3221225494;
NTI3221225494.base = NTI2449473540;
NTI3221225512.base = NTI3221225475;
NTI3221225479.base = NTI3221225494;
var NNI3221225686 = {kind: 1, offset: "val", len: 0, typ: NTI3221225479, name: "val", sons: null};
NTI3221225686.node = NNI3221225686;
var NNI1291848450 = {kind: 1, offset: "val", len: 0, typ: NTI2449473539, name: "val", sons: null};
NTI1291848450.node = NNI1291848450;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2818584229 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818584229.node = NNI2818584229;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848505 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848505.node = NNI1291848505;
NTI1291848505.base = NTI3221225480;
var NNI1291848507 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2164260874, name: "workspaceFolder", sons: null}]};
NTI1291848507.node = NNI1291848507;
NTI1291848507.base = NTI3221225480;
NTI1291854648.base = NTI2415919107;
var NNI1291848318 = {kind: 1, offset: "val", len: 0, typ: NTI2382364675, name: "val", sons: null};
NTI1291848318.node = NNI1291848318;
NTI2952791535.base = NTI2986344452;
var NNI2952791533 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952791535, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2952791533.node = NNI2952791533;
NTI2952791542.base = NTI2952791524;
var NNI2952791544 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2952791544.node = NNI2952791544;
NTI2952791543.base = NTI2952791544;
NTI2952791545.base = NTI2952791546;
var NNI2952791547 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791547.node = NNI2952791547;
var NNI2952791548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791548.node = NNI2952791548;
var NNI2952791549 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791549.node = NNI2952791549;
var NNI2952791550 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791550.node = NNI2952791550;
var NNI2952791527 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2952791497, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2986344452, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2952791533, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2952791533, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2986344567, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2986344452, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2080374796, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2952791542, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2952791543, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2952791545, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2952791547, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2952791548, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2952791549, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2952791550, name: "lastCommand", sons: null}]};
NTI2952791527.node = NNI2952791527;
NTI2952791527.base = NTI2382364676;
var NNI1291856007 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856007.node = NNI1291856007;
var NNI1291856008 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856008.node = NNI1291856008;
var NNI1291856006 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291856007, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291856008, name: "Field1", sons: null}]};
NTI1291856006.node = NNI1291856006;
NTI1291856014.base = NTI1291856006;
NTI1291856001.base = NTI2415919115;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3321888780.base = NTI2113929221;
var NNI3321888793 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3321888794, name: "Field1", sons: null}]};
NTI3321888793.node = NNI3321888793;
NTI3321888792.base = NTI3321888793;
var NNI3321888786 = {kind: 1, offset: "handlers", len: 0, typ: NTI3321888792, name: "handlers", sons: null};
NTI3321888786.node = NNI3321888786;
var NNI3321888810 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3321888810.node = NNI3321888810;
var NNI3321888817 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3321888814, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3321888814, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3321888810, name: "value", sons: null}]};
NTI3321888817.node = NNI3321888817;
NTI3321888814.base = NTI3321888817;
var NNI3321888828 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3321888814, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3321888814, name: "tail", sons: null}]};
NTI3321888828.node = NNI3321888828;
NTI3321888838.base = NTI3321888817;
var NNI3321888846 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3321888838, name: "Field2", sons: null}]};
NTI3321888846.node = NNI3321888846;
NTI3321888843.base = NTI3321888846;
var NNI3321888855 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3321888843, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3321888855.node = NNI3321888855;
var NNI3321888866 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3321888866.node = NNI3321888866;
NTI3321888863.base = NTI3321888866;
var NNI3321888860 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3321888863, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3321888860.node = NNI3321888860;
var NNI3321888805 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3321888828, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3321888855, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3321888860, name: "removedKeys", sons: null}]};
NTI3321888805.node = NNI3321888805;
NTI3321888804.base = NTI3321888805;
NTI3321888869.base = NTI3321888870;
var NNI1275068561 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1275068432, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1275068432, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1275068561.node = NNI1275068561;
NTI1275068561.base = NTI33555171;
NTI1275068448.base = NTI1275068561;
var NNI3321888779 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3321888780, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3321888786, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3321888804, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3321888869, name: "domUpdates", sons: null}, 
{kind: 1, offset: "currentEvent", len: 0, typ: NTI1275068448, name: "currentEvent", sons: null}]};
NTI3321888779.node = NNI3321888779;
NTI3321888779.base = NTI2768240644;
NTI2432696334.base = NTI2080374796;
NTI1291849419.base = NTI2382364676;
NTI1291849425.base = NTI1291849419;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850590 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850590.node = NNI1291850590;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2751463428;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2516582915.base = NTI2516582403;
var NNI2516584388 = {kind: 1, offset: "val", len: 0, typ: NTI2516582405, name: "val", sons: null};
NTI2516584388.node = NNI2516584388;
NTI2785017871.base = NTI2785017859;
var NNI2785017870 = {kind: 1, offset: "children", len: 0, typ: NTI2785017871, name: "children", sons: null};
NTI2785017870.node = NNI2785017870;
NTI2785017870.base = NTI2785017866;
NTI2785017869.base = NTI2785017859;
var NNI2785017868 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2785017869, name: "children", sons: null}]};
NTI2785017868.node = NNI2785017868;
NTI2785017868.base = NTI2785017866;
NTI2785017873.base = NTI2785017859;
var NNI2785017872 = {kind: 1, offset: "children", len: 0, typ: NTI2785017873, name: "children", sons: null};
NTI2785017872.node = NNI2785017872;
NTI2785017872.base = NTI2785017866;
NTI2785017875.base = NTI2785017859;
var NNI2785017874 = {kind: 1, offset: "children", len: 0, typ: NTI2785017875, name: "children", sons: null};
NTI2785017874.node = NNI2785017874;
NTI2785017874.base = NTI2785017866;
var NNI2785017876 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2516582404, name: "style", sons: null}]};
NTI2785017876.node = NNI2785017876;
NTI2785017876.base = NTI2785017866;
var NNI2818578194 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578194.node = NNI2818578194;
NTI2952791526.base = NTI2952791527;
var NNI2952797000 = {kind: 1, offset: "val", len: 0, typ: NTI2952791526, name: "val", sons: null};
NTI2952797000.node = NNI2952797000;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI3019898950 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019898936, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019898936, name: "tail", sons: null}]};
NTI3019898950.node = NNI3019898950;
var NNI3019899029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019899015, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019899015, name: "tail", sons: null}]};
NTI3019899029.node = NNI3019899029;
var NNI3019899096 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019899082, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019899082, name: "tail", sons: null}]};
NTI3019899096.node = NNI3019899096;
var NNI3003121744 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121730, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121730, name: "tail", sons: null}]};
NTI3003121744.node = NNI3003121744;
var NNI3003121881 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121867, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121867, name: "tail", sons: null}]};
NTI3003121881.node = NNI3003121881;
var NNI3003121817 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121803, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121803, name: "tail", sons: null}]};
NTI3003121817.node = NNI3003121817;
var NNI3003121945 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121931, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121931, name: "tail", sons: null}]};
NTI3003121945.node = NNI3003121945;
var NNI3003122047 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122033, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122033, name: "tail", sons: null}]};
NTI3003122047.node = NNI3003122047;
var NNI3003122122 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122108, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122108, name: "tail", sons: null}]};
NTI3003122122.node = NNI3003122122;
var NNI3003122332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122318, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122318, name: "tail", sons: null}]};
NTI3003122332.node = NNI3003122332;
var NNI3003122407 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122393, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122393, name: "tail", sons: null}]};
NTI3003122407.node = NNI3003122407;
var NNI3003122193 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122179, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122179, name: "tail", sons: null}]};
NTI3003122193.node = NNI3003122193;
var NNI3003122266 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122252, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122252, name: "tail", sons: null}]};
NTI3003122266.node = NNI3003122266;
var NNI3003122473 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122459, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122459, name: "tail", sons: null}]};
NTI3003122473.node = NNI3003122473;
var NNI3003122548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122534, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122534, name: "tail", sons: null}]};
NTI3003122548.node = NNI3003122548;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2432696324 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2432696324.node = NNI2432696324;
NTI2432696324.base = NTI2382364676;
NTI2382364755.base = NTI2080374796;
var NNI2818584754 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818584754.node = NNI2818584754;
var NNI2818584679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2415919113, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818584679.node = NNI2818584679;
NTI3170894057.base = NTI2080374796;
var NNI3221225617 = {kind: 1, offset: "val", len: 0, typ: NTI3221225475, name: "val", sons: null};
NTI3221225617.node = NNI3221225617;
var NNI3170893968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952791524, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3170893968.node = NNI3170893968;
var NNI2785018260 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2113929221, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785018260.node = NNI2785018260;
NTI1291847200.base = NTI2113929221;
var NNI2097152003 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2097152003, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2097152003, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2097152003, name: "Percent", len: 0, sons: null}}};
NTI2097152003.node = NNI2097152003;
var NNI2097152004 = {kind: 3, offset: "kind", len: 3, typ: NTI2097152003, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2097152004.node = NNI2097152004;
var NNI2097152063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2113929221, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2097152063.node = NNI2097152063;
NTI1291846989.base = NTI2113929221;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3288334340 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3288334340.node = NNI3288334340;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_2986346468 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet58 = setConstr([48, 57]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(4);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(5);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(6);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(4);
var ConstSet76 = setConstr(4);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(6);
var ConstSet85 = setConstr(6);
var ConstSet86 = setConstr(0);
var ConstSet87 = setConstr(1);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(3);
var ConstSet92 = setConstr(3);
var ConstSet93 = setConstr(2);
var ConstSet94 = setConstr(2);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(5);
var ConstSet98 = setConstr(5);
var ConstSet99 = setConstr(6);
var ConstSet100 = setConstr(6);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(1);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(1);
var ConstSet107 = setConstr(0);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(0);
var ConstSet110 = setConstr(4);
var ConstSet111 = setConstr(4);
var ConstSet112 = setConstr(5);
var ConstSet113 = setConstr(4);
var ConstSet114 = setConstr(4);
var ConstSet115 = setConstr(3);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(5);
var ConstSet118 = setConstr(4);
var ConstSet119 = setConstr(4);
var ConstSet120 = setConstr(5);
var ConstSet121 = setConstr(6);
var ConstSet122 = setConstr(5);
var ConstSet123 = setConstr(5);
var ConstSet124 = setConstr(3);
var ConstSet125 = setConstr(2);
var ConstSet126 = setConstr(5);
var ConstSet127 = setConstr(5);
var ConstSet128 = setConstr(6);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr(0);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(3);
var ConstSet139 = setConstr(3);
var ConstSet140 = setConstr(4);
var ConstSet141 = setConstr(5);
var ConstSet142 = setConstr(4);
var ConstSet143 = setConstr(10, 9, 7);
var ConstSet144 = setConstr(8);
var ConstSet145 = setConstr(1);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(0);
var ConstSet148 = setConstr(0);
var ConstSet149 = setConstr(0);
var ConstSet150 = setConstr();
var ConstSet151 = setConstr(0);
var ConstSet152 = setConstr(0);
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(1);
var ConstSet156 = setConstr();
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(3);
var ConstSet161 = setConstr(3);
var ConstSet162 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(1);
var ConstSet165 = setConstr(1);
var ConstSet166 = setConstr(0);
var ConstSet167 = setConstr(0);
var ConstSet168 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet169 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet170 = setConstr([48, 57]);
var ConstSet171 = setConstr([48, 57]);
var ConstSet172 = setConstr(101, 69);
var ConstSet173 = setConstr([48, 57]);
var ConstSet174 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet168[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet169[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet170[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet171[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet172[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet173[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet174[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet175 = setConstr(0);
var ConstSet176 = setConstr(0);
var ConstSet177 = setConstr(0);
var ConstSet178 = setConstr(0);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(4);
var ConstSet181 = setConstr(4);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(4);
var ConstSet186 = setConstr(0);
var ConstSet187 = setConstr(13, 10);
var ConstSet188 = setConstr(0);
var ConstSet189 = setConstr(1);
var ConstSet190 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet191 = setConstr(0);
var ConstSet192 = setConstr(13, 10);
var ConstSet193 = setConstr([48, 57]);
var ConstSet194 = setConstr([48, 57]);
var ConstSet195 = setConstr(69, 101);
var ConstSet196 = setConstr(43, 45);
var ConstSet197 = setConstr([48, 57]);
var ConstSet198 = setConstr(46, 101, 69);
var ConstSet199 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet200 = setConstr([97, 122], [65, 90], 95);
var ConstSet201 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet202 = setConstr(4);
var ConstSet203 = setConstr([48, 57]);
var ConstSet204 = setConstr(0, 125);
var ConstSet205 = setConstr([48, 57]);
var ConstSet206 = setConstr([65, 90]);
var ConstSet207 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet208 = setConstr(6);
var ConstSet209 = setConstr(46, 44);
var ConstSet210 = setConstr([65, 90]);
var ConstSet211 = setConstr([97, 122]);
var ConstSet212 = setConstr(4);
var ConstSet213 = setConstr(13, 10);
    var names_1291854604 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet214 = setConstr(4);
var ConstSet215 = setConstr(2);
var ConstSet216 = setConstr(3);
var ConstSet217 = setConstr(1);
var ConstSet218 = setConstr(5);
var ConstSet219 = setConstr(5);
var ConstSet220 = setConstr(6);
var ConstSet221 = setConstr(6);
    var names_1291854738 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet222 = setConstr(4);
var ConstSet223 = setConstr(2);
var ConstSet224 = setConstr(3);
var ConstSet225 = setConstr(1);
var ConstSet226 = setConstr(5);
var ConstSet227 = setConstr(6);
var ConstSet228 = setConstr(5);
var ConstSet229 = setConstr(5);
var ConstSet230 = setConstr(6);
var ConstSet231 = setConstr(5);
var ConstSet232 = setConstr(4);
var ConstSet233 = setConstr(4);
var ConstSet234 = setConstr(2);
var ConstSet235 = setConstr(3);
var ConstSet236 = setConstr(1);
var ConstSet237 = setConstr(2);
var ConstSet238 = setConstr(3);
var ConstSet239 = setConstr(1);
var ConstSet240 = setConstr(6);
var ConstSet241 = setConstr(6);
var ConstSet242 = setConstr(6);
var ConstSet243 = setConstr(4);
var ConstSet244 = setConstr(4);
var ConstSet245 = setConstr(2);
var ConstSet246 = setConstr(2);
var ConstSet247 = setConstr(3);
var ConstSet248 = setConstr(3);
var ConstSet249 = setConstr(1);
var ConstSet250 = setConstr(1);
var ConstSet251 = setConstr(6);
var ConstSet252 = setConstr(6);
var ConstSet253 = setConstr(5);
var ConstSet254 = setConstr(5);
var ConstSet255 = setConstr(5);
var ConstSet256 = setConstr(5);
var ConstSet257 = setConstr(5);
var ConstSet258 = setConstr(1);
var ConstSet259 = setConstr(6);
var ConstSet260 = setConstr(5);
var ConstSet261 = setConstr(2);
var ConstSet262 = setConstr(2);
var ConstSet263 = setConstr(2);
var ConstSet264 = setConstr(6);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(47, 47);
var ConstSet271 = setConstr(47, 47);
var ConstSet272 = setConstr(47, 47);
var ConstSet273 = setConstr(47, 47);
var ConstSet274 = setConstr(47, 47);
var ConstSet275 = setConstr(47, 47);
var ConstSet276 = setConstr(47, 47);
var ConstSet277 = setConstr(47, 47);
var ConstSet278 = setConstr(2, 3);
var ConstSet279 = setConstr(2);
var ConstSet280 = setConstr(0);
var ConstSet281 = setConstr(1);
var ConstSet282 = setConstr(1);
var ConstSet283 = setConstr();
var ConstSet284 = setConstr();
var ConstSet285 = setConstr();
var ConstSet286 = setConstr();
var ConstSet287 = setConstr();
var ConstSet288 = setConstr([65, 90]);
var ConstSet289 = setConstr(120, 88);
var ConstSet290 = setConstr(0);
    var names_1291854223 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet291 = setConstr(1);
var ConstSet292 = setConstr(1);
var ConstSet293 = setConstr(1);
var ConstSet294 = setConstr(4, 0);
var ConstSet295 = setConstr(4, 0);
var ConstSet296 = setConstr(4);
var ConstSet297 = setConstr(4);
var ConstSet298 = setConstr(4);
var ConstSet299 = setConstr(2, 3);
var ConstSet300 = setConstr(2, 3);
var ConstSet301 = setConstr(3);
var ConstSet302 = setConstr(2);
var ConstSet303 = setConstr(6);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr(4);
var ConstSet306 = setConstr(2, 3);
var ConstSet307 = setConstr(2, 3);
var ConstSet308 = setConstr(3);
var ConstSet309 = setConstr(2);
var ConstSet310 = setConstr(2);
var ConstSet311 = setConstr(6);
var ConstSet312 = setConstr(5);
var ConstSet313 = setConstr(4);
var ConstSet314 = setConstr(6);
var ConstSet315 = setConstr(4);
var ConstSet316 = setConstr(6);
var ConstSet317 = setConstr(4);
var ConstSet318 = setConstr();
var ConstSet319 = setConstr(4);
var ConstSet320 = setConstr(6);
var ConstSet321 = setConstr([97, 122], [65, 90], [48, 57], 95);
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet322 = setConstr(10, 13, 32, 61);
var ConstSet323 = setConstr(10, 13, 32);
          var decodeTable_2281701861 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet324 = setConstr(6);
var ConstSet325 = setConstr(6);
var ConstSet326 = setConstr(6);
var ConstSet327 = setConstr(4);
var ConstSet328 = setConstr(4);
var ConstSet329 = setConstr(6);
var ConstSet330 = setConstr(0);
var ConstSet331 = setConstr(0);
var ConstSet332 = setConstr(1);
var ConstSet333 = setConstr(2);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function toUnix_1191183338(t_1191183339) {
  var result_1191183340 = 0;

    result_1191183340 = t_1191183339.seconds;

  return result_1191183340;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820513 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820513 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820513;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820513 = addInt(i_2046820513, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820519 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820519 <= 1)) break Label3;
            i_2063597633 = res_2046820519;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820517 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820517 < 64)) break Label6;
                    b_2063597638 = i_2046820517;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820517 = addInt(i_2046820517, 1);
                  }
              };
            };
            res_2046820519 = addInt(res_2046820519, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820497 = toUnix_1191183338(getTime_1191183389());
var seed_2046820498 = [initRand_2063597797(t_2046820497)];
var incr_2046820503 = [rand_2063597668(seed_2046820498[0], 2147483647)];
var fuzz_2046820508 = rand_2063597668(seed_2046820498[0], 2147483647);

function idNone_2046820599() {
  var result_2046820600 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820600 = nimCopy(result_2046820600, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820600;

}
var null_2046820612 = idNone_2046820599();
var cb64_2281701380 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2281701381 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2348810262 = [initTable_1795162117(32)];

function new_2332033050() {
  var result_2332033053 = null;

  BeforeRet: {
    var r_2332033055 = null;
    r_2332033055 = ({m_type: NTI2348810244});
    result_2332033053 = r_2332033055;
    break BeforeRet;
  };

  return result_2332033053;

}
var fs_2332033077 = new_2332033050();
var nextEditorId_2415919418 = [0];
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2684355216 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2684355216 < L_855639328)) break Label3;
            i_855639333 = i_2684355216;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2684355216 = addInt(i_2684355216, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818583696 = 0;
      colontmp__2818583696 = subInt(count_855639134, 1);
      var res_2818583697 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818583697 <= colontmp__2818583696)) break Label3;
            i_855639140 = res_2818583697;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818583697 = addInt(res_2818583697, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849221(t_1291849224, key_1291849225, hc_1291849226, hc_1291849226_Idx) {
  var result_1291849227 = 0;

  BeforeRet: {
    hc_1291849226[hc_1291849226_Idx] = hash_1325400491(key_1291849225);
    if ((hc_1291849226[hc_1291849226_Idx] == 0)) {
    hc_1291849226[hc_1291849226_Idx] = 314159265;
    }
    
    if (((t_1291849224.data).length == 0)) {
    result_1291849227 = -1;
    break BeforeRet;
    }
    
    var h_1291849279 = (hc_1291849226[hc_1291849226_Idx] & (t_1291849224.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0)) break Label2;
          if (((t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0 == hc_1291849226[hc_1291849226_Idx]) && eqStrings(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field1, key_1291849225))) {
          result_1291849227 = h_1291849279;
          break BeforeRet;
          }
          
          h_1291849279 = nextTry_1308622883(h_1291849279, (t_1291849224.data).length - 1);
        }
    };
    result_1291849227 = subInt(-1, h_1291849279);
  };

  return result_1291849227;

}

function hasKey_1291849214(t_1291849217, key_1291849218) {
  var result_1291849219 = false;

    var hc_1291849220 = [0];
    result_1291849219 = (0 <= rawGet_1291849221(t_1291849217, key_1291849218, hc_1291849220, 0));

  return result_1291849219;

}

function contains_1291849208(t_1291849211, key_1291849212) {
  var result_1291849213 = false;

  BeforeRet: {
    result_1291849213 = hasKey_1291849214(t_1291849211, key_1291849212);
    break BeforeRet;
  };

  return result_1291849213;

}

function mustRehash_1291849673(t_1291849675) {
  var result_1291849676 = false;

    if (!((t_1291849675.counter < (t_1291849675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849676 = ((mulInt((t_1291849675.data).length, 2) < mulInt(t_1291849675.counter, 3)) || (subInt((t_1291849675.data).length, t_1291849675.counter) < 4));

  return result_1291849676;

}

function rawInsert_1291850122(t_1291850126, data_1291850127, data_1291850127_Idx, key_1291850128, val_1291850129, hc_1291850130, h_1291850131) {
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850128, NTI33554449);
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field2 = val_1291850129;
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field0 = hc_1291850130;

  
}

function enlarge_1291849828(t_1291849831) {
    var n_1291849834 = [];
    n_1291849834 = new Array(chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647) ; ++i) { n_1291849834[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849831.data; t_1291849831.data = n_1291849834; n_1291849834 = Temporary1;    Label2: {
      var i_1291849898 = 0;
      var colontmp__2818583705 = 0;
      colontmp__2818583705 = (n_1291849834).length - 1;
      var res_2818583707 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583707 <= colontmp__2818583705)) break Label4;
            i_1291849898 = res_2818583707;
            var eh_1291849952 = n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849952)) {
            var j_1291849956 = (eh_1291849952 & (t_1291849831.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849831.data[chckIndx(j_1291849956, 0, (t_1291849831.data).length - 1)].Field0)) break Label6;
                  j_1291849956 = nextTry_1308622883(j_1291849956, (t_1291849831.data).length - 1);
                }
            };
            rawInsert_1291850122(t_1291849831, t_1291849831, "data", n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field1, n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field2, eh_1291849952, j_1291849956);
            }
            
            res_2818583707 = addInt(res_2818583707, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850291(t_1291850294, key_1291850295, hc_1291850296) {
  var result_1291850297 = 0;

  BeforeRet: {
    if (((t_1291850294.data).length == 0)) {
    result_1291850297 = -1;
    break BeforeRet;
    }
    
    var h_1291850348 = (hc_1291850296 & (t_1291850294.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0)) break Label2;
          if (((t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0 == hc_1291850296) && eqStrings(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field1, key_1291850295))) {
          result_1291850297 = h_1291850348;
          break BeforeRet;
          }
          
          h_1291850348 = nextTry_1308622883(h_1291850348, (t_1291850294.data).length - 1);
        }
    };
    result_1291850297 = subInt(-1, h_1291850348);
  };

  return result_1291850297;

}

function HEX5BHEX5DHEX3D_1291849500(t_1291849503, key_1291849504, val_1291849505) {
    if (((t_1291849503.data).length == 0)) {
    var correctSizeHEX60gensym36_1291849554 = slotsNeeded_1308622891(32);
    t_1291849503.counter = 0;
    t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849559 = [0];
    var index_1291849566 = rawGet_1291849221(t_1291849503, key_1291849504, hc_1291849559, 0);
    if ((0 <= index_1291849566)) {
    t_1291849503.data[chckIndx(index_1291849566, 0, (t_1291849503.data).length - 1)].Field2 = val_1291849505;
    }
    else {
      if (((t_1291849503.data).length == 0)) {
      var correctSizeHEX60gensym39_1291849668 = slotsNeeded_1308622891(32);
      t_1291849503.counter = 0;
      t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849673(t_1291849503)) {
      enlarge_1291849828(t_1291849503);
      index_1291849566 = rawGetKnownHC_1291850291(t_1291849503, key_1291849504, hc_1291849559[0]);
      }
      
      index_1291849566 = subInt(-1, index_1291849566);
      rawInsert_1291850122(t_1291849503, t_1291849503, "data", key_1291849504, val_1291849505, hc_1291849559[0], index_1291849566);
      t_1291849503.counter = addInt(t_1291849503.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2080374823(context_2080374824) {
  var result_2080374825 = null;

    result_2080374825 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2080374825.handleActions = true;
    result_2080374825.handleInputs = false;
    result_2080374825.context = nimCopy(null, context_2080374824, NTI33554449);

  return result_2080374825;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850582(t_1291850585, key_1291850586) {
  var result_1291850587 = null;
  var result_1291850587_Idx = 0;

    var hcHEX60gensym22_1291850588 = [0];
    var indexHEX60gensym22_1291850595 = rawGet_1291849221(t_1291850585, key_1291850586, hcHEX60gensym22_1291850588, 0);
    if ((0 <= indexHEX60gensym22_1291850595)) {
    result_1291850587 = t_1291850585.data[chckIndx(indexHEX60gensym22_1291850595, 0, (t_1291850585.data).length - 1)]; result_1291850587_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850586);
    }
    

  return [result_1291850587, result_1291850587_Idx];

}

function getEventHandlerConfig_1291849162(self_1291849163, context_1291849164) {
    var Temporary1;

  var result_1291849165 = null;

  BeforeRet: {
    if (!(contains_1291849208(self_1291849163.eventHandlerConfigs, context_1291849164))) {
    HEX5BHEX5DHEX3D_1291849500(self_1291849163.eventHandlerConfigs, context_1291849164, newEventHandlerConfig_2080374823(context_1291849164));
    }
    
    result_1291849165 = (Temporary1 = HEX5BHEX5D_1291850582(self_1291849163.eventHandlerConfigs, context_1291849164), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849165;

}

function getModeConfig_2818583328(self_2818583329, mode_2818583330) {
  var result_2818583331 = null;

  BeforeRet: {
    result_2818583331 = getEventHandlerConfig_1291849162(self_2818583329.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818583330 || []));
    break BeforeRet;
  };

  return result_2818583331;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818583737 = 0;
      var result_2818583738 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583737 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818583738 = chckRange(s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818583737 <= subInt((s_788533333).length, 2))) {
            result_2818583738 = chckRange((((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818583737, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 2);
            }
            else {
              result_2818583738 = 65533;
              i_2818583737 = addInt(i_2818583737, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818583737 <= subInt((s_788533333).length, 3))) {
            result_2818583738 = chckRange(((((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818583737, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583737, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 3);
            }
            else {
              result_2818583738 = 65533;
              i_2818583737 = addInt(i_2818583737, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818583737 <= subInt((s_788533333).length, 4))) {
            result_2818583738 = chckRange((((((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818583737, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583737, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583737, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 4);
            }
            else {
              result_2818583738 = 65533;
              i_2818583737 = addInt(i_2818583737, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818583737 <= subInt((s_788533333).length, 5))) {
            result_2818583738 = chckRange(((((((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818583737, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818583737, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583737, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583737, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 5);
            }
            else {
              result_2818583738 = 65533;
              i_2818583737 = addInt(i_2818583737, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818583737 <= subInt((s_788533333).length, 6))) {
            result_2818583738 = chckRange((((((((s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818583737, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818583737, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818583737, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583737, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583737, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583737 = addInt(i_2818583737, 6);
            }
            else {
              result_2818583738 = 65533;
              i_2818583737 = addInt(i_2818583737, 1);
            }
            
            }
            else {
              result_2818583738 = chckRange(s_788533333[chckIndx(i_2818583737, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818583737 = addInt(i_2818583737, 1);
            }
            }}}}}
            r_788533347 = result_2818583738;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818583744 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583744 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818583744, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818583744, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818583744 = addInt(i_2818583744, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818583747 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583747 <= 3)) break Label3;
            if ((x_2013267026[i_2818583747] != undefined)) {
            value_2013267035 = i_2818583747;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818583747 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818583751 = 0;
      colontmp__2818583751 = (n_2013268694).length - 1;
      var res_2818583752 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583752 <= colontmp__2818583751)) break Label4;
            i_2013268758 = res_2818583752;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818583752 = addInt(res_2818583752, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818583757 = 0;
      colontmp__2818583757 = (n_2013267558).length - 1;
      var res_2818583758 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583758 <= colontmp__2818583757)) break Label4;
            i_2013267622 = res_2818583758;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818583758 = addInt(res_2818583758, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818583732 = 0;
      colontmp__2818583732 = (input_2013269802).length;
      var i_2818583733 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583733 < colontmp__2818583732)) break Label3;
            i_2013269829 = i_2818583733;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818583729 = 0;
                  var L_2818583730 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818583729 < L_2818583730)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818583729, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818583729 = addInt(i_2818583729, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818583730))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818583733 = addInt(i_2818583733, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818583723 = 0;
      var L_2818583724 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583723 < L_2818583724)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818583723, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818583723 = addInt(i_2818583723, 1);
            if (!(((commands_2013269906).length == L_2818583724))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2080374898(t_2080374901) {
  var result_2080374902 = 0;

    result_2080374902 = t_2080374901.counter;

  return result_2080374902;

}

function buildDFA_2080374847(config_2080374848) {
  var result_2080374849 = null;

  BeforeRet: {
    var resultHEX60gensym2_2080375129 = [];
    Label1: {
      var xHEX60gensym2_2080375130 = {Field0: [], Field1: []};
      var L_2818583715 = len_2080374898(config_2080374848.commands);
      Label2: {
        var h_2818583717 = 0;
        var colontmp__2818583718 = 0;
        colontmp__2818583718 = (config_2080374848.commands.data).length - 1;
        var res_2818583719 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818583719 <= colontmp__2818583718)) break Label4;
              h_2818583717 = res_2818583719;
              if (isFilled_1308622880(config_2080374848.commands.data[chckIndx(h_2818583717, 0, (config_2080374848.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2080375130 = nimCopy(xHEX60gensym2_2080375130, {Field0: nimCopy(null, config_2080374848.commands.data[chckIndx(h_2818583717, 0, (config_2080374848.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2080374848.commands.data[chckIndx(h_2818583717, 0, (config_2080374848.commands.data).length - 1)].Field2, NTI33554449)}, NTI2080374819);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2080375130, NTI2080374819);
              resultHEX60gensym2_2080375129.push(Temporary5);;
              if (!((len_2080374898(config_2080374848.commands) == L_2818583715))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818583719 = addInt(res_2818583719, 1);
            }
        };
      };
    };
    result_2080374849 = buildDFA_2013269905(resultHEX60gensym2_2080375129);
    break BeforeRet;
  };

  return result_2080374849;

}

function invoke_2382364734(event_2382364736) {
    Label1: {
      var h_2382364759 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818583764 = 0;
      var L_2818583765 = (event_2382364736.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583764 < L_2818583765)) break Label3;
            h_2382364759 = event_2382364736.handlers[chckIndx(i_2818583764, 0, (event_2382364736.handlers).length - 1)];
            h_2382364759.Field1();
            i_2818583764 = addInt(i_2818583764, 1);
            if (!(((event_2382364736.handlers).length == L_2818583765))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2382364710(self_2382364711) {
    if (!(self_2382364711.mDirty)) {
    invoke_2382364734(self_2382364711.onMarkedDirty);
    }
    
    self_2382364711.mDirty = true;

  
}

function setMode_2818583517(self_2818583518, mode_2818583519) {
        
function HEX3Aanonymous_2818583545(actionHEX60gensym187HEX60gensym188_2818583546, argHEX60gensym187HEX60gensym188_2818583547) {
          var result_2818583548 = 0;

          BeforeRet: {
            if (handlerHEX60gensym187_2818583533.config.handleActions) {
            var action_2818583549 = nimCopy(null, actionHEX60gensym187HEX60gensym188_2818583546, NTI33554449);
            var arg_2818583550 = nimCopy(null, argHEX60gensym187HEX60gensym188_2818583547, NTI33554449);
            var responseHEX60gensym187HEX60gensym188_2818583551 = handleAction_2818572643(self_2818583518, action_2818583549, arg_2818583550);
            if (handlerHEX60gensym187_2818583533.config.consumeAllActions) {
            result_2818583548 = 3;
            break BeforeRet;
            }
            
            result_2818583548 = responseHEX60gensym187HEX60gensym188_2818583551;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym187_2818583533.config.consumeAllActions) {
            result_2818583548 = 3;
            break BeforeRet;
            }
            else {
              result_2818583548 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818583548;

        }
        
function HEX3Aanonymous_2818583553(inputHEX60gensym187HEX60gensym189_2818583554) {
          var result_2818583555 = 0;

          BeforeRet: {
            if (handlerHEX60gensym187_2818583533.config.handleInputs) {
            var input_2818583556 = nimCopy(null, inputHEX60gensym187HEX60gensym189_2818583554, NTI33554449);
            result_2818583555 = handleInput_2818572651(self_2818583518, input_2818583556);
            break BeforeRet;
            }
            else {
              result_2818583555 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818583555;

        }

  BeforeRet: {
    if (eqStrings(mode_2818583519, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818583524 = [mnewString(0)];
    fmtRes_2818583524[0].push.apply(fmtRes_2818583524[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818583524, 0, mode_2818583519, []);
    fmtRes_2818583524[0].push.apply(fmtRes_2818583524[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818583524[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818583519).length == 0)) {
    self_2818583518.modeEventHandler = null;
    }
    else {
      var config_2818583525 = getModeConfig_2818583328(self_2818583518, mode_2818583519);
      Label1: {
        var handlerHEX60gensym187_2818583533 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym187_2818583533.config = config_2818583525;
        handlerHEX60gensym187_2818583533.dfaInternal = buildDFA_2080374847(config_2818583525);
        handlerHEX60gensym187_2818583533.handleAction = HEX3Aanonymous_2818583545;
        handlerHEX60gensym187_2818583533.handleInput = HEX3Aanonymous_2818583553;
      };
      self_2818583518.modeEventHandler = handlerHEX60gensym187_2818583533;
    }
    
    self_2818583518.currentMode = nimCopy(null, mode_2818583519, NTI33554449);
    markDirty_2382364710(self_2818583518);
  };

  
}

function setModeJsWrapper_2818583478(self_2818583642, mode_2818583643) {
    setMode_2818583517(self_2818583642, mode_2818583643);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818583478(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818583773(self_2818583774) {
  var result_2818583775 = [];

  BeforeRet: {
    result_2818583775 = nimCopy(null, self_2818583774.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818583775;

}

function modeJsWrapper_2818583769(self_2818583804) {
  var result_2818583805 = [];

    result_2818583805 = nimCopy(null, mode_2818583773(self_2818583804), NTI33554449);

  return result_2818583805;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818583769(this));};

function getContextWithMode_2818582956(self_2818582957, context_2818582958) {
  var result_2818583833 = [];

  BeforeRet: {
    result_2818583833 = nimCopy(null, (context_2818582958 || []).concat([46] || [],self_2818582957.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818583833;

}

function getContextWithModeJsWrapper_2818583826(self_2818583863, context_2818583864) {
  var result_2818583865 = [];

    result_2818583865 = nimCopy(null, getContextWithMode_2818582956(self_2818583863, context_2818583864), NTI33554449);

  return result_2818583865;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818583826(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818583016(s_2818583018, default_2818583019) {
    var Temporary1;

  var result_2818583020 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583018))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818583019;
      break;
    }
    result_2818583020 = Temporary1;

  return result_2818583020;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818583994 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583994 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818583994, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818583994 = addInt(i_2818583994, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2684355097 = 0;
      colontmp__2684355097 = subInt(L_33557827, 1);
      var res_2684355098 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355098 <= colontmp__2684355097)) break Label3;
            i_33557832 = res_2684355098;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2684355098 = addInt(res_2684355098, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818584000 = 0;
      var splitsHEX60gensym40_2818584001 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818584000 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818584003 = lastHEX60gensym40_2818584000;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818584000 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818584000, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818584000 = addInt(lastHEX60gensym40_2818584000, 1);
                }
            };
            if ((splitsHEX60gensym40_2818584001 == 0)) {
            lastHEX60gensym40_2818584000 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818584003, subInt(lastHEX60gensym40_2818584000, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818584001 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818584001 = subInt(splitsHEX60gensym40_2818584001, 1);
            lastHEX60gensym40_2818584000 = addInt(lastHEX60gensym40_2818584000, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818582990(editor_2818582992, path_2818582993, default_2818582994) {
  var result_2818583000 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818582992 == null)) {
      result_2818583000 = default_2818582994;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2818583012 = HEX7BHEX7D_1627393316(editor_2818582992.options, nsuSplitString(path_2818582993, [46], -1));
      if ((nodeHEX60gensym166_2818583012 == null)) {
      result_2818583000 = default_2818582994;
      break BeforeRet;
      }
      
    };
    result_2818583000 = parseEnum_2818583016(getStr_1627390106(nodeHEX60gensym166_2818583012, []), default_2818582994);
    break BeforeRet;
  };

  return result_2818583000;

}

function selection_2818572793(self_2818572794) {
  var result_2818572795 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572795 = nimCopy(result_2818572795, self_2818572794.selectionsInternal[chckIndx((self_2818572794.selectionsInternal).length - 1, 0, (self_2818572794.selectionsInternal).length - 1)], NTI2415919115);

  return result_2818572795;

}

function getCursor_2818582986(self_2818582987, cursor_2818582988) {
  var result_2818582989 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818582988) {
    case 0:
      var configCursor_2818583050 = getOption_2818582990(self_2818582987.editor, getContextWithMode_2818582956(self_2818582987, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818582989 = nimCopy(result_2818582989, getCursor_2818582986(self_2818582987, configCursor_2818583050), NTI2415919113);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818582989 = nimCopy(result_2818582989, selection_2818572793(self_2818582987).Field1, NTI2415919113);
      break BeforeRet;
      break;
    case 2:
      result_2818582989 = nimCopy(result_2818582989, selection_2818572793(self_2818582987).Field0, NTI2415919113);
      break BeforeRet;
      break;
    }
  };

  return result_2818582989;

}

function updateTargetColumn_2818583895(self_2818583896, cursor_2818583897) {
    self_2818583896.targetColumn = getCursor_2818582986(self_2818583896, cursor_2818583897).Field1;

  
}

function updateTargetColumnJsWrapper_2818583891(self_2818583926, cursor_2818583927) {
    updateTargetColumn_2818583895(self_2818583926, cursor_2818583927);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818583891(this, cursor_));};

function HEX3DHEX3D_2415919177(x_2415919179, y_2415919180) {
  var result_2415919181 = false;

  BeforeRet: {
    if (!((x_2415919179["Field0"] == y_2415919180["Field0"]))) {
    result_2415919181 = false;
    break BeforeRet;
    }
    
    if (!((x_2415919179["Field1"] == y_2415919180["Field1"]))) {
    result_2415919181 = false;
    break BeforeRet;
    }
    
    result_2415919181 = true;
    break BeforeRet;
  };

  return result_2415919181;

}

function HEX3DHEX3D_2415919167(x_2415919169, y_2415919170) {
  var result_2415919171 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2415919177(x_2415919169["Field0"], y_2415919170["Field0"]))) {
    result_2415919171 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2415919177(x_2415919169["Field1"], y_2415919170["Field1"]))) {
    result_2415919171 = false;
    break BeforeRet;
    }
    
    result_2415919171 = true;
    break BeforeRet;
  };

  return result_2415919171;

}

function newSeq_2818572833(len_2818572835) {
  var result_2818572836 = [];

    result_2818572836 = new Array(len_2818572835); for (var i = 0 ; i < len_2818572835 ; ++i) { result_2818572836[i] = []; }
  return result_2818572836;

}

function expandIfNeeded_2818572823(deq_2818572825) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572825.mask == 0)) {
    var correctSizeHEX60gensym9_2818572827 = nextPowerOfTwo_872415437(4);
    deq_2818572825.mask = subInt(correctSizeHEX60gensym9_2818572827, 1);
    deq_2818572825.data = new Array(chckRange(correctSizeHEX60gensym9_2818572827, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572827, 0, 2147483647) ; ++i) { deq_2818572825.data[i] = []; }    }
    
    var cap_2818572832 = addInt(deq_2818572825.mask, 1);
    if ((cap_2818572832 <= deq_2818572825.count)) {
    var n_2818572850 = newSeq_2818572833(chckRange(mulInt(cap_2818572832, 2), 0, 2147483647));
    var i_2818572851 = 0;
    Label1: {
      var x_2818572861 = null;
      var x_2818572861_Idx = 0;
      var i_2818584060 = deq_2818572825.head;
      Label2: {
        var c_2818584062 = 0;
        var i_2818584063 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584063 < deq_2818572825.count)) break Label4;
              c_2818584062 = i_2818584063;
              x_2818572861 = deq_2818572825.data; x_2818572861_Idx = chckIndx(i_2818584060, 0, (deq_2818572825.data).length - 1);
              Temporary5 = x_2818572861[x_2818572861_Idx];
              x_2818572861[x_2818572861_Idx] = genericReset(x_2818572861[x_2818572861_Idx], NTI2415919123);
              n_2818572850[chckIndx(i_2818572851, 0, (n_2818572850).length - 1)] = nimCopy(null, Temporary5, NTI2415919123);
              i_2818572851 = addInt(i_2818572851, 1);
              i_2818584060 = (addInt(i_2818584060, 1) & deq_2818572825.mask);
              i_2818584063 = addInt(i_2818584063, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572850;
    n_2818572850 = genericReset(n_2818572850, NTI2818572689);
    deq_2818572825.data = nimCopy(null, Temporary6, NTI2818572689);
    deq_2818572825.mask = subInt(mulInt(cap_2818572832, 2), 1);
    deq_2818572825.tail = deq_2818572825.count;
    deq_2818572825.head = 0;
    }
    

  
}

function addLast_2818572814(deq_2818572816, item_2818572817) {
    expandIfNeeded_2818572823(deq_2818572816);
    deq_2818572816.count = addInt(deq_2818572816.count, 1);
    deq_2818572816.data[chckIndx(deq_2818572816.tail, 0, (deq_2818572816.data).length - 1)] = nimCopy(null, item_2818572817, NTI2415919123);
    deq_2818572816.tail = (addInt(deq_2818572816.tail, 1) & deq_2818572816.mask);

  
}

function len_2818572953(deq_2818572955) {
  var result_2818572956 = 0;

    result_2818572956 = deq_2818572955.count;

  return result_2818572956;

}

function popFirst_2818573014(deq_2818573016) {
    var Temporary1;

  var result_2818573017 = [];

    if ((deq_2818573016.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573016.count = subInt(deq_2818573016.count, 1);
    Temporary1 = deq_2818573016.data[chckIndx(deq_2818573016.head, 0, (deq_2818573016.data).length - 1)];
    deq_2818573016.data[chckIndx(deq_2818573016.head, 0, (deq_2818573016.data).length - 1)] = genericReset(deq_2818573016.data[chckIndx(deq_2818573016.head, 0, (deq_2818573016.data).length - 1)], NTI2415919123);
    result_2818573017 = nimCopy(null, Temporary1, NTI2415919123);
    deq_2818573016.head = (addInt(deq_2818573016.head, 1) & deq_2818573016.mask);

  return result_2818573017;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572661(self_2818572662, line_2818572663) {
  var result_2818572664 = 0;

  BeforeRet: {
    if ((line_2818572663 < (self_2818572662.lines).length)) {
    result_2818572664 = (self_2818572662.lines[chckIndx(line_2818572663, 0, (self_2818572662.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572664 = 0;
    break BeforeRet;
  };

  return result_2818572664;

}

function clampCursor_2818572675(self_2818572676, cursor_2818572677) {
  var result_2818572678 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572679 = nimCopy(null, cursor_2818572677, NTI2415919113);
    if (((self_2818572676.lines).length == 0)) {
    var colontmp__2818584067 = 0;
    var colontmp__2818584068 = 0;
    result_2818572678 = nimCopy(result_2818572678, {Field0: colontmp__2818584067, Field1: colontmp__2818584068}, NTI2415919113);
    break BeforeRet;
    }
    
    cursor_2818572679.Field0 = clamp_1660945119(cursor_2818572679.Field0, 0, subInt((self_2818572676.lines).length, 1));
    cursor_2818572679.Field1 = clamp_1660945119(cursor_2818572679.Field1, 0, lineLength_2818572661(self_2818572676, cursor_2818572679.Field0));
    result_2818572678 = nimCopy(result_2818572678, cursor_2818572679, NTI2415919113);
    break BeforeRet;
  };

  return result_2818572678;

}

function clampSelection_2818572700(self_2818572701, selection_2818572702) {
  var result_2818572703 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584065 = clampCursor_2818572675(self_2818572701, selection_2818572702.Field0);
    var colontmp__2818584066 = clampCursor_2818572675(self_2818572701, selection_2818572702.Field1);
    result_2818572703 = nimCopy(result_2818572703, {Field0: nimCopy(null, colontmp__2818584065, NTI2415919113), Field1: nimCopy(null, colontmp__2818584066, NTI2415919113)}, NTI2415919115);

  return result_2818572703;

}

function clampSelection_2818572704(self_2818572705, selection_2818572706) {
  var result_2818572707 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572707 = nimCopy(result_2818572707, clampSelection_2818572700(self_2818572705.document, selection_2818572706), NTI2415919115);

  return result_2818572707;

}

function selectionHEX3D_2818572799(self_2818572800, selection_2818572801) {
  BeforeRet: {
    if ((((self_2818572800.selectionsInternal).length == 1) && HEX3DHEX3D_2415919167(self_2818572800.selectionsInternal[chckIndx(0, 0, (self_2818572800.selectionsInternal).length - 1)], selection_2818572801))) {
    break BeforeRet;
    }
    
    addLast_2818572814(self_2818572800.selectionHistory, self_2818572800.selectionsInternal);
    if ((100 < len_2818572953(self_2818572800.selectionHistory))) {
    var _ = popFirst_2818573014(self_2818572800.selectionHistory);
    }
    
    self_2818572800.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572704(self_2818572800, selection_2818572801), NTI2415919115)], NTI2818572804);
    markDirty_2382364710(self_2818572800);
  };

  
}

function invertSelection_2818584012(self_2818584013) {
    selectionHEX3D_2818572799(self_2818584013, {Field0: nimCopy(null, selection_2818572793(self_2818584013).Field1, NTI2415919113), Field1: nimCopy(null, selection_2818572793(self_2818584013).Field0, NTI2415919113)});

  
}

function invertSelectionJsWrapper_2818584008(self_2818584041) {
    invertSelection_2818584012(self_2818584041);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818584008(this));};

function any_2415919537(s_2415919539, pred_2415919541) {
  var result_2415919542 = false;

  BeforeRet: {
    Label1: {
      var i_2415919555 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584514 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584514 < (s_2415919539).length)) break Label3;
            i_2415919555 = s_2415919539[chckIndx(i_2818584514, 0, (s_2415919539).length - 1)];
            if (pred_2415919541(i_2415919555)) {
            result_2415919542 = true;
            break BeforeRet;
            }
            
            i_2818584514 = addInt(i_2818584514, 1);
          }
      };
    };
    result_2415919542 = false;
  };

  return result_2415919542;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2415919447(x_2415919449, y_2415919450) {
  var result_2415919451 = false;

  BeforeRet: {
    var c_2415919461 = cmp_33557727(x_2415919449["Field0"], y_2415919450["Field0"]);
    if ((c_2415919461 < 0)) {
    result_2415919451 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919461)) {
    result_2415919451 = false;
    break BeforeRet;
    }
    
    var c_2415919466 = cmp_33557727(x_2415919449["Field1"], y_2415919450["Field1"]);
    if ((c_2415919466 < 0)) {
    result_2415919451 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919466)) {
    result_2415919451 = false;
    break BeforeRet;
    }
    
    result_2415919451 = true;
    break BeforeRet;
  };

  return result_2415919451;

}

function contains_2415919495(selection_2415919496, other_2415919497) {
  var result_2415919498 = false;

    result_2415919498 = (HEX3CHEX3D_2415919447(selection_2415919496.Field0, other_2415919497.Field0) && HEX3CHEX3D_2415919447(other_2415919497.Field1, selection_2415919496.Field1));

  return result_2415919498;

}

function contains_2415919574(self_2415919575, other_2415919576) {
    other_2415919576 = nimCopy(null, other_2415919576, NTI2415919115);
    
function HEX3Aanonymous_2415919578(s_2415919581) {
      var result_2415919584 = false;

        result_2415919584 = contains_2415919495(s_2415919581, other_2415919576);

      return result_2415919584;

    }

  var result_2415919577 = false;

    result_2415919577 = any_2415919537(self_2415919575, HEX3Aanonymous_2415919578);

  return result_2415919577;

}

function deduplicate_2818572745(s_2818572747, isSorted_2818572748) {
  var result_2818572749 = [];

    result_2818572749 = nimCopy(null, [], NTI2818572635);
    if ((0 < (s_2818572747).length)) {
    if (isSorted_2818572748) {
    var prev_2818572757 = nimCopy(null, s_2818572747[chckIndx(0, 0, (s_2818572747).length - 1)], NTI2415919115);
    var Temporary1 = nimCopy(null, prev_2818572757, NTI2415919115);
    result_2818572749.push(Temporary1);;
    Label2: {
      var i_2818572769 = 0;
      var colontmp__2818584506 = 0;
      colontmp__2818584506 = (s_2818572747).length - 1;
      var res_2818584507 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584507 <= colontmp__2818584506)) break Label4;
            i_2818572769 = res_2818584507;
            if (!(HEX3DHEX3D_2415919167(s_2818572747[chckIndx(i_2818572769, 0, (s_2818572747).length - 1)], prev_2818572757))) {
            prev_2818572757 = nimCopy(prev_2818572757, s_2818572747[chckIndx(i_2818572769, 0, (s_2818572747).length - 1)], NTI2415919115);
            var Temporary5 = nimCopy(null, prev_2818572757, NTI2415919115);
            result_2818572749.push(Temporary5);;
            }
            
            res_2818584507 = addInt(res_2818584507, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572781 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818584511 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818584511 < (s_2818572747).length)) break Label8;
              itm_2818572781 = s_2818572747[chckIndx(i_2818584511, 0, (s_2818572747).length - 1)];
              if (!(contains_2415919574(result_2818572749, itm_2818572781))) {
              var Temporary9 = nimCopy(null, itm_2818572781, NTI2415919115);
              result_2818572749.push(Temporary9);;
              }
              
              i_2818584511 = addInt(i_2818584511, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572749;

}

function map_2818572723(s_2818572726, op_2818572728) {
  var result_2818572729 = [];

    result_2818572729 = new Array(chckRange((s_2818572726).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572726).length, 0, 2147483647) ; ++i) { result_2818572729[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572744 = 0;
      var colontmp__2818584517 = 0;
      colontmp__2818584517 = (s_2818572726).length;
      var i_2818584518 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584518 < colontmp__2818584517)) break Label3;
            i_2818572744 = i_2818584518;
            result_2818572729[chckIndx(i_2818572744, 0, (result_2818572729).length - 1)] = nimCopy(result_2818572729[chckIndx(i_2818572744, 0, (result_2818572729).length - 1)], op_2818572728(s_2818572726[chckIndx(i_2818572744, 0, (s_2818572726).length - 1)]), NTI2415919115);
            i_2818584518 = addInt(i_2818584518, 1);
          }
      };
    };

  return result_2818572729;

}

function clampAndMergeSelections_2818572708(self_2818572709, selections_2818572710) {
    
function HEX3Aanonymous_2818572712(s_2818572719) {
      var result_2818572722 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572722 = nimCopy(result_2818572722, clampSelection_2818572700(self_2818572709, s_2818572719), NTI2415919115);

      return result_2818572722;

    }

  var result_2818572711 = [];

    result_2818572711 = nimCopy(null, deduplicate_2818572745(map_2818572723(selections_2818572710, HEX3Aanonymous_2818572712), false), NTI2818572624);

  return result_2818572711;

}

function HEX40_2818578920(a_2818578922) {
  var result_2818578923 = [];

    result_2818578923 = new Array(chckRange((a_2818578922).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818578922).length, 0, 2147483647) ; ++i) { result_2818578923[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818578938 = 0;
      var colontmp__2818584521 = 0;
      colontmp__2818584521 = subInt((a_2818578922).length, 1);
      var res_2818584522 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584522 <= colontmp__2818584521)) break Label3;
            i_2818578938 = res_2818584522;
            result_2818578923[chckIndx(i_2818578938, 0, (result_2818578923).length - 1)] = nimCopy(result_2818578923[chckIndx(i_2818578938, 0, (result_2818578923).length - 1)], a_2818578922[chckIndx(i_2818578938, 0, (a_2818578922).length - 1)], NTI2415919115);
            res_2818584522 = addInt(res_2818584522, 1);
          }
      };
    };

  return result_2818578923;

}

function byteOffset_2818578900(self_2818578901, cursor_2818578902) {
  var result_2818578903 = 0;

    result_2818578903 = cursor_2818578902.Field1;
    Label1: {
      var i_2818578908 = 0;
      var i_2818584525 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584525 < cursor_2818578902.Field0)) break Label3;
            i_2818578908 = i_2818584525;
            result_2818578903 = addInt(result_2818578903, addInt((self_2818578901.lines[chckIndx(i_2818578908, 0, (self_2818578901.lines).length - 1)]).length, 1));
            i_2818584525 = addInt(i_2818584525, 1);
          }
      };
    };

  return result_2818578903;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818583506 = 0;
      colontmp__2818583506 = start_855639700;
      var res_2818583507 = colontmp__2818583506;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583507 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818583507;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818583507 = addInt(res_2818583507, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818584528 = 0;
      colontmp__2818584528 = subInt(m_855639633, 1);
      var i_2818584529 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584529 < colontmp__2818584528)) break Label3;
            i_855639653 = i_2818584529;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818584529 = addInt(i_2818584529, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579475(x_2818579477, x_2818579477_Idx, item_2818579478, i_2818579479) {
    var it_2818579499 = [];
    x_2818579477[x_2818579477_Idx] = x_2818579477[x_2818579477_Idx] || []; x_2818579477[x_2818579477_Idx].splice(i_2818579479, 0, it_2818579499);
    x_2818579477[x_2818579477_Idx][chckIndx(i_2818579479, 0, (x_2818579477[x_2818579477_Idx]).length - 1)] = nimCopy(null, item_2818579478, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2415919597(cursor_2415919598) {
  var result_2415919599 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584538 = nimCopy(null, cursor_2415919598, NTI2415919113);
    var colontmp__2818584539 = nimCopy(null, cursor_2415919598, NTI2415919113);
    result_2415919599 = nimCopy(result_2415919599, {Field0: nimCopy(null, colontmp__2818584538, NTI2415919113), Field1: nimCopy(null, colontmp__2818584539, NTI2415919113)}, NTI2415919115);

  return result_2415919599;

}

function add_2415919621(cursor_2415919622, selection_2415919623) {
  var result_2415919624 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(cursor_2415919622, selection_2415919623.Field0)) {
    result_2415919624 = nimCopy(result_2415919624, cursor_2415919622, NTI2415919113);
    break BeforeRet;
    }
    
    if ((selection_2415919623.Field0.Field0 == selection_2415919623.Field1.Field0)) {
    if ((cursor_2415919622.Field0 == selection_2415919623.Field0.Field0)) {
    var colontmp__2818584542 = cursor_2415919622.Field0;
    var colontmp__2818584543 = addInt(cursor_2415919622.Field1, subInt(selection_2415919623.Field1.Field1, selection_2415919623.Field0.Field1));
    result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2818584542, Field1: colontmp__2818584543}, NTI2415919113);
    break BeforeRet;
    }
    else {
      result_2415919624 = nimCopy(result_2415919624, cursor_2415919622, NTI2415919113);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2415919622.Field0 == selection_2415919623.Field0.Field0)) {
    var colontmp__2818584544 = selection_2415919623.Field1.Field0;
    var colontmp__2818584545 = addInt(selection_2415919623.Field1.Field1, subInt(cursor_2415919622.Field1, selection_2415919623.Field0.Field1));
    result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2818584544, Field1: colontmp__2818584545}, NTI2415919113);
    break BeforeRet;
    }
    else {
      var colontmp__2818584546 = addInt(cursor_2415919622.Field0, subInt(selection_2415919623.Field1.Field0, selection_2415919623.Field0.Field0));
      var colontmp__2818584547 = cursor_2415919622.Field1;
      result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2818584546, Field1: colontmp__2818584547}, NTI2415919113);
      break BeforeRet;
    }
    }
  };

  return result_2415919624;

}

function add_2415919629(self_2415919630, other_2415919631) {
  var result_2415919632 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818584540 = add_2415919621(self_2415919630.Field0, other_2415919631);
    var colontmp__2818584541 = add_2415919621(self_2415919630.Field1, other_2415919631);
    result_2415919632 = nimCopy(result_2415919632, {Field0: nimCopy(null, colontmp__2818584540, NTI2415919113), Field1: nimCopy(null, colontmp__2818584541, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919632;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818584549 = 0;
      colontmp__2818584549 = (a_855639591).length - 1;
      var res_2818584550 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584550 <= colontmp__2818584549)) break Label3;
            i_855639608 = res_2818584550;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818584550 = addInt(res_2818584550, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818584553 = 0;
      colontmp__2818584553 = (a_855639591).length - 1;
      var res_2818584554 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818584554 <= colontmp__2818584553)) break Label6;
            i_855639621 = res_2818584554;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818584554 = addInt(res_2818584554, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818579094(val_2818579096) {
  var result_2818579097 = ({val: null});

    if (!(!((val_2818579096 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818579097.val = val_2818579096;

  return result_2818579097;

}

function invoke_2818579566(event_2818579568, arg_2818579569) {
    Label1: {
      var h_2818579592 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584558 = 0;
      var L_2818584559 = (event_2818579568.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584558 < L_2818584559)) break Label3;
            h_2818579592 = event_2818579568.handlers[chckIndx(i_2818584558, 0, (event_2818579568.handlers).length - 1)];
            h_2818579592.Field1(arg_2818579569);
            i_2818584558 = addInt(i_2818584558, 1);
            if (!(((event_2818579568.handlers).length == L_2818584559))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573236(event_2818573238, arg_2818573239) {
    Label1: {
      var h_2818573262 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584563 = 0;
      var L_2818584564 = (event_2818573238.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584563 < L_2818584564)) break Label3;
            h_2818573262 = event_2818573238.handlers[chckIndx(i_2818584563, 0, (event_2818573238.handlers).length - 1)];
            h_2818573262.Field1(arg_2818573239);
            i_2818584563 = addInt(i_2818584563, 1);
            if (!(((event_2818573238.handlers).length == L_2818584564))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573328(t_2818573331) {
    Label1: {
      var i_2818573389 = 0;
      var colontmp__2818584567 = 0;
      colontmp__2818584567 = (t_2818573331.data).length;
      var i_2818584568 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584568 < colontmp__2818584567)) break Label3;
            i_2818573389 = i_2818584568;
            t_2818573331.data[chckIndx(i_2818573389, 0, (t_2818573331.data).length - 1)].Field0 = 0;
            t_2818573331.data[chckIndx(i_2818573389, 0, (t_2818573331.data).length - 1)].Field1 = 0;
            t_2818573331.data[chckIndx(i_2818573389, 0, (t_2818573331.data).length - 1)].Field2 = null;
            i_2818584568 = addInt(i_2818584568, 1);
          }
      };
    };
    t_2818573331.counter = 0;

  
}

function notifyTextChanged_2818573212(self_2818573213) {
    invoke_2818573236(self_2818573213.textChanged, self_2818573213);
    clear_2818573328(self_2818573213.styledTextCache);

  
}

function insert_2818579410(self_2818579411, selections_2818579412, oldSelection_2818579413, text_2818579414, notify_2818579415, record_2818579416, autoIndent_2818579417) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579418 = [];

    var newEmptyLines_2818579419 = [];
    result_2818579418 = nimCopy(null, clampAndMergeSelections_2818572708(self_2818579411, selections_2818579412), NTI2415919123);
    var undoOp_2818579427 = {kind: 2, children: [], oldSelection: HEX40_2818578920(oldSelection_2818579413), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579433 = 0;
      var selection_2818579434 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584502 = 0;
      var L_2818584503 = (result_2818579418).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584502 < L_2818584503)) break Label3;
            i_2818579433 = i_2818584502;
            selection_2818579434 = nimCopy(selection_2818579434, result_2818579418[chckIndx(i_2818584502, 0, (result_2818579418).length - 1)], NTI2415919115);
            var oldCursor_2818579435 = nimCopy(null, selection_2818579434.Field1, NTI2415919113);
            var cursor_2818579436 = nimCopy(null, selection_2818579434.Field1, NTI2415919113);
            var startByte_2818579437 = byteOffset_2818578900(self_2818579411, cursor_2818579436);
            var lineCounter_2818579438 = 0;
            if (self_2818579411.singleLine) {
            var text_2818579439 = nsuReplaceStr(text_2818579414, [10], [32]);
            if (((self_2818579411.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579439, NTI33554449);
            self_2818579411.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579411.lines, chckIndx(0, 0, (self_2818579411.lines).length - 1), text_2818579439, chckRange(cursor_2818579436.Field1, 0, 2147483647));
            }
            
            cursor_2818579436.Field1 = addInt(cursor_2818579436.Field1, (text_2818579439).length);
            }
            else {
              Label5: {
                var line_2818579451 = [];
                var first_2818584491 = 0;
                var last_2818584492 = 0;
                var eolpos_2818584493 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818584492 < (text_2818579414).length) && !((ConstSet23[text_2818579414[chckIndx(last_2818584492, 0, (text_2818579414).length - 1)]] != undefined)))) break Label9;
                            last_2818584492 = addInt(last_2818584492, 1);
                          }
                      };
                      eolpos_2818584493 = last_2818584492;
                      if ((last_2818584492 < (text_2818579414).length)) {
                      if ((text_2818579414[chckIndx(last_2818584492, 0, (text_2818579414).length - 1)] == 10)) {
                      last_2818584492 = addInt(last_2818584492, 1);
                      }
                      else {
                      if ((text_2818579414[chckIndx(last_2818584492, 0, (text_2818579414).length - 1)] == 13)) {
                      last_2818584492 = addInt(last_2818584492, 1);
                      if (((last_2818584492 < (text_2818579414).length) && (text_2818579414[chckIndx(last_2818584492, 0, (text_2818579414).length - 1)] == 10))) {
                      last_2818584492 = addInt(last_2818584492, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818584492, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818584493, 1);
                      }
                      
                      line_2818579451 = substr_33557821(text_2818579414, first_2818584491, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579438)) {
                      insert_2818579475(self_2818579411, "lines", HEX5BHEX5D_855639319(self_2818579411.lines[chckIndx(cursor_2818579436.Field0, 0, (self_2818579411.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579436.Field1, 1)), chckRange(addInt(cursor_2818579436.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579419.push(addInt(cursor_2818579436.Field0, 1));;
                      if ((cursor_2818579436.Field1 < lineLength_2818572661(self_2818579411, cursor_2818579436.Field0))) {
                      delete_855639365(self_2818579411.lines, chckIndx(cursor_2818579436.Field0, 0, (self_2818579411.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579436.Field1, subInt(lineLength_2818572661(self_2818579411, cursor_2818579436.Field0), 1)));
                      }
                      
                      var colontmp__2818584487 = addInt(cursor_2818579436.Field0, 1);
                      var colontmp__2818584488 = 0;
                      cursor_2818579436 = nimCopy(cursor_2818579436, {Field0: colontmp__2818584487, Field1: colontmp__2818584488}, NTI2415919113);
                      }
                      
                      if ((0 < (line_2818579451).length)) {
                      insert_33557745(self_2818579411.lines, chckIndx(cursor_2818579436.Field0, 0, (self_2818579411.lines).length - 1), line_2818579451, chckRange(cursor_2818579436.Field1, 0, 2147483647));
                      cursor_2818579436.Field1 = addInt(cursor_2818579436.Field1, (line_2818579451).length);
                      }
                      
                      if ((eolpos_2818584493 == last_2818584492)) {
                      break Label6;
                      }
                      
                      first_2818584491 = last_2818584492;
                      } finally {
                      lineCounter_2818579438 = addInt(lineCounter_2818579438, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579418[chckIndx(i_2818579433, 0, (result_2818579418).length - 1)] = nimCopy(result_2818579418[chckIndx(i_2818579433, 0, (result_2818579418).length - 1)], toSelection_2415919597(cursor_2818579436), NTI2415919115);
            Label12: {
              var k_2818579526 = 0;
              var colontmp__2818584497 = 0;
              var colontmp__2818584498 = 0;
              colontmp__2818584497 = addInt(i_2818579433, 1);
              colontmp__2818584498 = (result_2818579418).length - 1;
              var res_2818584499 = colontmp__2818584497;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818584499 <= colontmp__2818584498)) break Label14;
                    k_2818579526 = res_2818584499;
                    result_2818579418[chckIndx(k_2818579526, 0, (result_2818579418).length - 1)] = nimCopy(result_2818579418[chckIndx(k_2818579526, 0, (result_2818579418).length - 1)], add_2415919629(result_2818579418[chckIndx(k_2818579526, 0, (result_2818579418).length - 1)], {Field0: nimCopy(null, oldCursor_2818579435, NTI2415919113), Field1: nimCopy(null, cursor_2818579436, NTI2415919113)}), NTI2415919115);
                    res_2818584499 = addInt(res_2818584499, 1);
                  }
              };
            };
            if (!((self_2818579411.tsParser == null))) {
            var edit_2818579530 = {startIndex: startByte_2818579437, oldEndIndex: startByte_2818579437, newEndIndex: addInt(startByte_2818579437, (text_2818579414).length), startPosition: {row: oldCursor_2818579435.Field0, column: oldCursor_2818579435.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579435.Field0, column: oldCursor_2818579435.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579436.Field0, column: cursor_2818579436.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579411.currentTree.edit(edit_2818579530);
            var strValue_2818579531 = nsuJoinSep(self_2818579411.lines, [10]);
            self_2818579411.currentTree = parseString_2885681211(self_2818579411.tsParser, strValue_2818579531, some_2818579094(self_2818579411.currentTree));
            }
            
            self_2818579411.version = addInt(self_2818579411.version, 1);
            if (record_2818579416) {
            var Temporary15 = undoOp_2818579427;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579435, NTI2415919113), Field1: nimCopy(null, cursor_2818579436, NTI2415919113)}, NTI2415919115), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579415) {
            invoke_2818579566(self_2818579411.textInserted, {Field0: self_2818579411, Field1: nimCopy(null, oldCursor_2818579435, NTI2415919113), Field2: nimCopy(null, text_2818579414, NTI33554449)});
            }
            
            i_2818584502 = addInt(i_2818584502, 1);
            if (!(((result_2818579418).length == L_2818584503))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579415) {
    notifyTextChanged_2818573212(self_2818579411);
    }
    
      if (!record_2818579416) Temporary16 = false; else {        var Temporary17 = undoOp_2818579427;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579411.undoOps.push(undoOp_2818579427);;
    self_2818579411.redoOps = nimCopy(null, [], NTI2818575832);
    }
    

  return result_2818579418;

}

function selections_2818572790(self_2818572791) {
  var result_2818572792 = [];

    result_2818572792 = nimCopy(null, self_2818572791.selectionsInternal, NTI2415919123);

  return result_2818572792;

}

function insert_2818584075(self_2818584076, selections_2818584077, text_2818584078, notify_2818584079, record_2818584080, autoIndent_2818584081) {
  var result_2818584082 = [];

  BeforeRet: {
    result_2818584082 = nimCopy(null, insert_2818579410(self_2818584076.document, selections_2818584077, selections_2818572790(self_2818584076), text_2818584078, notify_2818584079, record_2818584080, autoIndent_2818584081), NTI2818576158);
    break BeforeRet;
  };

  return result_2818584082;

}

function insertJsWrapper_2818584071(self_2818584116, selections_2818584117, text_2818584118, notify_2818584119, record_2818584120, autoIndent_2818584121) {
  var result_2818584122 = [];

    result_2818584122 = nimCopy(null, insert_2818584075(self_2818584116, selections_2818584117, text_2818584118, notify_2818584119, record_2818584120, autoIndent_2818584121), NTI2818578877);

  return result_2818584122;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818584071(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2415919476(selection_2415919477) {
  var result_2415919478 = false;

    result_2415919478 = HEX3DHEX3D_2415919177(selection_2415919477.Field0, selection_2415919477.Field1);

  return result_2415919478;

}

function HEX3E_2415919435(a_2415919436, b_2415919437) {
  var result_2415919438 = false;

  BeforeRet: {
    if ((b_2415919437.Field0 < a_2415919436.Field0)) {
    result_2415919438 = true;
    break BeforeRet;
    }
    else {
    if (((a_2415919436.Field0 == b_2415919437.Field0) && (b_2415919437.Field1 < a_2415919436.Field1))) {
    result_2415919438 = true;
    break BeforeRet;
    }
    else {
      result_2415919438 = false;
      break BeforeRet;
    }
    }
  };

  return result_2415919438;

}

function isBackwards_2415919467(selection_2415919468) {
  var result_2415919469 = false;

  BeforeRet: {
    result_2415919469 = HEX3E_2415919435(selection_2415919468.Field0, selection_2415919468.Field1);
    break BeforeRet;
  };

  return result_2415919469;

}

function normalized_2415919470(selection_2415919471) {
  var result_2415919472 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2415919467(selection_2415919471)) {
    var colontmp__2818584661 = nimCopy(null, selection_2415919471.Field1, NTI2415919113);
    var colontmp__2818584662 = nimCopy(null, selection_2415919471.Field0, NTI2415919113);
    result_2415919472 = nimCopy(result_2415919472, {Field0: nimCopy(null, colontmp__2818584661, NTI2415919113), Field1: nimCopy(null, colontmp__2818584662, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    }
    else {
      result_2415919472 = nimCopy(result_2415919472, selection_2415919471, NTI2415919115);
      break BeforeRet;
    }
    
  };

  return result_2415919472;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818584669 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584669 < L_855639300)) break Label3;
            i_855639305 = i_2818584669;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818584669 = addInt(i_2818584669, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818573989(self_2818573990, selection_2818573991) {
  var result_2818573992 = [];

  BeforeRet: {
    var colontmp__2818584667 = normalized_2415919470(selection_2818573991);
    var first_2818573993 = nimCopy(null, colontmp__2818584667["Field0"], NTI2415919113);
    var last_2818573994 = nimCopy(null, colontmp__2818584667["Field1"], NTI2415919113);
    if ((first_2818573993.Field0 == last_2818573994.Field0)) {
    result_2818573992 = nimCopy(null, HEX5BHEX5D_855639291(self_2818573990.lines[chckIndx(first_2818573993.Field0, 0, (self_2818573990.lines).length - 1)], HEX2EHEX2E_805306418(first_2818573993.Field1, subInt(last_2818573994.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818573992 = nimCopy(null, HEX5BHEX5D_855639319(self_2818573990.lines[chckIndx(first_2818573993.Field0, 0, (self_2818573990.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818573993.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574041 = 0;
      var colontmp__2818584664 = 0;
      colontmp__2818584664 = addInt(first_2818573993.Field0, 1);
      var i_2818584665 = colontmp__2818584664;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584665 < last_2818573994.Field0)) break Label3;
            i_2818574041 = i_2818584665;
            result_2818573992.push.apply(result_2818573992, [10]);;
            result_2818573992.push.apply(result_2818573992, self_2818573990.lines[chckIndx(i_2818574041, 0, (self_2818573990.lines).length - 1)]);;
            i_2818584665 = addInt(i_2818584665, 1);
          }
      };
    };
    result_2818573992.push.apply(result_2818573992, [10]);;
    result_2818573992.push.apply(result_2818573992, HEX5BHEX5D_855639291(self_2818573990.lines[chckIndx(last_2818573994.Field0, 0, (self_2818573990.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818573994.Field1, 1))));;
  };

  return result_2818573992;

}

function delete_2818579029(s_2818579031, s_2818579031_Idx, slice_2818579032) {
    if (!((((slice_2818579032.a < (s_2818579031[s_2818579031_Idx]).length) && (0 <= slice_2818579032.a)) && (slice_2818579032.b < (s_2818579031[s_2818579031_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818579032, NTI805306392), Field1: (s_2818579031[s_2818579031_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818579032.a <= slice_2818579032.b)) {
    var n_2818579079 = addInt(subInt(slice_2818579032.b, slice_2818579032.a), 1);
    var first_2818579080 = slice_2818579032.a;
    s_2818579031[s_2818579031_Idx].splice(first_2818579080, n_2818579079);
    }
    

  
}

function subtract_2415919605(cursor_2415919606, selection_2415919607) {
  var result_2415919608 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(cursor_2415919606, selection_2415919607.Field0)) {
    result_2415919608 = nimCopy(result_2415919608, cursor_2415919606, NTI2415919113);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2415919447(cursor_2415919606, selection_2415919607.Field1)) {
    result_2415919608 = nimCopy(result_2415919608, selection_2415919607.Field0, NTI2415919113);
    break BeforeRet;
    }
    
    if ((cursor_2415919606.Field0 == selection_2415919607.Field1.Field0)) {
    if ((selection_2415919607.Field0.Field0 == selection_2415919607.Field1.Field0)) {
    var colontmp__2818584675 = cursor_2415919606.Field0;
    var colontmp__2818584676 = subInt(cursor_2415919606.Field1, subInt(selection_2415919607.Field1.Field1, selection_2415919607.Field0.Field1));
    result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2818584675, Field1: colontmp__2818584676}, NTI2415919113);
    break BeforeRet;
    }
    else {
      var colontmp__2818584677 = selection_2415919607.Field0.Field0;
      var colontmp__2818584678 = addInt(selection_2415919607.Field0.Field1, subInt(cursor_2415919606.Field1, selection_2415919607.Field1.Field1));
      result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2818584677, Field1: colontmp__2818584678}, NTI2415919113);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818584679 = subInt(cursor_2415919606.Field0, subInt(selection_2415919607.Field1.Field0, selection_2415919607.Field0.Field0));
    var colontmp__2818584680 = cursor_2415919606.Field1;
    result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2818584679, Field1: colontmp__2818584680}, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919608;

}

function subtract_2415919617(self_2415919618, other_2415919619) {
  var result_2415919620 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818584673 = subtract_2415919605(self_2415919618.Field0, other_2415919619);
    var colontmp__2818584674 = subtract_2415919605(self_2415919618.Field1, other_2415919619);
    result_2415919620 = nimCopy(result_2415919620, {Field0: nimCopy(null, colontmp__2818584673, NTI2415919113), Field1: nimCopy(null, colontmp__2818584674, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919620;

}

function invoke_2818579138(event_2818579140, arg_2818579141) {
    Label1: {
      var h_2818579164 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584683 = 0;
      var L_2818584684 = (event_2818579140.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584683 < L_2818584684)) break Label3;
            h_2818579164 = event_2818579140.handlers[chckIndx(i_2818584683, 0, (event_2818579140.handlers).length - 1)];
            h_2818579164.Field1(arg_2818579141);
            i_2818584683 = addInt(i_2818584683, 1);
            if (!(((event_2818579140.handlers).length == L_2818584684))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818578913(self_2818578914, selections_2818578915, oldSelection_2818578916, notify_2818578917, record_2818578918) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818578919 = [];

    result_2818578919 = nimCopy(null, clampAndMergeSelections_2818572708(self_2818578914, selections_2818578915), NTI2415919123);
    var undoOp_2818578943 = {kind: 2, children: [], oldSelection: HEX40_2818578920(oldSelection_2818578916), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818578976 = 0;
      var selection_2818578977 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584658 = 0;
      var L_2818584659 = (result_2818578919).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584658 < L_2818584659)) break Label3;
            i_2818578976 = i_2818584658;
            selection_2818578977 = nimCopy(selection_2818578977, result_2818578919[chckIndx(i_2818584658, 0, (result_2818578919).length - 1)], NTI2415919115);
            Label4: {
              if (isEmpty_2415919476(selection_2818578977)) {
              break Label4;
              }
              
              var selection_2818578978 = normalized_2415919470(selection_2818578977);
              var startByte_2818578979 = byteOffset_2818578900(self_2818578914, selection_2818578978.Field0);
              var endByte_2818578980 = byteOffset_2818578900(self_2818578914, selection_2818578978.Field1);
              var deletedText_2818578981 = contentString_2818573989(self_2818578914, selection_2818578978);
              var colontmp__2818584671 = normalized_2415919470(selection_2818578978);
              var first_2818578982 = nimCopy(null, colontmp__2818584671["Field0"], NTI2415919113);
              var last_2818578983 = nimCopy(null, colontmp__2818584671["Field1"], NTI2415919113);
              if ((first_2818578982.Field0 == last_2818578983.Field0)) {
              delete_855639365(self_2818578914.lines, chckIndx(last_2818578983.Field0, 0, (self_2818578914.lines).length - 1), HEX2EHEX2E_805306418(first_2818578982.Field1, subInt(last_2818578983.Field1, 1)));
              }
              else {
                if ((first_2818578982.Field1 < lineLength_2818572661(self_2818578914, first_2818578982.Field0))) {
                delete_855639365(self_2818578914.lines, chckIndx(first_2818578982.Field0, 0, (self_2818578914.lines).length - 1), HEX2EHEX2E_805306418(first_2818578982.Field1, subInt(lineLength_2818572661(self_2818578914, first_2818578982.Field0), 1)));
                }
                
                self_2818578914.lines[chckIndx(first_2818578982.Field0, 0, (self_2818578914.lines).length - 1)].push.apply(self_2818578914.lines[chckIndx(first_2818578982.Field0, 0, (self_2818578914.lines).length - 1)], HEX5BHEX5D_855639319(self_2818578914.lines[chckIndx(last_2818578983.Field0, 0, (self_2818578914.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818578983.Field1, 1)));;
                delete_2818579029(self_2818578914, "lines", HEX2EHEX2E_805306418(addInt(first_2818578982.Field0, 1), last_2818578983.Field0));
              }
              
              result_2818578919[chckIndx(i_2818578976, 0, (result_2818578919).length - 1)] = nimCopy(result_2818578919[chckIndx(i_2818578976, 0, (result_2818578919).length - 1)], toSelection_2415919597(selection_2818578978.Field0), NTI2415919115);
              Label5: {
                var k_2818579088 = 0;
                var colontmp__2818584654 = 0;
                var colontmp__2818584655 = 0;
                colontmp__2818584654 = addInt(i_2818578976, 1);
                colontmp__2818584655 = (result_2818578919).length - 1;
                var res_2818584656 = colontmp__2818584654;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818584656 <= colontmp__2818584655)) break Label7;
                      k_2818579088 = res_2818584656;
                      result_2818578919[chckIndx(k_2818579088, 0, (result_2818578919).length - 1)] = nimCopy(result_2818578919[chckIndx(k_2818579088, 0, (result_2818578919).length - 1)], subtract_2415919617(result_2818578919[chckIndx(k_2818579088, 0, (result_2818578919).length - 1)], selection_2818578978), NTI2415919115);
                      res_2818584656 = addInt(res_2818584656, 1);
                    }
                };
              };
              if (!((self_2818578914.tsParser == null))) {
              var edit_2818579092 = {startIndex: startByte_2818578979, oldEndIndex: endByte_2818578980, newEndIndex: startByte_2818578979, startPosition: {row: selection_2818578978.Field0.Field0, column: selection_2818578978.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818578978.Field1.Field0, column: selection_2818578978.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818578978.Field0.Field0, column: selection_2818578978.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818578914.currentTree.edit(edit_2818579092);
              var strValue_2818579093 = nsuJoinSep(self_2818578914.lines, [10]);
              self_2818578914.currentTree = parseString_2885681211(self_2818578914.tsParser, strValue_2818579093, some_2818579094(self_2818578914.currentTree));
              }
              
              self_2818578914.version = addInt(self_2818578914.version, 1);
              if (record_2818578918) {
              var Temporary8 = undoOp_2818578943;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818578978.Field0, NTI2415919113), text: nimCopy(null, deletedText_2818578981, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818578917) {
              invoke_2818579138(self_2818578914.textDeleted, {Field0: self_2818578914, Field1: nimCopy(null, selection_2818578978, NTI2415919115)});
              }
              
            };
            i_2818584658 = addInt(i_2818584658, 1);
            if (!(((result_2818578919).length == L_2818584659))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818578917) {
    notifyTextChanged_2818573212(self_2818578914);
    }
    
      if (!record_2818578918) Temporary9 = false; else {        var Temporary10 = undoOp_2818578943;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818578914.undoOps.push(undoOp_2818578943);;
    self_2818578914.redoOps = nimCopy(null, [], NTI2818575832);
    }
    

  return result_2818578919;

}

function delete_2818584576(self_2818584577, selections_2818584578, notify_2818584579, record_2818584580) {
  var result_2818584581 = [];

  BeforeRet: {
    result_2818584581 = nimCopy(null, delete_2818578913(self_2818584577.document, selections_2818584578, selections_2818572790(self_2818584577), notify_2818584579, record_2818584580), NTI2818575803);
    break BeforeRet;
  };

  return result_2818584581;

}

function deleteJsWrapper_2818584572(self_2818584613, selections_2818584614, notify_2818584615, record_2818584616) {
  var result_2818584617 = [];

    result_2818584617 = nimCopy(null, delete_2818584576(self_2818584613, selections_2818584614, notify_2818584615, record_2818584616), NTI2818579393);

  return result_2818584617;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818584572(this, selections_, notify_, record_));};

function popLast_2818584803(deq_2818584805) {
    var Temporary1;

  var result_2818584806 = [];

    if ((deq_2818584805.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818584805.count = subInt(deq_2818584805.count, 1);
    deq_2818584805.tail = (subInt(deq_2818584805.tail, 1) & deq_2818584805.mask);
    Temporary1 = deq_2818584805.data[chckIndx(deq_2818584805.tail, 0, (deq_2818584805.data).length - 1)];
    deq_2818584805.data[chckIndx(deq_2818584805.tail, 0, (deq_2818584805.data).length - 1)] = genericReset(deq_2818584805.data[chckIndx(deq_2818584805.tail, 0, (deq_2818584805.data).length - 1)], NTI2415919123);
    result_2818584806 = nimCopy(null, Temporary1, NTI2415919123);

  return result_2818584806;

}

function addFirst_2818584822(deq_2818584824, item_2818584825) {
    expandIfNeeded_2818572823(deq_2818584824);
    deq_2818584824.count = addInt(deq_2818584824.count, 1);
    deq_2818584824.head = (subInt(deq_2818584824.head, 1) & deq_2818584824.mask);
    deq_2818584824.data[chckIndx(deq_2818584824.head, 0, (deq_2818584824.data).length - 1)] = nimCopy(null, item_2818584825, NTI2415919123);

  
}

function totalLineHeight_2768240810(self_2768240811) {
  var result_2768240812 = 0.0;

    result_2768240812 = (lineHeight_2768240794(self_2768240811) + lineDistance_2768240789(self_2768240811));

  return result_2768240812;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818582911(editor_2818582913, path_2818582914, default_2818582915) {
  var result_2818582921 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818582913 == null)) {
      result_2818582921 = default_2818582915;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2818582934 = HEX7BHEX7D_1627393316(editor_2818582913.options, nsuSplitString(path_2818582914, [46], -1));
      if ((nodeHEX60gensym163_2818582934 == null)) {
      result_2818582921 = default_2818582915;
      break BeforeRet;
      }
      
    };
    result_2818582921 = getFloat_1627390140(nodeHEX60gensym163_2818582934, default_2818582915);
    break BeforeRet;
  };

  return result_2818582921;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function scrollToCursor_2818582903(self_2818582904, cursor_2818582905, keepVerticalOffset_2818582906) {
    var Temporary1;

    var targetLine_2818582907 = cursor_2818582905.Field0;
    if (!((self_2818582904.editor.platform == null))) {
    Temporary1 = totalLineHeight_2768240810(self_2818582904.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2768240794(self_2818582904.editor.platform) + getOption_2818582911(self_2818582904.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2818582938 = Temporary1;
    if (keepVerticalOffset_2818582906) {
    var currentLineY_2818582939 = ((subInt(selection_2818572793(self_2818582904).Field1.Field0, self_2818582904.previousBaseIndex) * totalLineHeight_2818582938) + self_2818582904.scrollOffset);
    self_2818582904.previousBaseIndex = targetLine_2818582907;
    self_2818582904.scrollOffset = currentLineY_2818582939;
    }
    else {
      var targetLineY_2818582940 = ((subInt(targetLine_2818582907, self_2818582904.previousBaseIndex) * totalLineHeight_2818582938) + self_2818582904.scrollOffset);
      var margin_2818582955 = clamp_2634023065(getOption_2818582911(self_2818582904.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818582904.lastContentBounds.h * 0.5) - (totalLineHeight_2818582938 * 0.5)));
      if ((targetLineY_2818582940 < margin_2818582955)) {
      self_2818582904.scrollOffset = margin_2818582955;
      self_2818582904.previousBaseIndex = targetLine_2818582907;
      }
      else {
      if (((self_2818582904.lastContentBounds.h - margin_2818582955) < (targetLineY_2818582940 + totalLineHeight_2818582938))) {
      self_2818582904.scrollOffset = ((self_2818582904.lastContentBounds.h - margin_2818582955) - totalLineHeight_2818582938);
      self_2818582904.previousBaseIndex = targetLine_2818582907;
      }
      }
    }
    
    markDirty_2382364710(self_2818582904);

  
}

function selectPrev_2818584692(self_2818584693) {
    if ((0 < len_2818572953(self_2818584693.selectionHistory))) {
    var selection_2818584816 = popLast_2818584803(self_2818584693.selectionHistory);
    addFirst_2818584822(self_2818584693.selectionHistory, selections_2818572790(self_2818584693));
    self_2818584693.selectionsInternal = nimCopy(null, selection_2818584816, NTI2415919123);
    }
    
    scrollToCursor_2818582903(self_2818584693, selection_2818572793(self_2818584693).Field1, false);

  
}

function selectPrevJsWrapper_2818584688(self_2818584866) {
    selectPrev_2818584692(self_2818584866);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818584688(this));};

function selectNext_2818584888(self_2818584889) {
    if ((0 < len_2818572953(self_2818584889.selectionHistory))) {
    var selection_2818585002 = popFirst_2818573014(self_2818584889.selectionHistory);
    addLast_2818572814(self_2818584889.selectionHistory, selections_2818572790(self_2818584889));
    self_2818584889.selectionsInternal = nimCopy(null, selection_2818585002, NTI2415919123);
    }
    
    scrollToCursor_2818582903(self_2818584889, selection_2818572793(self_2818584889).Field1, false);

  
}

function selectNextJsWrapper_2818584884(self_2818585039) {
    selectNext_2818584888(self_2818585039);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818584884(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818585060(self_2818585061, cursor_2818585062) {
    var regex_2818585063 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818585064 = cursor_2818585062.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818585064) && (matchLen_2852126756(self_2818585061.document.lines[chckIndx(cursor_2818585062.Field0, 0, (self_2818585061.document.lines).length - 1)], regex_2818585063, subInt(first_2818585064, 1)) == 1))) break Label2;
          first_2818585064 = subInt(first_2818585064, 1);
        }
    };
    var last_2818585069 = cursor_2818585062.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818585069 < (self_2818585061.document.lines[chckIndx(cursor_2818585062.Field0, 0, (self_2818585061.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818585061.document.lines[chckIndx(cursor_2818585062.Field0, 0, (self_2818585061.document.lines).length - 1)], regex_2818585063, last_2818585069) == 1))) break Label4;
          last_2818585069 = addInt(last_2818585069, 1);
        }
    };
    selectionHEX3D_2818572799(self_2818585061, {Field0: {Field0: cursor_2818585062.Field0, Field1: first_2818585064}, Field1: {Field0: cursor_2818585062.Field0, Field1: last_2818585069}});

  
}

function selectInsideJsWrapper_2818585056(self_2818585102, cursor_2818585103) {
    selectInside_2818585060(self_2818585102, cursor_2818585103);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818585056(this, cursor_));};

function selectInsideCurrent_2818585137(self_2818585138) {
    selectInside_2818585060(self_2818585138, selection_2818572793(self_2818585138).Field1);

  
}

function selectInsideCurrentJsWrapper_2818585133(self_2818585166) {
    selectInsideCurrent_2818585137(self_2818585166);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818585133(this));};

function lineLength_2818572668(self_2818572669, line_2818572670) {
  var result_2818572671 = 0;

  BeforeRet: {
    if ((line_2818572670 < (self_2818572669.document.lines).length)) {
    result_2818572671 = (self_2818572669.document.lines[chckIndx(line_2818572670, 0, (self_2818572669.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572671 = 0;
    break BeforeRet;
  };

  return result_2818572671;

}

function selectLine_2818585187(self_2818585188, line_2818585189) {
    selectionHEX3D_2818572799(self_2818585188, {Field0: {Field0: line_2818585189, Field1: 0}, Field1: {Field0: line_2818585189, Field1: lineLength_2818572668(self_2818585188, line_2818585189)}});

  
}

function selectLineJsWrapper_2818585183(self_2818585218, line_2818585219) {
    selectLine_2818585187(self_2818585218, line_2818585219);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585183(this, line_));};

function selectLineCurrent_2818585245(self_2818585246) {
    selectLine_2818585187(self_2818585246, selection_2818572793(self_2818585246).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585241(self_2818585274) {
    selectLineCurrent_2818585245(self_2818585274);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585241(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818585368 = point_2885681331.row;
    var colontmp__2818585369 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818585368, Field1: colontmp__2818585369}, NTI2415919113);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818585370 = point_2885681335.row;
    var colontmp__2818585371 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818585370, Field1: colontmp__2818585371}, NTI2415919113);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585366 = startPoint_2885681328(node_2885681337);
    var colontmp__2818585367 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818585366, NTI2415919113), Field1: nimCopy(null, colontmp__2818585367, NTI2415919113)}, NTI2415919115);

  return result_2885681338;

}

function selectParentTs_2818585295(self_2818585296, selection_2818585297) {
  BeforeRet: {
    if ((self_2818585296.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818585301 = descendantForRange_2885681405(self_2818585296.document.currentTree.rootNode, selection_2818585297);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2415919167(getRange_2885681336(node_2818585301), selection_2818585297) && !((node_2818585301 == self_2818585296.document.currentTree.rootNode)))) break Label2;
          node_2818585301 = node_2818585301.parent;
        }
    };
    selectionHEX3D_2818572799(self_2818585296, getRange_2885681336(node_2818585301));
  };

  
}

function selectParentTsJsWrapper_2818585291(self_2818585338, selection_2818585339) {
    selectParentTs_2818585295(self_2818585338, selection_2818585339);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818585291(this, selection_));};

function selectParentCurrentTs_2818585378(self_2818585379) {
    selectParentTs_2818585295(self_2818585379, selection_2818572793(self_2818585379));

  
}

function selectParentCurrentTsJsWrapper_2818585374(self_2818585407) {
    selectParentCurrentTs_2818585378(self_2818585407);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818585374(this));};

function newSeq_2415919250(len_2415919252) {
  var result_2415919253 = [];

    result_2415919253 = new Array(len_2415919252); for (var i = 0 ; i < len_2415919252 ; ++i) { result_2415919253[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2415919253;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2415919279(a_2415919281, b_2415919282, lo_2415919283, m_2415919284, hi_2415919285, cmp_2415919288, order_2415919289) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2415919288(a_2415919281[chckIndx(m_2415919284, 0, (a_2415919281).length - 1)], a_2415919281[chckIndx(addInt(m_2415919284, 1), 0, (a_2415919281).length - 1)]), order_2415919289) <= 0)) {
    break BeforeRet;
    }
    
    var j_2415919290 = lo_2415919283;
    if (!((j_2415919290 <= m_2415919284))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2415919296 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2415919290 <= m_2415919284)) break Label2;
          b_2415919282[chckIndx(bb_2415919296, 0, (b_2415919282).length - 1)] = nimCopy(b_2415919282[chckIndx(bb_2415919296, 0, (b_2415919282).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)], NTI2415919115);
          bb_2415919296 = addInt(bb_2415919296, 1);
          j_2415919290 = addInt(j_2415919290, 1);
        }
    };
    var i_2415919307 = 0;
    var k_2415919308 = lo_2415919283;
    Label3: {
        Label4: while (true) {
        if (!((k_2415919308 < j_2415919290) && (j_2415919290 <= hi_2415919285))) break Label4;
          if ((HEX2A_1023410184(cmp_2415919288(b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)]), order_2415919289) <= 0)) {
          a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], NTI2415919115);
          i_2415919307 = addInt(i_2415919307, 1);
          }
          else {
            a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)], NTI2415919115);
            j_2415919290 = addInt(j_2415919290, 1);
          }
          
          k_2415919308 = addInt(k_2415919308, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2415919308 < j_2415919290)) break Label6;
          a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], NTI2415919115);
          k_2415919308 = addInt(k_2415919308, 1);
          i_2415919307 = addInt(i_2415919307, 1);
        }
    };
  };

  
}

function sort_2415919238(a_2415919240, cmp_2415919243, order_2415919244) {
    var n_2415919249 = (a_2415919240).length;
    var b_2415919276 = newSeq_2415919250(chckRange(divInt(n_2415919249, 2), 0, 2147483647));
    var s_2415919277 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2415919277 < n_2415919249)) break Label2;
          var m_2415919278 = subInt(subInt(n_2415919249, 1), s_2415919277);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2415919278)) break Label4;
                mergeAlt_2415919279(a_2415919240, b_2415919276, nimMax(addInt(subInt(m_2415919278, s_2415919277), 1), 0), m_2415919278, addInt(m_2415919278, s_2415919277), cmp_2415919243, order_2415919244);
                m_2415919278 = subInt(m_2415919278, mulInt(s_2415919277, 2));
              }
          };
          s_2415919277 = mulInt(s_2415919277, 2);
        }
    };

  
}

function sorted_2415919380(a_2415919382, cmp_2415919385, order_2415919386) {
  var result_2415919387 = [];

    result_2415919387 = nimCopy(null, newSeq_2415919250(chckRange((a_2415919382).length, 0, 2147483647)), NTI2415919163);
    Label1: {
      var i_2415919401 = 0;
      var colontmp__2818585485 = 0;
      colontmp__2818585485 = (a_2415919382).length - 1;
      var res_2818585486 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585486 <= colontmp__2818585485)) break Label3;
            i_2415919401 = res_2818585486;
            result_2415919387[chckIndx(i_2415919401, 0, (result_2415919387).length - 1)] = nimCopy(result_2415919387[chckIndx(i_2415919401, 0, (result_2415919387).length - 1)], a_2415919382[chckIndx(i_2415919401, 0, (a_2415919382).length - 1)], NTI2415919115);
            res_2818585486 = addInt(res_2818585486, 1);
          }
      };
    };
    sort_2415919238(result_2415919387, cmp_2415919385, order_2415919386);

  return result_2415919387;

}

function HEX3C_2415919210(x_2415919212, y_2415919213) {
  var result_2415919214 = false;

  BeforeRet: {
    var c_2415919224 = cmp_33557727(x_2415919212["Field0"], y_2415919213["Field0"]);
    if ((c_2415919224 < 0)) {
    result_2415919214 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919224)) {
    result_2415919214 = false;
    break BeforeRet;
    }
    
    var c_2415919229 = cmp_33557727(x_2415919212["Field1"], y_2415919213["Field1"]);
    if ((c_2415919229 < 0)) {
    result_2415919214 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919229)) {
    result_2415919214 = false;
    break BeforeRet;
    }
    
    result_2415919214 = false;
    break BeforeRet;
  };

  return result_2415919214;

}

function cmp_2415919201(x_2415919203, y_2415919204) {
  var result_2415919205 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2415919177(x_2415919203, y_2415919204)) {
    result_2415919205 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2415919210(x_2415919203, y_2415919204)) {
    result_2415919205 = -1;
    break BeforeRet;
    }
    
    result_2415919205 = 1;
    break BeforeRet;
  };

  return result_2415919205;

}

function HEX3C_2415919191(x_2415919193, y_2415919194) {
  var result_2415919195 = false;

  BeforeRet: {
    var c_2415919230 = cmp_2415919201(x_2415919193["Field0"], y_2415919194["Field0"]);
    if ((c_2415919230 < 0)) {
    result_2415919195 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919230)) {
    result_2415919195 = false;
    break BeforeRet;
    }
    
    var c_2415919235 = cmp_2415919201(x_2415919193["Field1"], y_2415919194["Field1"]);
    if ((c_2415919235 < 0)) {
    result_2415919195 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919235)) {
    result_2415919195 = false;
    break BeforeRet;
    }
    
    result_2415919195 = false;
    break BeforeRet;
  };

  return result_2415919195;

}

function cmp_2415919162(x_2415919164, y_2415919165) {
  var result_2415919166 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2415919167(x_2415919164, y_2415919165)) {
    result_2415919166 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2415919191(x_2415919164, y_2415919165)) {
    result_2415919166 = -1;
    break BeforeRet;
    }
    
    result_2415919166 = 1;
    break BeforeRet;
  };

  return result_2415919166;

}

function sorted_2415919369(a_2415919371, order_2415919372) {
  var result_2415919373 = [];

    result_2415919373 = nimCopy(null, sorted_2415919380(a_2415919371, cmp_2415919162, order_2415919372), NTI2415919243);

  return result_2415919373;

}

function normalized_2415919366(self_2415919367) {
  var result_2415919368 = [];

  BeforeRet: {
    result_2415919368 = nimCopy(null, sorted_2415919369(self_2415919367, 1), NTI2415919234);
    break BeforeRet;
  };

  return result_2415919368;

}

function HEX3DHEX3D_2818573052(x_2818573054, y_2818573055) {
  var result_2818573056 = false;

  BeforeRet: {
    var sameObject_2818573063 = false;
    sameObject_2818573063 = x_2818573054 === y_2818573055
    if (sameObject_2818573063) {
    result_2818573056 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573054).length == (y_2818573055).length))) {
    result_2818573056 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573077 = 0;
      var colontmp__2818585494 = 0;
      colontmp__2818585494 = subInt((x_2818573054).length, 1);
      var res_2818585495 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585495 <= colontmp__2818585494)) break Label3;
            i_2818573077 = res_2818585495;
            if (!(HEX3DHEX3D_2415919167(x_2818573054[chckIndx(i_2818573077, 0, (x_2818573054).length - 1)], y_2818573055[chckIndx(i_2818573077, 0, (y_2818573055).length - 1)]))) {
            result_2818573056 = false;
            break BeforeRet;
            }
            
            res_2818585495 = addInt(res_2818585495, 1);
          }
      };
    };
    result_2818573056 = true;
    break BeforeRet;
  };

  return result_2818573056;

}

function clampAndMergeSelections_2818572786(self_2818572787, selections_2818572788) {
  var result_2818572789 = [];

    result_2818572789 = nimCopy(null, clampAndMergeSelections_2818572708(self_2818572787.document, selections_2818572788), NTI2415919123);

  return result_2818572789;

}

function selectionsHEX3D_2818573049(self_2818573050, selections_2818573051) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573052(self_2818573050.selectionsInternal, selections_2818573051)) {
    break BeforeRet;
    }
    
    addLast_2818572814(self_2818573050.selectionHistory, self_2818573050.selectionsInternal);
    if ((100 < len_2818572953(self_2818573050.selectionHistory))) {
    var _ = popFirst_2818573014(self_2818573050.selectionHistory);
    }
    
    self_2818573050.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572786(self_2818573050, selections_2818573051), NTI2415919123);
    if (((self_2818573050.selectionsInternal).length == 0)) {
    self_2818573050.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2415919597({Field0: 0, Field1: 0}), NTI2415919115)], NTI2818572804);
    }
    
    markDirty_2382364710(self_2818573050);
  };

  
}

function edit_2818579627(self_2818579628, selections_2818579629, oldSelection_2818579630, text_2818579631, notify_2818579632) {
    
function HEX3Aanonymous_2818579634(s_2818579642) {
      var result_2818579645 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818579645 = nimCopy(result_2818579645, normalized_2415919470(s_2818579642), NTI2415919115);

      return result_2818579645;

    }

  var result_2818579633 = [];

    var selections_2818579653 = map_2818572723(selections_2818579629, HEX3Aanonymous_2818579634);
    result_2818579633 = nimCopy(null, delete_2818578913(self_2818579628, selections_2818579653, oldSelection_2818579630, false, true), NTI2818575803);
    result_2818579633 = nimCopy(null, insert_2818579410(self_2818579628, result_2818579633, oldSelection_2818579630, text_2818579631, true, true, true), NTI2818576158);

  return result_2818579633;

}

function insertText_2818585431(self_2818585432, text_2818585433) {
  BeforeRet: {
    if ((self_2818585432.document.singleLine && eqStrings(text_2818585433, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818585434 = normalized_2415919366(selections_2818572790(self_2818585432));
    selectionsHEX3D_2818573049(self_2818585432, edit_2818579627(self_2818585432.document, selections_2818572790(self_2818585432), selections_2818572790(self_2818585432), text_2818585433, true));
    updateTargetColumn_2818583895(self_2818585432, 3);
    if ((eqStrings(text_2818585433, [46]) || eqStrings(text_2818585433, [44]))) {
    self_2818585432.showCompletions = true;
    var _ = getCompletionsAsync_2818585422(self_2818585432);
    }
    else {
    if (self_2818585432.showCompletions) {
    var _ = getCompletionsAsync_2818585422(self_2818585432);
    }
    }
  };

  
}

function insertTextJsWrapper_2818585427(self_2818585463, text_2818585464) {
    insertText_2818585431(self_2818585463, text_2818585464);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818585427(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818579722() {
  var result_2818579729 = ({val: [], has: false});

  return result_2818579729;

}

function pop_2818579733(s_2818579735, s_2818579735_Idx) {
  var result_2818579736 = null;

    var L_2818579740 = subInt((s_2818579735[s_2818579735_Idx]).length, 1);
    result_2818579736 = s_2818579735[s_2818579735_Idx][chckIndx(L_2818579740, 0, (s_2818579735[s_2818579735_Idx]).length - 1)];
    if (s_2818579735[s_2818579735_Idx].length < chckRange(L_2818579740, 0, 2147483647)) { for (var i = s_2818579735[s_2818579735_Idx].length ; i < chckRange(L_2818579740, 0, 2147483647) ; ++i) s_2818579735[s_2818579735_Idx].push(null); }
               else { s_2818579735[s_2818579735_Idx].length = chckRange(L_2818579740, 0, 2147483647); };

  return result_2818579736;

}

function some_2818579746(val_2818579748) {
  var result_2818579749 = ({val: [], has: false});

    result_2818579749.has = true;
    result_2818579749.val = nimCopy(null, val_2818579748, NTI2818576343);

  return result_2818579749;

}

function doUndo_2818579663(document_2818579664, op_2818579665, oldSelection_2818579666, useOldSelection_2818579667, redoOps_2818579668, redoOps_2818579668_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818579669 = [];

    switch (op_2818579665.kind) {
    case 0:
      var Temporary1 = op_2818579665;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818579670 = contentString_2818573989(document_2818579664, Temporary1.selection);
      var Temporary2 = op_2818579665;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818579669 = nimCopy(null, delete_2818578913(document_2818579664, [nimCopy(null, Temporary2.selection, NTI2415919115)], op_2818579665.oldSelection, true, false), NTI2818575803);
      var Temporary3 = op_2818579665;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818579668[redoOps_2818579668_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2415919113), text: nimCopy(null, text_2818579670, NTI33554449), oldSelection: HEX40_2818578920(oldSelection_2818579666), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818579665;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818579665;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818579678 = insert_2818579410(document_2818579664, [nimCopy(null, toSelection_2415919597(Temporary4.cursor), NTI2415919115)], op_2818579665.oldSelection, Temporary5.text, true, false, false);
      result_2818579669 = nimCopy(null, selections_2818579678, NTI2818576158);
      var Temporary6 = op_2818579665;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818579668[redoOps_2818579668_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2415919113), Field1: nimCopy(null, selections_2818579678[chckIndx(0, 0, (selections_2818579678).length - 1)].Field1, NTI2415919113)}, NTI2415919115), oldSelection: HEX40_2818578920(oldSelection_2818579666), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818579669 = nimCopy(null, op_2818579665.oldSelection, NTI2818572295);
      var redoOp_2818579689 = {kind: 2, oldSelection: HEX40_2818578920(oldSelection_2818579666), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818579698 = 0;
        var colontmp__2818585596 = 0;
        var Temporary8 = op_2818579665;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818585596 = (Temporary8.children).length - 1;
        var res_2818585597 = colontmp__2818585596;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818585597)) break Label10;
              i_2818579698 = res_2818585597;
              var Temporary11 = op_2818579665;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818579689;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818579663(document_2818579664, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818579698, 0, (Temporary12).length - 1)], oldSelection_2818579666, useOldSelection_2818579667, Temporary13, "children");
              res_2818585597 = subInt(res_2818585597, 1);
            }
        };
      };
      redoOps_2818579668[redoOps_2818579668_Idx].push(redoOp_2818579689);;
      break;
    }
    if (useOldSelection_2818579667) {
    result_2818579669 = nimCopy(null, op_2818579665.oldSelection, NTI2818572295);
    }
    

  return result_2818579669;

}

function undo_2818579712(document_2818579713, oldSelection_2818579714, useOldSelection_2818579715) {
  var result_2818579721 = ({val: [], has: false});

  BeforeRet: {
    result_2818579721 = nimCopy(result_2818579721, none_2818579722(), NTI2818576418);
    if (((document_2818579713.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818579745 = pop_2818579733(document_2818579713, "undoOps");
    result_2818579721 = nimCopy(result_2818579721, some_2818579746(doUndo_2818579663(document_2818579713, op_2818579745, oldSelection_2818579714, useOldSelection_2818579715, document_2818579713, "redoOps")), NTI2818576418);
    break BeforeRet;
  };

  return result_2818579721;

}

function isSome_2818585512(self_2818585514) {
  var result_2818585515 = false;

    result_2818585515 = self_2818585514.has;

  return result_2818585515;

}

function isNone_2818585537(self_2818585539) {
  var result_2818585540 = false;

    result_2818585540 = !(self_2818585539.has);

  return result_2818585540;

}

function get_2818585529(self_2818585531) {
  var result_2818585532 = [];

    if (isNone_2818585537(self_2818585531)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818585532 = self_2818585531["val"];

  return result_2818585532;

}

function undo_2818585503(self_2818585504) {
      var Temporary1;

      var oHEX60gensym376_2818585507 = undo_2818579712(self_2818585504.document, selections_2818572790(self_2818585504), true);
      if (!isSome_2818585512(oHEX60gensym376_2818585507)) Temporary1 = false; else {        var selections_2818585552 = nimCopy(null, get_2818585529(oHEX60gensym376_2818585507), NTI2818576413);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573049(self_2818585504, selections_2818585552);
    }
    

  
}

function undoJsWrapper_2818585499(self_2818585580) {
    undo_2818585503(self_2818585580);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818585499(this));};

function doRedo_2818579760(document_2818579761, op_2818579762, oldSelection_2818579763, useOldSelection_2818579764, undoOps_2818579765, undoOps_2818579765_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818579766 = [];

    switch (op_2818579762.kind) {
    case 0:
      var Temporary1 = op_2818579762;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818579767 = contentString_2818573989(document_2818579761, Temporary1.selection);
      var Temporary2 = op_2818579762;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818579766 = nimCopy(null, delete_2818578913(document_2818579761, [nimCopy(null, Temporary2.selection, NTI2415919115)], op_2818579762.oldSelection, true, false), NTI2818575803);
      var Temporary3 = op_2818579762;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818579765[undoOps_2818579765_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2415919113), text: nimCopy(null, text_2818579767, NTI33554449), oldSelection: HEX40_2818578920(oldSelection_2818579763), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818579762;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818579762;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818579762;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818579766 = nimCopy(null, insert_2818579410(document_2818579761, [nimCopy(null, toSelection_2415919597(Temporary4.cursor), NTI2415919115)], [nimCopy(null, toSelection_2415919597(Temporary5.cursor), NTI2415919115)], Temporary6.text, true, false, false), NTI2818576158);
      var Temporary7 = op_2818579762;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818579765[undoOps_2818579765_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2415919113), Field1: nimCopy(null, result_2818579766[chckIndx(0, 0, (result_2818579766).length - 1)].Field1, NTI2415919113)}, NTI2415919115), oldSelection: HEX40_2818578920(oldSelection_2818579763), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818579766 = nimCopy(null, op_2818579762.oldSelection, NTI2818572295);
      var undoOp_2818579785 = {kind: 2, oldSelection: HEX40_2818578920(oldSelection_2818579763), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818579794 = 0;
        var colontmp__2818585676 = 0;
        var Temporary9 = op_2818579762;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818585676 = (Temporary9.children).length - 1;
        var res_2818585677 = colontmp__2818585676;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818585677)) break Label11;
              i_2818579794 = res_2818585677;
              var Temporary12 = op_2818579762;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818579785;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818579760(document_2818579761, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818579794, 0, (Temporary13).length - 1)], oldSelection_2818579763, useOldSelection_2818579764, Temporary14, "children");
              res_2818585677 = subInt(res_2818585677, 1);
            }
        };
      };
      undoOps_2818579765[undoOps_2818579765_Idx].push(undoOp_2818579785);;
      break;
    }
    if (useOldSelection_2818579764) {
    result_2818579766 = nimCopy(null, op_2818579762.oldSelection, NTI2818572295);
    }
    

  return result_2818579766;

}

function redo_2818579799(document_2818579800, oldSelection_2818579801, useOldSelection_2818579802) {
  var result_2818579804 = ({val: [], has: false});

  BeforeRet: {
    result_2818579804 = nimCopy(result_2818579804, none_2818579722(), NTI2818576418);
    if (((document_2818579800.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818579818 = pop_2818579733(document_2818579800, "redoOps");
    result_2818579804 = nimCopy(result_2818579804, some_2818579746(doRedo_2818579760(document_2818579800, op_2818579818, oldSelection_2818579801, useOldSelection_2818579802, document_2818579800, "undoOps")), NTI2818576418);
    break BeforeRet;
  };

  return result_2818579804;

}

function redo_2818585605(self_2818585606) {
      var Temporary1;

      var oHEX60gensym386_2818585609 = redo_2818579799(self_2818585606.document, selections_2818572790(self_2818585606), true);
      if (!isSome_2818585512(oHEX60gensym386_2818585609)) Temporary1 = false; else {        var selections_2818585632 = nimCopy(null, get_2818585529(oHEX60gensym386_2818585609), NTI2818576413);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573049(self_2818585606, selections_2818585632);
    }
    

  
}

function redoJsWrapper_2818585601(self_2818585660) {
    redo_2818585605(self_2818585660);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818585601(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818585685(self_2818585686, amount_2818585687) {
    HEX2BHEX3D_855640304(self_2818585686, "scrollOffset", amount_2818585687);
    markDirty_2382364710(self_2818585686);

  
}

function scrollTextJsWrapper_2818585681(self_2818585720, amount_2818585721) {
    scrollText_2818585685(self_2818585720, amount_2818585721);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818585681(this, amount_));};

function clampCursor_2818572696(self_2818572697, cursor_2818572698) {
  var result_2818572699 = {Field0: 0, Field1: 0};

    result_2818572699 = nimCopy(result_2818572699, clampCursor_2818572675(self_2818572697.document, cursor_2818572698), NTI2415919113);

  return result_2818572699;

}

function doMoveCursorColumn_2818582852(self_2818582853, cursor_2818582854, offset_2818582855) {
  var result_2818582856 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818582857 = nimCopy(null, cursor_2818582854, NTI2415919113);
    var column_2818582858 = addInt(cursor_2818582857.Field1, offset_2818582855);
    if ((column_2818582858 < 0)) {
    if ((0 < cursor_2818582857.Field0)) {
    cursor_2818582857.Field0 = subInt(cursor_2818582857.Field0, 1);
    cursor_2818582857.Field1 = lineLength_2818572668(self_2818582853, cursor_2818582857.Field0);
    }
    else {
      cursor_2818582857.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572668(self_2818582853, cursor_2818582857.Field0) < column_2818582858)) {
    if ((cursor_2818582857.Field0 < subInt((self_2818582853.document.lines).length, 1))) {
    cursor_2818582857.Field0 = addInt(cursor_2818582857.Field0, 1);
    cursor_2818582857.Field1 = 0;
    }
    else {
      cursor_2818582857.Field1 = lineLength_2818572668(self_2818582853, cursor_2818582857.Field0);
    }
    
    }
    else {
      cursor_2818582857.Field1 = column_2818582858;
    }
    }
    result_2818582856 = nimCopy(result_2818582856, clampCursor_2818572696(self_2818582853, cursor_2818582857), NTI2415919113);
    break BeforeRet;
  };

  return result_2818582856;

}

function HEX26_2818585815(x_2818585817, y_2818585818) {
  var result_2818585819 = [];

    result_2818585819 = new Array(chckRange(addInt((x_2818585817).length, (y_2818585818).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818585817).length, (y_2818585818).length), 0, 2147483647) ; ++i) { result_2818585819[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818585837 = 0;
      var colontmp__2818585892 = 0;
      colontmp__2818585892 = subInt((x_2818585817).length, 1);
      var res_2818585893 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585893 <= colontmp__2818585892)) break Label3;
            i_2818585837 = res_2818585893;
            result_2818585819[chckIndx(i_2818585837, 0, (result_2818585819).length - 1)] = nimCopy(result_2818585819[chckIndx(i_2818585837, 0, (result_2818585819).length - 1)], x_2818585817[chckIndx(i_2818585837, 0, (x_2818585817).length - 1)], NTI2415919115);
            res_2818585893 = addInt(res_2818585893, 1);
          }
      };
    };
    Label4: {
      var i_2818585845 = 0;
      var colontmp__2818585896 = 0;
      colontmp__2818585896 = subInt((y_2818585818).length, 1);
      var res_2818585897 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585897 <= colontmp__2818585896)) break Label6;
            i_2818585845 = res_2818585897;
            result_2818585819[chckIndx(addInt(i_2818585845, (x_2818585817).length), 0, (result_2818585819).length - 1)] = nimCopy(result_2818585819[chckIndx(addInt(i_2818585845, (x_2818585817).length), 0, (result_2818585819).length - 1)], y_2818585818[chckIndx(i_2818585845, 0, (y_2818585818).length - 1)], NTI2415919115);
            res_2818585897 = addInt(res_2818585897, 1);
          }
      };
    };

  return result_2818585819;

}

function duplicateLastSelection_2818585805(self_2818585806) {
    var Temporary1;

    var newSelection_2818585810 = toSelection_2415919597(doMoveCursorColumn_2818582852(self_2818585806, (Temporary1 = selections_2818572790(self_2818585806), Temporary1)[chckIndx((selections_2818572790(self_2818585806)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573049(self_2818585806, HEX26_2818585815(selections_2818572790(self_2818585806), [nimCopy(null, newSelection_2818585810, NTI2415919115)]));

  
}

function duplicateLastSelectionJsWrapper_2818585801(self_2818585876) {
    duplicateLastSelection_2818585805(self_2818585876);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818585801(this));};

function doMoveCursorLine_2818582862(self_2818582863, cursor_2818582864, offset_2818582865) {
  var result_2818582866 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818582867 = nimCopy(null, cursor_2818582864, NTI2415919113);
    var line_2818582868 = addInt(cursor_2818582867.Field0, offset_2818582865);
    if ((line_2818582868 < 0)) {
    var colontmp__2818585961 = 0;
    var colontmp__2818585962 = cursor_2818582867.Field1;
    cursor_2818582867 = nimCopy(cursor_2818582867, {Field0: colontmp__2818585961, Field1: colontmp__2818585962}, NTI2415919113);
    }
    else {
    if (((self_2818582863.document.lines).length <= line_2818582868)) {
    var colontmp__2818585963 = subInt((self_2818582863.document.lines).length, 1);
    var colontmp__2818585964 = cursor_2818582867.Field1;
    cursor_2818582867 = nimCopy(cursor_2818582867, {Field0: colontmp__2818585963, Field1: colontmp__2818585964}, NTI2415919113);
    }
    else {
      cursor_2818582867.Field0 = line_2818582868;
      cursor_2818582867.Field1 = self_2818582863.targetColumn;
    }
    }
    result_2818582866 = nimCopy(result_2818582866, clampCursor_2818572696(self_2818582863, cursor_2818582867), NTI2415919113);
    break BeforeRet;
  };

  return result_2818582866;

}

function addCursorBelow_2818585905(self_2818585906) {
    var Temporary1;

    var newCursor_2818585910 = toSelection_2415919597(doMoveCursorLine_2818582862(self_2818585906, (Temporary1 = selections_2818572790(self_2818585906), Temporary1)[chckIndx((selections_2818572790(self_2818585906)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2415919574(selections_2818572790(self_2818585906), newCursor_2818585910))) {
    selectionsHEX3D_2818573049(self_2818585906, HEX26_2818585815(selections_2818572790(self_2818585906), [nimCopy(null, newCursor_2818585910, NTI2415919115)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818585901(self_2818585946) {
    addCursorBelow_2818585905(self_2818585946);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818585901(this));};

function addCursorAbove_2818585971(self_2818585972) {
    var Temporary1;

    var newCursor_2818585976 = toSelection_2415919597(doMoveCursorLine_2818582862(self_2818585972, (Temporary1 = selections_2818572790(self_2818585972), Temporary1)[chckIndx((selections_2818572790(self_2818585972)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2415919574(selections_2818572790(self_2818585972), newCursor_2818585976))) {
    selectionsHEX3D_2818573049(self_2818585972, HEX26_2818585815(selections_2818572790(self_2818585972), [nimCopy(null, newCursor_2818585976, NTI2415919115)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818585967(self_2818586012) {
    addCursorAbove_2818585971(self_2818586012);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818585967(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818580606(t_2818580609, key_2818580610, hc_2818580611, hc_2818580611_Idx) {
  var result_2818580612 = 0;

  BeforeRet: {
    hc_2818580611[hc_2818580611_Idx] = hash_1325400236(key_2818580610);
    if ((hc_2818580611[hc_2818580611_Idx] == 0)) {
    hc_2818580611[hc_2818580611_Idx] = 314159265;
    }
    
    if (((t_2818580609.data).length == 0)) {
    result_2818580612 = -1;
    break BeforeRet;
    }
    
    var h_2818580671 = (hc_2818580611[hc_2818580611_Idx] & (t_2818580609.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818580609.data[chckIndx(h_2818580671, 0, (t_2818580609.data).length - 1)].Field0)) break Label2;
          if (((t_2818580609.data[chckIndx(h_2818580671, 0, (t_2818580609.data).length - 1)].Field0 == hc_2818580611[hc_2818580611_Idx]) && (t_2818580609.data[chckIndx(h_2818580671, 0, (t_2818580609.data).length - 1)].Field1 == key_2818580610))) {
          result_2818580612 = h_2818580671;
          break BeforeRet;
          }
          
          h_2818580671 = nextTry_1308622883(h_2818580671, (t_2818580609.data).length - 1);
        }
    };
    result_2818580612 = subInt(-1, h_2818580671);
  };

  return result_2818580612;

}

function hasKey_2818586098(t_2818586101, key_2818586102) {
  var result_2818586103 = false;

    var hc_2818586104 = [0];
    result_2818586103 = (0 <= rawGet_2818580606(t_2818586101, key_2818586102, hc_2818586104, 0));

  return result_2818586103;

}

function contains_2818586092(t_2818586095, key_2818586096) {
  var result_2818586097 = false;

  BeforeRet: {
    result_2818586097 = hasKey_2818586098(t_2818586095, key_2818586096);
    break BeforeRet;
  };

  return result_2818586097;

}

function raiseKeyError_1291850850(key_1291850852) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850852) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586184(t_2818586187, key_2818586188) {
  var result_2818586189 = null;
  var result_2818586189_Idx = 0;

    var hcHEX60gensym22_2818586190 = [0];
    var indexHEX60gensym22_2818586197 = rawGet_2818580606(t_2818586187, key_2818586188, hcHEX60gensym22_2818586190, 0);
    if ((0 <= indexHEX60gensym22_2818586197)) {
    result_2818586189 = t_2818586187.data[chckIndx(indexHEX60gensym22_2818586197, 0, (t_2818586187.data).length - 1)]; result_2818586189_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818586188);
    }
    

  return [result_2818586189, result_2818586189_Idx];

}

function HEX3C_2415919431(a_2415919432, b_2415919433) {
  var result_2415919434 = false;

  BeforeRet: {
    if ((a_2415919432.Field0 < b_2415919433.Field0)) {
    result_2415919434 = true;
    break BeforeRet;
    }
    else {
    if (((a_2415919432.Field0 == b_2415919433.Field0) && (a_2415919432.Field1 < b_2415919433.Field1))) {
    result_2415919434 = true;
    break BeforeRet;
    }
    else {
      result_2415919434 = false;
      break BeforeRet;
    }
    }
  };

  return result_2415919434;

}

function getPrevFindResult_2818582885(self_2818582886, cursor_2818582887, offset_2818582888) {
            var Temporary4;

  var result_2818586037 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586038 = 0;
    Label1: {
      var line_2818586044 = 0;
      var res_2818586356 = cursor_2818582887.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818586356)) break Label3;
            line_2818586044 = res_2818586356;
            if (contains_2818586092(self_2818582886.searchResults, line_2818586044)) {
            var selections_2818586274 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586184(self_2818582886.searchResults, line_2818586044), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818586283 = 0;
              var colontmp__2818586353 = 0;
              colontmp__2818586353 = (selections_2818586274).length - 1;
              var res_2818586354 = colontmp__2818586353;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818586354)) break Label7;
                    k_2818586283 = res_2818586354;
                    if (HEX3C_2415919431(selections_2818586274[chckIndx(k_2818586283, 0, (selections_2818586274).length - 1)].Field1, cursor_2818582887)) {
                    if ((i_2818586038 == offset_2818582888)) {
                    result_2818586037 = nimCopy(result_2818586037, selections_2818586274[chckIndx(k_2818586283, 0, (selections_2818586274).length - 1)], NTI2415919115);
                    break BeforeRet;
                    }
                    
                    i_2818586038 = addInt(i_2818586038, 1);
                    }
                    
                    res_2818586354 = subInt(res_2818586354, 1);
                  }
              };
            };
            }
            
            res_2818586356 = subInt(res_2818586356, 1);
          }
      };
    };
    result_2818586037 = nimCopy(result_2818586037, toSelection_2415919597(cursor_2818582887), NTI2415919115);
    break BeforeRet;
  };

  return result_2818586037;

}

function getPrevFindResultJsWrapper_2818586029(self_2818586319, cursor_2818586320, offset_2818586321) {
  var result_2818586322 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818586322 = nimCopy(result_2818586322, getPrevFindResult_2818582885(self_2818586319, cursor_2818586320, offset_2818586321), NTI2415919115);

  return result_2818586322;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818586029(this, cursor_, offset_));};

function getNextFindResult_2818582889(self_2818582890, cursor_2818582891, offset_2818582892) {
              var Temporary5;

  var result_2818586369 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586370 = 0;
    Label1: {
      var line_2818586378 = 0;
      var colontmp__2818586587 = 0;
      colontmp__2818586587 = (self_2818582890.document.lines).length - 1;
      var res_2818586588 = cursor_2818582891.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586588 <= colontmp__2818586587)) break Label3;
            line_2818586378 = res_2818586588;
            if (contains_2818586092(self_2818582890.searchResults, line_2818586378)) {
            Label4: {
              var selection_2818586512 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818586582 = [];
              colontmp__2818586582 = (Temporary5 = HEX5BHEX5D_2818586184(self_2818582890.searchResults, line_2818586378), Temporary5)[0][Temporary5[1]];
              var i_2818586584 = 0;
              var L_2818586585 = (colontmp__2818586582).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818586584 < L_2818586585)) break Label7;
                    selection_2818586512 = colontmp__2818586582[chckIndx(i_2818586584, 0, (colontmp__2818586582).length - 1)];
                    if (HEX3C_2415919431(cursor_2818582891, selection_2818586512.Field0)) {
                    if ((i_2818586370 == offset_2818582892)) {
                    result_2818586369 = nimCopy(result_2818586369, selection_2818586512, NTI2415919115);
                    break BeforeRet;
                    }
                    
                    i_2818586370 = addInt(i_2818586370, 1);
                    }
                    
                    i_2818586584 = addInt(i_2818586584, 1);
                    if (!(((colontmp__2818586582).length == L_2818586585))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818586588 = addInt(res_2818586588, 1);
          }
      };
    };
    result_2818586369 = nimCopy(result_2818586369, toSelection_2415919597(cursor_2818582891), NTI2415919115);
    break BeforeRet;
  };

  return result_2818586369;

}

function getNextFindResultJsWrapper_2818586361(self_2818586548, cursor_2818586549, offset_2818586550) {
  var result_2818586551 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818586551 = nimCopy(result_2818586551, getNextFindResult_2818582889(self_2818586548, cursor_2818586549, offset_2818586550), NTI2415919115);

  return result_2818586551;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818586361(this, cursor_, offset_));};

function addNextFindResultToSelection_2818586596(self_2818586597) {
    selectionsHEX3D_2818573049(self_2818586597, HEX26_2818585815(selections_2818572790(self_2818586597), [nimCopy(null, getNextFindResult_2818582889(self_2818586597, selection_2818572793(self_2818586597).Field1, 0), NTI2415919115)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818586592(self_2818586633) {
    addNextFindResultToSelection_2818586596(self_2818586633);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818586592(this));};

function addPrevFindResultToSelection_2818586654(self_2818586655) {
    selectionsHEX3D_2818573049(self_2818586655, HEX26_2818585815(selections_2818572790(self_2818586655), [nimCopy(null, getPrevFindResult_2818582885(self_2818586655, selection_2818572793(self_2818586655).Field0, 0), NTI2415919115)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818586650(self_2818586691) {
    addPrevFindResultToSelection_2818586654(self_2818586691);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818586650(this));};

function len_2818586772(t_2818586775) {
  var result_2818586776 = 0;

    result_2818586776 = t_2818586775.counter;

  return result_2818586776;

}

function setAllFindResultToSelection_2818586712(self_2818586713) {
    var selections_2818586718 = [];
    Label1: {
      var searchResults_2818586990 = [];
      var L_2818587059 = len_2818586772(self_2818586713.searchResults);
      Label2: {
        var h_2818587061 = 0;
        var colontmp__2818587062 = 0;
        colontmp__2818587062 = (self_2818586713.searchResults.data).length - 1;
        var res_2818587063 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818587063 <= colontmp__2818587062)) break Label4;
              h_2818587061 = res_2818587063;
              if (isFilled_1308622880(self_2818586713.searchResults.data[chckIndx(h_2818587061, 0, (self_2818586713.searchResults.data).length - 1)].Field0)) {
              searchResults_2818586990 = self_2818586713.searchResults.data[chckIndx(h_2818587061, 0, (self_2818586713.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818586994 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818587052 = 0;
                var L_2818587053 = (searchResults_2818586990).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818587052 < L_2818587053)) break Label7;
                      s_2818586994 = searchResults_2818586990[chckIndx(i_2818587052, 0, (searchResults_2818586990).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818586994, NTI2415919115);
                      selections_2818586718.push(Temporary8);;
                      i_2818587052 = addInt(i_2818587052, 1);
                      if (!(((searchResults_2818586990).length == L_2818587053))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818586772(self_2818586713.searchResults) == L_2818587059))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818587063 = addInt(res_2818587063, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573049(self_2818586713, selections_2818586718);

  
}

function setAllFindResultToSelectionJsWrapper_2818586708(self_2818587035) {
    setAllFindResultToSelection_2818586712(self_2818587035);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818586708(this));};

function clearSelections_2818587071(self_2818587072) {
    if ((1 < (selections_2818572790(self_2818587072)).length)) {
    selectionHEX3D_2818572799(self_2818587072, selection_2818572793(self_2818587072));
    }
    else {
    selectionHEX3D_2818572799(self_2818587072, toSelection_2415919597(selection_2818572793(self_2818587072).Field1));
    }
    

  
}

function clearSelectionsJsWrapper_2818587067(self_2818587106) {
    clearSelections_2818587071(self_2818587106);

  
}
editor_text_prototype.clearSelections = function() { return (clearSelectionsJsWrapper_2818587067(this));};

function map_2818583106(s_2818583109, op_2818583111) {
  var result_2818583112 = [];

    result_2818583112 = new Array(chckRange((s_2818583109).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818583109).length, 0, 2147483647) ; ++i) { result_2818583112[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818583127 = 0;
      var colontmp__2818587226 = 0;
      colontmp__2818587226 = (s_2818583109).length;
      var i_2818587227 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587227 < colontmp__2818587226)) break Label3;
            i_2818583127 = i_2818587227;
            result_2818583112[chckIndx(i_2818583127, 0, (result_2818583112).length - 1)] = nimCopy(result_2818583112[chckIndx(i_2818583127, 0, (result_2818583112).length - 1)], op_2818583111(s_2818583109[chckIndx(i_2818583127, 0, (s_2818583109).length - 1)]), NTI2818578074);
            i_2818587227 = addInt(i_2818587227, 1);
          }
      };
    };

  return result_2818583112;

}

function moveCursor_2818583051(self_2818583052, cursor_2818583053, movement_2818583058, offset_2818583059, all_2818583060) {
      
function HEX3Aanonymous_2818583071(s_2818583078) {
        var result_2818583081 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818583081 = nimCopy(result_2818583081, toSelection_2415919597(movement_2818583058(self_2818583052, s_2818583078.Field1, offset_2818583059)), NTI2415919115);

        return result_2818583081;

      }
      
function HEX3Aanonymous_2818583095(s_2818583102) {
        var result_2818583105 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587213 = movement_2818583058(self_2818583052, s_2818583102.Field0, offset_2818583059);
          var colontmp__2818587214 = nimCopy(null, s_2818583102.Field1, NTI2415919113);
          result_2818583105 = nimCopy(result_2818583105, {Field0: nimCopy(null, colontmp__2818587213, NTI2415919113), Field1: nimCopy(null, colontmp__2818587214, NTI2415919113)}, NTI2818578074);

        return result_2818583105;

      }
      
function HEX3Aanonymous_2818583138(s_2818583145) {
        var result_2818583148 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587217 = nimCopy(null, s_2818583145.Field0, NTI2415919113);
          var colontmp__2818587218 = movement_2818583058(self_2818583052, s_2818583145.Field1, offset_2818583059);
          result_2818583148 = nimCopy(result_2818583148, {Field0: nimCopy(null, colontmp__2818587217, NTI2415919113), Field1: nimCopy(null, colontmp__2818587218, NTI2415919113)}, NTI2818578116);

        return result_2818583148;

      }
      
function HEX3Aanonymous_2818583165(s_2818583172) {
        var result_2818583175 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587221 = nimCopy(null, s_2818583172.Field1, NTI2415919113);
          var colontmp__2818587222 = movement_2818583058(self_2818583052, s_2818583172.Field1, offset_2818583059);
          result_2818583175 = nimCopy(result_2818583175, {Field0: nimCopy(null, colontmp__2818587221, NTI2415919113), Field1: nimCopy(null, colontmp__2818587222, NTI2415919113)}, NTI2818578148);

        return result_2818583175;

      }

    switch (cursor_2818583053) {
    case 0:
      var configCursor_2818583070 = getOption_2818582990(self_2818583052.editor, getContextWithMode_2818582956(self_2818583052, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818583051(self_2818583052, configCursor_2818583070, movement_2818583058, offset_2818583059, all_2818583060);
      break;
    case 1:
      if (all_2818583060) {
      selectionsHEX3D_2818573049(self_2818583052, map_2818572723(selections_2818572790(self_2818583052), HEX3Aanonymous_2818583071));
      }
      else {
        var selections_2818583088 = selections_2818572790(self_2818583052);
        selections_2818583088[chckIndx((selections_2818583088).length - 1, 0, (selections_2818583088).length - 1)] = nimCopy(selections_2818583088[chckIndx((selections_2818583088).length - 1, 0, (selections_2818583088).length - 1)], toSelection_2415919597(movement_2818583058(self_2818583052, selections_2818583088[chckIndx((selections_2818583088).length - 1, 0, (selections_2818583088).length - 1)].Field1, offset_2818583059)), NTI2415919115);
        selectionsHEX3D_2818573049(self_2818583052, selections_2818583088);
      }
      
      scrollToCursor_2818582903(self_2818583052, selection_2818572793(self_2818583052).Field1, false);
      break;
    case 2:
      if (all_2818583060) {
      selectionsHEX3D_2818573049(self_2818583052, map_2818583106(selections_2818572790(self_2818583052), HEX3Aanonymous_2818583095));
      }
      else {
        var selections_2818583128 = selections_2818572790(self_2818583052);
        var colontmp__2818587215 = movement_2818583058(self_2818583052, selections_2818583128[chckIndx((selections_2818583128).length - 1, 0, (selections_2818583128).length - 1)].Field0, offset_2818583059);
        var colontmp__2818587216 = nimCopy(null, selections_2818583128[chckIndx((selections_2818583128).length - 1, 0, (selections_2818583128).length - 1)].Field1, NTI2415919113);
        selections_2818583128[chckIndx((selections_2818583128).length - 1, 0, (selections_2818583128).length - 1)] = nimCopy(selections_2818583128[chckIndx((selections_2818583128).length - 1, 0, (selections_2818583128).length - 1)], {Field0: nimCopy(null, colontmp__2818587215, NTI2415919113), Field1: nimCopy(null, colontmp__2818587216, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2818573049(self_2818583052, selections_2818583128);
      }
      
      scrollToCursor_2818582903(self_2818583052, selection_2818572793(self_2818583052).Field0, false);
      break;
    case 3:
      if (all_2818583060) {
      selectionsHEX3D_2818573049(self_2818583052, map_2818583106(selections_2818572790(self_2818583052), HEX3Aanonymous_2818583138));
      }
      else {
        var selections_2818583155 = selections_2818572790(self_2818583052);
        var colontmp__2818587219 = nimCopy(null, selections_2818583155[chckIndx((selections_2818583155).length - 1, 0, (selections_2818583155).length - 1)].Field0, NTI2415919113);
        var colontmp__2818587220 = movement_2818583058(self_2818583052, selections_2818583155[chckIndx((selections_2818583155).length - 1, 0, (selections_2818583155).length - 1)].Field1, offset_2818583059);
        selections_2818583155[chckIndx((selections_2818583155).length - 1, 0, (selections_2818583155).length - 1)] = nimCopy(selections_2818583155[chckIndx((selections_2818583155).length - 1, 0, (selections_2818583155).length - 1)], {Field0: nimCopy(null, colontmp__2818587219, NTI2415919113), Field1: nimCopy(null, colontmp__2818587220, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2818573049(self_2818583052, selections_2818583155);
      }
      
      scrollToCursor_2818582903(self_2818583052, selection_2818572793(self_2818583052).Field1, false);
      break;
    case 4:
      if (all_2818583060) {
      selectionsHEX3D_2818573049(self_2818583052, map_2818583106(selections_2818572790(self_2818583052), HEX3Aanonymous_2818583165));
      }
      else {
        var selections_2818583182 = selections_2818572790(self_2818583052);
        var colontmp__2818587223 = nimCopy(null, selections_2818583182[chckIndx((selections_2818583182).length - 1, 0, (selections_2818583182).length - 1)].Field1, NTI2415919113);
        var colontmp__2818587224 = movement_2818583058(self_2818583052, selections_2818583182[chckIndx((selections_2818583182).length - 1, 0, (selections_2818583182).length - 1)].Field1, offset_2818583059);
        selections_2818583182[chckIndx((selections_2818583182).length - 1, 0, (selections_2818583182).length - 1)] = nimCopy(selections_2818583182[chckIndx((selections_2818583182).length - 1, 0, (selections_2818583182).length - 1)], {Field0: nimCopy(null, colontmp__2818587223, NTI2415919113), Field1: nimCopy(null, colontmp__2818587224, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2818573049(self_2818583052, selections_2818583182);
      }
      
      scrollToCursor_2818582903(self_2818583052, selection_2818572793(self_2818583052).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818587127(self_2818587128, distance_2818587129, cursor_2818587130, all_2818587131) {
    moveCursor_2818583051(self_2818587128, cursor_2818587130, doMoveCursorColumn_2818582852, distance_2818587129, all_2818587131);
    updateTargetColumn_2818583895(self_2818587128, cursor_2818587130);

  
}

function moveCursorColumnJsWrapper_2818587123(self_2818587180, distance_2818587181, cursor_2818587182, all_2818587183) {
    moveCursorColumn_2818587127(self_2818587180, distance_2818587181, cursor_2818587182, all_2818587183);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818587123(this, distance_, cursor_, all_));};

function moveCursorLine_2818587235(self_2818587236, distance_2818587237, cursor_2818587238, all_2818587239) {
    moveCursor_2818583051(self_2818587236, cursor_2818587238, doMoveCursorLine_2818582862, distance_2818587237, all_2818587239);

  
}

function moveCursorLineJsWrapper_2818587231(self_2818587270, distance_2818587271, cursor_2818587272, all_2818587273) {
    moveCursorLine_2818587235(self_2818587270, distance_2818587271, cursor_2818587272, all_2818587273);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818587231(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818582875(self_2818582876, cursor_2818582877, offset_2818582878) {
  var result_2818582879 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818587369 = cursor_2818582877.Field0;
    var colontmp__2818587370 = 0;
    result_2818582879 = nimCopy(result_2818582879, {Field0: colontmp__2818587369, Field1: colontmp__2818587370}, NTI2415919113);
    break BeforeRet;
  };

  return result_2818582879;

}

function moveCursorHome_2818587309(self_2818587310, cursor_2818587311, all_2818587312) {
    moveCursor_2818583051(self_2818587310, cursor_2818587311, doMoveCursorHome_2818582875, 0, all_2818587312);
    updateTargetColumn_2818583895(self_2818587310, cursor_2818587311);

  
}

function moveCursorHomeJsWrapper_2818587305(self_2818587342, cursor_2818587343, all_2818587344) {
    moveCursorHome_2818587309(self_2818587342, cursor_2818587343, all_2818587344);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818587305(this, cursor_, all_));};

function doMoveCursorEnd_2818582880(self_2818582881, cursor_2818582882, offset_2818582883) {
  var result_2818582884 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818587437 = cursor_2818582882.Field0;
    var colontmp__2818587438 = lineLength_2818572661(self_2818582881.document, cursor_2818582882.Field0);
    result_2818582884 = nimCopy(result_2818582884, {Field0: colontmp__2818587437, Field1: colontmp__2818587438}, NTI2415919113);
    break BeforeRet;
  };

  return result_2818582884;

}

function moveCursorEnd_2818587377(self_2818587378, cursor_2818587379, all_2818587380) {
    moveCursor_2818583051(self_2818587378, cursor_2818587379, doMoveCursorEnd_2818582880, 0, all_2818587380);
    updateTargetColumn_2818583895(self_2818587378, cursor_2818587379);

  
}

function moveCursorEndJsWrapper_2818587373(self_2818587410, cursor_2818587411, all_2818587412) {
    moveCursorEnd_2818587377(self_2818587410, cursor_2818587411, all_2818587412);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818587373(this, cursor_, all_));};

function getLine_2818572654(self_2818572655, line_2818572656) {
  var result_2818572657 = [];

  BeforeRet: {
    if ((line_2818572656 < (self_2818572655.lines).length)) {
    result_2818572657 = nimCopy(null, self_2818572655.lines[chckIndx(line_2818572656, 0, (self_2818572655.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572657 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572657;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818587445(self_2818587446, str_2818587447, cursor_2818587448, all_2818587449) {
    str_2818587447 = nimCopy(null, str_2818587447, NTI33554449);
    
function doMoveCursorTo_2818587450(self_2818587451, cursor_2818587452, offset_2818587453) {
      var result_2818587454 = {Field0: 0, Field1: 0};

        var line_2818587455 = getLine_2818572654(self_2818587451.document, cursor_2818587452.Field0);
        result_2818587454 = nimCopy(result_2818587454, cursor_2818587452, NTI2415919113);
        var index_2818587456 = nsuFindStr(line_2818587455, str_2818587447, chckRange(addInt(cursor_2818587452.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818587456)) {
        var colontmp__2818587520 = cursor_2818587452.Field0;
        var colontmp__2818587521 = index_2818587456;
        result_2818587454 = nimCopy(result_2818587454, {Field0: colontmp__2818587520, Field1: colontmp__2818587521}, NTI2415919113);
        }
        

      return result_2818587454;

    }

    moveCursor_2818583051(self_2818587446, cursor_2818587448, doMoveCursorTo_2818587450, 0, all_2818587449);
    updateTargetColumn_2818583895(self_2818587446, cursor_2818587448);

  
}

function moveCursorToJsWrapper_2818587441(self_2818587487, str_2818587488, cursor_2818587489, all_2818587490) {
    moveCursorTo_2818587445(self_2818587487, str_2818587488, cursor_2818587489, all_2818587490);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818587441(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818587528(self_2818587529, str_2818587530, cursor_2818587531, all_2818587532) {
    str_2818587530 = nimCopy(null, str_2818587530, NTI33554449);
    
function doMoveCursorBefore_2818587533(self_2818587534, cursor_2818587535, offset_2818587536) {
      var result_2818587537 = {Field0: 0, Field1: 0};

        var line_2818587538 = getLine_2818572654(self_2818587534.document, cursor_2818587535.Field0);
        result_2818587537 = nimCopy(result_2818587537, cursor_2818587535, NTI2415919113);
        var index_2818587539 = nsuFindStr(line_2818587538, str_2818587530, chckRange(cursor_2818587535.Field1, 0, 2147483647), -1);
        if ((0 < index_2818587539)) {
        var colontmp__2818587603 = cursor_2818587535.Field0;
        var colontmp__2818587604 = subInt(index_2818587539, 1);
        result_2818587537 = nimCopy(result_2818587537, {Field0: colontmp__2818587603, Field1: colontmp__2818587604}, NTI2415919113);
        }
        

      return result_2818587537;

    }

    moveCursor_2818583051(self_2818587529, cursor_2818587531, doMoveCursorBefore_2818587533, 0, all_2818587532);
    updateTargetColumn_2818583895(self_2818587529, cursor_2818587531);

  
}

function moveCursorBeforeJsWrapper_2818587524(self_2818587570, str_2818587571, cursor_2818587572, all_2818587573) {
    moveCursorBefore_2818587528(self_2818587570, str_2818587571, cursor_2818587572, all_2818587573);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818587524(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818582898(self_2818582899, cursor_2818582900, offset_2818582901) {
  var result_2818582902 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818582902 = nimCopy(result_2818582902, getNextFindResult_2818582889(self_2818582899, cursor_2818582900, offset_2818582901).Field0, NTI2415919113);
    break BeforeRet;
  };

  return result_2818582902;

}

function moveCursorNextFindResult_2818587611(self_2818587612, cursor_2818587613, all_2818587614) {
    moveCursor_2818583051(self_2818587612, cursor_2818587613, doMoveCursorNextFindResult_2818582898, 0, all_2818587614);
    updateTargetColumn_2818583895(self_2818587612, cursor_2818587613);

  
}

function moveCursorNextFindResultJsWrapper_2818587607(self_2818587644, cursor_2818587645, all_2818587646) {
    moveCursorNextFindResult_2818587611(self_2818587644, cursor_2818587645, all_2818587646);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818587607(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818582893(self_2818582894, cursor_2818582895, offset_2818582896) {
  var result_2818582897 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818582897 = nimCopy(result_2818582897, getPrevFindResult_2818582885(self_2818582894, cursor_2818582895, offset_2818582896).Field0, NTI2415919113);
    break BeforeRet;
  };

  return result_2818582897;

}

function moveCursorPrevFindResult_2818587677(self_2818587678, cursor_2818587679, all_2818587680) {
    moveCursor_2818583051(self_2818587678, cursor_2818587679, doMoveCursorPrevFindResult_2818582893, 0, all_2818587680);
    updateTargetColumn_2818583895(self_2818587678, cursor_2818587679);

  
}

function moveCursorPrevFindResultJsWrapper_2818587673(self_2818587710, cursor_2818587711, all_2818587712) {
    moveCursorPrevFindResult_2818587677(self_2818587710, cursor_2818587711, all_2818587712);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818587673(this, cursor_, all_));};

function scrollToCursor_2818583332(self_2818583333, cursor_2818583334) {
    scrollToCursor_2818582903(self_2818583333, getCursor_2818582986(self_2818583333, cursor_2818583334), false);

  
}

function scrollToCursorJsWrapper_2818587739(self_2818587774, cursor_2818587775) {
    scrollToCursor_2818583332(self_2818587774, cursor_2818587775);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818587739(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818587846 = 0;
      colontmp__2818587846 = subInt((path_1426063614).length, 1);
      var res_2818587847 = colontmp__2818587846;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818587847)) break Label3;
            i_1426063627 = res_2818587847;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818587847 = subInt(res_2818587847, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2315255831() {
  var result_2315255838 = ({val: [], has: false});

  return result_2315255838;

}

function some_2248146978(val_2248146980) {
  var result_2248146981 = ({val: [], has: false});

    result_2248146981.has = true;
    result_2248146981.val = nimCopy(null, val_2248146980, NTI33554449);

  return result_2248146981;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2315255831(), NTI2315255829);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2248146978(languageId_2902458407), NTI2315255829);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2315255872(self_2315255874) {
  var result_2315255875 = false;

    result_2315255875 = self_2315255874.has;

  return result_2315255875;

}

function isNone_2818578472(self_2818578474) {
  var result_2818578475 = false;

    result_2818578475 = !(self_2818578474.has);

  return result_2818578475;

}

function get_2818578464(self_2818578466) {
  var result_2818578467 = [];

    if (isNone_2818578472(self_2818578466)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578467 = self_2818578466["val"];

  return result_2818578467;

}

function getOption_2818578480(editor_2818578482, path_2818578483, default_2818578484) {
  var result_2818578490 = null;

  BeforeRet: {
    if ((editor_2818578482 == null)) {
    result_2818578490 = default_2818578484;
    break BeforeRet;
    }
    
    var node_2818578502 = HEX7BHEX7D_1627393316(editor_2818578482.options, nsuSplitString(path_2818578483, [46], -1));
    if ((node_2818578502 == null)) {
    result_2818578490 = default_2818578484;
    break BeforeRet;
    }
    
    result_2818578490 = node_2818578502;
    break BeforeRet;
  };

  return result_2818578490;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578516(self_2818578518) {
  var result_2818578519 = false;

    result_2818578519 = (self_2818578518.val == null);

  return result_2818578519;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578549(self_2818578551) {
  var result_2818578552 = null;
  var result_2818578552_Idx = 0;

  BeforeRet: {
    if (isNone_2818578516(self_2818578551)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578552 = self_2818578551; result_2818578552_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578552, result_2818578552_Idx];

}

function contentString_2818573986(document_2818573987) {
  var result_2818573988 = [];

  BeforeRet: {
    result_2818573988 = nimCopy(null, nsuJoinSep(document_2818573987.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818573988;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578427(self_2818578428) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578430 = null;

  BeforeRet: {
    if (!((self_2818578428.tsParser == null))) {
    deinit_2885681592(self_2818578428.tsParser);
    self_2818578428.tsParser = null;
    }
    
    if (!((self_2818578428.highlightQuery == null))) {
    deinit_2885681594(self_2818578428.highlightQuery);
    self_2818578428.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578444 = getLanguageForFile_2902458372(self_2818578428.filename);
      if (!isSome_2315255872(oHEX60gensym88_2818578444)) Temporary2 = false; else {        var languageId_2818578478 = nimCopy(null, get_2818578464(oHEX60gensym88_2818578444), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578478;
    }
    else {
      result_2818578430 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578479 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578506 = getOption_2818578480(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578479 || []), newJObject_1627390051());
    var language_2818578511 = [(await loadLanguage_2885681535(languageId_2818578479, config_2818578506))];
    if (isNone_2818578516(language_2818578511[0])) {
    var fmtRes_2818578528 = [mnewString(0)];
    fmtRes_2818578528[0].push.apply(fmtRes_2818578528[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578528, 0, languageId_2818578479, []);
    fmtRes_2818578528[0].push.apply(fmtRes_2818578528[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578528[0], NTI33554449)]);
    result_2818578430 = undefined;
    break BeforeRet;
    }
    
    self_2818578428.tsParser = createTsParser_2885681581();
    if ((self_2818578428.tsParser == null)) {
    var fmtRes_2818578536 = [mnewString(0)];
    fmtRes_2818578536[0].push.apply(fmtRes_2818578536[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578536, 0, languageId_2818578479, []);
    fmtRes_2818578536[0].push.apply(fmtRes_2818578536[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578536[0], NTI33554449)]);
    result_2818578430 = undefined;
    break BeforeRet;
    }
    
    self_2818578428.tsParser.setLanguage((Temporary3 = get_2818578549(language_2818578511[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578428.tsLanguage = (Temporary4 = get_2818578549(language_2818578511[0]), Temporary4)[0][Temporary4[1]];
    self_2818578428.currentTree = parseString_2885681211(self_2818578428.tsParser, contentString_2818573986(self_2818578428), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818578589 = [mnewString(0)];
    fmtRes_2818578589[0].push.apply(fmtRes_2818578589[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818578589, 0, languageId_2818578479, []);
    fmtRes_2818578589[0].push.apply(fmtRes_2818578589[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818578590 = loadFile_2332033031(fs_2332033077, fmtRes_2818578589[0]);
    self_2818578428.highlightQuery = (Temporary6 = get_2818578549(language_2818578511[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818578590));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818578610 = [mnewString(0)];
    fmtRes_2818578610[0].push.apply(fmtRes_2818578610[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818578610, 0, languageId_2818578479, []);
    fmtRes_2818578610[0].push.apply(fmtRes_2818578610[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818578610[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573212(self_2818578428);
    requestRender_2768240746(gEditor.platform, false);
    result_2818578430 = undefined;
    break BeforeRet;
  };

  return result_2818578430;

}

function reloadTreesitter_2818587801(self_2818587802) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578427(self_2818587802.document);

  
}

function reloadTreesitterJsWrapper_2818587797(self_2818587830) {
    reloadTreesitter_2818587801(self_2818587830);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818587797(this));};

function deleteLeft_2818587857(self_2818587858) {
    var selections_2818587859 = selections_2818572790(self_2818587858);
    Label1: {
      var i_2818587865 = 0;
      var selection_2818587866 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818587912 = 0;
      var L_2818587913 = (selections_2818587859).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587912 < L_2818587913)) break Label3;
            i_2818587865 = i_2818587912;
            selection_2818587866 = nimCopy(selection_2818587866, selections_2818587859[chckIndx(i_2818587912, 0, (selections_2818587859).length - 1)], NTI2415919115);
            if (isEmpty_2415919476(selection_2818587866)) {
            var colontmp__2818587910 = doMoveCursorColumn_2818582852(self_2818587858, selection_2818587866.Field0, -1);
            var colontmp__2818587911 = nimCopy(null, selection_2818587866.Field0, NTI2415919113);
            selections_2818587859[chckIndx(i_2818587865, 0, (selections_2818587859).length - 1)] = nimCopy(selections_2818587859[chckIndx(i_2818587865, 0, (selections_2818587859).length - 1)], {Field0: nimCopy(null, colontmp__2818587910, NTI2415919113), Field1: nimCopy(null, colontmp__2818587911, NTI2415919113)}, NTI2415919115);
            }
            
            i_2818587912 = addInt(i_2818587912, 1);
            if (!(((selections_2818587859).length == L_2818587913))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573049(self_2818587858, delete_2818578913(self_2818587858.document, selections_2818587859, selections_2818572790(self_2818587858), true, true));
    updateTargetColumn_2818583895(self_2818587858, 3);

  
}

function deleteLeftJsWrapper_2818587853(self_2818587894) {
    deleteLeft_2818587857(self_2818587894);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818587853(this));};

function deleteRight_2818587921(self_2818587922) {
    var selections_2818587923 = selections_2818572790(self_2818587922);
    Label1: {
      var i_2818587929 = 0;
      var selection_2818587930 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818587976 = 0;
      var L_2818587977 = (selections_2818587923).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587976 < L_2818587977)) break Label3;
            i_2818587929 = i_2818587976;
            selection_2818587930 = nimCopy(selection_2818587930, selections_2818587923[chckIndx(i_2818587976, 0, (selections_2818587923).length - 1)], NTI2415919115);
            if (isEmpty_2415919476(selection_2818587930)) {
            var colontmp__2818587974 = nimCopy(null, selection_2818587930.Field0, NTI2415919113);
            var colontmp__2818587975 = doMoveCursorColumn_2818582852(self_2818587922, selection_2818587930.Field0, 1);
            selections_2818587923[chckIndx(i_2818587929, 0, (selections_2818587923).length - 1)] = nimCopy(selections_2818587923[chckIndx(i_2818587929, 0, (selections_2818587923).length - 1)], {Field0: nimCopy(null, colontmp__2818587974, NTI2415919113), Field1: nimCopy(null, colontmp__2818587975, NTI2415919113)}, NTI2415919115);
            }
            
            i_2818587976 = addInt(i_2818587976, 1);
            if (!(((selections_2818587923).length == L_2818587977))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573049(self_2818587922, delete_2818578913(self_2818587922.document, selections_2818587923, selections_2818572790(self_2818587922), true, true));
    updateTargetColumn_2818583895(self_2818587922, 3);

  
}

function deleteRightJsWrapper_2818587917(self_2818587958) {
    deleteRight_2818587921(self_2818587958);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818587917(this));};

function getCommandCount_2818587985(self_2818587986) {
  var result_2818587987 = 0;

  BeforeRet: {
    result_2818587987 = self_2818587986.commandCount;
    break BeforeRet;
  };

  return result_2818587987;

}

function getCommandCountJsWrapper_2818587981(self_2818588016) {
  var result_2818588017 = 0;

    result_2818588017 = getCommandCount_2818587985(self_2818588016);

  return result_2818588017;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818587981(this));};

function setCommandCount_2818588042(self_2818588043, count_2818588044) {
    self_2818588043.commandCount = count_2818588044;

  
}

function setCommandCountJsWrapper_2818588038(self_2818588073, count_2818588074) {
    setCommandCount_2818588042(self_2818588073, count_2818588074);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818588038(this, count_));};

function setCommandCountRestore_2818588100(self_2818588101, count_2818588102) {
    self_2818588101.commandCountRestore = count_2818588102;

  
}

function setCommandCountRestoreJsWrapper_2818588096(self_2818588131, count_2818588132) {
    setCommandCountRestore_2818588100(self_2818588131, count_2818588132);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818588096(this, count_));};

function updateCommandCount_2818588158(self_2818588159, digit_2818588160) {
    self_2818588159.commandCount = addInt(mulInt(self_2818588159.commandCount, 10), digit_2818588160);

  
}

function updateCommandCountJsWrapper_2818588154(self_2818588189, digit_2818588190) {
    updateCommandCount_2818588158(self_2818588189, digit_2818588190);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818588154(this, digit_));};

function setFlag_2818588216(self_2818588217, name_2818588218, value_2818588219) {
    setFlag_1291848951(self_2818588217.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588218 || []), value_2818588219);
    markDirty_2382364710(self_2818588217);

  
}

function setFlagJsWrapper_2818588212(self_2818588249, name_2818588250, value_2818588251) {
    setFlag_2818588216(self_2818588249, name_2818588250, value_2818588251);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818588212(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818588282(self_2818588283, name_2818588284) {
  var result_2818588285 = false;

  BeforeRet: {
    result_2818588285 = getFlag_1291848874(self_2818588283.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588284 || []), false);
    break BeforeRet;
  };

  return result_2818588285;

}

function getFlagJsWrapper_2818588278(self_2818588315, name_2818588316) {
  var result_2818588317 = false;

    result_2818588317 = getFlag_2818588282(self_2818588315, name_2818588316);

  return result_2818588317;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818588278(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818588352(self_2818588353, action_2818588354, args_2818588355) {
  var result_2818588356 = false;

  BeforeRet: {
    result_2818588356 = (handleActionInternal_2818572647(self_2818588353, action_2818588354, args_2818588355) == 3);
    break BeforeRet;
  };

  return result_2818588356;

}

function runActionJsWrapper_2818588348(self_2818588391, action_2818588392, args_2818588393) {
  var result_2818588394 = false;

    result_2818588394 = runAction_2818588352(self_2818588391, action_2818588392, args_2818588393);

  return result_2818588394;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818588348(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818588418(c_2818588419) {
  var result_2818588420 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818588419) || (c_2818588419 == 95))) {
    result_2818588420 = 0;
    break BeforeRet;
    }
    
    if (((c_2818588419 == 32) || (c_2818588419 == 9))) {
    result_2818588420 = 1;
    break BeforeRet;
    }
    
    result_2818588420 = 2;
    break BeforeRet;
  };

  return result_2818588420;

}

function findWordBoundary_2818588427(self_2818588428, cursor_2818588429) {
  var result_2818588430 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818588431 = getLine_2818572654(self_2818588428.document, cursor_2818588429.Field0);
    result_2818588430 = nimCopy(result_2818588430, toSelection_2415919597(cursor_2818588429), NTI2415919115);
    if ((result_2818588430.Field0.Field1 == (line_2818588431).length)) {
    result_2818588430.Field0.Field1 = subInt(result_2818588430.Field0.Field1, 1);
    result_2818588430.Field1.Field1 = subInt(result_2818588430.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818588430.Field0.Field1) && (result_2818588430.Field0.Field1 < (line_2818588431).length))) break Label2;
          var leftCategory_2818588442 = charCategory_2818588418(line_2818588431[chckIndx(subInt(result_2818588430.Field0.Field1, 1), 0, (line_2818588431).length - 1)]);
          var rightCategory_2818588443 = charCategory_2818588418(line_2818588431[chckIndx(result_2818588430.Field0.Field1, 0, (line_2818588431).length - 1)]);
          if (!((leftCategory_2818588442 == rightCategory_2818588443))) {
          break Label1;
          }
          
          result_2818588430.Field0.Field1 = subInt(result_2818588430.Field0.Field1, 1);
        }
    };
    if ((result_2818588430.Field1.Field1 < (line_2818588431).length)) {
    result_2818588430.Field1.Field1 = addInt(result_2818588430.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818588430.Field1.Field1) && (result_2818588430.Field1.Field1 < (line_2818588431).length))) break Label4;
          var leftCategory_2818588452 = charCategory_2818588418(line_2818588431[chckIndx(subInt(result_2818588430.Field1.Field1, 1), 0, (line_2818588431).length - 1)]);
          var rightCategory_2818588453 = charCategory_2818588418(line_2818588431[chckIndx(result_2818588430.Field1.Field1, 0, (line_2818588431).length - 1)]);
          if (!((leftCategory_2818588452 == rightCategory_2818588453))) {
          break Label3;
          }
          
          result_2818588430.Field1.Field1 = addInt(result_2818588430.Field1.Field1, 1);
        }
    };

  return result_2818588430;

}

function findWordBoundaryJsWrapper_2818588423(self_2818588487, cursor_2818588488) {
  var result_2818588489 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818588489 = nimCopy(result_2818588489, findWordBoundary_2818588427(self_2818588487, cursor_2818588488), NTI2415919115);

  return result_2818588489;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818588423(this, cursor_));};

function min_2415919439(a_2415919440, b_2415919441) {
  var result_2415919442 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2415919431(a_2415919440, b_2415919441)) {
    result_2415919442 = nimCopy(result_2415919442, a_2415919440, NTI2415919113);
    break BeforeRet;
    }
    
    result_2415919442 = nimCopy(result_2415919442, b_2415919441, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919442;

}

function max_2415919443(a_2415919444, b_2415919445) {
  var result_2415919446 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(b_2415919445, a_2415919444)) {
    result_2415919446 = nimCopy(result_2415919446, a_2415919444, NTI2415919113);
    break BeforeRet;
    }
    
    result_2415919446 = nimCopy(result_2415919446, b_2415919445, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919446;

}

function or_2415919591(a_2415919592, b_2415919593) {
  var result_2415919594 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2415919595 = normalized_2415919470(a_2415919592);
    var bn_2415919596 = normalized_2415919470(b_2415919593);
    var colontmp__2818588731 = min_2415919439(an_2415919595.Field0, bn_2415919596.Field0);
    var colontmp__2818588732 = max_2415919443(an_2415919595.Field1, bn_2415919596.Field1);
    result_2415919594 = nimCopy(result_2415919594, {Field0: nimCopy(null, colontmp__2818588731, NTI2415919113), Field1: nimCopy(null, colontmp__2818588732, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919594;

}

function reverse_2415919473(selection_2415919474) {
  var result_2415919475 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818588733 = nimCopy(null, selection_2415919474.Field1, NTI2415919113);
    var colontmp__2818588734 = nimCopy(null, selection_2415919474.Field0, NTI2415919113);
    result_2415919475 = nimCopy(result_2415919475, {Field0: nimCopy(null, colontmp__2818588733, NTI2415919113), Field1: nimCopy(null, colontmp__2818588734, NTI2415919113)}, NTI2415919115);

  return result_2415919475;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818588521(self_2818588522, cursor_2818588523, move_2818588524, count_2818588525) {
  var result_2818588526 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818588524)) {
    case "word":
      result_2818588526 = nimCopy(result_2818588526, findWordBoundary_2818588427(self_2818588522, cursor_2818588523), NTI2415919115);
      Label1: {
        var __2818588531 = 0;
        var i_2818588689 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818588689 < count_2818588525)) break Label3;
              __2818588531 = i_2818588689;
              result_2818588526 = nimCopy(result_2818588526, or_2415919591(or_2415919591(result_2818588526, findWordBoundary_2818588427(self_2818588522, result_2818588526.Field1)), findWordBoundary_2818588427(self_2818588522, result_2818588526.Field0)), NTI2415919115);
              i_2818588689 = addInt(i_2818588689, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818588532 = getLine_2818572654(self_2818588522.document, cursor_2818588523.Field0);
      result_2818588526 = nimCopy(result_2818588526, findWordBoundary_2818588427(self_2818588522, cursor_2818588523), NTI2415919115);
      if (((cursor_2818588523.Field1 == 0) && (0 < cursor_2818588523.Field0))) {
      var colontmp__2818588691 = subInt(cursor_2818588523.Field0, 1);
      var colontmp__2818588692 = (getLine_2818572654(self_2818588522.document, subInt(cursor_2818588523.Field0, 1))).length;
      result_2818588526.Field0 = nimCopy(result_2818588526.Field0, {Field0: colontmp__2818588691, Field1: colontmp__2818588692}, NTI2415919113);
      }
      
      if (((cursor_2818588523.Field1 == (line_2818588532).length) && (cursor_2818588523.Field0 < subInt((self_2818588522.document.lines).length, 1)))) {
      var colontmp__2818588693 = addInt(cursor_2818588523.Field0, 1);
      var colontmp__2818588694 = 0;
      result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588693, Field1: colontmp__2818588694}, NTI2415919113);
      }
      
      Label4: {
        var __2818588540 = 0;
        var i_2818588700 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818588700 < count_2818588525)) break Label6;
              __2818588540 = i_2818588700;
              result_2818588526 = nimCopy(result_2818588526, or_2415919591(or_2415919591(result_2818588526, findWordBoundary_2818588427(self_2818588522, result_2818588526.Field1)), findWordBoundary_2818588427(self_2818588522, result_2818588526.Field0)), NTI2415919115);
              var line_2818588541 = getLine_2818572654(self_2818588522.document, result_2818588526.Field1.Field0);
              if (((result_2818588526.Field0.Field1 == 0) && (0 < result_2818588526.Field0.Field0))) {
              var colontmp__2818588696 = subInt(result_2818588526.Field0.Field0, 1);
              var colontmp__2818588697 = (getLine_2818572654(self_2818588522.document, subInt(result_2818588526.Field0.Field0, 1))).length;
              result_2818588526.Field0 = nimCopy(result_2818588526.Field0, {Field0: colontmp__2818588696, Field1: colontmp__2818588697}, NTI2415919113);
              }
              
              if (((result_2818588526.Field1.Field1 == (line_2818588541).length) && (result_2818588526.Field1.Field0 < subInt((self_2818588522.document.lines).length, 1)))) {
              var colontmp__2818588698 = addInt(result_2818588526.Field1.Field0, 1);
              var colontmp__2818588699 = 0;
              result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588698, Field1: colontmp__2818588699}, NTI2415919113);
              }
              
              i_2818588700 = addInt(i_2818588700, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818588526 = nimCopy(result_2818588526, reverse_2415919473(getSelectionForMove_2818588521(self_2818588522, {Field0: cursor_2818588523.Field0, Field1: nimMax(0, subInt(cursor_2818588523.Field1, 1))}, [119,111,114,100], count_2818588525)), NTI2415919115);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818588526 = nimCopy(result_2818588526, reverse_2415919473(getSelectionForMove_2818588521(self_2818588522, {Field0: cursor_2818588523.Field0, Field1: nimMax(0, subInt(cursor_2818588523.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818588525)), NTI2415919115);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818588702 = {Field0: cursor_2818588523.Field0, Field1: 0};
      var colontmp__2818588703 = {Field0: cursor_2818588523.Field0, Field1: (getLine_2818572654(self_2818588522.document, cursor_2818588523.Field0)).length};
      result_2818588526 = nimCopy(result_2818588526, {Field0: nimCopy(null, colontmp__2818588702, NTI2415919113), Field1: nimCopy(null, colontmp__2818588703, NTI2415919113)}, NTI2415919115);
      break;
    case "line-next":
      var colontmp__2818588704 = {Field0: cursor_2818588523.Field0, Field1: 0};
      var colontmp__2818588705 = {Field0: cursor_2818588523.Field0, Field1: (getLine_2818572654(self_2818588522.document, cursor_2818588523.Field0)).length};
      result_2818588526 = nimCopy(result_2818588526, {Field0: nimCopy(null, colontmp__2818588704, NTI2415919113), Field1: nimCopy(null, colontmp__2818588705, NTI2415919113)}, NTI2415919115);
      if ((addInt(result_2818588526.Field1.Field0, 1) < (self_2818588522.document.lines).length)) {
      var colontmp__2818588706 = addInt(result_2818588526.Field1.Field0, 1);
      var colontmp__2818588707 = 0;
      result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588706, Field1: colontmp__2818588707}, NTI2415919113);
      }
      
      Label7: {
        var __2818588552 = 0;
        var i_2818588711 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818588711 < count_2818588525)) break Label9;
              __2818588552 = i_2818588711;
              result_2818588526 = nimCopy(result_2818588526, or_2415919591(result_2818588526, {Field0: {Field0: result_2818588526.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818588526.Field1.Field0, Field1: (getLine_2818572654(self_2818588522.document, result_2818588526.Field1.Field0)).length}}), NTI2415919115);
              if ((addInt(result_2818588526.Field1.Field0, 1) < (self_2818588522.document.lines).length)) {
              var colontmp__2818588709 = addInt(result_2818588526.Field1.Field0, 1);
              var colontmp__2818588710 = 0;
              result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588709, Field1: colontmp__2818588710}, NTI2415919113);
              }
              
              i_2818588711 = addInt(i_2818588711, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818588713 = 0;
      var colontmp__2818588714 = 0;
      result_2818588526.Field0 = nimCopy(result_2818588526.Field0, {Field0: colontmp__2818588713, Field1: colontmp__2818588714}, NTI2415919113);
      var line_2818588559 = subInt((self_2818588522.document.lines).length, 1);
      var colontmp__2818588715 = line_2818588559;
      var colontmp__2818588716 = (getLine_2818572654(self_2818588522.document, line_2818588559)).length;
      result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588715, Field1: colontmp__2818588716}, NTI2415919113);
      break;
    case "prev-find-result":
      result_2818588526 = nimCopy(result_2818588526, getPrevFindResult_2818582885(self_2818588522, cursor_2818588523, count_2818588525), NTI2415919115);
      break;
    case "next-find-result":
      result_2818588526 = nimCopy(result_2818588526, getNextFindResult_2818582889(self_2818588522, cursor_2818588523, count_2818588525), NTI2415919115);
      break;
    default: 
      if (nsuStartsWith(move_2818588524, [109,111,118,101,45,116,111,32])) {
      var str_2818588578 = HEX5BHEX5D_855639319(move_2818588524, HEX2EHEX2E_1040187488(8, 1));
      var line_2818588579 = getLine_2818572654(self_2818588522.document, cursor_2818588523.Field0);
      result_2818588526 = nimCopy(result_2818588526, toSelection_2415919597(cursor_2818588523), NTI2415919115);
      var index_2818588580 = nsuFindStr(line_2818588579, str_2818588578, chckRange(cursor_2818588523.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818588580)) {
      var colontmp__2818588717 = cursor_2818588523.Field0;
      var colontmp__2818588718 = addInt(index_2818588580, 1);
      result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588717, Field1: colontmp__2818588718}, NTI2415919113);
      }
      
      Label10: {
        var __2818588585 = 0;
        var i_2818588722 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818588722 < count_2818588525)) break Label12;
              __2818588585 = i_2818588722;
              var index_2818588586 = nsuFindStr(line_2818588579, str_2818588578, chckRange(result_2818588526.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818588586)) {
              var colontmp__2818588720 = result_2818588526.Field1.Field0;
              var colontmp__2818588721 = addInt(index_2818588586, 1);
              result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588720, Field1: colontmp__2818588721}, NTI2415919113);
              }
              
              i_2818588722 = addInt(i_2818588722, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818588524, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818588605 = HEX5BHEX5D_855639319(move_2818588524, HEX2EHEX2E_1040187488(12, 1));
      var line_2818588606 = getLine_2818572654(self_2818588522.document, cursor_2818588523.Field0);
      result_2818588526 = nimCopy(result_2818588526, toSelection_2415919597(cursor_2818588523), NTI2415919115);
      var index_2818588607 = nsuFindStr(line_2818588606, str_2818588605, chckRange(addInt(cursor_2818588523.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818588607)) {
      var colontmp__2818588724 = cursor_2818588523.Field0;
      var colontmp__2818588725 = index_2818588607;
      result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588724, Field1: colontmp__2818588725}, NTI2415919113);
      }
      
      Label13: {
        var __2818588612 = 0;
        var i_2818588729 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818588729 < count_2818588525)) break Label15;
              __2818588612 = i_2818588729;
              var index_2818588613 = nsuFindStr(line_2818588606, str_2818588605, chckRange(addInt(result_2818588526.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818588613)) {
              var colontmp__2818588727 = result_2818588526.Field1.Field0;
              var colontmp__2818588728 = index_2818588613;
              result_2818588526.Field1 = nimCopy(result_2818588526.Field1, {Field0: colontmp__2818588727, Field1: colontmp__2818588728}, NTI2415919113);
              }
              
              i_2818588729 = addInt(i_2818588729, 1);
            }
        };
      };
      }
      else {
        result_2818588526 = nimCopy(result_2818588526, toSelection_2415919597(cursor_2818588523), NTI2415919115);
        var fmtRes_2818588618 = [mnewString(0)];
        fmtRes_2818588618[0].push.apply(fmtRes_2818588618[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818588618, 0, move_2818588524, []);
        fmtRes_2818588618[0].push.apply(fmtRes_2818588618[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818588618[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818588526;

}

function getSelectionForMoveJsWrapper_2818588517(self_2818588650, cursor_2818588651, move_2818588652, count_2818588653) {
  var result_2818588654 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818588654 = nimCopy(result_2818588654, getSelectionForMove_2818588521(self_2818588650, cursor_2818588651, move_2818588652, count_2818588653), NTI2415919115);

  return result_2818588654;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818588517(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818588799(s_2818588803, x_2818588804) {
  var result_2818588805 = [];

    var a_2818588807 = x_2818588804.a;
    var L_2818588812 = addInt(subInt(subInt((s_2818588803).length, x_2818588804.b), a_2818588807), 1);
    result_2818588805 = new Array(chckRange(L_2818588812, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818588812, 0, 2147483647) ; ++i) { result_2818588805[i] = []; }    Label1: {
      var i_2818588821 = 0;
      var i_2818589039 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589039 < L_2818588812)) break Label3;
            i_2818588821 = i_2818589039;
            result_2818588805[chckIndx(i_2818588821, 0, (result_2818588805).length - 1)] = nimCopy(null, s_2818588803[chckIndx(addInt(i_2818588821, a_2818588807), 0, (s_2818588803).length - 1)], NTI33554449);
            i_2818589039 = addInt(i_2818589039, 1);
          }
      };
    };

  return result_2818588805;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2701132581(s_2701132583, i_2701132584) {
  var result_2701132585 = [];

    result_2701132585 = nimCopy(null, s_2701132583[chckIndx(subInt((s_2701132583).length, i_2701132584), 0, (s_2701132583).length - 1)], NTI33554449);

  return result_2701132585;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818588769(editor_2818588771, path_2818588772, value_2818588773) {
  BeforeRet: {
    Label1: {
      if ((editor_2818588771 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym736_2818588788 = nsuSplitString(path_2818588772, [46], -1);
      var nodeHEX60gensym736_2818588789 = editor_2818588771.options;
      Label2: {
        var keyHEX60gensym736_2818588825 = [];
        var colontmp__2818589034 = [];
        colontmp__2818589034 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym736_2818588788, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589035 = 0;
        var L_2818589036 = (colontmp__2818589034).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589035 < L_2818589036)) break Label4;
              keyHEX60gensym736_2818588825 = colontmp__2818589034[chckIndx(i_2818589035, 0, (colontmp__2818589034).length - 1)];
              if (!((nodeHEX60gensym736_2818588789.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym736_2818588789, keyHEX60gensym736_2818588825))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym736_2818588789, keyHEX60gensym736_2818588825, newJObject_1627390051());
              }
              
              nodeHEX60gensym736_2818588789 = HEX5BHEX5D_1627393037(nodeHEX60gensym736_2818588789, keyHEX60gensym736_2818588825);
              i_2818589035 = addInt(i_2818589035, 1);
              if (!(((colontmp__2818589034).length == L_2818589036))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym736_2818588789 == null) || !((nodeHEX60gensym736_2818588789.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym736_2818588789, HEX5BHEX5D_2701132581(pathItemsHEX60gensym736_2818588788, 1), newJInt_1627390040(value_2818588773));
    };
  };

  
}

function getOption_2818588841(editor_2818588843, path_2818588844, default_2818588845) {
  var result_2818588850 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818588843 == null)) {
      result_2818588850 = nimCopy(null, default_2818588845, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym741_2818588863 = HEX7BHEX7D_1627393316(editor_2818588843.options, nsuSplitString(path_2818588844, [46], -1));
      if ((nodeHEX60gensym741_2818588863 == null)) {
      result_2818588850 = nimCopy(null, default_2818588845, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818588850 = nimCopy(null, getStr_1627390106(nodeHEX60gensym741_2818588863, default_2818588845), NTI33554449);
    break BeforeRet;
  };

  return result_2818588850;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818588867(editor_2818588869, path_2818588870, default_2818588871) {
  var result_2818588876 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818588869 == null)) {
      result_2818588876 = default_2818588871;
      break BeforeRet;
      }
      
      var nodeHEX60gensym742_2818588888 = HEX7BHEX7D_1627393316(editor_2818588869.options, nsuSplitString(path_2818588870, [46], -1));
      if ((nodeHEX60gensym742_2818588888 == null)) {
      result_2818588876 = default_2818588871;
      break BeforeRet;
      }
      
    };
    result_2818588876 = getInt_1627390118(nodeHEX60gensym742_2818588888, default_2818588871);
    break BeforeRet;
  };

  return result_2818588876;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818588901(editor_2818588903, path_2818588904, value_2818588905) {
  BeforeRet: {
    Label1: {
      if ((editor_2818588903 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym743_2818588921 = nsuSplitString(path_2818588904, [46], -1);
      var nodeHEX60gensym743_2818588922 = editor_2818588903.options;
      Label2: {
        var keyHEX60gensym743_2818588941 = [];
        var colontmp__2818589048 = [];
        colontmp__2818589048 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym743_2818588921, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589049 = 0;
        var L_2818589050 = (colontmp__2818589048).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589049 < L_2818589050)) break Label4;
              keyHEX60gensym743_2818588941 = colontmp__2818589048[chckIndx(i_2818589049, 0, (colontmp__2818589048).length - 1)];
              if (!((nodeHEX60gensym743_2818588922.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym743_2818588922, keyHEX60gensym743_2818588941))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym743_2818588922, keyHEX60gensym743_2818588941, newJObject_1627390051());
              }
              
              nodeHEX60gensym743_2818588922 = HEX5BHEX5D_1627393037(nodeHEX60gensym743_2818588922, keyHEX60gensym743_2818588941);
              i_2818589049 = addInt(i_2818589049, 1);
              if (!(((colontmp__2818589048).length == L_2818589050))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym743_2818588922 == null) || !((nodeHEX60gensym743_2818588922.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym743_2818588922, HEX5BHEX5D_2701132581(pathItemsHEX60gensym743_2818588921, 1), newJString_1627389994(value_2818588905));
    };
  };

  
}

function setMove_2818588766(self_2818588767, args_2818588768) {
    setOption_2818588769(self_2818588767.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818587985(self_2818588767));
    setMode_2818583517(self_2818588767, getOption_2818588841(self_2818588767.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818588042(self_2818588767, getOption_2818588867(self_2818588767.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818588352(self_2818588767, getOption_2818588841(self_2818588767.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818588768);
    setOption_2818588901(self_2818588767.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818588762(self_2818588985, args_2818588986) {
    setMove_2818588766(self_2818588985, args_2818588986);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818588762(this, args_));};

function deleteMove_2818589058(self_2818589059, move_2818589060, which_2818589061, all_2818589062) {
    move_2818589060 = nimCopy(null, move_2818589060, NTI33554449);
    
function HEX3Aanonymous_2818589074(s_2818589081) {
        var Temporary1;

      var result_2818589084 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589073) {
        Temporary1 = getSelectionForMove_2818588521(self_2818589059, s_2818589081.Field1, move_2818589060, count_2818589072);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589081.Field1, NTI2415919113), Field1: nimCopy(null, getSelectionForMove_2818588521(self_2818589059, s_2818589081.Field1, move_2818589060, count_2818589072).Field1, NTI2415919113)};
        }
        
        result_2818589084 = nimCopy(result_2818589084, Temporary1, NTI2415919115);

      return result_2818589084;

    }

    var count_2818589072 = getOption_2818588867(self_2818589059.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589073 = getFlag_2818588282(self_2818589059, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589091 = map_2818572723(selections_2818572790(self_2818589059), HEX3Aanonymous_2818589074);
    selectionsHEX3D_2818573049(self_2818589059, delete_2818578913(self_2818589059.document, selections_2818589091, selections_2818572790(self_2818589059), true, true));
    scrollToCursor_2818583332(self_2818589059, 3);
    updateTargetColumn_2818583895(self_2818589059, 3);

  
}

function deleteMoveJsWrapper_2818589054(self_2818589123, move_2818589124, which_2818589125, all_2818589126) {
    deleteMove_2818589058(self_2818589123, move_2818589124, which_2818589125, all_2818589126);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818589054(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818589185(self_2818589187, all_2818589188, p_2818589190) {
    
function HEX3Aanonymous_2818589192(s_2818589199) {
      var result_2818589202 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589202 = nimCopy(result_2818589202, p_2818589190(s_2818589199), NTI2415919115);

      return result_2818589202;

    }

  var result_2818589191 = [];

    if (all_2818589188) {
    result_2818589191 = nimCopy(null, map_2818572723(self_2818589187, HEX3Aanonymous_2818589192), NTI2818572610);
    }
    else {
      result_2818589191 = nimCopy(null, self_2818589187, NTI2818582992);
      if ((0 < (result_2818589191).length)) {
      result_2818589191[chckIndx((result_2818589191).length - 1, 0, (result_2818589191).length - 1)] = nimCopy(result_2818589191[chckIndx((result_2818589191).length - 1, 0, (result_2818589191).length - 1)], p_2818589190(result_2818589191[chckIndx((result_2818589191).length - 1, 0, (result_2818589191).length - 1)]), NTI2415919115);
      }
      
    }
    

  return result_2818589191;

}

function selectMove_2818589162(self_2818589163, move_2818589164, which_2818589165, all_2818589166) {
    move_2818589164 = nimCopy(null, move_2818589164, NTI33554449);
    
function HEX3Aanonymous_2818589177(s_2818589180) {
      var result_2818589183 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589183 = nimCopy(result_2818589183, getSelectionForMove_2818588521(self_2818589163, s_2818589180.Field1, move_2818589164, count_2818589176), NTI2415919115);

      return result_2818589183;

    }

    var count_2818589176 = getOption_2818588867(self_2818589163.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573049(self_2818589163, mapAllOrLast_2818589185(selections_2818572790(self_2818589163), all_2818589166, HEX3Aanonymous_2818589177));
    scrollToCursor_2818583332(self_2818589163, 3);
    updateTargetColumn_2818583895(self_2818589163, 3);

  
}

function selectMoveJsWrapper_2818589158(self_2818589252, move_2818589253, which_2818589254, all_2818589255) {
    selectMove_2818589162(self_2818589252, move_2818589253, which_2818589254, all_2818589255);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818589158(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818589291(self_2818589292, move_2818589293, which_2818589294, all_2818589295) {
    move_2818589293 = nimCopy(null, move_2818589293, NTI33554449);
    
function HEX3Aanonymous_2818589307(s_2818589314) {
        var Temporary1;

      var result_2818589317 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589306) {
        Temporary1 = getSelectionForMove_2818588521(self_2818589292, s_2818589314.Field1, move_2818589293, count_2818589305);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589314.Field1, NTI2415919113), Field1: nimCopy(null, getSelectionForMove_2818588521(self_2818589292, s_2818589314.Field1, move_2818589293, count_2818589305).Field1, NTI2415919113)};
        }
        
        result_2818589317 = nimCopy(result_2818589317, Temporary1, NTI2415919115);

      return result_2818589317;

    }

    var count_2818589305 = getOption_2818588867(self_2818589292.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589306 = getFlag_2818588282(self_2818589292, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589324 = map_2818572723(selections_2818572790(self_2818589292), HEX3Aanonymous_2818589307);
    selectionsHEX3D_2818573049(self_2818589292, delete_2818578913(self_2818589292.document, selections_2818589324, selections_2818572790(self_2818589292), true, true));
    scrollToCursor_2818583332(self_2818589292, 3);
    updateTargetColumn_2818583895(self_2818589292, 3);

  
}

function changeMoveJsWrapper_2818589287(self_2818589356, move_2818589357, which_2818589358, all_2818589359) {
    changeMove_2818589291(self_2818589356, move_2818589357, which_2818589358, all_2818589359);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818589287(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2415919600(cursor_2415919601, default_2415919602, which_2415919603) {
  var result_2415919604 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2415919603) {
    case 0:
      result_2415919604 = nimCopy(result_2415919604, default_2415919602, NTI2415919115);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818589508 = nimCopy(null, cursor_2415919601, NTI2415919113);
      var colontmp__2818589509 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2818589508, NTI2415919113), Field1: nimCopy(null, colontmp__2818589509, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818589510 = nimCopy(null, cursor_2415919601, NTI2415919113);
      var colontmp__2818589511 = nimCopy(null, default_2415919602.Field1, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2818589510, NTI2415919113), Field1: nimCopy(null, colontmp__2818589511, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818589512 = nimCopy(null, default_2415919602.Field0, NTI2415919113);
      var colontmp__2818589513 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2818589512, NTI2415919113), Field1: nimCopy(null, colontmp__2818589513, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818589514 = nimCopy(null, default_2415919602.Field1, NTI2415919113);
      var colontmp__2818589515 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2818589514, NTI2415919113), Field1: nimCopy(null, colontmp__2818589515, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    }
  };

  return result_2415919604;

}

function cursor_2818588746(self_2818588747, selection_2818588748, which_2818588749) {
  var result_2818588750 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818588749) {
    case 0:
      result_2818588750 = nimCopy(result_2818588750, cursor_2818588746(self_2818588747, selection_2818588748, getOption_2818582990(self_2818588747.editor, getContextWithMode_2818582956(self_2818588747, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919113);
      break BeforeRet;
      break;
    case 1:
      result_2818588750 = nimCopy(result_2818588750, selection_2818588748.Field1, NTI2415919113);
      break BeforeRet;
      break;
    case 2:
      result_2818588750 = nimCopy(result_2818588750, selection_2818588748.Field0, NTI2415919113);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818588750 = nimCopy(result_2818588750, selection_2818588748.Field1, NTI2415919113);
      break BeforeRet;
      break;
    }
  };

  return result_2818588750;

}

function moveLast_2818589395(self_2818589396, move_2818589397, which_2818589398, all_2818589399, count_2818589400) {
      move_2818589397 = nimCopy(null, move_2818589397, NTI33554449);
      
function HEX3Aanonymous_2818589401(s_2818589404) {
        var result_2818589407 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589407 = nimCopy(result_2818589407, toSelection_2415919600(getSelectionForMove_2818588521(self_2818589396, cursor_2818588746(self_2818589396, s_2818589404, which_2818589398), move_2818589397, count_2818589400).Field1, s_2818589404, getOption_2818582990(self_2818589396.editor, getContextWithMode_2818582956(self_2818589396, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919115);

        return result_2818589407;

      }
      
function HEX3Aanonymous_2818589424(s_2818589427) {
        var result_2818589430 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589430 = nimCopy(result_2818589430, toSelection_2415919600(getSelectionForMove_2818588521(self_2818589396, cursor_2818588746(self_2818589396, s_2818589427, which_2818589398), move_2818589397, count_2818589400).Field1, s_2818589427, which_2818589398), NTI2415919115);

        return result_2818589430;

      }

    switch (which_2818589398) {
    case 0:
      selectionsHEX3D_2818573049(self_2818589396, mapAllOrLast_2818589185(selections_2818572790(self_2818589396), all_2818589399, HEX3Aanonymous_2818589401));
      break;
    default: 
      selectionsHEX3D_2818573049(self_2818589396, mapAllOrLast_2818589185(selections_2818572790(self_2818589396), all_2818589399, HEX3Aanonymous_2818589424));
      break;
    }
    scrollToCursor_2818583332(self_2818589396, which_2818589398);
    updateTargetColumn_2818583895(self_2818589396, which_2818589398);

  
}

function moveLastJsWrapper_2818589391(self_2818589469, move_2818589470, which_2818589471, all_2818589472, count_2818589473) {
    moveLast_2818589395(self_2818589469, move_2818589470, which_2818589471, all_2818589472, count_2818589473);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818589391(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818589522(self_2818589523, move_2818589524, which_2818589525, all_2818589526, count_2818589527) {
      move_2818589524 = nimCopy(null, move_2818589524, NTI33554449);
      
function HEX3Aanonymous_2818589528(s_2818589531) {
        var result_2818589534 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589534 = nimCopy(result_2818589534, toSelection_2415919600(getSelectionForMove_2818588521(self_2818589523, cursor_2818588746(self_2818589523, s_2818589531, which_2818589525), move_2818589524, count_2818589527).Field0, s_2818589531, getOption_2818582990(self_2818589523.editor, getContextWithMode_2818582956(self_2818589523, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919115);

        return result_2818589534;

      }
      
function HEX3Aanonymous_2818589551(s_2818589554) {
        var result_2818589557 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589557 = nimCopy(result_2818589557, toSelection_2415919600(getSelectionForMove_2818588521(self_2818589523, cursor_2818588746(self_2818589523, s_2818589554, which_2818589525), move_2818589524, count_2818589527).Field0, s_2818589554, which_2818589525), NTI2415919115);

        return result_2818589557;

      }

    switch (which_2818589525) {
    case 0:
      selectionsHEX3D_2818573049(self_2818589523, mapAllOrLast_2818589185(selections_2818572790(self_2818589523), all_2818589526, HEX3Aanonymous_2818589528));
      break;
    default: 
      selectionsHEX3D_2818573049(self_2818589523, mapAllOrLast_2818589185(selections_2818572790(self_2818589523), all_2818589526, HEX3Aanonymous_2818589551));
      break;
    }
    scrollToCursor_2818583332(self_2818589523, which_2818589525);
    updateTargetColumn_2818583895(self_2818589523, which_2818589525);

  
}

function moveFirstJsWrapper_2818589518(self_2818589596, move_2818589597, which_2818589598, all_2818589599, count_2818589600) {
    moveFirst_2818589522(self_2818589596, move_2818589597, which_2818589598, all_2818589599, count_2818589600);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818589518(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818589644(val_2818589646) {
  var result_2818589647 = ({val: ({impl: null}), has: false});

    result_2818589647.has = true;
    result_2818589647.val = nimCopy(result_2818589647.val, val_2818589646, NTI2852126723);

  return result_2818589647;

}

function isNone_2818579857(self_2818579859) {
  var result_2818579860 = false;

    result_2818579860 = !(self_2818579859.has);

  return result_2818579860;

}

function clear_2818579907(t_2818579910) {
    Label1: {
      var i_2818579968 = 0;
      var colontmp__2818589714 = 0;
      colontmp__2818589714 = (t_2818579910.data).length;
      var i_2818589715 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589715 < colontmp__2818589714)) break Label3;
            i_2818579968 = i_2818589715;
            t_2818579910.data[chckIndx(i_2818579968, 0, (t_2818579910.data).length - 1)].Field0 = 0;
            t_2818579910.data[chckIndx(i_2818579968, 0, (t_2818579910.data).length - 1)].Field1 = 0;
            t_2818579910.data[chckIndx(i_2818579968, 0, (t_2818579910.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818589715 = addInt(i_2818589715, 1);
          }
      };
    };
    t_2818579910.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818589717 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818589718 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818589717, Field1: colontmp__2818589718}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580468(self_2818580470) {
  var result_2818580471 = null;

  BeforeRet: {
    if (isNone_2818579857(self_2818580470)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580471 = self_2818580470.val;
    break BeforeRet;
  };

  return result_2818580471;

}

function mustRehash_2818581044(t_2818581046) {
  var result_2818581047 = false;

    if (!((t_2818581046.counter < (t_2818581046.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818581047 = ((mulInt((t_2818581046.data).length, 2) < mulInt(t_2818581046.counter, 3)) || (subInt((t_2818581046.data).length, t_2818581046.counter) < 4));

  return result_2818581047;

}

function rawInsert_2818581593(t_2818581597, data_2818581598, data_2818581598_Idx, key_2818581599, val_2818581600, hc_2818581601, h_2818581602) {
    data_2818581598[data_2818581598_Idx][chckIndx(h_2818581602, 0, (data_2818581598[data_2818581598_Idx]).length - 1)].Field1 = key_2818581599;
    data_2818581598[data_2818581598_Idx][chckIndx(h_2818581602, 0, (data_2818581598[data_2818581598_Idx]).length - 1)].Field2 = nimCopy(null, val_2818581600, NTI2818572535);
    data_2818581598[data_2818581598_Idx][chckIndx(h_2818581602, 0, (data_2818581598[data_2818581598_Idx]).length - 1)].Field0 = hc_2818581601;

  
}

function enlarge_2818581214(t_2818581217) {
    var n_2818581220 = [];
    n_2818581220 = new Array(chckRange(mulInt((t_2818581217.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581217.data).length, 2), 0, 2147483647) ; ++i) { n_2818581220[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581217.data; t_2818581217.data = n_2818581220; n_2818581220 = Temporary1;    Label2: {
      var i_2818581289 = 0;
      var colontmp__2818589721 = 0;
      colontmp__2818589721 = (n_2818581220).length - 1;
      var res_2818589722 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818589722 <= colontmp__2818589721)) break Label4;
            i_2818581289 = res_2818589722;
            var eh_2818581363 = n_2818581220[chckIndx(i_2818581289, 0, (n_2818581220).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581363)) {
            var j_2818581367 = (eh_2818581363 & (t_2818581217.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581217.data[chckIndx(j_2818581367, 0, (t_2818581217.data).length - 1)].Field0)) break Label6;
                  j_2818581367 = nextTry_1308622883(j_2818581367, (t_2818581217.data).length - 1);
                }
            };
            rawInsert_2818581593(t_2818581217, t_2818581217, "data", n_2818581220[chckIndx(i_2818581289, 0, (n_2818581220).length - 1)].Field1, n_2818581220[chckIndx(i_2818581289, 0, (n_2818581220).length - 1)].Field2, eh_2818581363, j_2818581367);
            }
            
            res_2818589722 = addInt(res_2818589722, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818581822(t_2818581825, key_2818581826, hc_2818581827) {
  var result_2818581828 = 0;

  BeforeRet: {
    if (((t_2818581825.data).length == 0)) {
    result_2818581828 = -1;
    break BeforeRet;
    }
    
    var h_2818581884 = (hc_2818581827 & (t_2818581825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581825.data[chckIndx(h_2818581884, 0, (t_2818581825.data).length - 1)].Field0)) break Label2;
          if (((t_2818581825.data[chckIndx(h_2818581884, 0, (t_2818581825.data).length - 1)].Field0 == hc_2818581827) && (t_2818581825.data[chckIndx(h_2818581884, 0, (t_2818581825.data).length - 1)].Field1 == key_2818581826))) {
          result_2818581828 = h_2818581884;
          break BeforeRet;
          }
          
          h_2818581884 = nextTry_1308622883(h_2818581884, (t_2818581825.data).length - 1);
        }
    };
    result_2818581828 = subInt(-1, h_2818581884);
  };

  return result_2818581828;

}

function HEX5BHEX5DHEX3D_2818580541(t_2818580544, key_2818580545, val_2818580546) {
    if (((t_2818580544.data).length == 0)) {
    var correctSizeHEX60gensym147_2818580600 = slotsNeeded_1308622891(32);
    t_2818580544.counter = 0;
    t_2818580544.data = new Array(chckRange(correctSizeHEX60gensym147_2818580600, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2818580600, 0, 2147483647) ; ++i) { t_2818580544.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818580605 = [0];
    var index_2818580912 = rawGet_2818580606(t_2818580544, key_2818580545, hc_2818580605, 0);
    if ((0 <= index_2818580912)) {
    t_2818580544.data[chckIndx(index_2818580912, 0, (t_2818580544.data).length - 1)].Field2 = nimCopy(null, val_2818580546, NTI2818572535);
    }
    else {
      if (((t_2818580544.data).length == 0)) {
      var correctSizeHEX60gensym152_2818581039 = slotsNeeded_1308622891(32);
      t_2818580544.counter = 0;
      t_2818580544.data = new Array(chckRange(correctSizeHEX60gensym152_2818581039, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2818581039, 0, 2147483647) ; ++i) { t_2818580544.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818581044(t_2818580544)) {
      enlarge_2818581214(t_2818580544);
      index_2818580912 = rawGetKnownHC_2818581822(t_2818580544, key_2818580545, hc_2818580605[0]);
      }
      
      index_2818580912 = subInt(-1, index_2818580912);
      rawInsert_2818581593(t_2818580544, t_2818580544, "data", key_2818580545, val_2818580546, hc_2818580605[0], index_2818580912);
      t_2818580544.counter = addInt(t_2818580544.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582165(t_2818582168, key_2818582169) {
    var hc_2818582170 = [0];
    var i_2818582177 = rawGet_2818580606(t_2818582168, key_2818582169, hc_2818582170, 0);
    var mskHEX60gensym36_2818582181 = (t_2818582168.data).length - 1;
    if ((0 <= i_2818582177)) {
    t_2818582168.counter = subInt(t_2818582168.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582188 = i_2818582177;
            var rHEX60gensym36_2818582189 = jHEX60gensym36_2818582188;
            t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)].Field0 = 0;
            t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)].Field1 = 0;
            t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582177 = (addInt(i_2818582177, 1) & mskHEX60gensym36_2818582181);
                  if (isEmpty_1308622877(t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582189 = (t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)].Field0 & mskHEX60gensym36_2818582181);
                  if (!(((((rHEX60gensym36_2818582189 <= i_2818582177) && (jHEX60gensym36_2818582188 < rHEX60gensym36_2818582189)) || ((jHEX60gensym36_2818582188 < rHEX60gensym36_2818582189) && (i_2818582177 < jHEX60gensym36_2818582188))) || ((i_2818582177 < jHEX60gensym36_2818582188) && (rHEX60gensym36_2818582189 <= i_2818582177))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582168.data[chckIndx(jHEX60gensym36_2818582188, 0, (t_2818582168.data).length - 1)] = nimCopy(t_2818582168.data[chckIndx(jHEX60gensym36_2818582188, 0, (t_2818582168.data).length - 1)], t_2818582168.data[chckIndx(i_2818582177, 0, (t_2818582168.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818579851(self_2818579852) {
  BeforeRet: {
    if (isNone_2818579857(self_2818579852.searchRegex)) {
    clear_2818579907(self_2818579852.searchResults);
    markDirty_2382364710(self_2818579852);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580448 = 0;
      var line_2818580449 = [];
      var i_2818589710 = 0;
      var L_2818589711 = (self_2818579852.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589710 < L_2818589711)) break Label3;
            i_2818580448 = i_2818589710;
            line_2818580449 = self_2818579852.document.lines[chckIndx(i_2818589710, 0, (self_2818579852.document.lines).length - 1)];
            var selections_2818580454 = [];
            var start_2818580455 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580455 < (line_2818580449).length)) break Label5;
                  var bounds_2818580480 = findBounds_2852126727(line_2818580449, get_2818580468(self_2818579852.searchRegex), start_2818580455);
                  if ((bounds_2818580480.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580454.push({Field0: {Field0: i_2818580448, Field1: bounds_2818580480.Field0}, Field1: {Field0: i_2818580448, Field1: addInt(bounds_2818580480.Field1, 1)}});;
                  start_2818580455 = nimMax(addInt(bounds_2818580480.Field1, 1), addInt(start_2818580455, 1));
                }
            };
            if ((0 < (selections_2818580454).length)) {
            HEX5BHEX5DHEX3D_2818580541(self_2818579852.searchResults, i_2818580448, selections_2818580454);
            }
            else {
            del_2818582165(self_2818579852.searchResults, i_2818580448);
            }
            
            i_2818589710 = addInt(i_2818589710, 1);
            if (!(((self_2818579852.document.lines).length == L_2818589711))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2382364710(self_2818579852);
  };

  
}

function setSearchQuery_2818589641(self_2818589642, query_2818589643) {
    self_2818589642.searchQuery = nimCopy(null, query_2818589643, NTI33554449);
    self_2818589642.searchRegex = nimCopy(self_2818589642.searchRegex, some_2818589644(re_2852126779(query_2818589643)), NTI2818572524);
    updateSearchResults_2818579851(self_2818589642);

  
}

function setSearchQueryJsWrapper_2818589637(self_2818589686, query_2818589687) {
    setSearchQuery_2818589641(self_2818589686, query_2818589687);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818589637(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818589733(self_2818589734, move_2818589735, count_2818589736) {
    var selection_2818589737 = getSelectionForMove_2818588521(self_2818589734, selection_2818572793(self_2818589734).Field1, move_2818589735, count_2818589736);
    selectionHEX3D_2818572799(self_2818589734, selection_2818589737);
    setSearchQuery_2818589641(self_2818589734, contentString_2818573989(self_2818589734.document, selection_2818589737));

  
}

function setSearchQueryFromMoveJsWrapper_2818589729(self_2818589767, move_2818589768, count_2818589769) {
    setSearchQueryFromMove_2818589733(self_2818589767, move_2818589768, count_2818589769);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818589729(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818578714(self_2818578716) {
  var result_2818578717 = false;

    result_2818578717 = !((self_2818578716.val == null));

  return result_2818578717;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818578621(self_2818578622, filename_2818578623) {
  var result_2818578625 = null;

  BeforeRet: {
    result_2818578625 = undefined;
    break BeforeRet;
  };

  return result_2818578625;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818590175 = 0;
      colontmp__2818590175 = (n_2919236913).length - 1;
      var res_2818590176 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590176 <= colontmp__2818590175)) break Label4;
            i_2919236977 = res_2818590176;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818590176 = addInt(res_2818590176, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818590182 = 0;
      colontmp__2818590182 = (n_2919238113).length - 1;
      var res_2818590183 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590183 <= colontmp__2818590182)) break Label4;
            i_2919238177 = res_2818590183;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818590183 = addInt(res_2818590183, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818578742(self_2818578744) {
  var result_2818578745 = false;

    result_2818578745 = (self_2818578744.val == null);

  return result_2818578745;

}

function get_2818578734(self_2818578736) {
  var result_2818578737 = null;
  var result_2818578737_Idx = 0;

  BeforeRet: {
    if (isNone_2818578742(self_2818578736)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578737 = self_2818578736; result_2818578737_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578737, result_2818578737_Idx];

}
async function getLanguageServer_2818589797(self_2818589798) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818589871(targetFilename_2818589872) {
        var result_2818589874 = null;

        BeforeRet: {
          (await saveTempFile_2818578621(self_2818589798.document, targetFilename_2818589872));
          result_2818589874 = undefined;
          break BeforeRet;
        };

        return result_2818589874;

      }
      var Temporary3;

  var result_2818589801 = null;

  BeforeRet: {
      var oHEX60gensym846_2818589813 = getLanguageForFile_2902458372(self_2818589798.document.filename);
      if (!isSome_2315255872(oHEX60gensym846_2818589813)) Temporary2 = false; else {        var languageId_2818589836 = nimCopy(null, get_2818578464(oHEX60gensym846_2818589813), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818589836;
    }
    else {
      result_2818589801 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818589847 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818578714(self_2818589798.document.languageServer)) {
    result_2818589801 = self_2818589798.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818589798.document.languageServer = nimCopy(self_2818589798.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818589847, self_2818589798.document.filename)), NTI2818572486);
      if (isSome_2818578714(self_2818589798.document.languageServer)) {
      var callback_2818589885 = HEX3Aanonymous_2818589871;
      self_2818589798.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818578734(self_2818589798.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818589798.document.filename, callback_2818589885);
      }
      
      result_2818589801 = self_2818589798.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818589801;

}

function get_2818589946(self_2818589948) {
  var result_2818589949 = null;

    if (isNone_2818578742(self_2818589948)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818589949 = self_2818589948["val"];

  return result_2818589949;

}

function isSome_2818589976(self_2818589978) {
  var result_2818589979 = false;

    result_2818589979 = self_2818589978.has;

  return result_2818589979;

}

function isNone_2818590001(self_2818590003) {
  var result_2818590004 = false;

    result_2818590004 = !(self_2818590003.has);

  return result_2818590004;

}

function get_2818589993(self_2818589995) {
  var result_2818589996 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818590001(self_2818589995)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818589996 = self_2818589995.val;

  return result_2818589996;

}
async function gotoDefinitionAsync_2818589906(self_2818589907) {
  var result_2818589909 = null;

  BeforeRet: {
    var languageServer_2818589919 = (await getLanguageServer_2818589797(self_2818589907));
    if (isNone_2818578742(languageServer_2818589919)) {
    result_2818589909 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818578714(languageServer_2818589919)) {
    var definition_2818589971 = (await getDefinition_2919235651(get_2818589946(languageServer_2818589919), self_2818589907.document.filename, selection_2818572793(self_2818589907).Field1));
    if (isSome_2818589976(definition_2818589971)) {
    selectionHEX3D_2818572799(self_2818589907, toSelection_2415919597(get_2818589993(definition_2818589971).location));
    scrollToCursor_2818583332(self_2818589907, 0);
    }
    
    }
    
    result_2818589909 = undefined;
    break BeforeRet;
  };

  return result_2818589909;

}

function gotoDefinition_2818590128(self_2818590129) {
    var _ = gotoDefinitionAsync_2818589906(self_2818590129);

  
}

function gotoDefinitionJsWrapper_2818590124(self_2818590157) {
    gotoDefinition_2818590128(self_2818590157);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818590124(this));};
async function getCompletionsAsync_2818585422(self_2818585423) {
  var result_2818590038 = null;

  BeforeRet: {
    var languageServer_2818590048 = (await getLanguageServer_2818589797(self_2818585423));
    if (isNone_2818578742(languageServer_2818590048)) {
    result_2818590038 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818578714(languageServer_2818590048)) {
    var completions_2818590082 = (await getCompletions_2919235661(get_2818589946(languageServer_2818590048), self_2818585423.document.languageId, self_2818585423.document.filename, selection_2818572793(self_2818585423).Field1));
    self_2818585423.completions = nimCopy(null, completions_2818590082, NTI2919235662);
    self_2818585423.selectedCompletion = clamp_1660945119(self_2818585423.selectedCompletion, 0, (self_2818585423.completions).length - 1);
    if (((self_2818585423.completions).length == 0)) {
    self_2818585423.showCompletions = false;
    }
    else {
      self_2818585423.showCompletions = true;
    }
    
    markDirty_2382364710(self_2818585423);
    }
    
    result_2818590038 = undefined;
    break BeforeRet;
  };

  return result_2818590038;

}

function getCompletions_2818590192(self_2818590193) {
    var _ = getCompletionsAsync_2818585422(self_2818590193);

  
}

function getCompletionsJsWrapper_2818590188(self_2818590221) {
    getCompletions_2818590192(self_2818590221);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818590188(this));};

function hideCompletions_2818590242(self_2818590243) {
    self_2818590243.showCompletions = false;
    markDirty_2382364710(self_2818590243);

  
}

function hideCompletionsJsWrapper_2818590238(self_2818590271) {
    hideCompletions_2818590242(self_2818590271);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818590238(this));};

function selectPrevCompletion_2818590292(self_2818590293) {
    if ((0 < (self_2818590293.completions).length)) {
    self_2818590293.selectedCompletion = clamp_1660945119(subInt(self_2818590293.selectedCompletion, 1), 0, subInt((self_2818590293.completions).length, 1));
    }
    else {
      self_2818590293.selectedCompletion = 0;
    }
    
    markDirty_2382364710(self_2818590293);

  
}

function selectPrevCompletionJsWrapper_2818590288(self_2818590335) {
    selectPrevCompletion_2818590292(self_2818590335);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818590288(this));};

function selectNextCompletion_2818590356(self_2818590357) {
    if ((0 < (self_2818590357.completions).length)) {
    self_2818590357.selectedCompletion = clamp_1660945119(addInt(self_2818590357.selectedCompletion, 1), 0, subInt((self_2818590357.completions).length, 1));
    }
    else {
      self_2818590357.selectedCompletion = 0;
    }
    
    markDirty_2382364710(self_2818590357);

  
}

function selectNextCompletionJsWrapper_2818590352(self_2818590399) {
    selectNextCompletion_2818590356(self_2818590399);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818590352(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818590608 = 0;
      var L_2818590609 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590608 < L_2818590609)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818590608, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818590608 = addInt(i_2818590608, 1);
            if (!(((x_1593835575).length == L_2818590609))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2415919425(cursor_2415919426) {
  var result_2415919427 = [];

  BeforeRet: {
    result_2415919427 = nimCopy(null, (HEX24_369098760(cursor_2415919426.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2415919426.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2415919427;

}

function addQuoted_2818590486(s_2818590488, s_2818590488_Idx, x_2818590489) {
    s_2818590488[s_2818590488_Idx].push.apply(s_2818590488[s_2818590488_Idx], HEX24_2415919425(x_2818590489));;

  
}

function addQuoted_2818590515(s_2818590517, s_2818590517_Idx, x_2818590518) {
    s_2818590517[s_2818590517_Idx].push.apply(s_2818590517[s_2818590517_Idx], reprEnum(x_2818590518, NTI2919235627));;

  
}

function HEX24_2818590436(x_2818590438) {
  var result_2818590439 = [[]];

    result_2818590439[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym914_2818590450 = 0;
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [110,97,109,101]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_1593835572(result_2818590439, 0, x_2818590438.name);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [115,99,111,112,101]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_1593835572(result_2818590439, 0, x_2818590438.scope);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [108,111,99,97,116,105,111,110]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_2818590486(result_2818590439, 0, x_2818590438.location);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [102,105,108,101,110,97,109,101]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_1593835572(result_2818590439, 0, x_2818590438.filename);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [107,105,110,100]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_2818590515(result_2818590439, 0, x_2818590438.kind);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [116,121,112]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_1593835572(result_2818590439, 0, x_2818590438.typ);
    if ((0 < countHEX60gensym914_2818590450)) {
    result_2818590439[0].push.apply(result_2818590439[0], [44,32]);;
    }
    
    result_2818590439[0].push.apply(result_2818590439[0], [100,111,99]);;
    result_2818590439[0].push.apply(result_2818590439[0], [58,32]);;
    countHEX60gensym914_2818590450 += 1;
    addQuoted_1593835572(result_2818590439, 0, x_2818590438.doc);
    result_2818590439[0].push.apply(result_2818590439[0], [41]);;

  return result_2818590439[0];

}

function formatValue_2818590431(result_2818590433, result_2818590433_Idx, value_2818590434, specifier_2818590435) {
    formatValue_721420459(result_2818590433, result_2818590433_Idx, HEX24_2818590436(value_2818590434), specifier_2818590435);

  
}

function applySelectedCompletion_2818590420(self_2818590421) {
  BeforeRet: {
    if (!(self_2818590421.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818590421.completions).length - 1 < self_2818590421.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818590425 = nimCopy(null, self_2818590421.completions[chckIndx(self_2818590421.selectedCompletion, 0, (self_2818590421.completions).length - 1)], NTI2919235630);
    var fmtRes_2818590430 = [mnewString(0)];
    fmtRes_2818590430[0].push.apply(fmtRes_2818590430[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818590431(fmtRes_2818590430, 0, com_2818590425, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818590430[0], NTI33554449)]);
    var cursor_2818590548 = nimCopy(null, selection_2818572793(self_2818590421).Field1, NTI2415919113);
    if ((cursor_2818590548.Field1 == 0)) {
    selectionsHEX3D_2818573049(self_2818590421, insert_2818579410(self_2818590421.document, [nimCopy(null, toSelection_2415919597(cursor_2818590548), NTI2415919115)], selections_2818572790(self_2818590421), com_2818590425.name, true, true, false));
    }
    else {
      var line_2818590549 = getLine_2818572654(self_2818590421.document, cursor_2818590548.Field0);
      var column_2818590550 = cursor_2818590548.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818590550)) break Label2;
            switch (line_2818590549[chckIndx(subInt(column_2818590550, 1), 0, (line_2818590549).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818590550 = subInt(column_2818590550, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573049(self_2818590421, edit_2818579627(self_2818590421.document, [nimCopy(null, {Field0: {Field0: cursor_2818590548.Field0, Field1: column_2818590550}, Field1: nimCopy(null, cursor_2818590548, NTI2415919113)}, NTI2818584166)], selections_2818572790(self_2818590421), com_2818590425.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818590416(self_2818590591) {
    applySelectedCompletion_2818590420(self_2818590591);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818590416(this));};

function handleHexChar_2046820363(c_2046820364) {
  var result_2046820365 = 0;

    switch (c_2046820364) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820365 = subInt(c_2046820364, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820365 = addInt(subInt(c_2046820364, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820365 = addInt(subInt(c_2046820364, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820365;

}

function hexbyte_2046820409(hex_2046820410) {
  var result_2046820411 = 0;

    result_2046820411 = handleHexChar_2046820363(hex_2046820410);

  return result_2046820411;

}

function parseOid_2046820432(str_2046820433) {
  var result_2046820434 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820433).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820434.padding = 0;
    result_2046820434.time = 0;
    Label1: {
      var i_2046820439 = 0;
      var i_2969567335 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567335 < 4)) break Label3;
            i_2046820439 = i_2969567335;
            var hexValue_2046820444 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, i_2046820439), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, i_2046820439), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.time = (result_2046820434.time | (hexValue_2046820444 << mulInt(i_2046820439, 8)));
            i_2969567335 = addInt(i_2969567335, 1);
          }
      };
    };
    result_2046820434.fuzz = 0;
    Label4: {
      var i_2046820453 = 0;
      var i_2969567338 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567338 < 4)) break Label6;
            i_2046820453 = i_2969567338;
            var hexValue_2046820458 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, addInt(i_2046820453, 4)), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, addInt(i_2046820453, 4)), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.fuzz = (result_2046820434.fuzz | (hexValue_2046820458 << mulInt(i_2046820453, 8)));
            i_2969567338 = addInt(i_2969567338, 1);
          }
      };
    };
    result_2046820434.count = 0;
    Label7: {
      var i_2046820467 = 0;
      var i_2969567341 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2969567341 < 4)) break Label9;
            i_2046820467 = i_2969567341;
            var hexValue_2046820472 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, addInt(i_2046820467, 8)), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, addInt(i_2046820467, 8)), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.count = (result_2046820434.count | (hexValue_2046820472 << mulInt(i_2046820467, 8)));
            i_2969567341 = addInt(i_2969567341, 1);
          }
      };
    };
  };

  return result_2046820434;

}

function parseId_2046820606(s_2046820607) {
  var result_2046820608 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820607).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820607, [39]);
    result_2046820608 = nimCopy(result_2046820608, idNone_2046820599(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820608 = nimCopy(result_2046820608, parseOid_2046820432(s_2046820607), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820608;

}
var IdPrint_2969567234 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2969567235 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2969567236 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2969567237 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2969567238 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2969567239 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2969567240 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2969567241 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2969567242 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2969567243 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2969567244 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2969567245 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2969567246 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2969567247 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2969567248 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2969567249 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2969567250 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2969567251 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2969567252 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2969567253 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2969567254 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2969567255 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2969567256 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2969567257 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2969567258 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2969567259 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2969567260 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2969567261 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2969567262 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2969567263 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2969567264 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2969567265 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2969567266 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2969567267 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2969567268 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2969567269 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2969567270 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2969567271 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2969567272 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2969567273 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2969567274 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2969567275 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2969567276 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2969567277 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2969567278 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2969567279 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2969567280 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2969567281 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2969567282 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2969567283 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2969567284 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2969567285 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2969567286 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2969567287 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2969567288 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2969567289 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2969567290 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2969567291 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2969567292 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2969567293 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2969567294 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2969567295 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2969567296 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2969567297 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2969567298 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2969567299 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2969567300 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2969567301 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2969567302 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2969567303 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2969567304 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2969567305 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2969567306 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2969567307 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2969567308 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2969567309 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2969567310 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2969567311 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2969567312 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2969567313 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2969567314 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2969567315 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2969567316 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2969567317 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2969567318 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2969567319 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2969567320 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2969567321 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2969567322 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2969567323 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2969567324 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2969567325 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2969567326 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2969567327 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2969567328 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2969567329 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2969567330 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2969567331 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2969567332 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2969567333 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_3019898894 = [0];
var dependencyGlobalRevision_3019898912 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_3120562389 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_3019899319(t_3019899322, key_3019899323, hc_3019899324, hc_3019899324_Idx) {
  var result_3019899325 = 0;

  BeforeRet: {
    hc_3019899324[hc_3019899324_Idx] = hash_1325400236(key_3019899323);
    if ((hc_3019899324[hc_3019899324_Idx] == 0)) {
    hc_3019899324[hc_3019899324_Idx] = 314159265;
    }
    
    if (((t_3019899322.data).length == 0)) {
    result_3019899325 = -1;
    break BeforeRet;
    }
    
    var h_3019899413 = (hc_3019899324[hc_3019899324_Idx] & (t_3019899322.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field0)) break Label2;
          if (((t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field0 == hc_3019899324[hc_3019899324_Idx]) && (t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field1 == key_3019899323))) {
          result_3019899325 = h_3019899413;
          break BeforeRet;
          }
          
          h_3019899413 = nextTry_1308622883(h_3019899413, (t_3019899322.data).length - 1);
        }
    };
    result_3019899325 = subInt(-1, h_3019899413);
  };

  return result_3019899325;

}

function mustRehash_3019899843(t_3019899845) {
  var result_3019899846 = false;

    if (!((t_3019899845.counter < (t_3019899845.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019899846 = ((mulInt((t_3019899845.data).length, 2) < mulInt(t_3019899845.counter, 3)) || (subInt((t_3019899845.data).length, t_3019899845.counter) < 4));

  return result_3019899846;

}

function rawInsert_3019900536(t_3019900540, data_3019900541, data_3019900541_Idx, key_3019900542, val_3019900543, hc_3019900544, h_3019900545) {
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field1 = key_3019900542;
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field2 = nimCopy(null, val_3019900543, NTI33554449);
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field0 = hc_3019900544;

  
}

function enlarge_3019900100(t_3019900103) {
    var n_3019900106 = [];
    n_3019900106 = new Array(chckRange(mulInt((t_3019900103.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019900103.data).length, 2), 0, 2147483647) ; ++i) { n_3019900106[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3019900103.data; t_3019900103.data = n_3019900106; n_3019900106 = Temporary1;    Label2: {
      var i_3019900204 = 0;
      var colontmp__2952790093 = 0;
      colontmp__2952790093 = (n_3019900106).length - 1;
      var res_2952790094 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790094 <= colontmp__2952790093)) break Label4;
            i_3019900204 = res_2952790094;
            var eh_3019900285 = n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019900285)) {
            var j_3019900289 = (eh_3019900285 & (t_3019900103.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019900103.data[chckIndx(j_3019900289, 0, (t_3019900103.data).length - 1)].Field0)) break Label6;
                  j_3019900289 = nextTry_1308622883(j_3019900289, (t_3019900103.data).length - 1);
                }
            };
            rawInsert_3019900536(t_3019900103, t_3019900103, "data", n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field1, n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field2, eh_3019900285, j_3019900289);
            }
            
            res_2952790094 = addInt(res_2952790094, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019900786(t_3019900789, key_3019900790, hc_3019900791) {
  var result_3019900792 = 0;

  BeforeRet: {
    if (((t_3019900789.data).length == 0)) {
    result_3019900792 = -1;
    break BeforeRet;
    }
    
    var h_3019900877 = (hc_3019900791 & (t_3019900789.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field0)) break Label2;
          if (((t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field0 == hc_3019900791) && (t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field1 == key_3019900790))) {
          result_3019900792 = h_3019900877;
          break BeforeRet;
          }
          
          h_3019900877 = nextTry_1308622883(h_3019900877, (t_3019900789.data).length - 1);
        }
    };
    result_3019900792 = subInt(-1, h_3019900877);
  };

  return result_3019900792;

}

function HEX5BHEX5DHEX3D_3019899224(t_3019899227, key_3019899228, val_3019899229) {
    if (((t_3019899227.data).length == 0)) {
    var correctSizeHEX60gensym3_3019899313 = slotsNeeded_1308622891(32);
    t_3019899227.counter = 0;
    t_3019899227.data = new Array(chckRange(correctSizeHEX60gensym3_3019899313, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3019899313, 0, 2147483647) ; ++i) { t_3019899227.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3019899318 = [0];
    var index_3019899675 = rawGet_3019899319(t_3019899227, key_3019899228, hc_3019899318, 0);
    if ((0 <= index_3019899675)) {
    t_3019899227.data[chckIndx(index_3019899675, 0, (t_3019899227.data).length - 1)].Field2 = nimCopy(null, val_3019899229, NTI33554449);
    }
    else {
      if (((t_3019899227.data).length == 0)) {
      var correctSizeHEX60gensym8_3019899838 = slotsNeeded_1308622891(32);
      t_3019899227.counter = 0;
      t_3019899227.data = new Array(chckRange(correctSizeHEX60gensym8_3019899838, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3019899838, 0, 2147483647) ; ++i) { t_3019899227.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3019899843(t_3019899227)) {
      enlarge_3019900100(t_3019899227);
      index_3019899675 = rawGetKnownHC_3019900786(t_3019899227, key_3019899228, hc_3019899318[0]);
      }
      
      index_3019899675 = subInt(-1, index_3019899675);
      rawInsert_3019900536(t_3019899227, t_3019899227, "data", key_3019899228, val_3019899229, hc_3019899318[0], index_3019899675);
      t_3019899227.counter = addInt(t_3019899227.counter, 1);
    }
    

  
}

function initDoublyLinkedList_3019901154() {
  var result_3019901156 = ({head: null, tail: null});

  return result_3019901156;

}

function initTable_3019901160(initialSize_3019901163) {
  var result_3019901164 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_3019901166 = slotsNeeded_1308622891(chckRange(initialSize_3019901163, 0, 2147483647));
    result_3019901164.counter = 0;
    result_3019901164.data = new Array(chckRange(correctSizeHEX60gensym16_3019901166, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3019901166, 0, 2147483647) ; ++i) { result_3019901164.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901164;

}

function correctSize_3036676117(cap_3036676118) {
  var result_3036676119 = 0;

    result_3036676119 = cap_3036676118;

  return result_3036676119;

}

function newLruCache_3019901144(capacity_3019901147, recordRemovedKeys_3019901148) {
  var result_3019901149 = null;

    result_3019901149 = {capacity: capacity_3019901147, list: initDoublyLinkedList_3019901154(), table: initTable_3019901160(correctSize_3036676117(capacity_3019901147)), recordRemovedKeys: recordRemovedKeys_3019901148, removedKeys: ({data: [], counter: 0})};

  return result_3019901149;

}

function newCache_3019901139(capacity_3019901142) {
  var result_3019901143 = null;

    result_3019901143 = newLruCache_3019901144(capacity_3019901142, false);

  return result_3019901143;

}

function initDoublyLinkedList_3019901226() {
  var result_3019901228 = ({head: null, tail: null});

  return result_3019901228;

}

function initTable_3019901232(initialSize_3019901235) {
  var result_3019901236 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_3019901238 = slotsNeeded_1308622891(chckRange(initialSize_3019901235, 0, 2147483647));
    result_3019901236.counter = 0;
    result_3019901236.data = new Array(chckRange(correctSizeHEX60gensym18_3019901238, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_3019901238, 0, 2147483647) ; ++i) { result_3019901236.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901236;

}

function newLruCache_3019901216(capacity_3019901219, recordRemovedKeys_3019901220) {
  var result_3019901221 = null;

    result_3019901221 = {capacity: capacity_3019901219, list: initDoublyLinkedList_3019901226(), table: initTable_3019901232(correctSize_3036676117(capacity_3019901219)), recordRemovedKeys: recordRemovedKeys_3019901220, removedKeys: ({data: [], counter: 0})};

  return result_3019901221;

}

function newCache_3019901211(capacity_3019901214) {
  var result_3019901215 = null;

    result_3019901215 = newLruCache_3019901216(capacity_3019901214, false);

  return result_3019901215;

}

function initDoublyLinkedList_3019901294() {
  var result_3019901296 = ({head: null, tail: null});

  return result_3019901296;

}

function initTable_3019901300(initialSize_3019901303) {
  var result_3019901304 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_3019901306 = slotsNeeded_1308622891(chckRange(initialSize_3019901303, 0, 2147483647));
    result_3019901304.counter = 0;
    result_3019901304.data = new Array(chckRange(correctSizeHEX60gensym20_3019901306, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3019901306, 0, 2147483647) ; ++i) { result_3019901304.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901304;

}

function newLruCache_3019901284(capacity_3019901287, recordRemovedKeys_3019901288) {
  var result_3019901289 = null;

    result_3019901289 = {capacity: capacity_3019901287, list: initDoublyLinkedList_3019901294(), table: initTable_3019901300(correctSize_3036676117(capacity_3019901287)), recordRemovedKeys: recordRemovedKeys_3019901288, removedKeys: ({data: [], counter: 0})};

  return result_3019901289;

}

function newCache_3019901279(capacity_3019901282) {
  var result_3019901283 = null;

    result_3019901283 = newLruCache_3019901284(capacity_3019901282, false);

  return result_3019901283;

}

function newDependencyGraph_3019899156() {
  var result_3019899157 = null;

    result_3019899157 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3019899157.revision = 0;
    HEX5BHEX5DHEX3D_3019899224(result_3019899157.queryNames, -1, []);
    result_3019899157.verified = newCache_3019901139(2000);
    result_3019899157.changed = newCache_3019901139(2000);
    result_3019899157.fingerprints = newCache_3019901211(2000);
    result_3019899157.dependencies = newCache_3019901279(2000);

  return result_3019899157;

}

function hash_2046820392(x_2046820394) {
  var result_2046820395 = 0;

    result_2046820395 = hashWangYi1_1325400244(x_2046820394);

  return result_2046820395;

}

function hash_2046820388(oid_2046820389) {
  var result_2046820390 = 0;

    var h_2046820391 = 0;
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.time));
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.fuzz));
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.count));
    result_2046820390 = HEX21HEX24_1325400082(h_2046820391);

  return result_2046820390;

}

function hash_2046820596(id_2046820597) {
  var result_2046820598 = 0;

  BeforeRet: {
    result_2046820598 = hash_2046820388(id_2046820597);
    break BeforeRet;
  };

  return result_2046820598;

}

function hash_3003122712(x_3003122714) {
  var result_3003122715 = 0;

    result_3003122715 = HEX21HEX26_1325400067(result_3003122715, hash_2046820596(x_3003122714["Field0"]));
    result_3003122715 = HEX21HEX26_1325400067(result_3003122715, hash_1325400236(x_3003122714["Field1"]));
    result_3003122715 = HEX21HEX24_1325400082(result_3003122715);

  return result_3003122715;

}

function HEX3DHEX3D_2046820384(oid1_2046820385, oid2_2046820386) {
  var result_2046820387 = false;

    result_2046820387 = (((oid1_2046820385.time == oid2_2046820386.time) && (oid1_2046820385.fuzz == oid2_2046820386.fuzz)) && (oid1_2046820385.count == oid2_2046820386.count));

  return result_2046820387;

}

function HEX3DHEX3D_2046820592(idA_2046820593, idB_2046820594) {
  var result_2046820595 = false;

  BeforeRet: {
    result_2046820595 = HEX3DHEX3D_2046820384(idA_2046820593, idB_2046820594);
    break BeforeRet;
  };

  return result_2046820595;

}

function HEX3DHEX3D_3003123049(x_3003123051, y_3003123052) {
  var result_3003123053 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820592(x_3003123051["Field0"], y_3003123052["Field0"]))) {
    result_3003123053 = false;
    break BeforeRet;
    }
    
    if (!((x_3003123051["Field1"] == y_3003123052["Field1"]))) {
    result_3003123053 = false;
    break BeforeRet;
    }
    
    result_3003123053 = true;
    break BeforeRet;
  };

  return result_3003123053;

}

function rawGet_3003122705(t_3003122708, key_3003122709, hc_3003122710, hc_3003122710_Idx) {
  var result_3003122711 = 0;

  BeforeRet: {
    hc_3003122710[hc_3003122710_Idx] = hash_3003122712(key_3003122709);
    if ((hc_3003122710[hc_3003122710_Idx] == 0)) {
    hc_3003122710[hc_3003122710_Idx] = 314159265;
    }
    
    if (((t_3003122708.data).length == 0)) {
    result_3003122711 = -1;
    break BeforeRet;
    }
    
    var h_3003122808 = (hc_3003122710[hc_3003122710_Idx] & (t_3003122708.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field0)) break Label2;
          if (((t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field0 == hc_3003122710[hc_3003122710_Idx]) && HEX3DHEX3D_3003123049(t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field1, key_3003122709))) {
          result_3003122711 = h_3003122808;
          break BeforeRet;
          }
          
          h_3003122808 = nextTry_1308622883(h_3003122808, (t_3003122708.data).length - 1);
        }
    };
    result_3003122711 = subInt(-1, h_3003122808);
  };

  return result_3003122711;

}

function hasKey_3003122698(t_3003122701, key_3003122702) {
  var result_3003122703 = false;

    var hc_3003122704 = [0];
    result_3003122703 = (0 <= rawGet_3003122705(t_3003122701, key_3003122702, hc_3003122704, 0));

  return result_3003122703;

}

function contains_3003122692(t_3003122695, key_3003122696) {
  var result_3003122697 = false;

  BeforeRet: {
    result_3003122697 = hasKey_3003122698(t_3003122695, key_3003122696);
    break BeforeRet;
  };

  return result_3003122697;

}

function contains_3003122598(cache_3003122601, key_3003122602) {
  var result_3003122603 = false;

    result_3003122603 = contains_3003122692(cache_3003122601.table, key_3003122602);

  return result_3003122603;

}

function HEX24_2046820477(oid_2046820478) {
            var Temporary4;

  var result_2046820479 = [];

    if (result_2046820479.length < 24) { for (var i = result_2046820479.length; i < 24; ++i) result_2046820479.push(0); }
         else {result_2046820479.length = 24; };
    Label1: {
      var i_2046820485 = 0;
      var i_2952790099 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790099 < 12)) break Label3;
            i_2046820485 = i_2952790099;
            if ((i_2046820485 < 4)) {
            Temporary4 = oid_2046820478.time;
            }
            else {
            if ((i_2046820485 < 8)) {
            Temporary4 = oid_2046820478.fuzz;
            }
            else {
            Temporary4 = oid_2046820478.count;
            }
            }
            var value_2046820486 = Temporary4;
            var byteOffset_2046820487 = modInt(i_2046820485, 4);
            var b_2046820492 = (value_2046820486 >> mulInt(byteOffset_2046820487, 8));
            result_2046820479[chckIndx(mulInt(2, i_2046820485), 0, (result_2046820479).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820492 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820479[chckIndx(addInt(mulInt(2, i_2046820485), 1), 0, (result_2046820479).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820492 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2952790099 = addInt(i_2952790099, 1);
          }
      };
    };

  return result_2046820479;

}

function HEX24_2046820589(id_2046820590) {
  var result_2046820591 = [];

  BeforeRet: {
    result_2046820591 = nimCopy(null, HEX24_2046820477(id_2046820590), NTI33554449);
    break BeforeRet;
  };

  return result_2046820591;

}

function formatValue_3019899100(result_3019899102, result_3019899102_Idx, value_3019899103, specifier_3019899104) {
    formatValue_721420459(result_3019899102, result_3019899102_Idx, HEX24_2046820589(value_3019899103), specifier_3019899104);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2701131953(n_2701131955, radix_2701131956, spec_2701131957) {
    var Temporary1;

  var result_2701131958 = [];

    var n_2701131961 = n_2701131955;
    var negative_2701131962 = (n_2701131961 < 0);
    if (negative_2701131962) {
    Temporary1 = ((~(n_2701131961) + 1) );
    }
    else {
    Temporary1 = n_2701131961;
    }
    
    var v_2701131963 = Temporary1;
    var xx_2701131964 = [];
    if (spec_2701131957.alternateForm) {
    switch (spec_2701131957.typ) {
    case 88:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2701131964 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2701131964 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2701131963 == 0)) {
    result_2701131958 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2701131963)) break Label3;
            var d_2701131965 = (v_2701131963 % radix_2701131956);
            v_2701131963 = Math.trunc(((v_2701131963 / radix_2701131956) ));
            result_2701131958.push.apply(result_2701131958, mkDigit_721420293(chckRange(d_2701131965, -2147483648, 2147483647), spec_2701131957.typ));;
          }
      };
      Label4: {
        var idx_2701131970 = 0;
        var colontmp__2952790103 = 0;
        colontmp__2952790103 = divInt((result_2701131958).length, 2);
        var i_2952790104 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2952790104 < colontmp__2952790103)) break Label6;
              idx_2701131970 = i_2952790104;
              var Temporary7 = result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)] = result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)] = Temporary7;              i_2952790104 = addInt(i_2952790104, 1);
            }
        };
      };
    }
    
    if (spec_2701131957.padWithZero) {
    var sign_2701131975 = (negative_2701131962 || !((spec_2701131957.sign == 45)));
    var toFill_2701131979 = subInt(subInt(subInt(spec_2701131957.minimumWidth, (result_2701131958).length), (xx_2701131964).length), (sign_2701131975 ? 1 : 0));
    if ((0 < toFill_2701131979)) {
    result_2701131958 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2701131979, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
    }
    
    }
    
    if (negative_2701131962) {
    result_2701131958 = nimCopy(null, ([45] || []).concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
    if (!((spec_2701131957.sign == 45))) {
    result_2701131958 = nimCopy(null, [spec_2701131957.sign].concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, (xx_2701131964 || []).concat(result_2701131958 || []), NTI33554449);
    }
    }
    if ((spec_2701131957.align == 60)) {
    Label8: {
      var i_2701131984 = 0;
      var colontmp__2952790107 = 0;
      colontmp__2952790107 = (result_2701131958).length;
      var i_2952790108 = colontmp__2952790107;
      Label9: {
          Label10: while (true) {
          if (!(i_2952790108 < spec_2701131957.minimumWidth)) break Label10;
            i_2701131984 = i_2952790108;
            addChar(result_2701131958, spec_2701131957.fill);;
            i_2952790108 = addInt(i_2952790108, 1);
          }
      };
    };
    }
    else {
      var toFill_2701131985 = subInt(spec_2701131957.minimumWidth, (result_2701131958).length);
      if ((spec_2701131957.align == 94)) {
      var half_2701131986 = divInt(toFill_2701131985, 2);
      result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(half_2701131986, 0, 2147483647)) || []).concat(result_2701131958 || [],nsuRepeatChar(spec_2701131957.fill, chckRange(subInt(toFill_2701131985, half_2701131986), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2701131985)) {
        result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(toFill_2701131985, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2701131958;

}

function formatValue_2701131945(result_2701131947, result_2701131947_Idx, value_2701131948, specifier_2701131949) {
  BeforeRet: {
    if (((specifier_2701131949).length == 0)) {
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], HEX24_369098760(value_2701131948));;
    break BeforeRet;
    }
    
    var spec_2701131950 = parseStandardFormatSpecifier_721420346(specifier_2701131949, 0, false);
    var radix_2701131951 = 10;
    switch (spec_2701131950.typ) {
    case 120:
    case 88:
      radix_2701131951 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2701131951 = 2;
      break;
    case 111:
      radix_2701131951 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2701131950.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], formatInt_2701131953(value_2701131948, radix_2701131951, spec_2701131950));;
  };

  
}

function HEX24_3019899092(item_3019899093) {
  var result_3019899094 = [];

  BeforeRet: {
    var fmtRes_3019899099 = [mnewString(0)];
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [40]);;
    formatValue_3019899100(fmtRes_3019899099, 0, item_3019899093.Field0, []);
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [44,32]);;
    formatValue_2701131945(fmtRes_3019899099, 0, item_3019899093.Field1, []);
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [41]);;
    result_3019899094 = nimCopy(null, fmtRes_3019899099[0], NTI33554449);
    break BeforeRet;
  };

  return result_3019899094;

}

function raiseKeyError_3003123345(key_3003123347) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019899092(key_3003123347) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003123251(t_3003123254, key_3003123255) {
  var result_3003123256 = null;
  var result_3003123256_Idx = 0;

    var hcHEX60gensym22_3003123257 = [0];
    var indexHEX60gensym22_3003123264 = rawGet_3003122705(t_3003123254, key_3003123255, hcHEX60gensym22_3003123257, 0);
    if ((0 <= indexHEX60gensym22_3003123264)) {
    result_3003123256 = t_3003123254.data[chckIndx(indexHEX60gensym22_3003123264, 0, (t_3003123254.data).length - 1)]; result_3003123256_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003123255);
    }
    

  return [result_3003123256, result_3003123256_Idx];

}

function remove_3003123372(L_3003123374, n_3003123375) {
    if ((n_3003123375 == L_3003123374.tail)) {
    L_3003123374.tail = n_3003123375.prev;
    }
    
    if ((n_3003123375 == L_3003123374.head)) {
    L_3003123374.head = n_3003123375.next;
    }
    
    if (!((n_3003123375.next == null))) {
    n_3003123375.next.prev = n_3003123375.prev;
    }
    
    if (!((n_3003123375.prev == null))) {
    n_3003123375.prev.next = n_3003123375.next;
    }
    

  
}

function prepend_3003123700(L_3003123702, n_3003123703) {
    n_3003123703.prev = null;
    n_3003123703.next = L_3003123702.head;
    if (!((L_3003123702.head == null))) {
    if (!((L_3003123702.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003123702.head.prev = n_3003123703;
    }
    
    L_3003123702.head = n_3003123703;
    if ((L_3003123702.tail == null)) {
    L_3003123702.tail = n_3003123703;
    }
    

  
}

function HEX5BHEX5D_3003123165(cache_3003123168, key_3003123169) {
    var Temporary1;

  var result_3003123170 = null;

    var node_3003123358 = (Temporary1 = HEX5BHEX5D_3003123251(cache_3003123168.table, key_3003123169), Temporary1)[0][Temporary1[1]];
    result_3003123170 = node_3003123358.value.val;
    remove_3003123372(cache_3003123168.list, node_3003123358);
    prepend_3003123700(cache_3003123168.list, node_3003123358);

  return result_3003123170;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2952790138 = 0;
      colontmp__2952790138 = n_855639143;
      var res_2952790139 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790139 <= colontmp__2952790138)) break Label3;
            i_855639149 = res_2952790139;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2952790139 = addInt(res_2952790139, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3019898895(s_3019898896, n_3019898897) {
  var result_3019898898 = [];

    result_3019898898 = nimCopy(null, nsuRepeatStr(s_3019898896, n_3019898897), NTI33554449);

  return result_3019898898;

}

function symbolName_2986346458(a_2986346460) {
  var result_2986346461 = [];

    result_2986346461 = nimCopy(null, names_2986346468[chckIndx(subInt(a_2986346460, 0), 0, (names_2986346468).length - 1)], NTI33554449);

  return result_2986346461;

}

function len_2986344536(node_2986344537) {
  var result_2986344538 = 0;

  BeforeRet: {
    result_2986344538 = (node_2986344537.children).length;
    break BeforeRet;
  };

  return result_2986344538;

}

function collectionToString_2986346556(x_2986346558, prefix_2986346559, separator_2986346560, suffix_2986346561) {
  var result_2986346562 = [[]];

    result_2986346562[0] = nimCopy(null, prefix_2986346559, NTI33554449);
    var firstElement_2986346563 = true;
    Label1: {
      var value_2986346567 = 0;
      var i_2952790143 = 0;
      var L_2952790144 = (x_2986346558).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790143 < L_2952790144)) break Label3;
            value_2986346567 = x_2986346558[i_2952790143];
            if (firstElement_2986346563) {
            firstElement_2986346563 = false;
            }
            else {
            result_2986346562[0].push.apply(result_2986346562[0], separator_2986346560);;
            }
            
            addQuoted_855639425(result_2986346562, 0, value_2986346567);
            i_2952790143 += 1;
            if (!(((x_2986346558).length == L_2952790144))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986346562[0].push.apply(result_2986346562[0], suffix_2986346561);;

  return result_2986346562[0];

}

function HEX24_2986346552(x_2986346554) {
  var result_2986346555 = [];

    result_2986346555 = nimCopy(null, collectionToString_2986346556(x_2986346554, [64,91], [44,32], [93]), NTI33554449);

  return result_2986346555;

}

function find_2986344563(a_2986344566, item_2986344567) {
  var result_2986344568 = 0;

  BeforeRet: {
    result_2986344568 = 0;
    Label1: {
      var i_2986344590 = null;
      var i_2952790148 = 0;
      var L_2952790149 = (a_2986344566).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790148 < L_2952790149)) break Label3;
            i_2986344590 = a_2986344566[chckIndx(i_2952790148, 0, (a_2986344566).length - 1)];
            if ((i_2986344590 == item_2986344567)) {
            break BeforeRet;
            }
            
            result_2986344568 = addInt(result_2986344568, 1);
            i_2952790148 = addInt(i_2952790148, 1);
            if (!(((a_2986344566).length == L_2952790149))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986344568 = -1;
  };

  return result_2986344568;

}

function index_2986344556(node_2986344557) {
  var result_2986344558 = 0;

  BeforeRet: {
    if ((node_2986344557.parent == null)) {
    result_2986344558 = -1;
    break BeforeRet;
    }
    
    result_2986344558 = find_2986344563(node_2986344557.parent.children, node_2986344557);
    break BeforeRet;
  };

  return result_2986344558;

}

function reverse_2986346425(a_2986346427, first_2986346428, last_2986346429) {
    var x_2986346430 = first_2986346428;
    var y_2986346431 = last_2986346429;
    Label1: {
        Label2: while (true) {
        if (!(x_2986346430 < y_2986346431)) break Label2;
          var Temporary3 = a_2986346427[chckIndx(x_2986346430, 0, (a_2986346427).length - 1)]; a_2986346427[chckIndx(x_2986346430, 0, (a_2986346427).length - 1)] = a_2986346427[chckIndx(y_2986346431, 0, (a_2986346427).length - 1)]; a_2986346427[chckIndx(y_2986346431, 0, (a_2986346427).length - 1)] = Temporary3;          y_2986346431 = subInt(y_2986346431, 1);
          x_2986346430 = addInt(x_2986346430, 1);
        }
    };

  
}

function reverse_2986346419(a_2986346421) {
    reverse_2986346425(a_2986346421, 0, chckRange(nimMax(0, (a_2986346421).length - 1), 0, 2147483647));

  
}

function path_2986346403(node_2986346404) {
  var result_2986346405 = [];

    result_2986346405 = nimCopy(null, [], NTI2986345537);
    var node_2986346410 = node_2986346404;
    Label1: {
        Label2: while (true) {
        if (!!((node_2986346410.parent == null))) break Label2;
          result_2986346405.push(index_2986344556(node_2986346410));;
          node_2986346410 = node_2986346410.parent;
        }
    };
    reverse_2986346419(result_2986346405);

  return result_2986346405;

}

function HEX24_2986346455(node_2986346456) {
  var result_2986346457 = [];

    result_2986346457 = nimCopy(null, (symbolName_2986346458(node_2986346456.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820592(node_2986346456.id, idNone_2046820599()))) {
    result_2986346457.push.apply(result_2986346457, (HEX24_2046820589(node_2986346456.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820592(node_2986346456.reff, idNone_2046820599()))) {
    result_2986346457.push.apply(result_2986346457, ([114,101,102,102,58,32] || []).concat(HEX24_2046820589(node_2986346456.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2986346456.text).length)) {
    result_2986346457.push.apply(result_2986346457, ([39] || []).concat(node_2986346456.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2986344536(node_2986346456))) {
    result_2986346457.push.apply(result_2986346457, (HEX24_369098760(len_2986344536(node_2986346456)) || []).concat([44,32] || []));;
    }
    
    result_2986346457.push.apply(result_2986346457, HEX24_2986346552(path_2986346403(node_2986346456)));;
    result_2986346457.push.apply(result_2986346457, [41]);;

  return result_2986346457;

}

function getTypeKey_3003194679(ctxHEX60gensym90_3003194680, itemIdHEX60gensym90_3003194681) {
  var result_3003194682 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2952790152 = nimCopy(null, itemIdHEX60gensym90_3003194681, NTI3019898905);
    var colontmp__2952790153 = 0;
    result_3003194682 = nimCopy(result_3003194682, {Field0: nimCopy(null, colontmp__2952790152, NTI3019898905), Field1: colontmp__2952790153}, NTI3019898908);
    break BeforeRet;
  };

  return result_3003194682;

}

function bigEndian32_2046820522(b_2046820523) {
  var result_2046820524 = 0;

    result_2046820524 = (((((b_2046820523 & 255) << 24) | ((b_2046820523 & 65280) << 8)) | ((b_2046820523 & 16711680) >> 8)) | (b_2046820523 >> 24));

  return result_2046820524;

}

function genOid_2046820552() {
  var result_2046820553 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820556 = toUnix_1191183338(getTime_1191183389());
    var iHEX60gensym1_2046820557 = 0;
    incr_2046820503[0] = addInt(incr_2046820503[0], 1);
    iHEX60gensym1_2046820557 = ((incr_2046820503[0]) | 0);
    result_2046820553.time = bigEndian32_2046820522(timeHEX60gensym1_2046820556);
    result_2046820553.fuzz = fuzz_2046820508;
    result_2046820553.count = bigEndian32_2046820522(iHEX60gensym1_2046820557);

  return result_2046820553;

}

function newId_2046820569() {
  var result_2046820570 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820570 = nimCopy(result_2046820570, genOid_2046820552(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820570;

}

function getItem_3003175953(selfHEX60gensym75_3003175954) {
  var result_3003175955 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym75_3003175954.id, null_2046820612)) {
    selfHEX60gensym75_3003175954.id = nimCopy(selfHEX60gensym75_3003175954.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym75_3003175954.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790154 = nimCopy(null, selfHEX60gensym75_3003175954.id, NTI2046820355);
    var colontmp__2952790155 = 0;
    result_3003175955 = nimCopy(result_3003175955, {Field0: nimCopy(null, colontmp__2952790154, NTI2046820355), Field1: colontmp__2952790155}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003175955;

}

function hash_3019899110(value_3019899111) {
  var result_3019899112 = 0;

    result_3019899112 = (hash_2046820596(value_3019899111.Field0) ^ hash_1325400236(value_3019899111.Field1));

  return result_3019899112;

}

function hash_3019901572(x_3019901574) {
  var result_3019901575 = 0;

    result_3019901575 = HEX21HEX26_1325400067(result_3019901575, hash_3019899110(x_3019901574["Field0"]));
    result_3019901575 = HEX21HEX26_1325400067(result_3019901575, hash_1325400236(x_3019901574["Field1"]));
    result_3019901575 = HEX21HEX24_1325400082(result_3019901575);

  return result_3019901575;

}

function HEX3DHEX3D_3019899116(a_3019899117, b_3019899118) {
  var result_3019899119 = false;

    result_3019899119 = (HEX3DHEX3D_2046820592(a_3019899117.Field0, b_3019899118.Field0) && (a_3019899117.Field1 == b_3019899118.Field1));

  return result_3019899119;

}

function HEX3DHEX3D_3019901909(x_3019901911, y_3019901912) {
  var result_3019901913 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019899116(x_3019901911["Field0"], y_3019901912["Field0"]))) {
    result_3019901913 = false;
    break BeforeRet;
    }
    
    if (!((x_3019901911["Field1"] == y_3019901912["Field1"]))) {
    result_3019901913 = false;
    break BeforeRet;
    }
    
    result_3019901913 = true;
    break BeforeRet;
  };

  return result_3019901913;

}

function rawGet_3003221620(t_3003221623, key_3003221624, hc_3003221625, hc_3003221625_Idx) {
  var result_3003221626 = 0;

  BeforeRet: {
    hc_3003221625[hc_3003221625_Idx] = hash_3019901572(key_3003221624);
    if ((hc_3003221625[hc_3003221625_Idx] == 0)) {
    hc_3003221625[hc_3003221625_Idx] = 314159265;
    }
    
    if (((t_3003221623.data).length == 0)) {
    result_3003221626 = -1;
    break BeforeRet;
    }
    
    var h_3003221715 = (hc_3003221625[hc_3003221625_Idx] & (t_3003221623.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field0)) break Label2;
          if (((t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field0 == hc_3003221625[hc_3003221625_Idx]) && HEX3DHEX3D_3019901909(t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field1, key_3003221624))) {
          result_3003221626 = h_3003221715;
          break BeforeRet;
          }
          
          h_3003221715 = nextTry_1308622883(h_3003221715, (t_3003221623.data).length - 1);
        }
    };
    result_3003221626 = subInt(-1, h_3003221715);
  };

  return result_3003221626;

}

function hasKey_3003221613(t_3003221616, key_3003221617) {
  var result_3003221618 = false;

    var hc_3003221619 = [0];
    result_3003221618 = (0 <= rawGet_3003221620(t_3003221616, key_3003221617, hc_3003221619, 0));

  return result_3003221618;

}

function contains_3003221607(t_3003221610, key_3003221611) {
  var result_3003221612 = false;

  BeforeRet: {
    result_3003221612 = hasKey_3003221613(t_3003221610, key_3003221611);
    break BeforeRet;
  };

  return result_3003221612;

}

function addQuoted_3019909754(s_3019909756, s_3019909756_Idx, x_3019909757) {
    s_3019909756[s_3019909756_Idx].push.apply(s_3019909756[s_3019909756_Idx], HEX24_3019899092(x_3019909757));;

  
}

function HEX24_3019909728(x_3019909730) {
  var result_3019909731 = [[]];

    result_3019909731[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_3019909742 = 0;
    if ((0 < countHEX60gensym66_3019909742)) {
    result_3019909731[0].push.apply(result_3019909731[0], [44,32]);;
    }
    
    result_3019909731[0].push.apply(result_3019909731[0], [105,116,101,109]);;
    result_3019909731[0].push.apply(result_3019909731[0], [58,32]);;
    countHEX60gensym66_3019909742 += 1;
    addQuoted_3019909754(result_3019909731, 0, x_3019909730["Field0"]);
    if ((0 < countHEX60gensym66_3019909742)) {
    result_3019909731[0].push.apply(result_3019909731[0], [44,32]);;
    }
    
    result_3019909731[0].push.apply(result_3019909731[0], [117,112,100,97,116,101]);;
    result_3019909731[0].push.apply(result_3019909731[0], [58,32]);;
    countHEX60gensym66_3019909742 += 1;
    addQuoted_855639425(result_3019909731, 0, x_3019909730["Field1"]);
    result_3019909731[0].push.apply(result_3019909731[0], [41]);;

  return result_3019909731[0];

}

function raiseKeyError_3019909681(key_3019909683) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019909728(key_3019909683) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003222052(t_3003222055, key_3003222056) {
  var result_3003222057 = null;
  var result_3003222057_Idx = 0;

    var hcHEX60gensym22_3003222058 = [0];
    var indexHEX60gensym22_3003222065 = rawGet_3003221620(t_3003222055, key_3003222056, hcHEX60gensym22_3003222058, 0);
    if ((0 <= indexHEX60gensym22_3003222065)) {
    result_3003222057 = t_3003222055.data[chckIndx(indexHEX60gensym22_3003222065, 0, (t_3003222055.data).length - 1)]; result_3003222057_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3003222056);
    }
    

  return [result_3003222057, result_3003222057_Idx];

}

function rawGet_3003222775(t_3003222778, key_3003222779, hc_3003222780, hc_3003222780_Idx) {
  var result_3003222781 = 0;

  BeforeRet: {
    hc_3003222780[hc_3003222780_Idx] = hash_3019901572(key_3003222779);
    if ((hc_3003222780[hc_3003222780_Idx] == 0)) {
    hc_3003222780[hc_3003222780_Idx] = 314159265;
    }
    
    if (((t_3003222778.data).length == 0)) {
    result_3003222781 = -1;
    break BeforeRet;
    }
    
    var h_3003222870 = (hc_3003222780[hc_3003222780_Idx] & (t_3003222778.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field0)) break Label2;
          if (((t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field0 == hc_3003222780[hc_3003222780_Idx]) && HEX3DHEX3D_3019901909(t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field1, key_3003222779))) {
          result_3003222781 = h_3003222870;
          break BeforeRet;
          }
          
          h_3003222870 = nextTry_1308622883(h_3003222870, (t_3003222778.data).length - 1);
        }
    };
    result_3003222781 = subInt(-1, h_3003222870);
  };

  return result_3003222781;

}

function del_3003222769(t_3003222772, key_3003222773) {
    var hc_3003222774 = [0];
    var i_3003223136 = rawGet_3003222775(t_3003222772, key_3003222773, hc_3003222774, 0);
    var mskHEX60gensym36_3003223140 = (t_3003222772.data).length - 1;
    if ((0 <= i_3003223136)) {
    t_3003222772.counter = subInt(t_3003222772.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003223147 = i_3003223136;
            var rHEX60gensym36_3003223148 = jHEX60gensym36_3003223147;
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0 = 0;
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field1 = nimCopy(t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field2 = nimCopy(null, [], NTI3003121672);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003223136 = (addInt(i_3003223136, 1) & mskHEX60gensym36_3003223140);
                  if (isEmpty_1308622877(t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003223148 = (t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0 & mskHEX60gensym36_3003223140);
                  if (!(((((rHEX60gensym36_3003223148 <= i_3003223136) && (jHEX60gensym36_3003223147 < rHEX60gensym36_3003223148)) || ((jHEX60gensym36_3003223147 < rHEX60gensym36_3003223148) && (i_3003223136 < jHEX60gensym36_3003223147))) || ((i_3003223136 < jHEX60gensym36_3003223147) && (rHEX60gensym36_3003223148 <= i_3003223136))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003222772.data[chckIndx(jHEX60gensym36_3003223147, 0, (t_3003222772.data).length - 1)] = nimCopy(t_3003222772.data[chckIndx(jHEX60gensym36_3003223147, 0, (t_3003222772.data).length - 1)], t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)], NTI3003121684);
          }
      };
    };
    }
    

  
}

function rawGet_3003222268(t_3003222271, key_3003222272, hc_3003222273, hc_3003222273_Idx) {
  var result_3003222274 = 0;

  BeforeRet: {
    hc_3003222273[hc_3003222273_Idx] = hash_2046820596(key_3003222272);
    if ((hc_3003222273[hc_3003222273_Idx] == 0)) {
    hc_3003222273[hc_3003222273_Idx] = 314159265;
    }
    
    if (((t_3003222271.data).length == 0)) {
    result_3003222274 = -1;
    break BeforeRet;
    }
    
    var h_3003222360 = (hc_3003222273[hc_3003222273_Idx] & (t_3003222271.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field0)) break Label2;
          if (((t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field0 == hc_3003222273[hc_3003222273_Idx]) && HEX3DHEX3D_2046820592(t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field1, key_3003222272))) {
          result_3003222274 = h_3003222360;
          break BeforeRet;
          }
          
          h_3003222360 = nextTry_1308622883(h_3003222360, (t_3003222271.data).length - 1);
        }
    };
    result_3003222274 = subInt(-1, h_3003222360);
  };

  return result_3003222274;

}

function raiseKeyError_2986346264(key_2986346266) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820589(key_2986346266) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003222261(t_3003222264, key_3003222265) {
  var result_3003222266 = null;

    var hcHEX60gensym22_3003222267 = [0];
    var indexHEX60gensym22_3003222613 = rawGet_3003222268(t_3003222264, key_3003222265, hcHEX60gensym22_3003222267, 0);
    if ((0 <= indexHEX60gensym22_3003222613)) {
    result_3003222266 = t_3003222264.data[chckIndx(indexHEX60gensym22_3003222613, 0, (t_3003222264.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_3003222265);
    }
    

  return result_3003222266;

}

function voidType_3087008156() {
  var result_3087008157 = null;

    result_3087008157 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_3087008157;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet58[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet59[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008158() {
  var result_3087008159 = null;

    result_3087008159 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_3087008159;

}

function errorType_3087008120() {
  var result_3087008121 = null;

    result_3087008121 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008121;

}

function stringType_3087008160() {
  var result_3087008161 = null;

    result_3087008161 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_3087008161;

}

function HEX5BHEX5D_2986344532(node_2986344533, index_2986344534) {
  var result_2986344535 = null;

  BeforeRet: {
    result_2986344535 = node_2986344533.children[chckIndx(index_2986344534, 0, (node_2986344533.children).length - 1)];
    break BeforeRet;
  };

  return result_2986344535;

}

function recordDependency_3003175740(ctxHEX60gensym72_3003175741, itemHEX60gensym72_3003175742, updateHEX60gensym72_3003175743) {
    if ((0 < (ctxHEX60gensym72_3003175741.dependencyStack).length)) {
    ctxHEX60gensym72_3003175741.dependencyStack[chckIndx((ctxHEX60gensym72_3003175741.dependencyStack).length - 1, 0, (ctxHEX60gensym72_3003175741.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_3003175742, NTI3019898905), Field1: updateHEX60gensym72_3003175743});;
    }
    

  
}

function toFloat_33556023(i_33556024) {
  var result_33556025 = 0.0;

    result_33556025 = i_33556024;

  return result_33556025;

}

function HEX2F_33556035(x_33556036, y_33556037) {
  var result_33556038 = 0.0;

    result_33556038 = (toFloat_33556023(x_33556036) / toFloat_33556023(y_33556037));

  return result_33556038;

}

function toUnixFloat_1191183346(t_1191183347) {
  var result_1191183348 = 0.0;

    result_1191183348 = (t_1191183347.seconds + HEX2F_33556035(t_1191183347.nanosecond, convert_1191182870(3, 0, 1)));

  return result_1191183348;

}

function myGetTicks_2466250798() {
  var result_2466250799 = 0;

  BeforeRet: {
    var time_2466250800 = getTime_1191183389();
    result_2466250799 = (toUnixFloat_1191183346(time_2466250800) * 1000000000.0);
    break BeforeRet;
  };

  return result_2466250799;

}

function startTimer_2466250804() {
  var result_2466250805 = ({start: 0});

    result_2466250805 = nimCopy(result_2466250805, {start: myGetTicks_2466250798()}, NTI2466250783);

  return result_2466250805;

}

function rawGet_3019901565(t_3019901568, key_3019901569, hc_3019901570, hc_3019901570_Idx) {
  var result_3019901571 = 0;

  BeforeRet: {
    hc_3019901570[hc_3019901570_Idx] = hash_3019901572(key_3019901569);
    if ((hc_3019901570[hc_3019901570_Idx] == 0)) {
    hc_3019901570[hc_3019901570_Idx] = 314159265;
    }
    
    if (((t_3019901568.data).length == 0)) {
    result_3019901571 = -1;
    break BeforeRet;
    }
    
    var h_3019901668 = (hc_3019901570[hc_3019901570_Idx] & (t_3019901568.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field0)) break Label2;
          if (((t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field0 == hc_3019901570[hc_3019901570_Idx]) && HEX3DHEX3D_3019901909(t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field1, key_3019901569))) {
          result_3019901571 = h_3019901668;
          break BeforeRet;
          }
          
          h_3019901668 = nextTry_1308622883(h_3019901668, (t_3019901568.data).length - 1);
        }
    };
    result_3019901571 = subInt(-1, h_3019901668);
  };

  return result_3019901571;

}

function getOrDefault_3019901555(t_3019901558, key_3019901559, default_3019901560) {
    var Temporary1;

  var result_3019901561 = null;

    var hcHEX60gensym22_3019901564 = [0];
    var indexHEX60gensym22_3019901931 = rawGet_3019901565(t_3019901558, key_3019901559, hcHEX60gensym22_3019901564, 0);
    if ((0 <= indexHEX60gensym22_3019901931)) {
    Temporary1 = t_3019901558.data[chckIndx(indexHEX60gensym22_3019901931, 0, (t_3019901558.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019901560;
    }
    
    result_3019901561 = Temporary1;

  return result_3019901561;

}

function getOrDefault_3019901459(cache_3019901462, key_3019901463, val_3019901464) {
  var result_3019901465 = 0;

    var node_3019902021 = getOrDefault_3019901555(cache_3019901462.table, key_3019901463, null);
    if ((node_3019902021 == null)) {
    result_3019901465 = val_3019901464;
    }
    else {
      result_3019901465 = node_3019902021.value.val;
    }
    

  return result_3019901465;

}

function nodeColor_3019901365(graph_3019901366, key_3019901367, parentVerified_3019901368) {
  var result_3019901369 = 0;

  BeforeRet: {
    if ((key_3019901367.Field1 == -1)) {
    var inputChangedRevision_3019902025 = getOrDefault_3019901459(graph_3019901366.changed, key_3019901367, graph_3019901366.revision);
    if ((parentVerified_3019901368 < inputChangedRevision_3019902025)) {
    result_3019901369 = 1;
    break BeforeRet;
    }
    else {
      result_3019901369 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3019902121 = getOrDefault_3019901459(graph_3019901366.verified, key_3019901367, 0);
    if (!((verified_3019902121 == graph_3019901366.revision))) {
    result_3019901369 = 0;
    break BeforeRet;
    }
    
    var changed_3019902217 = getOrDefault_3019901459(graph_3019901366.changed, key_3019901367, graph_3019901366.revision);
    if ((changed_3019902217 == graph_3019901366.revision)) {
    result_3019901369 = 1;
    break BeforeRet;
    }
    
    result_3019901369 = 2;
    break BeforeRet;
  };

  return result_3019901369;

}

function hash_2986346803(node_2986346804) {
  var result_2986346805 = 0;

    result_2986346805 = node_2986346804;

  return result_2986346805;

}

function rawGet_3003124083(t_3003124086, key_3003124087, hc_3003124088, hc_3003124088_Idx) {
  var result_3003124089 = 0;

  BeforeRet: {
    hc_3003124088[hc_3003124088_Idx] = hash_2986346803(key_3003124087);
    if ((hc_3003124088[hc_3003124088_Idx] == 0)) {
    hc_3003124088[hc_3003124088_Idx] = 314159265;
    }
    
    if (((t_3003124086.data).length == 0)) {
    result_3003124089 = -1;
    break BeforeRet;
    }
    
    var h_3003124175 = (hc_3003124088[hc_3003124088_Idx] & (t_3003124086.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field0)) break Label2;
          if (((t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field0 == hc_3003124088[hc_3003124088_Idx]) && (t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field1 == key_3003124087))) {
          result_3003124089 = h_3003124175;
          break BeforeRet;
          }
          
          h_3003124175 = nextTry_1308622883(h_3003124175, (t_3003124086.data).length - 1);
        }
    };
    result_3003124089 = subInt(-1, h_3003124175);
  };

  return result_3003124089;

}

function hasKey_3003194867(t_3003194870, key_3003194871) {
  var result_3003194872 = false;

    var hc_3003194873 = [0];
    result_3003194872 = (0 <= rawGet_3003124083(t_3003194870, key_3003194871, hc_3003194873, 0));

  return result_3003194872;

}

function contains_3003194861(t_3003194864, key_3003194865) {
  var result_3003194866 = false;

  BeforeRet: {
    result_3003194866 = hasKey_3003194867(t_3003194864, key_3003194865);
    break BeforeRet;
  };

  return result_3003194866;

}

function contains_3003194767(cache_3003194770, key_3003194771) {
  var result_3003194772 = false;

    result_3003194772 = contains_3003194861(cache_3003194770.table, key_3003194771);

  return result_3003194772;

}

function HEX5BHEX5D_3003192204(t_3003192207, key_3003192208) {
  var result_3003192209 = null;
  var result_3003192209_Idx = 0;

    var hcHEX60gensym22_3003192210 = [0];
    var indexHEX60gensym22_3003192217 = rawGet_3019899319(t_3003192207, key_3003192208, hcHEX60gensym22_3003192210, 0);
    if ((0 <= indexHEX60gensym22_3003192217)) {
    result_3003192209 = t_3003192207.data[chckIndx(indexHEX60gensym22_3003192217, 0, (t_3003192207.data).length - 1)]; result_3003192209_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3003192208);
    }
    

  return [result_3003192209, result_3003192209_Idx];

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_3019905014(t_3019905017, key_3019905018, hc_3019905019, hc_3019905019_Idx) {
  var result_3019905020 = 0;

  BeforeRet: {
    hc_3019905019[hc_3019905019_Idx] = hash_3019901572(key_3019905018);
    if ((hc_3019905019[hc_3019905019_Idx] == 0)) {
    hc_3019905019[hc_3019905019_Idx] = 314159265;
    }
    
    if (((t_3019905017.data).length == 0)) {
    result_3019905020 = -1;
    break BeforeRet;
    }
    
    var h_3019905109 = (hc_3019905019[hc_3019905019_Idx] & (t_3019905017.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field0)) break Label2;
          if (((t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field0 == hc_3019905019[hc_3019905019_Idx]) && HEX3DHEX3D_3019901909(t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field1, key_3019905018))) {
          result_3019905020 = h_3019905109;
          break BeforeRet;
          }
          
          h_3019905109 = nextTry_1828716586(h_3019905109, (t_3019905017.data).length - 1);
        }
    };
    result_3019905020 = subInt(-1, h_3019905109);
  };

  return result_3019905020;

}

function contains_3003192377(s_3003192379, key_3003192380) {
  var result_3003192381 = false;

    var hc_3003192382 = [0];
    var index_3003192396 = rawGet_3019905014(s_3003192379, key_3003192380, hc_3003192382, 0);
    result_3003192381 = (0 <= index_3003192396);

  return result_3003192381;

}

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function mustRehash_3019906280(t_3019906282) {
  var result_3019906283 = false;

    if (!((t_3019906282.counter < (t_3019906282.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019906283 = ((mulInt((t_3019906282.data).length, 2) < mulInt(t_3019906282.counter, 3)) || (subInt((t_3019906282.data).length, t_3019906282.counter) < 4));

  return result_3019906283;

}

function rawGetKnownHC_3019906886(t_3019906889, key_3019906890, hc_3019906891) {
  var result_3019906892 = 0;

  BeforeRet: {
    if (((t_3019906889.data).length == 0)) {
    result_3019906892 = -1;
    break BeforeRet;
    }
    
    var h_3019906977 = (hc_3019906891 & (t_3019906889.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field0)) break Label2;
          if (((t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field0 == hc_3019906891) && HEX3DHEX3D_3019901909(t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field1, key_3019906890))) {
          result_3019906892 = h_3019906977;
          break BeforeRet;
          }
          
          h_3019906977 = nextTry_1828716586(h_3019906977, (t_3019906889.data).length - 1);
        }
    };
    result_3019906892 = subInt(-1, h_3019906977);
  };

  return result_3019906892;

}

function rawInsert_3019907390(s_3019907392, data_3019907393, data_3019907393_Idx, key_3019907394, hc_3019907395, h_3019907396) {
    if (((data_3019907393[data_3019907393_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_3019907479 = slotsNeeded_1828716594(64);
    s_3019907392.counter = 0;
    s_3019907392.data = new Array(chckRange(correctSizeHEX60gensym56_3019907479, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3019907479, 0, 2147483647) ; ++i) { s_3019907392.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field1 = nimCopy(data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field1, key_3019907394, NTI3019898908);
    data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field0 = hc_3019907395;

  
}

function enlarge_3019906543(s_3019906545) {
    var n_3019906547 = [];
    n_3019906547 = new Array(chckRange(mulInt((s_3019906545.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019906545.data).length, 2), 0, 2147483647) ; ++i) { n_3019906547[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019906545.data; s_3019906545.data = n_3019906547; n_3019906547 = Temporary1;    Label2: {
      var i_3019906645 = 0;
      var colontmp__2952790171 = 0;
      colontmp__2952790171 = (n_3019906547).length - 1;
      var res_2952790172 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790172 <= colontmp__2952790171)) break Label4;
            i_3019906645 = res_2952790172;
            if (isFilled_1828716583(n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0)) {
            var j_3019907225 = subInt(-1, rawGetKnownHC_3019906886(s_3019906545, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field1, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0));
            rawInsert_3019907390(s_3019906545, s_3019906545, "data", n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field1, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0, j_3019907225);
            }
            
            res_2952790172 = addInt(res_2952790172, 1);
          }
      };
    };

  
}

function incl_3019906164(s_3019906166, key_3019906167) {
    if (((s_3019906166.data).length == 0)) {
    var correctSizeHEX60gensym49_3019906250 = slotsNeeded_1828716594(64);
    s_3019906166.counter = 0;
    s_3019906166.data = new Array(chckRange(correctSizeHEX60gensym49_3019906250, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_3019906250, 0, 2147483647) ; ++i) { s_3019906166.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019906265 = [0];
    var index_3019906279 = rawGet_3019905014(s_3019906166, key_3019906167, hc_3019906265, 0);
    if ((index_3019906279 < 0)) {
    if (mustRehash_3019906280(s_3019906166)) {
    enlarge_3019906543(s_3019906166);
    index_3019906279 = rawGetKnownHC_3019906886(s_3019906166, key_3019906167, hc_3019906265[0]);
    }
    
    rawInsert_3019907390(s_3019906166, s_3019906166, "data", key_3019906167, hc_3019906265[0], subInt(-1, index_3019906279));
    s_3019906166.counter = addInt(s_3019906166.counter, 1);
    }
    

  
}

function getOrDefault_3003192608(t_3003192611, key_3003192612) {
  var result_3003192613 = [];

    var hcHEX60gensym462_3003192616 = [0];
    var indexHEX60gensym462_3003192623 = rawGet_3019899319(t_3003192611, key_3003192612, hcHEX60gensym462_3003192616, 0);
    if ((0 <= indexHEX60gensym462_3003192623)) {
    result_3003192613 = nimCopy(null, t_3003192611.data[chckIndx(indexHEX60gensym462_3003192623, 0, (t_3003192611.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3003192613;

}

function rawGet_3003171799(t_3003171802, key_3003171803, hc_3003171804, hc_3003171804_Idx) {
  var result_3003171805 = 0;

  BeforeRet: {
    hc_3003171804[hc_3003171804_Idx] = hash_1325400236(key_3003171803);
    if ((hc_3003171804[hc_3003171804_Idx] == 0)) {
    hc_3003171804[hc_3003171804_Idx] = 314159265;
    }
    
    if (((t_3003171802.data).length == 0)) {
    result_3003171805 = -1;
    break BeforeRet;
    }
    
    var h_3003171893 = (hc_3003171804[hc_3003171804_Idx] & (t_3003171802.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field0)) break Label2;
          if (((t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field0 == hc_3003171804[hc_3003171804_Idx]) && (t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field1 == key_3003171803))) {
          result_3003171805 = h_3003171893;
          break BeforeRet;
          }
          
          h_3003171893 = nextTry_1308622883(h_3003171893, (t_3003171802.data).length - 1);
        }
    };
    result_3003171805 = subInt(-1, h_3003171893);
  };

  return result_3003171805;

}

function hasKey_3003192786(t_3003192789, key_3003192790) {
  var result_3003192791 = false;

    var hc_3003192792 = [0];
    result_3003192791 = (0 <= rawGet_3003171799(t_3003192789, key_3003192790, hc_3003192792, 0));

  return result_3003192791;

}

function contains_3003192780(t_3003192783, key_3003192784) {
  var result_3003192785 = false;

  BeforeRet: {
    result_3003192785 = hasKey_3003192786(t_3003192783, key_3003192784);
    break BeforeRet;
  };

  return result_3003192785;

}

function HEX5BHEX5D_3003192879(t_3003192882, key_3003192883) {
  var result_3003192884 = null;
  var result_3003192884_Idx = 0;

    var hcHEX60gensym22_3003192885 = [0];
    var indexHEX60gensym22_3003192892 = rawGet_3003171799(t_3003192882, key_3003192883, hcHEX60gensym22_3003192885, 0);
    if ((0 <= indexHEX60gensym22_3003192892)) {
    result_3003192884 = t_3003192882.data[chckIndx(indexHEX60gensym22_3003192892, 0, (t_3003192882.data).length - 1)]; result_3003192884_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3003192883);
    }
    

  return [result_3003192884, result_3003192884_Idx];

}

function newDoublyLinkedNode_3019910476(value_3019910478) {
  var result_3019910479 = null;

    result_3019910479 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_3019910479.value = nimCopy(result_3019910479.value, value_3019910478, NTI3019898932);

  return result_3019910479;

}

function mustRehash_3019910826(t_3019910828) {
  var result_3019910829 = false;

    if (!((t_3019910828.counter < (t_3019910828.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019910829 = ((mulInt((t_3019910828.data).length, 2) < mulInt(t_3019910828.counter, 3)) || (subInt((t_3019910828.data).length, t_3019910828.counter) < 4));

  return result_3019910829;

}

function rawInsert_3019911519(t_3019911523, data_3019911524, data_3019911524_Idx, key_3019911525, val_3019911526, hc_3019911527, h_3019911528) {
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field1 = nimCopy(data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field1, key_3019911525, NTI3019898908);
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field2 = val_3019911526;
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field0 = hc_3019911527;

  
}

function enlarge_3019911083(t_3019911086) {
    var n_3019911089 = [];
    n_3019911089 = new Array(chckRange(mulInt((t_3019911086.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019911086.data).length, 2), 0, 2147483647) ; ++i) { n_3019911089[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019911086.data; t_3019911086.data = n_3019911089; n_3019911089 = Temporary1;    Label2: {
      var i_3019911187 = 0;
      var colontmp__2952790178 = 0;
      colontmp__2952790178 = (n_3019911089).length - 1;
      var res_2952790179 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790179 <= colontmp__2952790178)) break Label4;
            i_3019911187 = res_2952790179;
            var eh_3019911268 = n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019911268)) {
            var j_3019911272 = (eh_3019911268 & (t_3019911086.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019911086.data[chckIndx(j_3019911272, 0, (t_3019911086.data).length - 1)].Field0)) break Label6;
                  j_3019911272 = nextTry_1308622883(j_3019911272, (t_3019911086.data).length - 1);
                }
            };
            rawInsert_3019911519(t_3019911086, t_3019911086, "data", n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field1, n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field2, eh_3019911268, j_3019911272);
            }
            
            res_2952790179 = addInt(res_2952790179, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019911769(t_3019911772, key_3019911773, hc_3019911774) {
  var result_3019911775 = 0;

  BeforeRet: {
    if (((t_3019911772.data).length == 0)) {
    result_3019911775 = -1;
    break BeforeRet;
    }
    
    var h_3019911860 = (hc_3019911774 & (t_3019911772.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field0)) break Label2;
          if (((t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field0 == hc_3019911774) && HEX3DHEX3D_3019901909(t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field1, key_3019911773))) {
          result_3019911775 = h_3019911860;
          break BeforeRet;
          }
          
          h_3019911860 = nextTry_1308622883(h_3019911860, (t_3019911772.data).length - 1);
        }
    };
    result_3019911775 = subInt(-1, h_3019911860);
  };

  return result_3019911775;

}

function HEX5BHEX5DHEX3D_3019910558(t_3019910561, key_3019910562, val_3019910563) {
    if (((t_3019910561.data).length == 0)) {
    var correctSizeHEX60gensym77_3019910646 = slotsNeeded_1308622891(32);
    t_3019910561.counter = 0;
    t_3019910561.data = new Array(chckRange(correctSizeHEX60gensym77_3019910646, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_3019910646, 0, 2147483647) ; ++i) { t_3019910561.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019910651 = [0];
    var index_3019910658 = rawGet_3019901565(t_3019910561, key_3019910562, hc_3019910651, 0);
    if ((0 <= index_3019910658)) {
    t_3019910561.data[chckIndx(index_3019910658, 0, (t_3019910561.data).length - 1)].Field2 = val_3019910563;
    }
    else {
      if (((t_3019910561.data).length == 0)) {
      var correctSizeHEX60gensym80_3019910821 = slotsNeeded_1308622891(32);
      t_3019910561.counter = 0;
      t_3019910561.data = new Array(chckRange(correctSizeHEX60gensym80_3019910821, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_3019910821, 0, 2147483647) ; ++i) { t_3019910561.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019910826(t_3019910561)) {
      enlarge_3019911083(t_3019910561);
      index_3019910658 = rawGetKnownHC_3019911769(t_3019910561, key_3019910562, hc_3019910651[0]);
      }
      
      index_3019910658 = subInt(-1, index_3019910658);
      rawInsert_3019911519(t_3019910561, t_3019910561, "data", key_3019910562, val_3019910563, hc_3019910651[0], index_3019910658);
      t_3019910561.counter = addInt(t_3019910561.counter, 1);
    }
    

  
}

function prepend_3019912169(L_3019912171, n_3019912172) {
    n_3019912172.prev = null;
    n_3019912172.next = L_3019912171.head;
    if (!((L_3019912171.head == null))) {
    if (!((L_3019912171.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019912171.head.prev = n_3019912172;
    }
    
    L_3019912171.head = n_3019912172;
    if ((L_3019912171.tail == null)) {
    L_3019912171.tail = n_3019912172;
    }
    

  
}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019905008(s_3019905010, key_3019905011) {
          var Temporary5;

  var result_3019905012 = false;

  BeforeRet: {
    var hc_3019905013 = [0];
    var i_3019905375 = rawGet_3019905014(s_3019905010, key_3019905011, hc_3019905013, 0);
    var msk_3019905379 = (s_3019905010.data).length - 1;
    result_3019905012 = true;
    if ((0 <= i_3019905375)) {
    result_3019905012 = false;
    s_3019905010.counter = subInt(s_3019905010.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019905385 = i_3019905375;
          var r_3019905386 = j_3019905385;
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0 = 0;
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field1 = nimCopy(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019905375 = (addInt(i_3019905375, 1) & msk_3019905379);
                if (isEmpty_1828716580(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019905386 = (s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0 & msk_3019905379);
                if (!(((((r_3019905386 <= i_3019905375) && (j_3019905385 < r_3019905386)) || ((j_3019905385 < r_3019905386) && (i_3019905375 < j_3019905385))) || ((i_3019905375 < j_3019905385) && (r_3019905386 <= i_3019905375))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)];
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)] = genericReset(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)], NTI3019898988);
          s_3019905010.data[chckIndx(j_3019905385, 0, (s_3019905010.data).length - 1)] = nimCopy(s_3019905010.data[chckIndx(j_3019905385, 0, (s_3019905010.data).length - 1)], Temporary5, NTI3019898988);
        }
    };
    }
    
  };

  return result_3019905012;

}

function excl_3019904993(s_3019904995, key_3019904996) {
    var _ = exclImpl_3019905008(s_3019904995, key_3019904996);

  
}

function len_3019912562(t_3019912565) {
  var result_3019912566 = 0;

    result_3019912566 = t_3019912565.counter;

  return result_3019912566;

}

function len_3019912479(cache_3019912482) {
  var result_3019912483 = 0;

    result_3019912483 = len_3019912562(cache_3019912482.table);

  return result_3019912483;

}

function del_3019912654(t_3019912657, key_3019912658) {
    var hc_3019912659 = [0];
    var i_3019912666 = rawGet_3019901565(t_3019912657, key_3019912658, hc_3019912659, 0);
    var mskHEX60gensym36_3019912670 = (t_3019912657.data).length - 1;
    if ((0 <= i_3019912666)) {
    t_3019912657.counter = subInt(t_3019912657.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019912677 = i_3019912666;
            var rHEX60gensym36_3019912678 = jHEX60gensym36_3019912677;
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0 = 0;
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field1 = nimCopy(t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019912666 = (addInt(i_3019912666, 1) & mskHEX60gensym36_3019912670);
                  if (isEmpty_1308622877(t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019912678 = (t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0 & mskHEX60gensym36_3019912670);
                  if (!(((((rHEX60gensym36_3019912678 <= i_3019912666) && (jHEX60gensym36_3019912677 < rHEX60gensym36_3019912678)) || ((jHEX60gensym36_3019912677 < rHEX60gensym36_3019912678) && (i_3019912666 < jHEX60gensym36_3019912677))) || ((i_3019912666 < jHEX60gensym36_3019912677) && (rHEX60gensym36_3019912678 <= i_3019912666))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019912657.data[chckIndx(jHEX60gensym36_3019912677, 0, (t_3019912657.data).length - 1)] = nimCopy(t_3019912657.data[chckIndx(jHEX60gensym36_3019912677, 0, (t_3019912657.data).length - 1)], t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)], NTI3019898968);
          }
      };
    };
    }
    

  
}

function remove_3019913413(L_3019913415, n_3019913416) {
    if ((n_3019913416 == L_3019913415.tail)) {
    L_3019913415.tail = n_3019913416.prev;
    }
    
    if ((n_3019913416 == L_3019913415.head)) {
    L_3019913415.head = n_3019913416.next;
    }
    
    if (!((n_3019913416.next == null))) {
    n_3019913416.next.prev = n_3019913416.prev;
    }
    
    if (!((n_3019913416.prev == null))) {
    n_3019913416.prev.next = n_3019913416.next;
    }
    

  
}

function resize_3019912397(cache_3019912400) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019912400.capacity < len_3019912479(cache_3019912400))) break Label2;
          var t_3019912567 = cache_3019912400.list.tail;
          if (cache_3019912400.recordRemovedKeys) {
          incl_3019906164(cache_3019912400.removedKeys, t_3019912567.value.key);
          }
          
          del_3019912654(cache_3019912400.table, t_3019912567.value.key);
          remove_3019913413(cache_3019912400.list, t_3019912567);
        }
    };

  
}

function addNewNode_3019910468(cache_3019910471, key_3019910472, val_3019910473) {
    var node_3019910494 = newDoublyLinkedNode_3019910476({key: nimCopy(null, key_3019910472, NTI3019898908), val: val_3019910473});
    HEX5BHEX5DHEX3D_3019910558(cache_3019910471.table, key_3019910472, node_3019910494);
    prepend_3019912169(cache_3019910471.list, node_3019910494);
    if (cache_3019910471.recordRemovedKeys) {
    excl_3019904993(cache_3019910471.removedKeys, key_3019910472);
    }
    
    resize_3019912397(cache_3019910471);

  
}

function HEX5BHEX5DHEX3D_3019910340(cache_3019910343, key_3019910344, val_3019910345) {
    var node_3019910441 = getOrDefault_3019901555(cache_3019910343.table, key_3019910344, null);
    if ((node_3019910441 == null)) {
    addNewNode_3019910468(cache_3019910343, key_3019910344, val_3019910345);
    }
    else {
      node_3019910441.value.val = val_3019910345;
      remove_3019913413(cache_3019910343.list, node_3019910441);
      prepend_3019912169(cache_3019910343.list, node_3019910441);
    }
    

  
}

function rawGet_3019909069(t_3019909072, key_3019909073, hc_3019909074, hc_3019909074_Idx) {
  var result_3019909075 = 0;

  BeforeRet: {
    hc_3019909074[hc_3019909074_Idx] = hash_3019901572(key_3019909073);
    if ((hc_3019909074[hc_3019909074_Idx] == 0)) {
    hc_3019909074[hc_3019909074_Idx] = 314159265;
    }
    
    if (((t_3019909072.data).length == 0)) {
    result_3019909075 = -1;
    break BeforeRet;
    }
    
    var h_3019909164 = (hc_3019909074[hc_3019909074_Idx] & (t_3019909072.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field0)) break Label2;
          if (((t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field0 == hc_3019909074[hc_3019909074_Idx]) && HEX3DHEX3D_3019901909(t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field1, key_3019909073))) {
          result_3019909075 = h_3019909164;
          break BeforeRet;
          }
          
          h_3019909164 = nextTry_1308622883(h_3019909164, (t_3019909072.data).length - 1);
        }
    };
    result_3019909075 = subInt(-1, h_3019909164);
  };

  return result_3019909075;

}

function getOrDefault_3019914017(t_3019914020, key_3019914021, default_3019914022) {
    var Temporary1;

  var result_3019914023 = null;

    var hcHEX60gensym90_3019914026 = [0];
    var indexHEX60gensym90_3019914033 = rawGet_3019909069(t_3019914020, key_3019914021, hcHEX60gensym90_3019914026, 0);
    if ((0 <= indexHEX60gensym90_3019914033)) {
    Temporary1 = t_3019914020.data[chckIndx(indexHEX60gensym90_3019914033, 0, (t_3019914020.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019914022;
    }
    
    result_3019914023 = Temporary1;

  return result_3019914023;

}

function newDoublyLinkedNode_3019914149(value_3019914151) {
  var result_3019914152 = null;

    result_3019914152 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3019914152.value = nimCopy(result_3019914152.value, value_3019914151, NTI3019899011);

  return result_3019914152;

}

function mustRehash_3019914499(t_3019914501) {
  var result_3019914502 = false;

    if (!((t_3019914501.counter < (t_3019914501.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019914502 = ((mulInt((t_3019914501.data).length, 2) < mulInt(t_3019914501.counter, 3)) || (subInt((t_3019914501.data).length, t_3019914501.counter) < 4));

  return result_3019914502;

}

function rawInsert_3019915192(t_3019915196, data_3019915197, data_3019915197_Idx, key_3019915198, val_3019915199, hc_3019915200, h_3019915201) {
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field1 = nimCopy(data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field1, key_3019915198, NTI3019898908);
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field2 = val_3019915199;
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field0 = hc_3019915200;

  
}

function enlarge_3019914756(t_3019914759) {
    var n_3019914762 = [];
    n_3019914762 = new Array(chckRange(mulInt((t_3019914759.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019914759.data).length, 2), 0, 2147483647) ; ++i) { n_3019914762[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019914759.data; t_3019914759.data = n_3019914762; n_3019914762 = Temporary1;    Label2: {
      var i_3019914860 = 0;
      var colontmp__2952790190 = 0;
      colontmp__2952790190 = (n_3019914762).length - 1;
      var res_2952790191 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790191 <= colontmp__2952790190)) break Label4;
            i_3019914860 = res_2952790191;
            var eh_3019914941 = n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019914941)) {
            var j_3019914945 = (eh_3019914941 & (t_3019914759.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019914759.data[chckIndx(j_3019914945, 0, (t_3019914759.data).length - 1)].Field0)) break Label6;
                  j_3019914945 = nextTry_1308622883(j_3019914945, (t_3019914759.data).length - 1);
                }
            };
            rawInsert_3019915192(t_3019914759, t_3019914759, "data", n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field1, n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field2, eh_3019914941, j_3019914945);
            }
            
            res_2952790191 = addInt(res_2952790191, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019915442(t_3019915445, key_3019915446, hc_3019915447) {
  var result_3019915448 = 0;

  BeforeRet: {
    if (((t_3019915445.data).length == 0)) {
    result_3019915448 = -1;
    break BeforeRet;
    }
    
    var h_3019915533 = (hc_3019915447 & (t_3019915445.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field0)) break Label2;
          if (((t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field0 == hc_3019915447) && HEX3DHEX3D_3019901909(t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field1, key_3019915446))) {
          result_3019915448 = h_3019915533;
          break BeforeRet;
          }
          
          h_3019915533 = nextTry_1308622883(h_3019915533, (t_3019915445.data).length - 1);
        }
    };
    result_3019915448 = subInt(-1, h_3019915533);
  };

  return result_3019915448;

}

function HEX5BHEX5DHEX3D_3019914231(t_3019914234, key_3019914235, val_3019914236) {
    if (((t_3019914234.data).length == 0)) {
    var correctSizeHEX60gensym93_3019914319 = slotsNeeded_1308622891(32);
    t_3019914234.counter = 0;
    t_3019914234.data = new Array(chckRange(correctSizeHEX60gensym93_3019914319, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_3019914319, 0, 2147483647) ; ++i) { t_3019914234.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019914324 = [0];
    var index_3019914331 = rawGet_3019909069(t_3019914234, key_3019914235, hc_3019914324, 0);
    if ((0 <= index_3019914331)) {
    t_3019914234.data[chckIndx(index_3019914331, 0, (t_3019914234.data).length - 1)].Field2 = val_3019914236;
    }
    else {
      if (((t_3019914234.data).length == 0)) {
      var correctSizeHEX60gensym96_3019914494 = slotsNeeded_1308622891(32);
      t_3019914234.counter = 0;
      t_3019914234.data = new Array(chckRange(correctSizeHEX60gensym96_3019914494, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3019914494, 0, 2147483647) ; ++i) { t_3019914234.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019914499(t_3019914234)) {
      enlarge_3019914756(t_3019914234);
      index_3019914331 = rawGetKnownHC_3019915442(t_3019914234, key_3019914235, hc_3019914324[0]);
      }
      
      index_3019914331 = subInt(-1, index_3019914331);
      rawInsert_3019915192(t_3019914234, t_3019914234, "data", key_3019914235, val_3019914236, hc_3019914324[0], index_3019914331);
      t_3019914234.counter = addInt(t_3019914234.counter, 1);
    }
    

  
}

function prepend_3019910088(L_3019910090, n_3019910091) {
    n_3019910091.prev = null;
    n_3019910091.next = L_3019910090.head;
    if (!((L_3019910090.head == null))) {
    if (!((L_3019910090.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019910090.head.prev = n_3019910091;
    }
    
    L_3019910090.head = n_3019910091;
    if ((L_3019910090.tail == null)) {
    L_3019910090.tail = n_3019910091;
    }
    

  
}

function len_3019916053(t_3019916056) {
  var result_3019916057 = 0;

    result_3019916057 = t_3019916056.counter;

  return result_3019916057;

}

function len_3019915970(cache_3019915973) {
  var result_3019915974 = 0;

    result_3019915974 = len_3019916053(cache_3019915973.table);

  return result_3019915974;

}

function del_3019916145(t_3019916148, key_3019916149) {
    var hc_3019916150 = [0];
    var i_3019916157 = rawGet_3019909069(t_3019916148, key_3019916149, hc_3019916150, 0);
    var mskHEX60gensym36_3019916161 = (t_3019916148.data).length - 1;
    if ((0 <= i_3019916157)) {
    t_3019916148.counter = subInt(t_3019916148.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019916168 = i_3019916157;
            var rHEX60gensym36_3019916169 = jHEX60gensym36_3019916168;
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0 = 0;
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field1 = nimCopy(t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019916157 = (addInt(i_3019916157, 1) & mskHEX60gensym36_3019916161);
                  if (isEmpty_1308622877(t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019916169 = (t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0 & mskHEX60gensym36_3019916161);
                  if (!(((((rHEX60gensym36_3019916169 <= i_3019916157) && (jHEX60gensym36_3019916168 < rHEX60gensym36_3019916169)) || ((jHEX60gensym36_3019916168 < rHEX60gensym36_3019916169) && (i_3019916157 < jHEX60gensym36_3019916168))) || ((i_3019916157 < jHEX60gensym36_3019916168) && (rHEX60gensym36_3019916169 <= i_3019916157))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019916148.data[chckIndx(jHEX60gensym36_3019916168, 0, (t_3019916148.data).length - 1)] = nimCopy(t_3019916148.data[chckIndx(jHEX60gensym36_3019916168, 0, (t_3019916148.data).length - 1)], t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)], NTI3019899047);
          }
      };
    };
    }
    

  
}

function remove_3019909796(L_3019909798, n_3019909799) {
    if ((n_3019909799 == L_3019909798.tail)) {
    L_3019909798.tail = n_3019909799.prev;
    }
    
    if ((n_3019909799 == L_3019909798.head)) {
    L_3019909798.head = n_3019909799.next;
    }
    
    if (!((n_3019909799.next == null))) {
    n_3019909799.next.prev = n_3019909799.prev;
    }
    
    if (!((n_3019909799.prev == null))) {
    n_3019909799.prev.next = n_3019909799.next;
    }
    

  
}

function resize_3019915888(cache_3019915891) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019915891.capacity < len_3019915970(cache_3019915891))) break Label2;
          var t_3019916058 = cache_3019915891.list.tail;
          if (cache_3019915891.recordRemovedKeys) {
          incl_3019906164(cache_3019915891.removedKeys, t_3019916058.value.key);
          }
          
          del_3019916145(cache_3019915891.table, t_3019916058.value.key);
          remove_3019909796(cache_3019915891.list, t_3019916058);
        }
    };

  
}

function addNewNode_3019914141(cache_3019914144, key_3019914145, val_3019914146) {
    var node_3019914167 = newDoublyLinkedNode_3019914149({key: nimCopy(null, key_3019914145, NTI3019898908), val: nimCopy(null, val_3019914146, NTI3019898904)});
    HEX5BHEX5DHEX3D_3019914231(cache_3019914144.table, key_3019914145, node_3019914167);
    prepend_3019910088(cache_3019914144.list, node_3019914167);
    if (cache_3019914144.recordRemovedKeys) {
    excl_3019904993(cache_3019914144.removedKeys, key_3019914145);
    }
    
    resize_3019915888(cache_3019914144);

  
}

function HEX5BHEX5DHEX3D_3019913922(cache_3019913925, key_3019913926, val_3019913927) {
    var node_3019914114 = getOrDefault_3019914017(cache_3019913925.table, key_3019913926, null);
    if ((node_3019914114 == null)) {
    addNewNode_3019914141(cache_3019913925, key_3019913926, val_3019913927);
    }
    else {
      node_3019914114.value.val = nimCopy(null, val_3019913927, NTI3019898904);
      remove_3019909796(cache_3019913925.list, node_3019914114);
      prepend_3019910088(cache_3019913925.list, node_3019914114);
    }
    

  
}

function markRed_3019913717(graph_3019913718, key_3019913719, fingerprint_3019913720) {
    HEX5BHEX5DHEX3D_3019910340(graph_3019913718.verified, key_3019913719, graph_3019913718.revision);
    HEX5BHEX5DHEX3D_3019910340(graph_3019913718.changed, key_3019913719, graph_3019913718.revision);
    HEX5BHEX5DHEX3D_3019913922(graph_3019913718.fingerprints, key_3019913719, fingerprint_3019913720);

  
}

function rawGet_3019902430(t_3019902433, key_3019902434, hc_3019902435, hc_3019902435_Idx) {
  var result_3019902436 = 0;

  BeforeRet: {
    hc_3019902435[hc_3019902435_Idx] = hash_3019901572(key_3019902434);
    if ((hc_3019902435[hc_3019902435_Idx] == 0)) {
    hc_3019902435[hc_3019902435_Idx] = 314159265;
    }
    
    if (((t_3019902433.data).length == 0)) {
    result_3019902436 = -1;
    break BeforeRet;
    }
    
    var h_3019902525 = (hc_3019902435[hc_3019902435_Idx] & (t_3019902433.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field0)) break Label2;
          if (((t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field0 == hc_3019902435[hc_3019902435_Idx]) && HEX3DHEX3D_3019901909(t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field1, key_3019902434))) {
          result_3019902436 = h_3019902525;
          break BeforeRet;
          }
          
          h_3019902525 = nextTry_1308622883(h_3019902525, (t_3019902433.data).length - 1);
        }
    };
    result_3019902436 = subInt(-1, h_3019902525);
  };

  return result_3019902436;

}

function getOrDefault_3019902420(t_3019902423, key_3019902424, default_3019902425) {
    var Temporary1;

  var result_3019902426 = null;

    var hcHEX60gensym28_3019902429 = [0];
    var indexHEX60gensym28_3019902782 = rawGet_3019902430(t_3019902423, key_3019902424, hcHEX60gensym28_3019902429, 0);
    if ((0 <= indexHEX60gensym28_3019902782)) {
    Temporary1 = t_3019902423.data[chckIndx(indexHEX60gensym28_3019902782, 0, (t_3019902423.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019902425;
    }
    
    result_3019902426 = Temporary1;

  return result_3019902426;

}

function newDoublyLinkedNode_3019903099(value_3019903101) {
  var result_3019903102 = null;

    result_3019903102 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3019903102.value = nimCopy(result_3019903102.value, value_3019903101, NTI3019899078);

  return result_3019903102;

}

function mustRehash_3019903449(t_3019903451) {
  var result_3019903452 = false;

    if (!((t_3019903451.counter < (t_3019903451.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903452 = ((mulInt((t_3019903451.data).length, 2) < mulInt(t_3019903451.counter, 3)) || (subInt((t_3019903451.data).length, t_3019903451.counter) < 4));

  return result_3019903452;

}

function rawInsert_3019904142(t_3019904146, data_3019904147, data_3019904147_Idx, key_3019904148, val_3019904149, hc_3019904150, h_3019904151) {
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field1 = nimCopy(data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field1, key_3019904148, NTI3019898908);
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field2 = val_3019904149;
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field0 = hc_3019904150;

  
}

function enlarge_3019903706(t_3019903709) {
    var n_3019903712 = [];
    n_3019903712 = new Array(chckRange(mulInt((t_3019903709.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903709.data).length, 2), 0, 2147483647) ; ++i) { n_3019903712[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019903709.data; t_3019903709.data = n_3019903712; n_3019903712 = Temporary1;    Label2: {
      var i_3019903810 = 0;
      var colontmp__2952790200 = 0;
      colontmp__2952790200 = (n_3019903712).length - 1;
      var res_2952790201 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790201 <= colontmp__2952790200)) break Label4;
            i_3019903810 = res_2952790201;
            var eh_3019903891 = n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903891)) {
            var j_3019903895 = (eh_3019903891 & (t_3019903709.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903709.data[chckIndx(j_3019903895, 0, (t_3019903709.data).length - 1)].Field0)) break Label6;
                  j_3019903895 = nextTry_1308622883(j_3019903895, (t_3019903709.data).length - 1);
                }
            };
            rawInsert_3019904142(t_3019903709, t_3019903709, "data", n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field1, n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field2, eh_3019903891, j_3019903895);
            }
            
            res_2952790201 = addInt(res_2952790201, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904392(t_3019904395, key_3019904396, hc_3019904397) {
  var result_3019904398 = 0;

  BeforeRet: {
    if (((t_3019904395.data).length == 0)) {
    result_3019904398 = -1;
    break BeforeRet;
    }
    
    var h_3019904483 = (hc_3019904397 & (t_3019904395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field0)) break Label2;
          if (((t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field0 == hc_3019904397) && HEX3DHEX3D_3019901909(t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field1, key_3019904396))) {
          result_3019904398 = h_3019904483;
          break BeforeRet;
          }
          
          h_3019904483 = nextTry_1308622883(h_3019904483, (t_3019904395.data).length - 1);
        }
    };
    result_3019904398 = subInt(-1, h_3019904483);
  };

  return result_3019904398;

}

function HEX5BHEX5DHEX3D_3019903181(t_3019903184, key_3019903185, val_3019903186) {
    if (((t_3019903184.data).length == 0)) {
    var correctSizeHEX60gensym34_3019903269 = slotsNeeded_1308622891(32);
    t_3019903184.counter = 0;
    t_3019903184.data = new Array(chckRange(correctSizeHEX60gensym34_3019903269, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_3019903269, 0, 2147483647) ; ++i) { t_3019903184.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019903274 = [0];
    var index_3019903281 = rawGet_3019902430(t_3019903184, key_3019903185, hc_3019903274, 0);
    if ((0 <= index_3019903281)) {
    t_3019903184.data[chckIndx(index_3019903281, 0, (t_3019903184.data).length - 1)].Field2 = val_3019903186;
    }
    else {
      if (((t_3019903184.data).length == 0)) {
      var correctSizeHEX60gensym37_3019903444 = slotsNeeded_1308622891(32);
      t_3019903184.counter = 0;
      t_3019903184.data = new Array(chckRange(correctSizeHEX60gensym37_3019903444, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_3019903444, 0, 2147483647) ; ++i) { t_3019903184.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019903449(t_3019903184)) {
      enlarge_3019903706(t_3019903184);
      index_3019903281 = rawGetKnownHC_3019904392(t_3019903184, key_3019903185, hc_3019903274[0]);
      }
      
      index_3019903281 = subInt(-1, index_3019903281);
      rawInsert_3019904142(t_3019903184, t_3019903184, "data", key_3019903185, val_3019903186, hc_3019903274[0], index_3019903281);
      t_3019903184.counter = addInt(t_3019903184.counter, 1);
    }
    

  
}

function prepend_3019904792(L_3019904794, n_3019904795) {
    n_3019904795.prev = null;
    n_3019904795.next = L_3019904794.head;
    if (!((L_3019904794.head == null))) {
    if (!((L_3019904794.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019904794.head.prev = n_3019904795;
    }
    
    L_3019904794.head = n_3019904795;
    if ((L_3019904794.tail == null)) {
    L_3019904794.tail = n_3019904795;
    }
    

  
}

function len_3019906139(t_3019906142) {
  var result_3019906143 = 0;

    result_3019906143 = t_3019906142.counter;

  return result_3019906143;

}

function len_3019906056(cache_3019906059) {
  var result_3019906060 = 0;

    result_3019906060 = len_3019906139(cache_3019906059.table);

  return result_3019906060;

}

function del_3019907746(t_3019907749, key_3019907750) {
    var hc_3019907751 = [0];
    var i_3019907758 = rawGet_3019902430(t_3019907749, key_3019907750, hc_3019907751, 0);
    var mskHEX60gensym36_3019907762 = (t_3019907749.data).length - 1;
    if ((0 <= i_3019907758)) {
    t_3019907749.counter = subInt(t_3019907749.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019907769 = i_3019907758;
            var rHEX60gensym36_3019907770 = jHEX60gensym36_3019907769;
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0 = 0;
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field1 = nimCopy(t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019907758 = (addInt(i_3019907758, 1) & mskHEX60gensym36_3019907762);
                  if (isEmpty_1308622877(t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019907770 = (t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0 & mskHEX60gensym36_3019907762);
                  if (!(((((rHEX60gensym36_3019907770 <= i_3019907758) && (jHEX60gensym36_3019907769 < rHEX60gensym36_3019907770)) || ((jHEX60gensym36_3019907769 < rHEX60gensym36_3019907770) && (i_3019907758 < jHEX60gensym36_3019907769))) || ((i_3019907758 < jHEX60gensym36_3019907769) && (rHEX60gensym36_3019907770 <= i_3019907758))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019907749.data[chckIndx(jHEX60gensym36_3019907769, 0, (t_3019907749.data).length - 1)] = nimCopy(t_3019907749.data[chckIndx(jHEX60gensym36_3019907769, 0, (t_3019907749.data).length - 1)], t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)], NTI3019899114);
          }
      };
    };
    }
    

  
}

function remove_3019908505(L_3019908507, n_3019908508) {
    if ((n_3019908508 == L_3019908507.tail)) {
    L_3019908507.tail = n_3019908508.prev;
    }
    
    if ((n_3019908508 == L_3019908507.head)) {
    L_3019908507.head = n_3019908508.next;
    }
    
    if (!((n_3019908508.next == null))) {
    n_3019908508.next.prev = n_3019908508.prev;
    }
    
    if (!((n_3019908508.prev == null))) {
    n_3019908508.prev.next = n_3019908508.next;
    }
    

  
}

function resize_3019905974(cache_3019905977) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019905977.capacity < len_3019906056(cache_3019905977))) break Label2;
          var t_3019906144 = cache_3019905977.list.tail;
          if (cache_3019905977.recordRemovedKeys) {
          incl_3019906164(cache_3019905977.removedKeys, t_3019906144.value.key);
          }
          
          del_3019907746(cache_3019905977.table, t_3019906144.value.key);
          remove_3019908505(cache_3019905977.list, t_3019906144);
        }
    };

  
}

function addNewNode_3019903091(cache_3019903094, key_3019903095, val_3019903096) {
    var node_3019903117 = newDoublyLinkedNode_3019903099({key: nimCopy(null, key_3019903095, NTI3019898908), val: nimCopy(null, val_3019903096, NTI3019899064)});
    HEX5BHEX5DHEX3D_3019903181(cache_3019903094.table, key_3019903095, node_3019903117);
    prepend_3019904792(cache_3019903094.list, node_3019903117);
    if (cache_3019903094.recordRemovedKeys) {
    excl_3019904993(cache_3019903094.removedKeys, key_3019903095);
    }
    
    resize_3019905974(cache_3019903094);

  
}

function HEX5BHEX5DHEX3D_3019902963(cache_3019902966, key_3019902967, val_3019902968) {
    var node_3019903064 = getOrDefault_3019902420(cache_3019902966.table, key_3019902967, null);
    if ((node_3019903064 == null)) {
    addNewNode_3019903091(cache_3019902966, key_3019902967, val_3019902968);
    }
    else {
      node_3019903064.value.val = nimCopy(null, val_3019902968, NTI3019899064);
      remove_3019908505(cache_3019902966.list, node_3019903064);
      prepend_3019904792(cache_3019902966.list, node_3019903064);
    }
    

  
}

function clearEdges_3019902893(graph_3019902894, key_3019902895) {
    HEX5BHEX5DHEX3D_3019902963(graph_3019902894.dependencies, key_3019902895, []);

  
}

function setDependencies_3019908809(graph_3019908810, key_3019908811, deps_3019908812) {
    HEX5BHEX5DHEX3D_3019902963(graph_3019908810.dependencies, key_3019908811, deps_3019908812);

  
}

function pop_3003193025(s_3003193027, s_3003193027_Idx) {
  var result_3003193028 = [];

    var L_3003193032 = subInt((s_3003193027[s_3003193027_Idx]).length, 1);
    result_3003193028 = nimCopy(null, s_3003193027[s_3003193027_Idx][chckIndx(L_3003193032, 0, (s_3003193027[s_3003193027_Idx]).length - 1)], NTI3003121692);
    if (s_3003193027[s_3003193027_Idx].length < chckRange(L_3003193032, 0, 2147483647)) { for (var i = s_3003193027[s_3003193027_Idx].length ; i < chckRange(L_3003193032, 0, 2147483647) ; ++i) s_3003193027[s_3003193027_Idx].push([]); }
               else { s_3003193027[s_3003193027_Idx].length = chckRange(L_3003193032, 0, 2147483647); };

  return result_3003193028;

}

function pop_3003193056(s_3003193058, s_3003193058_Idx) {
  var result_3003193059 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3003193063 = subInt((s_3003193058[s_3003193058_Idx]).length, 1);
    result_3003193059 = nimCopy(result_3003193059, s_3003193058[s_3003193058_Idx][chckIndx(L_3003193063, 0, (s_3003193058[s_3003193058_Idx]).length - 1)], NTI3019898908);
    if (s_3003193058[s_3003193058_Idx].length < chckRange(L_3003193063, 0, 2147483647)) { for (var i = s_3003193058[s_3003193058_Idx].length ; i < chckRange(L_3003193063, 0, 2147483647) ; ++i) s_3003193058[s_3003193058_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3003193058[s_3003193058_Idx].length = chckRange(L_3003193063, 0, 2147483647); };

  return result_3003193059;

}

function hasKey_3019909062(t_3019909065, key_3019909066) {
  var result_3019909067 = false;

    var hc_3019909068 = [0];
    result_3019909067 = (0 <= rawGet_3019909069(t_3019909065, key_3019909066, hc_3019909068, 0));

  return result_3019909067;

}

function contains_3019909056(t_3019909059, key_3019909060) {
  var result_3019909061 = false;

  BeforeRet: {
    result_3019909061 = hasKey_3019909062(t_3019909059, key_3019909060);
    break BeforeRet;
  };

  return result_3019909061;

}

function contains_3019908962(cache_3019908965, key_3019908966) {
  var result_3019908967 = false;

    result_3019908967 = contains_3019909056(cache_3019908965.table, key_3019908966);

  return result_3019908967;

}

function HEX5BHEX5D_3019909587(t_3019909590, key_3019909591) {
  var result_3019909592 = null;
  var result_3019909592_Idx = 0;

    var hcHEX60gensym22_3019909593 = [0];
    var indexHEX60gensym22_3019909600 = rawGet_3019909069(t_3019909590, key_3019909591, hcHEX60gensym22_3019909593, 0);
    if ((0 <= indexHEX60gensym22_3019909600)) {
    result_3019909592 = t_3019909590.data[chckIndx(indexHEX60gensym22_3019909600, 0, (t_3019909590.data).length - 1)]; result_3019909592_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3019909591);
    }
    

  return [result_3019909592, result_3019909592_Idx];

}

function HEX5BHEX5D_3019909501(cache_3019909504, key_3019909505) {
    var Temporary1;

  var result_3019909506 = [];

    var node_3019909782 = (Temporary1 = HEX5BHEX5D_3019909587(cache_3019909504.table, key_3019909505), Temporary1)[0][Temporary1[1]];
    result_3019909506 = nimCopy(null, node_3019909782.value.val, NTI3019898904);
    remove_3019909796(cache_3019909504.list, node_3019909782);
    prepend_3019910088(cache_3019909504.list, node_3019909782);

  return result_3019909506;

}

function fingerprint_3019908882(graph_3019908883, key_3019908884) {
  var result_3019908885 = [];

  BeforeRet: {
    if (contains_3019908962(graph_3019908883.fingerprints, key_3019908884)) {
    result_3019908885 = nimCopy(null, HEX5BHEX5D_3019909501(graph_3019908883.fingerprints, key_3019908884), NTI3019898904);
    break BeforeRet;
    }
    
  };

  return result_3019908885;

}

function HEX3DHEX3D_3003193069(x_3003193071, y_3003193072) {
  var result_3003193073 = false;

  BeforeRet: {
    var sameObject_3003193080 = false;
    sameObject_3003193080 = x_3003193071 === y_3003193072
    if (sameObject_3003193080) {
    result_3003193073 = true;
    break BeforeRet;
    }
    
    if (!(((x_3003193071).length == (y_3003193072).length))) {
    result_3003193073 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3003193094 = 0;
      var colontmp__2952790208 = 0;
      colontmp__2952790208 = subInt((x_3003193071).length, 1);
      var res_2952790209 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790209 <= colontmp__2952790208)) break Label3;
            i_3003193094 = res_2952790209;
            if (!((x_3003193071[chckIndx(i_3003193094, 0, (x_3003193071).length - 1)] == y_3003193072[chckIndx(i_3003193094, 0, (y_3003193072).length - 1)]))) {
            result_3003193073 = false;
            break BeforeRet;
            }
            
            res_2952790209 = addInt(res_2952790209, 1);
          }
      };
    };
    result_3003193073 = true;
    break BeforeRet;
  };

  return result_3003193073;

}

function markGreen_3019910274(graph_3019910275, key_3019910276) {
    HEX5BHEX5DHEX3D_3019910340(graph_3019910275.verified, key_3019910276, graph_3019910275.revision);

  
}

function force_3003192111(ctxHEX60gensym88_3003192112, keyHEX60gensym88_3003192113) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary1);
    try {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3003192204(ctxHEX60gensym88_3003192112.depGraph.queryNames, keyHEX60gensym88_3003192113.Field1), Temporary3)[0][Temporary3[1]], HEX24_3019899092(keyHEX60gensym88_3003192113.Field0));
    }
    
    if (contains_3003192377(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113)) {
    incl_3019906164(ctxHEX60gensym88_3003192112.recursiveQueries, keyHEX60gensym88_3003192113);
    var itemHEX60gensym88_3003192420 = nimCopy(null, keyHEX60gensym88_3003192113.Field0, NTI3019898905);
    var queryHEX60gensym88_3003192506 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3003192204(ctxHEX60gensym88_3003192112.depGraph.queryNames, keyHEX60gensym88_3003192113.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3019899092(itemHEX60gensym88_3003192420), [32,40], queryHEX60gensym88_3003192506, [41]);
    Label5: {
      var kHEX60gensym88_3003192514 = 0;
      var colontmp__2952790166 = 0;
      colontmp__2952790166 = (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1;
      var res_2952790167 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2952790167 <= colontmp__2952790166)) break Label7;
            kHEX60gensym88_3003192514 = res_2952790167;
            var iHEX60gensym88_3003192518 = subInt(subInt((ctxHEX60gensym88_3003192112.activeQueryStack).length, kHEX60gensym88_3003192514), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_3003192514), [93,32,80,97,114,101,110,116,58,32], HEX24_3019899092(ctxHEX60gensym88_3003192112.activeQueryStack[chckIndx(iHEX60gensym88_3003192518, 0, (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3003192608(ctxHEX60gensym88_3003192112.depGraph.queryNames, ctxHEX60gensym88_3003192112.activeQueryStack[chckIndx(iHEX60gensym88_3003192518, 0, (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1)].Field1));
            res_2952790167 = addInt(res_2952790167, 1);
          }
      };
    };
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3003192780(ctxHEX60gensym88_3003192112.recoveryFunctions, keyHEX60gensym88_3003192113.Field1)) {
    (Temporary8 = HEX5BHEX5D_3003192879(ctxHEX60gensym88_3003192112.recoveryFunctions, keyHEX60gensym88_3003192113.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_3003192113);
    markRed_3019913717(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019906164(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_3003192113, NTI3019898908);
    ctxHEX60gensym88_3003192112.activeQueryStack.push(Temporary9);;
    clearEdges_3019902893(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    ctxHEX60gensym88_3003192112.dependencyStack.push([]);;
    recordDependency_3003175740(ctxHEX60gensym88_3003192112, keyHEX60gensym88_3003192113.Field0, -1);
    var fingerprintHEX60gensym88_3003193024 = ctxHEX60gensym88_3003192112.updateFunctions[chckIndx(keyHEX60gensym88_3003192113.Field1, 0, (ctxHEX60gensym88_3003192112.updateFunctions).length - 1)](keyHEX60gensym88_3003192113.Field0);
    setDependencies_3019908809(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, pop_3003193025(ctxHEX60gensym88_3003192112, "dependencyStack"));
    excl_3019904993(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113);
    var _ = pop_3003193056(ctxHEX60gensym88_3003192112, "activeQueryStack");
    var prevFingerprintHEX60gensym88_3003193068 = fingerprint_3019908882(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    if (HEX3DHEX3D_3003193069(fingerprintHEX60gensym88_3003193024, prevFingerprintHEX60gensym88_3003193068)) {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3019910274(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    }
    else {
      if (ctxHEX60gensym88_3003192112.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3019913717(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, fingerprintHEX60gensym88_3003193024);
    }
    
    } finally {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008227(s_3087008229, s_3087008229_Idx, x_3087008230) {
    s_3087008229[s_3087008229_Idx].push.apply(s_3087008229[s_3087008229_Idx], HEX24_3087008180(x_3087008230));;

  
}

function collectionToString_3087008187(x_3087008189, prefix_3087008190, separator_3087008191, suffix_3087008192) {
  var result_3087008193 = [[]];

    result_3087008193[0] = nimCopy(null, prefix_3087008190, NTI33554449);
    var firstElement_3087008194 = true;
    Label1: {
      var value_3087008217 = null;
      var i_2952790213 = 0;
      var L_2952790214 = (x_3087008189).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790213 < L_2952790214)) break Label3;
            value_3087008217 = x_3087008189[i_2952790213];
            if (firstElement_3087008194) {
            firstElement_3087008194 = false;
            }
            else {
            result_3087008193[0].push.apply(result_3087008193[0], separator_3087008191);;
            }
            
            if ((value_3087008217 == null)) {
            result_3087008193[0].push.apply(result_3087008193[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008227(result_3087008193, 0, value_3087008217);
            }
            
            i_2952790213 += 1;
            if (!(((x_3087008189).length == L_2952790214))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008193[0].push.apply(result_3087008193[0], suffix_3087008192);;

  return result_3087008193[0];

}

function HEX24_3087008183(x_3087008185) {
  var result_3087008186 = [];

    result_3087008186 = nimCopy(null, collectionToString_3087008187(x_3087008185, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008186;

}

function formatValue_2818576994(result_2818576996, result_2818576996_Idx, value_2818576997, specifier_2818576998) {
    formatValue_721420459(result_2818576996, result_2818576996_Idx, nimBoolToStr(value_2818576997), specifier_2818576998);

  
}

function HEX24_3087008180(typ_3087008181) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008182 = [];

  BeforeRet: {
    switch (typ_3087008181.kind) {
    case 0:
      result_3087008182 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008182 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008182 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008182 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008181;
      if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008181;
      if (ConstSet61[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008182 = nimCopy(null, (HEX24_3087008183(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008180(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008182 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008246 = [mnewString(0)];
      fmtRes_3087008246[0].push.apply(fmtRes_3087008246[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008181;
      if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2818576994(fmtRes_3087008246, 0, Temporary3.open, []);
      fmtRes_3087008246[0].push.apply(fmtRes_3087008246[0], [41]);;
      result_3087008182 = nimCopy(null, fmtRes_3087008246[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008182;

}

function raiseKeyError_3003195140(key_3003195142) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2986346455(key_3003195142) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003195046(t_3003195049, key_3003195050) {
  var result_3003195051 = null;
  var result_3003195051_Idx = 0;

    var hcHEX60gensym22_3003195052 = [0];
    var indexHEX60gensym22_3003195059 = rawGet_3003124083(t_3003195049, key_3003195050, hcHEX60gensym22_3003195052, 0);
    if ((0 <= indexHEX60gensym22_3003195059)) {
    result_3003195051 = t_3003195049.data[chckIndx(indexHEX60gensym22_3003195059, 0, (t_3003195049.data).length - 1)]; result_3003195051_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003195050);
    }
    

  return [result_3003195051, result_3003195051_Idx];

}

function remove_3003129987(L_3003129989, n_3003129990) {
    if ((n_3003129990 == L_3003129989.tail)) {
    L_3003129989.tail = n_3003129990.prev;
    }
    
    if ((n_3003129990 == L_3003129989.head)) {
    L_3003129989.head = n_3003129990.next;
    }
    
    if (!((n_3003129990.next == null))) {
    n_3003129990.next.prev = n_3003129990.prev;
    }
    
    if (!((n_3003129990.prev == null))) {
    n_3003129990.prev.next = n_3003129990.next;
    }
    

  
}

function prepend_3003126259(L_3003126261, n_3003126262) {
    n_3003126262.prev = null;
    n_3003126262.next = L_3003126261.head;
    if (!((L_3003126261.head == null))) {
    if (!((L_3003126261.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003126261.head.prev = n_3003126262;
    }
    
    L_3003126261.head = n_3003126262;
    if ((L_3003126261.tail == null)) {
    L_3003126261.tail = n_3003126262;
    }
    

  
}

function HEX5BHEX5D_3003194960(cache_3003194963, key_3003194964) {
    var Temporary1;

  var result_3003194965 = null;

    var node_3003195153 = (Temporary1 = HEX5BHEX5D_3003195046(cache_3003194963.table, key_3003194964), Temporary1)[0][Temporary1[1]];
    result_3003194965 = node_3003195153.value.val;
    remove_3003129987(cache_3003194963.list, node_3003195153);
    prepend_3003126259(cache_3003194963.list, node_3003195153);

  return result_3003194965;

}

function addQuoted_3003193318(s_3003193320, s_3003193320_Idx, x_3003193321) {
    s_3003193320[s_3003193320_Idx].push.apply(s_3003193320[s_3003193320_Idx], HEX24_3019909728(x_3003193321));;

  
}

function collectionToString_3003193285(x_3003193287, prefix_3003193288, separator_3003193289, suffix_3003193290) {
  var result_3003193291 = [[]];

    result_3003193291[0] = nimCopy(null, prefix_3003193288, NTI33554449);
    var firstElement_3003193292 = true;
    Label1: {
      var value_3003193314 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2952790229 = 0;
      var L_2952790230 = (x_3003193287).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790229 < L_2952790230)) break Label3;
            value_3003193314 = x_3003193287[i_2952790229];
            if (firstElement_3003193292) {
            firstElement_3003193292 = false;
            }
            else {
            result_3003193291[0].push.apply(result_3003193291[0], separator_3003193289);;
            }
            
            addQuoted_3003193318(result_3003193291, 0, value_3003193314);
            i_2952790229 += 1;
            if (!(((x_3003193287).length == L_2952790230))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003193291[0].push.apply(result_3003193291[0], suffix_3003193290);;

  return result_3003193291[0];

}

function HEX24_3003193281(x_3003193283) {
  var result_3003193284 = [];

    result_3003193284 = nimCopy(null, collectionToString_3003193285(x_3003193283, [64,91], [44,32], [93]), NTI33554449);

  return result_3003193284;

}

function getOrDefault_3019902324(cache_3019902327, key_3019902328, val_3019902329) {
  var result_3019902330 = [];

    var node_3019902872 = getOrDefault_3019902420(cache_3019902327.table, key_3019902328, null);
    if ((node_3019902872 == null)) {
    result_3019902330 = nimCopy(null, val_3019902329, NTI3019899064);
    }
    else {
      result_3019902330 = nimCopy(null, node_3019902872.value.val, NTI3019899064);
    }
    

  return result_3019902330;

}

function getDependencies_3019902227(graph_3019902228, key_3019902229) {
  var result_3019902230 = [];

    result_3019902230 = nimCopy(null, getOrDefault_3019902324(graph_3019902228.dependencies, key_3019902229, []), NTI3019899064);
    if ((((result_3019902230).length == 0) && !((key_3019902229.Field1 == -1)))) {
    result_3019902230.push({Field0: nimCopy(null, key_3019902229.Field0, NTI3019898905), Field1: -1});;
    }
    

  return result_3019902230;

}

function tryMarkGreen_3003193126(ctxHEX60gensym89_3003193127, keyHEX60gensym89_3003193128, tryForceHEX60gensym89_3003193129) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3003193130 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary1);
    try {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, keyHEX60gensym89_3003193128.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3019899092(keyHEX60gensym89_3003193128.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3003193281(getDependencies_3019902227(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128)));
    }
    
    if (contains_3003192377(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128)) {
    incl_3019906164(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128);
    var itemHEX60gensym89_3003193430 = nimCopy(null, keyHEX60gensym89_3003193128.Field0, NTI3019898905);
    var queryHEX60gensym89_3003193516 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, keyHEX60gensym89_3003193128.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3019899092(itemHEX60gensym89_3003193430), [32,40], queryHEX60gensym89_3003193516, [41]);
    Label5: {
      var kHEX60gensym89_3003193524 = 0;
      var colontmp__2952790217 = 0;
      colontmp__2952790217 = (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1;
      var res_2952790218 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2952790218 <= colontmp__2952790217)) break Label7;
            kHEX60gensym89_3003193524 = res_2952790218;
            var iHEX60gensym89_3003193528 = subInt(subInt((ctxHEX60gensym89_3003193127.activeQueryStack).length, kHEX60gensym89_3003193524), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_3003193524), [93,32,80,97,114,101,110,116,58,32], HEX24_3019899092(ctxHEX60gensym89_3003193127.activeQueryStack[chckIndx(iHEX60gensym89_3003193528, 0, (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3003192608(ctxHEX60gensym89_3003193127.depGraph.queryNames, ctxHEX60gensym89_3003193127.activeQueryStack[chckIndx(iHEX60gensym89_3003193528, 0, (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1)].Field1));
            res_2952790218 = addInt(res_2952790218, 1);
          }
      };
    };
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3003192780(ctxHEX60gensym89_3003193127.recoveryFunctions, keyHEX60gensym89_3003193128.Field1)) {
    (Temporary8 = HEX5BHEX5D_3003192879(ctxHEX60gensym89_3003193127.recoveryFunctions, keyHEX60gensym89_3003193128.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_3003193128);
    markRed_3019913717(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128, []);
    }
    
    result_3003193130 = 2;
    break BeforeRet;
    }
    
    incl_3019906164(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_3003193128, NTI3019898908);
    ctxHEX60gensym89_3003193127.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_3003193937 = getOrDefault_3019901459(ctxHEX60gensym89_3003193127.depGraph.verified, keyHEX60gensym89_3003193128, 0);
    Label11: {
      var iHEX60gensym89_3003193961 = 0;
      var depHEX60gensym89_3003193962 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2952790222 = [];
      colontmp__2952790222 = getDependencies_3019902227(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128);
      var i_2952790224 = 0;
      var L_2952790225 = (colontmp__2952790222).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2952790224 < L_2952790225)) break Label13;
            iHEX60gensym89_3003193961 = i_2952790224;
            depHEX60gensym89_3003193962 = nimCopy(depHEX60gensym89_3003193962, colontmp__2952790222[chckIndx(i_2952790224, 0, (colontmp__2952790222).length - 1)], NTI3019898908);
            Label14: {
              if (HEX3DHEX3D_2046820592(depHEX60gensym89_3003193962.Field0.Field0, null_2046820612)) {
              if (ctxHEX60gensym89_3003193127.enableLogging) {
              rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3003193130 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820592(depHEX60gensym89_3003193962.Field0.Field0, dependencyGlobalRevision_3019898912)) {
              if ((verifiedHEX60gensym89_3003193937 < ctxHEX60gensym89_3003193127.depGraph.revision)) {
              if (ctxHEX60gensym89_3003193127.enableLogging) {
              rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3003193130 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3019901365(ctxHEX60gensym89_3003193127.depGraph, depHEX60gensym89_3003193962, verifiedHEX60gensym89_3003193937)) {
              case 2:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3003193130 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3003193126(ctxHEX60gensym89_3003193127, depHEX60gensym89_3003193962, true)) {
                case 2:
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019909728(keyHEX60gensym89_3003193128) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3003193130 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_3003193129) {
                  force_3003192111(ctxHEX60gensym89_3003193127, depHEX60gensym89_3003193962);
                  }
                  else {
                    result_3003193130 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3003192377(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128)) {
                  excl_3019904993(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128);
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019909728(keyHEX60gensym89_3003193128) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3003193130 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3019901365(ctxHEX60gensym89_3003193127.depGraph, depHEX60gensym89_3003193962, verifiedHEX60gensym89_3003193937) == 1)) {
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3003193130 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2952790224 = addInt(i_2952790224, 1);
            if (!(((colontmp__2952790222).length == L_2952790225))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3019910274(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128);
    result_3003193130 = 0;
    break BeforeRet;
    } finally {
    excl_3019904993(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128);
    var _ = pop_3003193056(ctxHEX60gensym89_3003193127, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary22);
    }
  };

  return result_3003193130;

}

function clear_3003195341(s_3003195343) {
    s_3003195343.counter = 0;
    Label1: {
      var i_3003195429 = 0;
      var colontmp__2952790233 = 0;
      colontmp__2952790233 = (s_3003195343.data).length;
      var i_2952790234 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790234 < colontmp__2952790233)) break Label3;
            i_3003195429 = i_2952790234;
            s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field0 = 0;
            s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field1 = nimCopy(s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            i_2952790234 = addInt(i_2952790234, 1);
          }
      };
    };

  
}

function elapsed_2466250815(timer_2466250816) {
  var result_2466250817 = 0;

    result_2466250817 = subInt(myGetTicks_2466250798(), timer_2466250816.start);

  return result_2466250817;

}

function computeType_3003195250(ctxHEX60gensym92_3003195251, inputHEX60gensym92_3003195252, recordDependencyHEX60gensym92_3003195253) {
    var Temporary3;
    var Temporary5;

  var result_3003195254 = null;

  BeforeRet: {
    var timerHEX60gensym92_3003195255 = startTimer_2466250804();
    ctxHEX60gensym92_3003195251.statsType.totalCalls = addInt(ctxHEX60gensym92_3003195251.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_3003195674 = getItem_3003175953(inputHEX60gensym92_3003195252);
    var keyHEX60gensym92_3003195675 = {Field0: nimCopy(null, itemHEX60gensym92_3003195674, NTI3019898905), Field1: 0};
    if (recordDependencyHEX60gensym92_3003195253) {
    recordDependency_3003175740(ctxHEX60gensym92_3003195251, itemHEX60gensym92_3003195674, 0);
    }
    
    var colorHEX60gensym92_3003195676 = nodeColor_3019901365(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, 0);
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_3003195676, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym92_3003195674));
    }
    
    if ((colorHEX60gensym92_3003195676 == 2)) {
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    if (false) {
    markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
      }
      
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_3003195676 == 0)) {
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    if (false) {
    markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675, true) == 0)) {
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_3003195251.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
      if (false) {
      markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
      }
      
      if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
      }
      
      if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_3003195676 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym92_3003195251.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym92_3003195251.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym92_3003195251.statsType.time = addInt(ctxHEX60gensym92_3003195251.statsType.time, elapsed_2466250815(timerHEX60gensym92_3003195255));
    }
  };

  return result_3003195254;

}

function formatValue_3003230324(result_3003230326, result_3003230326_Idx, value_3003230327, specifier_3003230328) {
    formatValue_721420459(result_3003230326, result_3003230326_Idx, HEX24_3087008180(value_3003230327), specifier_3003230328);

  
}

function rawGet_3003130842(t_3003130845, key_3003130846, hc_3003130847, hc_3003130847_Idx) {
  var result_3003130848 = 0;

  BeforeRet: {
    hc_3003130847[hc_3003130847_Idx] = hash_2986346803(key_3003130846);
    if ((hc_3003130847[hc_3003130847_Idx] == 0)) {
    hc_3003130847[hc_3003130847_Idx] = 314159265;
    }
    
    if (((t_3003130845.data).length == 0)) {
    result_3003130848 = -1;
    break BeforeRet;
    }
    
    var h_3003130934 = (hc_3003130847[hc_3003130847_Idx] & (t_3003130845.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field0)) break Label2;
          if (((t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field0 == hc_3003130847[hc_3003130847_Idx]) && (t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field1 == key_3003130846))) {
          result_3003130848 = h_3003130934;
          break BeforeRet;
          }
          
          h_3003130934 = nextTry_1308622883(h_3003130934, (t_3003130845.data).length - 1);
        }
    };
    result_3003130848 = subInt(-1, h_3003130934);
  };

  return result_3003130848;

}

function hasKey_3003198342(t_3003198345, key_3003198346) {
  var result_3003198347 = false;

    var hc_3003198348 = [0];
    result_3003198347 = (0 <= rawGet_3003130842(t_3003198345, key_3003198346, hc_3003198348, 0));

  return result_3003198347;

}

function contains_3003198336(t_3003198339, key_3003198340) {
  var result_3003198341 = false;

  BeforeRet: {
    result_3003198341 = hasKey_3003198342(t_3003198339, key_3003198340);
    break BeforeRet;
  };

  return result_3003198341;

}

function contains_3003198242(cache_3003198245, key_3003198246) {
  var result_3003198247 = false;

    result_3003198247 = contains_3003198336(cache_3003198245.table, key_3003198246);

  return result_3003198247;

}

function HEX24_3087008487(value_3087008488) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008489 = [];

  BeforeRet: {
    switch (value_3087008488.kind) {
    case 0:
      result_3087008489 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008489 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008488;
      if (ConstSet63[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008488;
      if (ConstSet64[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008489 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008488;
      if (ConstSet65[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2986346455(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008488;
      if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, HEX24_3087008180(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008489;

}

function HEX5BHEX5D_3003198521(t_3003198524, key_3003198525) {
  var result_3003198526 = null;
  var result_3003198526_Idx = 0;

    var hcHEX60gensym22_3003198527 = [0];
    var indexHEX60gensym22_3003198534 = rawGet_3003130842(t_3003198524, key_3003198525, hcHEX60gensym22_3003198527, 0);
    if ((0 <= indexHEX60gensym22_3003198534)) {
    result_3003198526 = t_3003198524.data[chckIndx(indexHEX60gensym22_3003198534, 0, (t_3003198524.data).length - 1)]; result_3003198526_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003198525);
    }
    

  return [result_3003198526, result_3003198526_Idx];

}

function remove_3003134298(L_3003134300, n_3003134301) {
    if ((n_3003134301 == L_3003134300.tail)) {
    L_3003134300.tail = n_3003134301.prev;
    }
    
    if ((n_3003134301 == L_3003134300.head)) {
    L_3003134300.head = n_3003134301.next;
    }
    
    if (!((n_3003134301.next == null))) {
    n_3003134301.next.prev = n_3003134301.prev;
    }
    
    if (!((n_3003134301.prev == null))) {
    n_3003134301.prev.next = n_3003134301.next;
    }
    

  
}

function prepend_3003133027(L_3003133029, n_3003133030) {
    n_3003133030.prev = null;
    n_3003133030.next = L_3003133029.head;
    if (!((L_3003133029.head == null))) {
    if (!((L_3003133029.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003133029.head.prev = n_3003133030;
    }
    
    L_3003133029.head = n_3003133030;
    if ((L_3003133029.tail == null)) {
    L_3003133029.tail = n_3003133030;
    }
    

  
}

function HEX5BHEX5D_3003198435(cache_3003198438, key_3003198439) {
    var Temporary1;

  var result_3003198440 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003198627 = (Temporary1 = HEX5BHEX5D_3003198521(cache_3003198438.table, key_3003198439), Temporary1)[0][Temporary1[1]];
    result_3003198440 = nimCopy(result_3003198440, node_3003198627.value.val, NTI3087007751);
    remove_3003134298(cache_3003198438.list, node_3003198627);
    prepend_3003133027(cache_3003198438.list, node_3003198627);

  return result_3003198440;

}

function computeValue_3003198726(ctxHEX60gensym96_3003198727, inputHEX60gensym96_3003198728, recordDependencyHEX60gensym96_3003198729) {
    var Temporary3;
    var Temporary5;

  var result_3003198730 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym96_3003198731 = startTimer_2466250804();
    ctxHEX60gensym96_3003198727.statsValue.totalCalls = addInt(ctxHEX60gensym96_3003198727.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_3003198820 = getItem_3003175953(inputHEX60gensym96_3003198728);
    var keyHEX60gensym96_3003198821 = {Field0: nimCopy(null, itemHEX60gensym96_3003198820, NTI3019898905), Field1: 1};
    if (recordDependencyHEX60gensym96_3003198729) {
    recordDependency_3003175740(ctxHEX60gensym96_3003198727, itemHEX60gensym96_3003198820, 1);
    }
    
    var colorHEX60gensym96_3003198822 = nodeColor_3019901365(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, 0);
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_3003198822, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym96_3003198820));
    }
    
    if ((colorHEX60gensym96_3003198822 == 2)) {
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    if (false) {
    markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
      }
      
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_3003198822 == 0)) {
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    if (false) {
    markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821, true) == 0)) {
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_3003198727.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
      if (false) {
      markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
      }
      
      if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
      }
      
      if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_3003198822 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym96_3003198727.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym96_3003198727.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym96_3003198727.statsValue.time = addInt(ctxHEX60gensym96_3003198727.statsValue.time, elapsed_2466250815(timerHEX60gensym96_3003198731));
    }
  };

  return result_3003198730;

}

function formatValue_3137340831(result_3137340833, result_3137340833_Idx, value_3137340834, specifier_3137340835) {
    formatValue_721420459(result_3137340833, result_3137340833_Idx, HEX24_3087008487(value_3137340834), specifier_3137340835);

  
}

function newFunctionType_3087008162(paramTypes_3087008163, returnType_3087008164) {
  var result_3087008165 = null;

    result_3087008165 = {kind: 4, returnType: returnType_3087008164, paramTypes: nimCopy(null, paramTypes_3087008163, NTI3087008054), open: false};

  return result_3087008165;

}

function HEX3DHEX3D_3087008320(x_3087008322, y_3087008323) {
  var result_3087008324 = false;

  BeforeRet: {
    var sameObject_3087008331 = false;
    sameObject_3087008331 = x_3087008322 === y_3087008323
    if (sameObject_3087008331) {
    result_3087008324 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008322).length == (y_3087008323).length))) {
    result_3087008324 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008345 = 0;
      var colontmp__2952790238 = 0;
      colontmp__2952790238 = subInt((x_3087008322).length, 1);
      var res_2952790239 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790239 <= colontmp__2952790238)) break Label3;
            i_3087008345 = res_2952790239;
            if (!(HEX3DHEX3D_3087008302(x_3087008322[chckIndx(i_3087008345, 0, (x_3087008322).length - 1)], y_3087008323[chckIndx(i_3087008345, 0, (y_3087008323).length - 1)]))) {
            result_3087008324 = false;
            break BeforeRet;
            }
            
            res_2952790239 = addInt(res_2952790239, 1);
          }
      };
    };
    result_3087008324 = true;
    break BeforeRet;
  };

  return result_3087008324;

}

function HEX3DHEX3D_3087008302(a_3087008303, b_3087008304) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008305 = false;

  BeforeRet: {
    if ((a_3087008303 == null)) {
    result_3087008305 = (b_3087008304 == null);
    break BeforeRet;
    }
    
    if ((b_3087008304 == null)) {
    result_3087008305 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008303.kind == b_3087008304.kind))) {
    result_3087008305 = false;
    break BeforeRet;
    }
    
    switch (a_3087008303.kind) {
    case 4:
      var Temporary2 = a_3087008303;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008304;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008302(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008303;
        if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008304;
        if (ConstSet72[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008320(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008305 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008303;
      if (ConstSet73[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008304;
      if (ConstSet74[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008305 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008305 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008305;

}

function anyType_3087008177(open_3087008178) {
  var result_3087008179 = null;

    result_3087008179 = {kind: 5, open: open_3087008178, returnType: null, paramTypes: []};

  return result_3087008179;

}

function rawGet_3003139458(t_3003139461, key_3003139462, hc_3003139463, hc_3003139463_Idx) {
  var result_3003139464 = 0;

  BeforeRet: {
    hc_3003139463[hc_3003139463_Idx] = hash_2986346803(key_3003139462);
    if ((hc_3003139463[hc_3003139463_Idx] == 0)) {
    hc_3003139463[hc_3003139463_Idx] = 314159265;
    }
    
    if (((t_3003139461.data).length == 0)) {
    result_3003139464 = -1;
    break BeforeRet;
    }
    
    var h_3003139550 = (hc_3003139463[hc_3003139463_Idx] & (t_3003139461.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field0)) break Label2;
          if (((t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field0 == hc_3003139463[hc_3003139463_Idx]) && (t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field1 == key_3003139462))) {
          result_3003139464 = h_3003139550;
          break BeforeRet;
          }
          
          h_3003139550 = nextTry_1308622883(h_3003139550, (t_3003139461.data).length - 1);
        }
    };
    result_3003139464 = subInt(-1, h_3003139550);
  };

  return result_3003139464;

}

function hasKey_3003204970(t_3003204973, key_3003204974) {
  var result_3003204975 = false;

    var hc_3003204976 = [0];
    result_3003204975 = (0 <= rawGet_3003139458(t_3003204973, key_3003204974, hc_3003204976, 0));

  return result_3003204975;

}

function contains_3003204964(t_3003204967, key_3003204968) {
  var result_3003204969 = false;

  BeforeRet: {
    result_3003204969 = hasKey_3003204970(t_3003204967, key_3003204968);
    break BeforeRet;
  };

  return result_3003204969;

}

function contains_3003204870(cache_3003204873, key_3003204874) {
  var result_3003204875 = false;

    result_3003204875 = contains_3003204964(cache_3003204873.table, key_3003204874);

  return result_3003204875;

}

function len_3087009054(t_3087009057) {
  var result_3087009058 = 0;

    result_3087009058 = t_3087009057.counter;

  return result_3087009058;

}

function addQuoted_3003175359(s_3003175361, s_3003175361_Idx, x_3003175362) {
    s_3003175361[s_3003175361_Idx].push.apply(s_3003175361[s_3003175361_Idx], HEX24_2046820589(x_3003175362));;

  
}

function HEX24_3087008904(symbol_3087008905) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008906 = [];

  BeforeRet: {
    switch (symbol_3087008905.kind) {
    case 0:
      var Temporary1 = symbol_3087008905;
      if (ConstSet86[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008906 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820589(symbol_3087008905.id) || [],[44,32] || [],HEX24_2986346455(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008905;
      if (ConstSet87[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008905;
      if (ConstSet88[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008906 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820589(symbol_3087008905.id) || [],[44,32] || [],HEX24_3087008180(Temporary2.typ) || [],[44,32] || [],HEX24_3087008487(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008906;

}

function addQuoted_3003175111(s_3003175113, s_3003175113_Idx, x_3003175114) {
    s_3003175113[s_3003175113_Idx].push.apply(s_3003175113[s_3003175113_Idx], HEX24_3087008904(x_3003175114));;

  
}

function HEX24_3003175266(t_3003175269) {
  var result_3003175270 = [[]];

    if ((len_3087009054(t_3003175269) == 0)) {
    result_3003175270[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3003175270[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3003175357 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3003175358 = null;
        var L_2952790247 = len_3087009054(t_3003175269);
        Label2: {
          var h_2952790249 = 0;
          var colontmp__2952790250 = 0;
          colontmp__2952790250 = (t_3003175269.data).length - 1;
          var res_2952790251 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2952790251 <= colontmp__2952790250)) break Label4;
                h_2952790249 = res_2952790251;
                if (isFilled_1308622880(t_3003175269.data[chckIndx(h_2952790249, 0, (t_3003175269.data).length - 1)].Field0)) {
                key_3003175357 = nimCopy(key_3003175357, t_3003175269.data[chckIndx(h_2952790249, 0, (t_3003175269.data).length - 1)].Field1, NTI2046820355);
                val_3003175358 = t_3003175269.data[chckIndx(h_2952790249, 0, (t_3003175269.data).length - 1)].Field2;
                if ((1 < (result_3003175270[0]).length)) {
                result_3003175270[0].push.apply(result_3003175270[0], [44,32]);;
                }
                
                addQuoted_3003175359(result_3003175270, 0, key_3003175357);
                result_3003175270[0].push.apply(result_3003175270[0], [58,32]);;
                addQuoted_3003175111(result_3003175270, 0, val_3003175358);
                if (!((len_3087009054(t_3003175269) == L_2952790247))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2952790251 = addInt(res_2952790251, 1);
              }
          };
        };
      };
      result_3003175270[0].push.apply(result_3003175270[0], [125]);;
    }
    

  return result_3003175270[0];

}

function HEX5BHEX5D_3003205149(t_3003205152, key_3003205153) {
  var result_3003205154 = null;
  var result_3003205154_Idx = 0;

    var hcHEX60gensym22_3003205155 = [0];
    var indexHEX60gensym22_3003205162 = rawGet_3003139458(t_3003205152, key_3003205153, hcHEX60gensym22_3003205155, 0);
    if ((0 <= indexHEX60gensym22_3003205162)) {
    result_3003205154 = t_3003205152.data[chckIndx(indexHEX60gensym22_3003205162, 0, (t_3003205152.data).length - 1)]; result_3003205154_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003205153);
    }
    

  return [result_3003205154, result_3003205154_Idx];

}

function remove_3003142905(L_3003142907, n_3003142908) {
    if ((n_3003142908 == L_3003142907.tail)) {
    L_3003142907.tail = n_3003142908.prev;
    }
    
    if ((n_3003142908 == L_3003142907.head)) {
    L_3003142907.head = n_3003142908.next;
    }
    
    if (!((n_3003142908.next == null))) {
    n_3003142908.next.prev = n_3003142908.prev;
    }
    
    if (!((n_3003142908.prev == null))) {
    n_3003142908.prev.next = n_3003142908.next;
    }
    

  
}

function prepend_3003141634(L_3003141636, n_3003141637) {
    n_3003141637.prev = null;
    n_3003141637.next = L_3003141636.head;
    if (!((L_3003141636.head == null))) {
    if (!((L_3003141636.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003141636.head.prev = n_3003141637;
    }
    
    L_3003141636.head = n_3003141637;
    if ((L_3003141636.tail == null)) {
    L_3003141636.tail = n_3003141637;
    }
    

  
}

function HEX5BHEX5D_3003205063(cache_3003205066, key_3003205067) {
    var Temporary1;

  var result_3003205068 = null;

    var node_3003205255 = (Temporary1 = HEX5BHEX5D_3003205149(cache_3003205066.table, key_3003205067), Temporary1)[0][Temporary1[1]];
    result_3003205068 = node_3003205255.value.val;
    remove_3003142905(cache_3003205066.list, node_3003205255);
    prepend_3003141634(cache_3003205066.list, node_3003205255);

  return result_3003205068;

}

function computeSymbols_3003205356(ctxHEX60gensym104_3003205357, inputHEX60gensym104_3003205358, recordDependencyHEX60gensym104_3003205359) {
    var Temporary3;
    var Temporary5;

  var result_3003205362 = null;

  BeforeRet: {
    var timerHEX60gensym104_3003205363 = startTimer_2466250804();
    ctxHEX60gensym104_3003205357.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_3003205357.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_3003205452 = getItem_3003175953(inputHEX60gensym104_3003205358);
    var keyHEX60gensym104_3003205453 = {Field0: nimCopy(null, itemHEX60gensym104_3003205452, NTI3019898905), Field1: 3};
    if (recordDependencyHEX60gensym104_3003205359) {
    recordDependency_3003175740(ctxHEX60gensym104_3003205357, itemHEX60gensym104_3003205452, 3);
    }
    
    var colorHEX60gensym104_3003205454 = nodeColor_3019901365(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, 0);
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_3003205454, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym104_3003205452));
    }
    
    if ((colorHEX60gensym104_3003205454 == 2)) {
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    if (false) {
    markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
      }
      
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_3003205454 == 0)) {
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    if (false) {
    markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453, true) == 0)) {
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_3003205357.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
      if (false) {
      markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
      }
      
      if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
      }
      
      if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_3003205454 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym104_3003205357.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym104_3003205357.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym104_3003205357.statsSymbols.time = addInt(ctxHEX60gensym104_3003205357.statsSymbols.time, elapsed_2466250815(timerHEX60gensym104_3003205363));
    }
  };

  return result_3003205362;

}

function rawGet_3003219622(t_3003219625, key_3003219626, hc_3003219627, hc_3003219627_Idx) {
  var result_3003219628 = 0;

  BeforeRet: {
    hc_3003219627[hc_3003219627_Idx] = hash_2046820596(key_3003219626);
    if ((hc_3003219627[hc_3003219627_Idx] == 0)) {
    hc_3003219627[hc_3003219627_Idx] = 314159265;
    }
    
    if (((t_3003219625.data).length == 0)) {
    result_3003219628 = -1;
    break BeforeRet;
    }
    
    var h_3003219713 = (hc_3003219627[hc_3003219627_Idx] & (t_3003219625.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field0)) break Label2;
          if (((t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field0 == hc_3003219627[hc_3003219627_Idx]) && HEX3DHEX3D_2046820592(t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field1, key_3003219626))) {
          result_3003219628 = h_3003219713;
          break BeforeRet;
          }
          
          h_3003219713 = nextTry_1308622883(h_3003219713, (t_3003219625.data).length - 1);
        }
    };
    result_3003219628 = subInt(-1, h_3003219713);
  };

  return result_3003219628;

}

function hasKey_3003230938(t_3003230941, key_3003230942) {
  var result_3003230943 = false;

    var hc_3003230944 = [0];
    result_3003230943 = (0 <= rawGet_3003219622(t_3003230941, key_3003230942, hc_3003230944, 0));

  return result_3003230943;

}

function hasKey_3003230812(t_3003230815, key_3003230816) {
  var result_3003230817 = false;

    result_3003230817 = hasKey_3003230938(t_3003230815, key_3003230816);

  return result_3003230817;

}

function contains_3003230776(t_3003230779, key_3003230780) {
  var result_3003230781 = false;

  BeforeRet: {
    result_3003230781 = hasKey_3003230812(t_3003230779, key_3003230780);
    break BeforeRet;
  };

  return result_3003230781;

}

function HEX5BHEX5D_3003231197(t_3003231200, key_3003231201) {
  var result_3003231202 = null;
  var result_3003231202_Idx = 0;

    var hcHEX60gensym22_3003231203 = [0];
    var indexHEX60gensym22_3003231210 = rawGet_3003219622(t_3003231200, key_3003231201, hcHEX60gensym22_3003231203, 0);
    if ((0 <= indexHEX60gensym22_3003231210)) {
    result_3003231202 = t_3003231200.data[chckIndx(indexHEX60gensym22_3003231210, 0, (t_3003231200.data).length - 1)]; result_3003231202_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346264(key_3003231201);
    }
    

  return [result_3003231202, result_3003231202_Idx];

}

function HEX5BHEX5D_3003231031(t_3003231034, key_3003231035) {
    var Temporary1;

  var result_3003231036 = null;
  var result_3003231036_Idx = 0;

    result_3003231036 = (Temporary1 = HEX5BHEX5D_3003231197(t_3003231034, key_3003231035), Temporary1)[0]; result_3003231036_Idx = Temporary1[1];

  return [result_3003231036, result_3003231036_Idx];

}

function getItem_3003185222(selfHEX60gensym81_3003185223) {
  var result_3003185224 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym81_3003185223.id, null_2046820612)) {
    selfHEX60gensym81_3003185223.id = nimCopy(selfHEX60gensym81_3003185223.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym81_3003185223.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790254 = nimCopy(null, selfHEX60gensym81_3003185223.id, NTI2046820355);
    var colontmp__2952790255 = 2;
    result_3003185224 = nimCopy(result_3003185224, {Field0: nimCopy(null, colontmp__2952790254, NTI2046820355), Field1: colontmp__2952790255}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003185224;

}

function hash_3087008907(symbol_3087008908) {
  var result_3087008909 = 0;

  BeforeRet: {
    result_3087008909 = hash_2046820596(symbol_3087008908.id);
    break BeforeRet;
  };

  return result_3087008909;

}

function HEX3DHEX3D_3087008510(a_3087008511, b_3087008512) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008513 = false;

  BeforeRet: {
    if (!((a_3087008511.kind == b_3087008512.kind))) {
    result_3087008513 = false;
    break BeforeRet;
    }
    
    switch (a_3087008511.kind) {
    case 0:
      result_3087008513 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008513 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008511;
      if (ConstSet91[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008512;
      if (ConstSet92[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008513 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008511;
      if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008512;
      if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008513 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008511;
      if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008512;
      if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008513 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008511;
      if (ConstSet97[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008512;
      if (ConstSet98[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008513 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008511;
      if (ConstSet99[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008512;
      if (ConstSet100[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008513 = HEX3DHEX3D_3087008302(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008513;

}

function HEX3DHEX3D_3087008910(a_3087008911, b_3087008912) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_3087008913 = false;

  BeforeRet: {
    if ((a_3087008911 == null)) {
    result_3087008913 = (b_3087008912 == null);
    break BeforeRet;
    }
    
    if ((b_3087008912 == null)) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820592(a_3087008911.id, b_3087008912.id))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008911.kind == b_3087008912.kind))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087008911.name, b_3087008912.name))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    switch (a_3087008911.kind) {
    case 1:
      var Temporary4 = a_3087008911;
      if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = b_3087008912;
      if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      if (!HEX3DHEX3D_3087008302(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_3087008911;
        if (ConstSet101[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
        var Temporary7 = b_3087008912;
        if (ConstSet102[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007753)); }
        Temporary3 = HEX3DHEX3D_3087008510(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_3087008911;
        if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007753)); }
        var Temporary9 = b_3087008912;
        if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007753)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_3087008911;
        if (ConstSet105[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007753)); }
        var Temporary11 = b_3087008912;
        if (ConstSet106[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3087007753)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_3087008913 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_3087008911;
      if (ConstSet107[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007753)); }
      var Temporary13 = b_3087008912;
      if (ConstSet108[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI3087007753)); }
      result_3087008913 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_3087008913;

}

function rawGet_3003144965(t_3003144968, key_3003144969, hc_3003144970, hc_3003144970_Idx) {
  var result_3003144971 = 0;

  BeforeRet: {
    hc_3003144970[hc_3003144970_Idx] = hash_3087008907(key_3003144969);
    if ((hc_3003144970[hc_3003144970_Idx] == 0)) {
    hc_3003144970[hc_3003144970_Idx] = 314159265;
    }
    
    if (((t_3003144968.data).length == 0)) {
    result_3003144971 = -1;
    break BeforeRet;
    }
    
    var h_3003145057 = (hc_3003144970[hc_3003144970_Idx] & (t_3003144968.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field0)) break Label2;
          if (((t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field0 == hc_3003144970[hc_3003144970_Idx]) && HEX3DHEX3D_3087008910(t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field1, key_3003144969))) {
          result_3003144971 = h_3003145057;
          break BeforeRet;
          }
          
          h_3003145057 = nextTry_1308622883(h_3003145057, (t_3003144968.data).length - 1);
        }
    };
    result_3003144971 = subInt(-1, h_3003145057);
  };

  return result_3003144971;

}

function hasKey_3003208472(t_3003208475, key_3003208476) {
  var result_3003208477 = false;

    var hc_3003208478 = [0];
    result_3003208477 = (0 <= rawGet_3003144965(t_3003208475, key_3003208476, hc_3003208478, 0));

  return result_3003208477;

}

function contains_3003208466(t_3003208469, key_3003208470) {
  var result_3003208471 = false;

  BeforeRet: {
    result_3003208471 = hasKey_3003208472(t_3003208469, key_3003208470);
    break BeforeRet;
  };

  return result_3003208471;

}

function contains_3003208372(cache_3003208375, key_3003208376) {
  var result_3003208377 = false;

    result_3003208377 = contains_3003208466(cache_3003208375.table, key_3003208376);

  return result_3003208377;

}

function raiseKeyError_3003208745(key_3003208747) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087008904(key_3003208747) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003208651(t_3003208654, key_3003208655) {
  var result_3003208656 = null;
  var result_3003208656_Idx = 0;

    var hcHEX60gensym22_3003208657 = [0];
    var indexHEX60gensym22_3003208664 = rawGet_3003144965(t_3003208654, key_3003208655, hcHEX60gensym22_3003208657, 0);
    if ((0 <= indexHEX60gensym22_3003208664)) {
    result_3003208656 = t_3003208654.data[chckIndx(indexHEX60gensym22_3003208664, 0, (t_3003208654.data).length - 1)]; result_3003208656_Idx = "Field2";
    }
    else {
    raiseKeyError_3003208745(key_3003208655);
    }
    

  return [result_3003208656, result_3003208656_Idx];

}

function remove_3003150862(L_3003150864, n_3003150865) {
    if ((n_3003150865 == L_3003150864.tail)) {
    L_3003150864.tail = n_3003150865.prev;
    }
    
    if ((n_3003150865 == L_3003150864.head)) {
    L_3003150864.head = n_3003150865.next;
    }
    
    if (!((n_3003150865.next == null))) {
    n_3003150865.next.prev = n_3003150865.prev;
    }
    
    if (!((n_3003150865.prev == null))) {
    n_3003150865.prev.next = n_3003150865.next;
    }
    

  
}

function prepend_3003147133(L_3003147135, n_3003147136) {
    n_3003147136.prev = null;
    n_3003147136.next = L_3003147135.head;
    if (!((L_3003147135.head == null))) {
    if (!((L_3003147135.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003147135.head.prev = n_3003147136;
    }
    
    L_3003147135.head = n_3003147136;
    if ((L_3003147135.tail == null)) {
    L_3003147135.tail = n_3003147136;
    }
    

  
}

function HEX5BHEX5D_3003208565(cache_3003208568, key_3003208569) {
    var Temporary1;

  var result_3003208570 = null;

    var node_3003208758 = (Temporary1 = HEX5BHEX5D_3003208651(cache_3003208568.table, key_3003208569), Temporary1)[0][Temporary1[1]];
    result_3003208570 = node_3003208758.value.val;
    remove_3003150862(cache_3003208568.list, node_3003208758);
    prepend_3003147133(cache_3003208568.list, node_3003208758);

  return result_3003208570;

}

function computeSymbolType_3003208828(ctxHEX60gensym108_3003208829, inputHEX60gensym108_3003208830, recordDependencyHEX60gensym108_3003208831) {
    var Temporary3;
    var Temporary5;

  var result_3003208832 = null;

  BeforeRet: {
    var timerHEX60gensym108_3003208833 = startTimer_2466250804();
    ctxHEX60gensym108_3003208829.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_3003208829.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_3003208922 = getItem_3003185222(inputHEX60gensym108_3003208830);
    var keyHEX60gensym108_3003208923 = {Field0: nimCopy(null, itemHEX60gensym108_3003208922, NTI3019898905), Field1: 4};
    if (recordDependencyHEX60gensym108_3003208831) {
    recordDependency_3003175740(ctxHEX60gensym108_3003208829, itemHEX60gensym108_3003208922, 4);
    }
    
    var colorHEX60gensym108_3003208924 = nodeColor_3019901365(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, 0);
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_3003208924, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym108_3003208922));
    }
    
    if ((colorHEX60gensym108_3003208924 == 2)) {
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    if (false) {
    markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
      }
      
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_3003208924 == 0)) {
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    if (false) {
    markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923, true) == 0)) {
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_3003208829.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
      if (false) {
      markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
      }
      
      if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
      }
      
      if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_3003208924 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym108_3003208829.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym108_3003208829.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym108_3003208829.statsSymbolType.time = addInt(ctxHEX60gensym108_3003208829.statsSymbolType.time, elapsed_2466250815(timerHEX60gensym108_3003208833));
    }
  };

  return result_3003208832;

}

function none_3003195234() {
  var result_3003195240 = ({val: null});

  return result_3003195240;

}

function none_3003195231() {
  var result_3003195233 = ({val: null});

    result_3003195233 = nimCopy(result_3003195233, none_3003195234(), NTI3003164608);

  return result_3003195233;

}

function isNone_3003231386(self_3003231388) {
  var result_3003231389 = false;

    result_3003231389 = (self_3003231388.val == null);

  return result_3003231389;

}

function get_3003231429(self_3003231431) {
  var result_3003231432 = null;
  var result_3003231432_Idx = 0;

  BeforeRet: {
    if (isNone_3003231386(self_3003231431)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003231432 = self_3003231431; result_3003231432_Idx = "val";
    break BeforeRet;
  };

  return [result_3003231432, result_3003231432_Idx];

}

function some_3003195218(val_3003195220) {
  var result_3003195221 = ({val: null});

    if (!(!((val_3003195220 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003195221.val = val_3003195220;

  return result_3003195221;

}

function last_2986344706(node_2986344707) {
  var result_2986344708 = null;

  BeforeRet: {
    if ((0 < len_2986344536(node_2986344707))) {
    result_2986344708 = HEX5BHEX5D_2986344532(node_2986344707, subInt(len_2986344536(node_2986344707), 1));
    break BeforeRet;
    }
    
    result_2986344708 = null;
    break BeforeRet;
  };

  return result_2986344708;

}

function isSome_3003231556(self_3003231558) {
  var result_3003231559 = false;

    result_3003231559 = !((self_3003231558.val == null));

  return result_3003231559;

}

function get_3003231547(self_3003231549, otherwise_3003231550) {
    var Temporary1;

  var result_3003231551 = null;

    if (isSome_3003231556(self_3003231549)) {
    Temporary1 = self_3003231549.val;
    }
    else {
    Temporary1 = otherwise_3003231550;
    }
    
    result_3003231551 = Temporary1;

  return result_3003231551;

}

function rawGet_3003135154(t_3003135157, key_3003135158, hc_3003135159, hc_3003135159_Idx) {
  var result_3003135160 = 0;

  BeforeRet: {
    hc_3003135159[hc_3003135159_Idx] = hash_2986346803(key_3003135158);
    if ((hc_3003135159[hc_3003135159_Idx] == 0)) {
    hc_3003135159[hc_3003135159_Idx] = 314159265;
    }
    
    if (((t_3003135157.data).length == 0)) {
    result_3003135160 = -1;
    break BeforeRet;
    }
    
    var h_3003135246 = (hc_3003135159[hc_3003135159_Idx] & (t_3003135157.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field0)) break Label2;
          if (((t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field0 == hc_3003135159[hc_3003135159_Idx]) && (t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field1 == key_3003135158))) {
          result_3003135160 = h_3003135246;
          break BeforeRet;
          }
          
          h_3003135246 = nextTry_1308622883(h_3003135246, (t_3003135157.data).length - 1);
        }
    };
    result_3003135160 = subInt(-1, h_3003135246);
  };

  return result_3003135160;

}

function hasKey_3003201479(t_3003201482, key_3003201483) {
  var result_3003201484 = false;

    var hc_3003201485 = [0];
    result_3003201484 = (0 <= rawGet_3003135154(t_3003201482, key_3003201483, hc_3003201485, 0));

  return result_3003201484;

}

function contains_3003201473(t_3003201476, key_3003201477) {
  var result_3003201478 = false;

  BeforeRet: {
    result_3003201478 = hasKey_3003201479(t_3003201476, key_3003201477);
    break BeforeRet;
  };

  return result_3003201478;

}

function contains_3003201379(cache_3003201382, key_3003201383) {
  var result_3003201384 = false;

    result_3003201384 = contains_3003201473(cache_3003201382.table, key_3003201383);

  return result_3003201384;

}

function isSome_3087009345(self_3087009347) {
  var result_3087009348 = false;

    result_3087009348 = !((self_3087009347.val == null));

  return result_3087009348;

}

function HEX24_3003175100(self_3003175102) {
  var result_3003175103 = [[]];

    if (isSome_3087009345(self_3003175102)) {
    result_3003175103[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3003175111(result_3003175103, 0, self_3003175102.val);
    result_3003175103[0].push.apply(result_3003175103[0], [41]);;
    }
    else {
      result_3003175103[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3003175103[0];

}

function HEX5BHEX5D_3003201658(t_3003201661, key_3003201662) {
  var result_3003201663 = null;
  var result_3003201663_Idx = 0;

    var hcHEX60gensym22_3003201664 = [0];
    var indexHEX60gensym22_3003201671 = rawGet_3003135154(t_3003201661, key_3003201662, hcHEX60gensym22_3003201664, 0);
    if ((0 <= indexHEX60gensym22_3003201671)) {
    result_3003201663 = t_3003201661.data[chckIndx(indexHEX60gensym22_3003201671, 0, (t_3003201661.data).length - 1)]; result_3003201663_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003201662);
    }
    

  return [result_3003201663, result_3003201663_Idx];

}

function remove_3003138601(L_3003138603, n_3003138604) {
    if ((n_3003138604 == L_3003138603.tail)) {
    L_3003138603.tail = n_3003138604.prev;
    }
    
    if ((n_3003138604 == L_3003138603.head)) {
    L_3003138603.head = n_3003138604.next;
    }
    
    if (!((n_3003138604.next == null))) {
    n_3003138604.next.prev = n_3003138604.prev;
    }
    
    if (!((n_3003138604.prev == null))) {
    n_3003138604.prev.next = n_3003138604.next;
    }
    

  
}

function prepend_3003137330(L_3003137332, n_3003137333) {
    n_3003137333.prev = null;
    n_3003137333.next = L_3003137332.head;
    if (!((L_3003137332.head == null))) {
    if (!((L_3003137332.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003137332.head.prev = n_3003137333;
    }
    
    L_3003137332.head = n_3003137333;
    if ((L_3003137332.tail == null)) {
    L_3003137332.tail = n_3003137333;
    }
    

  
}

function HEX5BHEX5D_3003201572(cache_3003201575, key_3003201576) {
    var Temporary1;

  var result_3003201577 = ({val: null});

    var node_3003201764 = (Temporary1 = HEX5BHEX5D_3003201658(cache_3003201575.table, key_3003201576), Temporary1)[0][Temporary1[1]];
    result_3003201577 = nimCopy(result_3003201577, node_3003201764.value.val, NTI3087008904);
    remove_3003138601(cache_3003201575.list, node_3003201764);
    prepend_3003137330(cache_3003201575.list, node_3003201764);

  return result_3003201577;

}

function computeSymbol_3003201856(ctxHEX60gensym100_3003201857, inputHEX60gensym100_3003201858, recordDependencyHEX60gensym100_3003201859) {
    var Temporary3;
    var Temporary5;

  var result_3003201861 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym100_3003201862 = startTimer_2466250804();
    ctxHEX60gensym100_3003201857.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_3003201857.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_3003201951 = getItem_3003175953(inputHEX60gensym100_3003201858);
    var keyHEX60gensym100_3003201952 = {Field0: nimCopy(null, itemHEX60gensym100_3003201951, NTI3019898905), Field1: 2};
    if (recordDependencyHEX60gensym100_3003201859) {
    recordDependency_3003175740(ctxHEX60gensym100_3003201857, itemHEX60gensym100_3003201951, 2);
    }
    
    var colorHEX60gensym100_3003201953 = nodeColor_3019901365(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, 0);
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_3003201953, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym100_3003201951));
    }
    
    if ((colorHEX60gensym100_3003201953 == 2)) {
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    if (false) {
    markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
      }
      
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_3003201953 == 0)) {
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    if (false) {
    markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952, true) == 0)) {
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_3003201857.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
      if (false) {
      markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
      }
      
      if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
      }
      
      if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_3003201953 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym100_3003201857.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym100_3003201857.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym100_3003201857.statsSymbol.time = addInt(ctxHEX60gensym100_3003201857.statsSymbol.time, elapsed_2466250815(timerHEX60gensym100_3003201862));
    }
  };

  return result_3003201861;

}

function isNone_3087009373(self_3087009375) {
  var result_3087009376 = false;

    result_3087009376 = (self_3087009375.val == null);

  return result_3087009376;

}

function get_3087009365(self_3087009367) {
  var result_3087009368 = null;

    if (isNone_3087009373(self_3087009367)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009368 = self_3087009367["val"];

  return result_3087009368;

}

function formatValue_3003231702(result_3003231704, result_3003231704_Idx, value_3003231705, specifier_3003231706) {
    formatValue_721420459(result_3003231704, result_3003231704_Idx, HEX24_3087008904(value_3003231705), specifier_3003231706);

  
}

function mustRehash_3003224224(t_3003224226) {
  var result_3003224227 = false;

    if (!((t_3003224226.counter < (t_3003224226.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003224227 = ((mulInt((t_3003224226.data).length, 2) < mulInt(t_3003224226.counter, 3)) || (subInt((t_3003224226.data).length, t_3003224226.counter) < 4));

  return result_3003224227;

}

function rawInsert_3003224917(t_3003224921, data_3003224922, data_3003224922_Idx, key_3003224923, val_3003224924, hc_3003224925, h_3003224926) {
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field1 = nimCopy(data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field1, key_3003224923, NTI3019898908);
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field2 = nimCopy(null, val_3003224924, NTI3003122000);
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field0 = hc_3003224925;

  
}

function enlarge_3003224481(t_3003224484) {
    var n_3003224487 = [];
    n_3003224487 = new Array(chckRange(mulInt((t_3003224484.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003224484.data).length, 2), 0, 2147483647) ; ++i) { n_3003224487[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3003224484.data; t_3003224484.data = n_3003224487; n_3003224487 = Temporary1;    Label2: {
      var i_3003224585 = 0;
      var colontmp__2952790260 = 0;
      colontmp__2952790260 = (n_3003224487).length - 1;
      var res_2952790261 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790261 <= colontmp__2952790260)) break Label4;
            i_3003224585 = res_2952790261;
            var eh_3003224666 = n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003224666)) {
            var j_3003224670 = (eh_3003224666 & (t_3003224484.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003224484.data[chckIndx(j_3003224670, 0, (t_3003224484.data).length - 1)].Field0)) break Label6;
                  j_3003224670 = nextTry_1308622883(j_3003224670, (t_3003224484.data).length - 1);
                }
            };
            rawInsert_3003224917(t_3003224484, t_3003224484, "data", n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field1, n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field2, eh_3003224666, j_3003224670);
            }
            
            res_2952790261 = addInt(res_2952790261, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003225176(t_3003225179, key_3003225180, hc_3003225181) {
  var result_3003225182 = 0;

  BeforeRet: {
    if (((t_3003225179.data).length == 0)) {
    result_3003225182 = -1;
    break BeforeRet;
    }
    
    var h_3003225267 = (hc_3003225181 & (t_3003225179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field0)) break Label2;
          if (((t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field0 == hc_3003225181) && HEX3DHEX3D_3019901909(t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field1, key_3003225180))) {
          result_3003225182 = h_3003225267;
          break BeforeRet;
          }
          
          h_3003225267 = nextTry_1308622883(h_3003225267, (t_3003225179.data).length - 1);
        }
    };
    result_3003225182 = subInt(-1, h_3003225267);
  };

  return result_3003225182;

}

function HEX5BHEX5DHEX3D_3003223956(t_3003223959, key_3003223960, val_3003223961) {
    if (((t_3003223959.data).length == 0)) {
    var correctSizeHEX60gensym566_3003224044 = slotsNeeded_1308622891(32);
    t_3003223959.counter = 0;
    t_3003223959.data = new Array(chckRange(correctSizeHEX60gensym566_3003224044, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym566_3003224044, 0, 2147483647) ; ++i) { t_3003223959.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3003224049 = [0];
    var index_3003224056 = rawGet_3003221620(t_3003223959, key_3003223960, hc_3003224049, 0);
    if ((0 <= index_3003224056)) {
    t_3003223959.data[chckIndx(index_3003224056, 0, (t_3003223959.data).length - 1)].Field2 = nimCopy(null, val_3003223961, NTI3003122000);
    }
    else {
      if (((t_3003223959.data).length == 0)) {
      var correctSizeHEX60gensym569_3003224219 = slotsNeeded_1308622891(32);
      t_3003223959.counter = 0;
      t_3003223959.data = new Array(chckRange(correctSizeHEX60gensym569_3003224219, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym569_3003224219, 0, 2147483647) ; ++i) { t_3003223959.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3003224224(t_3003223959)) {
      enlarge_3003224481(t_3003223959);
      index_3003224056 = rawGetKnownHC_3003225176(t_3003223959, key_3003223960, hc_3003224049[0]);
      }
      
      index_3003224056 = subInt(-1, index_3003224056);
      rawInsert_3003224917(t_3003223959, t_3003223959, "data", key_3003223960, val_3003223961, hc_3003224049[0], index_3003224056);
      t_3003223959.counter = addInt(t_3003223959.counter, 1);
    }
    

  
}

function hasKey_3003225625(t_3003225628, key_3003225629) {
  var result_3003225630 = false;

    var hc_3003225631 = [0];
    result_3003225630 = (0 <= rawGet_3003222268(t_3003225628, key_3003225629, hc_3003225631, 0));

  return result_3003225630;

}

function contains_3003225619(t_3003225622, key_3003225623) {
  var result_3003225624 = false;

  BeforeRet: {
    result_3003225624 = hasKey_3003225625(t_3003225622, key_3003225623);
    break BeforeRet;
  };

  return result_3003225624;

}

function mustRehash_3003225969(t_3003225971) {
  var result_3003225972 = false;

    if (!((t_3003225971.counter < (t_3003225971.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003225972 = ((mulInt((t_3003225971.data).length, 2) < mulInt(t_3003225971.counter, 3)) || (subInt((t_3003225971.data).length, t_3003225971.counter) < 4));

  return result_3003225972;

}

function rawInsert_3003226662(t_3003226666, data_3003226667, data_3003226667_Idx, key_3003226668, val_3003226669, hc_3003226670, h_3003226671) {
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field1 = nimCopy(data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field1, key_3003226668, NTI2046820355);
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field2 = nimCopy(data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field2, val_3003226669, NTI3003121668);
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field0 = hc_3003226670;

  
}

function enlarge_3003226226(t_3003226229) {
    var n_3003226232 = [];
    n_3003226232 = new Array(chckRange(mulInt((t_3003226229.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003226229.data).length, 2), 0, 2147483647) ; ++i) { n_3003226232[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3003226229.data; t_3003226229.data = n_3003226232; n_3003226232 = Temporary1;    Label2: {
      var i_3003226330 = 0;
      var colontmp__2952790266 = 0;
      colontmp__2952790266 = (n_3003226232).length - 1;
      var res_2952790267 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790267 <= colontmp__2952790266)) break Label4;
            i_3003226330 = res_2952790267;
            var eh_3003226411 = n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003226411)) {
            var j_3003226415 = (eh_3003226411 & (t_3003226229.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003226229.data[chckIndx(j_3003226415, 0, (t_3003226229.data).length - 1)].Field0)) break Label6;
                  j_3003226415 = nextTry_1308622883(j_3003226415, (t_3003226229.data).length - 1);
                }
            };
            rawInsert_3003226662(t_3003226229, t_3003226229, "data", n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field1, n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field2, eh_3003226411, j_3003226415);
            }
            
            res_2952790267 = addInt(res_2952790267, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003226921(t_3003226924, key_3003226925, hc_3003226926) {
  var result_3003226927 = 0;

  BeforeRet: {
    if (((t_3003226924.data).length == 0)) {
    result_3003226927 = -1;
    break BeforeRet;
    }
    
    var h_3003227012 = (hc_3003226926 & (t_3003226924.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field0)) break Label2;
          if (((t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field0 == hc_3003226926) && HEX3DHEX3D_2046820592(t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field1, key_3003226925))) {
          result_3003226927 = h_3003227012;
          break BeforeRet;
          }
          
          h_3003227012 = nextTry_1308622883(h_3003227012, (t_3003226924.data).length - 1);
        }
    };
    result_3003226927 = subInt(-1, h_3003227012);
  };

  return result_3003226927;

}

function HEX5BHEX5DHEX3D_3003225701(t_3003225704, key_3003225705, val_3003225706) {
    if (((t_3003225704.data).length == 0)) {
    var correctSizeHEX60gensym578_3003225789 = slotsNeeded_1308622891(32);
    t_3003225704.counter = 0;
    t_3003225704.data = new Array(chckRange(correctSizeHEX60gensym578_3003225789, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym578_3003225789, 0, 2147483647) ; ++i) { t_3003225704.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3003225794 = [0];
    var index_3003225801 = rawGet_3003222268(t_3003225704, key_3003225705, hc_3003225794, 0);
    if ((0 <= index_3003225801)) {
    t_3003225704.data[chckIndx(index_3003225801, 0, (t_3003225704.data).length - 1)].Field2 = nimCopy(t_3003225704.data[chckIndx(index_3003225801, 0, (t_3003225704.data).length - 1)].Field2, val_3003225706, NTI3003121668);
    }
    else {
      if (((t_3003225704.data).length == 0)) {
      var correctSizeHEX60gensym581_3003225964 = slotsNeeded_1308622891(32);
      t_3003225704.counter = 0;
      t_3003225704.data = new Array(chckRange(correctSizeHEX60gensym581_3003225964, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym581_3003225964, 0, 2147483647) ; ++i) { t_3003225704.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3003225969(t_3003225704)) {
      enlarge_3003226226(t_3003225704);
      index_3003225801 = rawGetKnownHC_3003226921(t_3003225704, key_3003225705, hc_3003225794[0]);
      }
      
      index_3003225801 = subInt(-1, index_3003225801);
      rawInsert_3003226662(t_3003225704, t_3003225704, "data", key_3003225705, val_3003225706, hc_3003225794[0], index_3003225801);
      t_3003225704.counter = addInt(t_3003225704.counter, 1);
    }
    

  
}

function hasKey_3003227441(t_3003227444, key_3003227445) {
  var result_3003227446 = false;

    var hc_3003227447 = [0];
    result_3003227446 = (0 <= rawGet_3003222775(t_3003227444, key_3003227445, hc_3003227447, 0));

  return result_3003227446;

}

function contains_3003227435(t_3003227438, key_3003227439) {
  var result_3003227440 = false;

  BeforeRet: {
    result_3003227440 = hasKey_3003227441(t_3003227438, key_3003227439);
    break BeforeRet;
  };

  return result_3003227440;

}

function mustRehash_3003227874(t_3003227876) {
  var result_3003227877 = false;

    if (!((t_3003227876.counter < (t_3003227876.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003227877 = ((mulInt((t_3003227876.data).length, 2) < mulInt(t_3003227876.counter, 3)) || (subInt((t_3003227876.data).length, t_3003227876.counter) < 4));

  return result_3003227877;

}

function rawInsert_3003228567(t_3003228571, data_3003228572, data_3003228572_Idx, key_3003228573, val_3003228574, hc_3003228575, h_3003228576) {
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field1 = nimCopy(data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field1, key_3003228573, NTI3019898908);
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field2 = nimCopy(null, val_3003228574, NTI3003121672);
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field0 = hc_3003228575;

  
}

function enlarge_3003228131(t_3003228134) {
    var n_3003228137 = [];
    n_3003228137 = new Array(chckRange(mulInt((t_3003228134.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003228134.data).length, 2), 0, 2147483647) ; ++i) { n_3003228137[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3003228134.data; t_3003228134.data = n_3003228137; n_3003228137 = Temporary1;    Label2: {
      var i_3003228235 = 0;
      var colontmp__2952790272 = 0;
      colontmp__2952790272 = (n_3003228137).length - 1;
      var res_2952790273 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790273 <= colontmp__2952790272)) break Label4;
            i_3003228235 = res_2952790273;
            var eh_3003228316 = n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003228316)) {
            var j_3003228320 = (eh_3003228316 & (t_3003228134.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003228134.data[chckIndx(j_3003228320, 0, (t_3003228134.data).length - 1)].Field0)) break Label6;
                  j_3003228320 = nextTry_1308622883(j_3003228320, (t_3003228134.data).length - 1);
                }
            };
            rawInsert_3003228567(t_3003228134, t_3003228134, "data", n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field1, n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field2, eh_3003228316, j_3003228320);
            }
            
            res_2952790273 = addInt(res_2952790273, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003228817(t_3003228820, key_3003228821, hc_3003228822) {
  var result_3003228823 = 0;

  BeforeRet: {
    if (((t_3003228820.data).length == 0)) {
    result_3003228823 = -1;
    break BeforeRet;
    }
    
    var h_3003228908 = (hc_3003228822 & (t_3003228820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field0)) break Label2;
          if (((t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field0 == hc_3003228822) && HEX3DHEX3D_3019901909(t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field1, key_3003228821))) {
          result_3003228823 = h_3003228908;
          break BeforeRet;
          }
          
          h_3003228908 = nextTry_1308622883(h_3003228908, (t_3003228820.data).length - 1);
        }
    };
    result_3003228823 = subInt(-1, h_3003228908);
  };

  return result_3003228823;

}

function HEX5BHEX5DHEX3D_3003227606(t_3003227609, key_3003227610, val_3003227611) {
    if (((t_3003227609.data).length == 0)) {
    var correctSizeHEX60gensym590_3003227694 = slotsNeeded_1308622891(32);
    t_3003227609.counter = 0;
    t_3003227609.data = new Array(chckRange(correctSizeHEX60gensym590_3003227694, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym590_3003227694, 0, 2147483647) ; ++i) { t_3003227609.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3003227699 = [0];
    var index_3003227706 = rawGet_3003222775(t_3003227609, key_3003227610, hc_3003227699, 0);
    if ((0 <= index_3003227706)) {
    t_3003227609.data[chckIndx(index_3003227706, 0, (t_3003227609.data).length - 1)].Field2 = nimCopy(null, val_3003227611, NTI3003121672);
    }
    else {
      if (((t_3003227609.data).length == 0)) {
      var correctSizeHEX60gensym593_3003227869 = slotsNeeded_1308622891(32);
      t_3003227609.counter = 0;
      t_3003227609.data = new Array(chckRange(correctSizeHEX60gensym593_3003227869, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym593_3003227869, 0, 2147483647) ; ++i) { t_3003227609.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3003227874(t_3003227609)) {
      enlarge_3003228131(t_3003227609);
      index_3003227706 = rawGetKnownHC_3003228817(t_3003227609, key_3003227610, hc_3003227699[0]);
      }
      
      index_3003227706 = subInt(-1, index_3003227706);
      rawInsert_3003228567(t_3003227609, t_3003227609, "data", key_3003227610, val_3003227611, hc_3003227699[0], index_3003227706);
      t_3003227609.counter = addInt(t_3003227609.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3003229339(t_3003229342, key_3003229343) {
  var result_3003229344 = null;
  var result_3003229344_Idx = 0;

    var hcHEX60gensym22_3003229345 = [0];
    var indexHEX60gensym22_3003229352 = rawGet_3003222775(t_3003229342, key_3003229343, hcHEX60gensym22_3003229345, 0);
    if ((0 <= indexHEX60gensym22_3003229352)) {
    result_3003229344 = t_3003229342.data[chckIndx(indexHEX60gensym22_3003229352, 0, (t_3003229342.data).length - 1)]; result_3003229344_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3003229343);
    }
    

  return [result_3003229344, result_3003229344_Idx];

}

function del_3003229512(t_3003229515, key_3003229516) {
    var hc_3003229517 = [0];
    var i_3003229524 = rawGet_3003221620(t_3003229515, key_3003229516, hc_3003229517, 0);
    var mskHEX60gensym36_3003229528 = (t_3003229515.data).length - 1;
    if ((0 <= i_3003229524)) {
    t_3003229515.counter = subInt(t_3003229515.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003229535 = i_3003229524;
            var rHEX60gensym36_3003229536 = jHEX60gensym36_3003229535;
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0 = 0;
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field1 = nimCopy(t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field2 = nimCopy(null, [], NTI3003122000);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003229524 = (addInt(i_3003229524, 1) & mskHEX60gensym36_3003229528);
                  if (isEmpty_1308622877(t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003229536 = (t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0 & mskHEX60gensym36_3003229528);
                  if (!(((((rHEX60gensym36_3003229536 <= i_3003229524) && (jHEX60gensym36_3003229535 < rHEX60gensym36_3003229536)) || ((jHEX60gensym36_3003229535 < rHEX60gensym36_3003229536) && (i_3003229524 < jHEX60gensym36_3003229535))) || ((i_3003229524 < jHEX60gensym36_3003229535) && (rHEX60gensym36_3003229536 <= i_3003229524))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003229515.data[chckIndx(jHEX60gensym36_3003229535, 0, (t_3003229515.data).length - 1)] = nimCopy(t_3003229515.data[chckIndx(jHEX60gensym36_3003229535, 0, (t_3003229515.data).length - 1)], t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)], NTI3003122012);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3003122483(ctx_3003122484, node_3003122485) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_3003221517 = null;

  BeforeRet: {
    var logQueryHEX60gensym555_3003221519 = (ctx_3003122484.enableLogging || ctx_3003122484.enableQueryLogging);
    if (logQueryHEX60gensym555_3003221519) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym555_3003221519) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122485) || []));
    }
    
    try {
    var key_3003221530 = nimCopy(null, getTypeKey_3003194679(ctx_3003122484, getItem_3003175953(node_3003122485)), NTI3019898908);
    if (contains_3003221607(ctx_3003122484.diagnosticsPerQuery, key_3003221530)) {
    Label3: {
      var id_3003222180 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2952790111 = [];
      colontmp__2952790111 = (Temporary4 = HEX5BHEX5D_3003222052(ctx_3003122484.diagnosticsPerQuery, key_3003221530), Temporary4)[0][Temporary4[1]];
      var i_2952790113 = 0;
      var L_2952790114 = (colontmp__2952790111).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2952790113 < L_2952790114)) break Label6;
            id_3003222180 = colontmp__2952790111[chckIndx(i_2952790113, 0, (colontmp__2952790111).length - 1)];
            del_3003222769(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003222180).queries, key_3003221530);
            i_2952790113 = addInt(i_2952790113, 1);
            if (!(((colontmp__2952790111).length == L_2952790114))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_3003223883 = [];
    var ids_3003223888 = [];
    try {
    Label8: {
      var expr_3003230261 = node_3003122485;
      var pos_3003230262 = 0;
      var _ = pos_3003230262;
      if ((expr_3003230261.kind == 0)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3003122485.text);
      result_3003221517 = intType_3087008158();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3003230261.kind == 3)) {
      result_3003221517 = stringType_3087008160();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 12)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 11)) {
      if ((len_2986344536(node_3003122485) < 3)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var params_3003230285 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      recordDependency_3003175740(ctx_3003122484, getItem_3003175953(params_3003230285), -1);
      var returnTypeNode_3003230286 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      var paramTypes_3003230291 = [];
      var ok_3003230292 = true;
      Label10: {
        var param_3003230296 = null;
        var i_2952790124 = 0;
        var L_2952790125 = (params_3003230285.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2952790124 < L_2952790125)) break Label12;
              param_3003230296 = params_3003230285.children[chckIndx(i_2952790124, 0, (params_3003230285.children).length - 1)];
              Label13: {
                var paramType_3003230297 = computeType_3003195250(ctx_3003122484, param_3003230296, true);
                if ((paramType_3003230297.kind == 0)) {
                ok_3003230292 = false;
                break Label13;
                }
                
                paramTypes_3003230291.push(paramType_3003230297);;
              };
              i_2952790124 = addInt(i_2952790124, 1);
              if (!(((params_3003230285.children).length == L_2952790125))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3003230306 = computeType_3003195250(ctx_3003122484, returnTypeNode_3003230286, true);
      if ((returnTypeType_3003230306.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3003230306.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_3003230286.id, NTI2046820355);
      ids_3003223888.push(Temporary14);;
      var fmtRes_3003230323 = [mnewString(0)];
      fmtRes_3003230323[0].push.apply(fmtRes_3003230323[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230323, 0, returnTypeType_3003230306, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230323[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var returnTypeValue_3003230333 = computeValue_3003198726(ctx_3003122484, returnTypeNode_3003230286, true);
      if ((returnTypeValue_3003230333.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3003230333.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3003230286.id, NTI2046820355);
      ids_3003223888.push(Temporary15);;
      var fmtRes_3003230350 = [mnewString(0)];
      fmtRes_3003230350[0].push.apply(fmtRes_3003230350[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230350, 0, returnTypeValue_3003230333, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230350[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_3003230333;
      if (ConstSet67[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      var returnType_3003230360 = Temporary16.typ;
      result_3003221517 = newFunctionType_3087008162(paramTypes_3003230291, returnType_3003230360);
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 8)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      var Temporary17 = nimCopy(null, node_3003122485.id, NTI2046820355);
      ids_3003223888.push(Temporary17);;
      var fmtRes_3003230373 = mnewString(0);
      fmtRes_3003230373.push.apply(fmtRes_3003230373, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230373, NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var function_3003230378 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var functionType_3003230379 = computeType_3003195250(ctx_3003122484, function_3003230378, true);
      if ((functionType_3003230379.kind == 0)) {
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3003230379.kind == 4))) {
      var Temporary18 = nimCopy(null, function_3003230378.id, NTI2046820355);
      ids_3003223888.push(Temporary18);;
      var fmtRes_3003230396 = [mnewString(0)];
      fmtRes_3003230396[0].push.apply(fmtRes_3003230396[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3003230324(fmtRes_3003230396, 0, functionType_3003230379, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230396[0], NTI33554449)});;
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3003230406 = subInt(len_2986344536(node_3003122485), 1);
      var Temporary21 = functionType_3003230379;
      if (ConstSet68[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI3087007747)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_3003230379;
        if (ConstSet75[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
        var Temporary23 = functionType_3003230379;
        if (ConstSet76[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        Temporary20 = HEX3DHEX3D_3087008302((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_3087008177(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_3003230379;
        if (ConstSet77[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007747)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_3003230406);      }      var isValidOpenAnyCall_3003230416 = Temporary19;
        var Temporary27 = functionType_3003230379;
        if (ConstSet78[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007747)); }
        if (!!((numArgs_3003230406 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_3003230416);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_3003122485.id, NTI2046820355);
      ids_3003223888.push(Temporary28);;
      var fmtRes_3003230428 = [mnewString(0)];
      fmtRes_3003230428[0].push.apply(fmtRes_3003230428[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_3003230379;
      if (ConstSet79[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI3087007747)); }
      formatValue_2701131945(fmtRes_3003230428, 0, (Temporary29.paramTypes).length, []);
      fmtRes_3003230428[0].push.apply(fmtRes_3003230428[0], [32,103,111,116,32]);;
      formatValue_2701131945(fmtRes_3003230428, 0, numArgs_3003230406, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230428[0], NTI33554449)});;
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3003230446 = true;
      Label30: {
        var i_3003230451 = 0;
        var res_2952790129 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2952790129 <= numArgs_3003230406)) break Label32;
              i_3003230451 = res_2952790129;
              Label33: {
                var argType_3003230452 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, i_3003230451), true);
                if ((argType_3003230452.kind == 0)) {
                allArgsOk_3003230446 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_3003230416) Temporary34 = false; else {                    var Temporary35 = functionType_3003230379;
                    if (ConstSet80[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI3087007747)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_3003230451);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_3003230379;
                  if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008302(argType_3003230452, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_3003230451, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2986344532(node_3003122485, i_3003230451).id, NTI2046820355);
                ids_3003223888.push(Temporary38);;
                var fmtRes_3003230468 = [mnewString(0)];
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2701131945(fmtRes_3003230468, 0, i_3003230451, []);
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_3003230379;
                if (ConstSet82[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI3087007747)); }
                formatValue_3003230324(fmtRes_3003230468, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_3003230451, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [32,103,111,116,32]);;
                formatValue_3003230324(fmtRes_3003230468, 0, argType_3003230452, []);
                diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230468[0], NTI33554449)});;
                allArgsOk_3003230446 = false;
                }
                
              };
              res_2952790129 = addInt(res_2952790129, 1);
            }
        };
      };
      if (!(allArgsOk_3003230446)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_3003230379;
      if (ConstSet83[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI3087007747)); }
      result_3003221517 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 4)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      result_3003221517 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 5)) {
      if ((len_2986344536(node_3003122485) < 1)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNode_3003230496 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var typ_3003230497 = voidType_3087008156();
      if (!((typeNode_3003230496.kind == 0))) {
      var typeNodeType_3003230502 = computeType_3003195250(ctx_3003122484, typeNode_3003230496, true);
      if ((typeNodeType_3003230502.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3003230502.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_3003230496.id, NTI2046820355);
      ids_3003223888.push(Temporary42);;
      var fmtRes_3003230519 = [mnewString(0)];
      fmtRes_3003230519[0].push.apply(fmtRes_3003230519[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230519, 0, typeNodeType_3003230502, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230519[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNodeValue_3003230529 = computeValue_3003198726(ctx_3003122484, typeNode_3003230496, true);
      if ((typeNodeValue_3003230529.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3003230529.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3003230496.id, NTI2046820355);
      ids_3003223888.push(Temporary43);;
      var fmtRes_3003230546 = [mnewString(0)];
      fmtRes_3003230546[0].push.apply(fmtRes_3003230546[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230546, 0, typeNodeValue_3003230529, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230546[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_3003230529;
      if (ConstSet84[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI3087007750)); }
      typ_3003230497 = Temporary44.typ;
      }
      
      if ((2 <= len_2986344536(node_3003122485))) {
      var valueNode_3003230556 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      if (!((valueNode_3003230556.kind == 0))) {
      var valueNodeType_3003230561 = computeType_3003195250(ctx_3003122484, valueNode_3003230556, true);
      if ((valueNodeType_3003230561.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((typ_3003230497.kind == 1)) {
      typ_3003230497 = valueNodeType_3003230561;
      }
      
      if (!(HEX3DHEX3D_3087008302(valueNodeType_3003230561, typ_3003230497))) {
      var Temporary45 = nimCopy(null, valueNode_3003230556.id, NTI2046820355);
      ids_3003223888.push(Temporary45);;
      var fmtRes_3003230578 = [mnewString(0)];
      fmtRes_3003230578[0].push.apply(fmtRes_3003230578[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3003230324(fmtRes_3003230578, 0, typ_3003230497, []);
      fmtRes_3003230578[0].push.apply(fmtRes_3003230578[0], [44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230578, 0, valueNodeType_3003230561, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230578[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3003221517 = typ_3003230497;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 6)) {
      if ((len_2986344536(node_3003122485) < 1)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNode_3003230597 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var typ_3003230598 = voidType_3087008156();
      if (!((typeNode_3003230597.kind == 0))) {
      var typeNodeType_3003230603 = computeType_3003195250(ctx_3003122484, typeNode_3003230597, true);
      if ((typeNodeType_3003230603.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3003230603.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_3003230597.id, NTI2046820355);
      ids_3003223888.push(Temporary46);;
      var fmtRes_3003230620 = [mnewString(0)];
      fmtRes_3003230620[0].push.apply(fmtRes_3003230620[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230620, 0, typeNodeType_3003230603, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230620[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNodeValue_3003230630 = computeValue_3003198726(ctx_3003122484, typeNode_3003230597, true);
      if ((typeNodeValue_3003230630.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3003230630.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3003230597.id, NTI2046820355);
      ids_3003223888.push(Temporary47);;
      var fmtRes_3003230647 = [mnewString(0)];
      fmtRes_3003230647[0].push.apply(fmtRes_3003230647[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230647, 0, typeNodeValue_3003230630, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230647[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_3003230630;
      if (ConstSet85[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI3087007750)); }
      typ_3003230598 = Temporary48.typ;
      }
      
      if ((2 <= len_2986344536(node_3003122485))) {
      var valueNode_3003230657 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      if (!((valueNode_3003230657.kind == 0))) {
      var valueNodeType_3003230662 = computeType_3003195250(ctx_3003122484, valueNode_3003230657, true);
      if ((valueNodeType_3003230662.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((typ_3003230598.kind == 1)) {
      typ_3003230598 = valueNodeType_3003230662;
      }
      
      if (!(HEX3DHEX3D_3087008302(valueNodeType_3003230662, typ_3003230598))) {
      var Temporary49 = nimCopy(null, valueNode_3003230657.id, NTI2046820355);
      ids_3003223888.push(Temporary49);;
      var fmtRes_3003230679 = [mnewString(0)];
      fmtRes_3003230679[0].push.apply(fmtRes_3003230679[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3003230324(fmtRes_3003230679, 0, typ_3003230598, []);
      fmtRes_3003230679[0].push.apply(fmtRes_3003230679[0], [44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230679, 0, valueNodeType_3003230662, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230679[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3003221517 = typ_3003230598;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 1)) {
      var id_3003230698 = nimCopy(null, node_3003122485.reff, NTI2046820355);
      var symbols_3003230699 = computeSymbols_3003205356(ctx_3003122484, node_3003122485, true);
      if (contains_3003230776(symbols_3003230699, id_3003230698)) {
      var symbol_3003231303 = (Temporary50 = HEX5BHEX5D_3003231031(symbols_3003230699, id_3003230698), Temporary50)[0][Temporary50[1]];
      result_3003221517 = computeSymbolType_3003208828(ctx_3003122484, symbol_3003231303, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_3003122485.id, NTI2046820355);
      ids_3003223888.push(Temporary51);;
      var fmtRes_3003231312 = [mnewString(0)];
      fmtRes_3003231312[0].push.apply(fmtRes_3003231312[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3019899100(fmtRes_3003231312, 0, id_3003230698, []);
      fmtRes_3003231312[0].push.apply(fmtRes_3003231312[0], [39]);;
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231312[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 7)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      
      var lastType_3003231326 = null;
      Label52: {
        var child_3003231330 = null;
        var i_2952790132 = 0;
        var L_2952790133 = (node_3003122485.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2952790132 < L_2952790133)) break Label54;
              child_3003231330 = node_3003122485.children[chckIndx(i_2952790132, 0, (node_3003122485.children).length - 1)];
              lastType_3003231326 = computeType_3003195250(ctx_3003122484, child_3003231330, true);
              if ((lastType_3003231326.kind == 0)) {
              result_3003221517 = errorType_3087008120();
              break BeforeRet;
              }
              
              i_2952790132 = addInt(i_2952790132, 1);
              if (!(((node_3003122485.children).length == L_2952790133))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3003221517 = lastType_3003231326;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 9)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var ok_3003231339 = true;
      var commonType_3003231342 = [none_3003195231()];
      var index_3003231343 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_3003231343, 1) < len_2986344536(node_3003122485))) break Label56;
            Label57: {
              try {
              var condition_3003231348 = HEX5BHEX5D_2986344532(node_3003122485, index_3003231343);
              var trueCase_3003231349 = HEX5BHEX5D_2986344532(node_3003122485, addInt(index_3003231343, 1));
              var conditionType_3003231350 = computeType_3003195250(ctx_3003122484, condition_3003231348, true);
              if ((conditionType_3003231350.kind == 0)) {
              ok_3003231339 = false;
              }
              else {
              if (!((conditionType_3003231350.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_3003231348.id, NTI2046820355);
              ids_3003223888.push(Temporary59);;
              var fmtRes_3003231367 = [mnewString(0)];
              fmtRes_3003231367[0].push.apply(fmtRes_3003231367[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3003230324(fmtRes_3003231367, 0, conditionType_3003231350, []);
              diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231367[0], NTI33554449)});;
              ok_3003231339 = false;
              }
              }
              var trueCaseType_3003231377 = computeType_3003195250(ctx_3003122484, trueCase_3003231349, true);
              if ((trueCaseType_3003231377.kind == 0)) {
              ok_3003231339 = false;
              break Label57;
              }
              
              if ((isNone_3003231386(commonType_3003231342[0]) || HEX3DHEX3D_3087008302(trueCaseType_3003231377, (Temporary60 = get_3003231429(commonType_3003231342[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(trueCaseType_3003231377), NTI3003164608);
              }
              else {
                commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(voidType_3087008156()), NTI3003164608);
              }
              
              } finally {
              index_3003231343 = addInt(index_3003231343, 2);
              }
            };
          }
      };
      if (!((modInt(len_2986344536(node_3003122485), 2) == 0))) {
      var falseCaseType_3003231456 = computeType_3003195250(ctx_3003122484, last_2986344706(node_3003122485), true);
      if ((falseCaseType_3003231456.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((isNone_3003231386(commonType_3003231342[0]) || HEX3DHEX3D_3087008302(falseCaseType_3003231456, (Temporary61 = get_3003231429(commonType_3003231342[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(falseCaseType_3003231456), NTI3003164608);
      }
      else {
        commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(voidType_3087008156()), NTI3003164608);
      }
      
      }
      
      if (!(ok_3003231339)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      result_3003221517 = get_3003231547(commonType_3003231342[0], voidType_3087008156());
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 10)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var ok_3003231568 = true;
      var conditionType_3003231569 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 0), true);
      if ((conditionType_3003231569.kind == 0)) {
      ok_3003231568 = false;
      }
      else {
      if (!((conditionType_3003231569.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2986344532(node_3003122485, 0).id, NTI2046820355);
      ids_3003223888.push(Temporary62);;
      var fmtRes_3003231586 = [mnewString(0)];
      fmtRes_3003231586[0].push.apply(fmtRes_3003231586[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3003230324(fmtRes_3003231586, 0, conditionType_3003231569, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231586[0], NTI33554449)});;
      ok_3003231568 = false;
      }
      }
      var bodyType_3003231596 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 1), true);
      if ((bodyType_3003231596.kind == 0)) {
      ok_3003231568 = false;
      }
      
      if (ok_3003231568) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
        result_3003221517 = errorType_3087008120();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3003230261.kind == 13)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var target_3003231605 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var value_3003231606 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      var targetType_3003231607 = computeType_3003195250(ctx_3003122484, target_3003231605, true);
      if ((targetType_3003231607.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var valueType_3003231612 = computeType_3003195250(ctx_3003122484, value_3003231606, true);
      if ((valueType_3003231612.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008302(targetType_3003231607, valueType_3003231612))) {
      var Temporary63 = nimCopy(null, value_3003231606.id, NTI2046820355);
      ids_3003223888.push(Temporary63);;
      var fmtRes_3003231625 = [mnewString(0)];
      fmtRes_3003231625[0].push.apply(fmtRes_3003231625[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3003230324(fmtRes_3003231625, 0, valueType_3003231612, []);
      fmtRes_3003231625[0].push.apply(fmtRes_3003231625[0], [32,116,111,32]);;
      formatValue_3003230324(fmtRes_3003231625, 0, targetType_3003231607, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231625[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
        var oHEX60gensym687_3003231642 = computeSymbol_3003201856(ctx_3003122484, target_3003231605, true);
        if (!isSome_3087009345(oHEX60gensym687_3003231642)) Temporary64 = false; else {          var sym_3003231688 = get_3087009365(oHEX60gensym687_3003231642);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_3003231688.kind == 1)) {
      var Temporary65 = nimCopy(null, target_3003231605.id, NTI2046820355);
      ids_3003223888.push(Temporary65);;
      var fmtRes_3003231701 = [mnewString(0)];
      fmtRes_3003231701[0].push.apply(fmtRes_3003231701[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3003231702(fmtRes_3003231701, 0, sym_3003231688, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231701[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((sym_3003231688.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_3003231688;
        if (ConstSet109[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI3087007753)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_3003231605.id, NTI2046820355);
      ids_3003223888.push(Temporary67);;
      var fmtRes_3003231732 = [mnewString(0)];
      fmtRes_3003231732[0].push.apply(fmtRes_3003231732[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3003231702(fmtRes_3003231732, 0, sym_3003231688, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231732[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
        result_3003221517 = errorType_3087008120();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_3003223883).length)) {
    HEX5BHEX5DHEX3D_3003223956(ctx_3003122484.diagnosticsPerQuery, key_3003221530, ids_3003223888);
    Label68: {
      var i_3003225540 = 0;
      var colontmp__2952790117 = 0;
      colontmp__2952790117 = (ids_3003223888).length - 1;
      var res_2952790118 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2952790118 <= colontmp__2952790117)) break Label70;
            i_3003225540 = res_2952790118;
            var id_3003225541 = nimCopy(null, ids_3003223888[chckIndx(i_3003225540, 0, (ids_3003223888).length - 1)], NTI2046820355);
            var diag_3003225542 = nimCopy(null, diagnostics_3003223883[chckIndx(i_3003225540, 0, (diagnostics_3003223883).length - 1)], NTI3003121667);
            if (!(contains_3003225619(ctx_3003122484.diagnosticsPerNode, id_3003225541))) {
            HEX5BHEX5DHEX3D_3003225701(ctx_3003122484.diagnosticsPerNode, id_3003225541, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3003227435(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530))) {
            HEX5BHEX5DHEX3D_3003227606(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530, []);
            }
            
            var Temporary72 = nimCopy(null, diag_3003225542, NTI3003121667);
            (Temporary71 = HEX5BHEX5D_3003229339(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2952790118 = addInt(res_2952790118, 1);
          }
      };
    };
    }
    else {
    del_3003229512(ctx_3003122484.diagnosticsPerQuery, key_3003221530);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym555_3003221519 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008180(result_3003221517) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym555_3003221519) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221517;

}

function getOrDefault_3003124073(t_3003124076, key_3003124077, default_3003124078) {
    var Temporary1;

  var result_3003124079 = null;

    var hcHEX60gensym128_3003124082 = [0];
    var indexHEX60gensym128_3003124441 = rawGet_3003124083(t_3003124076, key_3003124077, hcHEX60gensym128_3003124082, 0);
    if ((0 <= indexHEX60gensym128_3003124441)) {
    Temporary1 = t_3003124076.data[chckIndx(indexHEX60gensym128_3003124441, 0, (t_3003124076.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003124078;
    }
    
    result_3003124079 = Temporary1;

  return result_3003124079;

}

function newDoublyLinkedNode_3003124566(value_3003124568) {
  var result_3003124569 = null;

    result_3003124569 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003124569.value = nimCopy(result_3003124569.value, value_3003124568, NTI3003122029);

  return result_3003124569;

}

function mustRehash_3003124916(t_3003124918) {
  var result_3003124919 = false;

    if (!((t_3003124918.counter < (t_3003124918.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003124919 = ((mulInt((t_3003124918.data).length, 2) < mulInt(t_3003124918.counter, 3)) || (subInt((t_3003124918.data).length, t_3003124918.counter) < 4));

  return result_3003124919;

}

function rawInsert_3003125609(t_3003125613, data_3003125614, data_3003125614_Idx, key_3003125615, val_3003125616, hc_3003125617, h_3003125618) {
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field1 = key_3003125615;
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field2 = val_3003125616;
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field0 = hc_3003125617;

  
}

function enlarge_3003125173(t_3003125176) {
    var n_3003125179 = [];
    n_3003125179 = new Array(chckRange(mulInt((t_3003125176.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003125176.data).length, 2), 0, 2147483647) ; ++i) { n_3003125179[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003125176.data; t_3003125176.data = n_3003125179; n_3003125179 = Temporary1;    Label2: {
      var i_3003125277 = 0;
      var colontmp__2952790280 = 0;
      colontmp__2952790280 = (n_3003125179).length - 1;
      var res_2952790281 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790281 <= colontmp__2952790280)) break Label4;
            i_3003125277 = res_2952790281;
            var eh_3003125358 = n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003125358)) {
            var j_3003125362 = (eh_3003125358 & (t_3003125176.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003125176.data[chckIndx(j_3003125362, 0, (t_3003125176.data).length - 1)].Field0)) break Label6;
                  j_3003125362 = nextTry_1308622883(j_3003125362, (t_3003125176.data).length - 1);
                }
            };
            rawInsert_3003125609(t_3003125176, t_3003125176, "data", n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field1, n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field2, eh_3003125358, j_3003125362);
            }
            
            res_2952790281 = addInt(res_2952790281, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003125859(t_3003125862, key_3003125863, hc_3003125864) {
  var result_3003125865 = 0;

  BeforeRet: {
    if (((t_3003125862.data).length == 0)) {
    result_3003125865 = -1;
    break BeforeRet;
    }
    
    var h_3003125950 = (hc_3003125864 & (t_3003125862.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field0)) break Label2;
          if (((t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field0 == hc_3003125864) && (t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field1 == key_3003125863))) {
          result_3003125865 = h_3003125950;
          break BeforeRet;
          }
          
          h_3003125950 = nextTry_1308622883(h_3003125950, (t_3003125862.data).length - 1);
        }
    };
    result_3003125865 = subInt(-1, h_3003125950);
  };

  return result_3003125865;

}

function HEX5BHEX5DHEX3D_3003124648(t_3003124651, key_3003124652, val_3003124653) {
    if (((t_3003124651.data).length == 0)) {
    var correctSizeHEX60gensym133_3003124736 = slotsNeeded_1308622891(32);
    t_3003124651.counter = 0;
    t_3003124651.data = new Array(chckRange(correctSizeHEX60gensym133_3003124736, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym133_3003124736, 0, 2147483647) ; ++i) { t_3003124651.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003124741 = [0];
    var index_3003124748 = rawGet_3003124083(t_3003124651, key_3003124652, hc_3003124741, 0);
    if ((0 <= index_3003124748)) {
    t_3003124651.data[chckIndx(index_3003124748, 0, (t_3003124651.data).length - 1)].Field2 = val_3003124653;
    }
    else {
      if (((t_3003124651.data).length == 0)) {
      var correctSizeHEX60gensym136_3003124911 = slotsNeeded_1308622891(32);
      t_3003124651.counter = 0;
      t_3003124651.data = new Array(chckRange(correctSizeHEX60gensym136_3003124911, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_3003124911, 0, 2147483647) ; ++i) { t_3003124651.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003124916(t_3003124651)) {
      enlarge_3003125173(t_3003124651);
      index_3003124748 = rawGetKnownHC_3003125859(t_3003124651, key_3003124652, hc_3003124741[0]);
      }
      
      index_3003124748 = subInt(-1, index_3003124748);
      rawInsert_3003125609(t_3003124651, t_3003124651, "data", key_3003124652, val_3003124653, hc_3003124741[0], index_3003124748);
      t_3003124651.counter = addInt(t_3003124651.counter, 1);
    }
    

  
}

function rawGet_3003126508(t_3003126511, key_3003126512, hc_3003126513, hc_3003126513_Idx) {
  var result_3003126514 = 0;

  BeforeRet: {
    hc_3003126513[hc_3003126513_Idx] = hash_2986346803(key_3003126512);
    if ((hc_3003126513[hc_3003126513_Idx] == 0)) {
    hc_3003126513[hc_3003126513_Idx] = 314159265;
    }
    
    if (((t_3003126511.data).length == 0)) {
    result_3003126514 = -1;
    break BeforeRet;
    }
    
    var h_3003126600 = (hc_3003126513[hc_3003126513_Idx] & (t_3003126511.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field0)) break Label2;
          if (((t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field0 == hc_3003126513[hc_3003126513_Idx]) && (t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field1 == key_3003126512))) {
          result_3003126514 = h_3003126600;
          break BeforeRet;
          }
          
          h_3003126600 = nextTry_1828716586(h_3003126600, (t_3003126511.data).length - 1);
        }
    };
    result_3003126514 = subInt(-1, h_3003126600);
  };

  return result_3003126514;

}

function exclImpl_3003126502(s_3003126504, key_3003126505) {
          var Temporary5;

  var result_3003126506 = false;

  BeforeRet: {
    var hc_3003126507 = [0];
    var i_3003126866 = rawGet_3003126508(s_3003126504, key_3003126505, hc_3003126507, 0);
    var msk_3003126870 = (s_3003126504.data).length - 1;
    result_3003126506 = true;
    if ((0 <= i_3003126866)) {
    result_3003126506 = false;
    s_3003126504.counter = subInt(s_3003126504.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003126876 = i_3003126866;
          var r_3003126877 = j_3003126876;
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0 = 0;
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003126866 = (addInt(i_3003126866, 1) & msk_3003126870);
                if (isEmpty_1828716580(s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003126877 = (s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0 & msk_3003126870);
                if (!(((((r_3003126877 <= i_3003126866) && (j_3003126876 < r_3003126877)) || ((j_3003126876 < r_3003126877) && (i_3003126866 < j_3003126876))) || ((i_3003126866 < j_3003126876) && (r_3003126877 <= i_3003126866))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)];
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)] = genericReset(s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)], NTI3003122085);
          s_3003126504.data[chckIndx(j_3003126876, 0, (s_3003126504.data).length - 1)] = nimCopy(s_3003126504.data[chckIndx(j_3003126876, 0, (s_3003126504.data).length - 1)], Temporary5, NTI3003122085);
        }
    };
    }
    
  };

  return result_3003126506;

}

function excl_3003126487(s_3003126489, key_3003126490) {
    var _ = exclImpl_3003126502(s_3003126489, key_3003126490);

  
}

function len_3003127621(t_3003127624) {
  var result_3003127625 = 0;

    result_3003127625 = t_3003127624.counter;

  return result_3003127625;

}

function len_3003127538(cache_3003127541) {
  var result_3003127542 = 0;

    result_3003127542 = len_3003127621(cache_3003127541.table);

  return result_3003127542;

}

function mustRehash_3003127762(t_3003127764) {
  var result_3003127765 = false;

    if (!((t_3003127764.counter < (t_3003127764.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003127765 = ((mulInt((t_3003127764.data).length, 2) < mulInt(t_3003127764.counter, 3)) || (subInt((t_3003127764.data).length, t_3003127764.counter) < 4));

  return result_3003127765;

}

function rawGetKnownHC_3003128368(t_3003128371, key_3003128372, hc_3003128373) {
  var result_3003128374 = 0;

  BeforeRet: {
    if (((t_3003128371.data).length == 0)) {
    result_3003128374 = -1;
    break BeforeRet;
    }
    
    var h_3003128459 = (hc_3003128373 & (t_3003128371.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field0)) break Label2;
          if (((t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field0 == hc_3003128373) && (t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field1 == key_3003128372))) {
          result_3003128374 = h_3003128459;
          break BeforeRet;
          }
          
          h_3003128459 = nextTry_1828716586(h_3003128459, (t_3003128371.data).length - 1);
        }
    };
    result_3003128374 = subInt(-1, h_3003128459);
  };

  return result_3003128374;

}

function rawInsert_3003128872(s_3003128874, data_3003128875, data_3003128875_Idx, key_3003128876, hc_3003128877, h_3003128878) {
    if (((data_3003128875[data_3003128875_Idx]).length == 0)) {
    var correctSizeHEX60gensym155_3003128961 = slotsNeeded_1828716594(64);
    s_3003128874.counter = 0;
    s_3003128874.data = new Array(chckRange(correctSizeHEX60gensym155_3003128961, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym155_3003128961, 0, 2147483647) ; ++i) { s_3003128874.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003128875[data_3003128875_Idx][chckIndx(h_3003128878, 0, (data_3003128875[data_3003128875_Idx]).length - 1)].Field1 = key_3003128876;
    data_3003128875[data_3003128875_Idx][chckIndx(h_3003128878, 0, (data_3003128875[data_3003128875_Idx]).length - 1)].Field0 = hc_3003128877;

  
}

function enlarge_3003128025(s_3003128027) {
    var n_3003128029 = [];
    n_3003128029 = new Array(chckRange(mulInt((s_3003128027.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003128027.data).length, 2), 0, 2147483647) ; ++i) { n_3003128029[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003128027.data; s_3003128027.data = n_3003128029; n_3003128029 = Temporary1;    Label2: {
      var i_3003128127 = 0;
      var colontmp__2952790289 = 0;
      colontmp__2952790289 = (n_3003128029).length - 1;
      var res_2952790290 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790290 <= colontmp__2952790289)) break Label4;
            i_3003128127 = res_2952790290;
            if (isFilled_1828716583(n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0)) {
            var j_3003128707 = subInt(-1, rawGetKnownHC_3003128368(s_3003128027, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field1, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0));
            rawInsert_3003128872(s_3003128027, s_3003128027, "data", n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field1, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0, j_3003128707);
            }
            
            res_2952790290 = addInt(res_2952790290, 1);
          }
      };
    };

  
}

function incl_3003127646(s_3003127648, key_3003127649) {
    if (((s_3003127648.data).length == 0)) {
    var correctSizeHEX60gensym148_3003127732 = slotsNeeded_1828716594(64);
    s_3003127648.counter = 0;
    s_3003127648.data = new Array(chckRange(correctSizeHEX60gensym148_3003127732, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_3003127732, 0, 2147483647) ; ++i) { s_3003127648.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003127747 = [0];
    var index_3003127761 = rawGet_3003126508(s_3003127648, key_3003127649, hc_3003127747, 0);
    if ((index_3003127761 < 0)) {
    if (mustRehash_3003127762(s_3003127648)) {
    enlarge_3003128025(s_3003127648);
    index_3003127761 = rawGetKnownHC_3003128368(s_3003127648, key_3003127649, hc_3003127747[0]);
    }
    
    rawInsert_3003128872(s_3003127648, s_3003127648, "data", key_3003127649, hc_3003127747[0], subInt(-1, index_3003127761));
    s_3003127648.counter = addInt(s_3003127648.counter, 1);
    }
    

  
}

function del_3003129228(t_3003129231, key_3003129232) {
    var hc_3003129233 = [0];
    var i_3003129240 = rawGet_3003124083(t_3003129231, key_3003129232, hc_3003129233, 0);
    var mskHEX60gensym36_3003129244 = (t_3003129231.data).length - 1;
    if ((0 <= i_3003129240)) {
    t_3003129231.counter = subInt(t_3003129231.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003129251 = i_3003129240;
            var rHEX60gensym36_3003129252 = jHEX60gensym36_3003129251;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0 = 0;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field1 = null;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003129240 = (addInt(i_3003129240, 1) & mskHEX60gensym36_3003129244);
                  if (isEmpty_1308622877(t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003129252 = (t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0 & mskHEX60gensym36_3003129244);
                  if (!(((((rHEX60gensym36_3003129252 <= i_3003129240) && (jHEX60gensym36_3003129251 < rHEX60gensym36_3003129252)) || ((jHEX60gensym36_3003129251 < rHEX60gensym36_3003129252) && (i_3003129240 < jHEX60gensym36_3003129251))) || ((i_3003129240 < jHEX60gensym36_3003129251) && (rHEX60gensym36_3003129252 <= i_3003129240))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003129231.data[chckIndx(jHEX60gensym36_3003129251, 0, (t_3003129231.data).length - 1)] = nimCopy(t_3003129231.data[chckIndx(jHEX60gensym36_3003129251, 0, (t_3003129231.data).length - 1)], t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)], NTI3003122065);
          }
      };
    };
    }
    

  
}

function resize_3003127456(cache_3003127459) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003127459.capacity < len_3003127538(cache_3003127459))) break Label2;
          var t_3003127626 = cache_3003127459.list.tail;
          if (cache_3003127459.recordRemovedKeys) {
          incl_3003127646(cache_3003127459.removedKeys, t_3003127626.value.key);
          }
          
          del_3003129228(cache_3003127459.table, t_3003127626.value.key);
          remove_3003129987(cache_3003127459.list, t_3003127626);
        }
    };

  
}

function addNewNode_3003124558(cache_3003124561, key_3003124562, val_3003124563) {
    var node_3003124584 = newDoublyLinkedNode_3003124566({key: key_3003124562, val: val_3003124563});
    HEX5BHEX5DHEX3D_3003124648(cache_3003124561.table, key_3003124562, node_3003124584);
    prepend_3003126259(cache_3003124561.list, node_3003124584);
    if (cache_3003124561.recordRemovedKeys) {
    excl_3003126487(cache_3003124561.removedKeys, key_3003124562);
    }
    
    resize_3003127456(cache_3003124561);

  
}

function HEX5BHEX5DHEX3D_3003123978(cache_3003123981, key_3003123982, val_3003123983) {
    var node_3003124531 = getOrDefault_3003124073(cache_3003123981.table, key_3003123982, null);
    if ((node_3003124531 == null)) {
    addNewNode_3003124558(cache_3003123981, key_3003123982, val_3003123983);
    }
    else {
      node_3003124531.value.val = val_3003123983;
      remove_3003129987(cache_3003123981.list, node_3003124531);
      prepend_3003126259(cache_3003123981.list, node_3003124531);
    }
    

  
}

function HEX26_3087008353(x_3087008355, y_3087008356) {
  var result_3087008357 = [];

    result_3087008357 = new Array(chckRange(addInt((x_3087008355).length, (y_3087008356).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008355).length, (y_3087008356).length), 0, 2147483647) ; ++i) { result_3087008357[i] = 0; }    Label1: {
      var i_3087008375 = 0;
      var colontmp__2952790301 = 0;
      colontmp__2952790301 = subInt((x_3087008355).length, 1);
      var res_2952790302 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790302 <= colontmp__2952790301)) break Label3;
            i_3087008375 = res_2952790302;
            result_3087008357[chckIndx(i_3087008375, 0, (result_3087008357).length - 1)] = x_3087008355[chckIndx(i_3087008375, 0, (x_3087008355).length - 1)];
            res_2952790302 = addInt(res_2952790302, 1);
          }
      };
    };
    Label4: {
      var i_3087008383 = 0;
      var colontmp__2952790305 = 0;
      colontmp__2952790305 = subInt((y_3087008356).length, 1);
      var res_2952790306 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2952790306 <= colontmp__2952790305)) break Label6;
            i_3087008383 = res_2952790306;
            result_3087008357[chckIndx(addInt(i_3087008383, (x_3087008355).length), 0, (result_3087008357).length - 1)] = y_3087008356[chckIndx(i_3087008383, 0, (y_3087008356).length - 1)];
            res_2952790306 = addInt(res_2952790306, 1);
          }
      };
    };

  return result_3087008357;

}

function add_3087008391(x_3087008393, x_3087008393_Idx, y_3087008394) {
    var Temporary1;

    var xl_3087008398 = (x_3087008393[x_3087008393_Idx]).length;
    if (x_3087008393[x_3087008393_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008398, (y_3087008394).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008393[x_3087008393_Idx].length ; i < Temporary1 ; ++i) x_3087008393[x_3087008393_Idx].push(0); }
               else { x_3087008393[x_3087008393_Idx].length = Temporary1; };
    Label2: {
      var i_3087008413 = 0;
      var colontmp__2952790309 = 0;
      colontmp__2952790309 = (y_3087008394).length - 1;
      var res_2952790310 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790310 <= colontmp__2952790309)) break Label4;
            i_3087008413 = res_2952790310;
            x_3087008393[x_3087008393_Idx][chckIndx(addInt(xl_3087008398, i_3087008413), 0, (x_3087008393[x_3087008393_Idx]).length - 1)] = y_3087008394[chckIndx(i_3087008413, 0, (y_3087008394).length - 1)];
            res_2952790310 = addInt(res_2952790310, 1);
          }
      };
    };

  
}

function fingerprint_3087008346(typ_3087008347) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008348 = [[]];

    switch (typ_3087008347.kind) {
    case 4:
      var Temporary1 = typ_3087008347;
      if (ConstSet110[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008348[0] = nimCopy(null, HEX26_3087008353([typ_3087008347.kind], fingerprint_3087008346(Temporary1.returnType)), NTI3087008199);
      Label2: {
        var param_3087008390 = null;
        var colontmp__2952790296 = [];
        var Temporary3 = typ_3087008347;
        if (ConstSet111[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2952790296 = Temporary3.paramTypes;
        var i_2952790297 = 0;
        var L_2952790298 = (colontmp__2952790296).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2952790297 < L_2952790298)) break Label5;
              param_3087008390 = colontmp__2952790296[chckIndx(i_2952790297, 0, (colontmp__2952790296).length - 1)];
              add_3087008391(result_3087008348, 0, fingerprint_3087008346(param_3087008390));
              i_2952790297 = addInt(i_2952790297, 1);
              if (!(((colontmp__2952790296).length == L_2952790298))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008347;
      if (ConstSet112[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008348[0] = nimCopy(null, [typ_3087008347.kind, Temporary6.open], NTI3019899213);
      break;
    default: 
      result_3087008348[0] = nimCopy(null, [typ_3087008347.kind], NTI3087008193);
      break;
    }

  return result_3087008348[0];

}

function initDoublyLinkedList_3003130454() {
  var result_3003130456 = ({head: null, tail: null});

  return result_3003130456;

}

function initTable_3003130460(initialSize_3003130463) {
  var result_3003130464 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_3003130466 = slotsNeeded_1308622891(chckRange(initialSize_3003130463, 0, 2147483647));
    result_3003130464.counter = 0;
    result_3003130464.data = new Array(chckRange(correctSizeHEX60gensym156_3003130466, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_3003130466, 0, 2147483647) ; ++i) { result_3003130464.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003130464;

}

function newLruCache_3003130444(capacity_3003130447, recordRemovedKeys_3003130448) {
  var result_3003130449 = null;

    result_3003130449 = {capacity: capacity_3003130447, list: initDoublyLinkedList_3003130454(), table: initTable_3003130460(correctSize_3036676117(capacity_3003130447)), recordRemovedKeys: recordRemovedKeys_3003130448, removedKeys: ({data: [], counter: 0})};

  return result_3003130449;

}

function newCache_3003130439(capacity_3003130442) {
  var result_3003130443 = null;

    result_3003130443 = newLruCache_3003130444(capacity_3003130442, false);

  return result_3003130443;

}

function init_3003130434(result_3003130437, result_3003130437_Idx, capacity_3003130438) {
    result_3003130437[result_3003130437_Idx] = newCache_3003130439(capacity_3003130438);

  
}

function errorValue_3087008431() {
  var result_3087008432 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008432 = nimCopy(result_3087008432, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008432;

}

function HEX5BHEX5D_3137341205(s_3137341209, x_3137341210) {
  var result_3137341211 = [];

    var a_3137341213 = x_3137341210.a;
    var L_3137341219 = addInt(subInt(subInt((s_3137341209).length, x_3137341210.b), a_3137341213), 1);
    result_3137341211 = new Array(chckRange(L_3137341219, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3137341219, 0, 2147483647) ; ++i) { result_3137341211[i] = null; }    Label1: {
      var i_3137341228 = 0;
      var i_2952790320 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790320 < L_3137341219)) break Label3;
            i_3137341228 = i_2952790320;
            result_3137341211[chckIndx(i_3137341228, 0, (result_3137341211).length - 1)] = s_3137341209[chckIndx(addInt(i_3137341228, a_3137341213), 0, (s_3137341209).length - 1)];
            i_2952790320 = addInt(i_2952790320, 1);
          }
      };
    };

  return result_3137341211;

}

function formatValue_3087008579(result_3087008581, result_3087008581_Idx, value_3087008582, specifier_3087008583) {
    formatValue_721420459(result_3087008581, result_3087008581_Idx, HEX24_2986346455(value_3087008582), specifier_3087008583);

  
}

function hash_3087008493(x_3087008495) {
  var result_3087008496 = 0;

    result_3087008496 = hashWangYi1_1325400244(x_3087008495);

  return result_3087008496;

}

function hash_3087008255(x_3087008257) {
  var result_3087008258 = 0;

    result_3087008258 = hashWangYi1_1325400244(x_3087008257);

  return result_3087008258;

}

function hash_3087008266(x_3087008268) {
  var result_3087008269 = 0;

    Label1: {
      var a_3087008283 = null;
      var i_2952790337 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790337 < (x_3087008268).length)) break Label3;
            a_3087008283 = x_3087008268[chckIndx(i_2952790337, 0, (x_3087008268).length - 1)];
            result_3087008269 = HEX21HEX26_1325400067(result_3087008269, hash_3087008252(a_3087008283));
            i_2952790337 = addInt(i_2952790337, 1);
          }
      };
    };
    result_3087008269 = HEX21HEX24_1325400082(result_3087008269);

  return result_3087008269;

}

function hash_2701134432(x_2701134434) {
  var result_2701134435 = 0;

    result_2701134435 = hashWangYi1_1325400244((x_2701134434 ? 1 : 0));

  return result_2701134435;

}

function hash_3087008252(typ_3087008253) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008254 = 0;

  BeforeRet: {
    switch (typ_3087008253.kind) {
    case 4:
      var Temporary2 = typ_3087008253;
      if (ConstSet118[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008253;
      if (ConstSet119[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008255(typ_3087008253.kind) ^ hash_3087008252(Temporary2.returnType)) ^ hash_3087008266(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008253;
      if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008255(typ_3087008253.kind) ^ hash_2701134432(Temporary4.open));
      break;
    default: 
      result_3087008254 = hash_3087008255(typ_3087008253.kind);
      break BeforeRet;
      break;
    }
    result_3087008254 = Temporary1;
  };

  return result_3087008254;

}

function hash_3087008490(value_3087008491) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008492 = 0;

  BeforeRet: {
    switch (value_3087008491.kind) {
    case 0:
      result_3087008492 = hash_3087008493(value_3087008491.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008492 = hash_3087008493(value_3087008491.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008491;
      if (ConstSet115[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008492 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008491;
      if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008492 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008492 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008491;
      if (ConstSet117[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008492 = hash_2986346803(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008491;
      if (ConstSet121[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008492 = hash_3087008252(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008492;

}

function hash_3087008724(x_3087008726) {
  var result_3087008727 = 0;

    Label1: {
      var a_3087008741 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790333 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790333 < (x_3087008726).length)) break Label3;
            a_3087008741 = x_3087008726[chckIndx(i_2952790333, 0, (x_3087008726).length - 1)];
            result_3087008727 = HEX21HEX26_1325400067(result_3087008727, hash_3087008490(a_3087008741));
            i_2952790333 = addInt(i_2952790333, 1);
          }
      };
    };
    result_3087008727 = HEX21HEX24_1325400082(result_3087008727);

  return result_3087008727;

}

function hash_3087008742(x_3087008744) {
  var result_3087008745 = 0;

    result_3087008745 = HEX21HEX26_1325400067(result_3087008745, hash_1325400236(x_3087008744.val));
    result_3087008745 = HEX21HEX26_1325400067(result_3087008745, hash_2701134432(x_3087008744.has));
    result_3087008745 = HEX21HEX24_1325400082(result_3087008745);

  return result_3087008745;

}

function hash_3087008721(fec_3087008722) {
  var result_3087008723 = 0;

    result_3087008723 = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_2986346803(fec_3087008722.node), hash_3087008724(fec_3087008722.arguments)), hash_3087008742(fec_3087008722.maxLoopIterations));
    result_3087008723 = HEX21HEX24_1325400082(result_3087008723);

  return result_3087008723;

}

function HEX3DHEX3D_3087008782(x_3087008784, y_3087008785) {
  var result_3087008786 = false;

  BeforeRet: {
    var sameObject_3087008793 = false;
    sameObject_3087008793 = x_3087008784 === y_3087008785
    if (sameObject_3087008793) {
    result_3087008786 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008784).length == (y_3087008785).length))) {
    result_3087008786 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008807 = 0;
      var colontmp__2952790340 = 0;
      colontmp__2952790340 = subInt((x_3087008784).length, 1);
      var res_2952790341 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790341 <= colontmp__2952790340)) break Label3;
            i_3087008807 = res_2952790341;
            if (!(HEX3DHEX3D_3087008510(x_3087008784[chckIndx(i_3087008807, 0, (x_3087008784).length - 1)], y_3087008785[chckIndx(i_3087008807, 0, (y_3087008785).length - 1)]))) {
            result_3087008786 = false;
            break BeforeRet;
            }
            
            res_2952790341 = addInt(res_2952790341, 1);
          }
      };
    };
    result_3087008786 = true;
    break BeforeRet;
  };

  return result_3087008786;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008870(a_3087008872, b_3087008873) {
  var result_3087008874 = false;

    result_3087008874 = (((isSome_1191185117(a_3087008872) && isSome_1191185117(b_3087008873)) && (a_3087008872.val == b_3087008873.val)) || (isNone_1191185194(a_3087008872) && isNone_1191185194(b_3087008873)));

  return result_3087008874;

}

function HEX3DHEX3D_3087008765(a_3087008766, b_3087008767) {
  var result_3087008768 = false;

  BeforeRet: {
    if ((a_3087008766 == null)) {
    result_3087008768 = (b_3087008767 == null);
    break BeforeRet;
    }
    
    if ((b_3087008767 == null)) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008766.node == b_3087008767.node))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008782(a_3087008766.arguments, b_3087008767.arguments))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008870(a_3087008766.maxLoopIterations, b_3087008767.maxLoopIterations))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    result_3087008768 = true;
    break BeforeRet;
  };

  return result_3087008768;

}

function getItem_3003188626(selfHEX60gensym84_3003188627) {
  var result_3003188628 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym84_3003188627.id, null_2046820612)) {
    selfHEX60gensym84_3003188627.id = nimCopy(selfHEX60gensym84_3003188627.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym84_3003188627.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790343 = nimCopy(null, selfHEX60gensym84_3003188627.id, NTI2046820355);
    var colontmp__2952790344 = 3;
    result_3003188628 = nimCopy(result_3003188628, {Field0: nimCopy(null, colontmp__2952790343, NTI2046820355), Field1: colontmp__2952790344}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003188628;

}

function rawGet_3003155862(t_3003155865, key_3003155866, hc_3003155867, hc_3003155867_Idx) {
  var result_3003155868 = 0;

  BeforeRet: {
    hc_3003155867[hc_3003155867_Idx] = hash_3003122712(key_3003155866);
    if ((hc_3003155867[hc_3003155867_Idx] == 0)) {
    hc_3003155867[hc_3003155867_Idx] = 314159265;
    }
    
    if (((t_3003155865.data).length == 0)) {
    result_3003155868 = -1;
    break BeforeRet;
    }
    
    var h_3003155957 = (hc_3003155867[hc_3003155867_Idx] & (t_3003155865.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field0)) break Label2;
          if (((t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field0 == hc_3003155867[hc_3003155867_Idx]) && HEX3DHEX3D_3003123049(t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field1, key_3003155866))) {
          result_3003155868 = h_3003155957;
          break BeforeRet;
          }
          
          h_3003155957 = nextTry_1308622883(h_3003155957, (t_3003155865.data).length - 1);
        }
    };
    result_3003155868 = subInt(-1, h_3003155957);
  };

  return result_3003155868;

}

function getOrDefault_3003188877(t_3003188880, key_3003188881, default_3003188882) {
    var Temporary1;

  var result_3003188883 = null;

    var hcHEX60gensym447_3003188886 = [0];
    var indexHEX60gensym447_3003188893 = rawGet_3003155862(t_3003188880, key_3003188881, hcHEX60gensym447_3003188886, 0);
    if ((0 <= indexHEX60gensym447_3003188893)) {
    Temporary1 = t_3003188880.data[chckIndx(indexHEX60gensym447_3003188893, 0, (t_3003188880.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003188882;
    }
    
    result_3003188883 = Temporary1;

  return result_3003188883;

}

function newDoublyLinkedNode_3003189009(value_3003189011) {
  var result_3003189012 = null;

    result_3003189012 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003189012.value = nimCopy(result_3003189012.value, value_3003189011, NTI3003121927);

  return result_3003189012;

}

function mustRehash_3003189350(t_3003189352) {
  var result_3003189353 = false;

    if (!((t_3003189352.counter < (t_3003189352.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003189353 = ((mulInt((t_3003189352.data).length, 2) < mulInt(t_3003189352.counter, 3)) || (subInt((t_3003189352.data).length, t_3003189352.counter) < 4));

  return result_3003189353;

}

function rawInsert_3003190043(t_3003190047, data_3003190048, data_3003190048_Idx, key_3003190049, val_3003190050, hc_3003190051, h_3003190052) {
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field1 = nimCopy(data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field1, key_3003190049, NTI3019898905);
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field2 = val_3003190050;
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field0 = hc_3003190051;

  
}

function enlarge_3003189607(t_3003189610) {
    var n_3003189613 = [];
    n_3003189613 = new Array(chckRange(mulInt((t_3003189610.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003189610.data).length, 2), 0, 2147483647) ; ++i) { n_3003189613[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003189610.data; t_3003189610.data = n_3003189613; n_3003189613 = Temporary1;    Label2: {
      var i_3003189711 = 0;
      var colontmp__2952790348 = 0;
      colontmp__2952790348 = (n_3003189613).length - 1;
      var res_2952790349 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790349 <= colontmp__2952790348)) break Label4;
            i_3003189711 = res_2952790349;
            var eh_3003189792 = n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003189792)) {
            var j_3003189796 = (eh_3003189792 & (t_3003189610.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003189610.data[chckIndx(j_3003189796, 0, (t_3003189610.data).length - 1)].Field0)) break Label6;
                  j_3003189796 = nextTry_1308622883(j_3003189796, (t_3003189610.data).length - 1);
                }
            };
            rawInsert_3003190043(t_3003189610, t_3003189610, "data", n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field1, n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field2, eh_3003189792, j_3003189796);
            }
            
            res_2952790349 = addInt(res_2952790349, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003190293(t_3003190296, key_3003190297, hc_3003190298) {
  var result_3003190299 = 0;

  BeforeRet: {
    if (((t_3003190296.data).length == 0)) {
    result_3003190299 = -1;
    break BeforeRet;
    }
    
    var h_3003190384 = (hc_3003190298 & (t_3003190296.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field0)) break Label2;
          if (((t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field0 == hc_3003190298) && HEX3DHEX3D_3003123049(t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field1, key_3003190297))) {
          result_3003190299 = h_3003190384;
          break BeforeRet;
          }
          
          h_3003190384 = nextTry_1308622883(h_3003190384, (t_3003190296.data).length - 1);
        }
    };
    result_3003190299 = subInt(-1, h_3003190384);
  };

  return result_3003190299;

}

function HEX5BHEX5DHEX3D_3003189082(t_3003189085, key_3003189086, val_3003189087) {
    if (((t_3003189085.data).length == 0)) {
    var correctSizeHEX60gensym450_3003189170 = slotsNeeded_1308622891(32);
    t_3003189085.counter = 0;
    t_3003189085.data = new Array(chckRange(correctSizeHEX60gensym450_3003189170, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym450_3003189170, 0, 2147483647) ; ++i) { t_3003189085.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003189175 = [0];
    var index_3003189182 = rawGet_3003155862(t_3003189085, key_3003189086, hc_3003189175, 0);
    if ((0 <= index_3003189182)) {
    t_3003189085.data[chckIndx(index_3003189182, 0, (t_3003189085.data).length - 1)].Field2 = val_3003189087;
    }
    else {
      if (((t_3003189085.data).length == 0)) {
      var correctSizeHEX60gensym453_3003189345 = slotsNeeded_1308622891(32);
      t_3003189085.counter = 0;
      t_3003189085.data = new Array(chckRange(correctSizeHEX60gensym453_3003189345, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym453_3003189345, 0, 2147483647) ; ++i) { t_3003189085.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003189350(t_3003189085)) {
      enlarge_3003189607(t_3003189085);
      index_3003189182 = rawGetKnownHC_3003190293(t_3003189085, key_3003189086, hc_3003189175[0]);
      }
      
      index_3003189182 = subInt(-1, index_3003189182);
      rawInsert_3003190043(t_3003189085, t_3003189085, "data", key_3003189086, val_3003189087, hc_3003189175[0], index_3003189182);
      t_3003189085.counter = addInt(t_3003189085.counter, 1);
    }
    

  
}

function prepend_3003156842(L_3003156844, n_3003156845) {
    n_3003156845.prev = null;
    n_3003156845.next = L_3003156844.head;
    if (!((L_3003156844.head == null))) {
    if (!((L_3003156844.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003156844.head.prev = n_3003156845;
    }
    
    L_3003156844.head = n_3003156845;
    if ((L_3003156844.tail == null)) {
    L_3003156844.tail = n_3003156845;
    }
    

  
}

function rawGet_3003178064(t_3003178067, key_3003178068, hc_3003178069, hc_3003178069_Idx) {
  var result_3003178070 = 0;

  BeforeRet: {
    hc_3003178069[hc_3003178069_Idx] = hash_3003122712(key_3003178068);
    if ((hc_3003178069[hc_3003178069_Idx] == 0)) {
    hc_3003178069[hc_3003178069_Idx] = 314159265;
    }
    
    if (((t_3003178067.data).length == 0)) {
    result_3003178070 = -1;
    break BeforeRet;
    }
    
    var h_3003178159 = (hc_3003178069[hc_3003178069_Idx] & (t_3003178067.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field0)) break Label2;
          if (((t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field0 == hc_3003178069[hc_3003178069_Idx]) && HEX3DHEX3D_3003123049(t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field1, key_3003178068))) {
          result_3003178070 = h_3003178159;
          break BeforeRet;
          }
          
          h_3003178159 = nextTry_1828716586(h_3003178159, (t_3003178067.data).length - 1);
        }
    };
    result_3003178070 = subInt(-1, h_3003178159);
  };

  return result_3003178070;

}

function exclImpl_3003178058(s_3003178060, key_3003178061) {
          var Temporary5;

  var result_3003178062 = false;

  BeforeRet: {
    var hc_3003178063 = [0];
    var i_3003178425 = rawGet_3003178064(s_3003178060, key_3003178061, hc_3003178063, 0);
    var msk_3003178429 = (s_3003178060.data).length - 1;
    result_3003178062 = true;
    if ((0 <= i_3003178425)) {
    result_3003178062 = false;
    s_3003178060.counter = subInt(s_3003178060.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003178435 = i_3003178425;
          var r_3003178436 = j_3003178435;
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0 = 0;
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field1 = nimCopy(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003178425 = (addInt(i_3003178425, 1) & msk_3003178429);
                if (isEmpty_1828716580(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003178436 = (s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0 & msk_3003178429);
                if (!(((((r_3003178436 <= i_3003178425) && (j_3003178435 < r_3003178436)) || ((j_3003178435 < r_3003178436) && (i_3003178425 < j_3003178435))) || ((i_3003178425 < j_3003178435) && (r_3003178436 <= i_3003178425))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)];
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)] = genericReset(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)], NTI3003121782);
          s_3003178060.data[chckIndx(j_3003178435, 0, (s_3003178060.data).length - 1)] = nimCopy(s_3003178060.data[chckIndx(j_3003178435, 0, (s_3003178060.data).length - 1)], Temporary5, NTI3003121782);
        }
    };
    }
    
  };

  return result_3003178062;

}

function excl_3003178043(s_3003178045, key_3003178046) {
    var _ = exclImpl_3003178058(s_3003178045, key_3003178046);

  
}

function len_3003190904(t_3003190907) {
  var result_3003190908 = 0;

    result_3003190908 = t_3003190907.counter;

  return result_3003190908;

}

function len_3003190821(cache_3003190824) {
  var result_3003190825 = 0;

    result_3003190825 = len_3003190904(cache_3003190824.table);

  return result_3003190825;

}

function mustRehash_3003179330(t_3003179332) {
  var result_3003179333 = false;

    if (!((t_3003179332.counter < (t_3003179332.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003179333 = ((mulInt((t_3003179332.data).length, 2) < mulInt(t_3003179332.counter, 3)) || (subInt((t_3003179332.data).length, t_3003179332.counter) < 4));

  return result_3003179333;

}

function rawGetKnownHC_3003179936(t_3003179939, key_3003179940, hc_3003179941) {
  var result_3003179942 = 0;

  BeforeRet: {
    if (((t_3003179939.data).length == 0)) {
    result_3003179942 = -1;
    break BeforeRet;
    }
    
    var h_3003180027 = (hc_3003179941 & (t_3003179939.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field0)) break Label2;
          if (((t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field0 == hc_3003179941) && HEX3DHEX3D_3003123049(t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field1, key_3003179940))) {
          result_3003179942 = h_3003180027;
          break BeforeRet;
          }
          
          h_3003180027 = nextTry_1828716586(h_3003180027, (t_3003179939.data).length - 1);
        }
    };
    result_3003179942 = subInt(-1, h_3003180027);
  };

  return result_3003179942;

}

function rawInsert_3003180440(s_3003180442, data_3003180443, data_3003180443_Idx, key_3003180444, hc_3003180445, h_3003180446) {
    if (((data_3003180443[data_3003180443_Idx]).length == 0)) {
    var correctSizeHEX60gensym403_3003180529 = slotsNeeded_1828716594(64);
    s_3003180442.counter = 0;
    s_3003180442.data = new Array(chckRange(correctSizeHEX60gensym403_3003180529, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_3003180529, 0, 2147483647) ; ++i) { s_3003180442.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field1 = nimCopy(data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field1, key_3003180444, NTI3019898905);
    data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field0 = hc_3003180445;

  
}

function enlarge_3003179593(s_3003179595) {
    var n_3003179597 = [];
    n_3003179597 = new Array(chckRange(mulInt((s_3003179595.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003179595.data).length, 2), 0, 2147483647) ; ++i) { n_3003179597[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    var Temporary1 = s_3003179595.data; s_3003179595.data = n_3003179597; n_3003179597 = Temporary1;    Label2: {
      var i_3003179695 = 0;
      var colontmp__2952790357 = 0;
      colontmp__2952790357 = (n_3003179597).length - 1;
      var res_2952790358 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790358 <= colontmp__2952790357)) break Label4;
            i_3003179695 = res_2952790358;
            if (isFilled_1828716583(n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0)) {
            var j_3003180275 = subInt(-1, rawGetKnownHC_3003179936(s_3003179595, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field1, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0));
            rawInsert_3003180440(s_3003179595, s_3003179595, "data", n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field1, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0, j_3003180275);
            }
            
            res_2952790358 = addInt(res_2952790358, 1);
          }
      };
    };

  
}

function incl_3003179214(s_3003179216, key_3003179217) {
    if (((s_3003179216.data).length == 0)) {
    var correctSizeHEX60gensym396_3003179300 = slotsNeeded_1828716594(64);
    s_3003179216.counter = 0;
    s_3003179216.data = new Array(chckRange(correctSizeHEX60gensym396_3003179300, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym396_3003179300, 0, 2147483647) ; ++i) { s_3003179216.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    var hc_3003179315 = [0];
    var index_3003179329 = rawGet_3003178064(s_3003179216, key_3003179217, hc_3003179315, 0);
    if ((index_3003179329 < 0)) {
    if (mustRehash_3003179330(s_3003179216)) {
    enlarge_3003179593(s_3003179216);
    index_3003179329 = rawGetKnownHC_3003179936(s_3003179216, key_3003179217, hc_3003179315[0]);
    }
    
    rawInsert_3003180440(s_3003179216, s_3003179216, "data", key_3003179217, hc_3003179315[0], subInt(-1, index_3003179329));
    s_3003179216.counter = addInt(s_3003179216.counter, 1);
    }
    

  
}

function del_3003190996(t_3003190999, key_3003191000) {
    var hc_3003191001 = [0];
    var i_3003191008 = rawGet_3003155862(t_3003190999, key_3003191000, hc_3003191001, 0);
    var mskHEX60gensym36_3003191012 = (t_3003190999.data).length - 1;
    if ((0 <= i_3003191008)) {
    t_3003190999.counter = subInt(t_3003190999.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003191019 = i_3003191008;
            var rHEX60gensym36_3003191020 = jHEX60gensym36_3003191019;
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0 = 0;
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field1 = nimCopy(t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003191008 = (addInt(i_3003191008, 1) & mskHEX60gensym36_3003191012);
                  if (isEmpty_1308622877(t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003191020 = (t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0 & mskHEX60gensym36_3003191012);
                  if (!(((((rHEX60gensym36_3003191020 <= i_3003191008) && (jHEX60gensym36_3003191019 < rHEX60gensym36_3003191020)) || ((jHEX60gensym36_3003191019 < rHEX60gensym36_3003191020) && (i_3003191008 < jHEX60gensym36_3003191019))) || ((i_3003191008 < jHEX60gensym36_3003191019) && (rHEX60gensym36_3003191020 <= i_3003191008))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003190999.data[chckIndx(jHEX60gensym36_3003191019, 0, (t_3003190999.data).length - 1)] = nimCopy(t_3003190999.data[chckIndx(jHEX60gensym36_3003191019, 0, (t_3003190999.data).length - 1)], t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)], NTI3003121963);
          }
      };
    };
    }
    

  
}

function remove_3003156514(L_3003156516, n_3003156517) {
    if ((n_3003156517 == L_3003156516.tail)) {
    L_3003156516.tail = n_3003156517.prev;
    }
    
    if ((n_3003156517 == L_3003156516.head)) {
    L_3003156516.head = n_3003156517.next;
    }
    
    if (!((n_3003156517.next == null))) {
    n_3003156517.next.prev = n_3003156517.prev;
    }
    
    if (!((n_3003156517.prev == null))) {
    n_3003156517.prev.next = n_3003156517.next;
    }
    

  
}

function resize_3003190739(cache_3003190742) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003190742.capacity < len_3003190821(cache_3003190742))) break Label2;
          var t_3003190909 = cache_3003190742.list.tail;
          if (cache_3003190742.recordRemovedKeys) {
          incl_3003179214(cache_3003190742.removedKeys, t_3003190909.value.key);
          }
          
          del_3003190996(cache_3003190742.table, t_3003190909.value.key);
          remove_3003156514(cache_3003190742.list, t_3003190909);
        }
    };

  
}

function addNewNode_3003189001(cache_3003189004, key_3003189005, val_3003189006) {
    var node_3003189018 = newDoublyLinkedNode_3003189009({key: nimCopy(null, key_3003189005, NTI3019898905), val: val_3003189006});
    HEX5BHEX5DHEX3D_3003189082(cache_3003189004.table, key_3003189005, node_3003189018);
    prepend_3003156842(cache_3003189004.list, node_3003189018);
    if (cache_3003189004.recordRemovedKeys) {
    excl_3003178043(cache_3003189004.removedKeys, key_3003189005);
    }
    
    resize_3003190739(cache_3003189004);

  
}

function HEX5BHEX5DHEX3D_3003188782(cache_3003188785, key_3003188786, val_3003188787) {
    var node_3003188974 = getOrDefault_3003188877(cache_3003188785.table, key_3003188786, null);
    if ((node_3003188974 == null)) {
    addNewNode_3003189001(cache_3003188785, key_3003188786, val_3003188787);
    }
    else {
      node_3003188974.value.val = val_3003188787;
      remove_3003156514(cache_3003188785.list, node_3003188974);
      prepend_3003156842(cache_3003188785.list, node_3003188974);
    }
    

  
}

function getOrCreateFunctionExecutionContext_3003188635(ctxHEX60gensym85_3003188636, dataHEX60gensym85_3003188637) {
  var result_3003188638 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_3003188647 = null;
      Label2: {
        var node_2952790328 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952790329 = ctxHEX60gensym85_3003188636.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952790329 == null))) break Label4;
              node_2952790328 = nimCopy(node_2952790328, it_2952790329.value, NTI3003121927);
              existingHEX60gensym85_3003188647 = node_2952790328.val;
              if (((hash_3087008721(existingHEX60gensym85_3003188647) == hash_3087008721(dataHEX60gensym85_3003188637)) && HEX3DHEX3D_3087008765(existingHEX60gensym85_3003188647, dataHEX60gensym85_3003188637))) {
              result_3003188638 = existingHEX60gensym85_3003188647;
              break BeforeRet;
              }
              
              it_2952790329 = it_2952790329.next;
            }
        };
      };
    };
    var itemHEX60gensym85_3003188648 = getItem_3003188626(dataHEX60gensym85_3003188637);
    var keyHEX60gensym85_3003188649 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_3003188648, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym85_3003188636.depGraph.changed, keyHEX60gensym85_3003188649, ctxHEX60gensym85_3003188636.depGraph.revision);
    HEX5BHEX5DHEX3D_3003188782(ctxHEX60gensym85_3003188636.itemsFunctionExecutionContext, itemHEX60gensym85_3003188648, dataHEX60gensym85_3003188637);
    result_3003188638 = dataHEX60gensym85_3003188637;
    break BeforeRet;
  };

  return result_3003188638;

}

function rawGet_3003157234(t_3003157237, key_3003157238, hc_3003157239, hc_3003157239_Idx) {
  var result_3003157240 = 0;

  BeforeRet: {
    hc_3003157239[hc_3003157239_Idx] = hash_3087008721(key_3003157238);
    if ((hc_3003157239[hc_3003157239_Idx] == 0)) {
    hc_3003157239[hc_3003157239_Idx] = 314159265;
    }
    
    if (((t_3003157237.data).length == 0)) {
    result_3003157240 = -1;
    break BeforeRet;
    }
    
    var h_3003157326 = (hc_3003157239[hc_3003157239_Idx] & (t_3003157237.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field0)) break Label2;
          if (((t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field0 == hc_3003157239[hc_3003157239_Idx]) && HEX3DHEX3D_3087008765(t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field1, key_3003157238))) {
          result_3003157240 = h_3003157326;
          break BeforeRet;
          }
          
          h_3003157326 = nextTry_1308622883(h_3003157326, (t_3003157237.data).length - 1);
        }
    };
    result_3003157240 = subInt(-1, h_3003157326);
  };

  return result_3003157240;

}

function hasKey_3003214679(t_3003214682, key_3003214683) {
  var result_3003214684 = false;

    var hc_3003214685 = [0];
    result_3003214684 = (0 <= rawGet_3003157234(t_3003214682, key_3003214683, hc_3003214685, 0));

  return result_3003214684;

}

function contains_3003214673(t_3003214676, key_3003214677) {
  var result_3003214678 = false;

  BeforeRet: {
    result_3003214678 = hasKey_3003214679(t_3003214676, key_3003214677);
    break BeforeRet;
  };

  return result_3003214678;

}

function contains_3003214579(cache_3003214582, key_3003214583) {
  var result_3003214584 = false;

    result_3003214584 = contains_3003214673(cache_3003214582.table, key_3003214583);

  return result_3003214584;

}

function addQuoted_3087008627(s_3087008629, s_3087008629_Idx, x_3087008630) {
    s_3087008629[s_3087008629_Idx].push.apply(s_3087008629[s_3087008629_Idx], HEX24_3087008487(x_3087008630));;

  
}

function collectionToString_3087008593(x_3087008595, prefix_3087008596, separator_3087008597, suffix_3087008598) {
  var result_3087008599 = [[]];

    result_3087008599[0] = nimCopy(null, prefix_3087008596, NTI33554449);
    var firstElement_3087008600 = true;
    Label1: {
      var value_3087008623 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790366 = 0;
      var L_2952790367 = (x_3087008595).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790366 < L_2952790367)) break Label3;
            value_3087008623 = x_3087008595[i_2952790366];
            if (firstElement_3087008600) {
            firstElement_3087008600 = false;
            }
            else {
            result_3087008599[0].push.apply(result_3087008599[0], separator_3087008597);;
            }
            
            addQuoted_3087008627(result_3087008599, 0, value_3087008623);
            i_2952790366 += 1;
            if (!(((x_3087008595).length == L_2952790367))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008599[0].push.apply(result_3087008599[0], suffix_3087008598);;

  return result_3087008599[0];

}

function HEX24_3087008589(x_3087008591) {
  var result_3087008592 = [];

    result_3087008592 = nimCopy(null, collectionToString_3087008593(x_3087008591, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008592;

}

function formatValue_3087008584(result_3087008586, result_3087008586_Idx, value_3087008587, specifier_3087008588) {
    formatValue_721420459(result_3087008586, result_3087008586_Idx, HEX24_3087008589(value_3087008587), specifier_3087008588);

  
}

function HEX24_3087008702(self_3087008704) {
  var result_3087008705 = [[]];

    if (isSome_1191185117(self_3087008704)) {
    result_3087008705[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008705, 0, self_3087008704.val);
    result_3087008705[0].push.apply(result_3087008705[0], [41]);;
    }
    else {
      result_3087008705[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008705[0];

}

function formatValue_3087008651(result_3087008653, result_3087008653_Idx, value_3087008654, specifier_3087008655) {
    formatValue_721420459(result_3087008653, result_3087008653_Idx, HEX24_3087008702(value_3087008654), specifier_3087008655);

  
}

function HEX24_3087008571(fec_3087008572) {
  var result_3087008573 = [];

  BeforeRet: {
    var fmtRes_3087008578 = [mnewString(0)];
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [67,97,108,108,32]);;
    formatValue_3087008579(fmtRes_3087008578, 0, fec_3087008572.node, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [40]);;
    formatValue_3087008584(fmtRes_3087008578, 0, fec_3087008572.arguments, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008651(fmtRes_3087008578, 0, fec_3087008572.maxLoopIterations, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [41]);;
    result_3087008573 = nimCopy(null, fmtRes_3087008578[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008573;

}

function raiseKeyError_3003214952(key_3003214954) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087008571(key_3003214954) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003214858(t_3003214861, key_3003214862) {
  var result_3003214863 = null;
  var result_3003214863_Idx = 0;

    var hcHEX60gensym22_3003214864 = [0];
    var indexHEX60gensym22_3003214871 = rawGet_3003157234(t_3003214861, key_3003214862, hcHEX60gensym22_3003214864, 0);
    if ((0 <= indexHEX60gensym22_3003214871)) {
    result_3003214863 = t_3003214861.data[chckIndx(indexHEX60gensym22_3003214871, 0, (t_3003214861.data).length - 1)]; result_3003214863_Idx = "Field2";
    }
    else {
    raiseKeyError_3003214952(key_3003214862);
    }
    

  return [result_3003214863, result_3003214863_Idx];

}

function remove_3003163140(L_3003163142, n_3003163143) {
    if ((n_3003163143 == L_3003163142.tail)) {
    L_3003163142.tail = n_3003163143.prev;
    }
    
    if ((n_3003163143 == L_3003163142.head)) {
    L_3003163142.head = n_3003163143.next;
    }
    
    if (!((n_3003163143.next == null))) {
    n_3003163143.next.prev = n_3003163143.prev;
    }
    
    if (!((n_3003163143.prev == null))) {
    n_3003163143.prev.next = n_3003163143.next;
    }
    

  
}

function prepend_3003159411(L_3003159413, n_3003159414) {
    n_3003159414.prev = null;
    n_3003159414.next = L_3003159413.head;
    if (!((L_3003159413.head == null))) {
    if (!((L_3003159413.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003159413.head.prev = n_3003159414;
    }
    
    L_3003159413.head = n_3003159414;
    if ((L_3003159413.tail == null)) {
    L_3003159413.tail = n_3003159414;
    }
    

  
}

function HEX5BHEX5D_3003214772(cache_3003214775, key_3003214776) {
    var Temporary1;

  var result_3003214777 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003214965 = (Temporary1 = HEX5BHEX5D_3003214858(cache_3003214775.table, key_3003214776), Temporary1)[0][Temporary1[1]];
    result_3003214777 = nimCopy(result_3003214777, node_3003214965.value.val, NTI3087007751);
    remove_3003163140(cache_3003214775.list, node_3003214965);
    prepend_3003159411(cache_3003214775.list, node_3003214965);

  return result_3003214777;

}

function computeFunctionExecution_3003215035(ctxHEX60gensym116_3003215036, inputHEX60gensym116_3003215037) {
    var Temporary3;
    var Temporary5;

  var result_3003215038 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym116_3003215039 = startTimer_2466250804();
    ctxHEX60gensym116_3003215036.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_3003215036.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_3003215128 = getItem_3003188626(inputHEX60gensym116_3003215037);
    var keyHEX60gensym116_3003215129 = {Field0: nimCopy(null, itemHEX60gensym116_3003215128, NTI3019898905), Field1: 6};
    recordDependency_3003175740(ctxHEX60gensym116_3003215036, itemHEX60gensym116_3003215128, 6);
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3019899092(itemHEX60gensym116_3003215128));
    }
    
    force_3003192111(ctxHEX60gensym116_3003215036, keyHEX60gensym116_3003215129);
    if (!(contains_3003214579(ctxHEX60gensym116_3003215036.queryCacheFunctionExecution, inputHEX60gensym116_3003215037))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008571(inputHEX60gensym116_3003215037) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003215038 = nimCopy(result_3003215038, HEX5BHEX5D_3003214772(ctxHEX60gensym116_3003215036.queryCacheFunctionExecution, inputHEX60gensym116_3003215037), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym116_3003215036.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym116_3003215036.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym116_3003215036.statsFunctionExecution.time = addInt(ctxHEX60gensym116_3003215036.statsFunctionExecution.time, elapsed_2466250815(timerHEX60gensym116_3003215039));
    }
  };

  return result_3003215038;

}

function rawGet_3003151717(t_3003151720, key_3003151721, hc_3003151722, hc_3003151722_Idx) {
  var result_3003151723 = 0;

  BeforeRet: {
    hc_3003151722[hc_3003151722_Idx] = hash_3087008907(key_3003151721);
    if ((hc_3003151722[hc_3003151722_Idx] == 0)) {
    hc_3003151722[hc_3003151722_Idx] = 314159265;
    }
    
    if (((t_3003151720.data).length == 0)) {
    result_3003151723 = -1;
    break BeforeRet;
    }
    
    var h_3003151809 = (hc_3003151722[hc_3003151722_Idx] & (t_3003151720.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field0)) break Label2;
          if (((t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field0 == hc_3003151722[hc_3003151722_Idx]) && HEX3DHEX3D_3087008910(t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field1, key_3003151721))) {
          result_3003151723 = h_3003151809;
          break BeforeRet;
          }
          
          h_3003151809 = nextTry_1308622883(h_3003151809, (t_3003151720.data).length - 1);
        }
    };
    result_3003151723 = subInt(-1, h_3003151809);
  };

  return result_3003151723;

}

function hasKey_3003211576(t_3003211579, key_3003211580) {
  var result_3003211581 = false;

    var hc_3003211582 = [0];
    result_3003211581 = (0 <= rawGet_3003151717(t_3003211579, key_3003211580, hc_3003211582, 0));

  return result_3003211581;

}

function contains_3003211570(t_3003211573, key_3003211574) {
  var result_3003211575 = false;

  BeforeRet: {
    result_3003211575 = hasKey_3003211576(t_3003211573, key_3003211574);
    break BeforeRet;
  };

  return result_3003211575;

}

function contains_3003211476(cache_3003211479, key_3003211480) {
  var result_3003211481 = false;

    result_3003211481 = contains_3003211570(cache_3003211479.table, key_3003211480);

  return result_3003211481;

}

function HEX5BHEX5D_3003211755(t_3003211758, key_3003211759) {
  var result_3003211760 = null;
  var result_3003211760_Idx = 0;

    var hcHEX60gensym22_3003211761 = [0];
    var indexHEX60gensym22_3003211768 = rawGet_3003151717(t_3003211758, key_3003211759, hcHEX60gensym22_3003211761, 0);
    if ((0 <= indexHEX60gensym22_3003211768)) {
    result_3003211760 = t_3003211758.data[chckIndx(indexHEX60gensym22_3003211768, 0, (t_3003211758.data).length - 1)]; result_3003211760_Idx = "Field2";
    }
    else {
    raiseKeyError_3003208745(key_3003211759);
    }
    

  return [result_3003211760, result_3003211760_Idx];

}

function remove_3003155165(L_3003155167, n_3003155168) {
    if ((n_3003155168 == L_3003155167.tail)) {
    L_3003155167.tail = n_3003155168.prev;
    }
    
    if ((n_3003155168 == L_3003155167.head)) {
    L_3003155167.head = n_3003155168.next;
    }
    
    if (!((n_3003155168.next == null))) {
    n_3003155168.next.prev = n_3003155168.prev;
    }
    
    if (!((n_3003155168.prev == null))) {
    n_3003155168.prev.next = n_3003155168.next;
    }
    

  
}

function prepend_3003153894(L_3003153896, n_3003153897) {
    n_3003153897.prev = null;
    n_3003153897.next = L_3003153896.head;
    if (!((L_3003153896.head == null))) {
    if (!((L_3003153896.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003153896.head.prev = n_3003153897;
    }
    
    L_3003153896.head = n_3003153897;
    if ((L_3003153896.tail == null)) {
    L_3003153896.tail = n_3003153897;
    }
    

  
}

function HEX5BHEX5D_3003211669(cache_3003211672, key_3003211673) {
    var Temporary1;

  var result_3003211674 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003211861 = (Temporary1 = HEX5BHEX5D_3003211755(cache_3003211672.table, key_3003211673), Temporary1)[0][Temporary1[1]];
    result_3003211674 = nimCopy(result_3003211674, node_3003211861.value.val, NTI3087007751);
    remove_3003155165(cache_3003211672.list, node_3003211861);
    prepend_3003153894(cache_3003211672.list, node_3003211861);

  return result_3003211674;

}

function computeSymbolValue_3003211931(ctxHEX60gensym112_3003211932, inputHEX60gensym112_3003211933, recordDependencyHEX60gensym112_3003211934) {
    var Temporary3;
    var Temporary5;

  var result_3003211935 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym112_3003211936 = startTimer_2466250804();
    ctxHEX60gensym112_3003211932.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_3003211932.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_3003212025 = getItem_3003185222(inputHEX60gensym112_3003211933);
    var keyHEX60gensym112_3003212026 = {Field0: nimCopy(null, itemHEX60gensym112_3003212025, NTI3019898905), Field1: 5};
    if (recordDependencyHEX60gensym112_3003211934) {
    recordDependency_3003175740(ctxHEX60gensym112_3003211932, itemHEX60gensym112_3003212025, 5);
    }
    
    var colorHEX60gensym112_3003212027 = nodeColor_3019901365(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, 0);
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_3003212027, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym112_3003212025));
    }
    
    if ((colorHEX60gensym112_3003212027 == 2)) {
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    if (false) {
    markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
      }
      
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_3003212027 == 0)) {
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    if (false) {
    markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026, true) == 0)) {
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_3003211932.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
      if (false) {
      markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
      }
      
      if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
      }
      
      if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_3003212027 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym112_3003211932.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym112_3003211932.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym112_3003211932.statsSymbolValue.time = addInt(ctxHEX60gensym112_3003211932.statsSymbolValue.time, elapsed_2466250815(timerHEX60gensym112_3003211936));
    }
  };

  return result_3003211935;

}

function voidValue_3087008460() {
  var result_3087008461 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008461 = nimCopy(result_3087008461, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008461;

}

function some_3003198692(val_3003198694) {
  var result_3003198695 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3003198695.has = true;
    result_3003198695.val = nimCopy(result_3003198695.val, val_3003198694, NTI3087007751);

  return result_3003198695;

}

function none_3003198700() {
  var result_3003198707 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3003198707;

}

function none_3003198697() {
  var result_3003198699 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3003198699 = nimCopy(result_3003198699, none_3003198700(), NTI3003166612);

  return result_3003198699;

}

function getValue_3003198157(ctxHEX60gensym95_3003198158, inputHEX60gensym95_3003198159) {
  var result_3003198165 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3003198242(ctxHEX60gensym95_3003198158.queryCacheValue, inputHEX60gensym95_3003198159)) {
    result_3003198165 = nimCopy(result_3003198165, some_3003198692(HEX5BHEX5D_3003198435(ctxHEX60gensym95_3003198158.queryCacheValue, inputHEX60gensym95_3003198159)), NTI3003166612);
    break BeforeRet;
    }
    
    result_3003198165 = nimCopy(result_3003198165, none_3003198697(), NTI3003166612);
    break BeforeRet;
  };

  return result_3003198165;

}

function isSome_3137339424(self_3137339426) {
  var result_3137339427 = false;

    result_3137339427 = self_3137339426.has;

  return result_3137339427;

}

function isNone_3137339449(self_3137339451) {
  var result_3137339452 = false;

    result_3137339452 = !(self_3137339451.has);

  return result_3137339452;

}

function get_3137339441(self_3137339443) {
  var result_3137339444 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3137339449(self_3137339443)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3137339444 = self_3137339443.val;

  return result_3137339444;

}

function newAstFunctionValue_3087008483(node_3087008484, rev_3087008485) {
  var result_3087008486 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008486 = nimCopy(result_3087008486, {kind: 5, node: node_3087008484, rev: rev_3087008485, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008486;

}

function computeValueImpl_3003122486(ctx_3003122487, node_3003122488) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_3003231790 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym695_3003231792 = (ctx_3003122487.enableLogging || ctx_3003122487.enableQueryLogging);
    if (logQueryHEX60gensym695_3003231792) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym695_3003231792) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122488) || []));
    }
    
    try {
    Label3: {
      var expr_3003231803 = node_3003122488;
      var pos_3003231804 = 0;
      var _ = pos_3003231804;
      if ((expr_3003231803.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_3003122488.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3003231811 = Temporary4;
      result_3003231790 = nimCopy(result_3003231790, {kind: 3, intValue: value_3003231811, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 3)) {
      result_3003231790 = nimCopy(result_3003231790, {kind: 2, stringValue: nimCopy(null, node_3003122488.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 8)) {
      var function_3003231820 = HEX5BHEX5D_2986344532(node_3003122488, 0);
      var functionValue_3003231821 = computeValue_3003198726(ctx_3003122487, function_3003231820, true);
      if ((functionValue_3003231821.kind == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3003231830 = [];
      Label6: {
        var arg_3003231849 = null;
        var colontmp__2952790314 = [];
        colontmp__2952790314 = HEX5BHEX5D_3137341205(node_3003122488.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2952790315 = 0;
        var L_2952790316 = (colontmp__2952790314).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2952790315 < L_2952790316)) break Label8;
              arg_3003231849 = colontmp__2952790314[chckIndx(i_2952790315, 0, (colontmp__2952790314).length - 1)];
              var value_3003231850 = computeValue_3003198726(ctx_3003122487, arg_3003231849, true);
              if ((value_3003231850.kind == 0)) {
              result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_3003231850, NTI3087007751);
              args_3003231830.push(Temporary9);;
              i_2952790315 = addInt(i_2952790315, 1);
              if (!(((colontmp__2952790314).length == L_2952790316))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3003231821.kind == 4)) {
        var Temporary10 = functionValue_3003231821;
        if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_3003231871 = [mnewString(0)];
      fmtRes_3003231871[0].push.apply(fmtRes_3003231871[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3019899100(fmtRes_3003231871, 0, function_3003231820.id, []);
      fmtRes_3003231871[0].push.apply(fmtRes_3003231871[0], [39,32,97,116,32]);;
      formatValue_3087008579(fmtRes_3003231871, 0, node_3003122488, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003231871[0], NTI33554449)]);
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_3003231821;
      if (ConstSet114[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3087007750)); }
      result_3003231790 = nimCopy(result_3003231790, Temporary11.impl(args_3003231830), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3003231821.kind == 5)) {
      var Temporary12 = functionValue_3003231821;
      if (ConstSet122[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
      var fec_3003231886 = getOrCreateFunctionExecutionContext_3003188635(ctx_3003122487, {node: Temporary12.node, arguments: nimCopy(null, args_3003231830, NTI3003185988), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3003231790 = nimCopy(result_3003231790, computeFunctionExecution_3003215035(ctx_3003122487, fec_3003231886), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 7)) {
      if ((len_2986344536(node_3003122488) == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, computeValue_3003198726(ctx_3003122487, last_2986344706(node_3003122488), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 4)) {
      if ((len_2986344536(node_3003122488) == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, computeValue_3003198726(ctx_3003122487, HEX5BHEX5D_2986344532(node_3003122488, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 1)) {
      var id_3003231899 = nimCopy(null, node_3003122488.reff, NTI2046820355);
      var symbols_3003231900 = computeSymbols_3003205356(ctx_3003122487, node_3003122488, true);
      if (contains_3003230776(symbols_3003231900, id_3003231899)) {
      var symbol_3003232067 = (Temporary13 = HEX5BHEX5D_3003231031(symbols_3003231900, id_3003231899), Temporary13)[0][Temporary13[1]];
      result_3003231790 = nimCopy(result_3003231790, computeSymbolValue_3003211931(ctx_3003122487, symbol_3003232067, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 9)) {
      if ((len_2986344536(node_3003122488) < 2)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3003232072 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_3003232072, 1) < len_2986344536(node_3003122488))) break Label15;
            try {
            var condition_3003232077 = HEX5BHEX5D_2986344532(node_3003122488, index_3003232072);
            var trueCase_3003232078 = HEX5BHEX5D_2986344532(node_3003122488, addInt(index_3003232072, 1));
            var conditionValue_3003232079 = computeValue_3003198726(ctx_3003122487, condition_3003232077, true);
            if ((conditionValue_3003232079.kind == 0)) {
            result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003232079.kind == 3))) {
            var fmtRes_3003232092 = [mnewString(0)];
            fmtRes_3003232092[0].push.apply(fmtRes_3003232092[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3003232092, 0, conditionValue_3003232079, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003232092[0], NTI33554449)]);
            result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003232079.intValue == 0))) {
            var trueCaseValue_3003232098 = computeValue_3003198726(ctx_3003122487, trueCase_3003232078, true);
            result_3003231790 = nimCopy(result_3003231790, trueCaseValue_3003232098, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3003232072 = addInt(index_3003232072, 2);
            }
          }
      };
      if (!((modInt(len_2986344536(node_3003122488), 2) == 0))) {
      var falseCaseValue_3003232099 = computeValue_3003198726(ctx_3003122487, last_2986344706(node_3003122488), true);
      result_3003231790 = nimCopy(result_3003231790, falseCaseValue_3003232099, NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 11)) {
        var oHEX60gensym720_3003232106 = getValue_3003198157(ctx_3003122487, node_3003122488);
        if (!isSome_3137339424(oHEX60gensym720_3003232106)) Temporary19 = false; else {          var value_3003232152 = nimCopy(null, get_3137339441(oHEX60gensym720_3003232106), NTI3087007751);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_3003232152.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_3003232152;
      if (ConstSet123[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI3087007750)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_3003232157 = Temporary17;
      result_3003231790 = nimCopy(result_3003231790, newAstFunctionValue_3087008483(node_3003122488, addInt(currentRev_3003232157, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym695_3003231792 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003231790) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym695_3003231792) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003231790;

}

function getOrDefault_3003130832(t_3003130835, key_3003130836, default_3003130837) {
    var Temporary1;

  var result_3003130838 = null;

    var hcHEX60gensym159_3003130841 = [0];
    var indexHEX60gensym159_3003131200 = rawGet_3003130842(t_3003130835, key_3003130836, hcHEX60gensym159_3003130841, 0);
    if ((0 <= indexHEX60gensym159_3003131200)) {
    Temporary1 = t_3003130835.data[chckIndx(indexHEX60gensym159_3003131200, 0, (t_3003130835.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003130837;
    }
    
    result_3003130838 = Temporary1;

  return result_3003130838;

}

function newDoublyLinkedNode_3003131325(value_3003131327) {
  var result_3003131328 = null;

    result_3003131328 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003131328.value = nimCopy(result_3003131328.value, value_3003131327, NTI3003122104);

  return result_3003131328;

}

function mustRehash_3003131684(t_3003131686) {
  var result_3003131687 = false;

    if (!((t_3003131686.counter < (t_3003131686.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003131687 = ((mulInt((t_3003131686.data).length, 2) < mulInt(t_3003131686.counter, 3)) || (subInt((t_3003131686.data).length, t_3003131686.counter) < 4));

  return result_3003131687;

}

function rawInsert_3003132377(t_3003132381, data_3003132382, data_3003132382_Idx, key_3003132383, val_3003132384, hc_3003132385, h_3003132386) {
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field1 = key_3003132383;
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field2 = val_3003132384;
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field0 = hc_3003132385;

  
}

function enlarge_3003131941(t_3003131944) {
    var n_3003131947 = [];
    n_3003131947 = new Array(chckRange(mulInt((t_3003131944.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003131944.data).length, 2), 0, 2147483647) ; ++i) { n_3003131947[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003131944.data; t_3003131944.data = n_3003131947; n_3003131947 = Temporary1;    Label2: {
      var i_3003132045 = 0;
      var colontmp__2952790372 = 0;
      colontmp__2952790372 = (n_3003131947).length - 1;
      var res_2952790373 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790373 <= colontmp__2952790372)) break Label4;
            i_3003132045 = res_2952790373;
            var eh_3003132126 = n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003132126)) {
            var j_3003132130 = (eh_3003132126 & (t_3003131944.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003131944.data[chckIndx(j_3003132130, 0, (t_3003131944.data).length - 1)].Field0)) break Label6;
                  j_3003132130 = nextTry_1308622883(j_3003132130, (t_3003131944.data).length - 1);
                }
            };
            rawInsert_3003132377(t_3003131944, t_3003131944, "data", n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field1, n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field2, eh_3003132126, j_3003132130);
            }
            
            res_2952790373 = addInt(res_2952790373, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003132627(t_3003132630, key_3003132631, hc_3003132632) {
  var result_3003132633 = 0;

  BeforeRet: {
    if (((t_3003132630.data).length == 0)) {
    result_3003132633 = -1;
    break BeforeRet;
    }
    
    var h_3003132718 = (hc_3003132632 & (t_3003132630.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field0)) break Label2;
          if (((t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field0 == hc_3003132632) && (t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field1 == key_3003132631))) {
          result_3003132633 = h_3003132718;
          break BeforeRet;
          }
          
          h_3003132718 = nextTry_1308622883(h_3003132718, (t_3003132630.data).length - 1);
        }
    };
    result_3003132633 = subInt(-1, h_3003132718);
  };

  return result_3003132633;

}

function HEX5BHEX5DHEX3D_3003131416(t_3003131419, key_3003131420, val_3003131421) {
    if (((t_3003131419.data).length == 0)) {
    var correctSizeHEX60gensym164_3003131504 = slotsNeeded_1308622891(32);
    t_3003131419.counter = 0;
    t_3003131419.data = new Array(chckRange(correctSizeHEX60gensym164_3003131504, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_3003131504, 0, 2147483647) ; ++i) { t_3003131419.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003131509 = [0];
    var index_3003131516 = rawGet_3003130842(t_3003131419, key_3003131420, hc_3003131509, 0);
    if ((0 <= index_3003131516)) {
    t_3003131419.data[chckIndx(index_3003131516, 0, (t_3003131419.data).length - 1)].Field2 = val_3003131421;
    }
    else {
      if (((t_3003131419.data).length == 0)) {
      var correctSizeHEX60gensym167_3003131679 = slotsNeeded_1308622891(32);
      t_3003131419.counter = 0;
      t_3003131419.data = new Array(chckRange(correctSizeHEX60gensym167_3003131679, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_3003131679, 0, 2147483647) ; ++i) { t_3003131419.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003131684(t_3003131419)) {
      enlarge_3003131941(t_3003131419);
      index_3003131516 = rawGetKnownHC_3003132627(t_3003131419, key_3003131420, hc_3003131509[0]);
      }
      
      index_3003131516 = subInt(-1, index_3003131516);
      rawInsert_3003132377(t_3003131419, t_3003131419, "data", key_3003131420, val_3003131421, hc_3003131509[0], index_3003131516);
      t_3003131419.counter = addInt(t_3003131419.counter, 1);
    }
    

  
}

function len_3003133447(t_3003133450) {
  var result_3003133451 = 0;

    result_3003133451 = t_3003133450.counter;

  return result_3003133451;

}

function len_3003133364(cache_3003133367) {
  var result_3003133368 = 0;

    result_3003133368 = len_3003133447(cache_3003133367.table);

  return result_3003133368;

}

function del_3003133539(t_3003133542, key_3003133543) {
    var hc_3003133544 = [0];
    var i_3003133551 = rawGet_3003130842(t_3003133542, key_3003133543, hc_3003133544, 0);
    var mskHEX60gensym36_3003133555 = (t_3003133542.data).length - 1;
    if ((0 <= i_3003133551)) {
    t_3003133542.counter = subInt(t_3003133542.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003133562 = i_3003133551;
            var rHEX60gensym36_3003133563 = jHEX60gensym36_3003133562;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0 = 0;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field1 = null;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003133551 = (addInt(i_3003133551, 1) & mskHEX60gensym36_3003133555);
                  if (isEmpty_1308622877(t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003133563 = (t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0 & mskHEX60gensym36_3003133555);
                  if (!(((((rHEX60gensym36_3003133563 <= i_3003133551) && (jHEX60gensym36_3003133562 < rHEX60gensym36_3003133563)) || ((jHEX60gensym36_3003133562 < rHEX60gensym36_3003133563) && (i_3003133551 < jHEX60gensym36_3003133562))) || ((i_3003133551 < jHEX60gensym36_3003133562) && (rHEX60gensym36_3003133563 <= i_3003133551))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003133542.data[chckIndx(jHEX60gensym36_3003133562, 0, (t_3003133542.data).length - 1)] = nimCopy(t_3003133542.data[chckIndx(jHEX60gensym36_3003133562, 0, (t_3003133542.data).length - 1)], t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)], NTI3003122140);
          }
      };
    };
    }
    

  
}

function resize_3003133282(cache_3003133285) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003133285.capacity < len_3003133364(cache_3003133285))) break Label2;
          var t_3003133452 = cache_3003133285.list.tail;
          if (cache_3003133285.recordRemovedKeys) {
          incl_3003127646(cache_3003133285.removedKeys, t_3003133452.value.key);
          }
          
          del_3003133539(cache_3003133285.table, t_3003133452.value.key);
          remove_3003134298(cache_3003133285.list, t_3003133452);
        }
    };

  
}

function addNewNode_3003131317(cache_3003131320, key_3003131321, val_3003131322) {
    var node_3003131352 = newDoublyLinkedNode_3003131325({key: key_3003131321, val: nimCopy(null, val_3003131322, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003131416(cache_3003131320.table, key_3003131321, node_3003131352);
    prepend_3003133027(cache_3003131320.list, node_3003131352);
    if (cache_3003131320.recordRemovedKeys) {
    excl_3003126487(cache_3003131320.removedKeys, key_3003131321);
    }
    
    resize_3003133282(cache_3003131320);

  
}

function HEX5BHEX5DHEX3D_3003130737(cache_3003130740, key_3003130741, val_3003130742) {
    var node_3003131290 = getOrDefault_3003130832(cache_3003130740.table, key_3003130741, null);
    if ((node_3003131290 == null)) {
    addNewNode_3003131317(cache_3003130740, key_3003130741, val_3003130742);
    }
    else {
      node_3003131290.value.val = nimCopy(node_3003131290.value.val, val_3003130742, NTI3087007751);
      remove_3003134298(cache_3003130740.list, node_3003131290);
      prepend_3003133027(cache_3003130740.list, node_3003131290);
    }
    

  
}

function fingerprint_3087008527(value_3087008528) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008529 = [];

  BeforeRet: {
    switch (value_3087008528.kind) {
    case 0:
      result_3087008529 = nimCopy(null, [value_3087008528.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 1:
      result_3087008529 = nimCopy(null, [value_3087008528.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008528;
      if (ConstSet124[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, Temporary1.intValue], NTI3019899213);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008528;
      if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, hash_1325400491(Temporary2.stringValue)], NTI3019899213);
      break BeforeRet;
      break;
    case 4:
      result_3087008529 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008528;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008528;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, hash_2986346803(Temporary3.node), Temporary4.rev], NTI3087008383);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008528;
      if (ConstSet128[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, HEX26_3087008353([value_3087008528.kind], fingerprint_3087008346(Temporary5.typ)), NTI3087008199);
      break BeforeRet;
      break;
    }
  };

  return result_3087008529;

}

function initDoublyLinkedList_3003134765() {
  var result_3003134767 = ({head: null, tail: null});

  return result_3003134767;

}

function initTable_3003134771(initialSize_3003134774) {
  var result_3003134775 = ({data: [], counter: 0});

    var correctSizeHEX60gensym177_3003134777 = slotsNeeded_1308622891(chckRange(initialSize_3003134774, 0, 2147483647));
    result_3003134775.counter = 0;
    result_3003134775.data = new Array(chckRange(correctSizeHEX60gensym177_3003134777, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym177_3003134777, 0, 2147483647) ; ++i) { result_3003134775.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003134775;

}

function newLruCache_3003134755(capacity_3003134758, recordRemovedKeys_3003134759) {
  var result_3003134760 = null;

    result_3003134760 = {capacity: capacity_3003134758, list: initDoublyLinkedList_3003134765(), table: initTable_3003134771(correctSize_3036676117(capacity_3003134758)), recordRemovedKeys: recordRemovedKeys_3003134759, removedKeys: ({data: [], counter: 0})};

  return result_3003134760;

}

function newCache_3003134750(capacity_3003134753) {
  var result_3003134754 = null;

    result_3003134754 = newLruCache_3003134755(capacity_3003134753, false);

  return result_3003134754;

}

function init_3003134745(result_3003134748, result_3003134748_Idx, capacity_3003134749) {
    result_3003134748[result_3003134748_Idx] = newCache_3003134750(capacity_3003134749);

  
}

function some_3003185199(val_3003185201) {
  var result_3003185202 = ({val: null});

    if (!(!((val_3003185201 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003185202.val = val_3003185201;

  return result_3003185202;

}

function rawGet_3003143602(t_3003143605, key_3003143606, hc_3003143607, hc_3003143607_Idx) {
  var result_3003143608 = 0;

  BeforeRet: {
    hc_3003143607[hc_3003143607_Idx] = hash_3003122712(key_3003143606);
    if ((hc_3003143607[hc_3003143607_Idx] == 0)) {
    hc_3003143607[hc_3003143607_Idx] = 314159265;
    }
    
    if (((t_3003143605.data).length == 0)) {
    result_3003143608 = -1;
    break BeforeRet;
    }
    
    var h_3003143697 = (hc_3003143607[hc_3003143607_Idx] & (t_3003143605.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field0)) break Label2;
          if (((t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field0 == hc_3003143607[hc_3003143607_Idx]) && HEX3DHEX3D_3003123049(t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field1, key_3003143606))) {
          result_3003143608 = h_3003143697;
          break BeforeRet;
          }
          
          h_3003143697 = nextTry_1308622883(h_3003143697, (t_3003143605.data).length - 1);
        }
    };
    result_3003143608 = subInt(-1, h_3003143697);
  };

  return result_3003143608;

}

function getOrDefault_3003185473(t_3003185476, key_3003185477, default_3003185478) {
    var Temporary1;

  var result_3003185479 = null;

    var hcHEX60gensym428_3003185482 = [0];
    var indexHEX60gensym428_3003185489 = rawGet_3003143602(t_3003185476, key_3003185477, hcHEX60gensym428_3003185482, 0);
    if ((0 <= indexHEX60gensym428_3003185489)) {
    Temporary1 = t_3003185476.data[chckIndx(indexHEX60gensym428_3003185489, 0, (t_3003185476.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003185478;
    }
    
    result_3003185479 = Temporary1;

  return result_3003185479;

}

function newDoublyLinkedNode_3003185605(value_3003185607) {
  var result_3003185608 = null;

    result_3003185608 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003185608.value = nimCopy(result_3003185608.value, value_3003185607, NTI3003121863);

  return result_3003185608;

}

function mustRehash_3003185946(t_3003185948) {
  var result_3003185949 = false;

    if (!((t_3003185948.counter < (t_3003185948.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003185949 = ((mulInt((t_3003185948.data).length, 2) < mulInt(t_3003185948.counter, 3)) || (subInt((t_3003185948.data).length, t_3003185948.counter) < 4));

  return result_3003185949;

}

function rawInsert_3003186639(t_3003186643, data_3003186644, data_3003186644_Idx, key_3003186645, val_3003186646, hc_3003186647, h_3003186648) {
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field1 = nimCopy(data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field1, key_3003186645, NTI3019898905);
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field2 = val_3003186646;
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field0 = hc_3003186647;

  
}

function enlarge_3003186203(t_3003186206) {
    var n_3003186209 = [];
    n_3003186209 = new Array(chckRange(mulInt((t_3003186206.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003186206.data).length, 2), 0, 2147483647) ; ++i) { n_3003186209[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003186206.data; t_3003186206.data = n_3003186209; n_3003186209 = Temporary1;    Label2: {
      var i_3003186307 = 0;
      var colontmp__2952790383 = 0;
      colontmp__2952790383 = (n_3003186209).length - 1;
      var res_2952790384 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790384 <= colontmp__2952790383)) break Label4;
            i_3003186307 = res_2952790384;
            var eh_3003186388 = n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003186388)) {
            var j_3003186392 = (eh_3003186388 & (t_3003186206.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003186206.data[chckIndx(j_3003186392, 0, (t_3003186206.data).length - 1)].Field0)) break Label6;
                  j_3003186392 = nextTry_1308622883(j_3003186392, (t_3003186206.data).length - 1);
                }
            };
            rawInsert_3003186639(t_3003186206, t_3003186206, "data", n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field1, n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field2, eh_3003186388, j_3003186392);
            }
            
            res_2952790384 = addInt(res_2952790384, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003186889(t_3003186892, key_3003186893, hc_3003186894) {
  var result_3003186895 = 0;

  BeforeRet: {
    if (((t_3003186892.data).length == 0)) {
    result_3003186895 = -1;
    break BeforeRet;
    }
    
    var h_3003186980 = (hc_3003186894 & (t_3003186892.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field0)) break Label2;
          if (((t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field0 == hc_3003186894) && HEX3DHEX3D_3003123049(t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field1, key_3003186893))) {
          result_3003186895 = h_3003186980;
          break BeforeRet;
          }
          
          h_3003186980 = nextTry_1308622883(h_3003186980, (t_3003186892.data).length - 1);
        }
    };
    result_3003186895 = subInt(-1, h_3003186980);
  };

  return result_3003186895;

}

function HEX5BHEX5DHEX3D_3003185678(t_3003185681, key_3003185682, val_3003185683) {
    if (((t_3003185681.data).length == 0)) {
    var correctSizeHEX60gensym431_3003185766 = slotsNeeded_1308622891(32);
    t_3003185681.counter = 0;
    t_3003185681.data = new Array(chckRange(correctSizeHEX60gensym431_3003185766, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym431_3003185766, 0, 2147483647) ; ++i) { t_3003185681.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003185771 = [0];
    var index_3003185778 = rawGet_3003143602(t_3003185681, key_3003185682, hc_3003185771, 0);
    if ((0 <= index_3003185778)) {
    t_3003185681.data[chckIndx(index_3003185778, 0, (t_3003185681.data).length - 1)].Field2 = val_3003185683;
    }
    else {
      if (((t_3003185681.data).length == 0)) {
      var correctSizeHEX60gensym434_3003185941 = slotsNeeded_1308622891(32);
      t_3003185681.counter = 0;
      t_3003185681.data = new Array(chckRange(correctSizeHEX60gensym434_3003185941, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym434_3003185941, 0, 2147483647) ; ++i) { t_3003185681.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003185946(t_3003185681)) {
      enlarge_3003186203(t_3003185681);
      index_3003185778 = rawGetKnownHC_3003186889(t_3003185681, key_3003185682, hc_3003185771[0]);
      }
      
      index_3003185778 = subInt(-1, index_3003185778);
      rawInsert_3003186639(t_3003185681, t_3003185681, "data", key_3003185682, val_3003185683, hc_3003185771[0], index_3003185778);
      t_3003185681.counter = addInt(t_3003185681.counter, 1);
    }
    

  
}

function prepend_3003144582(L_3003144584, n_3003144585) {
    n_3003144585.prev = null;
    n_3003144585.next = L_3003144584.head;
    if (!((L_3003144584.head == null))) {
    if (!((L_3003144584.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003144584.head.prev = n_3003144585;
    }
    
    L_3003144584.head = n_3003144585;
    if ((L_3003144584.tail == null)) {
    L_3003144584.tail = n_3003144585;
    }
    

  
}

function len_3003187500(t_3003187503) {
  var result_3003187504 = 0;

    result_3003187504 = t_3003187503.counter;

  return result_3003187504;

}

function len_3003187417(cache_3003187420) {
  var result_3003187421 = 0;

    result_3003187421 = len_3003187500(cache_3003187420.table);

  return result_3003187421;

}

function del_3003187592(t_3003187595, key_3003187596) {
    var hc_3003187597 = [0];
    var i_3003187604 = rawGet_3003143602(t_3003187595, key_3003187596, hc_3003187597, 0);
    var mskHEX60gensym36_3003187608 = (t_3003187595.data).length - 1;
    if ((0 <= i_3003187604)) {
    t_3003187595.counter = subInt(t_3003187595.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003187615 = i_3003187604;
            var rHEX60gensym36_3003187616 = jHEX60gensym36_3003187615;
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0 = 0;
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field1 = nimCopy(t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003187604 = (addInt(i_3003187604, 1) & mskHEX60gensym36_3003187608);
                  if (isEmpty_1308622877(t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003187616 = (t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0 & mskHEX60gensym36_3003187608);
                  if (!(((((rHEX60gensym36_3003187616 <= i_3003187604) && (jHEX60gensym36_3003187615 < rHEX60gensym36_3003187616)) || ((jHEX60gensym36_3003187615 < rHEX60gensym36_3003187616) && (i_3003187604 < jHEX60gensym36_3003187615))) || ((i_3003187604 < jHEX60gensym36_3003187615) && (rHEX60gensym36_3003187616 <= i_3003187604))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003187595.data[chckIndx(jHEX60gensym36_3003187615, 0, (t_3003187595.data).length - 1)] = nimCopy(t_3003187595.data[chckIndx(jHEX60gensym36_3003187615, 0, (t_3003187595.data).length - 1)], t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)], NTI3003121899);
          }
      };
    };
    }
    

  
}

function remove_3003144254(L_3003144256, n_3003144257) {
    if ((n_3003144257 == L_3003144256.tail)) {
    L_3003144256.tail = n_3003144257.prev;
    }
    
    if ((n_3003144257 == L_3003144256.head)) {
    L_3003144256.head = n_3003144257.next;
    }
    
    if (!((n_3003144257.next == null))) {
    n_3003144257.next.prev = n_3003144257.prev;
    }
    
    if (!((n_3003144257.prev == null))) {
    n_3003144257.prev.next = n_3003144257.next;
    }
    

  
}

function resize_3003187335(cache_3003187338) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003187338.capacity < len_3003187417(cache_3003187338))) break Label2;
          var t_3003187505 = cache_3003187338.list.tail;
          if (cache_3003187338.recordRemovedKeys) {
          incl_3003179214(cache_3003187338.removedKeys, t_3003187505.value.key);
          }
          
          del_3003187592(cache_3003187338.table, t_3003187505.value.key);
          remove_3003144254(cache_3003187338.list, t_3003187505);
        }
    };

  
}

function addNewNode_3003185597(cache_3003185600, key_3003185601, val_3003185602) {
    var node_3003185614 = newDoublyLinkedNode_3003185605({key: nimCopy(null, key_3003185601, NTI3019898905), val: val_3003185602});
    HEX5BHEX5DHEX3D_3003185678(cache_3003185600.table, key_3003185601, node_3003185614);
    prepend_3003144582(cache_3003185600.list, node_3003185614);
    if (cache_3003185600.recordRemovedKeys) {
    excl_3003178043(cache_3003185600.removedKeys, key_3003185601);
    }
    
    resize_3003187335(cache_3003185600);

  
}

function HEX5BHEX5DHEX3D_3003185378(cache_3003185381, key_3003185382, val_3003185383) {
    var node_3003185570 = getOrDefault_3003185473(cache_3003185381.table, key_3003185382, null);
    if ((node_3003185570 == null)) {
    addNewNode_3003185597(cache_3003185381, key_3003185382, val_3003185383);
    }
    else {
      node_3003185570.value.val = val_3003185383;
      remove_3003144254(cache_3003185381.list, node_3003185570);
      prepend_3003144582(cache_3003185381.list, node_3003185570);
    }
    

  
}

function newSymbol_3003191823(ctxHEX60gensym86_3003191824, dataHEX60gensym86_3003191825) {
  var result_3003191826 = null;

  BeforeRet: {
    var itemHEX60gensym86_3003191827 = getItem_3003185222(dataHEX60gensym86_3003191825);
    var keyHEX60gensym86_3003191828 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_3003191827, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym86_3003191824.depGraph.changed, keyHEX60gensym86_3003191828, ctxHEX60gensym86_3003191824.depGraph.revision);
    HEX5BHEX5DHEX3D_3003185378(ctxHEX60gensym86_3003191824.itemsSymbol, itemHEX60gensym86_3003191827, dataHEX60gensym86_3003191825);
    result_3003191826 = dataHEX60gensym86_3003191825;
    break BeforeRet;
  };

  return result_3003191826;

}

function none_3003185215() {
  var result_3003185221 = ({val: null});

  return result_3003185221;

}

function none_3003185212() {
  var result_3003185214 = ({val: null});

    result_3003185214 = nimCopy(result_3003185214, none_3003185215(), NTI3087008904);

  return result_3003185214;

}

function computeSymbolImpl_3003122489(ctx_3003122490, node_3003122491) {
      var Temporary4;

  var result_3003232164 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym721_3003232166 = (ctx_3003122490.enableLogging || ctx_3003122490.enableQueryLogging);
    if (logQueryHEX60gensym721_3003232166) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym721_3003232166) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122491) || []));
    }
    
    try {
    Label3: {
      var expr_3003232237 = node_3003122491;
      var pos_3003232238 = 0;
      var _ = pos_3003232238;
      if ((expr_3003232237.kind == 1)) {
      var symbols_3003232245 = computeSymbols_3003205356(ctx_3003122490, node_3003122491, true);
      if (contains_3003230776(symbols_3003232245, node_3003122491.reff)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199((Temporary4 = HEX5BHEX5D_3003231031(symbols_3003232245, node_3003122491.reff), Temporary4)[0][Temporary4[1]]), NTI3087008904);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3003232237.kind == 4)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2046820355), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
      if ((expr_3003232237.kind == 5)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2046820355), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
      if ((expr_3003232237.kind == 6)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2046820355), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
        var fmtRes_3003232440 = [mnewString(0)];
        fmtRes_3003232440[0].push.apply(fmtRes_3003232440[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008579(fmtRes_3003232440, 0, node_3003122491, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003232440[0], NTI33554449)]);
        result_3003232164 = nimCopy(result_3003232164, none_3003185212(), NTI3087008904);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym721_3003232166 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3003175100(result_3003232164) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym721_3003232166) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003232164;

}

function getOrDefault_3003135144(t_3003135147, key_3003135148, default_3003135149) {
    var Temporary1;

  var result_3003135150 = null;

    var hcHEX60gensym180_3003135153 = [0];
    var indexHEX60gensym180_3003135512 = rawGet_3003135154(t_3003135147, key_3003135148, hcHEX60gensym180_3003135153, 0);
    if ((0 <= indexHEX60gensym180_3003135512)) {
    Temporary1 = t_3003135147.data[chckIndx(indexHEX60gensym180_3003135512, 0, (t_3003135147.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003135149;
    }
    
    result_3003135150 = Temporary1;

  return result_3003135150;

}

function newDoublyLinkedNode_3003135637(value_3003135639) {
  var result_3003135640 = null;

    result_3003135640 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_3003135640.value = nimCopy(result_3003135640.value, value_3003135639, NTI3003122175);

  return result_3003135640;

}

function mustRehash_3003135987(t_3003135989) {
  var result_3003135990 = false;

    if (!((t_3003135989.counter < (t_3003135989.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003135990 = ((mulInt((t_3003135989.data).length, 2) < mulInt(t_3003135989.counter, 3)) || (subInt((t_3003135989.data).length, t_3003135989.counter) < 4));

  return result_3003135990;

}

function rawInsert_3003136680(t_3003136684, data_3003136685, data_3003136685_Idx, key_3003136686, val_3003136687, hc_3003136688, h_3003136689) {
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field1 = key_3003136686;
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field2 = val_3003136687;
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field0 = hc_3003136688;

  
}

function enlarge_3003136244(t_3003136247) {
    var n_3003136250 = [];
    n_3003136250 = new Array(chckRange(mulInt((t_3003136247.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003136247.data).length, 2), 0, 2147483647) ; ++i) { n_3003136250[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003136247.data; t_3003136247.data = n_3003136250; n_3003136250 = Temporary1;    Label2: {
      var i_3003136348 = 0;
      var colontmp__2952790392 = 0;
      colontmp__2952790392 = (n_3003136250).length - 1;
      var res_2952790393 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790393 <= colontmp__2952790392)) break Label4;
            i_3003136348 = res_2952790393;
            var eh_3003136429 = n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003136429)) {
            var j_3003136433 = (eh_3003136429 & (t_3003136247.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003136247.data[chckIndx(j_3003136433, 0, (t_3003136247.data).length - 1)].Field0)) break Label6;
                  j_3003136433 = nextTry_1308622883(j_3003136433, (t_3003136247.data).length - 1);
                }
            };
            rawInsert_3003136680(t_3003136247, t_3003136247, "data", n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field1, n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field2, eh_3003136429, j_3003136433);
            }
            
            res_2952790393 = addInt(res_2952790393, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003136930(t_3003136933, key_3003136934, hc_3003136935) {
  var result_3003136936 = 0;

  BeforeRet: {
    if (((t_3003136933.data).length == 0)) {
    result_3003136936 = -1;
    break BeforeRet;
    }
    
    var h_3003137021 = (hc_3003136935 & (t_3003136933.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field0)) break Label2;
          if (((t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field0 == hc_3003136935) && (t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field1 == key_3003136934))) {
          result_3003136936 = h_3003137021;
          break BeforeRet;
          }
          
          h_3003137021 = nextTry_1308622883(h_3003137021, (t_3003136933.data).length - 1);
        }
    };
    result_3003136936 = subInt(-1, h_3003137021);
  };

  return result_3003136936;

}

function HEX5BHEX5DHEX3D_3003135719(t_3003135722, key_3003135723, val_3003135724) {
    if (((t_3003135722.data).length == 0)) {
    var correctSizeHEX60gensym185_3003135807 = slotsNeeded_1308622891(32);
    t_3003135722.counter = 0;
    t_3003135722.data = new Array(chckRange(correctSizeHEX60gensym185_3003135807, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym185_3003135807, 0, 2147483647) ; ++i) { t_3003135722.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003135812 = [0];
    var index_3003135819 = rawGet_3003135154(t_3003135722, key_3003135723, hc_3003135812, 0);
    if ((0 <= index_3003135819)) {
    t_3003135722.data[chckIndx(index_3003135819, 0, (t_3003135722.data).length - 1)].Field2 = val_3003135724;
    }
    else {
      if (((t_3003135722.data).length == 0)) {
      var correctSizeHEX60gensym188_3003135982 = slotsNeeded_1308622891(32);
      t_3003135722.counter = 0;
      t_3003135722.data = new Array(chckRange(correctSizeHEX60gensym188_3003135982, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_3003135982, 0, 2147483647) ; ++i) { t_3003135722.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003135987(t_3003135722)) {
      enlarge_3003136244(t_3003135722);
      index_3003135819 = rawGetKnownHC_3003136930(t_3003135722, key_3003135723, hc_3003135812[0]);
      }
      
      index_3003135819 = subInt(-1, index_3003135819);
      rawInsert_3003136680(t_3003135722, t_3003135722, "data", key_3003135723, val_3003135724, hc_3003135812[0], index_3003135819);
      t_3003135722.counter = addInt(t_3003135722.counter, 1);
    }
    

  
}

function len_3003137750(t_3003137753) {
  var result_3003137754 = 0;

    result_3003137754 = t_3003137753.counter;

  return result_3003137754;

}

function len_3003137667(cache_3003137670) {
  var result_3003137671 = 0;

    result_3003137671 = len_3003137750(cache_3003137670.table);

  return result_3003137671;

}

function del_3003137842(t_3003137845, key_3003137846) {
    var hc_3003137847 = [0];
    var i_3003137854 = rawGet_3003135154(t_3003137845, key_3003137846, hc_3003137847, 0);
    var mskHEX60gensym36_3003137858 = (t_3003137845.data).length - 1;
    if ((0 <= i_3003137854)) {
    t_3003137845.counter = subInt(t_3003137845.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003137865 = i_3003137854;
            var rHEX60gensym36_3003137866 = jHEX60gensym36_3003137865;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0 = 0;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field1 = null;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003137854 = (addInt(i_3003137854, 1) & mskHEX60gensym36_3003137858);
                  if (isEmpty_1308622877(t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003137866 = (t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0 & mskHEX60gensym36_3003137858);
                  if (!(((((rHEX60gensym36_3003137866 <= i_3003137854) && (jHEX60gensym36_3003137865 < rHEX60gensym36_3003137866)) || ((jHEX60gensym36_3003137865 < rHEX60gensym36_3003137866) && (i_3003137854 < jHEX60gensym36_3003137865))) || ((i_3003137854 < jHEX60gensym36_3003137865) && (rHEX60gensym36_3003137866 <= i_3003137854))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003137845.data[chckIndx(jHEX60gensym36_3003137865, 0, (t_3003137845.data).length - 1)] = nimCopy(t_3003137845.data[chckIndx(jHEX60gensym36_3003137865, 0, (t_3003137845.data).length - 1)], t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)], NTI3003122211);
          }
      };
    };
    }
    

  
}

function resize_3003137585(cache_3003137588) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003137588.capacity < len_3003137667(cache_3003137588))) break Label2;
          var t_3003137755 = cache_3003137588.list.tail;
          if (cache_3003137588.recordRemovedKeys) {
          incl_3003127646(cache_3003137588.removedKeys, t_3003137755.value.key);
          }
          
          del_3003137842(cache_3003137588.table, t_3003137755.value.key);
          remove_3003138601(cache_3003137588.list, t_3003137755);
        }
    };

  
}

function addNewNode_3003135629(cache_3003135632, key_3003135633, val_3003135634) {
    var node_3003135655 = newDoublyLinkedNode_3003135637({key: key_3003135633, val: nimCopy(null, val_3003135634, NTI3087008904)});
    HEX5BHEX5DHEX3D_3003135719(cache_3003135632.table, key_3003135633, node_3003135655);
    prepend_3003137330(cache_3003135632.list, node_3003135655);
    if (cache_3003135632.recordRemovedKeys) {
    excl_3003126487(cache_3003135632.removedKeys, key_3003135633);
    }
    
    resize_3003137585(cache_3003135632);

  
}

function HEX5BHEX5DHEX3D_3003135049(cache_3003135052, key_3003135053, val_3003135054) {
    var node_3003135602 = getOrDefault_3003135144(cache_3003135052.table, key_3003135053, null);
    if ((node_3003135602 == null)) {
    addNewNode_3003135629(cache_3003135052, key_3003135053, val_3003135054);
    }
    else {
      node_3003135602.value.val = nimCopy(node_3003135602.value.val, val_3003135054, NTI3087008904);
      remove_3003138601(cache_3003135052.list, node_3003135602);
      prepend_3003137330(cache_3003135052.list, node_3003135602);
    }
    

  
}

function fingerprint_3087008937(symbol_3087008938) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008939 = [];

    switch (symbol_3087008938.kind) {
    case 0:
      var Temporary1 = symbol_3087008938;
      if (ConstSet129[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008939 = nimCopy(null, [hash_2046820596(symbol_3087008938.id), hash_1325400491(symbol_3087008938.name), symbol_3087008938.kind, hash_2046820596(Temporary1.node.id)], NTI3087008653);
      break;
    case 1:
      var Temporary2 = symbol_3087008938;
      if (ConstSet130[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008938;
      if (ConstSet131[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008938;
      if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008938;
      if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008939 = nimCopy(null, HEX26_3087008353(HEX26_3087008353([hash_2046820596(symbol_3087008938.id), hash_1325400491(symbol_3087008938.name), symbol_3087008938.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008346(Temporary4.typ)), fingerprint_3087008527(Temporary5.value)), NTI3087008199);
      break;
    }

  return result_3087008939;

}

function fingerprint_3087009331(symbol_3087009336) {
      var Temporary1;

  var result_3087009337 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009340 = nimCopy(null, symbol_3087009336, NTI3087008904);
      if (!isSome_3087009345(oHEX60gensym27_3087009340)) Temporary1 = false; else {        var s_3087009391 = get_3087009365(oHEX60gensym27_3087009340);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009337 = nimCopy(null, fingerprint_3087008937(s_3087009391), NTI3019898904);
    break BeforeRet;
    }
    
    result_3087009337 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009337;

}

function initDoublyLinkedList_3003139068() {
  var result_3003139070 = ({head: null, tail: null});

  return result_3003139070;

}

function initTable_3003139074(initialSize_3003139077) {
  var result_3003139078 = ({data: [], counter: 0});

    var correctSizeHEX60gensym198_3003139080 = slotsNeeded_1308622891(chckRange(initialSize_3003139077, 0, 2147483647));
    result_3003139078.counter = 0;
    result_3003139078.data = new Array(chckRange(correctSizeHEX60gensym198_3003139080, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym198_3003139080, 0, 2147483647) ; ++i) { result_3003139078.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003139078;

}

function newLruCache_3003139058(capacity_3003139061, recordRemovedKeys_3003139062) {
  var result_3003139063 = null;

    result_3003139063 = {capacity: capacity_3003139061, list: initDoublyLinkedList_3003139068(), table: initTable_3003139074(correctSize_3036676117(capacity_3003139061)), recordRemovedKeys: recordRemovedKeys_3003139062, removedKeys: ({data: [], counter: 0})};

  return result_3003139063;

}

function newCache_3003139053(capacity_3003139056) {
  var result_3003139057 = null;

    result_3003139057 = newLruCache_3003139058(capacity_3003139056, false);

  return result_3003139057;

}

function init_3003139048(result_3003139051, result_3003139051_Idx, capacity_3003139052) {
    result_3003139051[result_3003139051_Idx] = newCache_3003139053(capacity_3003139052);

  
}

function initTable_3003174248(initialSize_3003174251) {
  var result_3003174252 = ({data: [], counter: 0});

    var correctSizeHEX60gensym369_3003174254 = slotsNeeded_1308622891(chckRange(initialSize_3003174251, 0, 2147483647));
    result_3003174252.counter = 0;
    result_3003174252.data = new Array(chckRange(correctSizeHEX60gensym369_3003174254, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_3003174254, 0, 2147483647) ; ++i) { result_3003174252.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3003174252;

}

function newTable_3003219328(initialSize_3003219331) {
  var result_3003219332 = null;

    result_3003219332 = ({data: [], counter: 0});
    result_3003219332 = nimCopy(result_3003219332, initTable_3003174248(initialSize_3003219331), NTI3087008712);

  return result_3003219332;

}

function none_2986344655() {
  var result_2986344661 = ({val: null});

  return result_2986344661;

}

function none_2986344652() {
  var result_2986344654 = ({val: null});

    result_2986344654 = nimCopy(result_2986344654, none_2986344655(), NTI2986344567);

  return result_2986344654;

}

function some_2986344674(val_2986344676) {
  var result_2986344677 = ({val: null});

    if (!(!((val_2986344676 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986344677.val = val_2986344676;

  return result_2986344677;

}

function findWithParentRec_2986346373(node_2986346374, kind_2986346375) {
  var result_2986346377 = ({val: null});

  BeforeRet: {
    if ((node_2986346374.parent == null)) {
    result_2986346377 = nimCopy(result_2986346377, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    if ((node_2986346374.parent.kind == kind_2986346375)) {
    result_2986346377 = nimCopy(result_2986346377, some_2986344674(node_2986346374), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986346377 = nimCopy(result_2986346377, findWithParentRec_2986346373(node_2986346374.parent, kind_2986346375), NTI2986344567);
    break BeforeRet;
  };

  return result_2986346377;

}

function isSome_2986346330(self_2986346332) {
  var result_2986346333 = false;

    result_2986346333 = !((self_2986346332.val == null));

  return result_2986346333;

}

function isNone_2986346358(self_2986346360) {
  var result_2986346361 = false;

    result_2986346361 = (self_2986346360.val == null);

  return result_2986346361;

}

function get_2986346350(self_2986346352) {
  var result_2986346353 = null;

    if (isNone_2986346358(self_2986346352)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2986346353 = self_2986346352["val"];

  return result_2986346353;

}

function mustRehash_3003220125(t_3003220127) {
  var result_3003220128 = false;

    if (!((t_3003220127.counter < (t_3003220127.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003220128 = ((mulInt((t_3003220127.data).length, 2) < mulInt(t_3003220127.counter, 3)) || (subInt((t_3003220127.data).length, t_3003220127.counter) < 4));

  return result_3003220128;

}

function rawInsert_3003220818(t_3003220822, data_3003220823, data_3003220823_Idx, key_3003220824, val_3003220825, hc_3003220826, h_3003220827) {
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field1 = nimCopy(data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field1, key_3003220824, NTI2046820355);
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field2 = val_3003220825;
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field0 = hc_3003220826;

  
}

function enlarge_3003220382(t_3003220385) {
    var n_3003220388 = [];
    n_3003220388 = new Array(chckRange(mulInt((t_3003220385.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003220385.data).length, 2), 0, 2147483647) ; ++i) { n_3003220388[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3003220385.data; t_3003220385.data = n_3003220388; n_3003220388 = Temporary1;    Label2: {
      var i_3003220486 = 0;
      var colontmp__2952790437 = 0;
      colontmp__2952790437 = (n_3003220388).length - 1;
      var res_2952790438 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790438 <= colontmp__2952790437)) break Label4;
            i_3003220486 = res_2952790438;
            var eh_3003220567 = n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003220567)) {
            var j_3003220571 = (eh_3003220567 & (t_3003220385.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003220385.data[chckIndx(j_3003220571, 0, (t_3003220385.data).length - 1)].Field0)) break Label6;
                  j_3003220571 = nextTry_1308622883(j_3003220571, (t_3003220385.data).length - 1);
                }
            };
            rawInsert_3003220818(t_3003220385, t_3003220385, "data", n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field1, n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field2, eh_3003220567, j_3003220571);
            }
            
            res_2952790438 = addInt(res_2952790438, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003221068(t_3003221071, key_3003221072, hc_3003221073) {
  var result_3003221074 = 0;

  BeforeRet: {
    if (((t_3003221071.data).length == 0)) {
    result_3003221074 = -1;
    break BeforeRet;
    }
    
    var h_3003221159 = (hc_3003221073 & (t_3003221071.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field0)) break Label2;
          if (((t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field0 == hc_3003221073) && HEX3DHEX3D_2046820592(t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field1, key_3003221072))) {
          result_3003221074 = h_3003221159;
          break BeforeRet;
          }
          
          h_3003221159 = nextTry_1308622883(h_3003221159, (t_3003221071.data).length - 1);
        }
    };
    result_3003221074 = subInt(-1, h_3003221159);
  };

  return result_3003221074;

}

function HEX5BHEX5DHEX3D_3003219527(t_3003219530, key_3003219531, val_3003219532) {
    if (((t_3003219530.data).length == 0)) {
    var correctSizeHEX60gensym540_3003219616 = slotsNeeded_1308622891(32);
    t_3003219530.counter = 0;
    t_3003219530.data = new Array(chckRange(correctSizeHEX60gensym540_3003219616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym540_3003219616, 0, 2147483647) ; ++i) { t_3003219530.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3003219621 = [0];
    var index_3003219957 = rawGet_3003219622(t_3003219530, key_3003219531, hc_3003219621, 0);
    if ((0 <= index_3003219957)) {
    t_3003219530.data[chckIndx(index_3003219957, 0, (t_3003219530.data).length - 1)].Field2 = val_3003219532;
    }
    else {
      if (((t_3003219530.data).length == 0)) {
      var correctSizeHEX60gensym545_3003220120 = slotsNeeded_1308622891(32);
      t_3003219530.counter = 0;
      t_3003219530.data = new Array(chckRange(correctSizeHEX60gensym545_3003220120, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym545_3003220120, 0, 2147483647) ; ++i) { t_3003219530.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3003220125(t_3003219530)) {
      enlarge_3003220382(t_3003219530);
      index_3003219957 = rawGetKnownHC_3003221068(t_3003219530, key_3003219531, hc_3003219621[0]);
      }
      
      index_3003219957 = subInt(-1, index_3003219957);
      rawInsert_3003220818(t_3003219530, t_3003219530, "data", key_3003219531, val_3003219532, hc_3003219621[0], index_3003219957);
      t_3003219530.counter = addInt(t_3003219530.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3003232684(t_3003232687, key_3003232688, val_3003232689) {
    HEX5BHEX5DHEX3D_3003219527(t_3003232687, key_3003232688, val_3003232689);

  
}

function base_2986344542(node_2986344543) {
  var result_2986344544 = null;

  BeforeRet: {
    if ((node_2986344543.parent == null)) {
    result_2986344544 = node_2986344543;
    break BeforeRet;
    }
    
    result_2986344544 = base_2986344542(node_2986344543.parent);
    break BeforeRet;
  };

  return result_2986344544;

}

function len_3003233372(t_3003233375) {
  var result_3003233376 = 0;

    result_3003233376 = t_3003233375.counter;

  return result_3003233376;

}

function computeSymbolsImpl_3003122493(ctx_3003122494, node_3003122495) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3003232479 = null;

    var logQueryHEX60gensym732_3003232481 = (ctx_3003122494.enableLogging || ctx_3003122494.enableQueryLogging);
    if (logQueryHEX60gensym732_3003232481) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym732_3003232481) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122495) || []));
    }
    
    try {
    result_3003232479 = newTable_3003219328(32);
      var oHEX60gensym733_3003232563 = findWithParentRec_2986346373(node_3003122495, 7);
      if (!isSome_2986346330(oHEX60gensym733_3003232563)) Temporary4 = false; else {        var parentInNodeList_3003232609 = get_2986346350(oHEX60gensym733_3003232563);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3003232609.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3003232614 = computeSymbols_3003205356(ctx_3003122494, parentInNodeList_3003232609.parent, true);
    Label5: {
      var id_3003232619 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3003232620 = null;
      var L_2952790400 = len_3087009054(parentSymbols_3003232614);
      Label6: {
        var h_2952790402 = 0;
        var colontmp__2952790403 = 0;
        colontmp__2952790403 = (parentSymbols_3003232614.data).length - 1;
        var res_2952790404 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2952790404 <= colontmp__2952790403)) break Label8;
              h_2952790402 = res_2952790404;
              if (isFilled_1308622880(parentSymbols_3003232614.data[chckIndx(h_2952790402, 0, (parentSymbols_3003232614.data).length - 1)].Field0)) {
              var colontmp__2952790407 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3003232614.data[chckIndx(h_2952790402, 0, (parentSymbols_3003232614.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_3003232614.data[chckIndx(h_2952790402, 0, (parentSymbols_3003232614.data).length - 1)].Field2}, NTI3087008730);
              id_3003232619 = nimCopy(id_3003232619, colontmp__2952790407["Field0"], NTI2046820355);
              sym_3003232620 = colontmp__2952790407["Field1"];
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, id_3003232619, sym_3003232620);
              if (!((len_3087009054(parentSymbols_3003232614) == L_2952790400))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790404 = addInt(res_2952790404, 1);
            }
        };
      };
    };
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(parentInNodeList_3003232609.parent), -1);
    var bIsOrderDependent_3003232843 = !((parentInNodeList_3003232609.parent.parent == null));
    Label9: {
      var child_3003232847 = null;
      var i_2952790410 = 0;
      var L_2952790411 = (parentInNodeList_3003232609.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2952790410 < L_2952790411)) break Label11;
            child_3003232847 = parentInNodeList_3003232609.parent.children[chckIndx(i_2952790410, 0, (parentInNodeList_3003232609.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3003232843 && (child_3003232847 == parentInNodeList_3003232609))) {
              break Label9;
              }
              
              if (((!((child_3003232847.kind == 4)) && !((child_3003232847.kind == 5))) && !((child_3003232847.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym739_3003232866 = computeSymbol_3003201856(ctx_3003122494, child_3003232847, true);
                if (!isSome_3087009345(oHEX60gensym739_3003232866)) Temporary13 = false; else {                  var symbol_3003232912 = get_3087009365(oHEX60gensym739_3003232866);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003232912.id, symbol_3003232912);
              }
              
            };
            i_2952790410 = addInt(i_2952790410, 1);
            if (!(((parentInNodeList_3003232609.parent.children).length == L_2952790411))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym740_3003232984 = findWithParentRec_2986346373(node_3003122495, 11);
      if (!isSome_2986346330(oHEX60gensym740_3003232984)) Temporary14 = false; else {        var parentInFunctionDef_3003233030 = get_2986346350(oHEX60gensym740_3003232984);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3003233031 = parentInFunctionDef_3003233030.parent;
    if ((0 < len_2986344536(functionDefinition_3003233031))) {
    var params_3003233032 = HEX5BHEX5D_2986344532(functionDefinition_3003233031, 0);
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(params_3003233032), -1);
    Label15: {
      var param_3003233036 = null;
      var i_2952790414 = 0;
      var L_2952790415 = (params_3003233032.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2952790414 < L_2952790415)) break Label17;
            param_3003233036 = params_3003233032.children[chckIndx(i_2952790414, 0, (params_3003233032.children).length - 1)];
            recordDependency_3003175740(ctx_3003122494, getItem_3003175953(param_3003233036), -1);
              var oHEX60gensym742_3003233039 = computeSymbol_3003201856(ctx_3003122494, param_3003233036, true);
              if (!isSome_3087009345(oHEX60gensym742_3003233039)) Temporary18 = false; else {                var symbol_3003233085 = get_3087009365(oHEX60gensym742_3003233039);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3003232684(result_3003232479, param_3003233036.id, symbol_3003233085);
            }
            
            i_2952790414 = addInt(i_2952790414, 1);
            if (!(((params_3003233032.children).length == L_2952790415))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3003233155 = base_2986344542(node_3003122495);
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(root_3003233155), -1);
    Label19: {
      var child_3003233159 = null;
      var i_2952790419 = 0;
      var L_2952790420 = (root_3003233155.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2952790419 < L_2952790420)) break Label21;
            child_3003233159 = root_3003233155.children[chckIndx(i_2952790419, 0, (root_3003233155.children).length - 1)];
            Label22: {
              if (((!((child_3003233159.kind == 4)) && !((child_3003233159.kind == 5))) && !((child_3003233159.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym746_3003233174 = computeSymbol_3003201856(ctx_3003122494, child_3003233159, true);
                if (!isSome_3087009345(oHEX60gensym746_3003233174)) Temporary23 = false; else {                  var symbol_3003233220 = get_3087009365(oHEX60gensym746_3003233174);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003233220.id, symbol_3003233220);
              }
              
            };
            i_2952790419 = addInt(i_2952790419, 1);
            if (!(((root_3003233155.children).length == L_2952790420))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3003233713 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3003233714 = null;
      var L_2952790427 = len_3003233372(ctx_3003122494.globalScope);
      Label25: {
        var h_2952790429 = 0;
        var colontmp__2952790430 = 0;
        colontmp__2952790430 = (ctx_3003122494.globalScope.data).length - 1;
        var res_2952790431 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2952790431 <= colontmp__2952790430)) break Label27;
              h_2952790429 = res_2952790431;
              if (isFilled_1308622880(ctx_3003122494.globalScope.data[chckIndx(h_2952790429, 0, (ctx_3003122494.globalScope.data).length - 1)].Field0)) {
              var colontmp__2952790434 = nimCopy(null, {Field0: nimCopy(null, ctx_3003122494.globalScope.data[chckIndx(h_2952790429, 0, (ctx_3003122494.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_3003122494.globalScope.data[chckIndx(h_2952790429, 0, (ctx_3003122494.globalScope.data).length - 1)].Field2}, NTI3003186895);
              key_3003233713 = nimCopy(key_3003233713, colontmp__2952790434["Field0"], NTI2046820355);
              symbol_3003233714 = colontmp__2952790434["Field1"];
              recordDependency_3003175740(ctx_3003122494, getItem_3003185222(symbol_3003233714), -1);
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003233714.id, symbol_3003233714);
              if (!((len_3003233372(ctx_3003122494.globalScope) == L_2952790427))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790431 = addInt(res_2952790431, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym732_3003232481 && false)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3003175266(result_3003232479) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym732_3003232481) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }

  return result_3003232479;

}

function getOrDefault_3003139448(t_3003139451, key_3003139452, default_3003139453) {
    var Temporary1;

  var result_3003139454 = null;

    var hcHEX60gensym201_3003139457 = [0];
    var indexHEX60gensym201_3003139816 = rawGet_3003139458(t_3003139451, key_3003139452, hcHEX60gensym201_3003139457, 0);
    if ((0 <= indexHEX60gensym201_3003139816)) {
    Temporary1 = t_3003139451.data[chckIndx(indexHEX60gensym201_3003139816, 0, (t_3003139451.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003139453;
    }
    
    result_3003139454 = Temporary1;

  return result_3003139454;

}

function newDoublyLinkedNode_3003139941(value_3003139943) {
  var result_3003139944 = null;

    result_3003139944 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003139944.value = nimCopy(result_3003139944.value, value_3003139943, NTI3003122248);

  return result_3003139944;

}

function mustRehash_3003140291(t_3003140293) {
  var result_3003140294 = false;

    if (!((t_3003140293.counter < (t_3003140293.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003140294 = ((mulInt((t_3003140293.data).length, 2) < mulInt(t_3003140293.counter, 3)) || (subInt((t_3003140293.data).length, t_3003140293.counter) < 4));

  return result_3003140294;

}

function rawInsert_3003140984(t_3003140988, data_3003140989, data_3003140989_Idx, key_3003140990, val_3003140991, hc_3003140992, h_3003140993) {
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field1 = key_3003140990;
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field2 = val_3003140991;
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field0 = hc_3003140992;

  
}

function enlarge_3003140548(t_3003140551) {
    var n_3003140554 = [];
    n_3003140554 = new Array(chckRange(mulInt((t_3003140551.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003140551.data).length, 2), 0, 2147483647) ; ++i) { n_3003140554[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003140551.data; t_3003140551.data = n_3003140554; n_3003140554 = Temporary1;    Label2: {
      var i_3003140652 = 0;
      var colontmp__2952790443 = 0;
      colontmp__2952790443 = (n_3003140554).length - 1;
      var res_2952790444 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790444 <= colontmp__2952790443)) break Label4;
            i_3003140652 = res_2952790444;
            var eh_3003140733 = n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003140733)) {
            var j_3003140737 = (eh_3003140733 & (t_3003140551.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003140551.data[chckIndx(j_3003140737, 0, (t_3003140551.data).length - 1)].Field0)) break Label6;
                  j_3003140737 = nextTry_1308622883(j_3003140737, (t_3003140551.data).length - 1);
                }
            };
            rawInsert_3003140984(t_3003140551, t_3003140551, "data", n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field1, n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field2, eh_3003140733, j_3003140737);
            }
            
            res_2952790444 = addInt(res_2952790444, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003141234(t_3003141237, key_3003141238, hc_3003141239) {
  var result_3003141240 = 0;

  BeforeRet: {
    if (((t_3003141237.data).length == 0)) {
    result_3003141240 = -1;
    break BeforeRet;
    }
    
    var h_3003141325 = (hc_3003141239 & (t_3003141237.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field0)) break Label2;
          if (((t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field0 == hc_3003141239) && (t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field1 == key_3003141238))) {
          result_3003141240 = h_3003141325;
          break BeforeRet;
          }
          
          h_3003141325 = nextTry_1308622883(h_3003141325, (t_3003141237.data).length - 1);
        }
    };
    result_3003141240 = subInt(-1, h_3003141325);
  };

  return result_3003141240;

}

function HEX5BHEX5DHEX3D_3003140023(t_3003140026, key_3003140027, val_3003140028) {
    if (((t_3003140026.data).length == 0)) {
    var correctSizeHEX60gensym206_3003140111 = slotsNeeded_1308622891(32);
    t_3003140026.counter = 0;
    t_3003140026.data = new Array(chckRange(correctSizeHEX60gensym206_3003140111, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym206_3003140111, 0, 2147483647) ; ++i) { t_3003140026.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003140116 = [0];
    var index_3003140123 = rawGet_3003139458(t_3003140026, key_3003140027, hc_3003140116, 0);
    if ((0 <= index_3003140123)) {
    t_3003140026.data[chckIndx(index_3003140123, 0, (t_3003140026.data).length - 1)].Field2 = val_3003140028;
    }
    else {
      if (((t_3003140026.data).length == 0)) {
      var correctSizeHEX60gensym209_3003140286 = slotsNeeded_1308622891(32);
      t_3003140026.counter = 0;
      t_3003140026.data = new Array(chckRange(correctSizeHEX60gensym209_3003140286, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym209_3003140286, 0, 2147483647) ; ++i) { t_3003140026.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003140291(t_3003140026)) {
      enlarge_3003140548(t_3003140026);
      index_3003140123 = rawGetKnownHC_3003141234(t_3003140026, key_3003140027, hc_3003140116[0]);
      }
      
      index_3003140123 = subInt(-1, index_3003140123);
      rawInsert_3003140984(t_3003140026, t_3003140026, "data", key_3003140027, val_3003140028, hc_3003140116[0], index_3003140123);
      t_3003140026.counter = addInt(t_3003140026.counter, 1);
    }
    

  
}

function len_3003142054(t_3003142057) {
  var result_3003142058 = 0;

    result_3003142058 = t_3003142057.counter;

  return result_3003142058;

}

function len_3003141971(cache_3003141974) {
  var result_3003141975 = 0;

    result_3003141975 = len_3003142054(cache_3003141974.table);

  return result_3003141975;

}

function del_3003142146(t_3003142149, key_3003142150) {
    var hc_3003142151 = [0];
    var i_3003142158 = rawGet_3003139458(t_3003142149, key_3003142150, hc_3003142151, 0);
    var mskHEX60gensym36_3003142162 = (t_3003142149.data).length - 1;
    if ((0 <= i_3003142158)) {
    t_3003142149.counter = subInt(t_3003142149.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003142169 = i_3003142158;
            var rHEX60gensym36_3003142170 = jHEX60gensym36_3003142169;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0 = 0;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field1 = null;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003142158 = (addInt(i_3003142158, 1) & mskHEX60gensym36_3003142162);
                  if (isEmpty_1308622877(t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003142170 = (t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0 & mskHEX60gensym36_3003142162);
                  if (!(((((rHEX60gensym36_3003142170 <= i_3003142158) && (jHEX60gensym36_3003142169 < rHEX60gensym36_3003142170)) || ((jHEX60gensym36_3003142169 < rHEX60gensym36_3003142170) && (i_3003142158 < jHEX60gensym36_3003142169))) || ((i_3003142158 < jHEX60gensym36_3003142169) && (rHEX60gensym36_3003142170 <= i_3003142158))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003142149.data[chckIndx(jHEX60gensym36_3003142169, 0, (t_3003142149.data).length - 1)] = nimCopy(t_3003142149.data[chckIndx(jHEX60gensym36_3003142169, 0, (t_3003142149.data).length - 1)], t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)], NTI3003122284);
          }
      };
    };
    }
    

  
}

function resize_3003141889(cache_3003141892) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003141892.capacity < len_3003141971(cache_3003141892))) break Label2;
          var t_3003142059 = cache_3003141892.list.tail;
          if (cache_3003141892.recordRemovedKeys) {
          incl_3003127646(cache_3003141892.removedKeys, t_3003142059.value.key);
          }
          
          del_3003142146(cache_3003141892.table, t_3003142059.value.key);
          remove_3003142905(cache_3003141892.list, t_3003142059);
        }
    };

  
}

function addNewNode_3003139933(cache_3003139936, key_3003139937, val_3003139938) {
    var node_3003139959 = newDoublyLinkedNode_3003139941({key: key_3003139937, val: val_3003139938});
    HEX5BHEX5DHEX3D_3003140023(cache_3003139936.table, key_3003139937, node_3003139959);
    prepend_3003141634(cache_3003139936.list, node_3003139959);
    if (cache_3003139936.recordRemovedKeys) {
    excl_3003126487(cache_3003139936.removedKeys, key_3003139937);
    }
    
    resize_3003141889(cache_3003139936);

  
}

function HEX5BHEX5DHEX3D_3003139353(cache_3003139356, key_3003139357, val_3003139358) {
    var node_3003139906 = getOrDefault_3003139448(cache_3003139356.table, key_3003139357, null);
    if ((node_3003139906 == null)) {
    addNewNode_3003139933(cache_3003139356, key_3003139357, val_3003139358);
    }
    else {
      node_3003139906.value.val = val_3003139358;
      remove_3003142905(cache_3003139356.list, node_3003139906);
      prepend_3003141634(cache_3003139356.list, node_3003139906);
    }
    

  
}

function fingerprint_3087008992(symbols_3087009000) {
  var result_3087009001 = [[]];

    result_3087009001[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009316 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009317 = null;
      var L_2952790451 = len_3087009054(symbols_3087009000);
      Label2: {
        var h_2952790453 = 0;
        var colontmp__2952790454 = 0;
        colontmp__2952790454 = (symbols_3087009000.data).length - 1;
        var res_2952790455 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952790455 <= colontmp__2952790454)) break Label4;
              h_2952790453 = res_2952790455;
              if (isFilled_1308622880(symbols_3087009000.data[chckIndx(h_2952790453, 0, (symbols_3087009000.data).length - 1)].Field0)) {
              var colontmp__2952790458 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009000.data[chckIndx(h_2952790453, 0, (symbols_3087009000.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3087009000.data[chckIndx(h_2952790453, 0, (symbols_3087009000.data).length - 1)].Field2}, NTI3087008730);
              key_3087009316 = nimCopy(key_3087009316, colontmp__2952790458["Field0"], NTI2046820355);
              value_3087009317 = colontmp__2952790458["Field1"];
              add_3087008391(result_3087009001, 0, fingerprint_3087008937(value_3087009317));
              if (!((len_3087009054(symbols_3087009000) == L_2952790451))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790455 = addInt(res_2952790455, 1);
            }
        };
      };
    };

  return result_3087009001[0];

}

function initDoublyLinkedList_3003143372() {
  var result_3003143374 = ({head: null, tail: null});

  return result_3003143374;

}

function initTable_3003143378(initialSize_3003143381) {
  var result_3003143382 = ({data: [], counter: 0});

    var correctSizeHEX60gensym219_3003143384 = slotsNeeded_1308622891(chckRange(initialSize_3003143381, 0, 2147483647));
    result_3003143382.counter = 0;
    result_3003143382.data = new Array(chckRange(correctSizeHEX60gensym219_3003143384, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym219_3003143384, 0, 2147483647) ; ++i) { result_3003143382.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003143382;

}

function newLruCache_3003143362(capacity_3003143365, recordRemovedKeys_3003143366) {
  var result_3003143367 = null;

    result_3003143367 = {capacity: capacity_3003143365, list: initDoublyLinkedList_3003143372(), table: initTable_3003143378(correctSize_3036676117(capacity_3003143365)), recordRemovedKeys: recordRemovedKeys_3003143366, removedKeys: ({data: [], counter: 0})};

  return result_3003143367;

}

function newCache_3003143357(capacity_3003143360) {
  var result_3003143361 = null;

    result_3003143361 = newLruCache_3003143362(capacity_3003143360, false);

  return result_3003143361;

}

function init_3003143352(result_3003143355, result_3003143355_Idx, capacity_3003143356) {
    result_3003143355[result_3003143355_Idx] = newCache_3003143357(capacity_3003143356);

  
}

function hasKey_3003143595(t_3003143598, key_3003143599) {
  var result_3003143600 = false;

    var hc_3003143601 = [0];
    result_3003143600 = (0 <= rawGet_3003143602(t_3003143598, key_3003143599, hc_3003143601, 0));

  return result_3003143600;

}

function contains_3003143589(t_3003143592, key_3003143593) {
  var result_3003143594 = false;

  BeforeRet: {
    result_3003143594 = hasKey_3003143595(t_3003143592, key_3003143593);
    break BeforeRet;
  };

  return result_3003143594;

}

function contains_3003143495(cache_3003143498, key_3003143499) {
  var result_3003143500 = false;

    result_3003143500 = contains_3003143589(cache_3003143498.table, key_3003143499);

  return result_3003143500;

}

function HEX5BHEX5D_3003144134(t_3003144137, key_3003144138) {
  var result_3003144139 = null;
  var result_3003144139_Idx = 0;

    var hcHEX60gensym22_3003144140 = [0];
    var indexHEX60gensym22_3003144147 = rawGet_3003143602(t_3003144137, key_3003144138, hcHEX60gensym22_3003144140, 0);
    if ((0 <= indexHEX60gensym22_3003144147)) {
    result_3003144139 = t_3003144137.data[chckIndx(indexHEX60gensym22_3003144147, 0, (t_3003144137.data).length - 1)]; result_3003144139_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003144138);
    }
    

  return [result_3003144139, result_3003144139_Idx];

}

function HEX5BHEX5D_3003144048(cache_3003144051, key_3003144052) {
    var Temporary1;

  var result_3003144053 = null;

    var node_3003144240 = (Temporary1 = HEX5BHEX5D_3003144134(cache_3003144051.table, key_3003144052), Temporary1)[0][Temporary1[1]];
    result_3003144053 = node_3003144240.value.val;
    remove_3003144254(cache_3003144051.list, node_3003144240);
    prepend_3003144582(cache_3003144051.list, node_3003144240);

  return result_3003144053;

}

function computeSymbolTypeImpl_3003122498(ctx_3003122499, symbol_3003122500) {
      var Temporary3;
      var Temporary4;

  var result_3003221485 = null;

  BeforeRet: {
    var logQueryHEX60gensym553_3003221487 = (ctx_3003122499.enableLogging || ctx_3003122499.enableQueryLogging);
    if (logQueryHEX60gensym553_3003221487) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym553_3003221487) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008904(symbol_3003122500) || []));
    }
    
    try {
    switch (symbol_3003122500.kind) {
    case 0:
      var Temporary3 = symbol_3003122500;
      if (ConstSet134[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3003221485 = computeType_3003195250(ctx_3003122499, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3003122500;
      if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3003221485 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym553_3003221487 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008180(result_3003221485) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym553_3003221487) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221485;

}

function getOrDefault_3003144955(t_3003144958, key_3003144959, default_3003144960) {
    var Temporary1;

  var result_3003144961 = null;

    var hcHEX60gensym226_3003144964 = [0];
    var indexHEX60gensym226_3003145319 = rawGet_3003144965(t_3003144958, key_3003144959, hcHEX60gensym226_3003144964, 0);
    if ((0 <= indexHEX60gensym226_3003145319)) {
    Temporary1 = t_3003144958.data[chckIndx(indexHEX60gensym226_3003145319, 0, (t_3003144958.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003144960;
    }
    
    result_3003144961 = Temporary1;

  return result_3003144961;

}

function newDoublyLinkedNode_3003145444(value_3003145446) {
  var result_3003145447 = null;

    result_3003145447 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003145447.value = nimCopy(result_3003145447.value, value_3003145446, NTI3003122314);

  return result_3003145447;

}

function mustRehash_3003145794(t_3003145796) {
  var result_3003145797 = false;

    if (!((t_3003145796.counter < (t_3003145796.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003145797 = ((mulInt((t_3003145796.data).length, 2) < mulInt(t_3003145796.counter, 3)) || (subInt((t_3003145796.data).length, t_3003145796.counter) < 4));

  return result_3003145797;

}

function rawInsert_3003146487(t_3003146491, data_3003146492, data_3003146492_Idx, key_3003146493, val_3003146494, hc_3003146495, h_3003146496) {
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field1 = key_3003146493;
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field2 = val_3003146494;
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field0 = hc_3003146495;

  
}

function enlarge_3003146051(t_3003146054) {
    var n_3003146057 = [];
    n_3003146057 = new Array(chckRange(mulInt((t_3003146054.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003146054.data).length, 2), 0, 2147483647) ; ++i) { n_3003146057[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003146054.data; t_3003146054.data = n_3003146057; n_3003146057 = Temporary1;    Label2: {
      var i_3003146155 = 0;
      var colontmp__2952790461 = 0;
      colontmp__2952790461 = (n_3003146057).length - 1;
      var res_2952790462 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790462 <= colontmp__2952790461)) break Label4;
            i_3003146155 = res_2952790462;
            var eh_3003146236 = n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003146236)) {
            var j_3003146240 = (eh_3003146236 & (t_3003146054.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003146054.data[chckIndx(j_3003146240, 0, (t_3003146054.data).length - 1)].Field0)) break Label6;
                  j_3003146240 = nextTry_1308622883(j_3003146240, (t_3003146054.data).length - 1);
                }
            };
            rawInsert_3003146487(t_3003146054, t_3003146054, "data", n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field1, n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field2, eh_3003146236, j_3003146240);
            }
            
            res_2952790462 = addInt(res_2952790462, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003146737(t_3003146740, key_3003146741, hc_3003146742) {
  var result_3003146743 = 0;

  BeforeRet: {
    if (((t_3003146740.data).length == 0)) {
    result_3003146743 = -1;
    break BeforeRet;
    }
    
    var h_3003146828 = (hc_3003146742 & (t_3003146740.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field0)) break Label2;
          if (((t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field0 == hc_3003146742) && HEX3DHEX3D_3087008910(t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field1, key_3003146741))) {
          result_3003146743 = h_3003146828;
          break BeforeRet;
          }
          
          h_3003146828 = nextTry_1308622883(h_3003146828, (t_3003146740.data).length - 1);
        }
    };
    result_3003146743 = subInt(-1, h_3003146828);
  };

  return result_3003146743;

}

function HEX5BHEX5DHEX3D_3003145526(t_3003145529, key_3003145530, val_3003145531) {
    if (((t_3003145529.data).length == 0)) {
    var correctSizeHEX60gensym231_3003145614 = slotsNeeded_1308622891(32);
    t_3003145529.counter = 0;
    t_3003145529.data = new Array(chckRange(correctSizeHEX60gensym231_3003145614, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym231_3003145614, 0, 2147483647) ; ++i) { t_3003145529.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003145619 = [0];
    var index_3003145626 = rawGet_3003144965(t_3003145529, key_3003145530, hc_3003145619, 0);
    if ((0 <= index_3003145626)) {
    t_3003145529.data[chckIndx(index_3003145626, 0, (t_3003145529.data).length - 1)].Field2 = val_3003145531;
    }
    else {
      if (((t_3003145529.data).length == 0)) {
      var correctSizeHEX60gensym234_3003145789 = slotsNeeded_1308622891(32);
      t_3003145529.counter = 0;
      t_3003145529.data = new Array(chckRange(correctSizeHEX60gensym234_3003145789, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_3003145789, 0, 2147483647) ; ++i) { t_3003145529.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003145794(t_3003145529)) {
      enlarge_3003146051(t_3003145529);
      index_3003145626 = rawGetKnownHC_3003146737(t_3003145529, key_3003145530, hc_3003145619[0]);
      }
      
      index_3003145626 = subInt(-1, index_3003145626);
      rawInsert_3003146487(t_3003145529, t_3003145529, "data", key_3003145530, val_3003145531, hc_3003145619[0], index_3003145626);
      t_3003145529.counter = addInt(t_3003145529.counter, 1);
    }
    

  
}

function rawGet_3003147382(t_3003147385, key_3003147386, hc_3003147387, hc_3003147387_Idx) {
  var result_3003147388 = 0;

  BeforeRet: {
    hc_3003147387[hc_3003147387_Idx] = hash_3087008907(key_3003147386);
    if ((hc_3003147387[hc_3003147387_Idx] == 0)) {
    hc_3003147387[hc_3003147387_Idx] = 314159265;
    }
    
    if (((t_3003147385.data).length == 0)) {
    result_3003147388 = -1;
    break BeforeRet;
    }
    
    var h_3003147474 = (hc_3003147387[hc_3003147387_Idx] & (t_3003147385.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field0)) break Label2;
          if (((t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field0 == hc_3003147387[hc_3003147387_Idx]) && HEX3DHEX3D_3087008910(t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field1, key_3003147386))) {
          result_3003147388 = h_3003147474;
          break BeforeRet;
          }
          
          h_3003147474 = nextTry_1828716586(h_3003147474, (t_3003147385.data).length - 1);
        }
    };
    result_3003147388 = subInt(-1, h_3003147474);
  };

  return result_3003147388;

}

function exclImpl_3003147376(s_3003147378, key_3003147379) {
          var Temporary5;

  var result_3003147380 = false;

  BeforeRet: {
    var hc_3003147381 = [0];
    var i_3003147736 = rawGet_3003147382(s_3003147378, key_3003147379, hc_3003147381, 0);
    var msk_3003147740 = (s_3003147378.data).length - 1;
    result_3003147380 = true;
    if ((0 <= i_3003147736)) {
    result_3003147380 = false;
    s_3003147378.counter = subInt(s_3003147378.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003147746 = i_3003147736;
          var r_3003147747 = j_3003147746;
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0 = 0;
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003147736 = (addInt(i_3003147736, 1) & msk_3003147740);
                if (isEmpty_1828716580(s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003147747 = (s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0 & msk_3003147740);
                if (!(((((r_3003147747 <= i_3003147736) && (j_3003147746 < r_3003147747)) || ((j_3003147746 < r_3003147747) && (i_3003147736 < j_3003147746))) || ((i_3003147736 < j_3003147746) && (r_3003147747 <= i_3003147736))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)];
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)] = genericReset(s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)], NTI3003122370);
          s_3003147378.data[chckIndx(j_3003147746, 0, (s_3003147378.data).length - 1)] = nimCopy(s_3003147378.data[chckIndx(j_3003147746, 0, (s_3003147378.data).length - 1)], Temporary5, NTI3003122370);
        }
    };
    }
    
  };

  return result_3003147380;

}

function excl_3003147361(s_3003147363, key_3003147364) {
    var _ = exclImpl_3003147376(s_3003147363, key_3003147364);

  
}

function len_3003148500(t_3003148503) {
  var result_3003148504 = 0;

    result_3003148504 = t_3003148503.counter;

  return result_3003148504;

}

function len_3003148417(cache_3003148420) {
  var result_3003148421 = 0;

    result_3003148421 = len_3003148500(cache_3003148420.table);

  return result_3003148421;

}

function mustRehash_3003148641(t_3003148643) {
  var result_3003148644 = false;

    if (!((t_3003148643.counter < (t_3003148643.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003148644 = ((mulInt((t_3003148643.data).length, 2) < mulInt(t_3003148643.counter, 3)) || (subInt((t_3003148643.data).length, t_3003148643.counter) < 4));

  return result_3003148644;

}

function rawGetKnownHC_3003149247(t_3003149250, key_3003149251, hc_3003149252) {
  var result_3003149253 = 0;

  BeforeRet: {
    if (((t_3003149250.data).length == 0)) {
    result_3003149253 = -1;
    break BeforeRet;
    }
    
    var h_3003149338 = (hc_3003149252 & (t_3003149250.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field0)) break Label2;
          if (((t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field0 == hc_3003149252) && HEX3DHEX3D_3087008910(t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field1, key_3003149251))) {
          result_3003149253 = h_3003149338;
          break BeforeRet;
          }
          
          h_3003149338 = nextTry_1828716586(h_3003149338, (t_3003149250.data).length - 1);
        }
    };
    result_3003149253 = subInt(-1, h_3003149338);
  };

  return result_3003149253;

}

function rawInsert_3003149747(s_3003149749, data_3003149750, data_3003149750_Idx, key_3003149751, hc_3003149752, h_3003149753) {
    if (((data_3003149750[data_3003149750_Idx]).length == 0)) {
    var correctSizeHEX60gensym253_3003149836 = slotsNeeded_1828716594(64);
    s_3003149749.counter = 0;
    s_3003149749.data = new Array(chckRange(correctSizeHEX60gensym253_3003149836, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym253_3003149836, 0, 2147483647) ; ++i) { s_3003149749.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003149750[data_3003149750_Idx][chckIndx(h_3003149753, 0, (data_3003149750[data_3003149750_Idx]).length - 1)].Field1 = key_3003149751;
    data_3003149750[data_3003149750_Idx][chckIndx(h_3003149753, 0, (data_3003149750[data_3003149750_Idx]).length - 1)].Field0 = hc_3003149752;

  
}

function enlarge_3003148904(s_3003148906) {
    var n_3003148908 = [];
    n_3003148908 = new Array(chckRange(mulInt((s_3003148906.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003148906.data).length, 2), 0, 2147483647) ; ++i) { n_3003148908[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003148906.data; s_3003148906.data = n_3003148908; n_3003148908 = Temporary1;    Label2: {
      var i_3003149006 = 0;
      var colontmp__2952790470 = 0;
      colontmp__2952790470 = (n_3003148908).length - 1;
      var res_2952790471 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790471 <= colontmp__2952790470)) break Label4;
            i_3003149006 = res_2952790471;
            if (isFilled_1828716583(n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0)) {
            var j_3003149582 = subInt(-1, rawGetKnownHC_3003149247(s_3003148906, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field1, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0));
            rawInsert_3003149747(s_3003148906, s_3003148906, "data", n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field1, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0, j_3003149582);
            }
            
            res_2952790471 = addInt(res_2952790471, 1);
          }
      };
    };

  
}

function incl_3003148525(s_3003148527, key_3003148528) {
    if (((s_3003148527.data).length == 0)) {
    var correctSizeHEX60gensym246_3003148611 = slotsNeeded_1828716594(64);
    s_3003148527.counter = 0;
    s_3003148527.data = new Array(chckRange(correctSizeHEX60gensym246_3003148611, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_3003148611, 0, 2147483647) ; ++i) { s_3003148527.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003148626 = [0];
    var index_3003148640 = rawGet_3003147382(s_3003148527, key_3003148528, hc_3003148626, 0);
    if ((index_3003148640 < 0)) {
    if (mustRehash_3003148641(s_3003148527)) {
    enlarge_3003148904(s_3003148527);
    index_3003148640 = rawGetKnownHC_3003149247(s_3003148527, key_3003148528, hc_3003148626[0]);
    }
    
    rawInsert_3003149747(s_3003148527, s_3003148527, "data", key_3003148528, hc_3003148626[0], subInt(-1, index_3003148640));
    s_3003148527.counter = addInt(s_3003148527.counter, 1);
    }
    

  
}

function del_3003150103(t_3003150106, key_3003150107) {
    var hc_3003150108 = [0];
    var i_3003150115 = rawGet_3003144965(t_3003150106, key_3003150107, hc_3003150108, 0);
    var mskHEX60gensym36_3003150119 = (t_3003150106.data).length - 1;
    if ((0 <= i_3003150115)) {
    t_3003150106.counter = subInt(t_3003150106.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003150126 = i_3003150115;
            var rHEX60gensym36_3003150127 = jHEX60gensym36_3003150126;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0 = 0;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field1 = null;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003150115 = (addInt(i_3003150115, 1) & mskHEX60gensym36_3003150119);
                  if (isEmpty_1308622877(t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003150127 = (t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0 & mskHEX60gensym36_3003150119);
                  if (!(((((rHEX60gensym36_3003150127 <= i_3003150115) && (jHEX60gensym36_3003150126 < rHEX60gensym36_3003150127)) || ((jHEX60gensym36_3003150126 < rHEX60gensym36_3003150127) && (i_3003150115 < jHEX60gensym36_3003150126))) || ((i_3003150115 < jHEX60gensym36_3003150126) && (rHEX60gensym36_3003150127 <= i_3003150115))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003150106.data[chckIndx(jHEX60gensym36_3003150126, 0, (t_3003150106.data).length - 1)] = nimCopy(t_3003150106.data[chckIndx(jHEX60gensym36_3003150126, 0, (t_3003150106.data).length - 1)], t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)], NTI3003122350);
          }
      };
    };
    }
    

  
}

function resize_3003148335(cache_3003148338) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003148338.capacity < len_3003148417(cache_3003148338))) break Label2;
          var t_3003148505 = cache_3003148338.list.tail;
          if (cache_3003148338.recordRemovedKeys) {
          incl_3003148525(cache_3003148338.removedKeys, t_3003148505.value.key);
          }
          
          del_3003150103(cache_3003148338.table, t_3003148505.value.key);
          remove_3003150862(cache_3003148338.list, t_3003148505);
        }
    };

  
}

function addNewNode_3003145436(cache_3003145439, key_3003145440, val_3003145441) {
    var node_3003145462 = newDoublyLinkedNode_3003145444({key: key_3003145440, val: val_3003145441});
    HEX5BHEX5DHEX3D_3003145526(cache_3003145439.table, key_3003145440, node_3003145462);
    prepend_3003147133(cache_3003145439.list, node_3003145462);
    if (cache_3003145439.recordRemovedKeys) {
    excl_3003147361(cache_3003145439.removedKeys, key_3003145440);
    }
    
    resize_3003148335(cache_3003145439);

  
}

function HEX5BHEX5DHEX3D_3003144860(cache_3003144863, key_3003144864, val_3003144865) {
    var node_3003145409 = getOrDefault_3003144955(cache_3003144863.table, key_3003144864, null);
    if ((node_3003145409 == null)) {
    addNewNode_3003145436(cache_3003144863, key_3003144864, val_3003144865);
    }
    else {
      node_3003145409.value.val = val_3003144865;
      remove_3003150862(cache_3003144863.list, node_3003145409);
      prepend_3003147133(cache_3003144863.list, node_3003145409);
    }
    

  
}

function initDoublyLinkedList_3003151329() {
  var result_3003151331 = ({head: null, tail: null});

  return result_3003151331;

}

function initTable_3003151335(initialSize_3003151338) {
  var result_3003151339 = ({data: [], counter: 0});

    var correctSizeHEX60gensym254_3003151341 = slotsNeeded_1308622891(chckRange(initialSize_3003151338, 0, 2147483647));
    result_3003151339.counter = 0;
    result_3003151339.data = new Array(chckRange(correctSizeHEX60gensym254_3003151341, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym254_3003151341, 0, 2147483647) ; ++i) { result_3003151339.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003151339;

}

function newLruCache_3003151319(capacity_3003151322, recordRemovedKeys_3003151323) {
  var result_3003151324 = null;

    result_3003151324 = {capacity: capacity_3003151322, list: initDoublyLinkedList_3003151329(), table: initTable_3003151335(correctSize_3036676117(capacity_3003151322)), recordRemovedKeys: recordRemovedKeys_3003151323, removedKeys: ({data: [], counter: 0})};

  return result_3003151324;

}

function newCache_3003151314(capacity_3003151317) {
  var result_3003151318 = null;

    result_3003151318 = newLruCache_3003151319(capacity_3003151317, false);

  return result_3003151318;

}

function init_3003151309(result_3003151312, result_3003151312_Idx, capacity_3003151313) {
    result_3003151312[result_3003151312_Idx] = newCache_3003151314(capacity_3003151313);

  
}

function computeSymbolValueImpl_3003122501(ctx_3003122502, symbol_3003122503) {
      var Temporary3;
      var Temporary4;

  var result_3003221501 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym554_3003221503 = (ctx_3003122502.enableLogging || ctx_3003122502.enableQueryLogging);
    if (logQueryHEX60gensym554_3003221503) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym554_3003221503) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008904(symbol_3003122503) || []));
    }
    
    try {
    switch (symbol_3003122503.kind) {
    case 0:
      var Temporary3 = symbol_3003122503;
      if (ConstSet136[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3003221501 = nimCopy(result_3003221501, computeValue_3003198726(ctx_3003122502, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3003122503;
      if (ConstSet137[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3003221501 = nimCopy(result_3003221501, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym554_3003221503 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003221501) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym554_3003221503) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221501;

}

function getOrDefault_3003151707(t_3003151710, key_3003151711, default_3003151712) {
    var Temporary1;

  var result_3003151713 = null;

    var hcHEX60gensym257_3003151716 = [0];
    var indexHEX60gensym257_3003152071 = rawGet_3003151717(t_3003151710, key_3003151711, hcHEX60gensym257_3003151716, 0);
    if ((0 <= indexHEX60gensym257_3003152071)) {
    Temporary1 = t_3003151710.data[chckIndx(indexHEX60gensym257_3003152071, 0, (t_3003151710.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003151712;
    }
    
    result_3003151713 = Temporary1;

  return result_3003151713;

}

function newDoublyLinkedNode_3003152196(value_3003152198) {
  var result_3003152199 = null;

    result_3003152199 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003152199.value = nimCopy(result_3003152199.value, value_3003152198, NTI3003122389);

  return result_3003152199;

}

function mustRehash_3003152555(t_3003152557) {
  var result_3003152558 = false;

    if (!((t_3003152557.counter < (t_3003152557.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003152558 = ((mulInt((t_3003152557.data).length, 2) < mulInt(t_3003152557.counter, 3)) || (subInt((t_3003152557.data).length, t_3003152557.counter) < 4));

  return result_3003152558;

}

function rawInsert_3003153248(t_3003153252, data_3003153253, data_3003153253_Idx, key_3003153254, val_3003153255, hc_3003153256, h_3003153257) {
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field1 = key_3003153254;
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field2 = val_3003153255;
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field0 = hc_3003153256;

  
}

function enlarge_3003152812(t_3003152815) {
    var n_3003152818 = [];
    n_3003152818 = new Array(chckRange(mulInt((t_3003152815.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003152815.data).length, 2), 0, 2147483647) ; ++i) { n_3003152818[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003152815.data; t_3003152815.data = n_3003152818; n_3003152818 = Temporary1;    Label2: {
      var i_3003152916 = 0;
      var colontmp__2952790478 = 0;
      colontmp__2952790478 = (n_3003152818).length - 1;
      var res_2952790479 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790479 <= colontmp__2952790478)) break Label4;
            i_3003152916 = res_2952790479;
            var eh_3003152997 = n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003152997)) {
            var j_3003153001 = (eh_3003152997 & (t_3003152815.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003152815.data[chckIndx(j_3003153001, 0, (t_3003152815.data).length - 1)].Field0)) break Label6;
                  j_3003153001 = nextTry_1308622883(j_3003153001, (t_3003152815.data).length - 1);
                }
            };
            rawInsert_3003153248(t_3003152815, t_3003152815, "data", n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field1, n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field2, eh_3003152997, j_3003153001);
            }
            
            res_2952790479 = addInt(res_2952790479, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003153498(t_3003153501, key_3003153502, hc_3003153503) {
  var result_3003153504 = 0;

  BeforeRet: {
    if (((t_3003153501.data).length == 0)) {
    result_3003153504 = -1;
    break BeforeRet;
    }
    
    var h_3003153589 = (hc_3003153503 & (t_3003153501.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field0)) break Label2;
          if (((t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field0 == hc_3003153503) && HEX3DHEX3D_3087008910(t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field1, key_3003153502))) {
          result_3003153504 = h_3003153589;
          break BeforeRet;
          }
          
          h_3003153589 = nextTry_1308622883(h_3003153589, (t_3003153501.data).length - 1);
        }
    };
    result_3003153504 = subInt(-1, h_3003153589);
  };

  return result_3003153504;

}

function HEX5BHEX5DHEX3D_3003152287(t_3003152290, key_3003152291, val_3003152292) {
    if (((t_3003152290.data).length == 0)) {
    var correctSizeHEX60gensym262_3003152375 = slotsNeeded_1308622891(32);
    t_3003152290.counter = 0;
    t_3003152290.data = new Array(chckRange(correctSizeHEX60gensym262_3003152375, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym262_3003152375, 0, 2147483647) ; ++i) { t_3003152290.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003152380 = [0];
    var index_3003152387 = rawGet_3003151717(t_3003152290, key_3003152291, hc_3003152380, 0);
    if ((0 <= index_3003152387)) {
    t_3003152290.data[chckIndx(index_3003152387, 0, (t_3003152290.data).length - 1)].Field2 = val_3003152292;
    }
    else {
      if (((t_3003152290.data).length == 0)) {
      var correctSizeHEX60gensym265_3003152550 = slotsNeeded_1308622891(32);
      t_3003152290.counter = 0;
      t_3003152290.data = new Array(chckRange(correctSizeHEX60gensym265_3003152550, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym265_3003152550, 0, 2147483647) ; ++i) { t_3003152290.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003152555(t_3003152290)) {
      enlarge_3003152812(t_3003152290);
      index_3003152387 = rawGetKnownHC_3003153498(t_3003152290, key_3003152291, hc_3003152380[0]);
      }
      
      index_3003152387 = subInt(-1, index_3003152387);
      rawInsert_3003153248(t_3003152290, t_3003152290, "data", key_3003152291, val_3003152292, hc_3003152380[0], index_3003152387);
      t_3003152290.counter = addInt(t_3003152290.counter, 1);
    }
    

  
}

function len_3003154314(t_3003154317) {
  var result_3003154318 = 0;

    result_3003154318 = t_3003154317.counter;

  return result_3003154318;

}

function len_3003154231(cache_3003154234) {
  var result_3003154235 = 0;

    result_3003154235 = len_3003154314(cache_3003154234.table);

  return result_3003154235;

}

function del_3003154406(t_3003154409, key_3003154410) {
    var hc_3003154411 = [0];
    var i_3003154418 = rawGet_3003151717(t_3003154409, key_3003154410, hc_3003154411, 0);
    var mskHEX60gensym36_3003154422 = (t_3003154409.data).length - 1;
    if ((0 <= i_3003154418)) {
    t_3003154409.counter = subInt(t_3003154409.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003154429 = i_3003154418;
            var rHEX60gensym36_3003154430 = jHEX60gensym36_3003154429;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0 = 0;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field1 = null;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003154418 = (addInt(i_3003154418, 1) & mskHEX60gensym36_3003154422);
                  if (isEmpty_1308622877(t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003154430 = (t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0 & mskHEX60gensym36_3003154422);
                  if (!(((((rHEX60gensym36_3003154430 <= i_3003154418) && (jHEX60gensym36_3003154429 < rHEX60gensym36_3003154430)) || ((jHEX60gensym36_3003154429 < rHEX60gensym36_3003154430) && (i_3003154418 < jHEX60gensym36_3003154429))) || ((i_3003154418 < jHEX60gensym36_3003154429) && (rHEX60gensym36_3003154430 <= i_3003154418))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003154409.data[chckIndx(jHEX60gensym36_3003154429, 0, (t_3003154409.data).length - 1)] = nimCopy(t_3003154409.data[chckIndx(jHEX60gensym36_3003154429, 0, (t_3003154409.data).length - 1)], t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)], NTI3003122425);
          }
      };
    };
    }
    

  
}

function resize_3003154149(cache_3003154152) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003154152.capacity < len_3003154231(cache_3003154152))) break Label2;
          var t_3003154319 = cache_3003154152.list.tail;
          if (cache_3003154152.recordRemovedKeys) {
          incl_3003148525(cache_3003154152.removedKeys, t_3003154319.value.key);
          }
          
          del_3003154406(cache_3003154152.table, t_3003154319.value.key);
          remove_3003155165(cache_3003154152.list, t_3003154319);
        }
    };

  
}

function addNewNode_3003152188(cache_3003152191, key_3003152192, val_3003152193) {
    var node_3003152223 = newDoublyLinkedNode_3003152196({key: key_3003152192, val: nimCopy(null, val_3003152193, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003152287(cache_3003152191.table, key_3003152192, node_3003152223);
    prepend_3003153894(cache_3003152191.list, node_3003152223);
    if (cache_3003152191.recordRemovedKeys) {
    excl_3003147361(cache_3003152191.removedKeys, key_3003152192);
    }
    
    resize_3003154149(cache_3003152191);

  
}

function HEX5BHEX5DHEX3D_3003151612(cache_3003151615, key_3003151616, val_3003151617) {
    var node_3003152161 = getOrDefault_3003151707(cache_3003151615.table, key_3003151616, null);
    if ((node_3003152161 == null)) {
    addNewNode_3003152188(cache_3003151615, key_3003151616, val_3003151617);
    }
    else {
      node_3003152161.value.val = nimCopy(node_3003152161.value.val, val_3003151617, NTI3087007751);
      remove_3003155165(cache_3003151615.list, node_3003152161);
      prepend_3003153894(cache_3003151615.list, node_3003152161);
    }
    

  
}

function initDoublyLinkedList_3003155632() {
  var result_3003155634 = ({head: null, tail: null});

  return result_3003155634;

}

function initTable_3003155638(initialSize_3003155641) {
  var result_3003155642 = ({data: [], counter: 0});

    var correctSizeHEX60gensym275_3003155644 = slotsNeeded_1308622891(chckRange(initialSize_3003155641, 0, 2147483647));
    result_3003155642.counter = 0;
    result_3003155642.data = new Array(chckRange(correctSizeHEX60gensym275_3003155644, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym275_3003155644, 0, 2147483647) ; ++i) { result_3003155642.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003155642;

}

function newLruCache_3003155622(capacity_3003155625, recordRemovedKeys_3003155626) {
  var result_3003155627 = null;

    result_3003155627 = {capacity: capacity_3003155625, list: initDoublyLinkedList_3003155632(), table: initTable_3003155638(correctSize_3036676117(capacity_3003155625)), recordRemovedKeys: recordRemovedKeys_3003155626, removedKeys: ({data: [], counter: 0})};

  return result_3003155627;

}

function newCache_3003155617(capacity_3003155620) {
  var result_3003155621 = null;

    result_3003155621 = newLruCache_3003155622(capacity_3003155620, false);

  return result_3003155621;

}

function init_3003155612(result_3003155615, result_3003155615_Idx, capacity_3003155616) {
    result_3003155615[result_3003155615_Idx] = newCache_3003155617(capacity_3003155616);

  
}

function hasKey_3003155855(t_3003155858, key_3003155859) {
  var result_3003155860 = false;

    var hc_3003155861 = [0];
    result_3003155860 = (0 <= rawGet_3003155862(t_3003155858, key_3003155859, hc_3003155861, 0));

  return result_3003155860;

}

function contains_3003155849(t_3003155852, key_3003155853) {
  var result_3003155854 = false;

  BeforeRet: {
    result_3003155854 = hasKey_3003155855(t_3003155852, key_3003155853);
    break BeforeRet;
  };

  return result_3003155854;

}

function contains_3003155755(cache_3003155758, key_3003155759) {
  var result_3003155760 = false;

    result_3003155760 = contains_3003155849(cache_3003155758.table, key_3003155759);

  return result_3003155760;

}

function HEX5BHEX5D_3003156394(t_3003156397, key_3003156398) {
  var result_3003156399 = null;
  var result_3003156399_Idx = 0;

    var hcHEX60gensym22_3003156400 = [0];
    var indexHEX60gensym22_3003156407 = rawGet_3003155862(t_3003156397, key_3003156398, hcHEX60gensym22_3003156400, 0);
    if ((0 <= indexHEX60gensym22_3003156407)) {
    result_3003156399 = t_3003156397.data[chckIndx(indexHEX60gensym22_3003156407, 0, (t_3003156397.data).length - 1)]; result_3003156399_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003156398);
    }
    

  return [result_3003156399, result_3003156399_Idx];

}

function HEX5BHEX5D_3003156308(cache_3003156311, key_3003156312) {
    var Temporary1;

  var result_3003156313 = null;

    var node_3003156500 = (Temporary1 = HEX5BHEX5D_3003156394(cache_3003156311.table, key_3003156312), Temporary1)[0][Temporary1[1]];
    result_3003156313 = node_3003156500.value.val;
    remove_3003156514(cache_3003156311.list, node_3003156500);
    prepend_3003156842(cache_3003156311.list, node_3003156500);

  return result_3003156313;

}

function initTable_3137341628(initialSize_3137341631) {
  var result_3137341632 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3137341634 = slotsNeeded_1308622891(chckRange(initialSize_3137341631, 0, 2147483647));
    result_3137341632.counter = 0;
    result_3137341632.data = new Array(chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647) ; ++i) { result_3137341632.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3137341632;

}

function rawGet_3137339557(t_3137339560, key_3137339561, hc_3137339562, hc_3137339562_Idx) {
  var result_3137339563 = 0;

  BeforeRet: {
    hc_3137339562[hc_3137339562_Idx] = hash_2046820596(key_3137339561);
    if ((hc_3137339562[hc_3137339562_Idx] == 0)) {
    hc_3137339562[hc_3137339562_Idx] = 314159265;
    }
    
    if (((t_3137339560.data).length == 0)) {
    result_3137339563 = -1;
    break BeforeRet;
    }
    
    var h_3137339614 = (hc_3137339562[hc_3137339562_Idx] & (t_3137339560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0)) break Label2;
          if (((t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0 == hc_3137339562[hc_3137339562_Idx]) && HEX3DHEX3D_2046820592(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field1, key_3137339561))) {
          result_3137339563 = h_3137339614;
          break BeforeRet;
          }
          
          h_3137339614 = nextTry_1308622883(h_3137339614, (t_3137339560.data).length - 1);
        }
    };
    result_3137339563 = subInt(-1, h_3137339614);
  };

  return result_3137339563;

}

function mustRehash_3137339902(t_3137339904) {
  var result_3137339905 = false;

    if (!((t_3137339904.counter < (t_3137339904.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137339905 = ((mulInt((t_3137339904.data).length, 2) < mulInt(t_3137339904.counter, 3)) || (subInt((t_3137339904.data).length, t_3137339904.counter) < 4));

  return result_3137339905;

}

function rawInsert_3137340351(t_3137340355, data_3137340356, data_3137340356_Idx, key_3137340357, val_3137340358, hc_3137340359, h_3137340360) {
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1, key_3137340357, NTI2046820355);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2, val_3137340358, NTI3087007751);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field0 = hc_3137340359;

  
}

function enlarge_3137340057(t_3137340060) {
    var n_3137340063 = [];
    n_3137340063 = new Array(chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647) ; ++i) { n_3137340063[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3137340060.data; t_3137340060.data = n_3137340063; n_3137340063 = Temporary1;    Label2: {
      var i_3137340127 = 0;
      var colontmp__2952790493 = 0;
      colontmp__2952790493 = (n_3137340063).length - 1;
      var res_2952790494 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790494 <= colontmp__2952790493)) break Label4;
            i_3137340127 = res_2952790494;
            var eh_3137340181 = n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340181)) {
            var j_3137340185 = (eh_3137340181 & (t_3137340060.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340060.data[chckIndx(j_3137340185, 0, (t_3137340060.data).length - 1)].Field0)) break Label6;
                  j_3137340185 = nextTry_1308622883(j_3137340185, (t_3137340060.data).length - 1);
                }
            };
            rawInsert_3137340351(t_3137340060, t_3137340060, "data", n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field1, n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field2, eh_3137340181, j_3137340185);
            }
            
            res_2952790494 = addInt(res_2952790494, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340520(t_3137340523, key_3137340524, hc_3137340525) {
  var result_3137340526 = 0;

  BeforeRet: {
    if (((t_3137340523.data).length == 0)) {
    result_3137340526 = -1;
    break BeforeRet;
    }
    
    var h_3137340577 = (hc_3137340525 & (t_3137340523.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0)) break Label2;
          if (((t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0 == hc_3137340525) && HEX3DHEX3D_2046820592(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field1, key_3137340524))) {
          result_3137340526 = h_3137340577;
          break BeforeRet;
          }
          
          h_3137340577 = nextTry_1308622883(h_3137340577, (t_3137340523.data).length - 1);
        }
    };
    result_3137340526 = subInt(-1, h_3137340577);
  };

  return result_3137340526;

}

function HEX5BHEX5DHEX3D_3137339496(t_3137339499, key_3137339500, val_3137339501) {
    if (((t_3137339499.data).length == 0)) {
    var correctSizeHEX60gensym3_3137339551 = slotsNeeded_1308622891(32);
    t_3137339499.counter = 0;
    t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3137339556 = [0];
    var index_3137339795 = rawGet_3137339557(t_3137339499, key_3137339500, hc_3137339556, 0);
    if ((0 <= index_3137339795)) {
    t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2 = nimCopy(t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2, val_3137339501, NTI3087007751);
    }
    else {
      if (((t_3137339499.data).length == 0)) {
      var correctSizeHEX60gensym8_3137339897 = slotsNeeded_1308622891(32);
      t_3137339499.counter = 0;
      t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3137339902(t_3137339499)) {
      enlarge_3137340057(t_3137339499);
      index_3137339795 = rawGetKnownHC_3137340520(t_3137339499, key_3137339500, hc_3137339556[0]);
      }
      
      index_3137339795 = subInt(-1, index_3137339795);
      rawInsert_3137340351(t_3137339499, t_3137339499, "data", key_3137339500, val_3137339501, hc_3137339556[0], index_3137339795);
      t_3137339499.counter = addInt(t_3137339499.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3137340958(t_3137340961, key_3137340962) {
  var result_3137340963 = false;

    var hc_3137340964 = [0];
    result_3137340963 = (0 <= rawGet_3137339557(t_3137340961, key_3137340962, hc_3137340964, 0));

  return result_3137340963;

}

function contains_3137340952(t_3137340955, key_3137340956) {
  var result_3137340957 = false;

  BeforeRet: {
    result_3137340957 = hasKey_3137340958(t_3137340955, key_3137340956);
    break BeforeRet;
  };

  return result_3137340957;

}

function HEX5BHEX5D_3137341024(t_3137341027, key_3137341028) {
  var result_3137341029 = null;

    var hcHEX60gensym22_3137341030 = [0];
    var indexHEX60gensym22_3137341037 = rawGet_3137339557(t_3137341027, key_3137341028, hcHEX60gensym22_3137341030, 0);
    if ((0 <= indexHEX60gensym22_3137341037)) {
    result_3137341029 = t_3137341027.data[chckIndx(indexHEX60gensym22_3137341037, 0, (t_3137341027.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_3137341028);
    }
    

  return result_3137341029;

}

function newFunctionExecutionContext_3003191967(ctxHEX60gensym87_3003191968, dataHEX60gensym87_3003191969) {
  var result_3003191970 = null;

  BeforeRet: {
    var itemHEX60gensym87_3003191971 = getItem_3003188626(dataHEX60gensym87_3003191969);
    var keyHEX60gensym87_3003191972 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_3003191971, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym87_3003191968.depGraph.changed, keyHEX60gensym87_3003191972, ctxHEX60gensym87_3003191968.depGraph.revision);
    HEX5BHEX5DHEX3D_3003188782(ctxHEX60gensym87_3003191968.itemsFunctionExecutionContext, itemHEX60gensym87_3003191971, dataHEX60gensym87_3003191969);
    result_3003191970 = dataHEX60gensym87_3003191969;
    break BeforeRet;
  };

  return result_3003191970;

}

function executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, node_3137340765, variables_3137340768) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3137340769 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2986346455(node_3137340765));
    }
    
    try {
    Label3: {
      var expr_3137340780 = node_3137340765;
      var pos_3137340781 = 0;
      var _ = pos_3137340781;
      if ((expr_3137340780.kind == 0)) {
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 7)) {
      var lastValue_3137340792 = errorValue_3087008431();
      Label4: {
        var child_3137340796 = null;
        var i_2952790499 = 0;
        var L_2952790500 = (node_3137340765.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2952790499 < L_2952790500)) break Label6;
              child_3137340796 = node_3137340765.children[chckIndx(i_2952790499, 0, (node_3137340765.children).length - 1)];
              lastValue_3137340792 = nimCopy(lastValue_3137340792, executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, child_3137340796, variables_3137340768), NTI3087007751);
              i_2952790499 = addInt(i_2952790499, 1);
              if (!(((node_3137340765.children).length == L_2952790500))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3137340769 = nimCopy(result_3137340769, lastValue_3137340792, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 3)) {
      result_3137340769 = nimCopy(result_3137340769, {kind: 2, stringValue: nimCopy(null, node_3137340765.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3137340765.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3137340805 = Temporary7;
      result_3137340769 = nimCopy(result_3137340769, {kind: 3, intValue: value_3137340805, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 9)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3137340810 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3137340810, 1) < len_2986344536(node_3137340765))) break Label10;
            try {
            var condition_3137340815 = HEX5BHEX5D_2986344532(node_3137340765, index_3137340810);
            var trueCase_3137340816 = HEX5BHEX5D_2986344532(node_3137340765, addInt(index_3137340810, 1));
            var conditionValue_3137340817 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340815, variables_3137340768);
            if ((conditionValue_3137340817.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340817.kind == 3))) {
            var fmtRes_3137340830 = [mnewString(0)];
            fmtRes_3137340830[0].push.apply(fmtRes_3137340830[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340830, 0, conditionValue_3137340817, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340830[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3137340817;
              if (ConstSet138[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3137340836 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, trueCase_3137340816, variables_3137340768);
            result_3137340769 = nimCopy(result_3137340769, trueCaseValue_3137340836, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340810 = addInt(index_3137340810, 2);
            }
          }
      };
      if (!((modInt(len_2986344536(node_3137340765), 2) == 0))) {
      var falseCaseValue_3137340837 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, last_2986344706(node_3137340765), variables_3137340768);
      result_3137340769 = nimCopy(result_3137340769, falseCaseValue_3137340837, NTI3087007751);
      break BeforeRet;
      }
      
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 10)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3137340842 = HEX5BHEX5D_2986344532(node_3137340765, 0);
      var body_3137340843 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var index_3137340844 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3137340865 = get_1191185108(fec_3137340764.maxLoopIterations, 1000);
            if ((maxLoopIterations_3137340865 < index_3137340844)) {
            var fmtRes_3137340870 = [mnewString(0)];
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2701131945(fmtRes_3137340870, 0, maxLoopIterations_3137340865, []);
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008579(fmtRes_3137340870, 0, node_3137340765, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340870[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3137340881 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340842, variables_3137340768);
            if ((conditionValue_3137340881.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340881.kind == 3))) {
            var fmtRes_3137340894 = [mnewString(0)];
            fmtRes_3137340894[0].push.apply(fmtRes_3137340894[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340894, 0, conditionValue_3137340881, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340894[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3137340881;
              if (ConstSet139[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3137340900 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, body_3137340843, variables_3137340768);
            if ((bodyValue_3137340900.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340844 = addInt(index_3137340844, 1);
            }
          }
      };
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 1)) {
      var id_3137340909 = nimCopy(null, node_3137340765.reff, NTI2046820355);
      if (contains_3137340952(variables_3137340768, id_3137340909)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137340909), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3137341105 = computeSymbol_3003201856(ctx_3137340763, node_3137340765, true);
        if (!isSome_3087009345(oHEX60gensym44_3137341105)) Temporary17 = false; else {          var sym_3137341128 = get_3087009365(oHEX60gensym44_3137341105);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3137341129 = computeSymbolValue_3003211931(ctx_3137340763, sym_3137341128, true);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, id_3137340909, value_3137341129);
      result_3137340769 = nimCopy(result_3137340769, value_3137341129, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3137341180 = [mnewString(0)];
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008579(fmtRes_3137341180, 0, node_3137340765, []);
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341180[0], NTI33554449)]);
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 8)) {
      var function_3137341190 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, HEX5BHEX5D_2986344532(node_3137340765, 0), variables_3137340768);
      switch (function_3137341190.kind) {
      case 0:
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3137341195 = [];
        Label18: {
          var arg_3137341232 = null;
          var colontmp__2952790505 = [];
          colontmp__2952790505 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2952790506 = 0;
          var L_2952790507 = (colontmp__2952790505).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2952790506 < L_2952790507)) break Label20;
                arg_3137341232 = colontmp__2952790505[chckIndx(i_2952790506, 0, (colontmp__2952790505).length - 1)];
                var value_3137341233 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341232, variables_3137340768);
                if ((value_3137341233.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3137341233, NTI3087007751);
                args_3137341195.push(Temporary21);;
                i_2952790506 = addInt(i_2952790506, 1);
                if (!(((colontmp__2952790505).length == L_2952790507))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3137341190;
        if (ConstSet140[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3137340769 = nimCopy(result_3137340769, Temporary22.impl(args_3137341195), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3137341246 = [];
        Label23: {
          var arg_3137341265 = null;
          var colontmp__2952790510 = [];
          colontmp__2952790510 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2952790511 = 0;
          var L_2952790512 = (colontmp__2952790510).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2952790511 < L_2952790512)) break Label25;
                arg_3137341265 = colontmp__2952790510[chckIndx(i_2952790511, 0, (colontmp__2952790510).length - 1)];
                var value_3137341266 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341265, variables_3137340768);
                if ((value_3137341266.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3137341266, NTI3087007751);
                args_3137341246.push(Temporary26);;
                i_2952790511 = addInt(i_2952790511, 1);
                if (!(((colontmp__2952790510).length == L_2952790512))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3137341190;
        if (ConstSet141[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3137341275 = newFunctionExecutionContext_3003191967(ctx_3137340763, {node: Temporary27.node, arguments: nimCopy(null, args_3137341246, NTI3137340402), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3137340769 = nimCopy(result_3137340769, computeFunctionExecution_3003215035(ctx_3137340763, fec_3137341275), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3137340780.kind == 5)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341280 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var value_3137341281 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341280, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341281);
      result_3137340769 = nimCopy(result_3137340769, value_3137341281, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 6)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341332 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var value_3137341333 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341332, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341333);
      result_3137340769 = nimCopy(result_3137340769, value_3137341333, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 4)) {
      var id_3137341384 = nimCopy(null, node_3137340765.id, NTI2046820355);
      if (contains_3137340952(variables_3137340768, id_3137341384)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137341384), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3137340780.kind == 13)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3137341494 = HEX5BHEX5D_2986344532(node_3137340765, 0);
      var valueNode_3137341495 = HEX5BHEX5D_2986344532(node_3137340765, 1);
        var oHEX60gensym55_3137341498 = computeSymbol_3003201856(ctx_3137340763, targetNode_3137341494, true);
        if (!isSome_3087009345(oHEX60gensym55_3137341498)) Temporary28 = false; else {          var sym_3137341521 = get_3087009365(oHEX60gensym55_3137341498);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3137341522 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341495, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, sym_3137341521.id, value_3137341522);
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3137341573 = [mnewString(0)];
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008579(fmtRes_3137341573, 0, node_3137340765, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008579(fmtRes_3137341573, 0, targetNode_3137341494, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341573[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3137341588 = [mnewString(0)];
        fmtRes_3137341588[0].push.apply(fmtRes_3137341588[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008579(fmtRes_3137341588, 0, node_3137340765, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341588[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [45,62,32], HEX24_3087008487(result_3137340769));
    }
    
    }
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3137340769;

}

function computeFunctionExecutionImpl2_3137341623(ctx_3137341624, fec_3137341625) {
      var Temporary4;
        var Temporary5;

  var result_3137341626 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3137341627 = HEX5BHEX5D_2986344532(fec_3137341625.node, 2);
    var variables_3137341639 = [initTable_3137341628(32)];
    var params_3137341640 = HEX5BHEX5D_2986344532(fec_3137341625.node, 0);
    Label1: {
      var i_3137341682 = 0;
      var arg_3137341683 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790487 = 0;
      var L_2952790488 = (fec_3137341625.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790487 < L_2952790488)) break Label3;
            i_3137341682 = i_2952790487;
            arg_3137341683 = nimCopy(arg_3137341683, fec_3137341625.arguments[chckIndx(i_2952790487, 0, (fec_3137341625.arguments).length - 1)], NTI3087007751);
            if ((len_2986344536(params_3137341640) <= i_3137341682)) {
            var fmtRes_3137341688 = [mnewString(0)];
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2701131945(fmtRes_3137341688, 0, len_2986344536(params_3137341640), []);
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [44,32,103,111,116,32]);;
            formatValue_2701131945(fmtRes_3137341688, 0, (fec_3137341625.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341688[0], NTI33554449)]);
            result_3137341626 = nimCopy(result_3137341626, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3137341702 = HEX5BHEX5D_2986344532(params_3137341640, i_3137341682);
            HEX5BHEX5DHEX3D_3137339496(variables_3137341639[0], param_3137341702.id, arg_3137341683);
            i_2952790487 = addInt(i_2952790487, 1);
            if (!(((fec_3137341625.arguments).length == L_2952790488))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3137341749 = executeNodeRec_3137340762(ctx_3137341624, fec_3137341625, body_3137341627, variables_3137341639[0]);
    if ((bodyResult_3137341749.kind == 0)) {
    result_3137341626 = nimCopy(result_3137341626, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3137341754 = computeType_3003195250(ctx_3137341624, fec_3137341625.node, true);
      if (!(functionType_3137341754.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3137341754;
        if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3137341626 = nimCopy(result_3137341626, voidValue_3087008460(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3137341626 = nimCopy(result_3137341626, bodyResult_3137341749, NTI3087007751);
    break BeforeRet;
  };

  return result_3137341626;

}

function computeFunctionExecutionImpl_3003122504(ctx_3003122505, fec_3003122506) {
  var result_3003218792 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym530_3003218794 = (ctx_3003122505.enableLogging || ctx_3003122505.enableQueryLogging);
    if (logQueryHEX60gensym530_3003218794) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym530_3003218794) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008571(fec_3003122506) || []));
    }
    
    try {
    result_3003218792 = nimCopy(result_3003218792, computeFunctionExecutionImpl2_3137341623(ctx_3003122505, fec_3003122506), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym530_3003218794 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003218792) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym530_3003218794) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003218792;

}

function getOrDefault_3003157224(t_3003157227, key_3003157228, default_3003157229) {
    var Temporary1;

  var result_3003157230 = null;

    var hcHEX60gensym282_3003157233 = [0];
    var indexHEX60gensym282_3003157588 = rawGet_3003157234(t_3003157227, key_3003157228, hcHEX60gensym282_3003157233, 0);
    if ((0 <= indexHEX60gensym282_3003157588)) {
    Temporary1 = t_3003157227.data[chckIndx(indexHEX60gensym282_3003157588, 0, (t_3003157227.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003157229;
    }
    
    result_3003157230 = Temporary1;

  return result_3003157230;

}

function newDoublyLinkedNode_3003157713(value_3003157715) {
  var result_3003157716 = null;

    result_3003157716 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003157716.value = nimCopy(result_3003157716.value, value_3003157715, NTI3003122455);

  return result_3003157716;

}

function mustRehash_3003158072(t_3003158074) {
  var result_3003158075 = false;

    if (!((t_3003158074.counter < (t_3003158074.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003158075 = ((mulInt((t_3003158074.data).length, 2) < mulInt(t_3003158074.counter, 3)) || (subInt((t_3003158074.data).length, t_3003158074.counter) < 4));

  return result_3003158075;

}

function rawInsert_3003158765(t_3003158769, data_3003158770, data_3003158770_Idx, key_3003158771, val_3003158772, hc_3003158773, h_3003158774) {
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field1 = key_3003158771;
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field2 = val_3003158772;
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field0 = hc_3003158773;

  
}

function enlarge_3003158329(t_3003158332) {
    var n_3003158335 = [];
    n_3003158335 = new Array(chckRange(mulInt((t_3003158332.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003158332.data).length, 2), 0, 2147483647) ; ++i) { n_3003158335[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003158332.data; t_3003158332.data = n_3003158335; n_3003158335 = Temporary1;    Label2: {
      var i_3003158433 = 0;
      var colontmp__2952790516 = 0;
      colontmp__2952790516 = (n_3003158335).length - 1;
      var res_2952790517 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790517 <= colontmp__2952790516)) break Label4;
            i_3003158433 = res_2952790517;
            var eh_3003158514 = n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003158514)) {
            var j_3003158518 = (eh_3003158514 & (t_3003158332.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003158332.data[chckIndx(j_3003158518, 0, (t_3003158332.data).length - 1)].Field0)) break Label6;
                  j_3003158518 = nextTry_1308622883(j_3003158518, (t_3003158332.data).length - 1);
                }
            };
            rawInsert_3003158765(t_3003158332, t_3003158332, "data", n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field1, n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field2, eh_3003158514, j_3003158518);
            }
            
            res_2952790517 = addInt(res_2952790517, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003159015(t_3003159018, key_3003159019, hc_3003159020) {
  var result_3003159021 = 0;

  BeforeRet: {
    if (((t_3003159018.data).length == 0)) {
    result_3003159021 = -1;
    break BeforeRet;
    }
    
    var h_3003159106 = (hc_3003159020 & (t_3003159018.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field0)) break Label2;
          if (((t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field0 == hc_3003159020) && HEX3DHEX3D_3087008765(t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field1, key_3003159019))) {
          result_3003159021 = h_3003159106;
          break BeforeRet;
          }
          
          h_3003159106 = nextTry_1308622883(h_3003159106, (t_3003159018.data).length - 1);
        }
    };
    result_3003159021 = subInt(-1, h_3003159106);
  };

  return result_3003159021;

}

function HEX5BHEX5DHEX3D_3003157804(t_3003157807, key_3003157808, val_3003157809) {
    if (((t_3003157807.data).length == 0)) {
    var correctSizeHEX60gensym287_3003157892 = slotsNeeded_1308622891(32);
    t_3003157807.counter = 0;
    t_3003157807.data = new Array(chckRange(correctSizeHEX60gensym287_3003157892, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym287_3003157892, 0, 2147483647) ; ++i) { t_3003157807.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003157897 = [0];
    var index_3003157904 = rawGet_3003157234(t_3003157807, key_3003157808, hc_3003157897, 0);
    if ((0 <= index_3003157904)) {
    t_3003157807.data[chckIndx(index_3003157904, 0, (t_3003157807.data).length - 1)].Field2 = val_3003157809;
    }
    else {
      if (((t_3003157807.data).length == 0)) {
      var correctSizeHEX60gensym290_3003158067 = slotsNeeded_1308622891(32);
      t_3003157807.counter = 0;
      t_3003157807.data = new Array(chckRange(correctSizeHEX60gensym290_3003158067, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_3003158067, 0, 2147483647) ; ++i) { t_3003157807.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003158072(t_3003157807)) {
      enlarge_3003158329(t_3003157807);
      index_3003157904 = rawGetKnownHC_3003159015(t_3003157807, key_3003157808, hc_3003157897[0]);
      }
      
      index_3003157904 = subInt(-1, index_3003157904);
      rawInsert_3003158765(t_3003157807, t_3003157807, "data", key_3003157808, val_3003157809, hc_3003157897[0], index_3003157904);
      t_3003157807.counter = addInt(t_3003157807.counter, 1);
    }
    

  
}

function rawGet_3003159660(t_3003159663, key_3003159664, hc_3003159665, hc_3003159665_Idx) {
  var result_3003159666 = 0;

  BeforeRet: {
    hc_3003159665[hc_3003159665_Idx] = hash_3087008721(key_3003159664);
    if ((hc_3003159665[hc_3003159665_Idx] == 0)) {
    hc_3003159665[hc_3003159665_Idx] = 314159265;
    }
    
    if (((t_3003159663.data).length == 0)) {
    result_3003159666 = -1;
    break BeforeRet;
    }
    
    var h_3003159752 = (hc_3003159665[hc_3003159665_Idx] & (t_3003159663.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field0)) break Label2;
          if (((t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field0 == hc_3003159665[hc_3003159665_Idx]) && HEX3DHEX3D_3087008765(t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field1, key_3003159664))) {
          result_3003159666 = h_3003159752;
          break BeforeRet;
          }
          
          h_3003159752 = nextTry_1828716586(h_3003159752, (t_3003159663.data).length - 1);
        }
    };
    result_3003159666 = subInt(-1, h_3003159752);
  };

  return result_3003159666;

}

function exclImpl_3003159654(s_3003159656, key_3003159657) {
          var Temporary5;

  var result_3003159658 = false;

  BeforeRet: {
    var hc_3003159659 = [0];
    var i_3003160014 = rawGet_3003159660(s_3003159656, key_3003159657, hc_3003159659, 0);
    var msk_3003160018 = (s_3003159656.data).length - 1;
    result_3003159658 = true;
    if ((0 <= i_3003160014)) {
    result_3003159658 = false;
    s_3003159656.counter = subInt(s_3003159656.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003160024 = i_3003160014;
          var r_3003160025 = j_3003160024;
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0 = 0;
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003160014 = (addInt(i_3003160014, 1) & msk_3003160018);
                if (isEmpty_1828716580(s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003160025 = (s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0 & msk_3003160018);
                if (!(((((r_3003160025 <= i_3003160014) && (j_3003160024 < r_3003160025)) || ((j_3003160024 < r_3003160025) && (i_3003160014 < j_3003160024))) || ((i_3003160014 < j_3003160024) && (r_3003160025 <= i_3003160014))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)];
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)] = genericReset(s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)], NTI3003122511);
          s_3003159656.data[chckIndx(j_3003160024, 0, (s_3003159656.data).length - 1)] = nimCopy(s_3003159656.data[chckIndx(j_3003160024, 0, (s_3003159656.data).length - 1)], Temporary5, NTI3003122511);
        }
    };
    }
    
  };

  return result_3003159658;

}

function excl_3003159639(s_3003159641, key_3003159642) {
    var _ = exclImpl_3003159654(s_3003159641, key_3003159642);

  
}

function len_3003160778(t_3003160781) {
  var result_3003160782 = 0;

    result_3003160782 = t_3003160781.counter;

  return result_3003160782;

}

function len_3003160695(cache_3003160698) {
  var result_3003160699 = 0;

    result_3003160699 = len_3003160778(cache_3003160698.table);

  return result_3003160699;

}

function mustRehash_3003160919(t_3003160921) {
  var result_3003160922 = false;

    if (!((t_3003160921.counter < (t_3003160921.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003160922 = ((mulInt((t_3003160921.data).length, 2) < mulInt(t_3003160921.counter, 3)) || (subInt((t_3003160921.data).length, t_3003160921.counter) < 4));

  return result_3003160922;

}

function rawGetKnownHC_3003161525(t_3003161528, key_3003161529, hc_3003161530) {
  var result_3003161531 = 0;

  BeforeRet: {
    if (((t_3003161528.data).length == 0)) {
    result_3003161531 = -1;
    break BeforeRet;
    }
    
    var h_3003161616 = (hc_3003161530 & (t_3003161528.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field0)) break Label2;
          if (((t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field0 == hc_3003161530) && HEX3DHEX3D_3087008765(t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field1, key_3003161529))) {
          result_3003161531 = h_3003161616;
          break BeforeRet;
          }
          
          h_3003161616 = nextTry_1828716586(h_3003161616, (t_3003161528.data).length - 1);
        }
    };
    result_3003161531 = subInt(-1, h_3003161616);
  };

  return result_3003161531;

}

function rawInsert_3003162025(s_3003162027, data_3003162028, data_3003162028_Idx, key_3003162029, hc_3003162030, h_3003162031) {
    if (((data_3003162028[data_3003162028_Idx]).length == 0)) {
    var correctSizeHEX60gensym309_3003162114 = slotsNeeded_1828716594(64);
    s_3003162027.counter = 0;
    s_3003162027.data = new Array(chckRange(correctSizeHEX60gensym309_3003162114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym309_3003162114, 0, 2147483647) ; ++i) { s_3003162027.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003162028[data_3003162028_Idx][chckIndx(h_3003162031, 0, (data_3003162028[data_3003162028_Idx]).length - 1)].Field1 = key_3003162029;
    data_3003162028[data_3003162028_Idx][chckIndx(h_3003162031, 0, (data_3003162028[data_3003162028_Idx]).length - 1)].Field0 = hc_3003162030;

  
}

function enlarge_3003161182(s_3003161184) {
    var n_3003161186 = [];
    n_3003161186 = new Array(chckRange(mulInt((s_3003161184.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003161184.data).length, 2), 0, 2147483647) ; ++i) { n_3003161186[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003161184.data; s_3003161184.data = n_3003161186; n_3003161186 = Temporary1;    Label2: {
      var i_3003161284 = 0;
      var colontmp__2952790525 = 0;
      colontmp__2952790525 = (n_3003161186).length - 1;
      var res_2952790526 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790526 <= colontmp__2952790525)) break Label4;
            i_3003161284 = res_2952790526;
            if (isFilled_1828716583(n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0)) {
            var j_3003161860 = subInt(-1, rawGetKnownHC_3003161525(s_3003161184, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field1, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0));
            rawInsert_3003162025(s_3003161184, s_3003161184, "data", n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field1, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0, j_3003161860);
            }
            
            res_2952790526 = addInt(res_2952790526, 1);
          }
      };
    };

  
}

function incl_3003160803(s_3003160805, key_3003160806) {
    if (((s_3003160805.data).length == 0)) {
    var correctSizeHEX60gensym302_3003160889 = slotsNeeded_1828716594(64);
    s_3003160805.counter = 0;
    s_3003160805.data = new Array(chckRange(correctSizeHEX60gensym302_3003160889, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_3003160889, 0, 2147483647) ; ++i) { s_3003160805.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003160904 = [0];
    var index_3003160918 = rawGet_3003159660(s_3003160805, key_3003160806, hc_3003160904, 0);
    if ((index_3003160918 < 0)) {
    if (mustRehash_3003160919(s_3003160805)) {
    enlarge_3003161182(s_3003160805);
    index_3003160918 = rawGetKnownHC_3003161525(s_3003160805, key_3003160806, hc_3003160904[0]);
    }
    
    rawInsert_3003162025(s_3003160805, s_3003160805, "data", key_3003160806, hc_3003160904[0], subInt(-1, index_3003160918));
    s_3003160805.counter = addInt(s_3003160805.counter, 1);
    }
    

  
}

function del_3003162381(t_3003162384, key_3003162385) {
    var hc_3003162386 = [0];
    var i_3003162393 = rawGet_3003157234(t_3003162384, key_3003162385, hc_3003162386, 0);
    var mskHEX60gensym36_3003162397 = (t_3003162384.data).length - 1;
    if ((0 <= i_3003162393)) {
    t_3003162384.counter = subInt(t_3003162384.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003162404 = i_3003162393;
            var rHEX60gensym36_3003162405 = jHEX60gensym36_3003162404;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0 = 0;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field1 = null;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003162393 = (addInt(i_3003162393, 1) & mskHEX60gensym36_3003162397);
                  if (isEmpty_1308622877(t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003162405 = (t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0 & mskHEX60gensym36_3003162397);
                  if (!(((((rHEX60gensym36_3003162405 <= i_3003162393) && (jHEX60gensym36_3003162404 < rHEX60gensym36_3003162405)) || ((jHEX60gensym36_3003162404 < rHEX60gensym36_3003162405) && (i_3003162393 < jHEX60gensym36_3003162404))) || ((i_3003162393 < jHEX60gensym36_3003162404) && (rHEX60gensym36_3003162405 <= i_3003162393))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003162384.data[chckIndx(jHEX60gensym36_3003162404, 0, (t_3003162384.data).length - 1)] = nimCopy(t_3003162384.data[chckIndx(jHEX60gensym36_3003162404, 0, (t_3003162384.data).length - 1)], t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)], NTI3003122491);
          }
      };
    };
    }
    

  
}

function resize_3003160613(cache_3003160616) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003160616.capacity < len_3003160695(cache_3003160616))) break Label2;
          var t_3003160783 = cache_3003160616.list.tail;
          if (cache_3003160616.recordRemovedKeys) {
          incl_3003160803(cache_3003160616.removedKeys, t_3003160783.value.key);
          }
          
          del_3003162381(cache_3003160616.table, t_3003160783.value.key);
          remove_3003163140(cache_3003160616.list, t_3003160783);
        }
    };

  
}

function addNewNode_3003157705(cache_3003157708, key_3003157709, val_3003157710) {
    var node_3003157740 = newDoublyLinkedNode_3003157713({key: key_3003157709, val: nimCopy(null, val_3003157710, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003157804(cache_3003157708.table, key_3003157709, node_3003157740);
    prepend_3003159411(cache_3003157708.list, node_3003157740);
    if (cache_3003157708.recordRemovedKeys) {
    excl_3003159639(cache_3003157708.removedKeys, key_3003157709);
    }
    
    resize_3003160613(cache_3003157708);

  
}

function HEX5BHEX5DHEX3D_3003157129(cache_3003157132, key_3003157133, val_3003157134) {
    var node_3003157678 = getOrDefault_3003157224(cache_3003157132.table, key_3003157133, null);
    if ((node_3003157678 == null)) {
    addNewNode_3003157705(cache_3003157132, key_3003157133, val_3003157134);
    }
    else {
      node_3003157678.value.val = nimCopy(node_3003157678.value.val, val_3003157134, NTI3087007751);
      remove_3003163140(cache_3003157132.list, node_3003157678);
      prepend_3003159411(cache_3003157132.list, node_3003157678);
    }
    

  
}

function initDoublyLinkedList_3003163611() {
  var result_3003163613 = ({head: null, tail: null});

  return result_3003163613;

}

function initTable_3003163617(initialSize_3003163620) {
  var result_3003163621 = ({data: [], counter: 0});

    var correctSizeHEX60gensym310_3003163623 = slotsNeeded_1308622891(chckRange(initialSize_3003163620, 0, 2147483647));
    result_3003163621.counter = 0;
    result_3003163621.data = new Array(chckRange(correctSizeHEX60gensym310_3003163623, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym310_3003163623, 0, 2147483647) ; ++i) { result_3003163621.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003163621;

}

function newLruCache_3003163601(capacity_3003163604, recordRemovedKeys_3003163605) {
  var result_3003163606 = null;

    result_3003163606 = {capacity: capacity_3003163604, list: initDoublyLinkedList_3003163611(), table: initTable_3003163617(correctSize_3036676117(capacity_3003163604)), recordRemovedKeys: recordRemovedKeys_3003163605, removedKeys: ({data: [], counter: 0})};

  return result_3003163606;

}

function newCache_3003163596(capacity_3003163599) {
  var result_3003163600 = null;

    result_3003163600 = newLruCache_3003163601(capacity_3003163599, false);

  return result_3003163600;

}

function init_3003163591(result_3003163594, result_3003163594_Idx, capacity_3003163595) {
    result_3003163594[result_3003163594_Idx] = newCache_3003163596(capacity_3003163595);

  
}

function rawGet_3003163841(t_3003163844, key_3003163845, hc_3003163846, hc_3003163846_Idx) {
  var result_3003163847 = 0;

  BeforeRet: {
    hc_3003163846[hc_3003163846_Idx] = hash_3003122712(key_3003163845);
    if ((hc_3003163846[hc_3003163846_Idx] == 0)) {
    hc_3003163846[hc_3003163846_Idx] = 314159265;
    }
    
    if (((t_3003163844.data).length == 0)) {
    result_3003163847 = -1;
    break BeforeRet;
    }
    
    var h_3003163936 = (hc_3003163846[hc_3003163846_Idx] & (t_3003163844.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field0)) break Label2;
          if (((t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field0 == hc_3003163846[hc_3003163846_Idx]) && HEX3DHEX3D_3003123049(t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field1, key_3003163845))) {
          result_3003163847 = h_3003163936;
          break BeforeRet;
          }
          
          h_3003163936 = nextTry_1308622883(h_3003163936, (t_3003163844.data).length - 1);
        }
    };
    result_3003163847 = subInt(-1, h_3003163936);
  };

  return result_3003163847;

}

function hasKey_3003163834(t_3003163837, key_3003163838) {
  var result_3003163839 = false;

    var hc_3003163840 = [0];
    result_3003163839 = (0 <= rawGet_3003163841(t_3003163837, key_3003163838, hc_3003163840, 0));

  return result_3003163839;

}

function contains_3003163828(t_3003163831, key_3003163832) {
  var result_3003163833 = false;

  BeforeRet: {
    result_3003163833 = hasKey_3003163834(t_3003163831, key_3003163832);
    break BeforeRet;
  };

  return result_3003163833;

}

function contains_3003163734(cache_3003163737, key_3003163738) {
  var result_3003163739 = false;

    result_3003163739 = contains_3003163828(cache_3003163737.table, key_3003163738);

  return result_3003163739;

}

function HEX5BHEX5D_3003164373(t_3003164376, key_3003164377) {
  var result_3003164378 = null;
  var result_3003164378_Idx = 0;

    var hcHEX60gensym22_3003164379 = [0];
    var indexHEX60gensym22_3003164386 = rawGet_3003163841(t_3003164376, key_3003164377, hcHEX60gensym22_3003164379, 0);
    if ((0 <= indexHEX60gensym22_3003164386)) {
    result_3003164378 = t_3003164376.data[chckIndx(indexHEX60gensym22_3003164386, 0, (t_3003164376.data).length - 1)]; result_3003164378_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003164377);
    }
    

  return [result_3003164378, result_3003164378_Idx];

}

function remove_3003164493(L_3003164495, n_3003164496) {
    if ((n_3003164496 == L_3003164495.tail)) {
    L_3003164495.tail = n_3003164496.prev;
    }
    
    if ((n_3003164496 == L_3003164495.head)) {
    L_3003164495.head = n_3003164496.next;
    }
    
    if (!((n_3003164496.next == null))) {
    n_3003164496.next.prev = n_3003164496.prev;
    }
    
    if (!((n_3003164496.prev == null))) {
    n_3003164496.prev.next = n_3003164496.next;
    }
    

  
}

function prepend_3003164821(L_3003164823, n_3003164824) {
    n_3003164824.prev = null;
    n_3003164824.next = L_3003164823.head;
    if (!((L_3003164823.head == null))) {
    if (!((L_3003164823.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003164823.head.prev = n_3003164824;
    }
    
    L_3003164823.head = n_3003164824;
    if ((L_3003164823.tail == null)) {
    L_3003164823.tail = n_3003164824;
    }
    

  
}

function HEX5BHEX5D_3003164287(cache_3003164290, key_3003164291) {
    var Temporary1;

  var result_3003164292 = null;

    var node_3003164479 = (Temporary1 = HEX5BHEX5D_3003164373(cache_3003164290.table, key_3003164291), Temporary1)[0][Temporary1[1]];
    result_3003164292 = node_3003164479.value.val;
    remove_3003164493(cache_3003164290.list, node_3003164479);
    prepend_3003164821(cache_3003164290.list, node_3003164479);

  return result_3003164292;

}

function dependOnCurrentRevision_3003175764(ctxHEX60gensym73_3003175765) {
    if ((0 < (ctxHEX60gensym73_3003175765.dependencyStack).length)) {
    ctxHEX60gensym73_3003175765.dependencyStack[chckIndx((ctxHEX60gensym73_3003175765.dependencyStack).length - 1, 0, (ctxHEX60gensym73_3003175765.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3019898912, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3120565646(initialSize_3120565649) {
  var result_3120565650 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3120565652 = slotsNeeded_1308622891(chckRange(initialSize_3120565649, 0, 2147483647));
    result_3120565650.counter = 0;
    result_3120565650.data = new Array(chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647) ; ++i) { result_3120565650.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3120565650;

}

function rawGet_3087010430(t_3087010433, key_3087010434, hc_3087010435, hc_3087010435_Idx) {
  var result_3087010436 = 0;

  BeforeRet: {
    hc_3087010435[hc_3087010435_Idx] = hash_2046820596(key_3087010434);
    if ((hc_3087010435[hc_3087010435_Idx] == 0)) {
    hc_3087010435[hc_3087010435_Idx] = 314159265;
    }
    
    if (((t_3087010433.data).length == 0)) {
    result_3087010436 = -1;
    break BeforeRet;
    }
    
    var h_3087010488 = (hc_3087010435[hc_3087010435_Idx] & (t_3087010433.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field0)) break Label2;
          if (((t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field0 == hc_3087010435[hc_3087010435_Idx]) && HEX3DHEX3D_2046820592(t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field1, key_3087010434))) {
          result_3087010436 = h_3087010488;
          break BeforeRet;
          }
          
          h_3087010488 = nextTry_1308622883(h_3087010488, (t_3087010433.data).length - 1);
        }
    };
    result_3087010436 = subInt(-1, h_3087010488);
  };

  return result_3087010436;

}

function hasKey_3087010423(t_3087010426, key_3087010427) {
  var result_3087010428 = false;

    var hc_3087010429 = [0];
    result_3087010428 = (0 <= rawGet_3087010430(t_3087010426, key_3087010427, hc_3087010429, 0));

  return result_3087010428;

}

function contains_3120562541(t_3120562544, key_3120562545) {
  var result_3120562546 = false;

  BeforeRet: {
    result_3120562546 = hasKey_3087010423(t_3120562544, key_3120562545);
    break BeforeRet;
  };

  return result_3120562546;

}

function rawGet_3120562785(t_3120562788, key_3120562789, hc_3120562790, hc_3120562790_Idx) {
  var result_3120562791 = 0;

  BeforeRet: {
    hc_3120562790[hc_3120562790_Idx] = hash_2046820596(key_3120562789);
    if ((hc_3120562790[hc_3120562790_Idx] == 0)) {
    hc_3120562790[hc_3120562790_Idx] = 314159265;
    }
    
    if (((t_3120562788.data).length == 0)) {
    result_3120562791 = -1;
    break BeforeRet;
    }
    
    var h_3120562842 = (hc_3120562790[hc_3120562790_Idx] & (t_3120562788.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0)) break Label2;
          if (((t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0 == hc_3120562790[hc_3120562790_Idx]) && HEX3DHEX3D_2046820592(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field1, key_3120562789))) {
          result_3120562791 = h_3120562842;
          break BeforeRet;
          }
          
          h_3120562842 = nextTry_1308622883(h_3120562842, (t_3120562788.data).length - 1);
        }
    };
    result_3120562791 = subInt(-1, h_3120562842);
  };

  return result_3120562791;

}

function mustRehash_3120563130(t_3120563132) {
  var result_3120563133 = false;

    if (!((t_3120563132.counter < (t_3120563132.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3120563133 = ((mulInt((t_3120563132.data).length, 2) < mulInt(t_3120563132.counter, 3)) || (subInt((t_3120563132.data).length, t_3120563132.counter) < 4));

  return result_3120563133;

}

function rawInsert_3120563579(t_3120563583, data_3120563584, data_3120563584_Idx, key_3120563585, val_3120563586, hc_3120563587, h_3120563588) {
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1, key_3120563585, NTI2046820355);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2, val_3120563586, NTI3087007774);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field0 = hc_3120563587;

  
}

function enlarge_3120563285(t_3120563288) {
    var n_3120563291 = [];
    n_3120563291 = new Array(chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647) ; ++i) { n_3120563291[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3120563288.data; t_3120563288.data = n_3120563291; n_3120563291 = Temporary1;    Label2: {
      var i_3120563355 = 0;
      var colontmp__2952790552 = 0;
      colontmp__2952790552 = (n_3120563291).length - 1;
      var res_2952790553 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790553 <= colontmp__2952790552)) break Label4;
            i_3120563355 = res_2952790553;
            var eh_3120563409 = n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field0;
            if (isFilled_1308622880(eh_3120563409)) {
            var j_3120563413 = (eh_3120563409 & (t_3120563288.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3120563288.data[chckIndx(j_3120563413, 0, (t_3120563288.data).length - 1)].Field0)) break Label6;
                  j_3120563413 = nextTry_1308622883(j_3120563413, (t_3120563288.data).length - 1);
                }
            };
            rawInsert_3120563579(t_3120563288, t_3120563288, "data", n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field1, n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field2, eh_3120563409, j_3120563413);
            }
            
            res_2952790553 = addInt(res_2952790553, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3120563748(t_3120563751, key_3120563752, hc_3120563753) {
  var result_3120563754 = 0;

  BeforeRet: {
    if (((t_3120563751.data).length == 0)) {
    result_3120563754 = -1;
    break BeforeRet;
    }
    
    var h_3120563805 = (hc_3120563753 & (t_3120563751.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0)) break Label2;
          if (((t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0 == hc_3120563753) && HEX3DHEX3D_2046820592(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field1, key_3120563752))) {
          result_3120563754 = h_3120563805;
          break BeforeRet;
          }
          
          h_3120563805 = nextTry_1308622883(h_3120563805, (t_3120563751.data).length - 1);
        }
    };
    result_3120563754 = subInt(-1, h_3120563805);
  };

  return result_3120563754;

}

function HEX5BHEX5DHEX3D_3120562724(t_3120562727, key_3120562728, val_3120562729) {
    if (((t_3120562727.data).length == 0)) {
    var correctSizeHEX60gensym21_3120562779 = slotsNeeded_1308622891(32);
    t_3120562727.counter = 0;
    t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3120562784 = [0];
    var index_3120563023 = rawGet_3120562785(t_3120562727, key_3120562728, hc_3120562784, 0);
    if ((0 <= index_3120563023)) {
    t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2 = nimCopy(t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2, val_3120562729, NTI3087007774);
    }
    else {
      if (((t_3120562727.data).length == 0)) {
      var correctSizeHEX60gensym26_3120563125 = slotsNeeded_1308622891(32);
      t_3120562727.counter = 0;
      t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3120563130(t_3120562727)) {
      enlarge_3120563285(t_3120562727);
      index_3120563023 = rawGetKnownHC_3120563748(t_3120562727, key_3120562728, hc_3120562784[0]);
      }
      
      index_3120563023 = subInt(-1, index_3120563023);
      rawInsert_3120563579(t_3120562727, t_3120562727, "data", key_3120562728, val_3120562729, hc_3120562784[0], index_3120563023);
      t_3120562727.counter = addInt(t_3120562727.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2113929296(a_2113929297, b_2113929298) {
  var result_2113929299 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929299.x = min_33555609(a_2113929297.x, b_2113929298.x);
    result_2113929299.y = min_33555609(a_2113929297.y, b_2113929298.y);
    result_2113929299.w = (max_33555642((a_2113929297.x + a_2113929297.w), (b_2113929298.x + b_2113929298.w)) - result_2113929299.x);
    result_2113929299.h = (max_33555642((a_2113929297.y + a_2113929297.h), (b_2113929298.y + b_2113929298.h)) - result_2113929299.y);

  return result_2113929299;

}

function HEX2B_2097152155(a_2097152156, b_2097152157) {
  var result_2097152158 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152158.x = (a_2097152156.x + b_2097152157.x);
    result_2097152158.y = (a_2097152156.y + b_2097152157.y);
    result_2097152158.w = a_2097152156.w;
    result_2097152158.h = a_2097152156.h;

  return result_2097152158;

}

function vec2_2130707293(xHEX60gensym45_2130707294, yHEX60gensym45_2130707295) {
  var result_2130707296 = ({x: 0.0, y: 0.0});

    result_2130707296 = nimCopy(result_2130707296, {x: xHEX60gensym45_2130707294, y: yHEX60gensym45_2130707295}, NTI2130706720);

  return result_2130707296;

}

function xy_2113929248(rect_2113929249) {
  var result_2113929250 = ({x: 0.0, y: 0.0});

    result_2113929250 = nimCopy(result_2113929250, vec2_2130707293(rect_2113929249.x, rect_2113929249.y), NTI2130706720);

  return result_2113929250;

}

function add_3087009877(node_3087009878, node_3087009878_Idx, child_3087009879) {
  var result_3087009880 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009878[node_3087009878_Idx].children.push(child_3087009879);;
    child_3087009879.depth = addInt(node_3087009878[node_3087009878_Idx].depth, 1);
    child_3087009879.parent = node_3087009878[node_3087009878_Idx];
    child_3087009879.bounds.x = node_3087009878[node_3087009878_Idx].bounds.w;
    node_3087009878[node_3087009878_Idx].bounds = nimCopy(node_3087009878[node_3087009878_Idx].bounds, or_2113929296(node_3087009878[node_3087009878_Idx].bounds, HEX2B_2097152155(child_3087009879.bounds, xy_2113929248(node_3087009878[node_3087009878_Idx].bounds))), NTI2113929221);
    result_3087009880 = nimCopy(result_3087009880, {parent: node_3087009878[node_3087009878_Idx], first: (node_3087009878[node_3087009878_Idx].children).length - 1, last: (node_3087009878[node_3087009878_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009880;

}

function map_3087009424(s_3087009427, op_3087009429) {
  var result_3087009430 = [];

    result_3087009430 = new Array(chckRange((s_3087009427).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009427).length, 0, 2147483647) ; ++i) { result_3087009430[i] = null; }    Label1: {
      var i_3087009446 = 0;
      var colontmp__2952790562 = 0;
      colontmp__2952790562 = (s_3087009427).length;
      var i_2952790563 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790563 < colontmp__2952790562)) break Label3;
            i_3087009446 = i_2952790563;
            result_3087009430[chckIndx(i_3087009446, 0, (result_3087009430).length - 1)] = op_3087009429(s_3087009427[chckIndx(i_3087009446, 0, (s_3087009427).length - 1)]);
            i_2952790563 = addInt(i_2952790563, 1);
          }
      };
    };

  return result_3087009430;

}

function clone_3087009405(node_3087009406) {
    
function HEX3Aanonymous_3087009411(c_3087009419) {
      var result_3087009422 = null;

        result_3087009422 = clone_3087009405(c_3087009419);

      return result_3087009422;

    }

  var result_3087009407 = null;

    result_3087009407 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_3087009407.id = nimCopy(result_3087009407.id, newId_2046820569(), NTI2046820355);
    result_3087009407.parent = node_3087009406.parent;
    result_3087009407.node = node_3087009406.node;
    result_3087009407.text = nimCopy(null, node_3087009406.text, NTI33554449);
    result_3087009407.bounds = nimCopy(result_3087009407.bounds, node_3087009406.bounds, NTI2113929221);
    result_3087009407.indent = node_3087009406.indent;
    result_3087009407.font = nimCopy(null, node_3087009406.font, NTI33554449);
    result_3087009407.fontSize = node_3087009406.fontSize;
    result_3087009407.render = node_3087009406.render;
    result_3087009407.children = nimCopy(null, map_3087009424(node_3087009406.children, HEX3Aanonymous_3087009411), NTI3087008997);
    Label1: {
      var c_3087009450 = null;
      var i_2952790558 = 0;
      var L_2952790559 = (result_3087009407.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790558 < L_2952790559)) break Label3;
            c_3087009450 = result_3087009407.children[chckIndx(i_2952790558, 0, (result_3087009407.children).length - 1)];
            c_3087009450.parent = result_3087009407;
            i_2952790558 = addInt(i_2952790558, 1);
            if (!(((result_3087009407.children).length == L_2952790559))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009407;

}

function HEX5BHEX5D_3120562610(t_3120562613, key_3120562614) {
  var result_3120562615 = null;
  var result_3120562615_Idx = 0;

    var hcHEX60gensym22_3120562616 = [0];
    var indexHEX60gensym22_3120562623 = rawGet_3087010430(t_3120562613, key_3120562614, hcHEX60gensym22_3120562616, 0);
    if ((0 <= indexHEX60gensym22_3120562623)) {
    result_3120562615 = t_3120562613.data[chckIndx(indexHEX60gensym22_3120562623, 0, (t_3120562613.data).length - 1)]; result_3120562615_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346264(key_3120562614);
    }
    

  return [result_3120562615, result_3120562615_Idx];

}

function createReplacement_3120562493(input_3120562494, node_3120562495, layout_3120562496, line_3120562497, line_3120562497_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3120562498 = false;

  BeforeRet: {
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.id)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009877(line_3120562497, line_3120562497_Idx, clone_3087009405((Temporary1 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.id), Temporary1)[0][Temporary1[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.reff)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009877(line_3120562497, line_3120562497_Idx, clone_3087009405((Temporary2 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.reff), Temporary2)[0][Temporary2[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    result_3120562498 = false;
    break BeforeRet;
  };

  return result_3120562498;

}

function rect_2113929240(pos_2113929241, size_2113929242) {
  var result_2113929243 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929243.x = pos_2113929241.x;
    result_2113929243.y = pos_2113929241.y;
    result_2113929243.w = size_2113929242.x;
    result_2113929243.h = size_2113929242.y;

  return result_2113929243;

}

function vec2_2130707254() {
  var result_2130707255 = ({x: 0.0, y: 0.0});

    result_2130707255 = nimCopy(result_2130707255, {x: 0.0, y: 0.0}, NTI2130706720);

  return result_2130707255;

}

function whHEX3D_2113929257(rect_2113929258, v_2113929259) {
    rect_2113929258.w = v_2113929259.x;
    rect_2113929258.h = v_2113929259.y;

  
}

function newTextNode_3120562420(text_3120562421, color_3120562422, font_3120562423, measureText_3120562426, node_3120562427) {
  var result_3120562428 = null;

    result_3120562428 = {id: newId_2046820569(), text: nimCopy(null, text_3120562421, NTI33554449), colors: [nimCopy(null, color_3120562422, NTI33554449)], font: nimCopy(null, font_3120562423, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562427, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2113929257(result_3120562428.bounds, measureText_3120562426(text_3120562421));

  return result_3120562428;

}

function newTextNode_3120562433(text_3120562434, colors_3120562435, font_3120562436, measureText_3120562439, node_3120562440, styleOverride_3120562450) {
  var result_3120562451 = null;

    result_3120562451 = {id: newId_2046820569(), text: nimCopy(null, text_3120562434, NTI33554449), colors: nimCopy(null, colors_3120562435, NTI3120562359), font: nimCopy(null, font_3120562436, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562440, styleOverride: nimCopy(null, styleOverride_3120562450, NTI3087007788), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2113929257(result_3120562451.bounds, measureText_3120562439(text_3120562434));

  return result_3120562451;

}

function none_3120562442() {
  var result_3120562449 = ({val: {}, has: false});

  return result_3120562449;

}

function getColorForSymbol_3120564137(ctx_3120564138, sym_3120564139) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3120564140 = [];

  BeforeRet: {
    var typ_3120564141 = computeSymbolType_3003208828(ctx_3120564138, sym_3120564139, false);
    switch (typ_3120564141.kind) {
    case 0:
      result_3120564140 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3120564140 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3120564139.kind == 1)) {
      var Temporary1 = sym_3120564139;
      if (ConstSet145[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3120564140 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
        break;
      }
      }
      
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      break;
    default: 
      if ((sym_3120564139.kind == 0)) {
        var Temporary2 = sym_3120564139;
        if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3120564139;
        if (ConstSet147[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3120564139;
          if (ConstSet148[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3120564139;
        if (ConstSet149[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
    break BeforeRet;
  };

  return result_3120564140;

}

function some_3120564257(val_3120564259) {
  var result_3120564260 = ({val: {}, has: false});

    result_3120564260.has = true;
    result_3120564260.val = nimCopy(result_3120564260.val, val_3120564259, NTI3087007783);

  return result_3120564260;

}

function getStyleForSymbol_3120564206(ctx_3120564207, sym_3120564208) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3120564210 = ({val: {}, has: false});

    var style_3120564211 = nimCopy(null, ConstSet150, NTI3120563334);
    if ((sym_3120564208.kind == 0)) {
      var Temporary1 = sym_3120564208;
      if (ConstSet151[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet152), NTI3120563334);
    }
    
      var Temporary2 = sym_3120564208;
      if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3120564230 = computeSymbolType_3003208828(ctx_3120564207, sym_3120564208, false);
    if (!((typ_3120564230.kind == 4))) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet154), NTI3120563334);
    }
    
    }
    
    }
    else {
    if ((sym_3120564208.kind == 1)) {
      var Temporary3 = sym_3120564208;
      if (ConstSet155[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3120564211[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3120564211, ConstSet156))) {
    result_3120564210 = nimCopy(result_3120564210, some_3120564257(style_3120564211), NTI3087007788);
    }
    

  return result_3120564210;

}

function len_3087007969(node_3087007970) {
  var result_3087007971 = 0;

  BeforeRet: {
    result_3087007971 = (node_3087007970.children).length;
    break BeforeRet;
  };

  return result_3087007971;

}

function addLine_3087009909(node_3087009910, node_3087009910_Idx, child_3087009911, child_3087009911_Idx) {
    node_3087009910[node_3087009910_Idx].children.push(child_3087009911[child_3087009911_Idx]);;
    child_3087009911[child_3087009911_Idx].depth = addInt(node_3087009910[node_3087009910_Idx].depth, 1);
    child_3087009911[child_3087009911_Idx].parent = node_3087009910[node_3087009910_Idx];
    child_3087009911[child_3087009911_Idx].bounds.y = node_3087009910[node_3087009910_Idx].bounds.h;
    node_3087009910[node_3087009910_Idx].bounds = nimCopy(node_3087009910[node_3087009910_Idx].bounds, or_2113929296(node_3087009910[node_3087009910_Idx].bounds, HEX2B_2097152155(child_3087009911[child_3087009911_Idx].bounds, xy_2113929248(node_3087009910[node_3087009910_Idx].bounds))), NTI2113929221);

  
}

function rect_2113929234(x_2113929235, y_2113929236, w_2113929237, h_2113929238) {
  var result_2113929239 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929239.x = x_2113929235;
    result_2113929239.y = y_2113929236;
    result_2113929239.w = w_2113929237;
    result_2113929239.h = h_2113929238;

  return result_2113929239;

}

function getPrecedenceForNode_3120562190(ctx_3120562191, node_3120562192) {
      var Temporary1;
      var Temporary2;

  var result_3120562193 = 0;

  BeforeRet: {
    if ((!((node_3120562192.kind == 8)) || (len_2986344536(node_3120562192) == 0))) {
    result_3120562193 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3120562200 = computeSymbol_3003201856(ctx_3120562191, HEX5BHEX5D_2986344532(node_3120562192, 0), false);
      if (!isSome_3087009345(oHEX60gensym1_3120562200)) Temporary1 = false; else {        var symbol_3120562223 = get_3087009365(oHEX60gensym1_3120562200);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3120562223.kind) {
    case 1:
      var Temporary2 = symbol_3120562223;
      if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3120562193 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3120562193 = 0;
    break BeforeRet;
  };

  return result_3120562193;

}

function some_3120562475(val_3120562477) {
  var result_3120562478 = ({val: [], has: false});

    result_3120562478.has = true;
    result_3120562478.val = nimCopy(null, val_3120562477, NTI3120562388);

  return result_3120562478;

}

function newBlockNode_3120562461(colors_3120562462, size_3120562463, node_3120562464, styleOverride_3120562473) {
  var result_3120562474 = null;

    result_3120562474 = {id: newId_2046820569(), node: node_3120562464, styleOverride: nimCopy(null, styleOverride_3120562473, NTI3087007788), background: some_3120562475(colors_3120562462), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2113929257(result_3120562474.bounds, size_3120562463);

  return result_3120562474;

}

function HEX2BHEX3D_2113929329(x_2113929331, x_2113929331_Idx, y_2113929332) {
    x_2113929331[x_2113929331_Idx] = (x_2113929331[x_2113929331_Idx] + y_2113929332);

  
}

function formatValue_3120565598(result_3120565600, result_3120565600_Idx, value_3120565601, specifier_3120565602) {
    formatValue_721420459(result_3120565600, result_3120565600_Idx, reprEnum(value_3120565601, NTI2986344451), specifier_3120565602);

  
}

function createLayoutLineForRemainingChildren_3120564275(ctx_3120564276, input_3120564277, node_3120564278, firstChildIndex_3120564279, result_3120564280, line_3120564281, line_3120564281_Idx) {
  BeforeRet: {
    if ((len_2986344536(node_3120564278) <= firstChildIndex_3120564279)) {
    break BeforeRet;
    }
    
    var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([60], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
    Label1: {
      var i_3120564290 = 0;
      var colontmp__2952790568 = 0;
      colontmp__2952790568 = len_2986344536(node_3120564278);
      var i_2952790569 = firstChildIndex_3120564279;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790569 < colontmp__2952790568)) break Label3;
            i_3120564290 = i_2952790569;
            if ((firstChildIndex_3120564279 < i_3120564290)) {
            var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564276, input_3120564277, HEX5BHEX5D_2986344532(node_3120564278, i_3120564290), result_3120564280, line_3120564281, line_3120564281_Idx);
            i_2952790569 = addInt(i_2952790569, 1);
          }
      };
    };
    var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([62], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
  };

  
}

function createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3120564314 = ((ConstSet143[node_3120564272.kind] != undefined) && (ConstSet144[node_3120564272.parent.kind] != undefined));
    var prevLine_3120564315 = line_3120564274[line_3120564274_Idx];
    var first_3120564319 = (prevLine_3120564315.children).length;
    try {
    var oldLineHEX60gensym42_3120564374 = [line_3120564274[line_3120564274_Idx]];
    var containerLineHEX60gensym42_3120564375 = [{id: newId_2046820569(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_3120564314) {
    line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: containerLineHEX60gensym42_3120564375[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3120564375[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_3003195250(ctx_3120564270, node_3120564272, false);
    var lastUsedChild_3120564422 = -1;
    try {
    Label4: {
      var expr_3120564423 = node_3120564272;
      var pos_3120564424 = 0;
      var _ = pos_3120564424;
      if ((expr_3120564423.kind == 0)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, {id: newId_2046820569(), colors: [nimCopy(null, config_3120562389[0].colors.empty, NTI33554449)], node: node_3120564272, bounds: rect_2113929240(vec2_2130707254(), vec2_2130707293((config_3120562389[0].fontSize * 0.5), config_3120562389[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 2)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 3)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
      if ((expr_3120564423.kind == 1)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym61_3120564549 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym61_3120564549)) Temporary5 = false; else {          var sym_3120564572 = get_3087009365(oHEX60gensym61_3120564549);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564572.name, getColorForSymbol_3120564137(ctx_3120564270, sym_3120564572), config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564572))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_2046820589(node_3120564272.reff), [118,97,114,105,97,98,108,101], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      
      }
      else {
      if ((expr_3120564423.kind == 4)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym63_3120564671 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym63_3120564671)) Temporary7 = false; else {          var sym_3120564694 = get_3087009365(oHEX60gensym63_3120564671);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3120564137(ctx_3120564270, sym_3120564694);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3120564699 = nimCopy(null, Temporary6, NTI3120563236);
        var oHEX60gensym64_3120564702 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym64_3120564702)) Temporary8 = false; else {          var sym_3120564725 = get_3087009365(oHEX60gensym64_3120564702);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564725.name, color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564725)));
      }
      else {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(HEX24_2046820589(node_3120564272.id), color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, none_3120562442()));
      }
      
      }
      
      var typ_3120564726 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      if ((typ_3120564726.kind == 4)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564726), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      var value_3120564743 = computeValue_3003198726(ctx_3120564270, node_3120564272, false);
      switch (value_3120564743.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2986344532(node_3120564272, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008487(value_3120564743), [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3120564422 = 0;
      }
      else {
      if ((expr_3120564423.kind == 5)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym67_3120564754 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym67_3120564754)) Temporary10 = false; else {          var sym_3120564777 = get_3087009365(oHEX60gensym67_3120564754);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564777), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564777)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2952790565 = nimCopy(null, Temporary9, NTI3120563706);
      var color_3120564789 = nimCopy(null, colontmp__2952790565["Field0"], NTI3120563236);
      var style_3120564790 = nimCopy(null, colontmp__2952790565["Field1"], NTI3087007788);
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564789, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564790));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      if ((((HEX5BHEX5D_2986344532(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_2986344532(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_2986344532(node_3120564272, 0).id)))) {
      var typ_3120564846 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564846), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_2986344536(node_3120564272))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 6)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym71_3120564903 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym71_3120564903)) Temporary12 = false; else {          var sym_3120564926 = get_3087009365(oHEX60gensym71_3120564903);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564926), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564926)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2952790566 = nimCopy(null, Temporary11, NTI3120563809);
      var color_3120564938 = nimCopy(null, colontmp__2952790566["Field0"], NTI3120563236);
      var style_3120564939 = nimCopy(null, colontmp__2952790566["Field1"], NTI3087007788);
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564938, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564939));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32,109,117,116,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      if ((((HEX5BHEX5D_2986344532(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_2986344532(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_2986344532(node_3120564272, 0).id)))) {
      var typ_3120564995 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564995), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_2986344536(node_3120564272))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 11)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([102,110], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      var parent_3120565050 = line_3120564274[line_3120564274_Idx];
      var first_3120565051 = len_3087007969(parent_3120565050);
      Label13: {
        var i_3120565075 = 0;
        var param_3120565076 = null;
        var colontmp__2952790534 = [];
        colontmp__2952790534 = HEX5BHEX5D_2986344532(node_3120564272, 0).children;
        var i_2952790536 = 0;
        var L_2952790537 = (colontmp__2952790534).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2952790536 < L_2952790537)) break Label15;
              i_3120565075 = i_2952790536;
              param_3120565076 = colontmp__2952790534[chckIndx(i_2952790536, 0, (colontmp__2952790534).length - 1)];
              if ((0 < i_3120565075)) {
              var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
              }
              
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, param_3120565076, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2952790536 = addInt(i_2952790536, 1);
              if (!(((colontmp__2952790534).length == L_2952790537))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2986344536(HEX5BHEX5D_2986344532(node_3120564272, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, {parent: parent_3120565050, first: first_3120565051, last: len_3087007969(parent_3120565050)});
      }
      
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41,32], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((1 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 2;
      }
      else {
      if ((expr_3120564423.kind == 9)) {
      var parent_3120565181 = [line_3120564274[line_3120564274_Idx].parent];
      var prevIndent_3120565182 = line_3120564274[line_3120564274_Idx].indent;
      var first_3120565186 = (parent_3120565181[0].children).length;
      try {
      var i_3120565239 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3120565239, 1) < len_2986344536(node_3120564272))) break Label18;
            try {
            if ((i_3120565239 == 0)) {
            var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            else {
              addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565181[0], bounds: rect_2113929234((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, i_3120565239), result_3120564273, line_3120564274, line_3120564274_Idx);
            var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, addInt(i_3120565239, 1)), result_3120564273, line_3120564274, line_3120564274_Idx);
            } finally {
            i_3120565239 = addInt(i_3120565239, 2);
            }
          }
      };
      if ((modInt(len_2986344536(node_3120564272), 2) == 1)) {
      addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565181[0], bounds: rect_2113929234((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,115,101,58,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, last_2986344706(node_3120564272), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565181[0], bounds: rect_2113929234((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
      } finally {
      if ((first_3120565186 < (parent_3120565181[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565181[0], first: first_3120565186, last: (parent_3120565181[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 10)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([119,104,105,108,101,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      if ((1 <= len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 <= len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 7)) {
      var parent_3120565260 = [line_3120564274[line_3120564274_Idx].parent];
      var first_3120565264 = addInt((parent_3120565260[0].children).length, 1);
      try {
      var prevIndent_3120565317 = line_3120564274[line_3120564274_Idx].indent;
      Label21: {
        var child_3120565321 = null;
        var i_2952790541 = 0;
        var L_2952790542 = (node_3120564272.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2952790541 < L_2952790542)) break Label23;
              child_3120565321 = node_3120564272.children[chckIndx(i_2952790541, 0, (node_3120564272.children).length - 1)];
              addLine_3087009909(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565260[0], bounds: rect_2113929234((prevIndent_3120565317 * config_3120562389[0].indent), 0.0, config_3120562389[0].indent, 0.0), indent: addInt(prevIndent_3120565317, 1), node: child_3120565321, depth: addInt(parent_3120565260[0].depth, 1), orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, child_3120565321, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2952790541 = addInt(i_2952790541, 1);
              if (!(((node_3120564272.children).length == L_2952790542))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009909(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565260[0], bounds: rect_2113929234((prevIndent_3120565317 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565317, depth: addInt(parent_3120565260[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
      } finally {
      if ((first_3120565264 < (parent_3120565260[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565260[0], first: first_3120565264, last: (parent_3120565260[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 13)) {
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 8)) {
      if ((len_2986344536(node_3120564272) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      break BeforeRet;
      }
      
      var isDivision_3120565380 = false;
        var oHEX60gensym90_3120565383 = computeSymbol_3003201856(ctx_3120564270, HEX5BHEX5D_2986344532(node_3120564272, 0), false);
        if (!isSome_3087009345(oHEX60gensym90_3120565383)) Temporary26 = false; else {          var sym_3120565406 = get_3087009365(oHEX60gensym90_3120565383);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3120565406.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820592(sym_3120565406.id, IdDiv_2969567238)) {
      isDivision_3120565380 = true;
      }
      
      var Temporary27 = sym_3120565406;
      if (ConstSet157[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3120565411 = Temporary28;
      if ((len_2986344536(node_3120564272) == addInt(arity_3120565411, 1))) {
      var Temporary30 = sym_3120565406;
      if (ConstSet158[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3120565412 = Temporary24;
      switch (operatorNotation_3120565412) {
      case 3:
        var parentPrecedence_3120565413 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272.parent);
        var precedence_3120565414 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272);
        var renderParens_3120565415 = (precedence_3120565414 < parentPrecedence_3120565413);
        if ((isDivision_3120565380 && !(input_3120564271.renderDivisionVertically))) {
        var oldLineHEX60gensym91_3120565418 = [line_3120564274[line_3120564274_Idx]];
        var containerLineHEX60gensym91_3120565419 = [{id: newId_2046820569(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: containerLineHEX60gensym91_3120565419[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3120565419[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_3120565466 = [line_3120564274[line_3120564274_Idx].parent];
        var prevIndent_3120565467 = line_3120564274[line_3120564274_Idx].indent;
        var first_3120565471 = (parent_3120565466[0].children).length;
        try {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line1_3120565524 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565466[0], bounds: rect_2113929234((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_3120565529 = newBlockNode_3120562461([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2130707293(0.0, (config_3120562389[0].fontSize * 0.1)), HEX5BHEX5D_2986344532(node_3120564272, 0), none_3120562442());
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, divLine_3120565529);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, {parent: line_3120564274[line_3120564274_Idx], first: 0, last: 1});
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565466[0], bounds: rect_2113929234((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line2_3120565576 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2046820569(), parent: parent_3120565466[0], bounds: rect_2113929234((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_3120565529.bounds.w = max_33555642(line1_3120565524.bounds.w, line2_3120565576.bounds.w);
        divLine_3120565529.parent.bounds.w = divLine_3120565529.bounds.w;
        var shorterLine_3120565577 = line1_3120565524;
        var longerLine_3120565578 = line2_3120565576;
        if ((longerLine_3120565578.bounds.w < shorterLine_3120565577.bounds.w)) {
        shorterLine_3120565577 = line2_3120565576;
        longerLine_3120565578 = line1_3120565524;
        }
        
        var lengthDiff_3120565579 = (longerLine_3120565578.bounds.w - shorterLine_3120565577.bounds.w);
        HEX2BHEX3D_2113929329(shorterLine_3120565577.bounds, "x", (lengthDiff_3120565579 / 2.0));
        lastUsedChild_3120564422 = 2;
        } finally {
        if ((first_3120565471 < (parent_3120565466[0].children).length)) {
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565466[0], first: first_3120565471, last: (parent_3120565466[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009909(containerLineHEX60gensym91_3120565419, 0, line_3120564274, line_3120564274_Idx);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(oldLineHEX60gensym91_3120565418, 0, containerLineHEX60gensym91_3120565419[0]));
        line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym91_3120565418[0];
        }
        
        }
        }
        else {
          if (renderParens_3120565415) {
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
          if (renderParens_3120565415) {
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          lastUsedChild_3120564422 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      case 2:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      default: 
        if ((0 < len_2986344536(node_3120564272))) {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        }
        
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        Label33: {
          var i_3120565588 = 0;
          var colontmp__2952790545 = 0;
          colontmp__2952790545 = len_2986344536(node_3120564272);
          var i_2952790546 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2952790546 < colontmp__2952790545)) break Label35;
                i_3120565588 = i_2952790546;
                if ((1 < i_3120565588)) {
                var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
                }
                
                createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, i_3120565588), result_3120564273, line_3120564274, line_3120564274_Idx);
                i_2952790546 = addInt(i_2952790546, 1);
              }
          };
        };
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
        break;
      }
      }
      else {
        var fmtRes_3120565597 = [mnewString(0)];
        fmtRes_3120565597[0].push.apply(fmtRes_3120565597[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3120565598(fmtRes_3120565597, 0, node_3120564272.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120565597[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3120564275(ctx_3120564270, input_3120564271, node_3120564272, addInt(lastUsedChild_3120564422, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
    }
    } finally {
    if (renderInline_3120564314) {
    addLine_3087009909(containerLineHEX60gensym42_3120564375, 0, line_3120564274, line_3120564274_Idx);
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(oldLineHEX60gensym42_3120564374, 0, containerLineHEX60gensym42_3120564375[0]));
    line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym42_3120564374[0];
    }
    
    }
    } finally {
    if ((first_3120564319 < (prevLine_3120564315.children).length)) {
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: prevLine_3120564315, first: first_3120564319, last: (prevLine_3120564315.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3120565624(vnode_3120565625) {
    var height_3120565626 = vnode_3120565625.bounds.h;
    Label1: {
      var child_3120565630 = null;
      var i_2952790572 = 0;
      var L_2952790573 = (vnode_3120565625.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790572 < L_2952790573)) break Label3;
            child_3120565630 = vnode_3120565625.children[chckIndx(i_2952790572, 0, (vnode_3120565625.children).length - 1)];
            if ((vnode_3120565625.orientation == 0)) {
            var heightDiff_3120565636 = (height_3120565626 - child_3120565630.bounds.h);
            HEX2BHEX3D_2113929329(child_3120565630.bounds, "y", (heightDiff_3120565636 * 0.5));
            }
            
            centerChildrenVertically_3120565624(child_3120565630);
            i_2952790572 = addInt(i_2952790572, 1);
            if (!(((vnode_3120565625.children).length == L_2952790573))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3120565641(ctx_3120565642, input_3120565643) {
  var result_3120565644 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_3120565645 = input_3120565643.node;
    result_3120565644[0] = nimCopy(result_3120565644[0], {node: node_3120565645, root: {id: newId_2046820569(), orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_3120565646(32)}, NTI3087007775);
    var line_3120565657 = [{id: newId_2046820569(), node: node_3120565645, parent: result_3120565644[0].root, orientation: 0, depth: addInt(result_3120565644[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_3120564269(ctx_3120565642, input_3120565643, node_3120565645, result_3120565644[0], line_3120565657, 0);
    addLine_3087009909(line_3120565657[0], "parent", line_3120565657, 0);
    centerChildrenVertically_3120565624(result_3120565644[0].root);

  return result_3120565644[0];

}

function computeNodeLayoutImpl_3003122507(ctx_3003122508, nodeLayoutInput_3003122509) {
  var result_3003218788 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_3003175764(ctx_3003122508);
    result_3003218788 = nimCopy(result_3003218788, computeNodeLayoutImpl2_3120565641(ctx_3003122508, nodeLayoutInput_3003122509), NTI3087007775);
    break BeforeRet;
  };

  return result_3003218788;

}

function hash_3087009990(input_3087009991) {
  var result_3087009992 = 0;

    result_3087009992 = HEX21HEX26_1325400067(hash_2986346803(input_3087009991.node), hash_2046820596(input_3087009991.selectedNode));
    result_3087009992 = HEX21HEX24_1325400082(result_3087009992);

  return result_3087009992;

}

function len_3087010128(t_3087010131) {
  var result_3087010132 = 0;

    result_3087010132 = t_3087010131.counter;

  return result_3087010132;

}

function HEX3DHEX3D_3087009817(x_3087009819, y_3087009820) {
  var result_3087009821 = false;

  BeforeRet: {
    var sameObject_3087009828 = false;
    sameObject_3087009828 = x_3087009819 === y_3087009820
    if (sameObject_3087009828) {
    result_3087009821 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009819).length == (y_3087009820).length))) {
    result_3087009821 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009842 = 0;
      var colontmp__2952790588 = 0;
      colontmp__2952790588 = subInt((x_3087009819).length, 1);
      var res_2952790589 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790589 <= colontmp__2952790588)) break Label3;
            i_3087009842 = res_2952790589;
            if (!(eqStrings(x_3087009819[chckIndx(i_3087009842, 0, (x_3087009819).length - 1)], y_3087009820[chckIndx(i_3087009842, 0, (y_3087009820).length - 1)]))) {
            result_3087009821 = false;
            break BeforeRet;
            }
            
            res_2952790589 = addInt(res_2952790589, 1);
          }
      };
    };
    result_3087009821 = true;
    break BeforeRet;
  };

  return result_3087009821;

}

function HEX3DHEX3D_2785018366(x_2785018368, y_2785018369) {
  var result_2785018370 = false;

  BeforeRet: {
    if (!((x_2785018368.x == y_2785018369.x))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.y == y_2785018369.y))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.w == y_2785018369.w))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018368.h == y_2785018369.h))) {
    result_2785018370 = false;
    break BeforeRet;
    }
    
    result_2785018370 = true;
    break BeforeRet;
  };

  return result_2785018370;

}

function HEX3DHEX3D_3087009851(x_3087009853, y_3087009854) {
  var result_3087009855 = false;

  BeforeRet: {
    var sameObject_3087009862 = false;
    sameObject_3087009862 = x_3087009853 === y_3087009854
    if (sameObject_3087009862) {
    result_3087009855 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009853).length == (y_3087009854).length))) {
    result_3087009855 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009876 = 0;
      var colontmp__2952790592 = 0;
      colontmp__2952790592 = subInt((x_3087009853).length, 1);
      var res_2952790593 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790593 <= colontmp__2952790592)) break Label3;
            i_3087009876 = res_2952790593;
            if (!(HEX3DHEX3D_3087009800(x_3087009853[chckIndx(i_3087009876, 0, (x_3087009853).length - 1)], y_3087009854[chckIndx(i_3087009876, 0, (y_3087009854).length - 1)]))) {
            result_3087009855 = false;
            break BeforeRet;
            }
            
            res_2952790593 = addInt(res_2952790593, 1);
          }
      };
    };
    result_3087009855 = true;
    break BeforeRet;
  };

  return result_3087009855;

}

function HEX3DHEX3D_3087009800(a_3087009801, b_3087009802) {
  var result_3087009803 = false;

  BeforeRet: {
    if ((a_3087009801 == null)) {
    result_3087009803 = (b_3087009802 == null);
    break BeforeRet;
    }
    
    if ((b_3087009802 == null)) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009801.text, b_3087009802.text))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009801.node == b_3087009802.node))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009817(a_3087009801.colors, b_3087009802.colors))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2785018366(a_3087009801.bounds, b_3087009802.bounds))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009801.render == b_3087009802.render))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    result_3087009803 = HEX3DHEX3D_3087009851(a_3087009801.children, b_3087009802.children);
    break BeforeRet;
  };

  return result_3087009803;

}

function getOrDefault_3087010717(t_3087010720, key_3087010721) {
  var result_3087010722 = null;

    var hcHEX60gensym49_3087010725 = [0];
    var indexHEX60gensym49_3087010732 = rawGet_3087010430(t_3087010720, key_3087010721, hcHEX60gensym49_3087010725, 0);
    if ((0 <= indexHEX60gensym49_3087010732)) {
    result_3087010722 = t_3087010720.data[chckIndx(indexHEX60gensym49_3087010732, 0, (t_3087010720.data).length - 1)].Field2;
    }
    

  return result_3087010722;

}

function HEX3DHEX3D_3087010072(s_3087010075, t_3087010076) {
  var result_3087010077 = false;

  BeforeRet: {
    if ((s_3087010075.counter == t_3087010076.counter)) {
    Label1: {
      var keyHEX60gensym43_3087010381 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_3087010382 = null;
      var L_2952790581 = len_3087010128(s_3087010075);
      Label2: {
        var h_2952790583 = 0;
        var colontmp__2952790584 = 0;
        colontmp__2952790584 = (s_3087010075.data).length - 1;
        var res_2952790585 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952790585 <= colontmp__2952790584)) break Label4;
              h_2952790583 = res_2952790585;
              if (isFilled_1308622880(s_3087010075.data[chckIndx(h_2952790583, 0, (s_3087010075.data).length - 1)].Field0)) {
              keyHEX60gensym43_3087010381 = nimCopy(keyHEX60gensym43_3087010381, s_3087010075.data[chckIndx(h_2952790583, 0, (s_3087010075.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym43_3087010382 = s_3087010075.data[chckIndx(h_2952790583, 0, (s_3087010075.data).length - 1)].Field2;
              if (!(hasKey_3087010423(t_3087010076, keyHEX60gensym43_3087010381))) {
              result_3087010077 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009800(getOrDefault_3087010717(t_3087010076, keyHEX60gensym43_3087010381), valHEX60gensym43_3087010382))) {
              result_3087010077 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010128(s_3087010075) == L_2952790581))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790585 = addInt(res_2952790585, 1);
            }
        };
      };
    };
    result_3087010077 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010077;

}

function HEX3DHEX3D_3087009993(a_3087009994, b_3087009995) {
  var result_3087009996 = false;

  BeforeRet: {
    if ((a_3087009994 == null)) {
    result_3087009996 = (b_3087009995 == null);
    break BeforeRet;
    }
    
    if ((b_3087009995 == null)) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.revision == b_3087009995.revision))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.node == b_3087009995.node))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820592(a_3087009994.selectedNode, b_3087009995.selectedNode))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010072(a_3087009994.replacements, b_3087009995.replacements))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.renderDivisionVertically == b_3087009995.renderDivisionVertically))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    result_3087009996 = true;
    break BeforeRet;
  };

  return result_3087009996;

}

function rawGet_3003165213(t_3003165216, key_3003165217, hc_3003165218, hc_3003165218_Idx) {
  var result_3003165219 = 0;

  BeforeRet: {
    hc_3003165218[hc_3003165218_Idx] = hash_3087009990(key_3003165217);
    if ((hc_3003165218[hc_3003165218_Idx] == 0)) {
    hc_3003165218[hc_3003165218_Idx] = 314159265;
    }
    
    if (((t_3003165216.data).length == 0)) {
    result_3003165219 = -1;
    break BeforeRet;
    }
    
    var h_3003165305 = (hc_3003165218[hc_3003165218_Idx] & (t_3003165216.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field0)) break Label2;
          if (((t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field0 == hc_3003165218[hc_3003165218_Idx]) && HEX3DHEX3D_3087009993(t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field1, key_3003165217))) {
          result_3003165219 = h_3003165305;
          break BeforeRet;
          }
          
          h_3003165305 = nextTry_1308622883(h_3003165305, (t_3003165216.data).length - 1);
        }
    };
    result_3003165219 = subInt(-1, h_3003165305);
  };

  return result_3003165219;

}

function getOrDefault_3003165203(t_3003165206, key_3003165207, default_3003165208) {
    var Temporary1;

  var result_3003165209 = null;

    var hcHEX60gensym317_3003165212 = [0];
    var indexHEX60gensym317_3003165567 = rawGet_3003165213(t_3003165206, key_3003165207, hcHEX60gensym317_3003165212, 0);
    if ((0 <= indexHEX60gensym317_3003165567)) {
    Temporary1 = t_3003165206.data[chckIndx(indexHEX60gensym317_3003165567, 0, (t_3003165206.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003165208;
    }
    
    result_3003165209 = Temporary1;

  return result_3003165209;

}

function newDoublyLinkedNode_3003165692(value_3003165694) {
  var result_3003165695 = null;

    result_3003165695 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_3003165695.value = nimCopy(result_3003165695.value, value_3003165694, NTI3003122530);

  return result_3003165695;

}

function mustRehash_3003166042(t_3003166044) {
  var result_3003166045 = false;

    if (!((t_3003166044.counter < (t_3003166044.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003166045 = ((mulInt((t_3003166044.data).length, 2) < mulInt(t_3003166044.counter, 3)) || (subInt((t_3003166044.data).length, t_3003166044.counter) < 4));

  return result_3003166045;

}

function rawInsert_3003166735(t_3003166739, data_3003166740, data_3003166740_Idx, key_3003166741, val_3003166742, hc_3003166743, h_3003166744) {
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field1 = key_3003166741;
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field2 = val_3003166742;
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field0 = hc_3003166743;

  
}

function enlarge_3003166299(t_3003166302) {
    var n_3003166305 = [];
    n_3003166305 = new Array(chckRange(mulInt((t_3003166302.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003166302.data).length, 2), 0, 2147483647) ; ++i) { n_3003166305[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003166302.data; t_3003166302.data = n_3003166305; n_3003166305 = Temporary1;    Label2: {
      var i_3003166403 = 0;
      var colontmp__2952790597 = 0;
      colontmp__2952790597 = (n_3003166305).length - 1;
      var res_2952790598 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790598 <= colontmp__2952790597)) break Label4;
            i_3003166403 = res_2952790598;
            var eh_3003166484 = n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003166484)) {
            var j_3003166488 = (eh_3003166484 & (t_3003166302.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003166302.data[chckIndx(j_3003166488, 0, (t_3003166302.data).length - 1)].Field0)) break Label6;
                  j_3003166488 = nextTry_1308622883(j_3003166488, (t_3003166302.data).length - 1);
                }
            };
            rawInsert_3003166735(t_3003166302, t_3003166302, "data", n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field1, n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field2, eh_3003166484, j_3003166488);
            }
            
            res_2952790598 = addInt(res_2952790598, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003166985(t_3003166988, key_3003166989, hc_3003166990) {
  var result_3003166991 = 0;

  BeforeRet: {
    if (((t_3003166988.data).length == 0)) {
    result_3003166991 = -1;
    break BeforeRet;
    }
    
    var h_3003167076 = (hc_3003166990 & (t_3003166988.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field0)) break Label2;
          if (((t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field0 == hc_3003166990) && HEX3DHEX3D_3087009993(t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field1, key_3003166989))) {
          result_3003166991 = h_3003167076;
          break BeforeRet;
          }
          
          h_3003167076 = nextTry_1308622883(h_3003167076, (t_3003166988.data).length - 1);
        }
    };
    result_3003166991 = subInt(-1, h_3003167076);
  };

  return result_3003166991;

}

function HEX5BHEX5DHEX3D_3003165774(t_3003165777, key_3003165778, val_3003165779) {
    if (((t_3003165777.data).length == 0)) {
    var correctSizeHEX60gensym322_3003165862 = slotsNeeded_1308622891(32);
    t_3003165777.counter = 0;
    t_3003165777.data = new Array(chckRange(correctSizeHEX60gensym322_3003165862, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym322_3003165862, 0, 2147483647) ; ++i) { t_3003165777.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003165867 = [0];
    var index_3003165874 = rawGet_3003165213(t_3003165777, key_3003165778, hc_3003165867, 0);
    if ((0 <= index_3003165874)) {
    t_3003165777.data[chckIndx(index_3003165874, 0, (t_3003165777.data).length - 1)].Field2 = val_3003165779;
    }
    else {
      if (((t_3003165777.data).length == 0)) {
      var correctSizeHEX60gensym325_3003166037 = slotsNeeded_1308622891(32);
      t_3003165777.counter = 0;
      t_3003165777.data = new Array(chckRange(correctSizeHEX60gensym325_3003166037, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_3003166037, 0, 2147483647) ; ++i) { t_3003165777.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003166042(t_3003165777)) {
      enlarge_3003166299(t_3003165777);
      index_3003165874 = rawGetKnownHC_3003166985(t_3003165777, key_3003165778, hc_3003165867[0]);
      }
      
      index_3003165874 = subInt(-1, index_3003165874);
      rawInsert_3003166735(t_3003165777, t_3003165777, "data", key_3003165778, val_3003165779, hc_3003165867[0], index_3003165874);
      t_3003165777.counter = addInt(t_3003165777.counter, 1);
    }
    

  
}

function prepend_3003167381(L_3003167383, n_3003167384) {
    n_3003167384.prev = null;
    n_3003167384.next = L_3003167383.head;
    if (!((L_3003167383.head == null))) {
    if (!((L_3003167383.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003167383.head.prev = n_3003167384;
    }
    
    L_3003167383.head = n_3003167384;
    if ((L_3003167383.tail == null)) {
    L_3003167383.tail = n_3003167384;
    }
    

  
}

function rawGet_3003167630(t_3003167633, key_3003167634, hc_3003167635, hc_3003167635_Idx) {
  var result_3003167636 = 0;

  BeforeRet: {
    hc_3003167635[hc_3003167635_Idx] = hash_3087009990(key_3003167634);
    if ((hc_3003167635[hc_3003167635_Idx] == 0)) {
    hc_3003167635[hc_3003167635_Idx] = 314159265;
    }
    
    if (((t_3003167633.data).length == 0)) {
    result_3003167636 = -1;
    break BeforeRet;
    }
    
    var h_3003167722 = (hc_3003167635[hc_3003167635_Idx] & (t_3003167633.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field0)) break Label2;
          if (((t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field0 == hc_3003167635[hc_3003167635_Idx]) && HEX3DHEX3D_3087009993(t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field1, key_3003167634))) {
          result_3003167636 = h_3003167722;
          break BeforeRet;
          }
          
          h_3003167722 = nextTry_1828716586(h_3003167722, (t_3003167633.data).length - 1);
        }
    };
    result_3003167636 = subInt(-1, h_3003167722);
  };

  return result_3003167636;

}

function exclImpl_3003167624(s_3003167626, key_3003167627) {
          var Temporary5;

  var result_3003167628 = false;

  BeforeRet: {
    var hc_3003167629 = [0];
    var i_3003167984 = rawGet_3003167630(s_3003167626, key_3003167627, hc_3003167629, 0);
    var msk_3003167988 = (s_3003167626.data).length - 1;
    result_3003167628 = true;
    if ((0 <= i_3003167984)) {
    result_3003167628 = false;
    s_3003167626.counter = subInt(s_3003167626.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003167994 = i_3003167984;
          var r_3003167995 = j_3003167994;
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0 = 0;
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003167984 = (addInt(i_3003167984, 1) & msk_3003167988);
                if (isEmpty_1828716580(s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003167995 = (s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0 & msk_3003167988);
                if (!(((((r_3003167995 <= i_3003167984) && (j_3003167994 < r_3003167995)) || ((j_3003167994 < r_3003167995) && (i_3003167984 < j_3003167994))) || ((i_3003167984 < j_3003167994) && (r_3003167995 <= i_3003167984))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)];
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)] = genericReset(s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)], NTI3003122586);
          s_3003167626.data[chckIndx(j_3003167994, 0, (s_3003167626.data).length - 1)] = nimCopy(s_3003167626.data[chckIndx(j_3003167994, 0, (s_3003167626.data).length - 1)], Temporary5, NTI3003122586);
        }
    };
    }
    
  };

  return result_3003167628;

}

function excl_3003167609(s_3003167611, key_3003167612) {
    var _ = exclImpl_3003167624(s_3003167611, key_3003167612);

  
}

function len_3003168748(t_3003168751) {
  var result_3003168752 = 0;

    result_3003168752 = t_3003168751.counter;

  return result_3003168752;

}

function len_3003168665(cache_3003168668) {
  var result_3003168669 = 0;

    result_3003168669 = len_3003168748(cache_3003168668.table);

  return result_3003168669;

}

function mustRehash_3003168889(t_3003168891) {
  var result_3003168892 = false;

    if (!((t_3003168891.counter < (t_3003168891.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003168892 = ((mulInt((t_3003168891.data).length, 2) < mulInt(t_3003168891.counter, 3)) || (subInt((t_3003168891.data).length, t_3003168891.counter) < 4));

  return result_3003168892;

}

function rawGetKnownHC_3003169495(t_3003169498, key_3003169499, hc_3003169500) {
  var result_3003169501 = 0;

  BeforeRet: {
    if (((t_3003169498.data).length == 0)) {
    result_3003169501 = -1;
    break BeforeRet;
    }
    
    var h_3003169586 = (hc_3003169500 & (t_3003169498.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field0)) break Label2;
          if (((t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field0 == hc_3003169500) && HEX3DHEX3D_3087009993(t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field1, key_3003169499))) {
          result_3003169501 = h_3003169586;
          break BeforeRet;
          }
          
          h_3003169586 = nextTry_1828716586(h_3003169586, (t_3003169498.data).length - 1);
        }
    };
    result_3003169501 = subInt(-1, h_3003169586);
  };

  return result_3003169501;

}

function rawInsert_3003169995(s_3003169997, data_3003169998, data_3003169998_Idx, key_3003169999, hc_3003170000, h_3003170001) {
    if (((data_3003169998[data_3003169998_Idx]).length == 0)) {
    var correctSizeHEX60gensym344_3003170084 = slotsNeeded_1828716594(64);
    s_3003169997.counter = 0;
    s_3003169997.data = new Array(chckRange(correctSizeHEX60gensym344_3003170084, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym344_3003170084, 0, 2147483647) ; ++i) { s_3003169997.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003169998[data_3003169998_Idx][chckIndx(h_3003170001, 0, (data_3003169998[data_3003169998_Idx]).length - 1)].Field1 = key_3003169999;
    data_3003169998[data_3003169998_Idx][chckIndx(h_3003170001, 0, (data_3003169998[data_3003169998_Idx]).length - 1)].Field0 = hc_3003170000;

  
}

function enlarge_3003169152(s_3003169154) {
    var n_3003169156 = [];
    n_3003169156 = new Array(chckRange(mulInt((s_3003169154.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003169154.data).length, 2), 0, 2147483647) ; ++i) { n_3003169156[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003169154.data; s_3003169154.data = n_3003169156; n_3003169156 = Temporary1;    Label2: {
      var i_3003169254 = 0;
      var colontmp__2952790606 = 0;
      colontmp__2952790606 = (n_3003169156).length - 1;
      var res_2952790607 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790607 <= colontmp__2952790606)) break Label4;
            i_3003169254 = res_2952790607;
            if (isFilled_1828716583(n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0)) {
            var j_3003169830 = subInt(-1, rawGetKnownHC_3003169495(s_3003169154, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field1, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0));
            rawInsert_3003169995(s_3003169154, s_3003169154, "data", n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field1, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0, j_3003169830);
            }
            
            res_2952790607 = addInt(res_2952790607, 1);
          }
      };
    };

  
}

function incl_3003168773(s_3003168775, key_3003168776) {
    if (((s_3003168775.data).length == 0)) {
    var correctSizeHEX60gensym337_3003168859 = slotsNeeded_1828716594(64);
    s_3003168775.counter = 0;
    s_3003168775.data = new Array(chckRange(correctSizeHEX60gensym337_3003168859, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_3003168859, 0, 2147483647) ; ++i) { s_3003168775.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003168874 = [0];
    var index_3003168888 = rawGet_3003167630(s_3003168775, key_3003168776, hc_3003168874, 0);
    if ((index_3003168888 < 0)) {
    if (mustRehash_3003168889(s_3003168775)) {
    enlarge_3003169152(s_3003168775);
    index_3003168888 = rawGetKnownHC_3003169495(s_3003168775, key_3003168776, hc_3003168874[0]);
    }
    
    rawInsert_3003169995(s_3003168775, s_3003168775, "data", key_3003168776, hc_3003168874[0], subInt(-1, index_3003168888));
    s_3003168775.counter = addInt(s_3003168775.counter, 1);
    }
    

  
}

function del_3003170351(t_3003170354, key_3003170355) {
    var hc_3003170356 = [0];
    var i_3003170363 = rawGet_3003165213(t_3003170354, key_3003170355, hc_3003170356, 0);
    var mskHEX60gensym36_3003170367 = (t_3003170354.data).length - 1;
    if ((0 <= i_3003170363)) {
    t_3003170354.counter = subInt(t_3003170354.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003170374 = i_3003170363;
            var rHEX60gensym36_3003170375 = jHEX60gensym36_3003170374;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0 = 0;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field1 = null;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003170363 = (addInt(i_3003170363, 1) & mskHEX60gensym36_3003170367);
                  if (isEmpty_1308622877(t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003170375 = (t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0 & mskHEX60gensym36_3003170367);
                  if (!(((((rHEX60gensym36_3003170375 <= i_3003170363) && (jHEX60gensym36_3003170374 < rHEX60gensym36_3003170375)) || ((jHEX60gensym36_3003170374 < rHEX60gensym36_3003170375) && (i_3003170363 < jHEX60gensym36_3003170374))) || ((i_3003170363 < jHEX60gensym36_3003170374) && (rHEX60gensym36_3003170375 <= i_3003170363))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003170354.data[chckIndx(jHEX60gensym36_3003170374, 0, (t_3003170354.data).length - 1)] = nimCopy(t_3003170354.data[chckIndx(jHEX60gensym36_3003170374, 0, (t_3003170354.data).length - 1)], t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)], NTI3003122566);
          }
      };
    };
    }
    

  
}

function remove_3003171110(L_3003171112, n_3003171113) {
    if ((n_3003171113 == L_3003171112.tail)) {
    L_3003171112.tail = n_3003171113.prev;
    }
    
    if ((n_3003171113 == L_3003171112.head)) {
    L_3003171112.head = n_3003171113.next;
    }
    
    if (!((n_3003171113.next == null))) {
    n_3003171113.next.prev = n_3003171113.prev;
    }
    
    if (!((n_3003171113.prev == null))) {
    n_3003171113.prev.next = n_3003171113.next;
    }
    

  
}

function resize_3003168583(cache_3003168586) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003168586.capacity < len_3003168665(cache_3003168586))) break Label2;
          var t_3003168753 = cache_3003168586.list.tail;
          if (cache_3003168586.recordRemovedKeys) {
          incl_3003168773(cache_3003168586.removedKeys, t_3003168753.value.key);
          }
          
          del_3003170351(cache_3003168586.table, t_3003168753.value.key);
          remove_3003171110(cache_3003168586.list, t_3003168753);
        }
    };

  
}

function addNewNode_3003165684(cache_3003165687, key_3003165688, val_3003165689) {
    var node_3003165710 = newDoublyLinkedNode_3003165692({key: key_3003165688, val: nimCopy(null, val_3003165689, NTI3087007775)});
    HEX5BHEX5DHEX3D_3003165774(cache_3003165687.table, key_3003165688, node_3003165710);
    prepend_3003167381(cache_3003165687.list, node_3003165710);
    if (cache_3003165687.recordRemovedKeys) {
    excl_3003167609(cache_3003165687.removedKeys, key_3003165688);
    }
    
    resize_3003168583(cache_3003165687);

  
}

function HEX5BHEX5DHEX3D_3003165108(cache_3003165111, key_3003165112, val_3003165113) {
    var node_3003165657 = getOrDefault_3003165203(cache_3003165111.table, key_3003165112, null);
    if ((node_3003165657 == null)) {
    addNewNode_3003165684(cache_3003165111, key_3003165112, val_3003165113);
    }
    else {
      node_3003165657.value.val = nimCopy(node_3003165657.value.val, val_3003165113, NTI3087007775);
      remove_3003171110(cache_3003165111.list, node_3003165657);
      prepend_3003167381(cache_3003165111.list, node_3003165657);
    }
    

  
}

function initDoublyLinkedList_3003171590() {
  var result_3003171592 = ({head: null, tail: null});

  return result_3003171592;

}

function initTable_3003171596(initialSize_3003171599) {
  var result_3003171600 = ({data: [], counter: 0});

    var correctSizeHEX60gensym345_3003171602 = slotsNeeded_1308622891(chckRange(initialSize_3003171599, 0, 2147483647));
    result_3003171600.counter = 0;
    result_3003171600.data = new Array(chckRange(correctSizeHEX60gensym345_3003171602, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym345_3003171602, 0, 2147483647) ; ++i) { result_3003171600.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003171600;

}

function newLruCache_3003171580(capacity_3003171583, recordRemovedKeys_3003171584) {
  var result_3003171585 = null;

    result_3003171585 = {capacity: capacity_3003171583, list: initDoublyLinkedList_3003171590(), table: initTable_3003171596(correctSize_3036676117(capacity_3003171583)), recordRemovedKeys: recordRemovedKeys_3003171584, removedKeys: ({data: [], counter: 0})};

  return result_3003171585;

}

function newCache_3003171575(capacity_3003171578) {
  var result_3003171579 = null;

    result_3003171579 = newLruCache_3003171580(capacity_3003171578, false);

  return result_3003171579;

}

function init_3003171570(result_3003171573, result_3003171573_Idx, capacity_3003171574) {
    result_3003171573[result_3003171573_Idx] = newCache_3003171575(capacity_3003171574);

  
}

function mustRehash_3003172323(t_3003172325) {
  var result_3003172326 = false;

    if (!((t_3003172325.counter < (t_3003172325.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003172326 = ((mulInt((t_3003172325.data).length, 2) < mulInt(t_3003172325.counter, 3)) || (subInt((t_3003172325.data).length, t_3003172325.counter) < 4));

  return result_3003172326;

}

function rawInsert_3003173016(t_3003173020, data_3003173021, data_3003173021_Idx, key_3003173022, val_3003173023, hc_3003173024, h_3003173025) {
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field1 = key_3003173022;
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field2 = val_3003173023;
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field0 = hc_3003173024;

  
}

function enlarge_3003172580(t_3003172583) {
    var n_3003172586 = [];
    n_3003172586 = new Array(chckRange(mulInt((t_3003172583.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003172583.data).length, 2), 0, 2147483647) ; ++i) { n_3003172586[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3003172583.data; t_3003172583.data = n_3003172586; n_3003172586 = Temporary1;    Label2: {
      var i_3003172684 = 0;
      var colontmp__2952790614 = 0;
      colontmp__2952790614 = (n_3003172586).length - 1;
      var res_2952790615 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790615 <= colontmp__2952790614)) break Label4;
            i_3003172684 = res_2952790615;
            var eh_3003172765 = n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003172765)) {
            var j_3003172769 = (eh_3003172765 & (t_3003172583.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003172583.data[chckIndx(j_3003172769, 0, (t_3003172583.data).length - 1)].Field0)) break Label6;
                  j_3003172769 = nextTry_1308622883(j_3003172769, (t_3003172583.data).length - 1);
                }
            };
            rawInsert_3003173016(t_3003172583, t_3003172583, "data", n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field1, n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field2, eh_3003172765, j_3003172769);
            }
            
            res_2952790615 = addInt(res_2952790615, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003173275(t_3003173278, key_3003173279, hc_3003173280) {
  var result_3003173281 = 0;

  BeforeRet: {
    if (((t_3003173278.data).length == 0)) {
    result_3003173281 = -1;
    break BeforeRet;
    }
    
    var h_3003173366 = (hc_3003173280 & (t_3003173278.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field0)) break Label2;
          if (((t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field0 == hc_3003173280) && (t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field1 == key_3003173279))) {
          result_3003173281 = h_3003173366;
          break BeforeRet;
          }
          
          h_3003173366 = nextTry_1308622883(h_3003173366, (t_3003173278.data).length - 1);
        }
    };
    result_3003173281 = subInt(-1, h_3003173366);
  };

  return result_3003173281;

}

function HEX5BHEX5DHEX3D_3003171704(t_3003171707, key_3003171708, val_3003171709) {
    if (((t_3003171707.data).length == 0)) {
    var correctSizeHEX60gensym348_3003171793 = slotsNeeded_1308622891(32);
    t_3003171707.counter = 0;
    t_3003171707.data = new Array(chckRange(correctSizeHEX60gensym348_3003171793, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym348_3003171793, 0, 2147483647) ; ++i) { t_3003171707.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3003171798 = [0];
    var index_3003172155 = rawGet_3003171799(t_3003171707, key_3003171708, hc_3003171798, 0);
    if ((0 <= index_3003172155)) {
    t_3003171707.data[chckIndx(index_3003172155, 0, (t_3003171707.data).length - 1)].Field2 = val_3003171709;
    }
    else {
      if (((t_3003171707.data).length == 0)) {
      var correctSizeHEX60gensym353_3003172318 = slotsNeeded_1308622891(32);
      t_3003171707.counter = 0;
      t_3003171707.data = new Array(chckRange(correctSizeHEX60gensym353_3003172318, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym353_3003172318, 0, 2147483647) ; ++i) { t_3003171707.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3003172323(t_3003171707)) {
      enlarge_3003172580(t_3003171707);
      index_3003172155 = rawGetKnownHC_3003173275(t_3003171707, key_3003171708, hc_3003171798[0]);
      }
      
      index_3003172155 = subInt(-1, index_3003172155);
      rawInsert_3003173016(t_3003171707, t_3003171707, "data", key_3003171708, val_3003171709, hc_3003171798[0], index_3003172155);
      t_3003171707.counter = addInt(t_3003171707.counter, 1);
    }
    

  
}

function formatValue_3003218813(result_3003218815, result_3003218815_Idx, value_3003218816, specifier_3003218817) {
    formatValue_721420459(result_3003218815, result_3003218815_Idx, HEX24_3019909728(value_3003218816), specifier_3003218817);

  
}

function getAstNode_3003175776(ctxHEX60gensym74_3003175777, idHEX60gensym74_3003175778) {
  var result_3003175780 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_3003175781 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_3003175778, NTI2046820355), Field1: 0}, NTI3019898905);
    if (contains_3003122598(ctxHEX60gensym74_3003175777.itemsAstNode, itemHEX60gensym74_3003175781)) {
    result_3003175780 = nimCopy(result_3003175780, some_2986344674(HEX5BHEX5D_3003123165(ctxHEX60gensym74_3003175777.itemsAstNode, itemHEX60gensym74_3003175781)), NTI2986344567);
    break BeforeRet;
    }
    
    result_3003175780 = nimCopy(result_3003175780, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_3003175780;

}

function recoverValue_3003122471(ctx_3003122472, key_3003122473) {
      var Temporary1;

    var fmtRes_3003218812 = [mnewString(0)];
    fmtRes_3003218812[0].push.apply(fmtRes_3003218812[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003218812, 0, key_3003122473, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003218812[0], NTI33554449)]);
      var oHEX60gensym532_3003218823 = getAstNode_3003175776(ctx_3003122472, key_3003122473.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym532_3003218823)) Temporary1 = false; else {        var node_3003218869 = get_2986346350(oHEX60gensym532_3003218823);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003130737(ctx_3003122472.queryCacheValue, node_3003218869, errorValue_3087008431());
    }
    

  
}

function recoverType_3003122474(ctx_3003122475, key_3003122476) {
      var Temporary1;

    var fmtRes_3003218946 = [mnewString(0)];
    fmtRes_3003218946[0].push.apply(fmtRes_3003218946[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003218946, 0, key_3003122476, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003218946[0], NTI33554449)]);
      var oHEX60gensym534_3003218954 = getAstNode_3003175776(ctx_3003122475, key_3003122476.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym534_3003218954)) Temporary1 = false; else {        var node_3003219000 = get_2986346350(oHEX60gensym534_3003218954);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003123978(ctx_3003122475.queryCacheType, node_3003219000, errorType_3087008120());
    }
    

  
}

function recoverSymbol_3003122477(ctx_3003122478, key_3003122479) {
      var Temporary1;

    var fmtRes_3003219077 = [mnewString(0)];
    fmtRes_3003219077[0].push.apply(fmtRes_3003219077[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003219077, 0, key_3003122479, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003219077[0], NTI33554449)]);
      var oHEX60gensym536_3003219085 = getAstNode_3003175776(ctx_3003122478, key_3003122479.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym536_3003219085)) Temporary1 = false; else {        var node_3003219131 = get_2986346350(oHEX60gensym536_3003219085);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003135049(ctx_3003122478.queryCacheSymbol, node_3003219131, none_3003185212());
    }
    

  
}

function recoverSymbols_3003122480(ctx_3003122481, key_3003122482) {
      var Temporary1;

    var fmtRes_3003219210 = [mnewString(0)];
    fmtRes_3003219210[0].push.apply(fmtRes_3003219210[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003219210, 0, key_3003122482, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003219210[0], NTI33554449)]);
      var oHEX60gensym538_3003219218 = getAstNode_3003175776(ctx_3003122481, key_3003122482.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym538_3003219218)) Temporary1 = false; else {        var node_3003219264 = get_2986346350(oHEX60gensym538_3003219218);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003139353(ctx_3003122481.queryCacheSymbols, node_3003219264, newTable_3003219328(32));
    }
    

  
}

function initDoublyLinkedList_3003173910() {
  var result_3003173912 = ({head: null, tail: null});

  return result_3003173912;

}

function initTable_3003173916(initialSize_3003173919) {
  var result_3003173920 = ({data: [], counter: 0});

    var correctSizeHEX60gensym361_3003173922 = slotsNeeded_1308622891(chckRange(initialSize_3003173919, 0, 2147483647));
    result_3003173920.counter = 0;
    result_3003173920.data = new Array(chckRange(correctSizeHEX60gensym361_3003173922, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_3003173922, 0, 2147483647) ; ++i) { result_3003173920.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003173920;

}

function newLruCache_3003173900(capacity_3003173903, recordRemovedKeys_3003173904) {
  var result_3003173905 = null;

    result_3003173905 = {capacity: capacity_3003173903, list: initDoublyLinkedList_3003173910(), table: initTable_3003173916(correctSize_3036676117(capacity_3003173903)), recordRemovedKeys: recordRemovedKeys_3003173904, removedKeys: ({data: [], counter: 0})};

  return result_3003173905;

}

function newCache_3003173895(capacity_3003173898) {
  var result_3003173899 = null;

    result_3003173899 = newLruCache_3003173900(capacity_3003173898, false);

  return result_3003173899;

}

function init_3003173890(result_3003173893, result_3003173893_Idx, capacity_3003173894) {
    result_3003173893[result_3003173893_Idx] = newCache_3003173895(capacity_3003173894);

  
}

function initDoublyLinkedList_3003174008() {
  var result_3003174010 = ({head: null, tail: null});

  return result_3003174010;

}

function initTable_3003174014(initialSize_3003174017) {
  var result_3003174018 = ({data: [], counter: 0});

    var correctSizeHEX60gensym363_3003174020 = slotsNeeded_1308622891(chckRange(initialSize_3003174017, 0, 2147483647));
    result_3003174018.counter = 0;
    result_3003174018.data = new Array(chckRange(correctSizeHEX60gensym363_3003174020, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym363_3003174020, 0, 2147483647) ; ++i) { result_3003174018.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174018;

}

function newLruCache_3003173998(capacity_3003174001, recordRemovedKeys_3003174002) {
  var result_3003174003 = null;

    result_3003174003 = {capacity: capacity_3003174001, list: initDoublyLinkedList_3003174008(), table: initTable_3003174014(correctSize_3036676117(capacity_3003174001)), recordRemovedKeys: recordRemovedKeys_3003174002, removedKeys: ({data: [], counter: 0})};

  return result_3003174003;

}

function newCache_3003173993(capacity_3003173996) {
  var result_3003173997 = null;

    result_3003173997 = newLruCache_3003173998(capacity_3003173996, false);

  return result_3003173997;

}

function init_3003173988(result_3003173991, result_3003173991_Idx, capacity_3003173992) {
    result_3003173991[result_3003173991_Idx] = newCache_3003173993(capacity_3003173992);

  
}

function initDoublyLinkedList_3003174106() {
  var result_3003174108 = ({head: null, tail: null});

  return result_3003174108;

}

function initTable_3003174112(initialSize_3003174115) {
  var result_3003174116 = ({data: [], counter: 0});

    var correctSizeHEX60gensym365_3003174118 = slotsNeeded_1308622891(chckRange(initialSize_3003174115, 0, 2147483647));
    result_3003174116.counter = 0;
    result_3003174116.data = new Array(chckRange(correctSizeHEX60gensym365_3003174118, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym365_3003174118, 0, 2147483647) ; ++i) { result_3003174116.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174116;

}

function newLruCache_3003174096(capacity_3003174099, recordRemovedKeys_3003174100) {
  var result_3003174101 = null;

    result_3003174101 = {capacity: capacity_3003174099, list: initDoublyLinkedList_3003174106(), table: initTable_3003174112(correctSize_3036676117(capacity_3003174099)), recordRemovedKeys: recordRemovedKeys_3003174100, removedKeys: ({data: [], counter: 0})};

  return result_3003174101;

}

function newCache_3003174091(capacity_3003174094) {
  var result_3003174095 = null;

    result_3003174095 = newLruCache_3003174096(capacity_3003174094, false);

  return result_3003174095;

}

function init_3003174086(result_3003174089, result_3003174089_Idx, capacity_3003174090) {
    result_3003174089[result_3003174089_Idx] = newCache_3003174091(capacity_3003174090);

  
}

function initDoublyLinkedList_3003174204() {
  var result_3003174206 = ({head: null, tail: null});

  return result_3003174206;

}

function initTable_3003174210(initialSize_3003174213) {
  var result_3003174214 = ({data: [], counter: 0});

    var correctSizeHEX60gensym367_3003174216 = slotsNeeded_1308622891(chckRange(initialSize_3003174213, 0, 2147483647));
    result_3003174214.counter = 0;
    result_3003174214.data = new Array(chckRange(correctSizeHEX60gensym367_3003174216, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym367_3003174216, 0, 2147483647) ; ++i) { result_3003174214.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174214;

}

function newLruCache_3003174194(capacity_3003174197, recordRemovedKeys_3003174198) {
  var result_3003174199 = null;

    result_3003174199 = {capacity: capacity_3003174197, list: initDoublyLinkedList_3003174204(), table: initTable_3003174210(correctSize_3036676117(capacity_3003174197)), recordRemovedKeys: recordRemovedKeys_3003174198, removedKeys: ({data: [], counter: 0})};

  return result_3003174199;

}

function newCache_3003174189(capacity_3003174192) {
  var result_3003174193 = null;

    result_3003174193 = newLruCache_3003174194(capacity_3003174192, false);

  return result_3003174193;

}

function init_3003174184(result_3003174187, result_3003174187_Idx, capacity_3003174188) {
    result_3003174187[result_3003174187_Idx] = newCache_3003174189(capacity_3003174188);

  
}

function initTable_3003174259(initialSize_3003174262) {
  var result_3003174263 = ({data: [], counter: 0});

    var correctSizeHEX60gensym371_3003174265 = slotsNeeded_1308622891(chckRange(initialSize_3003174262, 0, 2147483647));
    result_3003174263.counter = 0;
    result_3003174263.data = new Array(chckRange(correctSizeHEX60gensym371_3003174265, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym371_3003174265, 0, 2147483647) ; ++i) { result_3003174263.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3003174263;

}

function initTable_3003174279(initialSize_3003174282) {
  var result_3003174283 = ({data: [], counter: 0});

    var correctSizeHEX60gensym373_3003174285 = slotsNeeded_1308622891(chckRange(initialSize_3003174282, 0, 2147483647));
    result_3003174283.counter = 0;
    result_3003174283.data = new Array(chckRange(correctSizeHEX60gensym373_3003174285, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym373_3003174285, 0, 2147483647) ; ++i) { result_3003174283.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3003174283;

}

function newContext_3003122510() {
    
function HEX3Aanonymous_3003122519(itemHEX60gensym28_3003122520) {
      var result_3003122521 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym28_3003122520))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym28_3003122520) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsType.forcedCalls = addInt(ctx_3003121848.statsType.forcedCalls, 1);
        var argHEX60gensym28_3003123913 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym28_3003122520);
        var valueHEX60gensym28_3003123914 = computeTypeImpl_3003122483(ctx_3003121848, argHEX60gensym28_3003123913);
        HEX5BHEX5DHEX3D_3003123978(ctx_3003121848.queryCacheType, argHEX60gensym28_3003123913, valueHEX60gensym28_3003123914);
        result_3003122521 = nimCopy(null, fingerprint_3087008346(valueHEX60gensym28_3003123914), NTI3019898904);
        break BeforeRet;
      };

      return result_3003122521;

    }
    
function HEX3Aanonymous_3003130498(itemHEX60gensym29_3003130499) {
      var result_3003130500 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym29_3003130499))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym29_3003130499) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsValue.forcedCalls = addInt(ctx_3003121848.statsValue.forcedCalls, 1);
        var argHEX60gensym29_3003130672 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym29_3003130499);
        var valueHEX60gensym29_3003130673 = computeValueImpl_3003122486(ctx_3003121848, argHEX60gensym29_3003130672);
        HEX5BHEX5DHEX3D_3003130737(ctx_3003121848.queryCacheValue, argHEX60gensym29_3003130672, valueHEX60gensym29_3003130673);
        result_3003130500 = nimCopy(null, fingerprint_3087008527(valueHEX60gensym29_3003130673), NTI3019898904);
        break BeforeRet;
      };

      return result_3003130500;

    }
    
function HEX3Aanonymous_3003134809(itemHEX60gensym30_3003134810) {
      var result_3003134811 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym30_3003134810))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3019899092(itemHEX60gensym30_3003134810) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbol.forcedCalls = addInt(ctx_3003121848.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_3003134983 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym30_3003134810);
        var valueHEX60gensym30_3003134985 = computeSymbolImpl_3003122489(ctx_3003121848, argHEX60gensym30_3003134983);
        HEX5BHEX5DHEX3D_3003135049(ctx_3003121848.queryCacheSymbol, argHEX60gensym30_3003134983, valueHEX60gensym30_3003134985);
        result_3003134811 = nimCopy(null, fingerprint_3087009331(valueHEX60gensym30_3003134985), NTI3019898904);
        break BeforeRet;
      };

      return result_3003134811;

    }
    
function HEX3Aanonymous_3003139112(itemHEX60gensym31_3003139113) {
      var result_3003139114 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym31_3003139113))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3019899092(itemHEX60gensym31_3003139113) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbols.forcedCalls = addInt(ctx_3003121848.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_3003139286 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym31_3003139113);
        var valueHEX60gensym31_3003139289 = computeSymbolsImpl_3003122493(ctx_3003121848, argHEX60gensym31_3003139286);
        HEX5BHEX5DHEX3D_3003139353(ctx_3003121848.queryCacheSymbols, argHEX60gensym31_3003139286, valueHEX60gensym31_3003139289);
        result_3003139114 = nimCopy(null, fingerprint_3087008992(valueHEX60gensym31_3003139289), NTI3019898904);
        break BeforeRet;
      };

      return result_3003139114;

    }
    
function HEX3Aanonymous_3003143416(itemHEX60gensym32_3003143417) {
      var result_3003143418 = [];

      BeforeRet: {
        if (!(contains_3003143495(ctx_3003121848.itemsSymbol, itemHEX60gensym32_3003143417))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym32_3003143417) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbolType.forcedCalls = addInt(ctx_3003121848.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_3003144795 = HEX5BHEX5D_3003144048(ctx_3003121848.itemsSymbol, itemHEX60gensym32_3003143417);
        var valueHEX60gensym32_3003144796 = computeSymbolTypeImpl_3003122498(ctx_3003121848, argHEX60gensym32_3003144795);
        HEX5BHEX5DHEX3D_3003144860(ctx_3003121848.queryCacheSymbolType, argHEX60gensym32_3003144795, valueHEX60gensym32_3003144796);
        result_3003143418 = nimCopy(null, fingerprint_3087008346(valueHEX60gensym32_3003144796), NTI3019898904);
        break BeforeRet;
      };

      return result_3003143418;

    }
    
function HEX3Aanonymous_3003151373(itemHEX60gensym33_3003151374) {
      var result_3003151375 = [];

      BeforeRet: {
        if (!(contains_3003143495(ctx_3003121848.itemsSymbol, itemHEX60gensym33_3003151374))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym33_3003151374) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbolValue.forcedCalls = addInt(ctx_3003121848.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_3003151547 = HEX5BHEX5D_3003144048(ctx_3003121848.itemsSymbol, itemHEX60gensym33_3003151374);
        var valueHEX60gensym33_3003151548 = computeSymbolValueImpl_3003122501(ctx_3003121848, argHEX60gensym33_3003151547);
        HEX5BHEX5DHEX3D_3003151612(ctx_3003121848.queryCacheSymbolValue, argHEX60gensym33_3003151547, valueHEX60gensym33_3003151548);
        result_3003151375 = nimCopy(null, fingerprint_3087008527(valueHEX60gensym33_3003151548), NTI3019898904);
        break BeforeRet;
      };

      return result_3003151375;

    }
    
function HEX3Aanonymous_3003155676(itemHEX60gensym34_3003155677) {
      var result_3003155678 = [];

      BeforeRet: {
        if (!(contains_3003155755(ctx_3003121848.itemsFunctionExecutionContext, itemHEX60gensym34_3003155677))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3019899092(itemHEX60gensym34_3003155677) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsFunctionExecution.forcedCalls = addInt(ctx_3003121848.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_3003157064 = HEX5BHEX5D_3003156308(ctx_3003121848.itemsFunctionExecutionContext, itemHEX60gensym34_3003155677);
        var valueHEX60gensym34_3003157065 = computeFunctionExecutionImpl_3003122504(ctx_3003121848, argHEX60gensym34_3003157064);
        HEX5BHEX5DHEX3D_3003157129(ctx_3003121848.queryCacheFunctionExecution, argHEX60gensym34_3003157064, valueHEX60gensym34_3003157065);
        result_3003155678 = nimCopy(null, [], NTI3003146250);
        break BeforeRet;
      };

      return result_3003155678;

    }
    
function HEX3Aanonymous_3003163655(itemHEX60gensym35_3003163656) {
      var result_3003163657 = [];

      BeforeRet: {
        if (!(contains_3003163734(ctx_3003121848.itemsNodeLayoutInput, itemHEX60gensym35_3003163656))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3019899092(itemHEX60gensym35_3003163656) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsNodeLayout.forcedCalls = addInt(ctx_3003121848.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_3003165043 = HEX5BHEX5D_3003164287(ctx_3003121848.itemsNodeLayoutInput, itemHEX60gensym35_3003163656);
        var valueHEX60gensym35_3003165044 = computeNodeLayoutImpl_3003122507(ctx_3003121848, argHEX60gensym35_3003165043);
        HEX5BHEX5DHEX3D_3003165108(ctx_3003121848.queryCacheNodeLayout, argHEX60gensym35_3003165043, valueHEX60gensym35_3003165044);
        result_3003163657 = nimCopy(null, [], NTI3003150847);
        break BeforeRet;
      };

      return result_3003163657;

    }
    
function HEX3Aanonymous_3003171639(keyHEX60gensym36_3003171640) {
        recoverValue_3003122471(ctx_3003121848, keyHEX60gensym36_3003171640);

      
    }
    
function HEX3Aanonymous_3003173633(keyHEX60gensym37_3003173634) {
        recoverType_3003122474(ctx_3003121848, keyHEX60gensym37_3003173634);

      
    }
    
function HEX3Aanonymous_3003173709(keyHEX60gensym38_3003173710) {
        recoverSymbol_3003122477(ctx_3003121848, keyHEX60gensym38_3003173710);

      
    }
    
function HEX3Aanonymous_3003173785(keyHEX60gensym39_3003173786) {
        recoverSymbols_3003122480(ctx_3003121848, keyHEX60gensym39_3003173786);

      
    }

  var result_3003122511 = null;

  BeforeRet: {
    var ctx_3003121848 = null;
    ctx_3003121848 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_3003121848.depGraph = newDependencyGraph_3019899156();
    ctx_3003121848.dependencyStack = nimCopy(null, [], NTI3003122624);
    ctx_3003121848.updateType = HEX3Aanonymous_3003122519;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateType);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 0, [84,121,112,101]);
    init_3003130434(ctx_3003121848, "queryCacheType", 2000);
    ctx_3003121848.updateValue = HEX3Aanonymous_3003130498;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateValue);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3003134745(ctx_3003121848, "queryCacheValue", 2000);
    ctx_3003121848.updateSymbol = HEX3Aanonymous_3003134809;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbol);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3003139048(ctx_3003121848, "queryCacheSymbol", 2000);
    ctx_3003121848.updateSymbols = HEX3Aanonymous_3003139112;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbols);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3003143352(ctx_3003121848, "queryCacheSymbols", 2000);
    ctx_3003121848.updateSymbolType = HEX3Aanonymous_3003143416;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbolType);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_3003151309(ctx_3003121848, "queryCacheSymbolType", 2000);
    ctx_3003121848.updateSymbolValue = HEX3Aanonymous_3003151373;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3003155612(ctx_3003121848, "queryCacheSymbolValue", 2000);
    ctx_3003121848.updateFunctionExecution = HEX3Aanonymous_3003155676;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3003163591(ctx_3003121848, "queryCacheFunctionExecution", 2000);
    ctx_3003121848.updateNodeLayout = HEX3Aanonymous_3003163655;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_3003171570(ctx_3003121848, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 1, HEX3Aanonymous_3003171639);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 0, HEX3Aanonymous_3003173633);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 2, HEX3Aanonymous_3003173709);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 3, HEX3Aanonymous_3003173785);
    init_3003173890(ctx_3003121848, "itemsAstNode", 2000);
    init_3003173988(ctx_3003121848, "itemsNodeLayoutInput", 2000);
    init_3003174086(ctx_3003121848, "itemsSymbol", 2000);
    init_3003174184(ctx_3003121848, "itemsFunctionExecutionContext", 2000);
    ctx_3003121848.globalScope = nimCopy(ctx_3003121848.globalScope, initTable_3003174248(32), NTI3087008712);
    ctx_3003121848.enableQueryLogging = false;
    ctx_3003121848.enableExecutionLogging = false;
    ctx_3003121848.diagnosticsPerNode = nimCopy(ctx_3003121848.diagnosticsPerNode, initTable_3003174259(32), NTI3003121989);
    ctx_3003121848.diagnosticsPerQuery = nimCopy(ctx_3003121848.diagnosticsPerQuery, initTable_3003174279(32), NTI3003122006);
    result_3003122511 = ctx_3003121848;
    break BeforeRet;
  };

  return result_3003122511;

}
var executionOutput_2952790070 = [{lines: [], scroll: 0}];
var ctx_2952790071 = newContext_3003122510();
ctx_2952790071.enableLogging = false;
ctx_2952790071.enableQueryLogging = false;

function newFunctionValue_3087008471(impl_3087008472) {
  var result_3087008473 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008473 = nimCopy(result_3087008473, {kind: 4, impl: impl_3087008472, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008473;

}

function createBinaryIntOperator_2952790618(operator_2952790622) {
    
function HEX3Aanonymous_2952790624(values_2952790625) {
        var Temporary1;
        var Temporary2;

      var result_2952790626 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2952790625).length < 2)) {
        result_2952790626 = nimCopy(result_2952790626, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2952790625[chckIndx(0, 0, (values_2952790625).length - 1)].kind == 3)) || !((values_2952790625[chckIndx(1, 0, (values_2952790625).length - 1)].kind == 3)))) {
        result_2952790626 = nimCopy(result_2952790626, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2952790625[chckIndx(0, 0, (values_2952790625).length - 1)];
        if (ConstSet160[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2952790625[chckIndx(1, 0, (values_2952790625).length - 1)];
        if (ConstSet161[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2952790626 = nimCopy(result_2952790626, {kind: 3, intValue: operator_2952790622(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2952790626;

    }

  var result_2952790623 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790623 = nimCopy(result_2952790623, newFunctionValue_3087008471(HEX3Aanonymous_2952790624), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790623;

}

function createUnityIntOperator_2952790638(operator_2952790641) {
    
function HEX3Aanonymous_2952790643(values_2952790644) {
        var Temporary1;

      var result_2952790645 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2952790644).length < 1)) {
        result_2952790645 = nimCopy(result_2952790645, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2952790649 = nimCopy(null, values_2952790644[chckIndx(0, 0, (values_2952790644).length - 1)], NTI3087007751);
        if (!((value_2952790649.kind == 3))) {
        result_2952790645 = nimCopy(result_2952790645, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2952790649;
        if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2952790645 = nimCopy(result_2952790645, {kind: 3, intValue: operator_2952790641(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2952790645;

    }

  var result_2952790642 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790642 = nimCopy(result_2952790642, newFunctionValue_3087008471(HEX3Aanonymous_2952790643), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790642;

}

function stringValue_3087008465(value_3087008466) {
  var result_3087008467 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008467 = nimCopy(result_3087008467, {kind: 2, stringValue: nimCopy(null, value_3087008466, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008467;

}

function join_2952790793(a_2952790795, sep_2952790796) {
  var result_2952790797 = [];

    result_2952790797 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2952790812 = 0;
      var x_2952790813 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952792548 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952792548 < (a_2952790795).length)) break Label3;
            i_2952790812 = i_2952792548;
            x_2952790813 = nimCopy(x_2952790813, a_2952790795[chckIndx(i_2952792548, 0, (a_2952790795).length - 1)], NTI3087007751);
            if ((0 < i_2952790812)) {
            result_2952790797.push.apply(result_2952790797, sep_2952790796);;
            }
            
            result_2952790797.push.apply(result_2952790797, HEX24_3087008487(x_2952790813));;
            i_2952792548 = addInt(i_2952792548, 1);
          }
      };
    };

  return result_2952790797;

}

function delete_2952790831(s_2952790833, s_2952790833_Idx, slice_2952790834) {
    if (!((((slice_2952790834.a < (s_2952790833[s_2952790833_Idx]).length) && (0 <= slice_2952790834.a)) && (slice_2952790834.b < (s_2952790833[s_2952790833_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2952790834, NTI805306392), Field1: (s_2952790833[s_2952790833_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2952790834.a <= slice_2952790834.b)) {
    var n_2952790881 = addInt(subInt(slice_2952790834.b, slice_2952790834.a), 1);
    var first_2952790882 = slice_2952790834.a;
    s_2952790833[s_2952790833_Idx].splice(first_2952790882, n_2952790881);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2952790814(self_2952790816, line_2952790817, color_2952790818) {
    if ((1500 <= (self_2952790816.lines).length)) {
    delete_2952790831(self_2952790816, "lines", HEX2EHEX2E_805306418(0, subInt((self_2952790816.lines).length, 1000)));
    }
    
    if ((0 < self_2952790816.scroll)) {
    self_2952790816.scroll = addInt(self_2952790816.scroll, 1);
    }
    
    self_2952790816.lines.push({Field0: nimCopy(null, line_2952790817, NTI33554449), Field1: color_2634023294(color_2952790818)});;

  
}

function typeType_3087008175() {
  var result_3087008176 = null;

    result_3087008176 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_3087008176;

}

function typeValue_3087008468(typ_3087008469) {
  var result_3087008470 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008470 = nimCopy(result_3087008470, {kind: 6, typ: typ_3087008469, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008470;

}

function HEX3Aanonymous_2952790699(a_2952790700, b_2952790701) {
  var result_2952790702 = 0;

    result_2952790702 = addInt(a_2952790700, b_2952790701);

  return result_2952790702;

}

function HEX3Aanonymous_2952790704(a_2952790705, b_2952790706) {
  var result_2952790707 = 0;

    result_2952790707 = subInt(a_2952790705, b_2952790706);

  return result_2952790707;

}

function HEX3Aanonymous_2952790709(a_2952790710, b_2952790711) {
  var result_2952790712 = 0;

    result_2952790712 = mulInt(a_2952790710, b_2952790711);

  return result_2952790712;

}

function HEX3Aanonymous_2952790714(a_2952790715, b_2952790716) {
  var result_2952790717 = 0;

    result_2952790717 = divInt(a_2952790715, b_2952790716);

  return result_2952790717;

}

function HEX3Aanonymous_2952790719(a_2952790720, b_2952790721) {
  var result_2952790722 = 0;

    result_2952790722 = modInt(a_2952790720, b_2952790721);

  return result_2952790722;

}

function HEX3Aanonymous_2952790724(a_2952790725) {
  var result_2952790726 = 0;

    result_2952790726 = negInt(a_2952790725);

  return result_2952790726;

}

function HEX3Aanonymous_2952790728(a_2952790729) {
    var Temporary1;

  var result_2952790730 = 0;

    if (!((a_2952790729 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2952790730 = Temporary1;

  return result_2952790730;

}

function HEX3Aanonymous_2952790732(a_2952790733, b_2952790734) {
    var Temporary1;

  var result_2952790735 = 0;

    if ((a_2952790733 < b_2952790734)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790735 = Temporary1;

  return result_2952790735;

}

function HEX3Aanonymous_2952790737(a_2952790738, b_2952790739) {
    var Temporary1;

  var result_2952790740 = 0;

    if ((a_2952790738 <= b_2952790739)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790740 = Temporary1;

  return result_2952790740;

}

function HEX3Aanonymous_2952790742(a_2952790743, b_2952790744) {
    var Temporary1;

  var result_2952790745 = 0;

    if ((b_2952790744 < a_2952790743)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790745 = Temporary1;

  return result_2952790745;

}

function HEX3Aanonymous_2952790747(a_2952790748, b_2952790749) {
    var Temporary1;

  var result_2952790750 = 0;

    if ((b_2952790749 <= a_2952790748)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790750 = Temporary1;

  return result_2952790750;

}

function HEX3Aanonymous_2952790752(a_2952790753, b_2952790754) {
    var Temporary1;

  var result_2952790755 = 0;

    if ((a_2952790753 == b_2952790754)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790755 = Temporary1;

  return result_2952790755;

}

function HEX3Aanonymous_2952790757(a_2952790758, b_2952790759) {
    var Temporary1;

  var result_2952790760 = 0;

    if (!((a_2952790758 == b_2952790759))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790760 = Temporary1;

  return result_2952790760;

}

function HEX3Aanonymous_2952790762(a_2952790763, b_2952790764) {
    var Temporary1;

  var result_2952790765 = 0;

    if ((!((a_2952790763 == 0)) && !((b_2952790764 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790765 = Temporary1;

  return result_2952790765;

}

function HEX3Aanonymous_2952790767(a_2952790768, b_2952790769) {
    var Temporary1;

  var result_2952790770 = 0;

    if ((!((a_2952790768 == 0)) || !((b_2952790769 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790770 = Temporary1;

  return result_2952790770;

}

function HEX3Aanonymous_2952790772(a_2952790773, b_2952790774) {
    var Temporary1;

  var result_2952790775 = 0;

    if ((a_2952790773 < b_2952790774)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2952790774 < a_2952790773)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2952790775 = Temporary1;

  return result_2952790775;

}

function HEX3Aanonymous_2952790777(values_2952790778) {
    var Temporary1;

  var result_2952790779 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2952790778).length < 2)) {
    result_2952790779 = nimCopy(result_2952790779, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2952790783 = nimCopy(null, values_2952790778[chckIndx(0, 0, (values_2952790778).length - 1)], NTI3087007751);
    var rightValue_2952790784 = nimCopy(null, values_2952790778[chckIndx(1, 0, (values_2952790778).length - 1)], NTI3087007751);
    if (!((leftValue_2952790783.kind == 2))) {
    result_2952790779 = nimCopy(result_2952790779, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2952790783;
    if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2952790779 = nimCopy(result_2952790779, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008487(rightValue_2952790784) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2952790779;

}

function HEX3Aanonymous_2952790790(values_2952790791) {
  var result_2952790792 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790792 = nimCopy(result_2952790792, stringValue_3087008465(join_2952790793(values_2952790791, [])), NTI3087007751);
    addOutput_2952790814(executionOutput_2952790070[0], HEX24_3087008487(result_2952790792), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008487(result_2952790792)]);
    result_2952790792 = nimCopy(result_2952790792, voidValue_3087008460(), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790792;

}

function HEX3Aanonymous_2952790901(values_2952790904) {
  var result_2952790907 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790907 = nimCopy(result_2952790907, stringValue_3087008465(join_2952790793(values_2952790904, [])), NTI3087007751);

  return result_2952790907;

}
var typeAddIntInt_2952790658 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeSubIntInt_2952790663 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeMulIntInt_2952790668 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeDivIntInt_2952790673 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeModIntInt_2952790678 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeAddStringInt_2952790683 = newFunctionType_3087008162([stringType_3087008160(), intType_3087008158()], stringType_3087008160());
var typeNegInt_2952790688 = newFunctionType_3087008162([intType_3087008158()], intType_3087008158());
var typeNotInt_2952790693 = newFunctionType_3087008162([intType_3087008158()], intType_3087008158());
var typeFnIntIntInt_2952790698 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var funcAddIntInt_2952790703 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790699);
var funcSubIntInt_2952790708 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790704);
var funcMulIntInt_2952790713 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790709);
var funcDivIntInt_2952790718 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790714);
var funcModIntInt_2952790723 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790719);
var funcNegInt_2952790727 = createUnityIntOperator_2952790638(HEX3Aanonymous_2952790724);
var funcNotInt_2952790731 = createUnityIntOperator_2952790638(HEX3Aanonymous_2952790728);
var funcLessIntInt_2952790736 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790732);
var funcLessEqualIntInt_2952790741 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790737);
var funcGreaterIntInt_2952790746 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790742);
var funcGreaterEqualIntInt_2952790751 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790747);
var funcEqualIntInt_2952790756 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790752);
var funcNotEqualIntInt_2952790761 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790757);
var funcAndIntInt_2952790766 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790762);
var funcOrIntInt_2952790771 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790767);
var funcOrderIntInt_2952790776 = createBinaryIntOperator_2952790618(HEX3Aanonymous_2952790772);
var funcAddStringInt_2952790789 = newFunctionValue_3087008471(HEX3Aanonymous_2952790777);
var funcPrintAny_2952790900 = newFunctionValue_3087008471(HEX3Aanonymous_2952790790);
var funcBuildStringAny_2952790912 = newFunctionValue_3087008471(HEX3Aanonymous_2952790901);
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdAdd_2969567235, {id: nimCopy(null, IdAdd_2969567235, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2952790658, value: nimCopy(null, funcAddIntInt_2952790703, NTI3087007751), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdSub_2969567236, {id: nimCopy(null, IdSub_2969567236, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2952790663, value: nimCopy(null, funcSubIntInt_2952790708, NTI3087007751), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdMul_2969567237, {id: nimCopy(null, IdMul_2969567237, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2952790668, value: nimCopy(null, funcMulIntInt_2952790713, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdDiv_2969567238, {id: nimCopy(null, IdDiv_2969567238, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2952790673, value: nimCopy(null, funcDivIntInt_2952790718, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdMod_2969567239, {id: nimCopy(null, IdMod_2969567239, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2952790678, value: nimCopy(null, funcModIntInt_2952790723, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdNegate_2969567240, {id: nimCopy(null, IdNegate_2969567240, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2952790688, value: nimCopy(null, funcNegInt_2952790727, NTI3087007751), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdNot_2969567241, {id: nimCopy(null, IdNot_2969567241, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2952790693, value: nimCopy(null, funcNotInt_2952790731, NTI3087007751), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdAppendString_2969567243, {id: nimCopy(null, IdAppendString_2969567243, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2952790683, value: nimCopy(null, funcAddStringInt_2952790789, NTI3087007751), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdLess_2969567247, {id: nimCopy(null, IdLess_2969567247, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcLessIntInt_2952790736, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdLessEqual_2969567248, {id: nimCopy(null, IdLessEqual_2969567248, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcLessEqualIntInt_2952790741, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdGreater_2969567249, {id: nimCopy(null, IdGreater_2969567249, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcGreaterIntInt_2952790746, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdGreaterEqual_2969567250, {id: nimCopy(null, IdGreaterEqual_2969567250, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcGreaterEqualIntInt_2952790751, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdEqual_2969567251, {id: nimCopy(null, IdEqual_2969567251, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcEqualIntInt_2952790756, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdNotEqual_2969567252, {id: nimCopy(null, IdNotEqual_2969567252, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcNotEqualIntInt_2952790761, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdAnd_2969567253, {id: nimCopy(null, IdAnd_2969567253, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcAndIntInt_2952790766, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdOr_2969567254, {id: nimCopy(null, IdOr_2969567254, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcOrIntInt_2952790771, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdOrder_2969567255, {id: nimCopy(null, IdOrder_2969567255, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2952790698, value: nimCopy(null, funcOrderIntInt_2952790776, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdInt_2969567244, {id: nimCopy(null, IdInt_2969567244, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(intType_3087008158()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdString_2969567245, {id: nimCopy(null, IdString_2969567245, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(stringType_3087008160()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdVoid_2969567246, {id: nimCopy(null, IdVoid_2969567246, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(voidType_3087008156()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdPrint_2969567234, {id: nimCopy(null, IdPrint_2969567234, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008162([anyType_3087008177(true)], voidType_3087008156()), value: nimCopy(null, funcPrintAny_2952790900, NTI3087007751), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790071.globalScope, IdBuildString_2969567256, {id: nimCopy(null, IdBuildString_2969567256, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008162([anyType_3087008177(true)], stringType_3087008160()), value: nimCopy(null, funcBuildStringAny_2952790912, NTI3087007751), node: null, operatorNotation: 0, precedence: 0});
Label160: {
  var symbol_2952792453 = [null];
  var L_2952792540 = len_3003233372(ctx_2952790071.globalScope);
  Label161: {
    var h_2952792542 = 0;
    var colontmp__2952792543 = 0;
    colontmp__2952792543 = (ctx_2952790071.globalScope.data).length - 1;
    var res_2952792544 = 0;
    Label162: {
        Label163: while (true) {
        if (!(res_2952792544 <= colontmp__2952792543)) break Label163;
          h_2952792542 = res_2952792544;
          if (isFilled_1308622880(ctx_2952790071.globalScope.data[chckIndx(h_2952792542, 0, (ctx_2952790071.globalScope.data).length - 1)].Field0)) {
          symbol_2952792453[0] = ctx_2952790071.globalScope.data[chckIndx(h_2952792542, 0, (ctx_2952790071.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3003191823(ctx_2952790071, symbol_2952792453[0]);
          if (!((len_3003233372(ctx_2952790071.globalScope) == L_2952792540))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2952792544 = addInt(res_2952792544, 1);
        }
    };
  };
};

function isEditing_2952797524(self_2952797525) {
  var result_2952797526 = false;

    result_2952797526 = !((self_2952797525.textEditor == null));

  return result_2952797526;

}

function node_2952792697(editor_2952792698) {
  var result_2952792699 = null;

  BeforeRet: {
    result_2952792699 = editor_2952792698.selectedNode;
    break BeforeRet;
  };

  return result_2952792699;

}

function newSeq_2952793863(len_2952793865) {
  var result_2952793866 = [];

    result_2952793866 = new Array(len_2952793865); for (var i = 0 ; i < len_2952793865 ; ++i) { result_2952793866[i] = null; }
  return result_2952793866;

}

function expandIfNeeded_2952793853(deq_2952793855) {
              var Temporary5;
    var Temporary6;

    if ((deq_2952793855.mask == 0)) {
    var correctSizeHEX60gensym42_2952793857 = nextPowerOfTwo_872415437(4);
    deq_2952793855.mask = subInt(correctSizeHEX60gensym42_2952793857, 1);
    deq_2952793855.data = new Array(chckRange(correctSizeHEX60gensym42_2952793857, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2952793857, 0, 2147483647) ; ++i) { deq_2952793855.data[i] = null; }    }
    
    var cap_2952793862 = addInt(deq_2952793855.mask, 1);
    if ((cap_2952793862 <= deq_2952793855.count)) {
    var n_2952793871 = newSeq_2952793863(chckRange(mulInt(cap_2952793862, 2), 0, 2147483647));
    var i_2952793872 = 0;
    Label1: {
      var x_2952793882 = null;
      var x_2952793882_Idx = 0;
      var i_2952801319 = deq_2952793855.head;
      Label2: {
        var c_2952801321 = 0;
        var i_2952801322 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2952801322 < deq_2952793855.count)) break Label4;
              c_2952801321 = i_2952801322;
              x_2952793882 = deq_2952793855.data; x_2952793882_Idx = chckIndx(i_2952801319, 0, (deq_2952793855.data).length - 1);
              Temporary5 = x_2952793882[x_2952793882_Idx];
              x_2952793882[x_2952793882_Idx] = genericReset(x_2952793882[x_2952793882_Idx], NTI2986344452);
              n_2952793871[chckIndx(i_2952793872, 0, (n_2952793871).length - 1)] = Temporary5;
              i_2952793872 = addInt(i_2952793872, 1);
              i_2952801319 = (addInt(i_2952801319, 1) & deq_2952793855.mask);
              i_2952801322 = addInt(i_2952801322, 1);
            }
        };
      };
    };
    Temporary6 = n_2952793871;
    n_2952793871 = genericReset(n_2952793871, NTI2952792127);
    deq_2952793855.data = nimCopy(null, Temporary6, NTI2952792127);
    deq_2952793855.mask = subInt(mulInt(cap_2952793862, 2), 1);
    deq_2952793855.tail = deq_2952793855.count;
    deq_2952793855.head = 0;
    }
    

  
}

function addLast_2952793844(deq_2952793846, item_2952793847) {
    expandIfNeeded_2952793853(deq_2952793846);
    deq_2952793846.count = addInt(deq_2952793846.count, 1);
    deq_2952793846.data[chckIndx(deq_2952793846.tail, 0, (deq_2952793846.data).length - 1)] = item_2952793847;
    deq_2952793846.tail = (addInt(deq_2952793846.tail, 1) & deq_2952793846.mask);

  
}

function len_2952793985(deq_2952793987) {
  var result_2952793988 = 0;

    result_2952793988 = deq_2952793987.count;

  return result_2952793988;

}

function popFirst_2952793994(deq_2952793996) {
    var Temporary1;

  var result_2952793997 = null;

    if ((deq_2952793996.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2952793996.count = subInt(deq_2952793996.count, 1);
    Temporary1 = deq_2952793996.data[chckIndx(deq_2952793996.head, 0, (deq_2952793996.data).length - 1)];
    deq_2952793996.data[chckIndx(deq_2952793996.head, 0, (deq_2952793996.data).length - 1)] = genericReset(deq_2952793996.data[chckIndx(deq_2952793996.head, 0, (deq_2952793996.data).length - 1)], NTI2986344452);
    result_2952793997 = Temporary1;
    deq_2952793996.head = (addInt(deq_2952793996.head, 1) & deq_2952793996.mask);

  return result_2952793997;

}

function hasKey_2952792780(t_2952792783, key_2952792784) {
  var result_2952792785 = false;

    var hc_2952792786 = [0];
    result_2952792785 = (0 <= rawGet_3120562785(t_2952792783, key_2952792784, hc_2952792786, 0));

  return result_2952792785;

}

function contains_2952792774(t_2952792777, key_2952792778) {
  var result_2952792779 = false;

  BeforeRet: {
    result_2952792779 = hasKey_2952792780(t_2952792777, key_2952792778);
    break BeforeRet;
  };

  return result_2952792779;

}

function HEX5BHEX5D_2952792870(t_2952792873, key_2952792874) {
  var result_2952792875 = null;

    var hcHEX60gensym22_2952792876 = [0];
    var indexHEX60gensym22_2952792883 = rawGet_3120562785(t_2952792873, key_2952792874, hcHEX60gensym22_2952792876, 0);
    if ((0 <= indexHEX60gensym22_2952792883)) {
    result_2952792875 = t_2952792873.data[chckIndx(indexHEX60gensym22_2952792883, 0, (t_2952792873.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_2952792874);
    }
    

  return result_2952792875;

}

function xyHEX3D_2113929251(rect_2113929252, v_2113929253) {
    rect_2113929252.x = v_2113929253.x;
    rect_2113929252.y = v_2113929253.y;

  
}

function HEX2B_2113929971(aHEX60gensym72_2113929973, bHEX60gensym72_2113929974) {
  var result_2113929975 = ({x: 0.0, y: 0.0});

    result_2113929975 = nimCopy(result_2113929975, {x: (aHEX60gensym72_2113929973.x + bHEX60gensym72_2113929974.x), y: (aHEX60gensym72_2113929973.y + bHEX60gensym72_2113929974.y)}, NTI2130706720);

  return result_2113929975;

}

function wh_2113929254(rect_2113929255) {
  var result_2113929256 = ({x: 0.0, y: 0.0});

    result_2113929256 = nimCopy(result_2113929256, vec2_2130707293(rect_2113929255.w, rect_2113929255.h), NTI2130706720);

  return result_2113929256;

}

function absoluteBounds_3087009534(node_3087009535) {
  var result_3087009536 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009535.parent == null)) {
    result_3087009536 = nimCopy(result_3087009536, node_3087009535.bounds, NTI2113929221);
    }
    else {
      result_3087009536 = nimCopy(result_3087009536, rect_2113929240(HEX2B_2113929971(xy_2113929248(absoluteBounds_3087009534(node_3087009535.parent)), xy_2113929248(node_3087009535.bounds)), wh_2113929254(node_3087009535.bounds)), NTI2113929221);
    }
    

  return result_3087009536;

}

function absoluteBounds_3087009572(nodeRange_3087009573) {
  var result_3087009574 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009574[0] = nimCopy(result_3087009574[0], nodeRange_3087009573.parent.children[chckIndx(nodeRange_3087009573.first, 0, (nodeRange_3087009573.parent.children).length - 1)].bounds, NTI2113929221);
    Label1: {
      var i_3087009579 = 0;
      var colontmp__2952801337 = 0;
      colontmp__2952801337 = addInt(nodeRange_3087009573.first, 1);
      var i_2952801338 = colontmp__2952801337;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801338 < nodeRange_3087009573.last)) break Label3;
            i_3087009579 = i_2952801338;
            result_3087009574[0] = nimCopy(result_3087009574[0], or_2113929296(result_3087009574[0], nodeRange_3087009573.parent.children[chckIndx(i_3087009579, 0, (nodeRange_3087009573.parent.children).length - 1)].bounds), NTI2113929221);
            i_2952801338 = addInt(i_2952801338, 1);
          }
      };
    };
    xyHEX3D_2113929251(result_3087009574[0], HEX2B_2113929971(xy_2113929248(result_3087009574[0]), xy_2113929248(absoluteBounds_3087009534(nodeRange_3087009573.parent))));

  return result_3087009574[0];

}

function and_2113929300(a_2113929301, b_2113929302) {
  var result_2113929303 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929303.x = max_33555642(a_2113929301.x, b_2113929302.x);
    result_2113929303.y = max_33555642(a_2113929301.y, b_2113929302.y);
    result_2113929303.w = (min_33555609((a_2113929301.x + a_2113929301.w), (b_2113929302.x + b_2113929302.w)) - result_2113929303.x);
    result_2113929303.h = (min_33555609((a_2113929301.y + a_2113929301.h), (b_2113929302.y + b_2113929302.h)) - result_2113929303.y);

  return result_2113929303;

}

function intersects_2097152177(a_2097152178, b_2097152179) {
  var result_2097152180 = false;

  BeforeRet: {
    var intersection_2097152181 = and_2113929300(a_2097152178, b_2097152179);
    result_2097152180 = ((0.0 < intersection_2097152181.w) && (0.0 < intersection_2097152181.h));
    break BeforeRet;
  };

  return result_2097152180;

}

function subbase_2986344549(node_2986344550) {
  var result_2986344551 = null;

  BeforeRet: {
    if ((node_2986344550.parent.parent == null)) {
    result_2986344551 = node_2986344550;
    break BeforeRet;
    }
    
    result_2986344551 = subbase_2986344549(node_2986344550.parent);
    break BeforeRet;
  };

  return result_2986344551;

}

function getItem_3003181830(selfHEX60gensym78_3003181831) {
  var result_3003181832 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym78_3003181831.id, null_2046820612)) {
    selfHEX60gensym78_3003181831.id = nimCopy(selfHEX60gensym78_3003181831.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym78_3003181831.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952801349 = nimCopy(null, selfHEX60gensym78_3003181831.id, NTI2046820355);
    var colontmp__2952801350 = 1;
    result_3003181832 = nimCopy(result_3003181832, {Field0: nimCopy(null, colontmp__2952801349, NTI2046820355), Field1: colontmp__2952801350}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003181832;

}

function getOrDefault_3003182081(t_3003182084, key_3003182085, default_3003182086) {
    var Temporary1;

  var result_3003182087 = null;

    var hcHEX60gensym409_3003182090 = [0];
    var indexHEX60gensym409_3003182097 = rawGet_3003163841(t_3003182084, key_3003182085, hcHEX60gensym409_3003182090, 0);
    if ((0 <= indexHEX60gensym409_3003182097)) {
    Temporary1 = t_3003182084.data[chckIndx(indexHEX60gensym409_3003182097, 0, (t_3003182084.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003182086;
    }
    
    result_3003182087 = Temporary1;

  return result_3003182087;

}

function newDoublyLinkedNode_3003182213(value_3003182215) {
  var result_3003182216 = null;

    result_3003182216 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003182216.value = nimCopy(result_3003182216.value, value_3003182215, NTI3003121799);

  return result_3003182216;

}

function mustRehash_3003182554(t_3003182556) {
  var result_3003182557 = false;

    if (!((t_3003182556.counter < (t_3003182556.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003182557 = ((mulInt((t_3003182556.data).length, 2) < mulInt(t_3003182556.counter, 3)) || (subInt((t_3003182556.data).length, t_3003182556.counter) < 4));

  return result_3003182557;

}

function rawInsert_3003183247(t_3003183251, data_3003183252, data_3003183252_Idx, key_3003183253, val_3003183254, hc_3003183255, h_3003183256) {
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field1 = nimCopy(data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field1, key_3003183253, NTI3019898905);
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field2 = val_3003183254;
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field0 = hc_3003183255;

  
}

function enlarge_3003182811(t_3003182814) {
    var n_3003182817 = [];
    n_3003182817 = new Array(chckRange(mulInt((t_3003182814.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003182814.data).length, 2), 0, 2147483647) ; ++i) { n_3003182817[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003182814.data; t_3003182814.data = n_3003182817; n_3003182817 = Temporary1;    Label2: {
      var i_3003182915 = 0;
      var colontmp__2952801353 = 0;
      colontmp__2952801353 = (n_3003182817).length - 1;
      var res_2952801354 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952801354 <= colontmp__2952801353)) break Label4;
            i_3003182915 = res_2952801354;
            var eh_3003182996 = n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003182996)) {
            var j_3003183000 = (eh_3003182996 & (t_3003182814.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003182814.data[chckIndx(j_3003183000, 0, (t_3003182814.data).length - 1)].Field0)) break Label6;
                  j_3003183000 = nextTry_1308622883(j_3003183000, (t_3003182814.data).length - 1);
                }
            };
            rawInsert_3003183247(t_3003182814, t_3003182814, "data", n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field1, n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field2, eh_3003182996, j_3003183000);
            }
            
            res_2952801354 = addInt(res_2952801354, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003183497(t_3003183500, key_3003183501, hc_3003183502) {
  var result_3003183503 = 0;

  BeforeRet: {
    if (((t_3003183500.data).length == 0)) {
    result_3003183503 = -1;
    break BeforeRet;
    }
    
    var h_3003183588 = (hc_3003183502 & (t_3003183500.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field0)) break Label2;
          if (((t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field0 == hc_3003183502) && HEX3DHEX3D_3003123049(t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field1, key_3003183501))) {
          result_3003183503 = h_3003183588;
          break BeforeRet;
          }
          
          h_3003183588 = nextTry_1308622883(h_3003183588, (t_3003183500.data).length - 1);
        }
    };
    result_3003183503 = subInt(-1, h_3003183588);
  };

  return result_3003183503;

}

function HEX5BHEX5DHEX3D_3003182286(t_3003182289, key_3003182290, val_3003182291) {
    if (((t_3003182289.data).length == 0)) {
    var correctSizeHEX60gensym412_3003182374 = slotsNeeded_1308622891(32);
    t_3003182289.counter = 0;
    t_3003182289.data = new Array(chckRange(correctSizeHEX60gensym412_3003182374, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym412_3003182374, 0, 2147483647) ; ++i) { t_3003182289.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003182379 = [0];
    var index_3003182386 = rawGet_3003163841(t_3003182289, key_3003182290, hc_3003182379, 0);
    if ((0 <= index_3003182386)) {
    t_3003182289.data[chckIndx(index_3003182386, 0, (t_3003182289.data).length - 1)].Field2 = val_3003182291;
    }
    else {
      if (((t_3003182289.data).length == 0)) {
      var correctSizeHEX60gensym415_3003182549 = slotsNeeded_1308622891(32);
      t_3003182289.counter = 0;
      t_3003182289.data = new Array(chckRange(correctSizeHEX60gensym415_3003182549, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_3003182549, 0, 2147483647) ; ++i) { t_3003182289.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003182554(t_3003182289)) {
      enlarge_3003182811(t_3003182289);
      index_3003182386 = rawGetKnownHC_3003183497(t_3003182289, key_3003182290, hc_3003182379[0]);
      }
      
      index_3003182386 = subInt(-1, index_3003182386);
      rawInsert_3003183247(t_3003182289, t_3003182289, "data", key_3003182290, val_3003182291, hc_3003182379[0], index_3003182386);
      t_3003182289.counter = addInt(t_3003182289.counter, 1);
    }
    

  
}

function len_3003184108(t_3003184111) {
  var result_3003184112 = 0;

    result_3003184112 = t_3003184111.counter;

  return result_3003184112;

}

function len_3003184025(cache_3003184028) {
  var result_3003184029 = 0;

    result_3003184029 = len_3003184108(cache_3003184028.table);

  return result_3003184029;

}

function del_3003184200(t_3003184203, key_3003184204) {
    var hc_3003184205 = [0];
    var i_3003184212 = rawGet_3003163841(t_3003184203, key_3003184204, hc_3003184205, 0);
    var mskHEX60gensym36_3003184216 = (t_3003184203.data).length - 1;
    if ((0 <= i_3003184212)) {
    t_3003184203.counter = subInt(t_3003184203.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003184223 = i_3003184212;
            var rHEX60gensym36_3003184224 = jHEX60gensym36_3003184223;
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0 = 0;
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field1 = nimCopy(t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003184212 = (addInt(i_3003184212, 1) & mskHEX60gensym36_3003184216);
                  if (isEmpty_1308622877(t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003184224 = (t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0 & mskHEX60gensym36_3003184216);
                  if (!(((((rHEX60gensym36_3003184224 <= i_3003184212) && (jHEX60gensym36_3003184223 < rHEX60gensym36_3003184224)) || ((jHEX60gensym36_3003184223 < rHEX60gensym36_3003184224) && (i_3003184212 < jHEX60gensym36_3003184223))) || ((i_3003184212 < jHEX60gensym36_3003184223) && (rHEX60gensym36_3003184224 <= i_3003184212))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003184203.data[chckIndx(jHEX60gensym36_3003184223, 0, (t_3003184203.data).length - 1)] = nimCopy(t_3003184203.data[chckIndx(jHEX60gensym36_3003184223, 0, (t_3003184203.data).length - 1)], t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)], NTI3003121835);
          }
      };
    };
    }
    

  
}

function resize_3003183943(cache_3003183946) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003183946.capacity < len_3003184025(cache_3003183946))) break Label2;
          var t_3003184113 = cache_3003183946.list.tail;
          if (cache_3003183946.recordRemovedKeys) {
          incl_3003179214(cache_3003183946.removedKeys, t_3003184113.value.key);
          }
          
          del_3003184200(cache_3003183946.table, t_3003184113.value.key);
          remove_3003164493(cache_3003183946.list, t_3003184113);
        }
    };

  
}

function addNewNode_3003182205(cache_3003182208, key_3003182209, val_3003182210) {
    var node_3003182222 = newDoublyLinkedNode_3003182213({key: nimCopy(null, key_3003182209, NTI3019898905), val: val_3003182210});
    HEX5BHEX5DHEX3D_3003182286(cache_3003182208.table, key_3003182209, node_3003182222);
    prepend_3003164821(cache_3003182208.list, node_3003182222);
    if (cache_3003182208.recordRemovedKeys) {
    excl_3003178043(cache_3003182208.removedKeys, key_3003182209);
    }
    
    resize_3003183943(cache_3003182208);

  
}

function HEX5BHEX5DHEX3D_3003181986(cache_3003181989, key_3003181990, val_3003181991) {
    var node_3003182178 = getOrDefault_3003182081(cache_3003181989.table, key_3003181990, null);
    if ((node_3003182178 == null)) {
    addNewNode_3003182205(cache_3003181989, key_3003181990, val_3003181991);
    }
    else {
      node_3003182178.value.val = val_3003181991;
      remove_3003164493(cache_3003181989.list, node_3003182178);
      prepend_3003164821(cache_3003181989.list, node_3003182178);
    }
    

  
}

function getOrCreateNodeLayoutInput_3003181839(ctxHEX60gensym79_3003181840, dataHEX60gensym79_3003181841) {
  var result_3003181842 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_3003181851 = null;
      Label2: {
        var node_2952801346 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952801347 = ctxHEX60gensym79_3003181840.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952801347 == null))) break Label4;
              node_2952801346 = nimCopy(node_2952801346, it_2952801347.value, NTI3003121799);
              existingHEX60gensym79_3003181851 = node_2952801346.val;
              if (((hash_3087009990(existingHEX60gensym79_3003181851) == hash_3087009990(dataHEX60gensym79_3003181841)) && HEX3DHEX3D_3087009993(existingHEX60gensym79_3003181851, dataHEX60gensym79_3003181841))) {
              result_3003181842 = existingHEX60gensym79_3003181851;
              break BeforeRet;
              }
              
              it_2952801347 = it_2952801347.next;
            }
        };
      };
    };
    var itemHEX60gensym79_3003181852 = getItem_3003181830(dataHEX60gensym79_3003181841);
    var keyHEX60gensym79_3003181853 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_3003181852, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym79_3003181840.depGraph.changed, keyHEX60gensym79_3003181853, ctxHEX60gensym79_3003181840.depGraph.revision);
    HEX5BHEX5DHEX3D_3003181986(ctxHEX60gensym79_3003181840.itemsNodeLayoutInput, itemHEX60gensym79_3003181852, dataHEX60gensym79_3003181841);
    result_3003181842 = dataHEX60gensym79_3003181841;
    break BeforeRet;
  };

  return result_3003181842;

}

function hasKey_3003215839(t_3003215842, key_3003215843) {
  var result_3003215844 = false;

    var hc_3003215845 = [0];
    result_3003215844 = (0 <= rawGet_3003165213(t_3003215842, key_3003215843, hc_3003215845, 0));

  return result_3003215844;

}

function contains_3003215833(t_3003215836, key_3003215837) {
  var result_3003215838 = false;

  BeforeRet: {
    result_3003215838 = hasKey_3003215839(t_3003215836, key_3003215837);
    break BeforeRet;
  };

  return result_3003215838;

}

function contains_3003215739(cache_3003215742, key_3003215743) {
  var result_3003215744 = false;

    result_3003215744 = contains_3003215833(cache_3003215742.table, key_3003215743);

  return result_3003215744;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2130707366(result_2130707368, result_2130707368_Idx, x_2130707369) {
    add_33556386(result_2130707368, result_2130707368_Idx, nimFloatToString_385876087(x_2130707369));

  
}

function HEX24_2130707362(x_2130707364) {
  var result_2130707365 = [[]];

    addFloat_2130707366(result_2130707365, 0, x_2130707364);

  return result_2130707365[0];

}

function HEX24_2113929281(a_2113929282) {
  var result_2113929283 = [];

    result_2113929283 = nimCopy(null, ([40] || []).concat(HEX24_2130707362(a_2113929282.x) || [],[44,32] || [],HEX24_2130707362(a_2113929282.y) || [],[58,32] || [],HEX24_2130707362(a_2113929282.w) || [],[32,120,32] || [],HEX24_2130707362(a_2113929282.h) || [],[41] || []), NTI33554449);

  return result_2113929283;

}

function collectionToString_3087009622(x_3087009624, prefix_3087009625, separator_3087009626, suffix_3087009627) {
  var result_3087009628 = [[]];

    result_3087009628[0] = nimCopy(null, prefix_3087009625, NTI33554449);
    var firstElement_3087009629 = true;
    Label1: {
      var value_3087009633 = [];
      var i_2952801365 = 0;
      var L_2952801366 = (x_3087009624).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801365 < L_2952801366)) break Label3;
            value_3087009633 = x_3087009624[i_2952801365];
            if (firstElement_3087009629) {
            firstElement_3087009629 = false;
            }
            else {
            result_3087009628[0].push.apply(result_3087009628[0], separator_3087009626);;
            }
            
            addQuoted_1593835572(result_3087009628, 0, value_3087009633);
            i_2952801365 += 1;
            if (!(((x_3087009624).length == L_2952801366))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009628[0].push.apply(result_3087009628[0], suffix_3087009627);;

  return result_3087009628[0];

}

function HEX24_3087009618(x_3087009620) {
  var result_3087009621 = [];

    result_3087009621 = nimCopy(null, collectionToString_3087009622(x_3087009620, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009621;

}

function HEX24_3087009611(vnode_3087009612) {
  var result_3087009613 = [];

    result_3087009613 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009613.push.apply(result_3087009613, (vnode_3087009612.text || []).concat([39,44,32] || []));;
    result_3087009613.push.apply(result_3087009613, (HEX24_2113929281(vnode_3087009612.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009612.node == null))) {
    result_3087009613.push.apply(result_3087009613, (HEX24_2986346455(vnode_3087009612.node) || []).concat([44,32] || []));;
    }
    
    result_3087009613.push.apply(result_3087009613, (HEX24_3087009618(vnode_3087009612.colors) || []).concat([44,32] || []));;
    result_3087009613.push.apply(result_3087009613, [41]);;

  return result_3087009613;

}

function join_3087009928(a_3087009930, sep_3087009931) {
  var result_3087009932 = [];

    result_3087009932 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009947 = 0;
      var x_3087009948 = null;
      var i_2952801362 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801362 < (a_3087009930).length)) break Label3;
            i_3087009947 = i_2952801362;
            x_3087009948 = a_3087009930[chckIndx(i_2952801362, 0, (a_3087009930).length - 1)];
            if ((0 < i_3087009947)) {
            result_3087009932.push.apply(result_3087009932, sep_3087009931);;
            }
            
            result_3087009932.push.apply(result_3087009932, HEX24_3087009611(x_3087009948));;
            i_2952801362 = addInt(i_2952801362, 1);
          }
      };
    };

  return result_3087009932;

}

function HEX24_3087009925(nodeLayout_3087009926) {
  var result_3087009927 = [];

    result_3087009927 = nimCopy(null, join_3087009928(nodeLayout_3087009926.root.children, [10]), NTI33554449);

  return result_3087009927;

}

function HEX24_3087009962(input_3087009963) {
  var result_3087009964 = [];

  BeforeRet: {
    var fmtRes_3087009969 = [mnewString(0)];
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3019899100(fmtRes_3087009969, 0, input_3087009963.id, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008579(fmtRes_3087009969, 0, input_3087009963.node, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3019899100(fmtRes_3087009969, 0, input_3087009963.selectedNode, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2701131945(fmtRes_3087009969, 0, input_3087009963.revision, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [41]);;
    result_3087009964 = nimCopy(null, fmtRes_3087009969[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009964;

}

function raiseKeyError_3003216112(key_3003216114) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087009962(key_3003216114) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003216018(t_3003216021, key_3003216022) {
  var result_3003216023 = null;
  var result_3003216023_Idx = 0;

    var hcHEX60gensym22_3003216024 = [0];
    var indexHEX60gensym22_3003216031 = rawGet_3003165213(t_3003216021, key_3003216022, hcHEX60gensym22_3003216024, 0);
    if ((0 <= indexHEX60gensym22_3003216031)) {
    result_3003216023 = t_3003216021.data[chckIndx(indexHEX60gensym22_3003216031, 0, (t_3003216021.data).length - 1)]; result_3003216023_Idx = "Field2";
    }
    else {
    raiseKeyError_3003216112(key_3003216022);
    }
    

  return [result_3003216023, result_3003216023_Idx];

}

function HEX5BHEX5D_3003215932(cache_3003215935, key_3003215936) {
    var Temporary1;

  var result_3003215937 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_3003216125 = (Temporary1 = HEX5BHEX5D_3003216018(cache_3003215935.table, key_3003215936), Temporary1)[0][Temporary1[1]];
    result_3003215937 = nimCopy(result_3003215937, node_3003216125.value.val, NTI3087007775);
    remove_3003171110(cache_3003215935.list, node_3003216125);
    prepend_3003167381(cache_3003215935.list, node_3003216125);

  return result_3003215937;

}

function computeNodeLayout_3003216215(ctxHEX60gensym120_3003216216, inputHEX60gensym120_3003216217, recordDependencyHEX60gensym120_3003216218) {
    var Temporary3;
    var Temporary5;

  var result_3003216219 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym120_3003216220 = startTimer_2466250804();
    ctxHEX60gensym120_3003216216.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_3003216216.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_3003216309 = getItem_3003181830(inputHEX60gensym120_3003216217);
    var keyHEX60gensym120_3003216310 = {Field0: nimCopy(null, itemHEX60gensym120_3003216309, NTI3019898905), Field1: 7};
    if (recordDependencyHEX60gensym120_3003216218) {
    recordDependency_3003175740(ctxHEX60gensym120_3003216216, itemHEX60gensym120_3003216309, 7);
    }
    
    var colorHEX60gensym120_3003216311 = nodeColor_3019901365(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, 0);
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_3003216311, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym120_3003216309));
    }
    
    if ((colorHEX60gensym120_3003216311 == 2)) {
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    if (true) {
    markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
      }
      
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_3003216311 == 0)) {
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    if (true) {
    markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310, true) == 0)) {
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_3003216216.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
      if (true) {
      markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
      }
      
      if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
      }
      
      if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_3003216311 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym120_3003216216.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym120_3003216216.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym120_3003216216.statsNodeLayout.time = addInt(ctxHEX60gensym120_3003216216.statsNodeLayout.time, elapsed_2466250815(timerHEX60gensym120_3003216220));
    }
  };

  return result_3003216219;

}

function prev_2986344687(node_2986344688) {
  var result_2986344690 = ({val: null});

  BeforeRet: {
    if ((node_2986344688.parent == null)) {
    result_2986344690 = nimCopy(result_2986344690, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var i_2986344697 = index_2986344556(node_2986344688);
    if ((i_2986344697 <= 0)) {
    result_2986344690 = nimCopy(result_2986344690, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986344690 = nimCopy(result_2986344690, some_2986344674(HEX5BHEX5D_2986344532(node_2986344688.parent, subInt(i_2986344697, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2986344690;

}

function HEX2BHEX3D_2952793195(aHEX60gensym79_2952793197, bHEX60gensym79_2952793198) {
    HEX2BHEX3D_2113929329(aHEX60gensym79_2952793197, "x", bHEX60gensym79_2952793198);
    HEX2BHEX3D_2113929329(aHEX60gensym79_2952793197, "y", bHEX60gensym79_2952793198);

  
}

function bounds_3087009959(nodeLayout_3087009960) {
  var result_3087009961 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009961 = nimCopy(result_3087009961, nodeLayout_3087009960.root.bounds, NTI2113929221);
    break BeforeRet;
  };

  return result_3087009961;

}

function insert_2952793207(x_2952793209, x_2952793209_Idx, item_2952793210, i_2952793211) {
    var it_2952793231 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({x: 0.0, y: 0.0})};
    x_2952793209[x_2952793209_Idx] = x_2952793209[x_2952793209_Idx] || []; x_2952793209[x_2952793209_Idx].splice(i_2952793211, 0, it_2952793231);
    x_2952793209[x_2952793209_Idx][chckIndx(i_2952793211, 0, (x_2952793209[x_2952793209_Idx]).length - 1)] = nimCopy(x_2952793209[x_2952793209_Idx][chckIndx(i_2952793211, 0, (x_2952793209[x_2952793209_Idx]).length - 1)], item_2952793210, NTI2952791546);

  
}

function next_2986344641(node_2986344642) {
  var result_2986344647 = ({val: null});

  BeforeRet: {
    if ((node_2986344642.parent == null)) {
    result_2986344647 = nimCopy(result_2986344647, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var i_2986344671 = index_2986344556(node_2986344642);
    if ((subInt(len_2986344536(node_2986344642.parent), 1) <= i_2986344671)) {
    result_2986344647 = nimCopy(result_2986344647, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986344647 = nimCopy(result_2986344647, some_2986344674(HEX5BHEX5D_2986344532(node_2986344642.parent, addInt(i_2986344671, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2986344647;

}

function HEX5BHEX5D_2952793679(t_2952793682, key_2952793683) {
  var result_2952793684 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2952793685 = [0];
    var indexHEX60gensym20_2952793692 = rawGet_3120562785(t_2952793682, key_2952793683, hcHEX60gensym20_2952793685, 0);
    if ((0 <= indexHEX60gensym20_2952793692)) {
    result_2952793684 = nimCopy(result_2952793684, t_2952793682.data[chckIndx(indexHEX60gensym20_2952793692, 0, (t_2952793682.data).length - 1)].Field2, NTI3087007774);
    }
    else {
    raiseKeyError_2986346264(key_2952793683);
    }
    

  return result_2952793684;

}

function handleSelectedNodeChanged_2952792700(editor_2952792701) {
          
function HEX3Aanonymous_2952793068(t_2952793071) {
            var result_2952793074 = ({x: 0.0, y: 0.0});

              result_2952793074 = nimCopy(result_2952793074, measureText_2768240805(gEditor.platform, t_2952793071), NTI2130706720);

            return result_2952793074;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2952793169(t_2952793172) {
            var result_2952793175 = ({x: 0.0, y: 0.0});

              result_2952793175 = nimCopy(result_2952793175, measureText_2768240805(gEditor.platform, t_2952793172), NTI2130706720);

            return result_2952793175;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2952793346(t_2952793349) {
            var result_2952793352 = ({x: 0.0, y: 0.0});

              result_2952793352 = nimCopy(result_2952793352, measureText_2768240805(gEditor.platform, t_2952793349), NTI2130706720);

            return result_2952793352;

          }
    
function HEX3Aanonymous_2952793530(t_2952793533) {
      var result_2952793536 = ({x: 0.0, y: 0.0});

        result_2952793536 = nimCopy(result_2952793536, measureText_2768240805(gEditor.platform, t_2952793533), NTI2130706720);

      return result_2952793536;

    }

  BeforeRet: {
    var node_2952792702 = node_2952792697(editor_2952792701);
    var foundNode_2952792703 = false;
    var i_2952792704 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2952792704 < (editor_2952792701.lastLayouts).length)) break Label2;
          try {
          var layout_2952792714 = nimCopy(null, editor_2952792701.lastLayouts[chckIndx(i_2952792704, 0, (editor_2952792701.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2952792715 = nimCopy(null, editor_2952792701.lastLayouts[chckIndx(i_2952792704, 0, (editor_2952792701.lastLayouts).length - 1)].Field1, NTI2130706720);
          if (contains_2952792774(layout_2952792714.nodeToVisualNode, node_2952792702.id)) {
          var visualNode_2952792973 = nimCopy(null, HEX5BHEX5D_2952792870(layout_2952792714.nodeToVisualNode, node_2952792702.id), NTI3087007774);
          var bounds_2952792983 = HEX2B_2097152155(absoluteBounds_3087009572(visualNode_2952792973), vec2_2130707293(0.0, offset_2952792715.y));
          if (!(intersects_2097152177(bounds_2952792983, editor_2952792701.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2952792983.y + bounds_2952792983.h) < 100.0)) {
          var subbase_2952792984 = subbase_2986344549(node_2952792702);
          editor_2952792701.previousBaseIndex = index_2986344556(subbase_2952792984);
          editor_2952792701.scrollOffset = (100.0 - ((bounds_2952792983.y + bounds_2952792983.h) - offset_2952792715.y));
          }
          else {
          if (((editor_2952792701.lastBounds.h - 100.0) < bounds_2952792983.y)) {
          var subbase_2952792985 = subbase_2986344549(node_2952792702);
          editor_2952792701.previousBaseIndex = index_2986344556(subbase_2952792985);
          editor_2952792701.scrollOffset = ((-((bounds_2952792983.y - offset_2952792715.y)) + editor_2952792701.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2952792704 = addInt(i_2952792704, 1);
          }
        }
    };
    i_2952792704 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2952792704 < (editor_2952792701.lastLayouts).length)) break Label5;
          try {
          var layout_2952792994 = nimCopy(null, editor_2952792701.lastLayouts[chckIndx(i_2952792704, 0, (editor_2952792701.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2952792995 = [nimCopy(null, editor_2952792701.lastLayouts[chckIndx(i_2952792704, 0, (editor_2952792701.lastLayouts).length - 1)].Field1, NTI2130706720)];
          var targetNode_2952792996 = node_2952792702;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2952792996 == null)) && !(contains_2952792774(layout_2952792994.nodeToVisualNode, targetNode_2952792996.id)))) break Label8;
                targetNode_2952792996 = targetNode_2952792996.parent;
              }
          };
          if (!((targetNode_2952792996 == null))) {
          var input_2952793075 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790071, {node: subbase_2986344549(targetNode_2952792996), selectedNode: nimCopy(null, node_2952792702.id, NTI2046820355), measureText: HEX3Aanonymous_2952793068, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792994 = nimCopy(layout_2952792994, computeNodeLayout_3003216215(ctx_2952790071, input_2952793075, true), NTI3087007775);
          foundNode_2952792703 = true;
          }
          else {
            if (!(node_2952792702.parent == editor_2952792701.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2952793082 = prev_2986344687(node_2952792702);
              if (!isSome_2986346330(oHEX60gensym31_2952793082)) Temporary11 = false; else {                var prev_2952793105 = get_2986346350(oHEX60gensym31_2952793082);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2952792774(layout_2952792994.nodeToVisualNode, prev_2952793105.id);            }          if (Temporary9) {
          var input_2952793176 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790071, {node: subbase_2986344549(node_2952792702), selectedNode: nimCopy(null, node_2952792702.id, NTI2046820355), measureText: HEX3Aanonymous_2952793169, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792994 = nimCopy(layout_2952792994, computeNodeLayout_3003216215(ctx_2952790071, input_2952793176, true), NTI3087007775);
          HEX2BHEX3D_2952793195(offset_2952792995[0], bounds_3087009959(layout_2952792994).h);
          insert_2952793207(editor_2952792701, "lastLayouts", {Field0: nimCopy(null, layout_2952792994, NTI3087007775), Field1: nimCopy(null, offset_2952792995[0], NTI2130706720)}, chckRange(addInt(i_2952792704, 1), 0, 2147483647));
          Label12: {
            var k_2952793248 = 0;
            var colontmp__2952801328 = 0;
            var colontmp__2952801329 = 0;
            colontmp__2952801328 = addInt(i_2952792704, 1);
            colontmp__2952801329 = (editor_2952792701.lastLayouts).length - 1;
            var res_2952801330 = colontmp__2952801328;
            Label13: {
                Label14: while (true) {
                if (!(res_2952801330 <= colontmp__2952801329)) break Label14;
                  k_2952793248 = res_2952801330;
                  HEX2BHEX3D_2113929329(editor_2952792701.lastLayouts[chckIndx(k_2952793248, 0, (editor_2952792701.lastLayouts).length - 1)].Field1, "y", bounds_3087009959(layout_2952792994).h);
                  res_2952801330 = addInt(res_2952801330, 1);
                }
            };
          };
          foundNode_2952792703 = true;
          }
          else {
            if (!(node_2952792702.parent == editor_2952792701.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2952793259 = next_2986344641(node_2952792702);
              if (!isSome_2986346330(oHEX60gensym34_2952793259)) Temporary17 = false; else {                var next_2952793282 = get_2986346350(oHEX60gensym34_2952793259);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2952792774(layout_2952792994.nodeToVisualNode, next_2952793282.id);            }          if (Temporary15) {
          var input_2952793353 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790071, {node: subbase_2986344549(node_2952792702), selectedNode: nimCopy(null, node_2952792702.id, NTI2046820355), measureText: HEX3Aanonymous_2952793346, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792994 = nimCopy(layout_2952792994, computeNodeLayout_3003216215(ctx_2952790071, input_2952793353, true), NTI3087007775);
          insert_2952793207(editor_2952792701, "lastLayouts", {Field0: nimCopy(null, layout_2952792994, NTI3087007775), Field1: nimCopy(null, offset_2952792995[0], NTI2130706720)}, chckRange(i_2952792704, 0, 2147483647));
          Label18: {
            var k_2952793366 = 0;
            var colontmp__2952801333 = 0;
            colontmp__2952801333 = (editor_2952792701.lastLayouts).length - 1;
            var res_2952801334 = i_2952792704;
            Label19: {
                Label20: while (true) {
                if (!(res_2952801334 <= colontmp__2952801333)) break Label20;
                  k_2952793366 = res_2952801334;
                  HEX2BHEX3D_2113929329(editor_2952792701.lastLayouts[chckIndx(k_2952793366, 0, (editor_2952792701.lastLayouts).length - 1)].Field1, "y", bounds_3087009959(layout_2952792994).h);
                  res_2952801334 = addInt(res_2952801334, 1);
                }
            };
          };
          foundNode_2952792703 = true;
          }
          }}
          if ((foundNode_2952792703 && contains_2952792774(layout_2952792994.nodeToVisualNode, node_2952792702.id))) {
          var visualNode_2952793516 = nimCopy(null, HEX5BHEX5D_2952792870(layout_2952792994.nodeToVisualNode, node_2952792702.id), NTI3087007774);
          var bounds_2952793526 = HEX2B_2097152155(absoluteBounds_3087009572(visualNode_2952793516), vec2_2130707293(0.0, offset_2952792995[0].y));
          if (!(intersects_2097152177(bounds_2952793526, rect_2113929234(0.0, 0.0, editor_2952792701.lastBounds.w, editor_2952792701.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2952793526.y + bounds_2952793526.h) < 100.0)) {
          var subbase_2952793527 = subbase_2986344549(node_2952792702);
          editor_2952792701.previousBaseIndex = index_2986344556(subbase_2952793527);
          editor_2952792701.scrollOffset = (100.0 - ((bounds_2952793526.y + bounds_2952793526.h) - offset_2952792995[0].y));
          }
          else {
          if (((editor_2952792701.lastBounds.h - 100.0) < bounds_2952793526.y)) {
          var subbase_2952793528 = subbase_2986344549(node_2952792702);
          editor_2952792701.previousBaseIndex = index_2986344556(subbase_2952793528);
          editor_2952792701.scrollOffset = ((-((bounds_2952793526.y - offset_2952792995[0].y)) + editor_2952792701.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2952792704 = addInt(i_2952792704, 1);
          }
        }
    };
    var subbase_2952793529 = subbase_2986344549(node_2952792702);
    var input_2952793537 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790071, {node: subbase_2952793529, selectedNode: nimCopy(null, node_2952792702.id, NTI2046820355), measureText: HEX3Aanonymous_2952793530, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2952793538 = computeNodeLayout_3003216215(ctx_2952790071, input_2952793537, true);
    if (contains_2952792774(layout_2952793538.nodeToVisualNode, node_2952792702.id)) {
    var visualNode_2952793773 = HEX5BHEX5D_2952793679(layout_2952793538.nodeToVisualNode, node_2952792702.id);
    var bounds_2952793774 = absoluteBounds_3087009572(visualNode_2952793773);
    editor_2952792701.previousBaseIndex = index_2986344556(subbase_2952793529);
    editor_2952792701.scrollOffset = (-(bounds_2952793774.y) + (editor_2952792701.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2952793820(editor_2952793821, node_2952793822) {
  BeforeRet: {
    if ((node_2952793822 == editor_2952793821.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2952793822.parent == null) || !((base_2986344542(node_2952793822) == editor_2952793821.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2952793821.selectedNode == null))) {
    addLast_2952793844(editor_2952793821.selectionHistory, editor_2952793821.selectedNode);
    }
    
    if ((100 < len_2952793985(editor_2952793821.selectionHistory))) {
    var _ = popFirst_2952793994(editor_2952793821.selectionHistory);
    }
    
    editor_2952793821.selectedNode = node_2952793822;
    handleSelectedNodeChanged_2952792700(editor_2952793821);
  };

  
}

function moveCursor_2952801217(self_2952801218, direction_2952801219) {
  BeforeRet: {
    if ((direction_2952801219 < 0)) {
    if (isEditing_2952797524(self_2952801218)) {
    break BeforeRet;
    }
    
    var index_2952801220 = index_2986344556(node_2952792697(self_2952801218));
    if ((0 < index_2952801220)) {
    nodeHEX3D_2952793820(self_2952801218, HEX5BHEX5D_2986344532(node_2952792697(self_2952801218).parent, subInt(index_2952801220, 1)));
    }
    
    }
    else {
      if (isEditing_2952797524(self_2952801218)) {
      break BeforeRet;
      }
      
      var index_2952801221 = index_2986344556(node_2952792697(self_2952801218));
      if (((0 <= index_2952801221) && (index_2952801221 < subInt(len_2986344536(node_2952792697(self_2952801218).parent), 1)))) {
      nodeHEX3D_2952793820(self_2952801218, HEX5BHEX5D_2986344532(node_2952792697(self_2952801218).parent, addInt(index_2952801221, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2952801213(self_2952801273, direction_2952801274) {
    moveCursor_2952801217(self_2952801273, direction_2952801274);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2952801213(this, direction_));};

function moveCursorUp_2952801375(self_2952801376) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952801376)) {
    break BeforeRet;
    }
    
    if (((!((node_2952792697(self_2952801376) == self_2952801376.document.rootNode)) && !((node_2952792697(self_2952801376).parent == self_2952801376.document.rootNode))) && !((node_2952792697(self_2952801376).parent == null)))) {
    nodeHEX3D_2952793820(self_2952801376, node_2952792697(self_2952801376).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2952801371(self_2952801416) {
    moveCursorUp_2952801375(self_2952801416);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2952801371(this));};

function moveCursorDown_2952801437(self_2952801438) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952801438)) {
    break BeforeRet;
    }
    
    if ((0 < len_2986344536(node_2952792697(self_2952801438)))) {
    nodeHEX3D_2952793820(self_2952801438, HEX5BHEX5D_2986344532(node_2952792697(self_2952801438), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2952801433(self_2952801466) {
    moveCursorDown_2952801437(self_2952801466);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2952801433(this));};

function getNextChild_2952792692(document_2952792693, node_2952792694, min_2952792695) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2952798160 = ({val: null});

  BeforeRet: {
    if ((len_2986344536(node_2952792694) == 0)) {
    result_2952798160 = nimCopy(result_2952798160, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2952798163 = node_2952792694;
      var pos_2952798164 = 0;
      var _ = pos_2952798164;
      if ((expr_2952798163.kind == 8)) {
        var oHEX60gensym125_2952798173 = computeSymbol_3003201856(ctx_2952790071, HEX5BHEX5D_2986344532(node_2952792694, 0), true);
        if (!isSome_3087009345(oHEX60gensym125_2952798173)) Temporary3 = false; else {          var sym_2952798196 = get_3087009365(oHEX60gensym125_2952798173);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2952798196.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2952798196;
      if (ConstSet164[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2986344536(node_2952792694) == 3)) {
        if ((min_2952792695 == 0)) {
        result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 2)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792695 == 1)) {
        result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792695 == 2)) {
        result_2952798160 = nimCopy(result_2952798160, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2986344536(node_2952792694) == 2)) {
        if ((min_2952792695 == 0)) {
        result_2952798160 = nimCopy(result_2952798160, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792695 == 1)) {
        result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2952792695 < 0)) {
    result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, 0)), NTI2986344567);
    break BeforeRet;
    }
    
    if ((subInt(len_2986344536(node_2952792694), 1) <= min_2952792695)) {
    result_2952798160 = nimCopy(result_2952798160, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2952798160 = nimCopy(result_2952798160, some_2986344674(HEX5BHEX5D_2986344532(node_2952792694, addInt(min_2952792695, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798160;

}

function shouldSelectNode_2952798228(node_2952798229) {
  var result_2952798230 = false;

  BeforeRet: {
    switch (node_2952798229.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2952798230 = (len_2986344536(node_2952798229) == 0);
      break BeforeRet;
      break;
    default: 
      result_2952798230 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2952798230;

}

function moveCursorNext_2952801487(self_2952801488) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2952797524(self_2952801488)) {
    break BeforeRet;
    }
    
    var node_2952801489 = node_2952792697(self_2952801488);
    Label1: {
      var __2952801490 = 0;
      var n_2952801491 = null;
      var colontmp__2952801540 = null;
      colontmp__2952801540 = node_2952792697(self_2952801488);
      var n_2952801542 = colontmp__2952801540;
      var i_2952801543 = 0;
      var gotoChild_2952801544 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801542 == null))) break Label3;
            if ((gotoChild_2952801544 && (0 < len_2986344536(n_2952801542)))) {
            n_2952801542 = get_2986346350(getNextChild_2952792692(self_2952801488.document, n_2952801542, -1));
            __2952801490 = i_2952801543;
            n_2952801491 = n_2952801542;
            Label4: {
              if (!(shouldSelectNode_2952798228(n_2952801491))) {
              break Label4;
              }
              
              if (!((n_2952801491 == node_2952792697(self_2952801488)))) {
              nodeHEX3D_2952793820(self_2952801488, n_2952801491);
              break Label1;
              }
              
            };
            gotoChild_2952801544 = true;
            }
            else {
              if (!!((n_2952801542.parent == null))) Temporary5 = false; else {                var oHEX60gensym82_2952801546 = getNextChild_2952792692(self_2952801488.document, n_2952801542.parent, index_2986344556(n_2952801542));
                if (!isSome_2986346330(oHEX60gensym82_2952801546)) Temporary6 = false; else {                  var ne_2952801547 = get_2986346350(oHEX60gensym82_2952801546);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2952801542 = ne_2952801547;
            __2952801490 = i_2952801543;
            n_2952801491 = n_2952801542;
            Label7: {
              if (!(shouldSelectNode_2952798228(n_2952801491))) {
              break Label7;
              }
              
              if (!((n_2952801491 == node_2952792697(self_2952801488)))) {
              nodeHEX3D_2952793820(self_2952801488, n_2952801491);
              break Label1;
              }
              
            };
            gotoChild_2952801544 = true;
            }
            else {
              gotoChild_2952801544 = false;
              n_2952801542 = n_2952801542.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2952801483(self_2952801523) {
    moveCursorNext_2952801487(self_2952801523);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2952801483(this));};

function getPrevChild_2952792687(document_2952792688, node_2952792689, max_2952792690) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2952798310 = ({val: null});

  BeforeRet: {
    if ((len_2986344536(node_2952792689) == 0)) {
    result_2952798310 = nimCopy(result_2952798310, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2952798313 = node_2952792689;
      var pos_2952798314 = 0;
      var _ = pos_2952798314;
      if ((expr_2952798313.kind == 8)) {
        var oHEX60gensym134_2952798323 = computeSymbol_3003201856(ctx_2952790071, HEX5BHEX5D_2986344532(node_2952792689, 0), true);
        if (!isSome_3087009345(oHEX60gensym134_2952798323)) Temporary3 = false; else {          var sym_2952798346 = get_3087009365(oHEX60gensym134_2952798323);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2952798346.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2952798346;
      if (ConstSet165[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2986344536(node_2952792689) == 3)) {
        if ((max_2952792690 == 0)) {
        result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792690 == 1)) {
        result_2952798310 = nimCopy(result_2952798310, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792690 == 2)) {
        result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, 2)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2986344536(node_2952792689) == 2)) {
        if ((max_2952792690 == 0)) {
        result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792690 == 1)) {
        result_2952798310 = nimCopy(result_2952798310, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2952792690 < 0)) {
    result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, subInt(len_2986344536(node_2952792689), 1))), NTI2986344567);
    break BeforeRet;
    }
    else {
    if ((max_2952792690 == 0)) {
    result_2952798310 = nimCopy(result_2952798310, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    }
    result_2952798310 = nimCopy(result_2952798310, some_2986344674(HEX5BHEX5D_2986344532(node_2952792689, subInt(max_2952792690, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798310;

}

function moveCursorPrev_2952801555(self_2952801556) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2952797524(self_2952801556)) {
    break BeforeRet;
    }
    
    var node_2952801557 = node_2952792697(self_2952801556);
    Label1: {
      var n_2952801558 = null;
      var colontmp__2952801607 = null;
      colontmp__2952801607 = node_2952792697(self_2952801556);
      var gotoChild_2952801609 = false;
      var n_2952801610 = colontmp__2952801607;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801610 == null))) break Label3;
            if ((gotoChild_2952801609 && (0 < len_2986344536(n_2952801610)))) {
            n_2952801610 = get_2986346350(getPrevChild_2952792687(self_2952801556.document, n_2952801610, -1));
            gotoChild_2952801609 = true;
            }
            else {
              if (!!((n_2952801610.parent == null))) Temporary4 = false; else {                var oHEX60gensym86_2952801612 = getPrevChild_2952792687(self_2952801556.document, n_2952801610.parent, index_2986344556(n_2952801610));
                if (!isSome_2986346330(oHEX60gensym86_2952801612)) Temporary5 = false; else {                  var ne_2952801613 = get_2986346350(oHEX60gensym86_2952801612);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2952801558 = n_2952801610;
            Label6: {
              if (!(shouldSelectNode_2952798228(n_2952801558))) {
              break Label6;
              }
              
              if (!((n_2952801558 == node_2952792697(self_2952801556)))) {
              nodeHEX3D_2952793820(self_2952801556, n_2952801558);
              break Label1;
              }
              
            };
            n_2952801610 = ne_2952801613;
            gotoChild_2952801609 = true;
            }
            else {
              n_2952801558 = n_2952801610;
              Label7: {
                if (!(shouldSelectNode_2952798228(n_2952801558))) {
                break Label7;
                }
                
                if (!((n_2952801558 == node_2952792697(self_2952801556)))) {
                nodeHEX3D_2952793820(self_2952801556, n_2952801558);
                break Label1;
                }
                
              };
              gotoChild_2952801609 = false;
              n_2952801610 = n_2952801610.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2952801551(self_2952801590) {
    moveCursorPrev_2952801555(self_2952801590);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2952801551(this));};

function getNextLine_2952798394(document_2952798395, node_2952798396) {
              var Temporary6;
              var Temporary7;

  var result_2952798398 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2952798399 = 0;
      var n_2952798400 = null;
      var n_2952801694 = node_2952798396;
      var idx_2952801695 = -1;
      var i_2952801696 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952801695 == -1)) {
            __2952798399 = i_2952801696;
            n_2952798400 = n_2952801694;
            Label5: {
              if (((n_2952798400 == node_2952798396) || (n_2952798400.parent == null))) {
              break Label5;
              }
              
              if ((n_2952798400.parent.kind == 7)) {
              if (((n_2952798400.kind == 7) && (len_2986344536(n_2952798400) == 0))) {
              result_2952798398 = nimCopy(result_2952798398, some_2986344674(n_2952798400), NTI2986344567);
              break BeforeRet;
              }
              else {
              if (!((n_2952798400.kind == 7))) {
              result_2952798398 = nimCopy(result_2952798398, some_2986344674(n_2952798400), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798400.parent.kind == 9)) {
              var isElse_2952798435 = ((n_2952798400 == last_2986344706(n_2952798400.parent)) && !((modInt(len_2986344536(n_2952798400.parent), 2) == 0)));
              var isCondition_2952798436 = (!(isElse_2952798435) && (modInt(index_2986344556(n_2952798400), 2) == 0));
              if (((n_2952798400.kind == 7) && (len_2986344536(n_2952798400) == 0))) {
              result_2952798398 = nimCopy(result_2952798398, some_2986344674(n_2952798400), NTI2986344567);
              break BeforeRet;
              }
              else {
              if ((!((n_2952798400.kind == 7)) && (!(isCondition_2952798436) || (0 < index_2986344556(n_2952798400))))) {
              result_2952798398 = nimCopy(result_2952798398, some_2986344674(n_2952798400), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2952801695, 1) < len_2986344536(n_2952801694))) {
            n_2952801694 = HEX5BHEX5D_2986344532(n_2952801694, addInt(idx_2952801695, 1));
            idx_2952801695 = -1;
            }
            else {
              var oHEX60gensym71_2952801698 = next_2986344641(n_2952801694);
              if (!isSome_2986346330(oHEX60gensym71_2952801698)) Temporary7 = false; else {                var ne_2952801699 = get_2986346350(oHEX60gensym71_2952801698);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2952801694 == null));              }            if (Temporary6) {
            n_2952801694 = ne_2952801699;
            idx_2952801695 = -1;
            }
            else {
            if (((!((n_2952801694.parent == null)) && !((n_2952801694 == null))) && !((n_2952801694.parent == null)))) {
            idx_2952801695 = index_2986344556(n_2952801694);
            n_2952801694 = n_2952801694.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2952801696 = addInt(i_2952801696, 1);
            }
          }
      };
    };
    result_2952798398 = nimCopy(result_2952798398, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798398;

}

function moveCursorNextLine_2952801621(self_2952801622) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797524(self_2952801622)) {
    break BeforeRet;
    }
    
      var oHEX60gensym589_2952801625 = getNextLine_2952798394(self_2952801622.document, node_2952792697(self_2952801622));
      if (!isSome_2986346330(oHEX60gensym589_2952801625)) Temporary1 = false; else {        var next_2952801648 = get_2986346350(oHEX60gensym589_2952801625);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793820(self_2952801622, next_2952801648);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2952801617(self_2952801676) {
    moveCursorNextLine_2952801621(self_2952801676);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2952801617(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2952798453(document_2952798454, node_2952798455) {
              var Temporary4;

  var result_2952798457 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2952798458 = null;
      var idx_2952801779 = 0;
      var n_2952801780 = node_2952798455;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801780 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952801780), 1)), subInt(idx_2952801779, 1))) {
            n_2952801780 = HEX5BHEX5D_2986344532(n_2952801780, subInt(idx_2952801779, 1));
            idx_2952801779 = len_2986344536(n_2952801780);
            }
            else {
              var oHEX60gensym90_2952801782 = prev_2986344687(n_2952801780);
              if (!isSome_2986346330(oHEX60gensym90_2952801782)) Temporary4 = false; else {                var ne_2952801783 = get_2986346350(oHEX60gensym90_2952801782);
                Temporary4 = true;              }            if (Temporary4) {
            n_2952798458 = n_2952801780;
            Label5: {
              if (((n_2952798458 == node_2952798455) || (n_2952798458.parent == null))) {
              break Label5;
              }
              
              if ((n_2952798458.parent.kind == 7)) {
              if (((n_2952798458.kind == 7) && (len_2986344536(n_2952798458) == 0))) {
              result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
              break BeforeRet;
              }
              else {
              if (!((n_2952798458.kind == 7))) {
              result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798458.parent.kind == 9)) {
              var isElse_2952798493 = ((n_2952798458 == last_2986344706(n_2952798458.parent)) && !((modInt(len_2986344536(n_2952798458.parent), 2) == 0)));
              var isCondition_2952798494 = (!(isElse_2952798493) && (modInt(index_2986344556(n_2952798458), 2) == 0));
              if (((n_2952798458.kind == 7) && (len_2986344536(n_2952798458) == 0))) {
              result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
              break BeforeRet;
              }
              else {
              if ((!((n_2952798458.kind == 7)) && (!(isCondition_2952798494) || (0 < index_2986344556(n_2952798458))))) {
              result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798458.kind == 9)) {
              result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
              break BeforeRet;
              }
              
            };
            n_2952801780 = ne_2952801783;
            idx_2952801779 = len_2986344536(n_2952801780);
            }
            else {
              n_2952798458 = n_2952801780;
              Label6: {
                if (((n_2952798458 == node_2952798455) || (n_2952798458.parent == null))) {
                break Label6;
                }
                
                if ((n_2952798458.parent.kind == 7)) {
                if (((n_2952798458.kind == 7) && (len_2986344536(n_2952798458) == 0))) {
                result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
                break BeforeRet;
                }
                else {
                if (!((n_2952798458.kind == 7))) {
                result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2952798458.parent.kind == 9)) {
                var isElse_2952801784 = ((n_2952798458 == last_2986344706(n_2952798458.parent)) && !((modInt(len_2986344536(n_2952798458.parent), 2) == 0)));
                var isCondition_2952801785 = (!(isElse_2952801784) && (modInt(index_2986344556(n_2952798458), 2) == 0));
                if (((n_2952798458.kind == 7) && (len_2986344536(n_2952798458) == 0))) {
                result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
                break BeforeRet;
                }
                else {
                if ((!((n_2952798458.kind == 7)) && (!(isCondition_2952801785) || (0 < index_2986344556(n_2952798458))))) {
                result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2952798458.kind == 9)) {
                result_2952798457 = nimCopy(result_2952798457, some_2986344674(n_2952798458), NTI2986344567);
                break BeforeRet;
                }
                
              };
              idx_2952801779 = index_2986344556(n_2952801780);
              n_2952801780 = n_2952801780.parent;
            }
            }
          }
      };
    };
    result_2952798457 = nimCopy(result_2952798457, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798457;

}

function moveCursorPrevLine_2952801706(self_2952801707) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797524(self_2952801707)) {
    break BeforeRet;
    }
    
      var oHEX60gensym598_2952801710 = getPrevLine_2952798453(self_2952801707.document, node_2952792697(self_2952801707));
      if (!isSome_2986346330(oHEX60gensym598_2952801710)) Temporary1 = false; else {        var prev_2952801733 = get_2986346350(oHEX60gensym598_2952801710);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793820(self_2952801707, prev_2952801733);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2952801702(self_2952801761) {
    moveCursorPrevLine_2952801706(self_2952801761);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2952801702(this));};

function selectContaining_2952801792(self_2952801793, container_2952801794) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2952797524(self_2952801793)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2952801794)) {
    case "function":
        var oHEX60gensym608_2952801797 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 11);
        if (!isSome_2986346330(oHEX60gensym608_2952801797)) Temporary1 = false; else {          var child_2952801820 = get_2986346350(oHEX60gensym608_2952801797);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801820.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym609_2952801823 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 4);
        if (!isSome_2986346330(oHEX60gensym609_2952801823)) Temporary2 = false; else {          var child_2952801846 = get_2986346350(oHEX60gensym609_2952801823);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801846.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym610_2952801849 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 7);
        if (!isSome_2986346330(oHEX60gensym610_2952801849)) Temporary3 = false; else {          var child_2952801872 = get_2986346350(oHEX60gensym610_2952801849);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801872);
      }
      
      break;
    case "node-list":
        var oHEX60gensym611_2952801875 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 7);
        if (!isSome_2986346330(oHEX60gensym611_2952801875)) Temporary4 = false; else {          var child_2952801898 = get_2986346350(oHEX60gensym611_2952801875);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801898.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym612_2952801901 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 9);
        if (!isSome_2986346330(oHEX60gensym612_2952801901)) Temporary5 = false; else {          var child_2952801924 = get_2986346350(oHEX60gensym612_2952801901);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801924.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym613_2952801927 = findWithParentRec_2986346373(node_2952792697(self_2952801793), 10);
        if (!isSome_2986346330(oHEX60gensym613_2952801927)) Temporary6 = false; else {          var child_2952801950 = get_2986346350(oHEX60gensym613_2952801927);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2952793820(self_2952801793, child_2952801950.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2952801788(self_2952801979, container_2952801980) {
    selectContaining_2952801792(self_2952801979, container_2952801980);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2952801788(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3003234632(cache_3003234635, key_3003234636) {
    var node_3003234732 = getOrDefault_3019901555(cache_3003234635.table, key_3003234636, null);
    if (!((node_3003234732 == null))) {
    del_3019912654(cache_3003234635.table, key_3003234636);
    remove_3019913413(cache_3003234635.list, node_3003234732);
    }
    

  
}

function deleteNode_3003234562(ctx_3003234563, node_3003234564) {
          var Temporary3;
            var Temporary4;

    ctx_3003234563.depGraph.revision = addInt(ctx_3003234563.depGraph.revision, 1);
    del_3003234632(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(node_3003234564), Field1: -1});
    if (!((node_3003234564.parent == null))) {
    HEX5BHEX5DHEX3D_3019910340(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(node_3003234564.parent), Field1: -1}, ctx_3003234563.depGraph.revision);
    }
    
    var parent_3003234894 = node_3003234564.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3003234894 == null))) Temporary3 = false; else {            var oHEX60gensym758_3003234901 = findWithParentRec_2986346373(parent_3003234894, 11);
            if (!isSome_2986346330(oHEX60gensym758_3003234901)) Temporary4 = false; else {              var child_3003234947 = get_2986346350(oHEX60gensym758_3003234901);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3003234948 = child_3003234947.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234948), Field1: -1}, ctx_3003234563.depGraph.revision);
          parent_3003234894 = functionDefinition_3003234948.parent;
        }
    };

  
}

function rawGet_3187671114(t_3187671117, key_3187671118, hc_3187671119, hc_3187671119_Idx) {
  var result_3187671120 = 0;

  BeforeRet: {
    hc_3187671119[hc_3187671119_Idx] = hash_2046820596(key_3187671118);
    if ((hc_3187671119[hc_3187671119_Idx] == 0)) {
    hc_3187671119[hc_3187671119_Idx] = 314159265;
    }
    
    if (((t_3187671117.data).length == 0)) {
    result_3187671120 = -1;
    break BeforeRet;
    }
    
    var h_3187671172 = (hc_3187671119[hc_3187671119_Idx] & (t_3187671117.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0)) break Label2;
          if (((t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0 == hc_3187671119[hc_3187671119_Idx]) && HEX3DHEX3D_2046820592(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field1, key_3187671118))) {
          result_3187671120 = h_3187671172;
          break BeforeRet;
          }
          
          h_3187671172 = nextTry_1308622883(h_3187671172, (t_3187671117.data).length - 1);
        }
    };
    result_3187671120 = subInt(-1, h_3187671172);
  };

  return result_3187671120;

}

function del_2952796665(t_2952796668, key_2952796669) {
    var hc_2952796670 = [0];
    var i_2952796677 = rawGet_3187671114(t_2952796668, key_2952796669, hc_2952796670, 0);
    var mskHEX60gensym36_2952796681 = (t_2952796668.data).length - 1;
    if ((0 <= i_2952796677)) {
    t_2952796668.counter = subInt(t_2952796668.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2952796688 = i_2952796677;
            var rHEX60gensym36_2952796689 = jHEX60gensym36_2952796688;
            t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field0 = 0;
            t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field1 = nimCopy(t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2952796677 = (addInt(i_2952796677, 1) & mskHEX60gensym36_2952796681);
                  if (isEmpty_1308622877(t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2952796689 = (t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)].Field0 & mskHEX60gensym36_2952796681);
                  if (!(((((rHEX60gensym36_2952796689 <= i_2952796677) && (jHEX60gensym36_2952796688 < rHEX60gensym36_2952796689)) || ((jHEX60gensym36_2952796688 < rHEX60gensym36_2952796689) && (i_2952796677 < jHEX60gensym36_2952796688))) || ((i_2952796677 < jHEX60gensym36_2952796688) && (rHEX60gensym36_2952796689 <= i_2952796677))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2952796668.data[chckIndx(jHEX60gensym36_2952796688, 0, (t_2952796668.data).length - 1)] = nimCopy(t_2952796668.data[chckIndx(jHEX60gensym36_2952796688, 0, (t_2952796668.data).length - 1)], t_2952796668.data[chckIndx(i_2952796677, 0, (t_2952796668.data).length - 1)], NTI2952791517);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2952796251(doc_2952796252, node_2952796253) {
              var Temporary8;

    var fmtRes_2952796258 = [mnewString(0)];
    fmtRes_2952796258[0].push.apply(fmtRes_2952796258[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952796258, 0, node_2952796253, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952796258[0], NTI33554449)]);
    Label1: {
      var child_2952796267 = null;
      var i_2952802054 = 0;
      var L_2952802055 = (node_2952796253.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802054 < L_2952802055)) break Label3;
            child_2952796267 = node_2952796253.children[chckIndx(i_2952802054, 0, (node_2952796253.children).length - 1)];
            handleNodeDelete_2952796251(doc_2952796252, child_2952796267);
            i_2952802054 = addInt(i_2952802054, 1);
            if (!(((node_2952796253.children).length == L_2952802055))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3003234562(ctx_2952790071, node_2952796253);
    Label4: {
      var i_2952796301 = 0;
      var update_2952796302 = null;
      var i_2952802064 = 0;
      var L_2952802065 = (ctx_2952790071.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2952802064 < L_2952802065)) break Label6;
            i_2952796301 = i_2952802064;
            update_2952796302 = ctx_2952790071.updateFunctions[chckIndx(i_2952802064, 0, (ctx_2952790071.updateFunctions).length - 1)];
            var key_2952796303 = {Field0: getItem_3003175953(node_2952796253), Field1: i_2952796301};
            if (contains_3003221607(ctx_2952790071.diagnosticsPerQuery, key_2952796303)) {
            Label7: {
              var id_2952796452 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2952802059 = [];
              colontmp__2952802059 = (Temporary8 = HEX5BHEX5D_3003222052(ctx_2952790071.diagnosticsPerQuery, key_2952796303), Temporary8)[0][Temporary8[1]];
              var i_2952802060 = 0;
              var L_2952802061 = (colontmp__2952802059).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2952802060 < L_2952802061)) break Label10;
                    id_2952796452 = colontmp__2952802059[chckIndx(i_2952802060, 0, (colontmp__2952802059).length - 1)];
                    del_3003222769(HEX5BHEX5D_3003222261(ctx_2952790071.diagnosticsPerNode, id_2952796452).queries, key_2952796303);
                    i_2952802060 = addInt(i_2952802060, 1);
                    if (!(((colontmp__2952802059).length == L_2952802061))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3003229512(ctx_2952790071.diagnosticsPerQuery, key_2952796303);
            }
            
            i_2952802064 = addInt(i_2952802064, 1);
            if (!(((ctx_2952790071.updateFunctions).length == L_2952802065))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2952796665(doc_2952796252.nodes, node_2952796253.id);

  
}

function HEX5BHEX5DHEX3D_2986344712(node_2986344713, index_2986344714, newNode_2986344715) {
    newNode_2986344715.parent = node_2986344713;
    node_2986344713.children[chckIndx(index_2986344714, 0, (node_2986344713.children).length - 1)].parent = null;
    node_2986344713.children[chckIndx(index_2986344714, 0, (node_2986344713.children).length - 1)] = newNode_2986344715;

  
}

function getOrDefault_3003176208(t_3003176211, key_3003176212, default_3003176213) {
    var Temporary1;

  var result_3003176214 = null;

    var hcHEX60gensym380_3003176217 = [0];
    var indexHEX60gensym380_3003176224 = rawGet_3003122705(t_3003176211, key_3003176212, hcHEX60gensym380_3003176217, 0);
    if ((0 <= indexHEX60gensym380_3003176224)) {
    Temporary1 = t_3003176211.data[chckIndx(indexHEX60gensym380_3003176224, 0, (t_3003176211.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003176213;
    }
    
    result_3003176214 = Temporary1;

  return result_3003176214;

}

function newDoublyLinkedNode_3003176340(value_3003176342) {
  var result_3003176343 = null;

    result_3003176343 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003176343.value = nimCopy(result_3003176343.value, value_3003176342, NTI3003121726);

  return result_3003176343;

}

function mustRehash_3003176681(t_3003176683) {
  var result_3003176684 = false;

    if (!((t_3003176683.counter < (t_3003176683.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003176684 = ((mulInt((t_3003176683.data).length, 2) < mulInt(t_3003176683.counter, 3)) || (subInt((t_3003176683.data).length, t_3003176683.counter) < 4));

  return result_3003176684;

}

function rawInsert_3003177374(t_3003177378, data_3003177379, data_3003177379_Idx, key_3003177380, val_3003177381, hc_3003177382, h_3003177383) {
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field1 = nimCopy(data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field1, key_3003177380, NTI3019898905);
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field2 = val_3003177381;
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field0 = hc_3003177382;

  
}

function enlarge_3003176938(t_3003176941) {
    var n_3003176944 = [];
    n_3003176944 = new Array(chckRange(mulInt((t_3003176941.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003176941.data).length, 2), 0, 2147483647) ; ++i) { n_3003176944[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003176941.data; t_3003176941.data = n_3003176944; n_3003176944 = Temporary1;    Label2: {
      var i_3003177042 = 0;
      var colontmp__2952802098 = 0;
      colontmp__2952802098 = (n_3003176944).length - 1;
      var res_2952802099 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802099 <= colontmp__2952802098)) break Label4;
            i_3003177042 = res_2952802099;
            var eh_3003177123 = n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003177123)) {
            var j_3003177127 = (eh_3003177123 & (t_3003176941.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003176941.data[chckIndx(j_3003177127, 0, (t_3003176941.data).length - 1)].Field0)) break Label6;
                  j_3003177127 = nextTry_1308622883(j_3003177127, (t_3003176941.data).length - 1);
                }
            };
            rawInsert_3003177374(t_3003176941, t_3003176941, "data", n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field1, n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field2, eh_3003177123, j_3003177127);
            }
            
            res_2952802099 = addInt(res_2952802099, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003177624(t_3003177627, key_3003177628, hc_3003177629) {
  var result_3003177630 = 0;

  BeforeRet: {
    if (((t_3003177627.data).length == 0)) {
    result_3003177630 = -1;
    break BeforeRet;
    }
    
    var h_3003177715 = (hc_3003177629 & (t_3003177627.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field0)) break Label2;
          if (((t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field0 == hc_3003177629) && HEX3DHEX3D_3003123049(t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field1, key_3003177628))) {
          result_3003177630 = h_3003177715;
          break BeforeRet;
          }
          
          h_3003177715 = nextTry_1308622883(h_3003177715, (t_3003177627.data).length - 1);
        }
    };
    result_3003177630 = subInt(-1, h_3003177715);
  };

  return result_3003177630;

}

function HEX5BHEX5DHEX3D_3003176413(t_3003176416, key_3003176417, val_3003176418) {
    if (((t_3003176416.data).length == 0)) {
    var correctSizeHEX60gensym383_3003176501 = slotsNeeded_1308622891(32);
    t_3003176416.counter = 0;
    t_3003176416.data = new Array(chckRange(correctSizeHEX60gensym383_3003176501, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym383_3003176501, 0, 2147483647) ; ++i) { t_3003176416.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003176506 = [0];
    var index_3003176513 = rawGet_3003122705(t_3003176416, key_3003176417, hc_3003176506, 0);
    if ((0 <= index_3003176513)) {
    t_3003176416.data[chckIndx(index_3003176513, 0, (t_3003176416.data).length - 1)].Field2 = val_3003176418;
    }
    else {
      if (((t_3003176416.data).length == 0)) {
      var correctSizeHEX60gensym386_3003176676 = slotsNeeded_1308622891(32);
      t_3003176416.counter = 0;
      t_3003176416.data = new Array(chckRange(correctSizeHEX60gensym386_3003176676, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym386_3003176676, 0, 2147483647) ; ++i) { t_3003176416.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003176681(t_3003176416)) {
      enlarge_3003176938(t_3003176416);
      index_3003176513 = rawGetKnownHC_3003177624(t_3003176416, key_3003176417, hc_3003176506[0]);
      }
      
      index_3003176513 = subInt(-1, index_3003176513);
      rawInsert_3003177374(t_3003176416, t_3003176416, "data", key_3003176417, val_3003176418, hc_3003176506[0], index_3003176513);
      t_3003176416.counter = addInt(t_3003176416.counter, 1);
    }
    

  
}

function len_3003179189(t_3003179192) {
  var result_3003179193 = 0;

    result_3003179193 = t_3003179192.counter;

  return result_3003179193;

}

function len_3003179106(cache_3003179109) {
  var result_3003179110 = 0;

    result_3003179110 = len_3003179189(cache_3003179109.table);

  return result_3003179110;

}

function del_3003180796(t_3003180799, key_3003180800) {
    var hc_3003180801 = [0];
    var i_3003180808 = rawGet_3003122705(t_3003180799, key_3003180800, hc_3003180801, 0);
    var mskHEX60gensym36_3003180812 = (t_3003180799.data).length - 1;
    if ((0 <= i_3003180808)) {
    t_3003180799.counter = subInt(t_3003180799.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003180819 = i_3003180808;
            var rHEX60gensym36_3003180820 = jHEX60gensym36_3003180819;
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0 = 0;
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field1 = nimCopy(t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003180808 = (addInt(i_3003180808, 1) & mskHEX60gensym36_3003180812);
                  if (isEmpty_1308622877(t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003180820 = (t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0 & mskHEX60gensym36_3003180812);
                  if (!(((((rHEX60gensym36_3003180820 <= i_3003180808) && (jHEX60gensym36_3003180819 < rHEX60gensym36_3003180820)) || ((jHEX60gensym36_3003180819 < rHEX60gensym36_3003180820) && (i_3003180808 < jHEX60gensym36_3003180819))) || ((i_3003180808 < jHEX60gensym36_3003180819) && (rHEX60gensym36_3003180820 <= i_3003180808))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003180799.data[chckIndx(jHEX60gensym36_3003180819, 0, (t_3003180799.data).length - 1)] = nimCopy(t_3003180799.data[chckIndx(jHEX60gensym36_3003180819, 0, (t_3003180799.data).length - 1)], t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)], NTI3003121762);
          }
      };
    };
    }
    

  
}

function resize_3003179024(cache_3003179027) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003179027.capacity < len_3003179106(cache_3003179027))) break Label2;
          var t_3003179194 = cache_3003179027.list.tail;
          if (cache_3003179027.recordRemovedKeys) {
          incl_3003179214(cache_3003179027.removedKeys, t_3003179194.value.key);
          }
          
          del_3003180796(cache_3003179027.table, t_3003179194.value.key);
          remove_3003123372(cache_3003179027.list, t_3003179194);
        }
    };

  
}

function addNewNode_3003176332(cache_3003176335, key_3003176336, val_3003176337) {
    var node_3003176349 = newDoublyLinkedNode_3003176340({key: nimCopy(null, key_3003176336, NTI3019898905), val: val_3003176337});
    HEX5BHEX5DHEX3D_3003176413(cache_3003176335.table, key_3003176336, node_3003176349);
    prepend_3003123700(cache_3003176335.list, node_3003176349);
    if (cache_3003176335.recordRemovedKeys) {
    excl_3003178043(cache_3003176335.removedKeys, key_3003176336);
    }
    
    resize_3003179024(cache_3003176335);

  
}

function HEX5BHEX5DHEX3D_3003176113(cache_3003176116, key_3003176117, val_3003176118) {
    var node_3003176305 = getOrDefault_3003176208(cache_3003176116.table, key_3003176117, null);
    if ((node_3003176305 == null)) {
    addNewNode_3003176332(cache_3003176116, key_3003176117, val_3003176118);
    }
    else {
      node_3003176305.value.val = val_3003176118;
      remove_3003123372(cache_3003176116.list, node_3003176305);
      prepend_3003123700(cache_3003176116.list, node_3003176305);
    }
    

  
}

function insertNode_3003233870(ctx_3003233871, node_3003233872) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3003233871.depGraph.revision = addInt(ctx_3003233871.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(node_3003233872), Field1: -1}, ctx_3003233871.depGraph.revision);
    if (!((node_3003233872.parent == null))) {
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(node_3003233872.parent), Field1: -1}, ctx_3003233871.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3003176113(ctx_3003233871.itemsAstNode, getItem_3003175953(node_3003233872), node_3003233872);
    Label1: {
      var key_3003234088 = 0;
      var child_3003234089 = null;
      var n_2952802087 = node_3003233872;
      var idx_2952802088 = -1;
      var i_2952802089 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952802088 == -1)) {
            var colontmp__2952802092 = nimCopy(null, {Field0: i_2952802089, Field1: n_2952802087}, NTI2986345785);
            key_3003234088 = colontmp__2952802092["Field0"];
            child_3003234089 = colontmp__2952802092["Field1"];
            HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(child_3003234089), Field1: -1}, ctx_3003233871.depGraph.revision);
            HEX5BHEX5DHEX3D_3003176113(ctx_3003233871.itemsAstNode, getItem_3003175953(child_3003234089), child_3003234089);
            }
            
            if ((addInt(idx_2952802088, 1) < len_2986344536(n_2952802087))) {
            n_2952802087 = HEX5BHEX5D_2986344532(n_2952802087, addInt(idx_2952802088, 1));
            idx_2952802088 = -1;
            }
            else {
              var oHEX60gensym74_2952802093 = next_2986344641(n_2952802087);
              if (!isSome_2986346330(oHEX60gensym74_2952802093)) Temporary5 = false; else {                var ne_2952802094 = get_2986346350(oHEX60gensym74_2952802093);
                Temporary5 = true;              }            if (Temporary5) {
            n_2952802087 = ne_2952802094;
            idx_2952802088 = -1;
            }
            else {
            if ((!((n_2952802087.parent == null)) && !((n_2952802087.parent == node_3003233872)))) {
            idx_2952802088 = index_2986344556(n_2952802087);
            n_2952802087 = n_2952802087.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2952802089 = addInt(i_2952802089, 1);
            }
          }
      };
    };
    var parent_3003234228 = node_3003233872.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3003234228 == null))) Temporary8 = false; else {            var oHEX60gensym752_3003234235 = findWithParentRec_2986346373(parent_3003234228, 11);
            if (!isSome_2986346330(oHEX60gensym752_3003234235)) Temporary9 = false; else {              var child_3003234281 = get_2986346350(oHEX60gensym752_3003234235);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3003234282 = child_3003234281.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234282), Field1: -1}, ctx_3003233871.depGraph.revision);
          parent_3003234228 = functionDefinition_3003234282.parent;
        }
    };

  
}

function mustRehash_2952794991(t_2952794993) {
  var result_2952794994 = false;

    if (!((t_2952794993.counter < (t_2952794993.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2952794994 = ((mulInt((t_2952794993.data).length, 2) < mulInt(t_2952794993.counter, 3)) || (subInt((t_2952794993.data).length, t_2952794993.counter) < 4));

  return result_2952794994;

}

function rawInsert_2952795600(t_2952795604, data_2952795605, data_2952795605_Idx, key_2952795606, val_2952795607, hc_2952795608, h_2952795609) {
    data_2952795605[data_2952795605_Idx][chckIndx(h_2952795609, 0, (data_2952795605[data_2952795605_Idx]).length - 1)].Field1 = nimCopy(data_2952795605[data_2952795605_Idx][chckIndx(h_2952795609, 0, (data_2952795605[data_2952795605_Idx]).length - 1)].Field1, key_2952795606, NTI2046820355);
    data_2952795605[data_2952795605_Idx][chckIndx(h_2952795609, 0, (data_2952795605[data_2952795605_Idx]).length - 1)].Field2 = val_2952795607;
    data_2952795605[data_2952795605_Idx][chckIndx(h_2952795609, 0, (data_2952795605[data_2952795605_Idx]).length - 1)].Field0 = hc_2952795608;

  
}

function enlarge_2952795194(t_2952795197) {
    var n_2952795200 = [];
    n_2952795200 = new Array(chckRange(mulInt((t_2952795197.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2952795197.data).length, 2), 0, 2147483647) ; ++i) { n_2952795200[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2952795197.data; t_2952795197.data = n_2952795200; n_2952795200 = Temporary1;    Label2: {
      var i_2952795280 = 0;
      var colontmp__2952802107 = 0;
      colontmp__2952802107 = (n_2952795200).length - 1;
      var res_2952802108 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802108 <= colontmp__2952802107)) break Label4;
            i_2952795280 = res_2952802108;
            var eh_2952795358 = n_2952795200[chckIndx(i_2952795280, 0, (n_2952795200).length - 1)].Field0;
            if (isFilled_1308622880(eh_2952795358)) {
            var j_2952795362 = (eh_2952795358 & (t_2952795197.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2952795197.data[chckIndx(j_2952795362, 0, (t_2952795197.data).length - 1)].Field0)) break Label6;
                  j_2952795362 = nextTry_1308622883(j_2952795362, (t_2952795197.data).length - 1);
                }
            };
            rawInsert_2952795600(t_2952795197, t_2952795197, "data", n_2952795200[chckIndx(i_2952795280, 0, (n_2952795200).length - 1)].Field1, n_2952795200[chckIndx(i_2952795280, 0, (n_2952795200).length - 1)].Field2, eh_2952795358, j_2952795362);
            }
            
            res_2952802108 = addInt(res_2952802108, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2952795841(t_2952795844, key_2952795845, hc_2952795846) {
  var result_2952795847 = 0;

  BeforeRet: {
    if (((t_2952795844.data).length == 0)) {
    result_2952795847 = -1;
    break BeforeRet;
    }
    
    var h_2952795914 = (hc_2952795846 & (t_2952795844.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2952795844.data[chckIndx(h_2952795914, 0, (t_2952795844.data).length - 1)].Field0)) break Label2;
          if (((t_2952795844.data[chckIndx(h_2952795914, 0, (t_2952795844.data).length - 1)].Field0 == hc_2952795846) && HEX3DHEX3D_2046820592(t_2952795844.data[chckIndx(h_2952795914, 0, (t_2952795844.data).length - 1)].Field1, key_2952795845))) {
          result_2952795847 = h_2952795914;
          break BeforeRet;
          }
          
          h_2952795914 = nextTry_1308622883(h_2952795914, (t_2952795844.data).length - 1);
        }
    };
    result_2952795847 = subInt(-1, h_2952795914);
  };

  return result_2952795847;

}

function HEX5BHEX5DHEX3D_2952794762(t_2952794765, key_2952794766, val_2952794767) {
    if (((t_2952794765.data).length == 0)) {
    var correctSizeHEX60gensym95_2952794832 = slotsNeeded_1308622891(32);
    t_2952794765.counter = 0;
    t_2952794765.data = new Array(chckRange(correctSizeHEX60gensym95_2952794832, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym95_2952794832, 0, 2147483647) ; ++i) { t_2952794765.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2952794837 = [0];
    var index_2952794844 = rawGet_3187671114(t_2952794765, key_2952794766, hc_2952794837, 0);
    if ((0 <= index_2952794844)) {
    t_2952794765.data[chckIndx(index_2952794844, 0, (t_2952794765.data).length - 1)].Field2 = val_2952794767;
    }
    else {
      if (((t_2952794765.data).length == 0)) {
      var correctSizeHEX60gensym98_2952794986 = slotsNeeded_1308622891(32);
      t_2952794765.counter = 0;
      t_2952794765.data = new Array(chckRange(correctSizeHEX60gensym98_2952794986, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_2952794986, 0, 2147483647) ; ++i) { t_2952794765.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2952794991(t_2952794765)) {
      enlarge_2952795194(t_2952794765);
      index_2952794844 = rawGetKnownHC_2952795841(t_2952794765, key_2952794766, hc_2952794837[0]);
      }
      
      index_2952794844 = subInt(-1, index_2952794844);
      rawInsert_2952795600(t_2952794765, t_2952794765, "data", key_2952794766, val_2952794767, hc_2952794837[0], index_2952794844);
      t_2952794765.counter = addInt(t_2952794765.counter, 1);
    }
    

  
}

function handleNodeInserted_2952794676(doc_2952794677, node_2952794678) {
              var Temporary8;

    var fmtRes_2952794683 = [mnewString(0)];
    fmtRes_2952794683[0].push.apply(fmtRes_2952794683[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952794683, 0, node_2952794678, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794683[0], NTI33554449)]);
    insertNode_3003233870(ctx_2952790071, node_2952794678);
    Label1: {
      var handler_2952794711 = null;
      var i_2952802073 = 0;
      var L_2952802074 = (doc_2952794677.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802073 < L_2952802074)) break Label3;
            handler_2952794711 = doc_2952794677.onNodeInserted[chckIndx(i_2952802073, 0, (doc_2952794677.onNodeInserted).length - 1)];
            handler_2952794711(doc_2952794677, node_2952794678);
            i_2952802073 = addInt(i_2952802073, 1);
            if (!(((doc_2952794677.onNodeInserted).length == L_2952802074))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2952794762(doc_2952794677.nodes, node_2952794678.id, node_2952794678);
    Label4: {
      var key_2952796167 = 0;
      var child_2952796168 = null;
      var n_2952802078 = node_2952794678;
      var idx_2952802079 = -1;
      var i_2952802080 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2952802079 == -1)) {
            var colontmp__2952802083 = nimCopy(null, {Field0: i_2952802080, Field1: n_2952802078}, NTI2986345785);
            key_2952796167 = colontmp__2952802083["Field0"];
            child_2952796168 = colontmp__2952802083["Field1"];
            HEX5BHEX5DHEX3D_2952794762(doc_2952794677.nodes, child_2952796168.id, child_2952796168);
            }
            
            if ((addInt(idx_2952802079, 1) < len_2986344536(n_2952802078))) {
            n_2952802078 = HEX5BHEX5D_2986344532(n_2952802078, addInt(idx_2952802079, 1));
            idx_2952802079 = -1;
            }
            else {
              var oHEX60gensym74_2952802084 = next_2986344641(n_2952802078);
              if (!isSome_2986346330(oHEX60gensym74_2952802084)) Temporary8 = false; else {                var ne_2952802085 = get_2986346350(oHEX60gensym74_2952802084);
                Temporary8 = true;              }            if (Temporary8) {
            n_2952802078 = ne_2952802085;
            idx_2952802079 = -1;
            }
            else {
            if ((!((n_2952802078.parent == null)) && !((n_2952802078.parent == node_2952794678)))) {
            idx_2952802079 = index_2986344556(n_2952802078);
            n_2952802078 = n_2952802078.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2952802080 = addInt(i_2952802080, 1);
            }
          }
      };
    };

  
}

function replaceNode_2952798518(document_2952798519, node_2952798520, newNode_2952798521) {
  var result_2952798522 = null;

  BeforeRet: {
    if ((node_2952798520.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2952798528 = index_2986344556(node_2952798520);
    document_2952798519.undoOps.push({kind: 1, parent: node_2952798520.parent, idx: idx_2952798528, node: node_2952798520, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952798519.redoOps = nimCopy(null, [], NTI2952794811);
    handleNodeDelete_2952796251(document_2952798519, node_2952798520);
    HEX5BHEX5DHEX3D_2986344712(node_2952798520.parent, idx_2952798528, newNode_2952798521);
    handleNodeInserted_2952794676(document_2952798519, newNode_2952798521);
    result_2952798522 = newNode_2952798521;
    break BeforeRet;
  };

  return result_2952798522;

}

function delete_2986344720(x_2986344722, x_2986344722_Idx, i_2986344723) {
    x_2986344722[x_2986344722_Idx].splice(i_2986344723, 1);

  
}

function delete_2986344716(node_2986344717, index_2986344718) {
  var result_2986344719 = null;

  BeforeRet: {
    if (((index_2986344718 < 0) || (len_2986344536(node_2986344717) <= index_2986344718))) {
    result_2986344719 = node_2986344717;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2986344532(node_2986344717, index_2986344718).parent = null;
    delete_2986344720(node_2986344717, "children", chckRange(index_2986344718, 0, 2147483647));
    if ((index_2986344718 < len_2986344536(node_2986344717))) {
    result_2986344719 = HEX5BHEX5D_2986344532(node_2986344717, index_2986344718);
    break BeforeRet;
    }
    else {
    if ((0 < len_2986344536(node_2986344717))) {
    result_2986344719 = HEX5BHEX5D_2986344532(node_2986344717, subInt(index_2986344718, 1));
    break BeforeRet;
    }
    else {
      result_2986344719 = node_2986344717;
      break BeforeRet;
    }
    }
  };

  return result_2986344719;

}

function deleteNode_2952798582(document_2952798583, node_2952798584) {
  var result_2952798585 = null;

  BeforeRet: {
    if ((node_2952798584.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2952798584.parent == document_2952798583.rootNode) && (len_2986344536(document_2952798583.rootNode) == 1))) {
    result_2952798585 = replaceNode_2952798518(document_2952798583, node_2952798584, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2952798583.undoOps.push({kind: 0, parent: node_2952798584.parent, idx: index_2986344556(node_2952798584), node: node_2952798584, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952798583.redoOps = nimCopy(null, [], NTI2952794811);
    handleNodeDelete_2952796251(document_2952798583, node_2952798584);
    result_2952798585 = delete_2986344716(node_2952798584.parent, index_2986344556(node_2952798584));
    break BeforeRet;
  };

  return result_2952798585;

}

function deleteSelected_2952802006(self_2952802007) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952802007)) {
    break BeforeRet;
    }
    
    self_2952802007.deletedNode = nimCopy(self_2952802007.deletedNode, some_2986344674(node_2952792697(self_2952802007)), NTI2986344567);
    nodeHEX3D_2952793820(self_2952802007, deleteNode_2952798582(self_2952802007.document, node_2952792697(self_2952802007)));
  };

  
}

function deleteSelectedJsWrapper_2952802002(self_2952802038) {
    deleteSelected_2952802006(self_2952802038);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2952802002(this));};

function initTable_2986346284(initialSize_2986346287) {
  var result_2986346288 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2986346290 = slotsNeeded_1308622891(chckRange(initialSize_2986346287, 0, 2147483647));
    result_2986346288.counter = 0;
    result_2986346288.data = new Array(chckRange(correctSizeHEX60gensym29_2986346290, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2986346290, 0, 2147483647) ; ++i) { result_2986346288.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_2986346288;

}

function rawGet_2986344855(t_2986344858, key_2986344859, hc_2986344860, hc_2986344860_Idx) {
  var result_2986344861 = 0;

  BeforeRet: {
    hc_2986344860[hc_2986344860_Idx] = hash_2046820596(key_2986344859);
    if ((hc_2986344860[hc_2986344860_Idx] == 0)) {
    hc_2986344860[hc_2986344860_Idx] = 314159265;
    }
    
    if (((t_2986344858.data).length == 0)) {
    result_2986344861 = -1;
    break BeforeRet;
    }
    
    var h_2986344912 = (hc_2986344860[hc_2986344860_Idx] & (t_2986344858.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field0)) break Label2;
          if (((t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field0 == hc_2986344860[hc_2986344860_Idx]) && HEX3DHEX3D_2046820592(t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field1, key_2986344859))) {
          result_2986344861 = h_2986344912;
          break BeforeRet;
          }
          
          h_2986344912 = nextTry_1308622883(h_2986344912, (t_2986344858.data).length - 1);
        }
    };
    result_2986344861 = subInt(-1, h_2986344912);
  };

  return result_2986344861;

}

function mustRehash_2986345200(t_2986345202) {
  var result_2986345203 = false;

    if (!((t_2986345202.counter < (t_2986345202.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986345203 = ((mulInt((t_2986345202.data).length, 2) < mulInt(t_2986345202.counter, 3)) || (subInt((t_2986345202.data).length, t_2986345202.counter) < 4));

  return result_2986345203;

}

function rawInsert_2986345649(t_2986345653, data_2986345654, data_2986345654_Idx, key_2986345655, val_2986345656, hc_2986345657, h_2986345658) {
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field1 = nimCopy(data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field1, key_2986345655, NTI2046820355);
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field2 = nimCopy(data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field2, val_2986345656, NTI2046820355);
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field0 = hc_2986345657;

  
}

function enlarge_2986345355(t_2986345358) {
    var n_2986345361 = [];
    n_2986345361 = new Array(chckRange(mulInt((t_2986345358.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986345358.data).length, 2), 0, 2147483647) ; ++i) { n_2986345361[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_2986345358.data; t_2986345358.data = n_2986345361; n_2986345361 = Temporary1;    Label2: {
      var i_2986345425 = 0;
      var colontmp__2952802176 = 0;
      colontmp__2952802176 = (n_2986345361).length - 1;
      var res_2952802177 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802177 <= colontmp__2952802176)) break Label4;
            i_2986345425 = res_2952802177;
            var eh_2986345479 = n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986345479)) {
            var j_2986345483 = (eh_2986345479 & (t_2986345358.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986345358.data[chckIndx(j_2986345483, 0, (t_2986345358.data).length - 1)].Field0)) break Label6;
                  j_2986345483 = nextTry_1308622883(j_2986345483, (t_2986345358.data).length - 1);
                }
            };
            rawInsert_2986345649(t_2986345358, t_2986345358, "data", n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field1, n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field2, eh_2986345479, j_2986345483);
            }
            
            res_2952802177 = addInt(res_2952802177, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986345818(t_2986345821, key_2986345822, hc_2986345823) {
  var result_2986345824 = 0;

  BeforeRet: {
    if (((t_2986345821.data).length == 0)) {
    result_2986345824 = -1;
    break BeforeRet;
    }
    
    var h_2986345875 = (hc_2986345823 & (t_2986345821.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field0)) break Label2;
          if (((t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field0 == hc_2986345823) && HEX3DHEX3D_2046820592(t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field1, key_2986345822))) {
          result_2986345824 = h_2986345875;
          break BeforeRet;
          }
          
          h_2986345875 = nextTry_1308622883(h_2986345875, (t_2986345821.data).length - 1);
        }
    };
    result_2986345824 = subInt(-1, h_2986345875);
  };

  return result_2986345824;

}

function HEX5BHEX5DHEX3D_2986344794(t_2986344797, key_2986344798, val_2986344799) {
    if (((t_2986344797.data).length == 0)) {
    var correctSizeHEX60gensym15_2986344849 = slotsNeeded_1308622891(32);
    t_2986344797.counter = 0;
    t_2986344797.data = new Array(chckRange(correctSizeHEX60gensym15_2986344849, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2986344849, 0, 2147483647) ; ++i) { t_2986344797.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_2986344854 = [0];
    var index_2986345093 = rawGet_2986344855(t_2986344797, key_2986344798, hc_2986344854, 0);
    if ((0 <= index_2986345093)) {
    t_2986344797.data[chckIndx(index_2986345093, 0, (t_2986344797.data).length - 1)].Field2 = nimCopy(t_2986344797.data[chckIndx(index_2986345093, 0, (t_2986344797.data).length - 1)].Field2, val_2986344799, NTI2046820355);
    }
    else {
      if (((t_2986344797.data).length == 0)) {
      var correctSizeHEX60gensym20_2986345195 = slotsNeeded_1308622891(32);
      t_2986344797.counter = 0;
      t_2986344797.data = new Array(chckRange(correctSizeHEX60gensym20_2986345195, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2986345195, 0, 2147483647) ; ++i) { t_2986344797.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_2986345200(t_2986344797)) {
      enlarge_2986345355(t_2986344797);
      index_2986345093 = rawGetKnownHC_2986345818(t_2986344797, key_2986344798, hc_2986344854[0]);
      }
      
      index_2986345093 = subInt(-1, index_2986345093);
      rawInsert_2986345649(t_2986344797, t_2986344797, "data", key_2986344798, val_2986344799, hc_2986344854[0], index_2986345093);
      t_2986344797.counter = addInt(t_2986344797.counter, 1);
    }
    

  
}

function add_2986344486(node_2986344487, child_2986344488) {
    if (HEX3DHEX3D_2046820592(node_2986344487.id, null_2046820612)) {
    node_2986344487.id = nimCopy(node_2986344487.id, newId_2046820569(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820592(child_2986344488.id, null_2046820612)) {
    child_2986344488.id = nimCopy(child_2986344488.id, newId_2046820569(), NTI2046820355);
    }
    
    child_2986344488.parent = node_2986344487;
    node_2986344487.children.push(child_2986344488);;

  
}

function clone_2986344742(node_2986344743, idMap_2986344751) {
  var result_2986344752 = null;

    var newNodeId_2986344753 = newId_2046820569();
    result_2986344752 = {kind: node_2986344743.kind, id: nimCopy(null, newNodeId_2986344753, NTI2046820355), reff: nimCopy(null, node_2986344743.reff, NTI2046820355), text: nimCopy(null, node_2986344743.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2986344794(idMap_2986344751, node_2986344743.id, newNodeId_2986344753);
    Label1: {
      var child_2986346059 = null;
      var i_2952802170 = 0;
      var L_2952802171 = (node_2986344743.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802170 < L_2952802171)) break Label3;
            child_2986346059 = node_2986344743.children[chckIndx(i_2952802170, 0, (node_2986344743.children).length - 1)];
            add_2986344486(result_2986344752, clone_2986344742(child_2986346059, idMap_2986344751));
            i_2952802170 = addInt(i_2952802170, 1);
            if (!(((node_2986344743.children).length == L_2952802171))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2986344752;

}

function hasKey_2986346131(t_2986346134, key_2986346135) {
  var result_2986346136 = false;

    var hc_2986346137 = [0];
    result_2986346136 = (0 <= rawGet_2986344855(t_2986346134, key_2986346135, hc_2986346137, 0));

  return result_2986346136;

}

function contains_2986346125(t_2986346128, key_2986346129) {
  var result_2986346130 = false;

  BeforeRet: {
    result_2986346130 = hasKey_2986346131(t_2986346128, key_2986346129);
    break BeforeRet;
  };

  return result_2986346130;

}

function HEX5BHEX5D_2986346197(t_2986346200, key_2986346201) {
  var result_2986346202 = null;

    var hcHEX60gensym22_2986346203 = [0];
    var indexHEX60gensym22_2986346210 = rawGet_2986344855(t_2986346200, key_2986346201, hcHEX60gensym22_2986346203, 0);
    if ((0 <= indexHEX60gensym22_2986346210)) {
    result_2986346202 = t_2986346200.data[chckIndx(indexHEX60gensym22_2986346210, 0, (t_2986346200.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_2986346201);
    }
    

  return result_2986346202;

}

function replaceReferences_2986346078(node_2986346079, idMap_2986346082) {
    if (contains_2986346125(idMap_2986346082, node_2986346079.reff)) {
    node_2986346079.reff = nimCopy(node_2986346079.reff, HEX5BHEX5D_2986346197(idMap_2986346082, node_2986346079.reff), NTI2046820355);
    }
    
    Label1: {
      var child_2986346280 = null;
      var i_2952802181 = 0;
      var L_2952802182 = (node_2986346079.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802181 < L_2952802182)) break Label3;
            child_2986346280 = node_2986346079.children[chckIndx(i_2952802181, 0, (node_2986346079.children).length - 1)];
            replaceReferences_2986346078(child_2986346280, idMap_2986346082);
            i_2952802181 = addInt(i_2952802181, 1);
            if (!(((node_2986346079.children).length == L_2952802182))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2986346281(node_2986346282) {
  var result_2986346283 = null;

  BeforeRet: {
    var idMap_2986346295 = [initTable_2986346284(32)];
    var newNode_2986346296 = clone_2986344742(node_2986346282, idMap_2986346295[0]);
    replaceReferences_2986346078(newNode_2986346296, idMap_2986346295[0]);
    result_2986346283 = newNode_2986346296;
    break BeforeRet;
  };

  return result_2986346283;

}

function copySelected_2952802122(self_2952802123) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952802123)) {
    break BeforeRet;
    }
    
    self_2952802123.deletedNode = nimCopy(self_2952802123.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952792697(self_2952802123))), NTI2986344567);
  };

  
}

function copySelectedJsWrapper_2952802118(self_2952802154) {
    copySelected_2952802122(self_2952802154);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2952802118(this));};

function getSymbol_3003185027(ctxHEX60gensym80_3003185028, idHEX60gensym80_3003185029) {
  var result_3003185031 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_3003185032 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_3003185029, NTI2046820355), Field1: 2}, NTI3019898905);
    if (contains_3003143495(ctxHEX60gensym80_3003185028.itemsSymbol, itemHEX60gensym80_3003185032)) {
    result_3003185031 = nimCopy(result_3003185031, some_3003185199(HEX5BHEX5D_3003144048(ctxHEX60gensym80_3003185028.itemsSymbol, itemHEX60gensym80_3003185032)), NTI3087008904);
    break BeforeRet;
    }
    
    result_3003185031 = nimCopy(result_3003185031, none_3003185212(), NTI3087008904);
    break BeforeRet;
  };

  return result_3003185031;

}

function content_2818573983(document_2818573984) {
  var result_2818573985 = [];

  BeforeRet: {
    result_2818573985 = nimCopy(null, document_2818573984.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818573985;

}

function updateNode_3003234352(ctx_3003234353, node_3003234354) {
          var Temporary3;
            var Temporary4;

    ctx_3003234353.depGraph.revision = addInt(ctx_3003234353.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003234353.depGraph.changed, {Field0: getItem_3003175953(node_3003234354), Field1: -1}, ctx_3003234353.depGraph.revision);
    var parent_3003234428 = node_3003234354.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3003234428 == null))) Temporary3 = false; else {            var oHEX60gensym754_3003234435 = findWithParentRec_2986346373(parent_3003234428, 11);
            if (!isSome_2986346330(oHEX60gensym754_3003234435)) Temporary4 = false; else {              var child_3003234481 = get_2986346350(oHEX60gensym754_3003234435);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3003234482 = child_3003234481.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003234353.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234482), Field1: -1}, ctx_3003234353.depGraph.revision);
          parent_3003234428 = functionDefinition_3003234482.parent;
        }
    };
    var fmtRes_3003234556 = [mnewString(0)];
    fmtRes_3003234556[0].push.apply(fmtRes_3003234556[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008579(fmtRes_3003234556, 0, node_3003234354, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003234556[0], NTI33554449)]);

  
}

function notifySymbolChanged_3003233784(ctx_3003233785, sym_3003233786) {
    ctx_3003233785.depGraph.revision = addInt(ctx_3003233785.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233785.depGraph.changed, {Field0: getItem_3003185222(sym_3003233786), Field1: -1}, ctx_3003233785.depGraph.revision);
    var fmtRes_3003233864 = [mnewString(0)];
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3003233864, 0, sym_3003233786.name, []);
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [32,40]);;
    formatValue_3019899100(fmtRes_3003233864, 0, sym_3003233786.id, []);
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003233864[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2952802295 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802295 < rows_1979711496)) break Label3;
            i_1979711534 = i_2952802295;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2952802295 = addInt(i_2952802295, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2952802301 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2952802301 < rows_1979711496)) break Label6;
            i_1979711551 = i_2952802301;
            Label7: {
              var k_1979711556 = 0;
              var i_2952802299 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2952802299 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2952802299;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2952802299 = addInt(i_2952802299, 1);
                  }
              };
            };
            i_2952802301 = addInt(i_2952802301, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2952802307 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2952802307 < cols_1979711497)) break Label12;
            col_1979711561 = i_2952802307;
            Label13: {
              var row_1979711566 = 0;
              var i_2952802305 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2952802305 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2952802305;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2952802305 = addInt(i_2952802305, 1);
                  }
              };
            };
            i_2952802307 = addInt(i_2952802307, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2952802317 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802317 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2952802317];
            addChar(str_33557214, x_33557228);;
            i_2952802317 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3170893928(len_3170893930) {
  var result_3170893931 = [];

    result_3170893931 = new Array(len_3170893930); for (var i = 0 ; i < len_3170893930 ; ++i) { result_3170893931[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3170893931;

}

function mergeAlt_3170893967(a_3170893969, b_3170893970, lo_3170893971, m_3170893972, hi_3170893973, cmp_3170893976, order_3170893977) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3170893976(a_3170893969[chckIndx(m_3170893972, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(addInt(m_3170893972, 1), 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
    break BeforeRet;
    }
    
    var j_3170893978 = lo_3170893971;
    if (!((j_3170893978 <= m_3170893972))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3170893984 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3170893978 <= m_3170893972)) break Label2;
          b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)] = nimCopy(b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2952791524);
          bb_3170893984 = addInt(bb_3170893984, 1);
          j_3170893978 = addInt(j_3170893978, 1);
        }
    };
    var i_3170893995 = 0;
    var k_3170893996 = lo_3170893971;
    Label3: {
        Label4: while (true) {
        if (!((k_3170893996 < j_3170893978) && (j_3170893978 <= hi_3170893973))) break Label4;
          if ((HEX2A_1023410184(cmp_3170893976(b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2952791524);
          i_3170893995 = addInt(i_3170893995, 1);
          }
          else {
            a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2952791524);
            j_3170893978 = addInt(j_3170893978, 1);
          }
          
          k_3170893996 = addInt(k_3170893996, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3170893996 < j_3170893978)) break Label6;
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2952791524);
          k_3170893996 = addInt(k_3170893996, 1);
          i_3170893995 = addInt(i_3170893995, 1);
        }
    };
  };

  
}

function sort_3170893916(a_3170893918, cmp_3170893921, order_3170893922) {
    var n_3170893927 = (a_3170893918).length;
    var b_3170893964 = newSeq_3170893928(chckRange(divInt(n_3170893927, 2), 0, 2147483647));
    var s_3170893965 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3170893965 < n_3170893927)) break Label2;
          var m_3170893966 = subInt(subInt(n_3170893927, 1), s_3170893965);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3170893966)) break Label4;
                mergeAlt_3170893967(a_3170893918, b_3170893964, nimMax(addInt(subInt(m_3170893966, s_3170893965), 1), 0), m_3170893966, addInt(m_3170893966, s_3170893965), cmp_3170893921, order_3170893922);
                m_3170893966 = subInt(m_3170893966, mulInt(s_3170893965, 2));
              }
          };
          s_3170893965 = mulInt(s_3170893965, 2);
        }
    };

  
}

function cmp_3170893896(x_3170893898, y_3170893899) {
  var result_3170893900 = 0;

  BeforeRet: {
    if ((x_3170893898 == y_3170893899)) {
    result_3170893900 = 0;
    break BeforeRet;
    }
    
    if ((x_3170893898 < y_3170893899)) {
    result_3170893900 = -1;
    break BeforeRet;
    }
    
    result_3170893900 = 1;
    break BeforeRet;
  };

  return result_3170893900;

}

function getCompletions_2952797737(editor_2952797738, text_2952797739, contextNode_2952797743) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2952797887(a_2952797905, b_2952797906) {
      var result_2952797911 = 0;

        result_2952797911 = cmp_3170893896(a_2952797905.score, b_2952797906.score);

      return result_2952797911;

    }

  var result_2952797744 = [];

  BeforeRet: {
    result_2952797744 = nimCopy(null, [], NTI3170893842);
    if (((isNone_2986346358(contextNode_2952797743) || (get_2986346350(contextNode_2952797743).kind == 1)) || (get_2986346350(contextNode_2952797743).kind == 0))) {
    var symbols_2952797809 = computeSymbols_3003205356(ctx_2952790071, get_2986346350(contextNode_2952797743), true);
    Label1: {
      var key_2952797814 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2952797815 = null;
      var L_2952802286 = len_3087009054(symbols_2952797809);
      Label2: {
        var h_2952802288 = 0;
        var colontmp__2952802289 = 0;
        colontmp__2952802289 = (symbols_2952797809.data).length - 1;
        var res_2952802290 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952802290 <= colontmp__2952802289)) break Label4;
              h_2952802288 = res_2952802290;
              if (isFilled_1308622880(symbols_2952797809.data[chckIndx(h_2952802288, 0, (symbols_2952797809.data).length - 1)].Field0)) {
              var colontmp__2952802293 = nimCopy(null, {Field0: nimCopy(null, symbols_2952797809.data[chckIndx(h_2952802288, 0, (symbols_2952797809.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2952797809.data[chckIndx(h_2952802288, 0, (symbols_2952797809.data).length - 1)].Field2}, NTI3087008730);
              key_2952797814 = nimCopy(key_2952797814, colontmp__2952802293["Field0"], NTI2046820355);
              symbol_2952797815 = colontmp__2952802293["Field1"];
              var score_2952797816 = fuzzyMatch_1979711568(text_2952797739, symbol_2952797815.name);
              result_2952797744.push({kind: 0, score: score_2952797816, id: nimCopy(null, symbol_2952797815.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3087009054(symbols_2952797809) == L_2952802286))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952802290 = addInt(res_2952802290, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym118_2952797823 = nimCopy(null, contextNode_2952797743, NTI2986344567);
      if (!isSome_2986346330(oHEX60gensym118_2952797823)) Temporary6 = false; else {        var node_2952797846 = get_2986346350(oHEX60gensym118_2952797823);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2952797846.kind == 0);      }    if (Temporary5) {
    result_2952797744.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2952797739, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2952797739, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2952797739, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2952797739, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2952797739, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2952797739, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2952797744.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2952797739, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797744.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2952797739, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2952797739);
    result_2952797744.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3170893916(result_2952797744, HEX3Aanonymous_2952797887, 0);
    break BeforeRet;
  };

  return result_2952797744;

}

function updateCompletions_2952792685(editor_2952792686) {
  BeforeRet: {
    if ((editor_2952792686.textDocument == null)) {
    editor_2952792686.completions = nimCopy(null, [], NTI3170893842);
    editor_2952792686.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2952797935 = nsuJoinSep(content_2818573983(editor_2952792686.textDocument), []);
    editor_2952792686.completions = nimCopy(null, getCompletions_2952797737(editor_2952792686, text_2952797935, some_2986344674(node_2952792697(editor_2952792686))), NTI2952794203);
    editor_2952792686.completionText = nimCopy(null, text_2952797935, NTI33554449);
    if ((0 < (editor_2952792686.completions).length)) {
    editor_2952792686.selectedCompletion = clamp_1660945119(editor_2952792686.selectedCompletion, 0, subInt((editor_2952792686.completions).length, 1));
    }
    else {
      editor_2952792686.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2952797950(self_2952797951, apply_2952797952) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2952797524(self_2952797951))) {
    break BeforeRet;
    }
    
    if (apply_2952797952) {
    if (!(HEX3DHEX3D_2046820592(self_2952797951.currentlyEditedSymbol, null_2046820612))) {
      var oHEX60gensym640_2952802195 = getSymbol_3003185027(ctx_2952790071, self_2952797951.currentlyEditedSymbol);
      if (!isSome_3087009345(oHEX60gensym640_2952802195)) Temporary1 = false; else {        var sym_2952802218 = get_3087009365(oHEX60gensym640_2952802195);
        Temporary1 = true;      }    if (Temporary1) {
    self_2952797951.document.undoOps.push({kind: 4, id: nimCopy(null, self_2952797951.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2952802218.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2952802218.name = nimCopy(null, nsuJoinSep(content_2818573983(self_2952797951.textDocument), []), NTI33554449);
    if ((sym_2952802218.kind == 0)) {
    var Temporary2 = sym_2952802218;
    if (ConstSet166[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2952802218.name, NTI33554449);
    var Temporary3 = sym_2952802218;
    if (ConstSet167[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3003234352(ctx_2952790071, Temporary3.node);
    }
    
    notifySymbolChanged_3003233784(ctx_2952790071, sym_2952802218);
    }
    
    }
    else {
    if (!((self_2952797951.currentlyEditedNode == null))) {
    self_2952797951.document.undoOps.push({kind: 3, node: self_2952797951.currentlyEditedNode, text: nimCopy(null, self_2952797951.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2952797951.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818573983(self_2952797951.textDocument), [10]), NTI33554449);
    updateNode_3003234352(ctx_2952790071, self_2952797951.currentlyEditedNode);
    }
    }
    }
    
    unregister_2382364835(self_2952797951.textEditor);
    self_2952797951.textEditor = null;
    self_2952797951.textDocument = null;
    self_2952797951.currentlyEditedSymbol = nimCopy(self_2952797951.currentlyEditedSymbol, null_2046820612, NTI2046820355);
    self_2952797951.currentlyEditedNode = null;
    updateCompletions_2952792685(self_2952797951);
  };

  
}

function finishEditJsWrapper_2952802186(self_2952802263, apply_2952802264) {
    finishEdit_2952797950(self_2952802263, apply_2952802264);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2952802186(this, apply_));};

function pop_2952798655(s_2952798657, s_2952798657_Idx) {
  var result_2952798658 = null;

    var L_2952798662 = subInt((s_2952798657[s_2952798657_Idx]).length, 1);
    result_2952798658 = s_2952798657[s_2952798657_Idx][chckIndx(L_2952798662, 0, (s_2952798657[s_2952798657_Idx]).length - 1)];
    if (s_2952798657[s_2952798657_Idx].length < chckRange(L_2952798662, 0, 2147483647)) { for (var i = s_2952798657[s_2952798657_Idx].length ; i < chckRange(L_2952798662, 0, 2147483647) ; ++i) s_2952798657[s_2952798657_Idx].push(null); }
               else { s_2952798657[s_2952798657_Idx].length = chckRange(L_2952798662, 0, 2147483647); };

  return result_2952798658;

}

function formatValue_2952792559(result_2952792561, result_2952792561_Idx, value_2952792562, specifier_2952792563) {
    formatValue_721420459(result_2952792561, result_2952792561_Idx, reprEnum(value_2952792562, NTI2952791367), specifier_2952792563);

  
}

function HEX24_2952792551(op_2952792552) {
  var result_2952792553 = [];

    var fmtRes_2952792558 = [mnewString(0)];
    formatValue_2952792559(fmtRes_2952792558, 0, op_2952792552.kind, []);
    fmtRes_2952792558[0].push.apply(fmtRes_2952792558[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2952792558, 0, op_2952792552.text, []);
    fmtRes_2952792558[0].push.apply(fmtRes_2952792558[0], [39]);;
    result_2952792553 = nimCopy(null, fmtRes_2952792558[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820592(op_2952792552.id, null_2046820612))) {
    var fmtRes_2952792571 = [mnewString(0)];
    fmtRes_2952792571[0].push.apply(fmtRes_2952792571[0], [44,32,105,100,32,61,32]);;
    formatValue_3019899100(fmtRes_2952792571, 0, op_2952792552.id, []);
    result_2952792553.push.apply(result_2952792553, fmtRes_2952792571[0]);;
    }
    
    if (!((op_2952792552.node == null))) {
    var fmtRes_2952792585 = [mnewString(0)];
    fmtRes_2952792585[0].push.apply(fmtRes_2952792585[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008579(fmtRes_2952792585, 0, op_2952792552.node, []);
    result_2952792553.push.apply(result_2952792553, fmtRes_2952792585[0]);;
    }
    
    if (!((op_2952792552.parent == null))) {
    var fmtRes_2952792599 = [mnewString(0)];
    fmtRes_2952792599[0].push.apply(fmtRes_2952792599[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008579(fmtRes_2952792599, 0, op_2952792552.parent, []);
    fmtRes_2952792599[0].push.apply(fmtRes_2952792599[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_2952792599, 0, op_2952792552.idx, []);
    result_2952792553.push.apply(result_2952792553, fmtRes_2952792599[0]);;
    }
    

  return result_2952792553;

}

function formatValue_2952798673(result_2952798675, result_2952798675_Idx, value_2952798676, specifier_2952798677) {
    formatValue_721420459(result_2952798675, result_2952798675_Idx, HEX24_2952792551(value_2952798676), specifier_2952798677);

  
}

function insert_2986344506(x_2986344508, x_2986344508_Idx, item_2986344509, i_2986344510) {
    var it_2986344531 = null;
    x_2986344508[x_2986344508_Idx] = x_2986344508[x_2986344508_Idx] || []; x_2986344508[x_2986344508_Idx].splice(i_2986344510, 0, it_2986344531);
    x_2986344508[x_2986344508_Idx][chckIndx(i_2986344510, 0, (x_2986344508[x_2986344508_Idx]).length - 1)] = item_2986344509;

  
}

function insert_2986344502(node_2986344503, child_2986344504, idx_2986344505) {
    if (HEX3DHEX3D_2046820592(node_2986344503.id, null_2046820612)) {
    node_2986344503.id = nimCopy(node_2986344503.id, newId_2046820569(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820592(child_2986344504.id, null_2046820612)) {
    child_2986344504.id = nimCopy(child_2986344504.id, newId_2046820569(), NTI2046820355);
    }
    
    child_2986344504.parent = node_2986344503;
    insert_2986344506(node_2986344503, "children", child_2986344504, chckRange(idx_2986344505, 0, 2147483647));

  
}

function undo_2952798645(document_2952798646) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952798648 = ({val: null});

  BeforeRet: {
    if (((document_2952798646.undoOps).length == 0)) {
    result_2952798648 = nimCopy(result_2952798648, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var undoOp_2952798667 = pop_2952798655(document_2952798646, "undoOps");
    var fmtRes_2952798672 = [mnewString(0)];
    fmtRes_2952798672[0].push.apply(fmtRes_2952798672[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2952798673(fmtRes_2952798672, 0, undoOp_2952798667, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952798672[0], NTI33554449)]);
    switch (undoOp_2952798667.kind) {
    case 0:
      insert_2986344502(undoOp_2952798667.parent, undoOp_2952798667.node, undoOp_2952798667.idx);
      handleNodeInserted_2952794676(document_2952798646, undoOp_2952798667.node);
      document_2952798646.redoOps.push(undoOp_2952798667);;
      result_2952798648 = nimCopy(result_2952798648, some_2986344674(undoOp_2952798667.node), NTI2986344567);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2952798685 = HEX5BHEX5D_2986344532(undoOp_2952798667.parent, undoOp_2952798667.idx);
      handleNodeDelete_2952796251(document_2952798646, HEX5BHEX5D_2986344532(undoOp_2952798667.parent, undoOp_2952798667.idx));
      HEX5BHEX5DHEX3D_2986344712(undoOp_2952798667.parent, undoOp_2952798667.idx, undoOp_2952798667.node);
      handleNodeInserted_2952794676(document_2952798646, undoOp_2952798667.node);
      document_2952798646.redoOps.push({kind: 1, parent: undoOp_2952798667.parent, idx: undoOp_2952798667.idx, node: oldNode_2952798685, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2952798648 = nimCopy(result_2952798648, some_2986344674(undoOp_2952798667.node), NTI2986344567);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2952796251(document_2952798646, HEX5BHEX5D_2986344532(undoOp_2952798667.parent, undoOp_2952798667.idx));
      var _ = delete_2986344716(undoOp_2952798667.parent, undoOp_2952798667.idx);
      document_2952798646.redoOps.push(undoOp_2952798667);;
      if ((undoOp_2952798667.idx < len_2986344536(undoOp_2952798667.parent))) {
      result_2952798648 = nimCopy(result_2952798648, some_2986344674(HEX5BHEX5D_2986344532(undoOp_2952798667.parent, undoOp_2952798667.idx)), NTI2986344567);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2952798667.idx)) {
      result_2952798648 = nimCopy(result_2952798648, some_2986344674(HEX5BHEX5D_2986344532(undoOp_2952798667.parent, subInt(undoOp_2952798667.idx, 1))), NTI2986344567);
      break BeforeRet;
      }
      }
      result_2952798648 = nimCopy(result_2952798648, some_2986344674(undoOp_2952798667.parent), NTI2986344567);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym148_2952798708 = getSymbol_3003185027(ctx_2952790071, undoOp_2952798667.id);
        if (!isSome_3087009345(oHEX60gensym148_2952798708)) Temporary1 = false; else {          var symbol_2952798731 = get_3087009365(oHEX60gensym148_2952798708);
          Temporary1 = true;        }      if (Temporary1) {
      document_2952798646.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2952798667.id, NTI2046820355), text: nimCopy(null, symbol_2952798731.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2952798731.name = nimCopy(null, undoOp_2952798667.text, NTI33554449);
      if ((symbol_2952798731.kind == 0)) {
      var Temporary2 = symbol_2952798731;
      if (ConstSet175[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2952798731.name, NTI33554449);
      var Temporary3 = symbol_2952798731;
      if (ConstSet176[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3003234352(ctx_2952790071, Temporary3.node);
      }
      
      notifySymbolChanged_3003233784(ctx_2952790071, symbol_2952798731);
      }
      
      break;
    case 3:
      document_2952798646.redoOps.push({kind: 3, node: undoOp_2952798667.node, text: nimCopy(null, undoOp_2952798667.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2952798667.node.text = nimCopy(null, undoOp_2952798667.text, NTI33554449);
      updateNode_3003234352(ctx_2952790071, undoOp_2952798667.node);
      break;
    }
    result_2952798648 = nimCopy(result_2952798648, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798648;

}

function undo_2952802330(self_2952802331) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797524(self_2952802331)) {
    break BeforeRet;
    }
    
    finishEdit_2952797950(self_2952802331, false);
      var oHEX60gensym650_2952802334 = undo_2952798645(self_2952802331.document);
      if (!isSome_2986346330(oHEX60gensym650_2952802334)) Temporary1 = false; else {        var node_2952802357 = get_2986346350(oHEX60gensym650_2952802334);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793820(self_2952802331, node_2952802357);
    }
    
  };

  
}

function undoJsWrapper2_2952802326(self_2952802385) {
    undo_2952802330(self_2952802385);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2952802326(this));};

function redo_2952798746(document_2952798747) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952798749 = ({val: null});

  BeforeRet: {
    if (((document_2952798747.redoOps).length == 0)) {
    result_2952798749 = nimCopy(result_2952798749, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var redoOp_2952798758 = pop_2952798655(document_2952798747, "redoOps");
    var fmtRes_2952798763 = [mnewString(0)];
    fmtRes_2952798763[0].push.apply(fmtRes_2952798763[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2952798673(fmtRes_2952798763, 0, redoOp_2952798758, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952798763[0], NTI33554449)]);
    switch (redoOp_2952798758.kind) {
    case 0:
      document_2952798747.undoOps.push({kind: 0, parent: redoOp_2952798758.parent, idx: redoOp_2952798758.idx, node: redoOp_2952798758.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2952796251(document_2952798747, HEX5BHEX5D_2986344532(redoOp_2952798758.parent, redoOp_2952798758.idx));
      var _ = delete_2986344716(redoOp_2952798758.parent, redoOp_2952798758.idx);
      if ((redoOp_2952798758.idx < len_2986344536(redoOp_2952798758.parent))) {
      result_2952798749 = nimCopy(result_2952798749, some_2986344674(HEX5BHEX5D_2986344532(redoOp_2952798758.parent, redoOp_2952798758.idx)), NTI2986344567);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2952798758.idx)) {
      result_2952798749 = nimCopy(result_2952798749, some_2986344674(HEX5BHEX5D_2986344532(redoOp_2952798758.parent, subInt(redoOp_2952798758.idx, 1))), NTI2986344567);
      break BeforeRet;
      }
      }
      result_2952798749 = nimCopy(result_2952798749, some_2986344674(redoOp_2952798758.parent), NTI2986344567);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2952798782 = HEX5BHEX5D_2986344532(redoOp_2952798758.parent, redoOp_2952798758.idx);
      handleNodeDelete_2952796251(document_2952798747, HEX5BHEX5D_2986344532(redoOp_2952798758.parent, redoOp_2952798758.idx));
      HEX5BHEX5DHEX3D_2986344712(redoOp_2952798758.parent, redoOp_2952798758.idx, redoOp_2952798758.node);
      handleNodeInserted_2952794676(document_2952798747, redoOp_2952798758.node);
      document_2952798747.undoOps.push({kind: 1, parent: redoOp_2952798758.parent, idx: redoOp_2952798758.idx, node: oldNode_2952798782, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2952798749 = nimCopy(result_2952798749, some_2986344674(redoOp_2952798758.node), NTI2986344567);
      break BeforeRet;
      break;
    case 2:
      insert_2986344502(redoOp_2952798758.parent, redoOp_2952798758.node, redoOp_2952798758.idx);
      handleNodeInserted_2952794676(document_2952798747, redoOp_2952798758.node);
      document_2952798747.undoOps.push(redoOp_2952798758);;
      result_2952798749 = nimCopy(result_2952798749, some_2986344674(redoOp_2952798758.node), NTI2986344567);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2952798799 = getSymbol_3003185027(ctx_2952790071, redoOp_2952798758.id);
        if (!isSome_3087009345(oHEX60gensym151_2952798799)) Temporary1 = false; else {          var symbol_2952798822 = get_3087009365(oHEX60gensym151_2952798799);
          Temporary1 = true;        }      if (Temporary1) {
      document_2952798747.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2952798758.id, NTI2046820355), text: nimCopy(null, symbol_2952798822.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2952798822.name = nimCopy(null, redoOp_2952798758.text, NTI33554449);
      if ((symbol_2952798822.kind == 0)) {
      var Temporary2 = symbol_2952798822;
      if (ConstSet177[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2952798822.name, NTI33554449);
      var Temporary3 = symbol_2952798822;
      if (ConstSet178[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3003234352(ctx_2952790071, Temporary3.node);
      }
      
      notifySymbolChanged_3003233784(ctx_2952790071, symbol_2952798822);
      }
      
      break;
    case 3:
      document_2952798747.undoOps.push({kind: 3, node: redoOp_2952798758.node, text: nimCopy(null, redoOp_2952798758.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2952798758.node.text = nimCopy(null, redoOp_2952798758.text, NTI33554449);
      updateNode_3003234352(ctx_2952790071, redoOp_2952798758.node);
      break;
    }
    result_2952798749 = nimCopy(result_2952798749, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798749;

}

function redo_2952802407(self_2952802408) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797524(self_2952802408)) {
    break BeforeRet;
    }
    
    finishEdit_2952797950(self_2952802408, false);
      var oHEX60gensym659_2952802411 = redo_2952798746(self_2952802408.document);
      if (!isSome_2986346330(oHEX60gensym659_2952802411)) Temporary1 = false; else {        var node_2952802434 = get_2986346350(oHEX60gensym659_2952802411);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793820(self_2952802408, node_2952802434);
    }
    
  };

  
}

function redoJsWrapper2_2952802403(self_2952802462) {
    redo_2952802407(self_2952802462);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2952802403(this));};

function canInsertInto_2952801064(self_2952801065, parent_2952801066) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2952801067 = false;

  BeforeRet: {
    switch (parent_2952801066.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2952801067 = false;
      break BeforeRet;
      break;
    case 4:
      result_2952801067 = (len_2986344536(parent_2952801066) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2952801067 = (len_2986344536(parent_2952801066) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2952801067 = (len_2986344536(parent_2952801066) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2952801067 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2986344536(parent_2952801066) == 0)) {
      result_2952801067 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym526_2952801070 = computeSymbol_3003201856(ctx_2952790071, HEX5BHEX5D_2986344532(parent_2952801066, 0), true);
        if (!isSome_3087009345(oHEX60gensym526_2952801070)) Temporary1 = false; else {          var sym_2952801093 = get_3087009365(oHEX60gensym526_2952801070);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2952801093.kind == 1)) {
      var Temporary2 = sym_2952801093;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2952801067 = (len_2986344536(parent_2952801066) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2952801067 = (len_2986344536(parent_2952801066) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2952801098 = computeType_3003195250(ctx_2952790071, HEX5BHEX5D_2986344532(parent_2952801066, 0), true);
      if ((typ_2952801098.kind == 4)) {
        var Temporary4 = typ_2952801098;
        if (ConstSet180[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2952801098;
          if (ConstSet181[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2952801098;
          if (ConstSet182[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008302((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008177(true));        }      if (Temporary3) {
      result_2952801067 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2952801098;
      if (ConstSet183[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2952801067 = (len_2986344536(parent_2952801066) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2952801067 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2952801067;

}

function some_2952798877(val_2952798879) {
  var result_2952798880 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2952798880.has = true;
    result_2952798880.val = nimCopy(result_2952798880.val, val_2952798879, NTI2952795105);

  return result_2952798880;

}

function none_2952798891() {
  var result_2952798898 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2952798898;

}

function none_2952799378() {
  var result_2952799380 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2952799380 = nimCopy(result_2952799380, none_2952798891(), NTI2952795110);

  return result_2952799380;

}

function createNodeFromAction_2952798837(editor_2952798838, arg_2952798839, node_2952798840, typ_2952798841) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2952798847 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2952798839)) {
    case "deleted":
        var oHEX60gensym152_2952798850 = nimCopy(null, editor_2952798838.deletedNode, NTI2986344567);
        if (!isSome_2986346330(oHEX60gensym152_2952798850)) Temporary1 = false; else {          var node_2952798873 = get_2986346350(oHEX60gensym152_2952798850);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2952798838.deletedNode = nimCopy(editor_2952798838.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952798873)), NTI2986344567);
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952798873, Field1: 0}), NTI2952795110);
      break BeforeRet;
      }
      
      result_2952798847 = nimCopy(result_2952798847, none_2952798891(), NTI2952795110);
      break BeforeRet;
      break;
    case "empty":
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: {kind: 0, id: newId_2046820569(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "identifier":
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "number-literal":
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym153_2952798912 = null;
        Label3: {
          var res_2952798982 = null;
          res_2952798982 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952798982.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952798982.id = nimCopy(res_2952798982.id, newId_2046820569(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2952798985 = null;
              res_2952798985 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952798985.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952798982, res_2952798985);
        };
      };
      var node_2952799004 = res_2952798982;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799004, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym160_2952799012 = null;
        Label9: {
          var res_2952799018 = null;
          res_2952799018 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799018.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952799018.id = nimCopy(res_2952799018.id, newId_2046820569(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2952799021 = null;
              res_2952799021 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799021.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799018, res_2952799021);
            Label14: {
              var res_2952799023 = null;
              res_2952799023 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799023.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799018, res_2952799023);
          };
        };
      };
      var node_2952799051 = res_2952799018;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799051, Field1: 1}), NTI2952795110);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym170_2952799059 = null;
        Label17: {
          var res_2952799065 = null;
          res_2952799065 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799065.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952799065.id = nimCopy(res_2952799065.id, newId_2046820569(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2952799068 = null;
              res_2952799068 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799068.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799065, res_2952799068);
            Label22: {
              var res_2952799070 = null;
              res_2952799070 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799070.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799065, res_2952799070);
          };
        };
      };
      var node_2952799098 = res_2952799065;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799098, Field1: 1}), NTI2952795110);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2952799102 = computeSymbol_3003201856(ctx_2952790071, node_2952798840, true);
        var oHEX60gensym180_2952799105 = nimCopy(null, sym_2952799102, NTI3087008904);
        if (!isSome_3087009345(oHEX60gensym180_2952799105)) Temporary26 = false; else {          var sym_2952799128 = get_3087009365(oHEX60gensym180_2952799105);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2952799128.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2952799128;
      if (ConstSet184[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2952799133 = Temporary24;
      switch (kind_2952799133) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym181_2952799138 = null;
          Label30: {
            var res_2952799144 = null;
            res_2952799144 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799144.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2952799146 = null;
                res_2952799146 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799146.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799144, res_2952799146);
              Label35: {
                var res_2952799148 = null;
                res_2952799148 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799148.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799144, res_2952799148);
            };
          };
        };
        Temporary28 = res_2952799144;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym191_2952799180 = null;
          Label38: {
            var res_2952799186 = null;
            res_2952799186 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799186.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2952799188 = null;
                res_2952799188 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799188.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799186, res_2952799188);
              Label43: {
                var res_2952799190 = null;
                res_2952799190 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799190.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799186, res_2952799190);
              Label45: {
                var res_2952799192 = null;
                res_2952799192 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799192.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799186, res_2952799192);
            };
          };
        };
        Temporary28 = res_2952799186;
        break;
      case 0:
        var typ_2952799229 = computeType_3003195250(ctx_2952790071, node_2952798840, true);
        if ((typ_2952799229.kind == 0)) {
        Label48: {
          var tmpHEX60gensym204_2952799238 = null;
          Label49: {
            var res_2952799244 = null;
            res_2952799244 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799244.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2952799246 = null;
                res_2952799246 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799246.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799244, res_2952799246);
              Label54: {
                var res_2952799248 = null;
                res_2952799248 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799248.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799244, res_2952799248);
              Label56: {
                var res_2952799250 = null;
                res_2952799250 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799250.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799244, res_2952799250);
            };
          };
        };
        Temporary47 = res_2952799244;
        }
        else {
        if (!((typ_2952799229.kind == 4))) {
        Label58: {
          var tmpHEX60gensym218_2952799295 = null;
          Label59: {
            var res_2952799301 = null;
            res_2952799301 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799301.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2952799303 = null;
                res_2952799303 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799303.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2986344486(res_2952799301, res_2952799303);
          };
        };
        Temporary47 = res_2952799301;
        }
        else {
          Label64: {
            var tmpHEX60gensym225_2952799326 = null;
            Label65: {
              var res_2952799332 = null;
              res_2952799332 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799332.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2952799334 = null;
                  res_2952799334 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2952799334.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2986344486(res_2952799332, res_2952799334);
            };
          };
          var newNode_2952799353 = res_2952799332;
          Label70: {
            var __2952799357 = null;
            var colontmp__2952802717 = [];
            var Temporary71 = typ_2952799229;
            if (ConstSet185[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2952802717 = Temporary71.paramTypes;
            var i_2952802718 = 0;
            var L_2952802719 = (colontmp__2952802717).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2952802718 < L_2952802719)) break Label73;
                  __2952799357 = colontmp__2952802717[chckIndx(i_2952802718, 0, (colontmp__2952802717).length - 1)];
                  Label74: {
                    var tmpHEX60gensym232_2952799362 = null;
                    Label75: {
                      var res_2952799368 = null;
                      res_2952799368 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2952799368.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2986344486(newNode_2952799353, res_2952799368);
                  i_2952802718 = addInt(i_2952802718, 1);
                  if (!(((colontmp__2952802717).length == L_2952802719))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2952799353;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2952798847 = nimCopy(result_2952798847, none_2952799378(), NTI2952795110);
        break BeforeRet;
        break;
      }
      var node_2952799397 = Temporary28;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799397, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym236_2952799405 = null;
        Label78: {
          var res_2952799411 = null;
          res_2952799411 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799411.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2952799413 = null;
              res_2952799413 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799413.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799411, res_2952799413);
            Label83: {
              var res_2952799415 = null;
              res_2952799415 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799415.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799411, res_2952799415);
          };
        };
      };
      var node_2952799443 = res_2952799411;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799443, Field1: 1}), NTI2952795110);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2952798841.kind == 2)) {
      Temporary85 = IdAppendString_2969567243;
      }
      else {
      Temporary85 = IdAdd_2969567235;
      }
      
      var operator_2952799451 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym246_2952799456 = null;
        Label87: {
          var res_2952799462 = null;
          res_2952799462 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799462.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2952799464 = null;
              res_2952799464 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799464.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799464.reff = nimCopy(res_2952799464.reff, operator_2952799451, NTI2046820355);
            };
            add_2986344486(res_2952799462, res_2952799464);
            Label92: {
              var res_2952799467 = null;
              res_2952799467 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799467.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799462, res_2952799467);
            Label94: {
              var res_2952799469 = null;
              res_2952799469 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799469.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799462, res_2952799469);
          };
        };
      };
      var node_2952799506 = res_2952799462;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799506, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym259_2952799514 = null;
        Label97: {
          var res_2952799520 = null;
          res_2952799520 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799520.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2952799522 = null;
              res_2952799522 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799522.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799522.reff = nimCopy(res_2952799522.reff, IdSub_2969567236, NTI2046820355);
            };
            add_2986344486(res_2952799520, res_2952799522);
            Label102: {
              var res_2952799525 = null;
              res_2952799525 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799525.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799520, res_2952799525);
            Label104: {
              var res_2952799527 = null;
              res_2952799527 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799527.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799520, res_2952799527);
          };
        };
      };
      var node_2952799564 = res_2952799520;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799564, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym272_2952799572 = null;
        Label107: {
          var res_2952799578 = null;
          res_2952799578 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799578.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2952799580 = null;
              res_2952799580 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799580.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799580.reff = nimCopy(res_2952799580.reff, IdMul_2969567237, NTI2046820355);
            };
            add_2986344486(res_2952799578, res_2952799580);
            Label112: {
              var res_2952799583 = null;
              res_2952799583 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799583.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799578, res_2952799583);
            Label114: {
              var res_2952799585 = null;
              res_2952799585 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799585.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799578, res_2952799585);
          };
        };
      };
      var node_2952799622 = res_2952799578;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799622, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym285_2952799630 = null;
        Label117: {
          var res_2952799636 = null;
          res_2952799636 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799636.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2952799638 = null;
              res_2952799638 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799638.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799638.reff = nimCopy(res_2952799638.reff, IdDiv_2969567238, NTI2046820355);
            };
            add_2986344486(res_2952799636, res_2952799638);
            Label122: {
              var res_2952799641 = null;
              res_2952799641 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799641.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799636, res_2952799641);
            Label124: {
              var res_2952799643 = null;
              res_2952799643 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799643.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799636, res_2952799643);
          };
        };
      };
      var node_2952799680 = res_2952799636;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799680, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym298_2952799688 = null;
        Label127: {
          var res_2952799694 = null;
          res_2952799694 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799694.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2952799696 = null;
              res_2952799696 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799696.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799696.reff = nimCopy(res_2952799696.reff, IdMod_2969567239, NTI2046820355);
            };
            add_2986344486(res_2952799694, res_2952799696);
            Label132: {
              var res_2952799699 = null;
              res_2952799699 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799699.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799694, res_2952799699);
            Label134: {
              var res_2952799701 = null;
              res_2952799701 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799701.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799694, res_2952799701);
          };
        };
      };
      var node_2952799738 = res_2952799694;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799738, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym311_2952799746 = null;
        Label137: {
          var res_2952799752 = null;
          res_2952799752 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799752.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952799752.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2952799763 = res_2952799752;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799763, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym315_2952799771 = null;
        Label140: {
          var res_2952799777 = null;
          res_2952799777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799777.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2952799779 = null;
              res_2952799779 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799779.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952799777, res_2952799779);
        };
      };
      var node_2952799798 = res_2952799777;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799798, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym322_2952799806 = null;
        Label146: {
          var res_2952799812 = null;
          res_2952799812 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799812.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2952799814 = null;
              res_2952799814 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799814.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799812, res_2952799814);
            Label151: {
              var res_2952799816 = null;
              res_2952799816 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799816.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799812, res_2952799816);
          };
        };
      };
      var node_2952799844 = res_2952799812;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799844, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym332_2952799852 = null;
        Label154: {
          var res_2952799858 = null;
          res_2952799858 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799858.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2952799860 = null;
              res_2952799860 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799860.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799860.reff = nimCopy(res_2952799860.reff, IdEqual_2969567251, NTI2046820355);
            };
            add_2986344486(res_2952799858, res_2952799860);
            Label159: {
              var res_2952799863 = null;
              res_2952799863 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799863.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799858, res_2952799863);
            Label161: {
              var res_2952799865 = null;
              res_2952799865 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799865.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799858, res_2952799865);
          };
        };
      };
      var node_2952799902 = res_2952799858;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799902, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym345_2952799910 = null;
        Label164: {
          var res_2952799916 = null;
          res_2952799916 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799916.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2952799918 = null;
              res_2952799918 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799918.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799918.reff = nimCopy(res_2952799918.reff, IdNotEqual_2969567252, NTI2046820355);
            };
            add_2986344486(res_2952799916, res_2952799918);
            Label169: {
              var res_2952799921 = null;
              res_2952799921 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799921.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799916, res_2952799921);
            Label171: {
              var res_2952799923 = null;
              res_2952799923 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799923.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799916, res_2952799923);
          };
        };
      };
      var node_2952799960 = res_2952799916;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952799960, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym358_2952799968 = null;
        Label174: {
          var res_2952799974 = null;
          res_2952799974 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799974.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2952799976 = null;
              res_2952799976 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799976.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799976.reff = nimCopy(res_2952799976.reff, IdLessEqual_2969567248, NTI2046820355);
            };
            add_2986344486(res_2952799974, res_2952799976);
            Label179: {
              var res_2952799979 = null;
              res_2952799979 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799979.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799974, res_2952799979);
            Label181: {
              var res_2952799981 = null;
              res_2952799981 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799981.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799974, res_2952799981);
          };
        };
      };
      var node_2952800018 = res_2952799974;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800018, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym371_2952800026 = null;
        Label184: {
          var res_2952800032 = null;
          res_2952800032 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800032.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2952800034 = null;
              res_2952800034 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800034.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800034.reff = nimCopy(res_2952800034.reff, IdGreaterEqual_2969567250, NTI2046820355);
            };
            add_2986344486(res_2952800032, res_2952800034);
            Label189: {
              var res_2952800037 = null;
              res_2952800037 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800037.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800032, res_2952800037);
            Label191: {
              var res_2952800039 = null;
              res_2952800039 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800039.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800032, res_2952800039);
          };
        };
      };
      var node_2952800076 = res_2952800032;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800076, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym384_2952800084 = null;
        Label194: {
          var res_2952800090 = null;
          res_2952800090 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800090.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2952800092 = null;
              res_2952800092 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800092.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800092.reff = nimCopy(res_2952800092.reff, IdLess_2969567247, NTI2046820355);
            };
            add_2986344486(res_2952800090, res_2952800092);
            Label199: {
              var res_2952800095 = null;
              res_2952800095 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800095.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800090, res_2952800095);
            Label201: {
              var res_2952800097 = null;
              res_2952800097 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800097.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800090, res_2952800097);
          };
        };
      };
      var node_2952800134 = res_2952800090;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800134, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym397_2952800142 = null;
        Label204: {
          var res_2952800148 = null;
          res_2952800148 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800148.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2952800150 = null;
              res_2952800150 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800150.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800150.reff = nimCopy(res_2952800150.reff, IdGreater_2969567249, NTI2046820355);
            };
            add_2986344486(res_2952800148, res_2952800150);
            Label209: {
              var res_2952800153 = null;
              res_2952800153 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800153.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800148, res_2952800153);
            Label211: {
              var res_2952800155 = null;
              res_2952800155 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800155.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800148, res_2952800155);
          };
        };
      };
      var node_2952800192 = res_2952800148;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800192, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym410_2952800200 = null;
        Label214: {
          var res_2952800206 = null;
          res_2952800206 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800206.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2952800208 = null;
              res_2952800208 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800208.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800208.reff = nimCopy(res_2952800208.reff, IdOrder_2969567255, NTI2046820355);
            };
            add_2986344486(res_2952800206, res_2952800208);
            Label219: {
              var res_2952800211 = null;
              res_2952800211 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800211.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800206, res_2952800211);
            Label221: {
              var res_2952800213 = null;
              res_2952800213 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800213.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800206, res_2952800213);
          };
        };
      };
      var node_2952800250 = res_2952800206;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800250, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym423_2952800258 = null;
        Label224: {
          var res_2952800264 = null;
          res_2952800264 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800264.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2952800266 = null;
              res_2952800266 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800266.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800266.reff = nimCopy(res_2952800266.reff, IdAnd_2969567253, NTI2046820355);
            };
            add_2986344486(res_2952800264, res_2952800266);
            Label229: {
              var res_2952800269 = null;
              res_2952800269 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800269.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800264, res_2952800269);
            Label231: {
              var res_2952800271 = null;
              res_2952800271 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800271.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800264, res_2952800271);
          };
        };
      };
      var node_2952800308 = res_2952800264;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800308, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym436_2952800316 = null;
        Label234: {
          var res_2952800322 = null;
          res_2952800322 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800322.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2952800324 = null;
              res_2952800324 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800324.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800324.reff = nimCopy(res_2952800324.reff, IdOr_2969567254, NTI2046820355);
            };
            add_2986344486(res_2952800322, res_2952800324);
            Label239: {
              var res_2952800327 = null;
              res_2952800327 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800327.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800322, res_2952800327);
            Label241: {
              var res_2952800329 = null;
              res_2952800329 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800329.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800322, res_2952800329);
          };
        };
      };
      var node_2952800366 = res_2952800322;
      result_2952798847 = nimCopy(result_2952798847, some_2952798877({Field0: node_2952800366, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    default: 
      result_2952798847 = nimCopy(result_2952798847, none_2952799378(), NTI2952795110);
      break BeforeRet;
      break;
    }
  };

  return result_2952798847;

}

function isSome_2952802496(self_2952802498) {
  var result_2952802499 = false;

    result_2952802499 = self_2952802498.has;

  return result_2952802499;

}

function isNone_2952802521(self_2952802523) {
  var result_2952802524 = false;

    result_2952802524 = !(self_2952802523.has);

  return result_2952802524;

}

function get_2952802513(self_2952802515) {
  var result_2952802516 = {Field0: null, Field1: 0};

    if (isNone_2952802521(self_2952802515)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952802516 = self_2952802515.val;

  return result_2952802516;

}

function insertNode_2952796245(document_2952796246, node_2952796247, index_2952796248, newNode_2952796249) {
  var result_2952798609 = ({val: null});

  BeforeRet: {
    var node_2952798610 = node_2952796247;
    var index_2952798611 = index_2952796248;
    if ((node_2952798610 == null)) {
    node_2952798610 = document_2952796246.rootNode;
    index_2952798611 = 0;
    }
    
    document_2952796246.undoOps.push({kind: 2, parent: node_2952798610, idx: index_2952798611, node: newNode_2952796249, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952796246.redoOps = nimCopy(null, [], NTI2952794811);
    insert_2986344502(node_2952798610, newNode_2952796249, index_2952798611);
    handleNodeInserted_2952794676(document_2952796246, newNode_2952796249);
    result_2952798609 = nimCopy(result_2952798609, some_2986344674(newNode_2952796249), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798609;

}

function shouldEditNode_2952800716(doc_2952800717, node_2952800718) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2952800719 = false;

  BeforeRet: {
    if (((node_2952800718.kind == 0) && eqStrings(node_2952800718.text, []))) {
    result_2952800719 = true;
    break BeforeRet;
    }
    
    if (((node_2952800718.kind == 2) && eqStrings(node_2952800718.text, []))) {
    result_2952800719 = true;
    break BeforeRet;
    }
    
    if ((node_2952800718.kind == 4)) {
    var oHEX60gensym519_2952800734 = computeSymbol_3003201856(ctx_2952790071, node_2952800718, true);
    if (!isSome_3087009345(oHEX60gensym519_2952800734)) Temporary2 = false; else {      var symbol_2952800757 = get_3087009365(oHEX60gensym519_2952800734);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2952800757.name, []);    }    result_2952800719 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2952800718.kind == 5)) {
    var oHEX60gensym520_2952800764 = computeSymbol_3003201856(ctx_2952790071, node_2952800718, true);
    if (!isSome_3087009345(oHEX60gensym520_2952800764)) Temporary4 = false; else {      var symbol_2952800787 = get_3087009365(oHEX60gensym520_2952800764);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2952800787.name, []);    }    result_2952800719 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2952800718.kind == 6)) {
    var oHEX60gensym521_2952800794 = computeSymbol_3003201856(ctx_2952790071, node_2952800718, true);
    if (!isSome_3087009345(oHEX60gensym521_2952800794)) Temporary6 = false; else {      var symbol_2952800817 = get_3087009365(oHEX60gensym521_2952800794);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2952800817.name, []);    }    result_2952800719 = Temporary5;
    break BeforeRet;
    }
    
    result_2952800719 = false;
    break BeforeRet;
  };

  return result_2952800719;

}

function formatValue_2952797539(result_2952797541, result_2952797541_Idx, value_2952797542, specifier_2952797543) {
    formatValue_721420459(result_2952797541, result_2952797541_Idx, reprEnum(value_2952797542, NTI3087007753), specifier_2952797543);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2952802822 = 0;
      var last_2952802823 = 0;
      var eolpos_2952802824 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2952802823 < (s_855638695).length) && !((ConstSet187[s_855638695[chckIndx(last_2952802823, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2952802823 = addInt(last_2952802823, 1);
                }
            };
            eolpos_2952802824 = last_2952802823;
            if ((last_2952802823 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2952802823, 0, (s_855638695).length - 1)] == 10)) {
            last_2952802823 = addInt(last_2952802823, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2952802823, 0, (s_855638695).length - 1)] == 13)) {
            last_2952802823 = addInt(last_2952802823, 1);
            if (((last_2952802823 < (s_855638695).length) && (s_855638695[chckIndx(last_2952802823, 0, (s_855638695).length - 1)] == 10))) {
            last_2952802823 = addInt(last_2952802823, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2952802823, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2952802824, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2952802822, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2952802824 == last_2952802823)) {
            break Label2;
            }
            
            first_2952802822 = last_2952802823;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573846(self_2818573847, value_2818573848) {
    if (self_2818573847.singleLine) {
    self_2818573847.lines = nimCopy(null, [nsuReplaceStr(value_2818573848, [10], [])], NTI1560281203);
    if (((self_2818573847.lines).length == 0)) {
    self_2818573847.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573847.tsParser == null))) {
    self_2818573847.currentTree = parseString_2885681211(self_2818573847.tsParser, self_2818573847.lines[chckIndx(0, 0, (self_2818573847.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573847.lines = nimCopy(null, nsuSplitLines(value_2818573848, false), NTI855638530);
      if (((self_2818573847.lines).length == 0)) {
      self_2818573847.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573847.tsParser == null))) {
      self_2818573847.currentTree = parseString_2885681211(self_2818573847.tsParser, value_2818573848, none_2885681218());
      }
      
    }
    
    self_2818573847.version = addInt(self_2818573847.version, 1);
    notifyTextChanged_2818573212(self_2818573847);

  
}

function newTextDocument_2818578645(filename_2818578647, content_2818578648, app_2818578649) {
  var result_2818578650 = null;

    result_2818578650 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2818578654 = result_2818578650;
    self_2818578654.filename = nimCopy(null, filename_2818578647, NTI33554449);
    self_2818578654.currentTree = null;
    self_2818578654.appFile = app_2818578649;
    var _ = initTreesitter_2818578427(self_2818578654);
    var language_2818578655 = getLanguageForFile_2902458372(filename_2818578647);
    if (isSome_2315255872(language_2818578655)) {
    self_2818578654.languageId = nimCopy(null, get_2818578464(language_2818578655), NTI33554449);
    }
    
    contentHEX3D_2818573846(self_2818578654, content_2818578648);

  return result_2818578650;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573887(self_2818573888, value_2818573889) {
    if (self_2818573888.singleLine) {
    self_2818573888.lines = nimCopy(null, [nsuJoinSep(value_2818573889, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818573951 = 0;
        var resultHEX60gensym22_2818573958 = newSeq_503316959(chckRange((value_2818573889).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818573962 = [];
          var i_2952802829 = 0;
          var L_2952802830 = (value_2818573889).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2952802829 < L_2952802830)) break Label4;
                itHEX60gensym22_2818573962 = value_2818573889[chckIndx(i_2952802829, 0, (value_2818573889).length - 1)];
                resultHEX60gensym22_2818573958[chckIndx(iHEX60gensym22_2818573951, 0, (resultHEX60gensym22_2818573958).length - 1)] = nimCopy(null, itHEX60gensym22_2818573962, NTI33554449);
                iHEX60gensym22_2818573951 = addInt(iHEX60gensym22_2818573951, 1);
                i_2952802829 = addInt(i_2952802829, 1);
                if (!(((value_2818573889).length == L_2952802830))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573888.lines = nimCopy(null, resultHEX60gensym22_2818573958, NTI503316776);
    }
    
    if (((self_2818573888.lines).length == 0)) {
    self_2818573888.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818573974 = nsuJoinSep(value_2818573889, [10]);
    if (!((self_2818573888.tsParser == null))) {
    self_2818573888.currentTree = parseString_2885681211(self_2818573888.tsParser, strValue_2818573974, none_2885681218());
    }
    
    self_2818573888.version = addInt(self_2818573888.version, 1);
    notifyTextChanged_2818573212(self_2818573888);

  
}

function createTextEditorInstance_2818591018() {
  var result_2818591019 = null;

  BeforeRet: {
    var editor_2818591024 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2415919597({Field0: 0, Field1: 0}), NTI2415919115)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818591024 = createWithPrototype(editor_text_prototype, editor_2818591024);
    result_2818591019 = editor_2818591024;
    break BeforeRet;
  };

  return result_2818591019;

}

function newEditorId_2415919419() {
  var result_2415919420 = 0;

    result_2415919420 = nextEditorId_2415919418[0];
    nextEditorId_2415919418[0] = addInt(nextEditorId_2415919418[0], 1);

  return result_2415919420;

}

function init_2382364705(self_2382364706) {
    self_2382364706.id = newEditorId_2415919419();
    self_2382364706.renderHeader = true;
    self_2382364706.fillAvailableSpace = true;

  
}

function subscribe_2818591082(event_2818591084, callback_2818591086) {
  var result_2818591087 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818591087 = nimCopy(result_2818591087, newId_2046820569(), NTI2046820355);
    event_2818591084.handlers.push({Field0: nimCopy(null, result_2818591087, NTI2046820355), Field1: callback_2818591086});;

  return result_2818591087;

}

function clampSelection_2818573210(self_2818573211) {
    selectionsHEX3D_2818573049(self_2818573211, clampAndMergeSelections_2818572786(self_2818573211, self_2818573211.selectionsInternal));
    markDirty_2382364710(self_2818573211);

  
}

function handleTextDocumentTextChanged_2818591016(self_2818591017) {
    clampSelection_2818573210(self_2818591017);
    updateSearchResults_2818579851(self_2818591017);
    markDirty_2382364710(self_2818591017);

  
}

function newTextEditor_2818591034(document_2818591035, ed_2818591036) {
    
function HEX3Aanonymous_2818591057(__2818591058) {
        handleTextDocumentTextChanged_2818591016(editor_2818591038);

      
    }

  var result_2818591037 = null;

  BeforeRet: {
    var editor_2818591038 = createTextEditorInstance_2818591018();
    editor_2818591038.document = document_2818591035;
    init_2382364705(editor_2818591038);
    if (((editor_2818591038.document.lines).length == 0)) {
    editor_2818591038.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847761(editor_2818591038, ed_2818591036);
    var _ = subscribe_2818591082(document_2818591035.textChanged, HEX3Aanonymous_2818591057);
    result_2818591037 = editor_2818591038;
    break BeforeRet;
  };

  return result_2818591037;

}

function some_3170894358(val_3170894360) {
  var result_3170894361 = ({val: 0, has: false});

    result_3170894361.has = true;
    result_3170894361.val = val_3170894360;

  return result_3170894361;

}

function handleTextDocumentChanged_2952797522(self_2952797523) {
    updateCompletions_2952792685(self_2952797523);

  
}

function editSymbol_2952797531(self_2952797532, symbol_2952797533) {
    var Temporary1;
    
function HEX3Aanonymous_2952797589(doc_2952797590) {
        handleTextDocumentChanged_2952797522(self_2952797532);

      
    }

    var fmtRes_2952797538 = [mnewString(0)];
    fmtRes_2952797538[0].push.apply(fmtRes_2952797538[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2952797538, 0, symbol_2952797533.name, []);
    fmtRes_2952797538[0].push.apply(fmtRes_2952797538[0], [32,40]);;
    formatValue_2952797539(fmtRes_2952797538, 0, symbol_2952797533.kind, []);
    fmtRes_2952797538[0].push.apply(fmtRes_2952797538[0], [44,32]);;
    formatValue_3019899100(fmtRes_2952797538, 0, symbol_2952797533.id, []);
    fmtRes_2952797538[0].push.apply(fmtRes_2952797538[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797538[0], NTI33554449)]);
    if ((symbol_2952797533.kind == 0)) {
    var fmtRes_2952797560 = [mnewString(0)];
    fmtRes_2952797560[0].push.apply(fmtRes_2952797560[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2952797533;
    if (ConstSet186[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008579(fmtRes_2952797560, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797560[0], NTI33554449)]);
    }
    
    self_2952797532.currentlyEditedNode = null;
    self_2952797532.currentlyEditedSymbol = nimCopy(self_2952797532.currentlyEditedSymbol, symbol_2952797533.id, NTI2046820355);
    self_2952797532.textDocument = newTextDocument_2818578645([], [], false);
    contentHEX3D_2818573887(self_2952797532.textDocument, [nimCopy(null, symbol_2952797533.name, NTI33554449)]);
    self_2952797532.textEditor = newTextEditor_2818591034(self_2952797532.textDocument, self_2952797532.editor);
    setMode_2818583517(self_2952797532.textEditor, [105,110,115,101,114,116]);
    self_2952797532.textEditor.renderHeader = false;
    self_2952797532.textEditor.fillAvailableSpace = false;
    self_2952797532.textEditor.lineNumbers = nimCopy(self_2952797532.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    var _ = subscribe_2818591082(self_2952797532.textDocument.textChanged, HEX3Aanonymous_2952797589);
    updateCompletions_2952792685(self_2952797532);

  
}

function editNode_2952797619(self_2952797620, node_2952797621) {
    
function HEX3Aanonymous_2952797651(doc_2952797652) {
        handleTextDocumentChanged_2952797522(self_2952797620);

      
    }

    var fmtRes_2952797626 = [mnewString(0)];
    fmtRes_2952797626[0].push.apply(fmtRes_2952797626[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008579(fmtRes_2952797626, 0, node_2952797621, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797626[0], NTI33554449)]);
    self_2952797620.currentlyEditedNode = node_2952797621;
    self_2952797620.currentlyEditedSymbol = nimCopy(self_2952797620.currentlyEditedSymbol, null_2046820612, NTI2046820355);
    self_2952797620.textDocument = newTextDocument_2818578645([], [], false);
    contentHEX3D_2818573887(self_2952797620.textDocument, nsuSplitLines(node_2952797621.text, false));
    self_2952797620.textEditor = newTextEditor_2818591034(self_2952797620.textDocument, self_2952797620.editor);
    setMode_2818583517(self_2952797620.textEditor, [105,110,115,101,114,116]);
    self_2952797620.textEditor.renderHeader = false;
    self_2952797620.textEditor.fillAvailableSpace = false;
    self_2952797620.textEditor.lineNumbers = nimCopy(self_2952797620.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    var _ = subscribe_2818591082(self_2952797620.textDocument.textChanged, HEX3Aanonymous_2952797651);
    updateCompletions_2952792685(self_2952797620);

  
}

function tryEdit_2952797681(self_2952797682, node_2952797683) {
      var Temporary1;
      var Temporary2;

  var result_2952797684 = false;

  BeforeRet: {
      var oHEX60gensym116_2952797687 = getSymbol_3003185027(ctx_2952790071, node_2952797683.id);
      if (!isSome_3087009345(oHEX60gensym116_2952797687)) Temporary1 = false; else {        var sym_2952797710 = get_3087009365(oHEX60gensym116_2952797687);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2952797531(self_2952797682, sym_2952797710);
    result_2952797684 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym117_2952797713 = getSymbol_3003185027(ctx_2952790071, node_2952797683.reff);
      if (!isSome_3087009345(oHEX60gensym117_2952797713)) Temporary2 = false; else {        var sym_2952797736 = get_3087009365(oHEX60gensym117_2952797713);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2952797531(self_2952797682, sym_2952797736);
    result_2952797684 = true;
    break BeforeRet;
    }
    else {
      switch (node_2952797683.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2952797619(self_2952797682, node_2952797683);
        result_2952797684 = true;
        break BeforeRet;
        break;
      default: 
        result_2952797684 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2952797684;

}

function insertAfterSmart_2952802483(self_2952802484, nodeTemplate_2952802485) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2952802565(n_2952802568) {
        var result_2952802571 = false;

          result_2952802571 = shouldEditNode_2952800716(self_2952802484.document, n_2952802568);

        return result_2952802571;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2952797524(self_2952802484)) {
    break BeforeRet;
    }
    
    var node_2952802486 = node_2952792697(self_2952802484);
    Label1: {
      var next_2952802487 = null;
      if (true) {
      Temporary2 = node_2952802486;
      }
      else {
      Temporary2 = node_2952802486.parent;
      }
      
      var node_2952802654 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2952802654 == null))) break Label4;
            next_2952802487 = node_2952802654;
            if (canInsertInto_2952801064(self_2952802484, next_2952802487.parent)) {
            node_2952802486 = next_2952802487;
            break Label1;
            }
            
            node_2952802654 = node_2952802654.parent;
          }
      };
    };
    var index_2952802488 = index_2986344556(node_2952802486);
      var oHEX60gensym669_2952802491 = createNodeFromAction_2952798837(self_2952802484, nodeTemplate_2952802485, node_2952802486, errorType_3087008120());
      if (!isSome_2952802496(oHEX60gensym669_2952802491)) Temporary5 = false; else {        var newNodeIndex_2952802536 = nimCopy(null, get_2952802513(oHEX60gensym669_2952802491), NTI2952795105);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2952802537 = newNodeIndex_2952802536["Field0"];
    var __2952802538 = newNodeIndex_2952802536["Field1"];
      var oHEX60gensym671_2952802541 = insertNode_2952796245(self_2952802484.document, node_2952802486.parent, addInt(index_2952802488, 1), newNode_2952802537);
      if (!isSome_2986346330(oHEX60gensym671_2952802541)) Temporary6 = false; else {        var node_2952802564 = get_2986346350(oHEX60gensym671_2952802541);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2952793820(self_2952802484, node_2952802564);
    Label7: {
      var __2952802572 = 0;
      var emptyNode_2952802573 = null;
      var colontmp__2952802657 = null;
      colontmp__2952802657 = HEX3Aanonymous_2952802565;
      var i_2952802665 = 0;
      Label8: {
        var __2952802667 = 0;
        var child_2952802668 = null;
        var n_2952802669 = newNode_2952802537;
        var idx_2952802670 = -1;
        var i_2952802671 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2952802670 == -1)) {
              __2952802667 = i_2952802671;
              child_2952802668 = n_2952802669;
              if (colontmp__2952802657(child_2952802668)) {
              __2952802572 = i_2952802665;
              emptyNode_2952802573 = child_2952802668;
              nodeHEX3D_2952793820(self_2952802484, emptyNode_2952802573);
              var _ = tryEdit_2952797681(self_2952802484, node_2952792697(self_2952802484));
              break Label7;
              i_2952802665 = addInt(i_2952802665, 1);
              }
              
              }
              
              if ((addInt(idx_2952802670, 1) < len_2986344536(n_2952802669))) {
              n_2952802669 = HEX5BHEX5D_2986344532(n_2952802669, addInt(idx_2952802670, 1));
              idx_2952802670 = -1;
              }
              else {
                var oHEX60gensym71_2952802673 = next_2986344641(n_2952802669);
                if (!isSome_2986346330(oHEX60gensym71_2952802673)) Temporary13 = false; else {                  var ne_2952802674 = get_2986346350(oHEX60gensym71_2952802673);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2952802669 == newNode_2952802537));                }              if (Temporary12) {
              n_2952802669 = ne_2952802674;
              idx_2952802670 = -1;
              }
              else {
              if (((!((n_2952802669.parent == null)) && !((n_2952802669 == newNode_2952802537))) && !((n_2952802669.parent == newNode_2952802537)))) {
              idx_2952802670 = index_2986344556(n_2952802669);
              n_2952802669 = n_2952802669.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2952802671 = addInt(i_2952802671, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952802578 = [mnewString(0)];
      fmtRes_2952802578[0].push.apply(fmtRes_2952802578[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952802578, 0, newNode_2952802537, []);
      fmtRes_2952802578[0].push.apply(fmtRes_2952802578[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952802578, 0, node_2952792697(self_2952802484).parent, []);
      fmtRes_2952802578[0].push.apply(fmtRes_2952802578[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2952802578, 0, addInt(index_2952802488, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952802578[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2952802479(self_2952802631, nodeTemplate_2952802632) {
    insertAfterSmart_2952802483(self_2952802631, nodeTemplate_2952802632);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2952802479(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2952802838(self_2952802839, nodeTemplate_2952802840) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952802897(n_2952802900) {
        var result_2952802903 = false;

          result_2952802903 = shouldEditNode_2952800716(self_2952802839.document, n_2952802900);

        return result_2952802903;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797524(self_2952802839)) {
    break BeforeRet;
    }
    
    var node_2952802841 = node_2952792697(self_2952802839);
    var index_2952802842 = index_2986344556(node_2952802841);
      var oHEX60gensym682_2952802845 = createNodeFromAction_2952798837(self_2952802839, nodeTemplate_2952802840, node_2952802841, errorType_3087008120());
      if (!isSome_2952802496(oHEX60gensym682_2952802845)) Temporary1 = false; else {        var newNodeIndex_2952802868 = nimCopy(null, get_2952802513(oHEX60gensym682_2952802845), NTI2952795105);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952802869 = newNodeIndex_2952802868["Field0"];
    var __2952802870 = newNodeIndex_2952802868["Field1"];
      var oHEX60gensym683_2952802873 = insertNode_2952796245(self_2952802839.document, node_2952802841.parent, addInt(index_2952802842, 1), newNode_2952802869);
      if (!isSome_2986346330(oHEX60gensym683_2952802873)) Temporary2 = false; else {        var node_2952802896 = get_2986346350(oHEX60gensym683_2952802873);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793820(self_2952802839, node_2952802896);
    Label3: {
      var __2952802904 = 0;
      var emptyNode_2952802905 = null;
      var colontmp__2952802976 = null;
      colontmp__2952802976 = HEX3Aanonymous_2952802897;
      var i_2952802977 = 0;
      Label4: {
        var __2952802979 = 0;
        var child_2952802980 = null;
        var n_2952802981 = newNode_2952802869;
        var idx_2952802982 = -1;
        var i_2952802983 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952802982 == -1)) {
              __2952802979 = i_2952802983;
              child_2952802980 = n_2952802981;
              if (colontmp__2952802976(child_2952802980)) {
              __2952802904 = i_2952802977;
              emptyNode_2952802905 = child_2952802980;
              nodeHEX3D_2952793820(self_2952802839, emptyNode_2952802905);
              var _ = tryEdit_2952797681(self_2952802839, node_2952792697(self_2952802839));
              break Label3;
              i_2952802977 = addInt(i_2952802977, 1);
              }
              
              }
              
              if ((addInt(idx_2952802982, 1) < len_2986344536(n_2952802981))) {
              n_2952802981 = HEX5BHEX5D_2986344532(n_2952802981, addInt(idx_2952802982, 1));
              idx_2952802982 = -1;
              }
              else {
                var oHEX60gensym71_2952802985 = next_2986344641(n_2952802981);
                if (!isSome_2986346330(oHEX60gensym71_2952802985)) Temporary9 = false; else {                  var ne_2952802986 = get_2986346350(oHEX60gensym71_2952802985);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952802981 == newNode_2952802869));                }              if (Temporary8) {
              n_2952802981 = ne_2952802986;
              idx_2952802982 = -1;
              }
              else {
              if (((!((n_2952802981.parent == null)) && !((n_2952802981 == newNode_2952802869))) && !((n_2952802981.parent == newNode_2952802869)))) {
              idx_2952802982 = index_2986344556(n_2952802981);
              n_2952802981 = n_2952802981.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952802983 = addInt(i_2952802983, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952802910 = [mnewString(0)];
      fmtRes_2952802910[0].push.apply(fmtRes_2952802910[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952802910, 0, newNode_2952802869, []);
      fmtRes_2952802910[0].push.apply(fmtRes_2952802910[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952802910, 0, node_2952792697(self_2952802839).parent, []);
      fmtRes_2952802910[0].push.apply(fmtRes_2952802910[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2952802910, 0, addInt(index_2952802842, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952802910[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2952802834(self_2952802954, nodeTemplate_2952802955) {
    insertAfter_2952802838(self_2952802954, nodeTemplate_2952802955);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2952802834(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2952802993(self_2952802994, nodeTemplate_2952802995) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952803051(n_2952803054) {
        var result_2952803057 = false;

          result_2952803057 = shouldEditNode_2952800716(self_2952802994.document, n_2952803054);

        return result_2952803057;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797524(self_2952802994)) {
    break BeforeRet;
    }
    
    var index_2952802996 = index_2986344556(node_2952792697(self_2952802994));
      var oHEX60gensym694_2952802999 = createNodeFromAction_2952798837(self_2952802994, nodeTemplate_2952802995, node_2952792697(self_2952802994), errorType_3087008120());
      if (!isSome_2952802496(oHEX60gensym694_2952802999)) Temporary1 = false; else {        var newNodeIndex_2952803022 = nimCopy(null, get_2952802513(oHEX60gensym694_2952802999), NTI2952795105);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803023 = newNodeIndex_2952803022["Field0"];
    var __2952803024 = newNodeIndex_2952803022["Field1"];
      var oHEX60gensym695_2952803027 = insertNode_2952796245(self_2952802994.document, node_2952792697(self_2952802994).parent, index_2952802996, newNode_2952803023);
      if (!isSome_2986346330(oHEX60gensym695_2952803027)) Temporary2 = false; else {        var node_2952803050 = get_2986346350(oHEX60gensym695_2952803027);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793820(self_2952802994, node_2952803050);
    Label3: {
      var __2952803058 = 0;
      var emptyNode_2952803059 = null;
      var colontmp__2952803130 = null;
      colontmp__2952803130 = HEX3Aanonymous_2952803051;
      var i_2952803131 = 0;
      Label4: {
        var __2952803133 = 0;
        var child_2952803134 = null;
        var n_2952803135 = newNode_2952803023;
        var idx_2952803136 = -1;
        var i_2952803137 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803136 == -1)) {
              __2952803133 = i_2952803137;
              child_2952803134 = n_2952803135;
              if (colontmp__2952803130(child_2952803134)) {
              __2952803058 = i_2952803131;
              emptyNode_2952803059 = child_2952803134;
              nodeHEX3D_2952793820(self_2952802994, emptyNode_2952803059);
              var _ = tryEdit_2952797681(self_2952802994, node_2952792697(self_2952802994));
              break Label3;
              i_2952803131 = addInt(i_2952803131, 1);
              }
              
              }
              
              if ((addInt(idx_2952803136, 1) < len_2986344536(n_2952803135))) {
              n_2952803135 = HEX5BHEX5D_2986344532(n_2952803135, addInt(idx_2952803136, 1));
              idx_2952803136 = -1;
              }
              else {
                var oHEX60gensym71_2952803139 = next_2986344641(n_2952803135);
                if (!isSome_2986346330(oHEX60gensym71_2952803139)) Temporary9 = false; else {                  var ne_2952803140 = get_2986346350(oHEX60gensym71_2952803139);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803135 == newNode_2952803023));                }              if (Temporary8) {
              n_2952803135 = ne_2952803140;
              idx_2952803136 = -1;
              }
              else {
              if (((!((n_2952803135.parent == null)) && !((n_2952803135 == newNode_2952803023))) && !((n_2952803135.parent == newNode_2952803023)))) {
              idx_2952803136 = index_2986344556(n_2952803135);
              n_2952803135 = n_2952803135.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803137 = addInt(i_2952803137, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952803064 = [mnewString(0)];
      fmtRes_2952803064[0].push.apply(fmtRes_2952803064[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952803064, 0, newNode_2952803023, []);
      fmtRes_2952803064[0].push.apply(fmtRes_2952803064[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952803064, 0, node_2952792697(self_2952802994).parent, []);
      fmtRes_2952803064[0].push.apply(fmtRes_2952803064[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2952803064, 0, index_2952802996, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952803064[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2952802989(self_2952803108, nodeTemplate_2952803109) {
    insertBefore_2952802993(self_2952803108, nodeTemplate_2952803109);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2952802989(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2952803147(self_2952803148, nodeTemplate_2952803149) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952803204(n_2952803207) {
        var result_2952803210 = false;

          result_2952803210 = shouldEditNode_2952800716(self_2952803148.document, n_2952803207);

        return result_2952803210;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803148)) {
    break BeforeRet;
    }
    
      var oHEX60gensym706_2952803152 = createNodeFromAction_2952798837(self_2952803148, nodeTemplate_2952803149, node_2952792697(self_2952803148), errorType_3087008120());
      if (!isSome_2952802496(oHEX60gensym706_2952803152)) Temporary1 = false; else {        var newNodeIndex_2952803175 = nimCopy(null, get_2952802513(oHEX60gensym706_2952803152), NTI2952795105);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803176 = newNodeIndex_2952803175["Field0"];
    var __2952803177 = newNodeIndex_2952803175["Field1"];
      var oHEX60gensym707_2952803180 = insertNode_2952796245(self_2952803148.document, node_2952792697(self_2952803148), len_2986344536(node_2952792697(self_2952803148)), newNode_2952803176);
      if (!isSome_2986346330(oHEX60gensym707_2952803180)) Temporary2 = false; else {        var node_2952803203 = get_2986346350(oHEX60gensym707_2952803180);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793820(self_2952803148, node_2952803203);
    Label3: {
      var __2952803211 = 0;
      var emptyNode_2952803212 = null;
      var colontmp__2952803283 = null;
      colontmp__2952803283 = HEX3Aanonymous_2952803204;
      var i_2952803284 = 0;
      Label4: {
        var __2952803286 = 0;
        var child_2952803287 = null;
        var n_2952803288 = newNode_2952803176;
        var idx_2952803289 = -1;
        var i_2952803290 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803289 == -1)) {
              __2952803286 = i_2952803290;
              child_2952803287 = n_2952803288;
              if (colontmp__2952803283(child_2952803287)) {
              __2952803211 = i_2952803284;
              emptyNode_2952803212 = child_2952803287;
              nodeHEX3D_2952793820(self_2952803148, emptyNode_2952803212);
              var _ = tryEdit_2952797681(self_2952803148, node_2952792697(self_2952803148));
              break Label3;
              i_2952803284 = addInt(i_2952803284, 1);
              }
              
              }
              
              if ((addInt(idx_2952803289, 1) < len_2986344536(n_2952803288))) {
              n_2952803288 = HEX5BHEX5D_2986344532(n_2952803288, addInt(idx_2952803289, 1));
              idx_2952803289 = -1;
              }
              else {
                var oHEX60gensym71_2952803292 = next_2986344641(n_2952803288);
                if (!isSome_2986346330(oHEX60gensym71_2952803292)) Temporary9 = false; else {                  var ne_2952803293 = get_2986346350(oHEX60gensym71_2952803292);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803288 == newNode_2952803176));                }              if (Temporary8) {
              n_2952803288 = ne_2952803293;
              idx_2952803289 = -1;
              }
              else {
              if (((!((n_2952803288.parent == null)) && !((n_2952803288 == newNode_2952803176))) && !((n_2952803288.parent == newNode_2952803176)))) {
              idx_2952803289 = index_2986344556(n_2952803288);
              n_2952803288 = n_2952803288.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803290 = addInt(i_2952803290, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952803217 = [mnewString(0)];
      fmtRes_2952803217[0].push.apply(fmtRes_2952803217[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952803217, 0, newNode_2952803176, []);
      fmtRes_2952803217[0].push.apply(fmtRes_2952803217[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952803217, 0, node_2952792697(self_2952803148), []);
      fmtRes_2952803217[0].push.apply(fmtRes_2952803217[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2952803217, 0, len_2986344536(node_2952792697(self_2952803148)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952803217[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2952803143(self_2952803261, nodeTemplate_2952803262) {
    insertChild_2952803147(self_2952803261, nodeTemplate_2952803262);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2952803143(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2952803300(self_2952803301, nodeTemplate_2952803302) {
      var Temporary1;
      
function HEX3Aanonymous_2952803331(n_2952803334) {
        var result_2952803337 = false;

          result_2952803337 = shouldEditNode_2952800716(self_2952803301.document, n_2952803334);

        return result_2952803337;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803301)) {
    break BeforeRet;
    }
    
      var oHEX60gensym718_2952803305 = createNodeFromAction_2952798837(self_2952803301, nodeTemplate_2952803302, node_2952792697(self_2952803301), errorType_3087008120());
      if (!isSome_2952802496(oHEX60gensym718_2952803305)) Temporary1 = false; else {        var newNodeIndex_2952803328 = nimCopy(null, get_2952802513(oHEX60gensym718_2952803305), NTI2952795105);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803329 = newNodeIndex_2952803328["Field0"];
    var __2952803330 = newNodeIndex_2952803328["Field1"];
    nodeHEX3D_2952793820(self_2952803301, replaceNode_2952798518(self_2952803301.document, node_2952792697(self_2952803301), newNode_2952803329));
    Label2: {
      var __2952803338 = 0;
      var emptyNode_2952803339 = null;
      var colontmp__2952803390 = null;
      colontmp__2952803390 = HEX3Aanonymous_2952803331;
      var i_2952803391 = 0;
      Label3: {
        var __2952803393 = 0;
        var child_2952803394 = null;
        var n_2952803395 = newNode_2952803329;
        var idx_2952803396 = -1;
        var i_2952803397 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2952803396 == -1)) {
              __2952803393 = i_2952803397;
              child_2952803394 = n_2952803395;
              if (colontmp__2952803390(child_2952803394)) {
              __2952803338 = i_2952803391;
              emptyNode_2952803339 = child_2952803394;
              nodeHEX3D_2952793820(self_2952803301, emptyNode_2952803339);
              var _ = tryEdit_2952797681(self_2952803301, node_2952792697(self_2952803301));
              break Label2;
              i_2952803391 = addInt(i_2952803391, 1);
              }
              
              }
              
              if ((addInt(idx_2952803396, 1) < len_2986344536(n_2952803395))) {
              n_2952803395 = HEX5BHEX5D_2986344532(n_2952803395, addInt(idx_2952803396, 1));
              idx_2952803396 = -1;
              }
              else {
                var oHEX60gensym71_2952803399 = next_2986344641(n_2952803395);
                if (!isSome_2986346330(oHEX60gensym71_2952803399)) Temporary8 = false; else {                  var ne_2952803400 = get_2986346350(oHEX60gensym71_2952803399);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2952803395 == newNode_2952803329));                }              if (Temporary7) {
              n_2952803395 = ne_2952803400;
              idx_2952803396 = -1;
              }
              else {
              if (((!((n_2952803395.parent == null)) && !((n_2952803395 == newNode_2952803329))) && !((n_2952803395.parent == newNode_2952803329)))) {
              idx_2952803396 = index_2986344556(n_2952803395);
              n_2952803395 = n_2952803395.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2952803397 = addInt(i_2952803397, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2952803296(self_2952803368, nodeTemplate_2952803369) {
    replace_2952803300(self_2952803368, nodeTemplate_2952803369);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2952803296(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2952803407(self_2952803408, nodeTemplate_2952803409) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2952803442(n_2952803445) {
        var result_2952803448 = false;

          result_2952803448 = shouldEditNode_2952800716(self_2952803408.document, n_2952803445);

        return result_2952803448;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803408)) {
    break BeforeRet;
    }
    
      if (!(node_2952792697(self_2952803408).kind == 0)) Temporary1 = false; else {        var oHEX60gensym728_2952803416 = createNodeFromAction_2952798837(self_2952803408, nodeTemplate_2952803409, node_2952792697(self_2952803408), errorType_3087008120());
        if (!isSome_2952802496(oHEX60gensym728_2952803416)) Temporary2 = false; else {          var newNodeIndex_2952803439 = nimCopy(null, get_2952802513(oHEX60gensym728_2952803416), NTI2952795105);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2952803440 = newNodeIndex_2952803439["Field0"];
    var __2952803441 = newNodeIndex_2952803439["Field1"];
    nodeHEX3D_2952793820(self_2952803408, replaceNode_2952798518(self_2952803408.document, node_2952792697(self_2952803408), newNode_2952803440));
    Label3: {
      var __2952803449 = 0;
      var emptyNode_2952803450 = null;
      var colontmp__2952803501 = null;
      colontmp__2952803501 = HEX3Aanonymous_2952803442;
      var i_2952803502 = 0;
      Label4: {
        var __2952803504 = 0;
        var child_2952803505 = null;
        var n_2952803506 = newNode_2952803440;
        var idx_2952803507 = -1;
        var i_2952803508 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803507 == -1)) {
              __2952803504 = i_2952803508;
              child_2952803505 = n_2952803506;
              if (colontmp__2952803501(child_2952803505)) {
              __2952803449 = i_2952803502;
              emptyNode_2952803450 = child_2952803505;
              nodeHEX3D_2952793820(self_2952803408, emptyNode_2952803450);
              var _ = tryEdit_2952797681(self_2952803408, node_2952792697(self_2952803408));
              break Label3;
              i_2952803502 = addInt(i_2952803502, 1);
              }
              
              }
              
              if ((addInt(idx_2952803507, 1) < len_2986344536(n_2952803506))) {
              n_2952803506 = HEX5BHEX5D_2986344532(n_2952803506, addInt(idx_2952803507, 1));
              idx_2952803507 = -1;
              }
              else {
                var oHEX60gensym71_2952803510 = next_2986344641(n_2952803506);
                if (!isSome_2986346330(oHEX60gensym71_2952803510)) Temporary9 = false; else {                  var ne_2952803511 = get_2986346350(oHEX60gensym71_2952803510);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803506 == newNode_2952803440));                }              if (Temporary8) {
              n_2952803506 = ne_2952803511;
              idx_2952803507 = -1;
              }
              else {
              if (((!((n_2952803506.parent == null)) && !((n_2952803506 == newNode_2952803440))) && !((n_2952803506.parent == newNode_2952803440)))) {
              idx_2952803507 = index_2986344556(n_2952803506);
              n_2952803506 = n_2952803506.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803508 = addInt(i_2952803508, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2952803403(self_2952803479, nodeTemplate_2952803480) {
    replaceEmpty_2952803407(self_2952803479, nodeTemplate_2952803480);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2952803403(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2952803518(self_2952803519) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952803519)) {
    break BeforeRet;
    }
    
    var node_2952803520 = node_2952792697(self_2952803519);
    if (((node_2952803520.parent == null) || (node_2952803520.parent == self_2952803519.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2952803529 = node_2952803520.parent;
    var _ = deleteNode_2952798582(self_2952803519.document, node_2952792697(self_2952803519));
    nodeHEX3D_2952793820(self_2952803519, replaceNode_2952798518(self_2952803519.document, parent_2952803529, node_2952803520));
  };

  
}

function replaceParentJsWrapper_2952803514(self_2952803557) {
    replaceParent_2952803518(self_2952803557);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2952803514(this));};

function wrap_2952803578(self_2952803579, nodeTemplate_2952803580) {
      var Temporary1;
      
function HEX3Aanonymous_2952803611(n_2952803614) {
        var result_2952803617 = false;

          result_2952803617 = (n_2952803614.kind == 0);

        return result_2952803617;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2952803624(n_2952803627) {
        var result_2952803630 = false;

          result_2952803630 = shouldEditNode_2952800716(self_2952803579.document, n_2952803627);

        return result_2952803630;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803579)) {
    break BeforeRet;
    }
    
    var typ_2952803581 = computeType_3003195250(ctx_2952790071, node_2952792697(self_2952803579), true);
      var oHEX60gensym746_2952803584 = createNodeFromAction_2952798837(self_2952803579, nodeTemplate_2952803580, node_2952792697(self_2952803579), typ_2952803581);
      if (!isSome_2952802496(oHEX60gensym746_2952803584)) Temporary1 = false; else {        var newNodeIndex_2952803607 = nimCopy(null, get_2952802513(oHEX60gensym746_2952803584), NTI2952795105);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803608 = newNodeIndex_2952803607["Field0"];
    var index_2952803609 = newNodeIndex_2952803607["Field1"];
    var oldNode_2952803610 = node_2952792697(self_2952803579);
    nodeHEX3D_2952793820(self_2952803579, replaceNode_2952798518(self_2952803579.document, node_2952792697(self_2952803579), newNode_2952803608));
    Label2: {
      var i_2952803622 = 0;
      var emptyNode_2952803623 = null;
      var colontmp__2952803692 = null;
      colontmp__2952803692 = HEX3Aanonymous_2952803611;
      var i_2952803693 = 0;
      Label3: {
        var __2952803695 = 0;
        var child_2952803696 = null;
        var n_2952803697 = newNode_2952803608;
        var idx_2952803698 = -1;
        var i_2952803699 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2952803698 == -1)) {
              __2952803695 = i_2952803699;
              child_2952803696 = n_2952803697;
              if (colontmp__2952803692(child_2952803696)) {
              i_2952803622 = i_2952803693;
              emptyNode_2952803623 = child_2952803696;
              if ((i_2952803622 == index_2952803609)) {
              nodeHEX3D_2952793820(self_2952803579, replaceNode_2952798518(self_2952803579.document, emptyNode_2952803623, oldNode_2952803610));
              break Label2;
              }
              
              i_2952803693 = addInt(i_2952803693, 1);
              }
              
              }
              
              if ((addInt(idx_2952803698, 1) < len_2986344536(n_2952803697))) {
              n_2952803697 = HEX5BHEX5D_2986344532(n_2952803697, addInt(idx_2952803698, 1));
              idx_2952803698 = -1;
              }
              else {
                var oHEX60gensym71_2952803701 = next_2986344641(n_2952803697);
                if (!isSome_2986346330(oHEX60gensym71_2952803701)) Temporary8 = false; else {                  var ne_2952803702 = get_2986346350(oHEX60gensym71_2952803701);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2952803697 == newNode_2952803608));                }              if (Temporary7) {
              n_2952803697 = ne_2952803702;
              idx_2952803698 = -1;
              }
              else {
              if (((!((n_2952803697.parent == null)) && !((n_2952803697 == newNode_2952803608))) && !((n_2952803697.parent == newNode_2952803608)))) {
              idx_2952803698 = index_2986344556(n_2952803697);
              n_2952803697 = n_2952803697.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2952803699 = addInt(i_2952803699, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2952803631 = 0;
      var emptyNode_2952803632 = null;
      var colontmp__2952803704 = null;
      colontmp__2952803704 = HEX3Aanonymous_2952803624;
      var i_2952803705 = 0;
      Label10: {
        var __2952803707 = 0;
        var child_2952803708 = null;
        var n_2952803709 = newNode_2952803608;
        var idx_2952803710 = -1;
        var i_2952803711 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2952803710 == -1)) {
              __2952803707 = i_2952803711;
              child_2952803708 = n_2952803709;
              if (colontmp__2952803704(child_2952803708)) {
              __2952803631 = i_2952803705;
              emptyNode_2952803632 = child_2952803708;
              nodeHEX3D_2952793820(self_2952803579, emptyNode_2952803632);
              var _ = tryEdit_2952797681(self_2952803579, node_2952792697(self_2952803579));
              break Label9;
              i_2952803705 = addInt(i_2952803705, 1);
              }
              
              }
              
              if ((addInt(idx_2952803710, 1) < len_2986344536(n_2952803709))) {
              n_2952803709 = HEX5BHEX5D_2986344532(n_2952803709, addInt(idx_2952803710, 1));
              idx_2952803710 = -1;
              }
              else {
                var oHEX60gensym71_2952803713 = next_2986344641(n_2952803709);
                if (!isSome_2986346330(oHEX60gensym71_2952803713)) Temporary15 = false; else {                  var ne_2952803714 = get_2986346350(oHEX60gensym71_2952803713);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2952803709 == newNode_2952803608));                }              if (Temporary14) {
              n_2952803709 = ne_2952803714;
              idx_2952803710 = -1;
              }
              else {
              if (((!((n_2952803709.parent == null)) && !((n_2952803709 == newNode_2952803608))) && !((n_2952803709.parent == newNode_2952803608)))) {
              idx_2952803710 = index_2986344556(n_2952803709);
              n_2952803709 = n_2952803709.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2952803711 = addInt(i_2952803711, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2952803574(self_2952803670, nodeTemplate_2952803671) {
    wrap_2952803578(self_2952803670, nodeTemplate_2952803671);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2952803574(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2952803721(self_2952803722) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803722)) {
    break BeforeRet;
    }
    
    var current_2952803723 = node_2952792697(self_2952803722);
    Label1: {
      var emptyNode_2952803724 = null;
      var colontmp__2952803772 = null;
      colontmp__2952803772 = node_2952792697(self_2952803722);
      var idx_2952803773 = 0;
      var n_2952803774 = colontmp__2952803772;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952803774 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952803774), 1)), subInt(idx_2952803773, 1))) {
            n_2952803774 = HEX5BHEX5D_2986344532(n_2952803774, subInt(idx_2952803773, 1));
            idx_2952803773 = len_2986344536(n_2952803774);
            }
            else {
              var oHEX60gensym90_2952803776 = prev_2986344687(n_2952803774);
              if (!isSome_2986346330(oHEX60gensym90_2952803776)) Temporary4 = false; else {                var ne_2952803777 = get_2986346350(oHEX60gensym90_2952803776);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2952803724 = n_2952803774;
            if ((!((emptyNode_2952803724 == current_2952803723)) && shouldEditNode_2952800716(self_2952803722.document, emptyNode_2952803724))) {
            nodeHEX3D_2952793820(self_2952803722, emptyNode_2952803724);
            var _ = tryEdit_2952797681(self_2952803722, node_2952792697(self_2952803722));
            break Label1;
            }
            
            n_2952803774 = ne_2952803777;
            idx_2952803773 = len_2986344536(n_2952803774);
            }
            else {
              emptyNode_2952803724 = n_2952803774;
              if ((!((emptyNode_2952803724 == current_2952803723)) && shouldEditNode_2952800716(self_2952803722.document, emptyNode_2952803724))) {
              nodeHEX3D_2952793820(self_2952803722, emptyNode_2952803724);
              var _ = tryEdit_2952797681(self_2952803722, node_2952792697(self_2952803722));
              break Label1;
              }
              
              idx_2952803773 = index_2986344556(n_2952803774);
              n_2952803774 = n_2952803774.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2952803717(self_2952803756) {
    editPrevEmpty_2952803721(self_2952803756);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2952803717(this));};

function editNextEmpty_2952803784(self_2952803785) {
      
function HEX3Aanonymous_2952803787(n_2952803790) {
        var result_2952803793 = false;

          result_2952803793 = (!((n_2952803790 == current_2952803786)) && shouldEditNode_2952800716(self_2952803785.document, n_2952803790));

        return result_2952803793;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2952797524(self_2952803785)) {
    break BeforeRet;
    }
    
    var current_2952803786 = node_2952792697(self_2952803785);
    Label1: {
      var __2952803798 = 0;
      var emptyNode_2952803799 = null;
      var colontmp__2952803843 = null;
      var colontmp__2952803844 = null;
      colontmp__2952803843 = node_2952792697(self_2952803785);
      colontmp__2952803844 = HEX3Aanonymous_2952803787;
      var i_2952803845 = 0;
      Label2: {
        var __2952803847 = 0;
        var child_2952803848 = null;
        var n_2952803849 = colontmp__2952803843;
        var idx_2952803850 = -1;
        var i_2952803851 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2952803850 == -1)) {
              __2952803847 = i_2952803851;
              child_2952803848 = n_2952803849;
              if (colontmp__2952803844(child_2952803848)) {
              __2952803798 = i_2952803845;
              emptyNode_2952803799 = child_2952803848;
              nodeHEX3D_2952793820(self_2952803785, emptyNode_2952803799);
              var _ = tryEdit_2952797681(self_2952803785, node_2952792697(self_2952803785));
              break Label1;
              i_2952803845 = addInt(i_2952803845, 1);
              }
              
              }
              
              if ((addInt(idx_2952803850, 1) < len_2986344536(n_2952803849))) {
              n_2952803849 = HEX5BHEX5D_2986344532(n_2952803849, addInt(idx_2952803850, 1));
              idx_2952803850 = -1;
              }
              else {
                var oHEX60gensym71_2952803853 = next_2986344641(n_2952803849);
                if (!isSome_2986346330(oHEX60gensym71_2952803853)) Temporary7 = false; else {                  var ne_2952803854 = get_2986346350(oHEX60gensym71_2952803853);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2952803849 == null));                }              if (Temporary6) {
              n_2952803849 = ne_2952803854;
              idx_2952803850 = -1;
              }
              else {
              if (((!((n_2952803849.parent == null)) && !((n_2952803849 == null))) && !((n_2952803849.parent == null)))) {
              idx_2952803850 = index_2986344556(n_2952803849);
              n_2952803849 = n_2952803849.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2952803851 = addInt(i_2952803851, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2952803780(self_2952803827) {
    editNextEmpty_2952803784(self_2952803827);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2952803780(this));};

function rename_2952803861(self_2952803862) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952803862)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2952797681(self_2952803862, node_2952792697(self_2952803862));
  };

  
}

function renameJsWrapper_2952803857(self_2952803890) {
    rename_2952803861(self_2952803890);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2952803857(this));};

function selectPrevCompletion_2952803911(self_2952803912) {
    if ((0 < (self_2952803912.completions).length)) {
    self_2952803912.selectedCompletion = clamp_1660945119(subInt(self_2952803912.selectedCompletion, 1), 0, subInt((self_2952803912.completions).length, 1));
    }
    else {
      self_2952803912.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2952803907(self_2952803951) {
    selectPrevCompletion_2952803911(self_2952803951);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2952803907(this));};

function selectNextCompletion_2952803972(editor_2952803973) {
    if ((0 < (editor_2952803973.completions).length)) {
    editor_2952803973.selectedCompletion = clamp_1660945119(addInt(editor_2952803973.selectedCompletion, 1), 0, subInt((editor_2952803973.completions).length, 1));
    }
    else {
      editor_2952803973.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2952803968(editor_2952804012) {
    selectNextCompletion_2952803972(editor_2952804012);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2952803968(editor_));};

function createDefaultNode_2952800372(editor_2952800373, kind_2952800374) {
  var result_2952800376 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2952800374) {
    case 0:
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: {kind: 0, id: newId_2046820569(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 1:
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 2:
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 3:
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym449_2952800393 = null;
        Label2: {
          var res_2952800399 = null;
          res_2952800399 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800399.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800399.id = nimCopy(res_2952800399.id, newId_2046820569(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2952800402 = null;
              res_2952800402 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800402.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952800399, res_2952800402);
        };
      };
      var node_2952800421 = res_2952800399;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800421, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym456_2952800429 = null;
        Label8: {
          var res_2952800435 = null;
          res_2952800435 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800435.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800435.id = nimCopy(res_2952800435.id, newId_2046820569(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2952800438 = null;
              res_2952800438 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800438.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800435, res_2952800438);
            Label13: {
              var res_2952800440 = null;
              res_2952800440 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800440.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800435, res_2952800440);
          };
        };
      };
      var node_2952800468 = res_2952800435;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800468, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym466_2952800476 = null;
        Label16: {
          var res_2952800482 = null;
          res_2952800482 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800482.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800482.id = nimCopy(res_2952800482.id, newId_2046820569(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2952800485 = null;
              res_2952800485 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800485.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800482, res_2952800485);
            Label21: {
              var res_2952800487 = null;
              res_2952800487 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800487.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800482, res_2952800487);
          };
        };
      };
      var node_2952800515 = res_2952800482;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800515, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym476_2952800523 = null;
        Label24: {
          var res_2952800529 = null;
          res_2952800529 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800529.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2952800531 = null;
              res_2952800531 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800531.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800529, res_2952800531);
            Label29: {
              var res_2952800533 = null;
              res_2952800533 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800533.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800529, res_2952800533);
            Label31: {
              var res_2952800535 = null;
              res_2952800535 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800535.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2952800537 = null;
                  res_2952800537 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2952800537.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2986344486(res_2952800535, res_2952800537);
            };
            add_2986344486(res_2952800529, res_2952800535);
          };
        };
      };
      var node_2952800583 = res_2952800529;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800583, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym492_2952800591 = null;
        Label37: {
          var res_2952800597 = null;
          res_2952800597 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800597.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2952800599 = null;
              res_2952800599 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800599.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800597, res_2952800599);
            Label42: {
              var res_2952800601 = null;
              res_2952800601 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800601.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800597, res_2952800601);
          };
        };
      };
      var node_2952800629 = res_2952800597;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800629, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym502_2952800637 = null;
        Label45: {
          var res_2952800643 = null;
          res_2952800643 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800643.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2952800645 = null;
              res_2952800645 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800645.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800643, res_2952800645);
            Label50: {
              var res_2952800647 = null;
              res_2952800647 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800647.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800643, res_2952800647);
          };
        };
      };
      var node_2952800675 = res_2952800643;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800675, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym512_2952800683 = null;
        Label53: {
          var res_2952800689 = null;
          res_2952800689 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800689.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2952800691 = null;
              res_2952800691 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800691.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952800689, res_2952800691);
        };
      };
      var node_2952800710 = res_2952800689;
      result_2952800376 = nimCopy(result_2952800376, some_2952798877({Field0: node_2952800710, Field1: 0}), NTI2952795110);
      break BeforeRet;
      break;
    default: 
      result_2952800376 = nimCopy(result_2952800376, none_2952799378(), NTI2952795110);
      break BeforeRet;
      break;
    }
  };

  return result_2952800376;

}

function applySelectedCompletion_2952804033(editor_2952804034) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2952804139(n_2952804142) {
          var result_2952804145 = false;

            result_2952804145 = shouldEditNode_2952800716(editor_2952804034.document, n_2952804142);

          return result_2952804145;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2952804034.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2952804034.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2952804042 = nimCopy(null, editor_2952804034.completions[chckIndx(editor_2952804034.selectedCompletion, 0, (editor_2952804034.completions).length - 1)], NTI2952791524);
    var completionText_2952804043 = nimCopy(null, editor_2952804034.completionText, NTI33554449);
    var fmtRes_2952804048 = [mnewString(0)];
    fmtRes_2952804048[0].push.apply(fmtRes_2952804048[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2701131945(fmtRes_2952804048, 0, editor_2952804034.selectedCompletion, []);
    fmtRes_2952804048[0].push.apply(fmtRes_2952804048[0], [32,40]);;
    formatValue_721420459(fmtRes_2952804048, 0, completionText_2952804043, []);
    fmtRes_2952804048[0].push.apply(fmtRes_2952804048[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952804048[0], NTI33554449)]);
    finishEdit_2952797950(editor_2952804034, false);
    switch (com_2952804042.kind) {
    case 0:
        var Temporary2 = com_2952804042;
        if (ConstSet188[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952791523)); }
        var oHEX60gensym800_2952804056 = getSymbol_3003185027(ctx_2952790071, Temporary2.id);
        if (!isSome_3087009345(oHEX60gensym800_2952804056)) Temporary1 = false; else {          var symbol_2952804079 = get_3087009365(oHEX60gensym800_2952804056);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2952793820(editor_2952804034, replaceNode_2952798518(editor_2952804034.document, node_2952792697(editor_2952804034), {kind: 1, reff: nimCopy(null, symbol_2952804079.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2952804042;
        if (ConstSet189[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952791523)); }
        var oHEX60gensym801_2952804082 = createDefaultNode_2952800372(editor_2952804034, Temporary4.nodeKind);
        if (!isSome_2952802496(oHEX60gensym801_2952804082)) Temporary3 = false; else {          var nodeIndex_2952804105 = nimCopy(null, get_2952802513(oHEX60gensym801_2952804082), NTI2952795105);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2952804106 = nodeIndex_2952804105["Field0"];
      var __2952804107 = nodeIndex_2952804105["Field1"];
      var _ = replaceNode_2952798518(editor_2952804034.document, node_2952792697(editor_2952804034), newNode_2952804106);
      if ((newNode_2952804106.kind == 2)) {
      newNode_2952804106.text = nimCopy(null, completionText_2952804043, NTI33554449);
      updateNode_3003234352(ctx_2952790071, newNode_2952804106);
      }
      else {
      if ((newNode_2952804106.kind == 3)) {
      if (!((completionText_2952804043[chckIndx(0, 0, (completionText_2952804043).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,48,56,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2952804106.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2952804043, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3003234352(ctx_2952790071, newNode_2952804106);
      }
      }
      nodeHEX3D_2952793820(editor_2952804034, newNode_2952804106);
      Label5: {
        var __2952804146 = 0;
        var emptyNode_2952804147 = null;
        var colontmp__2952804191 = null;
        colontmp__2952804191 = HEX3Aanonymous_2952804139;
        var i_2952804192 = 0;
        Label6: {
          var __2952804194 = 0;
          var child_2952804195 = null;
          var n_2952804196 = newNode_2952804106;
          var idx_2952804197 = -1;
          var i_2952804198 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2952804197 == -1)) {
                __2952804194 = i_2952804198;
                child_2952804195 = n_2952804196;
                if (colontmp__2952804191(child_2952804195)) {
                __2952804146 = i_2952804192;
                emptyNode_2952804147 = child_2952804195;
                nodeHEX3D_2952793820(editor_2952804034, emptyNode_2952804147);
                var _ = tryEdit_2952797681(editor_2952804034, node_2952792697(editor_2952804034));
                break Label5;
                i_2952804192 = addInt(i_2952804192, 1);
                }
                
                }
                
                if ((addInt(idx_2952804197, 1) < len_2986344536(n_2952804196))) {
                n_2952804196 = HEX5BHEX5D_2986344532(n_2952804196, addInt(idx_2952804197, 1));
                idx_2952804197 = -1;
                }
                else {
                  var oHEX60gensym71_2952804200 = next_2986344641(n_2952804196);
                  if (!isSome_2986346330(oHEX60gensym71_2952804200)) Temporary11 = false; else {                    var ne_2952804201 = get_2986346350(oHEX60gensym71_2952804200);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2952804196 == newNode_2952804106));                  }                if (Temporary10) {
                n_2952804196 = ne_2952804201;
                idx_2952804197 = -1;
                }
                else {
                if (((!((n_2952804196.parent == null)) && !((n_2952804196 == newNode_2952804106))) && !((n_2952804196.parent == newNode_2952804106)))) {
                idx_2952804197 = index_2986344556(n_2952804196);
                n_2952804196 = n_2952804196.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2952804198 = addInt(i_2952804198, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2952804029(editor_2952804175) {
    applySelectedCompletion_2952804033(editor_2952804175);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2952804029(editor_));};

function cancelAndNextCompletion_2952804244(self_2952804245) {
    finishEdit_2952797950(self_2952804245, false);
    editNextEmpty_2952803784(self_2952804245);

  
}

function cancelAndNextCompletionJsWrapper_2952804240(self_2952804273) {
    cancelAndNextCompletion_2952804244(self_2952804273);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2952804240(this));};

function cancelAndPrevCompletion_2952804294(self_2952804295) {
    finishEdit_2952797950(self_2952804295, false);
    editPrevEmpty_2952803721(self_2952804295);

  
}

function cancelAndPrevCompletionJsWrapper_2952804290(self_2952804323) {
    cancelAndPrevCompletion_2952804294(self_2952804323);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2952804290(this));};

function cancelAndDelete_2952804344(self_2952804345) {
    finishEdit_2952797950(self_2952804345, false);
    self_2952804345.deletedNode = nimCopy(self_2952804345.deletedNode, some_2986344674(node_2952792697(self_2952804345)), NTI2986344567);
    nodeHEX3D_2952793820(self_2952804345, deleteNode_2952798582(self_2952804345.document, node_2952792697(self_2952804345)));

  
}

function cancelAndDeleteJsWrapper_2952804340(self_2952804376) {
    cancelAndDelete_2952804344(self_2952804376);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2952804340(this));};

function none_2986344626() {
  var result_2986344633 = ({val: 0, has: false});

  return result_2986344633;

}

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function index_2986344618(node_2986344619, parent_2986344620) {
  var result_2986344622 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2986344619.parent == null)) {
    result_2986344622 = nimCopy(result_2986344622, none_2986344626(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_2986344619.parent == parent_2986344620)) {
    result_2986344622 = nimCopy(result_2986344622, some_1191184367(index_2986344556(node_2986344619)), NTI1191183280);
    break BeforeRet;
    }
    
    result_2986344622 = nimCopy(result_2986344622, index_2986344618(node_2986344619.parent, parent_2986344620), NTI1191183280);
    break BeforeRet;
  };

  return result_2986344622;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2952804397(self_2952804398) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2952804399 = isEditing_2952797524(self_2952804398);
    finishEdit_2952797950(self_2952804398, false);
    var targetNode_2952804406 = none_2986344655();
    Label1: {
      var next_2952804407 = null;
      var colontmp__2952804547 = null;
      colontmp__2952804547 = node_2952792697(self_2952804398);
      var idx_2952804548 = 0;
      var n_2952804549 = colontmp__2952804547;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952804549 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952804549), 1)), subInt(idx_2952804548, 1))) {
            n_2952804549 = HEX5BHEX5D_2986344532(n_2952804549, subInt(idx_2952804548, 1));
            idx_2952804548 = len_2986344536(n_2952804549);
            }
            else {
              var oHEX60gensym90_2952804551 = prev_2986344687(n_2952804549);
              if (!isSome_2986346330(oHEX60gensym90_2952804551)) Temporary4 = false; else {                var ne_2952804552 = get_2986346350(oHEX60gensym90_2952804551);
                Temporary4 = true;              }            if (Temporary4) {
            next_2952804407 = n_2952804549;
            Label5: {
              if ((next_2952804407 == node_2952792697(self_2952804398))) {
              break Label5;
              }
              
              if ((canInsertInto_2952801064(self_2952804398, next_2952804407) && (!((next_2952804407 == node_2952792697(self_2952804398).parent)) || (0 < index_2986344556(node_2952792697(self_2952804398)))))) {
              targetNode_2952804406 = nimCopy(targetNode_2952804406, some_2986344674(next_2952804407), NTI2986344588);
              break Label1;
              }
              
            };
            n_2952804549 = ne_2952804552;
            idx_2952804548 = len_2986344536(n_2952804549);
            }
            else {
              next_2952804407 = n_2952804549;
              Label6: {
                if ((next_2952804407 == node_2952792697(self_2952804398))) {
                break Label6;
                }
                
                if ((canInsertInto_2952801064(self_2952804398, next_2952804407) && (!((next_2952804407 == node_2952792697(self_2952804398).parent)) || (0 < index_2986344556(node_2952792697(self_2952804398)))))) {
                targetNode_2952804406 = nimCopy(targetNode_2952804406, some_2986344674(next_2952804407), NTI2986344588);
                break Label1;
                }
                
              };
              idx_2952804548 = index_2986344556(n_2952804549);
              n_2952804549 = n_2952804549.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym840_2952804421 = nimCopy(null, targetNode_2952804406, NTI2986344588);
      if (!isSome_2986346330(oHEX60gensym840_2952804421)) Temporary7 = false; else {        var newParent_2952804444 = get_2986346350(oHEX60gensym840_2952804421);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2952804445 = node_2952792697(self_2952804398);
    if ((nodeToMove_2952804445.parent == newParent_2952804444)) {
    Temporary8 = subInt(index_2986344556(nodeToMove_2952804445), 1);
    }
    else {
      var oHEX60gensym841_2952804452 = index_2986344618(nodeToMove_2952804445, newParent_2952804444);
      if (!isSome_1191185117(oHEX60gensym841_2952804452)) Temporary9 = false; else {        var index_2952804475 = get_1191185211(oHEX60gensym841_2952804452);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2952804475;
    }
    else {
    Temporary8 = len_2986344536(newParent_2952804444);
    }
    }
    var index_2952804476 = Temporary8;
    nodeHEX3D_2952793820(self_2952804398, deleteNode_2952798582(self_2952804398.document, nodeToMove_2952804445));
      var oHEX60gensym842_2952804479 = insertNode_2952796245(self_2952804398.document, newParent_2952804444, index_2952804476, nodeToMove_2952804445);
      if (!isSome_2986346330(oHEX60gensym842_2952804479)) Temporary10 = false; else {        var newNode_2952804502 = get_2986346350(oHEX60gensym842_2952804479);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2952793820(self_2952804398, newNode_2952804502);
    if (wasEditing_2952804399) {
    var _ = tryEdit_2952797681(self_2952804398, node_2952792697(self_2952804398));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2952804393(self_2952804530) {
    moveNodeToPrevSpace_2952804397(self_2952804530);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2952804393(this));};

function moveNodeToNextSpace_2952804559(self_2952804560) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2952804561 = isEditing_2952797524(self_2952804560);
    finishEdit_2952797950(self_2952804560, false);
    var targetNode_2952804568 = none_2986344655();
    Label1: {
      var __2952804569 = 0;
      var next_2952804570 = null;
      var colontmp__2952804710 = null;
      var colontmp__2952804711 = 0;
      colontmp__2952804710 = node_2952792697(self_2952804560).parent;
      colontmp__2952804711 = index_2986344556(node_2952792697(self_2952804560));
      var n_2952804713 = colontmp__2952804710;
      var idx_2952804714 = colontmp__2952804711;
      var i_2952804715 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952804714 == subInt(len_2986344536(n_2952804713), 1))) {
            var colontmp__2952804718 = nimCopy(null, {Field0: i_2952804715, Field1: n_2952804713}, NTI2952792510);
            __2952804569 = colontmp__2952804718["Field0"];
            next_2952804570 = colontmp__2952804718["Field1"];
            Label5: {
              if ((next_2952804570 == node_2952792697(self_2952804560))) {
              break Label5;
              }
              
              if ((canInsertInto_2952801064(self_2952804560, next_2952804570) && (!((next_2952804570 == node_2952792697(self_2952804560).parent)) || (addInt(index_2986344556(node_2952792697(self_2952804560)), 1) < len_2986344536(node_2952792697(self_2952804560).parent))))) {
              targetNode_2952804568 = nimCopy(targetNode_2952804568, some_2986344674(next_2952804570), NTI2986344588);
              break Label1;
              }
              
            };
            if (((!((n_2952804713.parent == null)) && !((n_2952804713 == null))) && !((n_2952804713.parent == null)))) {
            idx_2952804714 = index_2986344556(n_2952804713);
            n_2952804713 = n_2952804713.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2952804714, 1) < len_2986344536(colontmp__2952804710))) {
            n_2952804713 = HEX5BHEX5D_2986344532(n_2952804713, addInt(idx_2952804714, 1));
            idx_2952804714 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2952804715 = addInt(i_2952804715, 1);
            }
          }
      };
    };
      var oHEX60gensym852_2952804584 = nimCopy(null, targetNode_2952804568, NTI2986344588);
      if (!isSome_2986346330(oHEX60gensym852_2952804584)) Temporary6 = false; else {        var newParent_2952804607 = get_2986346350(oHEX60gensym852_2952804584);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2952804608 = node_2952792697(self_2952804560);
    if ((nodeToMove_2952804608.parent == newParent_2952804607)) {
    Temporary7 = addInt(index_2986344556(nodeToMove_2952804608), 1);
    }
    else {
      var oHEX60gensym853_2952804615 = index_2986344618(nodeToMove_2952804608, newParent_2952804607);
      if (!isSome_1191185117(oHEX60gensym853_2952804615)) Temporary8 = false; else {        var index_2952804638 = get_1191185211(oHEX60gensym853_2952804615);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2952804638, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2952804639 = Temporary7;
    nodeHEX3D_2952793820(self_2952804560, deleteNode_2952798582(self_2952804560.document, nodeToMove_2952804608));
      var oHEX60gensym854_2952804642 = insertNode_2952796245(self_2952804560.document, newParent_2952804607, index_2952804639, nodeToMove_2952804608);
      if (!isSome_2986346330(oHEX60gensym854_2952804642)) Temporary9 = false; else {        var newNode_2952804665 = get_2986346350(oHEX60gensym854_2952804642);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2952793820(self_2952804560, newNode_2952804665);
    if (wasEditing_2952804561) {
    var _ = tryEdit_2952797681(self_2952804560, node_2952792697(self_2952804560));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2952804555(self_2952804693) {
    moveNodeToNextSpace_2952804559(self_2952804693);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2952804555(this));};

function popLast_2952794077(deq_2952794079) {
    var Temporary1;

  var result_2952794080 = null;

    if ((deq_2952794079.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2952794079.count = subInt(deq_2952794079.count, 1);
    deq_2952794079.tail = (subInt(deq_2952794079.tail, 1) & deq_2952794079.mask);
    Temporary1 = deq_2952794079.data[chckIndx(deq_2952794079.tail, 0, (deq_2952794079.data).length - 1)];
    deq_2952794079.data[chckIndx(deq_2952794079.tail, 0, (deq_2952794079.data).length - 1)] = genericReset(deq_2952794079.data[chckIndx(deq_2952794079.tail, 0, (deq_2952794079.data).length - 1)], NTI2986344452);
    result_2952794080 = Temporary1;

  return result_2952794080;

}

function addFirst_2952794108(deq_2952794110, item_2952794111) {
    expandIfNeeded_2952793853(deq_2952794110);
    deq_2952794110.count = addInt(deq_2952794110.count, 1);
    deq_2952794110.head = (subInt(deq_2952794110.head, 1) & deq_2952794110.mask);
    deq_2952794110.data[chckIndx(deq_2952794110.head, 0, (deq_2952794110.data).length - 1)] = item_2952794111;

  
}

function selectPrevNode_2952794007(editor_2952794008) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2952793985(editor_2952794008.selectionHistory))) break Label2;
          var node_2952794090 = popLast_2952794077(editor_2952794008.selectionHistory);
          if (((!((node_2952794090 == null)) && !((node_2952794090.parent == null))) && (base_2986344542(node_2952794090) == editor_2952794008.document.rootNode))) {
          addFirst_2952794108(editor_2952794008.selectionHistory, editor_2952794008.selectedNode);
          editor_2952794008.selectedNode = node_2952794090;
          handleSelectedNodeChanged_2952792700(editor_2952794008);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2952804725(self_2952804726) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952804726)) {
    break BeforeRet;
    }
    
    selectPrevNode_2952794007(self_2952804726);
  };

  
}

function selectPrevJsWrapper2_2952804721(self_2952804754) {
    selectPrev_2952804725(self_2952804754);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2952804721(this));};

function selectNextNode_2952794125(editor_2952794126) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2952793985(editor_2952794126.selectionHistory))) break Label2;
          var node_2952794198 = popFirst_2952793994(editor_2952794126.selectionHistory);
          if (((!((node_2952794198 == null)) && !((node_2952794198.parent == null))) && (base_2986344542(node_2952794198) == editor_2952794126.document.rootNode))) {
          addLast_2952793844(editor_2952794126.selectionHistory, editor_2952794126.selectedNode);
          editor_2952794126.selectedNode = node_2952794198;
          handleSelectedNodeChanged_2952792700(editor_2952794126);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2952804776(self_2952804777) {
  BeforeRet: {
    if (isEditing_2952797524(self_2952804777)) {
    break BeforeRet;
    }
    
    selectNextNode_2952794125(self_2952804777);
  };

  
}

function selectNextJsWrapper2_2952804772(self_2952804805) {
    selectNext_2952804776(self_2952804805);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2952804772(this));};

function len_2952805149(t_2952805152) {
  var result_2952805153 = 0;

    result_2952805153 = t_2952805152.counter;

  return result_2952805153;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2684355198 = 0;
      colontmp__2684355198 = (a_1979711593).length - 1;
      var res_2684355199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355199 <= colontmp__2684355198)) break Label3;
            i_1979711612 = res_2684355199;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2684355199 = addInt(res_2684355199, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2952805760 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952805760 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2952805760;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2952805760 = addInt(res_2952805760, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3170893860(self_3170893861, text_3170893862) {
    
function HEX3Aanonymous_3170893884(a_3170893903, b_3170893904) {
      var result_3170893909 = 0;

        result_3170893909 = cmp_3170893896(a_3170893903.score, b_3170893904.score);

      return result_3170893909;

    }

  var result_3170893863 = [];

  BeforeRet: {
    result_3170893863 = nimCopy(null, [], NTI3170893842);
    var symbols_3170893868 = computeSymbols_3003205356(ctx_2952790071, self_3170893861.document.rootNode, true);
    Label1: {
      var key_3170893873 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3170893874 = null;
      var L_2952805751 = len_3087009054(symbols_3170893868);
      Label2: {
        var h_2952805753 = 0;
        var colontmp__2952805754 = 0;
        colontmp__2952805754 = (symbols_3170893868.data).length - 1;
        var res_2952805755 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952805755 <= colontmp__2952805754)) break Label4;
              h_2952805753 = res_2952805755;
              if (isFilled_1308622880(symbols_3170893868.data[chckIndx(h_2952805753, 0, (symbols_3170893868.data).length - 1)].Field0)) {
              var colontmp__2952805758 = nimCopy(null, {Field0: nimCopy(null, symbols_3170893868.data[chckIndx(h_2952805753, 0, (symbols_3170893868.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3170893868.data[chckIndx(h_2952805753, 0, (symbols_3170893868.data).length - 1)].Field2}, NTI3087008730);
              key_3170893873 = nimCopy(key_3170893873, colontmp__2952805758["Field0"], NTI2046820355);
              symbol_3170893874 = colontmp__2952805758["Field1"];
              Label5: {
                if (!((symbol_3170893874.kind == 0))) {
                break Label5;
                }
                
                var score_3170893879 = fuzzyMatchSmart_1979711572(text_3170893862, symbol_3170893874.name, true);
                result_3170893863.push({kind: 0, score: score_3170893879, id: nimCopy(null, symbol_3170893874.id, NTI2046820355), nodeKind: 0, name: []});;
              };
              if (!((len_3087009054(symbols_3170893868) == L_2952805751))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952805755 = addInt(res_2952805755, 1);
            }
        };
      };
    };
    sort_3170893916(result_3170893863, HEX3Aanonymous_3170893884, 0);
    break BeforeRet;
  };

  return result_3170893863;

}

function updateCompletions_3170894072(self_3170894073) {
    var text_3170894074 = nsuJoinSep(content_2818573983(self_3170894073.textEditor.document), []);
    self_3170894073.completions = nimCopy(null, getCompletions_3170893860(self_3170894073, text_3170894074), NTI3170893834);
    if ((0 < (self_3170894073.completions).length)) {
    self_3170894073.selected = clamp_1660945119(self_3170894073.selected, 0, subInt((self_3170894073.completions).length, 1));
    }
    else {
      self_3170894073.selected = 0;
    }
    

  
}

function handleTextChanged_3170894266(self_3170894267) {
    updateCompletions_3170894072(self_3170894267);
    self_3170894267.selected = 0;

  
}

function pop_1291849132(s_1291849134, s_1291849134_Idx) {
  var result_1291849135 = null;

    var L_1291849139 = subInt((s_1291849134[s_1291849134_Idx]).length, 1);
    result_1291849135 = s_1291849134[s_1291849134_Idx][chckIndx(L_1291849139, 0, (s_1291849134[s_1291849134_Idx]).length - 1)];
    if (s_1291849134[s_1291849134_Idx].length < chckRange(L_1291849139, 0, 2147483647)) { for (var i = s_1291849134[s_1291849134_Idx].length ; i < chckRange(L_1291849139, 0, 2147483647) ; ++i) s_1291849134[s_1291849134_Idx].push(null); }
               else { s_1291849134[s_1291849134_Idx].length = chckRange(L_1291849139, 0, 2147483647); };

  return result_1291849135;

}

function popPopup_1291849115(self_1291849116, popup_1291849117) {
    if (((0 < (self_1291849116.popups).length) && (self_1291849116.popups[chckIndx((self_1291849116.popups).length - 1, 0, (self_1291849116.popups).length - 1)] == popup_1291849117))) {
    var _ = pop_1291849132(self_1291849116, "popups");
    }
    
    requestRender_2768240746(self_1291849116.platform, false);

  
}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_2952805771 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952805771 < L_855639192)) break Label3;
            i_855639197 = i_2952805771;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_2952805771 = addInt(i_2952805771, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__2952805774 = 0;
        var colontmp__2952805775 = 0;
        colontmp__2952805774 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__2952805775 = addInt(a_855639190, (b_855639188).length);
        var res_2952805776 = colontmp__2952805774;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__2952805775 <= res_2952805776)) break Label6;
              iHEX60gensym109_855639210 = res_2952805776;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_2952805776 = subInt(res_2952805776, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__2952805779 = 0;
          var colontmp__2952805780 = 0;
          colontmp__2952805779 = addInt(a_855639190, (b_855639188).length);
          colontmp__2952805780 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_2952805781 = colontmp__2952805779;
          Label8: {
              Label9: while (true) {
              if (!(res_2952805781 <= colontmp__2952805780)) break Label9;
                iHEX60gensym109_855639216 = res_2952805781;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_2952805781 = addInt(res_2952805781, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__2952805784 = 0;
        colontmp__2952805784 = (b_855639188).length;
        var i_2952805785 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2952805785 < colontmp__2952805784)) break Label12;
              iHEX60gensym109_855639221 = i_2952805785;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_2952805785 = addInt(i_2952805785, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_2952805788 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952805788 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_2952805788;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_2952805788 = addInt(i_2952805788, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet192);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet193[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet194[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet195[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet196[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet197[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__2952805799 = 0;
      colontmp__2952805799 = start_855639721;
      var res_2952805800 = colontmp__2952805799;
      Label3: {
          Label4: while (true) {
          if (!(res_2952805800 <= last_855639724)) break Label4;
            i_855639729 = res_2952805800;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_2952805800 = addInt(res_2952805800, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_2952805807 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952805807 <= 3)) break Label3;
            __1694499043 = res_2952805807;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_2952805807 = addInt(res_2952805807, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_2952805804 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_2952805804 <= length_1694499110)) break Label5;
                      i_1694499115 = res_2952805804;
                      if ((ConstSet199[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_2952805804 = addInt(res_2952805804, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet200[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet201[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet198)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet206[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet203[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet204[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet205[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet207[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet208[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet202[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function handleUnknownPopupAction_1291848841(self_1291848842, popup_1291848843, action_1291848844, arg_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    var args_1291848847 = newJArray_1627390082();
    Label2: {
      var a_1291848848 = null;
      var colontmp__2952805764 = null;
      colontmp__2952805764 = newStringStream_1660945417(arg_1291848845);
      var p_2952805766 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2952805766[0], colontmp__2952805764, [], false);
      try {
      var _ = getTok_1694499270(p_2952805766[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_2952805766[0].tok == 1))) break Label5;
            a_1291848848 = parseJson_1627395211(p_2952805766[0], false, false, 0);
            add_1627390190(args_1291848847, a_1291848848);
          }
      };
      } finally {
      close_1694498967(p_2952805766[0]);
      }
    };
    if (handleUnknownPopupAction_2751463448(self_1291848842.scriptContext, popup_1291848843, action_1291848844, args_1291848847)) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848853 = [mnewString(0)];
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848853, 0, action_1291848844, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [32]);;
    formatValue_721420459(fmtRes_1291848853, 0, arg_1291848845, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848853, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848853[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function handleAction_3170894232(self_3170894233, action_3170894234, arg_3170894235) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3170894236 = 0;

  BeforeRet: {
    switch (toJSStr(action_3170894234)) {
    case "accept":
      if ((self_3170894233.selected < (self_3170894233.completions).length)) {
      var Temporary1 = self_3170894233.completions[chckIndx(self_3170894233.selected, 0, (self_3170894233.completions).length - 1)];
      if (ConstSet191[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952791523)); }
      self_3170894233.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849115(self_3170894233.editor, self_3170894233);
      break;
    case "cancel":
      popPopup_1291849115(self_3170894233.editor, self_3170894233);
      break;
    case "prev":
      if (((self_3170894233.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3170894233.selected, (self_3170894233.completions).length), 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary2;
      break;
    case "next":
      if (((self_3170894233.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3170894233.selected, 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary3;
      break;
    default: 
      result_3170894236 = handleUnknownPopupAction_1291848841(self_3170894233.editor, self_3170894233, action_3170894234, arg_3170894235);
      break BeforeRet;
      break;
    }
    result_3170894236 = 3;
    break BeforeRet;
  };

  return result_3170894236;

}

function newGotoPopup_3170894348(editor_3170894349, document_3170894350) {
    
function HEX3Aanonymous_3170894383(doc_3170894384) {
        handleTextChanged_3170894266(popup_3170894352);

      
    }
      
function HEX3Aanonymous_3170894432(actionHEX60gensym9HEX60gensym10_3170894433, argHEX60gensym9HEX60gensym10_3170894434) {
        var result_3170894435 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894420.config.handleActions) {
          var action_3170894436 = nimCopy(null, actionHEX60gensym9HEX60gensym10_3170894433, NTI33554449);
          var arg_3170894437 = nimCopy(null, argHEX60gensym9HEX60gensym10_3170894434, NTI33554449);
          var responseHEX60gensym9HEX60gensym10_3170894438 = handleAction_3170894232(popup_3170894352, action_3170894436, arg_3170894437);
          if (handlerHEX60gensym9_3170894420.config.consumeAllActions) {
          result_3170894435 = 3;
          break BeforeRet;
          }
          
          result_3170894435 = responseHEX60gensym9HEX60gensym10_3170894438;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym9_3170894420.config.consumeAllActions) {
          result_3170894435 = 3;
          break BeforeRet;
          }
          else {
            result_3170894435 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3170894435;

      }
      
function HEX3Aanonymous_3170894440(inputHEX60gensym9HEX60gensym11_3170894441) {
        var result_3170894442 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894420.config.handleInputs) {
          var input_3170894443 = nimCopy(null, inputHEX60gensym9HEX60gensym11_3170894441, NTI33554449);
          result_3170894442 = 1;
          break BeforeRet;
          }
          else {
            result_3170894442 = 1;
            break BeforeRet;
          }
          
        };

        return result_3170894442;

      }

  var result_3170894351 = null;

  BeforeRet: {
    var popup_3170894352 = {editor: editor_3170894349, document: document_3170894350, m_type: NTI3170893828, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3170894352.textEditor = newTextEditor_2818591034(newTextDocument_2818578645([], [], false), editor_3170894349);
    setMode_2818583517(popup_3170894352.textEditor, [105,110,115,101,114,116]);
    popup_3170894352.textEditor.renderHeader = false;
    popup_3170894352.textEditor.lineNumbers = nimCopy(popup_3170894352.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    popup_3170894352.textEditor.document.singleLine = true;
    var _ = subscribe_2818591082(popup_3170894352.textEditor.document.textChanged, HEX3Aanonymous_3170894383);
    Label1: {
      var handlerHEX60gensym9_3170894420 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym9_3170894420.config = getEventHandlerConfig_1291849162(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym9_3170894420.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym9_3170894420.handleAction = HEX3Aanonymous_3170894432;
      handlerHEX60gensym9_3170894420.handleInput = HEX3Aanonymous_3170894440;
    };
    popup_3170894352.eventHandler = handlerHEX60gensym9_3170894420;
    updateCompletions_3170894072(popup_3170894352);
    result_3170894351 = popup_3170894352;
    break BeforeRet;
  };

  return result_3170894351;

}

function init_2449473586(self_2449473587) {
    self_2449473587.id = newEditorId_2415919419();

  
}

function subscribe_1291848997(event_1291848999, callback_1291849000) {
  var result_1291849001 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849001 = nimCopy(result_1291849001, newId_2046820569(), NTI2046820355);
    event_1291848999.handlers.push({Field0: nimCopy(null, result_1291849001, NTI2046820355), Field1: callback_1291849000});;

  return result_1291849001;

}

function pushPopup_1291849060(self_1291849061, popup_1291849062) {
    
function HEX3Aanonymous_1291849078() {
        requestRender_2768240746(self_1291849061.platform, false);

      
    }

    init_2449473586(popup_1291849062);
    self_1291849061.popups.push(popup_1291849062);;
    var _ = subscribe_1291848997(popup_1291849062.onMarkedDirty, HEX3Aanonymous_1291849078);
    requestRender_2768240746(self_1291849061.platform, false);

  
}

function goto_2952804827(self_2952804828, where_2952804829) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2952804873(n_2952804876) {
          var result_2952804879 = false;

            result_2952804879 = (!((n_2952804876 == node_2952792697(self_2952804828))) && (HEX3DHEX3D_2046820592(n_2952804876.id, id_2952804872) || HEX3DHEX3D_2046820592(n_2952804876.reff, id_2952804872)));

          return result_2952804879;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2952804900(n_2952804903) {
          var result_2952804906 = false;

            result_2952804906 = (!((n_2952804903 == node_2952792697(self_2952804828))) && (computeType_3003195250(ctx_2952790071, n_2952804903, true).kind == 0));

          return result_2952804906;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2952804926(n_2952804929) {
          var result_2952804932 = false;

            result_2952804932 = !((n_2952804929 == node_2952792697(self_2952804828)));

          return result_2952804932;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2952805550(id_2952805551) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym897_2952805554 = getAstNode_3003175776(ctx_2952790071, id_2952805551);
            if (!isSome_2986346330(oHEX60gensym897_2952805554)) Temporary2 = false; else {              var node_2952805577 = get_2986346350(oHEX60gensym897_2952805554);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2986344542(node_2952805577) == self_2952804828.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2952793820(self_2952804828, node_2952805577);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2952797524(self_2952804828)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2952804829)) {
    case "definition":
        var oHEX60gensym880_2952804832 = computeSymbol_3003201856(ctx_2952790071, node_2952792697(self_2952804828), true);
        if (!isSome_3087009345(oHEX60gensym880_2952804832)) Temporary1 = false; else {          var sym_2952804855 = get_3087009365(oHEX60gensym880_2952804832);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2952804855.kind == 0) && !((sym_2952804855.node == self_2952804828.document.rootNode)))) {
      var Temporary2 = sym_2952804855;
      if (ConstSet190[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2952793820(self_2952804828, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2952804864 = node_2952792697(self_2952804828);
        var pos_2952804865 = 0;
        var _ = pos_2952804865;
        if ((expr_2952804864.kind == 1)) {
        Temporary4 = node_2952792697(self_2952804828).reff;
        }
        else {
        Temporary4 = node_2952792697(self_2952804828).id;
        }
        
      };
      var id_2952804872 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2952804884 = 0;
        var n_2952804885 = null;
        var colontmp__2952805660 = null;
        var colontmp__2952805661 = null;
        colontmp__2952805660 = node_2952792697(self_2952804828);
        colontmp__2952805661 = HEX3Aanonymous_2952804873;
        var i_2952805662 = 0;
        Label6: {
          var __2952805664 = 0;
          var child_2952805665 = null;
          var n_2952805666 = colontmp__2952805660;
          var idx_2952805667 = -1;
          var i_2952805668 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2952805667 == -1)) {
                __2952805664 = i_2952805668;
                child_2952805665 = n_2952805666;
                if (colontmp__2952805661(child_2952805665)) {
                __2952804884 = i_2952805662;
                n_2952804885 = child_2952805665;
                nodeHEX3D_2952793820(self_2952804828, n_2952804885);
                break Label5;
                i_2952805662 = addInt(i_2952805662, 1);
                }
                
                }
                
                if ((addInt(idx_2952805667, 1) < len_2986344536(n_2952805666))) {
                n_2952805666 = HEX5BHEX5D_2986344532(n_2952805666, addInt(idx_2952805667, 1));
                idx_2952805667 = -1;
                }
                else {
                  var oHEX60gensym71_2952805670 = next_2986344641(n_2952805666);
                  if (!isSome_2986346330(oHEX60gensym71_2952805670)) Temporary11 = false; else {                    var ne_2952805671 = get_2986346350(oHEX60gensym71_2952805670);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2952805666 == null));                  }                if (Temporary10) {
                n_2952805666 = ne_2952805671;
                idx_2952805667 = -1;
                }
                else {
                if (((!((n_2952805666.parent == null)) && !((n_2952805666 == null))) && !((n_2952805666.parent == null)))) {
                idx_2952805667 = index_2986344556(n_2952805666);
                n_2952805666 = n_2952805666.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2952805668 = addInt(i_2952805668, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2952804886 = node_2952792697(self_2952804828);
        var pos_2952804887 = 0;
        var _ = pos_2952804887;
        if ((expr_2952804886.kind == 1)) {
        Temporary13 = node_2952792697(self_2952804828).reff;
        }
        else {
        Temporary13 = node_2952792697(self_2952804828).id;
        }
        
      };
      var id_2952804894 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2952804895 = null;
        var colontmp__2952805674 = null;
        colontmp__2952805674 = node_2952792697(self_2952804828);
        var idx_2952805675 = 0;
        var n_2952805676 = colontmp__2952805674;
        Label15: {
            Label16: while (true) {
            if (!!((n_2952805676 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805676), 1)), subInt(idx_2952805675, 1))) {
              n_2952805676 = HEX5BHEX5D_2986344532(n_2952805676, subInt(idx_2952805675, 1));
              idx_2952805675 = len_2986344536(n_2952805676);
              }
              else {
                var oHEX60gensym90_2952805678 = prev_2986344687(n_2952805676);
                if (!isSome_2986346330(oHEX60gensym90_2952805678)) Temporary17 = false; else {                  var ne_2952805679 = get_2986346350(oHEX60gensym90_2952805678);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2952804895 = n_2952805676;
              if ((!((n_2952804895 == node_2952792697(self_2952804828))) && (HEX3DHEX3D_2046820592(n_2952804895.id, id_2952804894) || HEX3DHEX3D_2046820592(n_2952804895.reff, id_2952804894)))) {
              nodeHEX3D_2952793820(self_2952804828, n_2952804895);
              break Label14;
              }
              
              n_2952805676 = ne_2952805679;
              idx_2952805675 = len_2986344536(n_2952805676);
              }
              else {
                n_2952804895 = n_2952805676;
                if ((!((n_2952804895 == node_2952792697(self_2952804828))) && (HEX3DHEX3D_2046820592(n_2952804895.id, id_2952804894) || HEX3DHEX3D_2046820592(n_2952804895.reff, id_2952804894)))) {
                nodeHEX3D_2952793820(self_2952804828, n_2952804895);
                break Label14;
                }
                
                idx_2952805675 = index_2986344556(n_2952805676);
                n_2952805676 = n_2952805676.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2952804915 = 0;
        var n_2952804916 = null;
        var colontmp__2952805681 = null;
        var colontmp__2952805682 = null;
        colontmp__2952805681 = node_2952792697(self_2952804828);
        colontmp__2952805682 = HEX3Aanonymous_2952804900;
        var i_2952805683 = 0;
        Label19: {
          var __2952805685 = 0;
          var child_2952805686 = null;
          var n_2952805687 = colontmp__2952805681;
          var idx_2952805688 = -1;
          var i_2952805689 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2952805688 == -1)) {
                __2952805685 = i_2952805689;
                child_2952805686 = n_2952805687;
                if (colontmp__2952805682(child_2952805686)) {
                __2952804915 = i_2952805683;
                n_2952804916 = child_2952805686;
                nodeHEX3D_2952793820(self_2952804828, n_2952804916);
                break Label18;
                i_2952805683 = addInt(i_2952805683, 1);
                }
                
                }
                
                if ((addInt(idx_2952805688, 1) < len_2986344536(n_2952805687))) {
                n_2952805687 = HEX5BHEX5D_2986344532(n_2952805687, addInt(idx_2952805688, 1));
                idx_2952805688 = -1;
                }
                else {
                  var oHEX60gensym71_2952805691 = next_2986344641(n_2952805687);
                  if (!isSome_2986346330(oHEX60gensym71_2952805691)) Temporary24 = false; else {                    var ne_2952805692 = get_2986346350(oHEX60gensym71_2952805691);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2952805687 == null));                  }                if (Temporary23) {
                n_2952805687 = ne_2952805692;
                idx_2952805688 = -1;
                }
                else {
                if (((!((n_2952805687.parent == null)) && !((n_2952805687 == null))) && !((n_2952805687.parent == null)))) {
                idx_2952805688 = index_2986344556(n_2952805687);
                n_2952805687 = n_2952805687.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2952805689 = addInt(i_2952805689, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2952804917 = null;
        var colontmp__2952805694 = null;
        colontmp__2952805694 = node_2952792697(self_2952804828);
        var idx_2952805695 = 0;
        var n_2952805696 = colontmp__2952805694;
        Label26: {
            Label27: while (true) {
            if (!!((n_2952805696 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805696), 1)), subInt(idx_2952805695, 1))) {
              n_2952805696 = HEX5BHEX5D_2986344532(n_2952805696, subInt(idx_2952805695, 1));
              idx_2952805695 = len_2986344536(n_2952805696);
              }
              else {
                var oHEX60gensym90_2952805698 = prev_2986344687(n_2952805696);
                if (!isSome_2986346330(oHEX60gensym90_2952805698)) Temporary28 = false; else {                  var ne_2952805699 = get_2986346350(oHEX60gensym90_2952805698);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2952804917 = n_2952805696;
              if ((!((n_2952804917 == node_2952792697(self_2952804828))) && (computeType_3003195250(ctx_2952790071, n_2952804917, true).kind == 0))) {
              nodeHEX3D_2952793820(self_2952804828, n_2952804917);
              break Label25;
              }
              
              n_2952805696 = ne_2952805699;
              idx_2952805695 = len_2986344536(n_2952805696);
              }
              else {
                n_2952804917 = n_2952805696;
                if ((!((n_2952804917 == node_2952792697(self_2952804828))) && (computeType_3003195250(ctx_2952790071, n_2952804917, true).kind == 0))) {
                nodeHEX3D_2952793820(self_2952804828, n_2952804917);
                break Label25;
                }
                
                idx_2952805695 = index_2986344556(n_2952805696);
                n_2952805696 = n_2952805696.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2952804937 = 0;
        var n_2952804938 = null;
        var colontmp__2952805713 = null;
        var colontmp__2952805714 = null;
        colontmp__2952805713 = node_2952792697(self_2952804828);
        colontmp__2952805714 = HEX3Aanonymous_2952804926;
        var i_2952805715 = 0;
        Label30: {
          var __2952805717 = 0;
          var child_2952805718 = null;
          var n_2952805719 = colontmp__2952805713;
          var idx_2952805720 = -1;
          var i_2952805721 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2952805720 == -1)) {
                __2952805717 = i_2952805721;
                child_2952805718 = n_2952805719;
                if (colontmp__2952805714(child_2952805718)) {
                __2952804937 = i_2952805715;
                n_2952804938 = child_2952805718;
                if (contains_3003225619(ctx_2952790071.diagnosticsPerNode, n_2952804938.id)) {
                var found_2952805002 = false;
                Label34: {
                  var diags_2952805386 = [];
                  var colontmp__2952805702 = ({data: [], counter: 0});
                  colontmp__2952805702 = nimCopy(colontmp__2952805702, HEX5BHEX5D_3003222261(ctx_2952790071.diagnosticsPerNode, n_2952804938.id).queries, NTI3003121678);
                  var L_2952805707 = len_2952805149(colontmp__2952805702);
                  Label35: {
                    var h_2952805709 = 0;
                    var colontmp__2952805710 = 0;
                    colontmp__2952805710 = (colontmp__2952805702.data).length - 1;
                    var res_2952805711 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2952805711 <= colontmp__2952805710)) break Label37;
                          h_2952805709 = res_2952805711;
                          if (isFilled_1308622880(colontmp__2952805702.data[chckIndx(h_2952805709, 0, (colontmp__2952805702.data).length - 1)].Field0)) {
                          diags_2952805386 = colontmp__2952805702.data[chckIndx(h_2952805709, 0, (colontmp__2952805702.data).length - 1)]["Field2"];
                          if ((0 < (diags_2952805386).length)) {
                          found_2952805002 = true;
                          }
                          
                          if (!((len_2952805149(colontmp__2952805702) == L_2952805707))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2952805711 = addInt(res_2952805711, 1);
                        }
                    };
                  };
                };
                if (found_2952805002) {
                nodeHEX3D_2952793820(self_2952804828, n_2952804938);
                }
                
                break Label29;
                }
                
                i_2952805715 = addInt(i_2952805715, 1);
                }
                
                }
                
                if ((addInt(idx_2952805720, 1) < len_2986344536(n_2952805719))) {
                n_2952805719 = HEX5BHEX5D_2986344532(n_2952805719, addInt(idx_2952805720, 1));
                idx_2952805720 = -1;
                }
                else {
                  var oHEX60gensym71_2952805723 = next_2986344641(n_2952805719);
                  if (!isSome_2986346330(oHEX60gensym71_2952805723)) Temporary39 = false; else {                    var ne_2952805724 = get_2986346350(oHEX60gensym71_2952805723);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2952805719 == null));                  }                if (Temporary38) {
                n_2952805719 = ne_2952805724;
                idx_2952805720 = -1;
                }
                else {
                if (((!((n_2952805719.parent == null)) && !((n_2952805719 == null))) && !((n_2952805719.parent == null)))) {
                idx_2952805720 = index_2986344556(n_2952805719);
                n_2952805719 = n_2952805719.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2952805721 = addInt(i_2952805721, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2952805390 = null;
        var colontmp__2952805735 = null;
        colontmp__2952805735 = node_2952792697(self_2952804828);
        var idx_2952805736 = 0;
        var n_2952805737 = colontmp__2952805735;
        Label41: {
            Label42: while (true) {
            if (!!((n_2952805737 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805737), 1)), subInt(idx_2952805736, 1))) {
              n_2952805737 = HEX5BHEX5D_2986344532(n_2952805737, subInt(idx_2952805736, 1));
              idx_2952805736 = len_2986344536(n_2952805737);
              }
              else {
                var oHEX60gensym90_2952805739 = prev_2986344687(n_2952805737);
                if (!isSome_2986346330(oHEX60gensym90_2952805739)) Temporary43 = false; else {                  var ne_2952805740 = get_2986346350(oHEX60gensym90_2952805739);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2952805390 = n_2952805737;
              Label44: {
                if ((n_2952805390 == node_2952792697(self_2952804828))) {
                break Label44;
                }
                
                if (contains_3003225619(ctx_2952790071.diagnosticsPerNode, n_2952805390.id)) {
                var found_2952805458 = false;
                Label45: {
                  var diags_2952805545 = [];
                  var colontmp__2952805728 = ({data: [], counter: 0});
                  colontmp__2952805728 = nimCopy(colontmp__2952805728, HEX5BHEX5D_3003222261(ctx_2952790071.diagnosticsPerNode, n_2952805390.id).queries, NTI3003121678);
                  var L_2952805729 = len_2952805149(colontmp__2952805728);
                  Label46: {
                    var h_2952805731 = 0;
                    var colontmp__2952805732 = 0;
                    colontmp__2952805732 = (colontmp__2952805728.data).length - 1;
                    var res_2952805733 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2952805733 <= colontmp__2952805732)) break Label48;
                          h_2952805731 = res_2952805733;
                          if (isFilled_1308622880(colontmp__2952805728.data[chckIndx(h_2952805731, 0, (colontmp__2952805728.data).length - 1)].Field0)) {
                          diags_2952805545 = colontmp__2952805728.data[chckIndx(h_2952805731, 0, (colontmp__2952805728.data).length - 1)]["Field2"];
                          if ((0 < (diags_2952805545).length)) {
                          found_2952805458 = true;
                          }
                          
                          if (!((len_2952805149(colontmp__2952805728) == L_2952805729))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2952805733 = addInt(res_2952805733, 1);
                        }
                    };
                  };
                };
                if (found_2952805458) {
                nodeHEX3D_2952793820(self_2952804828, n_2952805390);
                break Label40;
                }
                
                }
                
              };
              n_2952805737 = ne_2952805740;
              idx_2952805736 = len_2986344536(n_2952805737);
              }
              else {
                n_2952805390 = n_2952805737;
                Label49: {
                  if ((n_2952805390 == node_2952792697(self_2952804828))) {
                  break Label49;
                  }
                  
                  if (contains_3003225619(ctx_2952790071.diagnosticsPerNode, n_2952805390.id)) {
                  var found_2952805741 = false;
                  Label50: {
                    var diags_2952805742 = [];
                    var colontmp__2952805743 = ({data: [], counter: 0});
                    colontmp__2952805743 = nimCopy(colontmp__2952805743, HEX5BHEX5D_3003222261(ctx_2952790071.diagnosticsPerNode, n_2952805390.id).queries, NTI3003121678);
                    var L_2952805744 = len_2952805149(colontmp__2952805743);
                    Label51: {
                      var h_2952805745 = 0;
                      var colontmp__2952805746 = 0;
                      colontmp__2952805746 = (colontmp__2952805743.data).length - 1;
                      var res_2952805747 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2952805747 <= colontmp__2952805746)) break Label53;
                            h_2952805745 = res_2952805747;
                            if (isFilled_1308622880(colontmp__2952805743.data[chckIndx(h_2952805745, 0, (colontmp__2952805743.data).length - 1)].Field0)) {
                            diags_2952805742 = colontmp__2952805743.data[chckIndx(h_2952805745, 0, (colontmp__2952805743.data).length - 1)]["Field2"];
                            if ((0 < (diags_2952805742).length)) {
                            found_2952805741 = true;
                            }
                            
                            if (!((len_2952805149(colontmp__2952805743) == L_2952805744))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2952805747 = addInt(res_2952805747, 1);
                          }
                      };
                    };
                  };
                  if (found_2952805741) {
                  nodeHEX3D_2952793820(self_2952804828, n_2952805390);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2952805736 = index_2986344556(n_2952805737);
                n_2952805737 = n_2952805737.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2952805549 = newGotoPopup_3170894348(self_2952804828.editor, self_2952804828.document);
      popup_2952805549.handleSymbolSelected = HEX3Aanonymous_2952805550;
      pushPopup_1291849060(self_2952804828.editor, popup_2952805549);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2952804823(self_2952805637, where_2952805638) {
    goto_2952804827(self_2952805637, where_2952805638);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2952804823(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2952805861(self_2952805863, line_2952805864, color_2952805865) {
    if ((1500 <= (self_2952805863.lines).length)) {
    delete_2952790831(self_2952805863, "lines", HEX2EHEX2E_805306418(0, subInt((self_2952805863.lines).length, 1000)));
    }
    
    if ((0 < self_2952805863.scroll)) {
    self_2952805863.scroll = addInt(self_2952805863.scroll, 1);
    }
    
    self_2952805863.lines.push({Field0: nimCopy(null, line_2952805864, NTI33554449), Field1: color_2634022945(color_2952805865)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2952806091 = 0;
      colontmp__2952806091 = (result_855640118).length;
      var i_2952806092 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952806092 < colontmp__2952806091)) break Label3;
            i_855640125 = i_2952806092;
            if ((ConstSet209[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2952806092 = addInt(i_2952806092, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet211[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2952806095 = 0;
      colontmp__2952806095 = subInt((s_855638126).length, 1);
      var res_2952806096 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952806096 <= colontmp__2952806095)) break Label3;
            iHEX60gensym11_855638133 = res_2952806096;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2952806096 = addInt(res_2952806096, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2785018295(result_2785018297, result_2785018297_Idx, value_2785018298, specifier_2785018299) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2785018299).length == 0)) {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], HEX24_33557336(value_2785018298));;
    break BeforeRet;
    }
    
    var spec_2785018303 = parseStandardFormatSpecifier_721420346(specifier_2785018299, 0, false);
    var fmode_2785018304 = 0;
    switch (spec_2785018303.typ) {
    case 101:
    case 69:
      fmode_2785018304 = 2;
      break;
    case 102:
    case 70:
      fmode_2785018304 = 1;
      break;
    case 103:
    case 71:
      fmode_2785018304 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2785018303.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2785018306 = [nsuformatBiggestFloat(value_2785018298, fmode_2785018304, chckRange(spec_2785018303.precision, -1, 32), 46)];
    var sign_2785018307 = false;
    if ((0.0 <= value_2785018298)) {
    if (!((spec_2785018303.sign == 45))) {
    sign_2785018307 = true;
    if ((value_2785018298 == 0.0)) {
    if (((1.0 / value_2785018298) == Infinity)) {
    insert_33557745(f_2785018306, 0, nimCharToStr(spec_2785018303.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2785018306, 0, nimCharToStr(spec_2785018303.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2785018307 = true;
    }
    
    if (spec_2785018303.padWithZero) {
    var signStr_2785018308 = [];
    if (sign_2785018307) {
    signStr_2785018308 = nimCopy(null, nimCharToStr(f_2785018306[0][chckIndx(0, 0, (f_2785018306[0]).length - 1)]), NTI33554449);
    f_2785018306[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2785018306[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2785018330 = subInt(subInt(spec_2785018303.minimumWidth, (f_2785018306[0]).length), (sign_2785018307 ? 1 : 0));
    if ((0 < toFill_2785018330)) {
    f_2785018306[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2785018330, 0, 2147483647)) || []).concat(f_2785018306[0] || []), NTI33554449);
    }
    
    if (sign_2785018307) {
    f_2785018306[0] = nimCopy(null, (signStr_2785018308 || []).concat(f_2785018306[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2785018303.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2785018303.align;
    }
    
    var align_2785018331 = Temporary1;
    var res_2785018332 = alignString_721420308(f_2785018306[0], spec_2785018303.minimumWidth, align_2785018331, spec_2785018303.fill);
    if ((ConstSet210[spec_2785018303.typ] != undefined)) {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], nsuToUpperAsciiStr(res_2785018332));;
    }
    else {
    result_2785018297[result_2785018297_Idx].push.apply(result_2785018297[result_2785018297_Idx], res_2785018332);;
    }
    
  };

  
}

function ms_2466250801(nanos_2466250802) {
  var result_2466250803 = 0.0;

    result_2466250803 = (nanos_2466250802 / 1000000.0);

  return result_2466250803;

}

function runSelectedFunction_2952805826(self_2952805827) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2952797524(self_2952805827)) {
    break BeforeRet;
    }
    
    var node_2952805828 = node_2952792697(self_2952805827);
    Label1: {
        Label2: while (true) {
        if (!!((node_2952805828.parent == null))) break Label2;
          if (((node_2952805828.parent == self_2952805827.document.rootNode) && (node_2952805828.kind == 8))) {
          var timer_2952805841 = startTimer_2466250804();
          var fmtRes_2952805846 = [mnewString(0)];
          fmtRes_2952805846[0].push.apply(fmtRes_2952805846[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008579(fmtRes_2952805846, 0, node_2952805828, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805846[0], NTI33554449)]);
          updateNode_3003234352(ctx_2952790071, node_2952805828);
          var result_2952805852 = computeValue_3003198726(ctx_2952790071, node_2952805828, true);
          if (!((result_2952805852.kind == 1))) {
          if ((result_2952805852.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2952805861(executionOutput_2952790070[0], HEX24_3087008487(result_2952805852), Temporary3);
          }
          
          var fmtRes_2952805893 = [mnewString(0)];
          fmtRes_2952805893[0].push.apply(fmtRes_2952805893[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008579(fmtRes_2952805893, 0, node_2952805828, []);
          fmtRes_2952805893[0].push.apply(fmtRes_2952805893[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2952805893, 0, result_2952805852, []);
          fmtRes_2952805893[0].push.apply(fmtRes_2952805893[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018295(fmtRes_2952805893, 0, ms_2466250801(elapsed_2466250815(timer_2952805841)), []);
          fmtRes_2952805893[0].push.apply(fmtRes_2952805893[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805893[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2952805828.kind == 4) && (0 < len_2986344536(node_2952805828))) && (HEX5BHEX5D_2986344532(node_2952805828, 0).kind == 11))) {
          var functionType_2952805917 = computeType_3003195250(ctx_2952790071, node_2952805828, true);
          if ((functionType_2952805917.kind == 0)) {
          var fmtRes_2952805926 = [mnewString(0)];
          fmtRes_2952805926[0].push.apply(fmtRes_2952805926[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008579(fmtRes_2952805926, 0, node_2952805828, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805926[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2952805917.kind == 4))) {
          var fmtRes_2952805940 = [mnewString(0)];
          fmtRes_2952805940[0].push.apply(fmtRes_2952805940[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008579(fmtRes_2952805940, 0, node_2952805828, []);
          fmtRes_2952805940[0].push.apply(fmtRes_2952805940[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3003230324(fmtRes_2952805940, 0, functionType_2952805917, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805940[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2952805917;
            if (ConstSet212[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2952805958 = [mnewString(0)];
          fmtRes_2952805958[0].push.apply(fmtRes_2952805958[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008579(fmtRes_2952805958, 0, node_2952805828, []);
          fmtRes_2952805958[0].push.apply(fmtRes_2952805958[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3003230324(fmtRes_2952805958, 0, functionType_2952805917, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805958[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2952805973 = [mnewString(0)];
          fmtRes_2952805973[0].push.apply(fmtRes_2952805973[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008579(fmtRes_2952805973, 0, node_2952805828, []);
          fmtRes_2952805973[0].push.apply(fmtRes_2952805973[0], [32,40]);;
          formatValue_3003230324(fmtRes_2952805973, 0, functionType_2952805917, []);
          fmtRes_2952805973[0].push.apply(fmtRes_2952805973[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805973[0], NTI33554449)]);
          var timer_2952805984 = startTimer_2466250804();
          var maxLoopIterations_2952805994 = getOption_2818588867(self_2952805827.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2952806002 = newFunctionExecutionContext_3003191967(ctx_2952790071, {node: HEX5BHEX5D_2986344532(node_2952805828, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2952805994), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2952806003 = computeFunctionExecution_3003215035(ctx_2952790071, fec_2952806002);
          if (!((result_2952806003.kind == 1))) {
          if ((result_2952806003.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2952805861(executionOutput_2952790070[0], HEX24_3087008487(result_2952806003), Temporary5);
          }
          
          var fmtRes_2952806021 = [mnewString(0)];
          fmtRes_2952806021[0].push.apply(fmtRes_2952806021[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008579(fmtRes_2952806021, 0, node_2952805828, []);
          fmtRes_2952806021[0].push.apply(fmtRes_2952806021[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2952806021, 0, result_2952806003, []);
          fmtRes_2952806021[0].push.apply(fmtRes_2952806021[0], [32,40,84,111,111,107,32]);;
          formatValue_2785018295(fmtRes_2952806021, 0, ms_2466250801(elapsed_2466250815(timer_2952805984)), []);
          fmtRes_2952806021[0].push.apply(fmtRes_2952806021[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952806021[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2952805828 = node_2952805828.parent;
        }
    };
    var fmtRes_2952806041 = [mnewString(0)];
    fmtRes_2952806041[0].push.apply(fmtRes_2952806041[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008579(fmtRes_2952806041, 0, node_2952792697(self_2952805827), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952806041[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2952805822(self_2952806074) {
    runSelectedFunction_2952805826(self_2952806074);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2952805822(this));};

function toggleOption_2952806104(self_2952806105, name_2952806106) {
    switch (toJSStr(name_2952806106)) {
    case "logging":
      ctx_2952790071.enableLogging = !(ctx_2952790071.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2952806100(self_2952806135, name_2952806136) {
    toggleOption_2952806104(self_2952806135, name_2952806136);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2952806100(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2952806166(self_2952806167, which_2952806168) {
    switch (toJSStr(which_2952806168)) {
    case "":
      var _ = handleAction_2952806156(self_2952806167, self_2952806167.lastCommand["Field0"], self_2952806167.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2952806156(self_2952806167, self_2952806167.lastMoveCommand["Field0"], self_2952806167.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2952806156(self_2952806167, self_2952806167.lastEditCommand["Field0"], self_2952806167.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2952806156(self_2952806167, self_2952806167.lastOtherCommand["Field0"], self_2952806167.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2952806162(self_2952806197, which_2952806198) {
    runLastCommand_2952806166(self_2952806197, which_2952806198);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2952806162(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007956(node_3087007957, index_3087007958) {
  var result_3087007959 = null;

  BeforeRet: {
    result_3087007959 = node_3087007957.children[chckIndx(index_3087007958, 0, (node_3087007957.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007959;

}

function none_3087007989() {
  var result_3087007995 = ({val: null});

  return result_3087007995;

}

function none_3087007986() {
  var result_3087007988 = ({val: null});

    result_3087007988 = nimCopy(result_3087007988, none_3087007989(), NTI3087007896);

  return result_3087007988;

}

function index_3087007903(node_3087007904) {
  var result_3087007905 = 0;

  BeforeRet: {
    if ((node_3087007904.parent == null)) {
    result_3087007905 = -1;
    break BeforeRet;
    }
    
    result_3087007905 = 0;
    Label1: {
      var i_3087007932 = null;
      var i_2952806546 = 0;
      var L_2952806547 = (node_3087007904.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952806546 < L_2952806547)) break Label3;
            i_3087007932 = node_3087007904.parent.children[chckIndx(i_2952806546, 0, (node_3087007904.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820592(i_3087007932.id, node_3087007904.id)) {
            break BeforeRet;
            }
            
            result_3087007905 = addInt(result_3087007905, 1);
            i_2952806546 = addInt(i_2952806546, 1);
            if (!(((node_3087007904.parent.children).length == L_2952806547))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007905;

}

function some_3087008008(val_3087008010) {
  var result_3087008011 = ({val: null});

    if (!(!((val_3087008010 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008011.val = val_3087008010;

  return result_3087008011;

}

function next_3087007975(node_3087007976) {
  var result_3087007981 = ({val: null});

  BeforeRet: {
    if ((node_3087007976.parent == null)) {
    result_3087007981 = nimCopy(result_3087007981, none_3087007986(), NTI3087007896);
    break BeforeRet;
    }
    
    var i_3087008005 = index_3087007903(node_3087007976);
    if ((subInt(len_3087007969(node_3087007976.parent), 1) <= i_3087008005)) {
    result_3087007981 = nimCopy(result_3087007981, none_3087007986(), NTI3087007896);
    break BeforeRet;
    }
    
    result_3087007981 = nimCopy(result_3087007981, some_3087008008(HEX5BHEX5D_3087007956(node_3087007976.parent, addInt(i_3087008005, 1))), NTI3087007896);
    break BeforeRet;
  };

  return result_3087007981;

}

function isSome_3087008057(self_3087008059) {
  var result_3087008060 = false;

    result_3087008060 = !((self_3087008059.val == null));

  return result_3087008060;

}

function isNone_3087008085(self_3087008087) {
  var result_3087008088 = false;

    result_3087008088 = (self_3087008087.val == null);

  return result_3087008088;

}

function get_3087008077(self_3087008079) {
  var result_3087008080 = null;

    if (isNone_3087008085(self_3087008079)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008080 = self_3087008079["val"];

  return result_3087008080;

}

function newSeq_2952806301(len_2952806303) {
  var result_2952806304 = [];

    result_2952806304 = new Array(len_2952806303); for (var i = 0 ; i < len_2952806303 ; ++i) { result_2952806304[i] = {Field0: 0.0, Field1: null}; }
  return result_2952806304;

}

function mergeAlt_2952806330(a_2952806332, b_2952806333, lo_2952806334, m_2952806335, hi_2952806336, cmp_2952806339, order_2952806340) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2952806339(a_2952806332[chckIndx(m_2952806335, 0, (a_2952806332).length - 1)], a_2952806332[chckIndx(addInt(m_2952806335, 1), 0, (a_2952806332).length - 1)]), order_2952806340) <= 0)) {
    break BeforeRet;
    }
    
    var j_2952806341 = lo_2952806334;
    if (!((j_2952806341 <= m_2952806335))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2952806347 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2952806341 <= m_2952806335)) break Label2;
          b_2952806333[chckIndx(bb_2952806347, 0, (b_2952806333).length - 1)] = nimCopy(b_2952806333[chckIndx(bb_2952806347, 0, (b_2952806333).length - 1)], a_2952806332[chckIndx(j_2952806341, 0, (a_2952806332).length - 1)], NTI2952800824);
          bb_2952806347 = addInt(bb_2952806347, 1);
          j_2952806341 = addInt(j_2952806341, 1);
        }
    };
    var i_2952806358 = 0;
    var k_2952806359 = lo_2952806334;
    Label3: {
        Label4: while (true) {
        if (!((k_2952806359 < j_2952806341) && (j_2952806341 <= hi_2952806336))) break Label4;
          if ((HEX2A_1023410184(cmp_2952806339(b_2952806333[chckIndx(i_2952806358, 0, (b_2952806333).length - 1)], a_2952806332[chckIndx(j_2952806341, 0, (a_2952806332).length - 1)]), order_2952806340) <= 0)) {
          a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)] = nimCopy(a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)], b_2952806333[chckIndx(i_2952806358, 0, (b_2952806333).length - 1)], NTI2952800824);
          i_2952806358 = addInt(i_2952806358, 1);
          }
          else {
            a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)] = nimCopy(a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)], a_2952806332[chckIndx(j_2952806341, 0, (a_2952806332).length - 1)], NTI2952800824);
            j_2952806341 = addInt(j_2952806341, 1);
          }
          
          k_2952806359 = addInt(k_2952806359, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2952806359 < j_2952806341)) break Label6;
          a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)] = nimCopy(a_2952806332[chckIndx(k_2952806359, 0, (a_2952806332).length - 1)], b_2952806333[chckIndx(i_2952806358, 0, (b_2952806333).length - 1)], NTI2952800824);
          k_2952806359 = addInt(k_2952806359, 1);
          i_2952806358 = addInt(i_2952806358, 1);
        }
    };
  };

  
}

function sort_2952806289(a_2952806291, cmp_2952806294, order_2952806295) {
    var n_2952806300 = (a_2952806291).length;
    var b_2952806327 = newSeq_2952806301(chckRange(divInt(n_2952806300, 2), 0, 2147483647));
    var s_2952806328 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2952806328 < n_2952806300)) break Label2;
          var m_2952806329 = subInt(subInt(n_2952806300, 1), s_2952806328);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2952806329)) break Label4;
                mergeAlt_2952806330(a_2952806291, b_2952806327, nimMax(addInt(subInt(m_2952806329, s_2952806328), 1), 0), m_2952806329, addInt(m_2952806329, s_2952806328), cmp_2952806294, order_2952806295);
                m_2952806329 = subInt(m_2952806329, mulInt(s_2952806328, 2));
              }
          };
          s_2952806328 = mulInt(s_2952806328, 2);
        }
    };

  
}

function cmp_2952806269(x_2952806271, y_2952806272) {
  var result_2952806273 = 0;

  BeforeRet: {
    if ((x_2952806271 == y_2952806272)) {
    result_2952806273 = 0;
    break BeforeRet;
    }
    
    if ((x_2952806271 < y_2952806272)) {
    result_2952806273 = -1;
    break BeforeRet;
    }
    
    result_2952806273 = 1;
    break BeforeRet;
  };

  return result_2952806273;

}

function selectCenterNode_2952806224(self_2952806225) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2952806257(a_2952806276, b_2952806277) {
      var result_2952806282 = 0;

        result_2952806282 = cmp_2952806269(a_2952806276.Field0, b_2952806277.Field0);

      return result_2952806282;

    }

    var nodes_2952806232 = [];
    Label1: {
      var layout_2952806236 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2952806237 = ({x: 0.0, y: 0.0});
      var i_2952806537 = 0;
      var L_2952806538 = (self_2952806225.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952806537 < L_2952806538)) break Label3;
            layout_2952806236 = self_2952806225.lastLayouts[chckIndx(i_2952806537, 0, (self_2952806225.lastLayouts).length - 1)]["Field0"];
            offset_2952806237 = self_2952806225.lastLayouts[chckIndx(i_2952806537, 0, (self_2952806225.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2952806238 = 0;
              var node_2952806239 = null;
              var n_2952806528 = layout_2952806236.root;
              var idx_2952806529 = -1;
              var i_2952806530 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2952806529 == -1)) {
                    var colontmp__2952806533 = nimCopy(null, {Field0: i_2952806530, Field1: n_2952806528}, NTI3087007967);
                    i_2952806238 = colontmp__2952806533["Field0"];
                    node_2952806239 = colontmp__2952806533["Field1"];
                    if ((!((node_2952806239.node == null)) && (0 < len_3087007969(node_2952806239)))) {
                    var bounds_2952806243 = absoluteBounds_3087009534(node_2952806239);
                    if (intersects_2097152177(rect_2113929234(0.0, 0.0, self_2952806225.lastBounds.w, self_2952806225.lastBounds.h), HEX2B_2097152155(bounds_2952806243, vec2_2130707293(0.0, offset_2952806237.y)))) {
                    nodes_2952806232.push({Field0: (bounds_2952806243.y + offset_2952806237.y), Field1: node_2952806239});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2952806529, 1) < len_3087007969(n_2952806528))) {
                    n_2952806528 = HEX5BHEX5D_3087007956(n_2952806528, addInt(idx_2952806529, 1));
                    idx_2952806529 = -1;
                    }
                    else {
                      var oHEX60gensym5_2952806534 = next_3087007975(n_2952806528);
                      if (!isSome_3087008057(oHEX60gensym5_2952806534)) Temporary9 = false; else {                        var ne_2952806535 = get_3087008077(oHEX60gensym5_2952806534);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2952806528 == null));                      }                    if (Temporary8) {
                    n_2952806528 = ne_2952806535;
                    idx_2952806529 = -1;
                    }
                    else {
                    if (((!((n_2952806528.parent == null)) && !((n_2952806528 == null))) && !((n_2952806528.parent == null)))) {
                    idx_2952806529 = index_3087007903(n_2952806528);
                    n_2952806528 = n_2952806528.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2952806530 = addInt(i_2952806530, 1);
                    }
                  }
              };
            };
            i_2952806537 = addInt(i_2952806537, 1);
            if (!(((self_2952806225.lastLayouts).length == L_2952806538))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2952806289(nodes_2952806232, HEX3Aanonymous_2952806257, 1);
    if ((0 < (nodes_2952806232).length)) {
    var firstY_2952806403 = nodes_2952806232[chckIndx(0, 0, (nodes_2952806232).length - 1)].Field0;
    var lastY_2952806407 = nodes_2952806232[chckIndx((nodes_2952806232).length - 1, 0, (nodes_2952806232).length - 1)].Field0;
    var middleY_2952806408 = ((firstY_2952806403 + lastY_2952806407) * 0.5);
    Label10: {
      var i_2952806441 = 0;
      var y_2952806442 = 0.0;
      var node_2952806443 = null;
      var i_2952806542 = 0;
      var L_2952806543 = (nodes_2952806232).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2952806542 < L_2952806543)) break Label12;
            i_2952806441 = i_2952806542;
            y_2952806442 = nodes_2952806232[chckIndx(i_2952806542, 0, (nodes_2952806232).length - 1)]["Field0"];
            node_2952806443 = nodes_2952806232[chckIndx(i_2952806542, 0, (nodes_2952806232).length - 1)]["Field1"];
            if (((i_2952806441 == (nodes_2952806232).length - 1) || (middleY_2952806408 < nodes_2952806232[chckIndx(addInt(i_2952806441, 1), 0, (nodes_2952806232).length - 1)].Field0))) {
            nodeHEX3D_2952793820(self_2952806225, node_2952806443.node);
            break Label10;
            }
            
            i_2952806542 = addInt(i_2952806542, 1);
            if (!(((nodes_2952806232).length == L_2952806543))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2952806220(self_2952806510) {
    selectCenterNode_2952806224(self_2952806510);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2952806220(this));};

function scroll_2952806560(self_2952806561, amount_2952806562) {
    HEX2BHEX3D_855640304(self_2952806561, "scrollOffset", amount_2952806562);

  
}

function scrollJsWrapper_2952806556(self_2952806595, amount_2952806596) {
    scroll_2952806560(self_2952806595, amount_2952806596);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2952806556(this, amount_));};

function scrollOutput_2952806622(self_2952806623, arg_2952806624) {
    switch (toJSStr(arg_2952806624)) {
    case "home":
      executionOutput_2952790070[0].scroll = (executionOutput_2952790070[0].lines).length;
      break;
    case "end":
      executionOutput_2952790070[0].scroll = 0;
      break;
    default: 
      executionOutput_2952790070[0].scroll = clamp_1660945119(addInt(executionOutput_2952790070[0].scroll, nsuParseInt(arg_2952806624)), 0, (executionOutput_2952790070[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2952806618(self_2952806664, arg_2952806665) {
    scrollOutput_2952806622(self_2952806664, arg_2952806665);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2952806618(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2952806870 = 0;
      var last_2952806871 = 0;
      var eolpos_2952806872 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2952806871 < (s_855639240).length) && !((ConstSet213[s_855639240[chckIndx(last_2952806871, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2952806871 = addInt(last_2952806871, 1);
                }
            };
            eolpos_2952806872 = last_2952806871;
            if ((last_2952806871 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2952806871, 0, (s_855639240).length - 1)] == 10)) {
            last_2952806871 = addInt(last_2952806871, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2952806871, 0, (s_855639240).length - 1)] == 13)) {
            last_2952806871 = addInt(last_2952806871, 1);
            if (((last_2952806871 < (s_855639240).length) && (s_855639240[chckIndx(last_2952806871, 0, (s_855639240).length - 1)] == 10))) {
            last_2952806871 = addInt(last_2952806871, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2952806871, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2952806872, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2952806870, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2952806867 = 0;
              colontmp__2952806867 = count_855639241;
              var res_2952806868 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2952806868 <= colontmp__2952806867)) break Label9;
                    j_855639250 = res_2952806868;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2952806868 = addInt(res_2952806868, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2952806872 == last_2952806871)) {
            break Label2;
            }
            
            first_2952806870 = last_2952806871;
          }
      };
    };

  return result_855639243;

}

function HEX24_3019916972(graph_3019916973) {
  var result_3019916974 = [];

    result_3019916974 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3019916974.push.apply(result_3019916974, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3019916973.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3019916974;

}

function toString_3003174380(HEX3Atmp_3003121877) {
  var result_3003174381 = [];

  BeforeRet: {
    var HEX3Atmp_3003121878 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_3003174477 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_3003174478 = null;
      Label2: {
        var node_2952806741 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806742 = HEX3Atmp_3003121877.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952806742 == null))) break Label4;
              node_2952806741 = nimCopy(node_2952806741, it_2952806742.value, NTI3003121726);
              var colontmp__2952806745 = nimCopy(null, {Field0: nimCopy(null, node_2952806741.key, NTI3019898905), Field1: node_2952806741.val}, NTI3003152662);
              keyHEX60gensym50_3003174477 = nimCopy(keyHEX60gensym50_3003174477, colontmp__2952806745["Field0"], NTI3019898905);
              valueHEX60gensym50_3003174478 = colontmp__2952806745["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym50_3003174477) || [],[32,45,62,32] || [],HEX24_2986346455(valueHEX60gensym50_3003174478) || [],[10] || []));;
              it_2952806742 = it_2952806742.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym51_3003174574 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_3003174575 = null;
      Label6: {
        var node_2952806751 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806752 = HEX3Atmp_3003121877.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_2952806752 == null))) break Label8;
              node_2952806751 = nimCopy(node_2952806751, it_2952806752.value, NTI3003121799);
              var colontmp__2952806755 = nimCopy(null, {Field0: nimCopy(null, node_2952806751.key, NTI3019898905), Field1: node_2952806751.val}, NTI3003152715);
              keyHEX60gensym51_3003174574 = nimCopy(keyHEX60gensym51_3003174574, colontmp__2952806755["Field0"], NTI3019898905);
              valueHEX60gensym51_3003174575 = colontmp__2952806755["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym51_3003174574) || [],[32,45,62,32] || [],HEX24_3087009962(valueHEX60gensym51_3003174575) || [],[10] || []));;
              it_2952806752 = it_2952806752.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label9: {
      var keyHEX60gensym52_3003174671 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_3003174672 = null;
      Label10: {
        var node_2952806762 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806763 = HEX3Atmp_3003121877.itemsSymbol.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_2952806763 == null))) break Label12;
              node_2952806762 = nimCopy(node_2952806762, it_2952806763.value, NTI3003121863);
              var colontmp__2952806766 = nimCopy(null, {Field0: nimCopy(null, node_2952806762.key, NTI3019898905), Field1: node_2952806762.val}, NTI3003152768);
              keyHEX60gensym52_3003174671 = nimCopy(keyHEX60gensym52_3003174671, colontmp__2952806766["Field0"], NTI3019898905);
              valueHEX60gensym52_3003174672 = colontmp__2952806766["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym52_3003174671) || [],[32,45,62,32] || [],HEX24_3087008904(valueHEX60gensym52_3003174672) || [],[10] || []));;
              it_2952806763 = it_2952806763.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label13: {
      var keyHEX60gensym53_3003174768 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3003174769 = null;
      Label14: {
        var node_2952806772 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806773 = HEX3Atmp_3003121877.itemsFunctionExecutionContext.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_2952806773 == null))) break Label16;
              node_2952806772 = nimCopy(node_2952806772, it_2952806773.value, NTI3003121927);
              var colontmp__2952806776 = nimCopy(null, {Field0: nimCopy(null, node_2952806772.key, NTI3019898905), Field1: node_2952806772.val}, NTI3003152821);
              keyHEX60gensym53_3003174768 = nimCopy(keyHEX60gensym53_3003174768, colontmp__2952806776["Field0"], NTI3019898905);
              valueHEX60gensym53_3003174769 = colontmp__2952806776["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym53_3003174768) || [],[32,45,62,32] || [],HEX24_3087008571(valueHEX60gensym53_3003174769) || [],[10] || []));;
              it_2952806773 = it_2952806773.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label17: {
      var keyHEX60gensym54_3003174856 = null;
      var valueHEX60gensym54_3003174857 = null;
      Label18: {
        var node_2952806783 = ({key: null, val: null});
        var it_2952806784 = HEX3Atmp_3003121877.queryCacheType.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_2952806784 == null))) break Label20;
              node_2952806783 = nimCopy(node_2952806783, it_2952806784.value, NTI3003122029);
              var colontmp__2952806787 = nimCopy(null, {Field0: node_2952806783.key, Field1: node_2952806783.val}, NTI3003152874);
              keyHEX60gensym54_3003174856 = colontmp__2952806787["Field0"];
              valueHEX60gensym54_3003174857 = colontmp__2952806787["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym54_3003174856) || [],[32,45,62,32] || [],HEX24_3087008180(valueHEX60gensym54_3003174857) || [],[10] || []));;
              it_2952806784 = it_2952806784.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label21: {
      var keyHEX60gensym55_3003174953 = null;
      var valueHEX60gensym55_3003174954 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label22: {
        var node_2952806794 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806795 = HEX3Atmp_3003121877.queryCacheValue.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_2952806795 == null))) break Label24;
              node_2952806794 = nimCopy(node_2952806794, it_2952806795.value, NTI3003122104);
              var colontmp__2952806798 = nimCopy(null, {Field0: node_2952806794.key, Field1: nimCopy(null, node_2952806794.val, NTI3087007751)}, NTI3003152921);
              keyHEX60gensym55_3003174953 = colontmp__2952806798["Field0"];
              valueHEX60gensym55_3003174954 = nimCopy(valueHEX60gensym55_3003174954, colontmp__2952806798["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym55_3003174953) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym55_3003174954) || [],[10] || []));;
              it_2952806795 = it_2952806795.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label25: {
      var keyHEX60gensym56_3003175041 = null;
      var valueHEX60gensym56_3003175042 = ({val: null});
      Label26: {
        var node_2952806805 = ({key: null, val: ({val: null})});
        var it_2952806806 = HEX3Atmp_3003121877.queryCacheSymbol.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_2952806806 == null))) break Label28;
              node_2952806805 = nimCopy(node_2952806805, it_2952806806.value, NTI3003122175);
              var colontmp__2952806809 = nimCopy(null, {Field0: node_2952806805.key, Field1: nimCopy(null, node_2952806805.val, NTI3087008904)}, NTI3003152968);
              keyHEX60gensym56_3003175041 = colontmp__2952806809["Field0"];
              valueHEX60gensym56_3003175042 = nimCopy(valueHEX60gensym56_3003175042, colontmp__2952806809["Field1"], NTI3087008904);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym56_3003175041) || [],[32,45,62,32] || [],HEX24_3003175100(valueHEX60gensym56_3003175042) || [],[10] || []));;
              it_2952806806 = it_2952806806.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label29: {
      var keyHEX60gensym57_3003175207 = null;
      var valueHEX60gensym57_3003175208 = null;
      Label30: {
        var node_2952806816 = ({key: null, val: null});
        var it_2952806817 = HEX3Atmp_3003121877.queryCacheSymbols.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_2952806817 == null))) break Label32;
              node_2952806816 = nimCopy(node_2952806816, it_2952806817.value, NTI3003122248);
              var colontmp__2952806820 = nimCopy(null, {Field0: node_2952806816.key, Field1: node_2952806816.val}, NTI3003153062);
              keyHEX60gensym57_3003175207 = colontmp__2952806820["Field0"];
              valueHEX60gensym57_3003175208 = colontmp__2952806820["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym57_3003175207) || [],[32,45,62,32] || [],HEX24_3003175266(valueHEX60gensym57_3003175208) || [],[10] || []));;
              it_2952806817 = it_2952806817.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label33: {
      var keyHEX60gensym58_3003175455 = null;
      var valueHEX60gensym58_3003175456 = null;
      Label34: {
        var node_2952806827 = ({key: null, val: null});
        var it_2952806828 = HEX3Atmp_3003121877.queryCacheSymbolType.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_2952806828 == null))) break Label36;
              node_2952806827 = nimCopy(node_2952806827, it_2952806828.value, NTI3003122314);
              var colontmp__2952806831 = nimCopy(null, {Field0: node_2952806827.key, Field1: node_2952806827.val}, NTI3003153195);
              keyHEX60gensym58_3003175455 = colontmp__2952806831["Field0"];
              valueHEX60gensym58_3003175456 = colontmp__2952806831["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008904(keyHEX60gensym58_3003175455) || [],[32,45,62,32] || [],HEX24_3087008180(valueHEX60gensym58_3003175456) || [],[10] || []));;
              it_2952806828 = it_2952806828.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label37: {
      var keyHEX60gensym59_3003175552 = null;
      var valueHEX60gensym59_3003175553 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label38: {
        var node_2952806838 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806839 = HEX3Atmp_3003121877.queryCacheSymbolValue.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_2952806839 == null))) break Label40;
              node_2952806838 = nimCopy(node_2952806838, it_2952806839.value, NTI3003122389);
              var colontmp__2952806842 = nimCopy(null, {Field0: node_2952806838.key, Field1: nimCopy(null, node_2952806838.val, NTI3087007751)}, NTI3003153242);
              keyHEX60gensym59_3003175552 = colontmp__2952806842["Field0"];
              valueHEX60gensym59_3003175553 = nimCopy(valueHEX60gensym59_3003175553, colontmp__2952806842["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008904(keyHEX60gensym59_3003175552) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym59_3003175553) || [],[10] || []));;
              it_2952806839 = it_2952806839.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label41: {
      var keyHEX60gensym60_3003175649 = null;
      var valueHEX60gensym60_3003175650 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_2952806849 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806850 = HEX3Atmp_3003121877.queryCacheFunctionExecution.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_2952806850 == null))) break Label44;
              node_2952806849 = nimCopy(node_2952806849, it_2952806850.value, NTI3003122455);
              var colontmp__2952806853 = nimCopy(null, {Field0: node_2952806849.key, Field1: nimCopy(null, node_2952806849.val, NTI3087007751)}, NTI3003153289);
              keyHEX60gensym60_3003175649 = colontmp__2952806853["Field0"];
              valueHEX60gensym60_3003175650 = nimCopy(valueHEX60gensym60_3003175650, colontmp__2952806853["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008571(keyHEX60gensym60_3003175649) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym60_3003175650) || [],[10] || []));;
              it_2952806850 = it_2952806850.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label45: {
      var keyHEX60gensym61_3003175737 = null;
      var valueHEX60gensym61_3003175738 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label46: {
        var node_2952806860 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_2952806861 = HEX3Atmp_3003121877.queryCacheNodeLayout.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_2952806861 == null))) break Label48;
              node_2952806860 = nimCopy(node_2952806860, it_2952806861.value, NTI3003122530);
              var colontmp__2952806864 = nimCopy(null, {Field0: node_2952806860.key, Field1: nimCopy(null, node_2952806860.val, NTI3087007775)}, NTI3003153336);
              keyHEX60gensym61_3003175737 = colontmp__2952806864["Field0"];
              valueHEX60gensym61_3003175738 = nimCopy(valueHEX60gensym61_3003175738, colontmp__2952806864["Field1"], NTI3087007775);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087009962(keyHEX60gensym61_3003175737) || [],[32,45,62,32] || [],HEX24_3087009925(valueHEX60gensym61_3003175738) || [],[10] || []));;
              it_2952806861 = it_2952806861.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, nsuIndent(HEX24_3019916972(HEX3Atmp_3003121877.depGraph), 1, [124,32]));;
    result_3003174381 = nimCopy(null, HEX3Atmp_3003121878, NTI33554449);
    break BeforeRet;
  };

  return result_3003174381;

}

function dumpContext_2952806691(self_2952806692) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3003174380(ctx_2952790071)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2952806687(self_2952806720) {
    dumpContext_2952806691(self_2952806720);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2952806687(this));};

function getModeConfig_2952806875(self_2952806876, mode_2952806877) {
  var result_2952806878 = null;

  BeforeRet: {
    result_2952806878 = getEventHandlerConfig_1291849162(self_2952806876.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2952806877 || []));
    break BeforeRet;
  };

  return result_2952806878;

}

function setMode_2952806885(self_2952806886, mode_2952806887) {
        
function HEX3Aanonymous_2952806908(actionHEX60gensym989HEX60gensym990_2952806909, argHEX60gensym989HEX60gensym990_2952806910) {
          var result_2952806911 = 0;

          BeforeRet: {
            if (handlerHEX60gensym989_2952806896.config.handleActions) {
            var action_2952806912 = nimCopy(null, actionHEX60gensym989HEX60gensym990_2952806909, NTI33554449);
            var arg_2952806913 = nimCopy(null, argHEX60gensym989HEX60gensym990_2952806910, NTI33554449);
            var responseHEX60gensym989HEX60gensym990_2952806914 = handleAction_2952806156(self_2952806886, action_2952806912, arg_2952806913);
            if (handlerHEX60gensym989_2952806896.config.consumeAllActions) {
            result_2952806911 = 3;
            break BeforeRet;
            }
            
            result_2952806911 = responseHEX60gensym989HEX60gensym990_2952806914;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym989_2952806896.config.consumeAllActions) {
            result_2952806911 = 3;
            break BeforeRet;
            }
            else {
              result_2952806911 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2952806911;

        }
        
function HEX3Aanonymous_2952806916(inputHEX60gensym989HEX60gensym991_2952806917) {
          var result_2952806918 = 0;

          BeforeRet: {
            if (handlerHEX60gensym989_2952806896.config.handleInputs) {
            var input_2952806919 = nimCopy(null, inputHEX60gensym989HEX60gensym991_2952806917, NTI33554449);
            result_2952806918 = 1;
            break BeforeRet;
            }
            else {
              result_2952806918 = 1;
              break BeforeRet;
            }
            
          };

          return result_2952806918;

        }

    if (((mode_2952806887).length == 0)) {
    self_2952806886.modeEventHandler = null;
    }
    else {
      var config_2952806888 = getModeConfig_2952806875(self_2952806886, mode_2952806887);
      Label1: {
        var handlerHEX60gensym989_2952806896 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym989_2952806896.config = config_2952806888;
        handlerHEX60gensym989_2952806896.dfaInternal = buildDFA_2080374847(config_2952806888);
        handlerHEX60gensym989_2952806896.handleAction = HEX3Aanonymous_2952806908;
        handlerHEX60gensym989_2952806896.handleInput = HEX3Aanonymous_2952806916;
      };
      self_2952806886.modeEventHandler = handlerHEX60gensym989_2952806896;
    }
    
    self_2952806886.currentMode = nimCopy(null, mode_2952806887, NTI33554449);

  
}

function setModeJsWrapper2_2952806881(self_2952806948, mode_2952806949) {
    setMode_2952806885(self_2952806948, mode_2952806949);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2952806881(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2952806976(self_2952806977) {
  var result_2952806978 = [];

  BeforeRet: {
    result_2952806978 = nimCopy(null, self_2952806977.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2952806978;

}

function modeJsWrapper2_2952806972(self_2952807007) {
  var result_2952807008 = [];

    result_2952807008 = nimCopy(null, mode_2952806976(self_2952807007), NTI33554449);

  return result_2952807008;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2952806972(this));};

function getContextWithMode_2952807033(self_2952807034, context_2952807035) {
  var result_2952807036 = [];

  BeforeRet: {
    result_2952807036 = nimCopy(null, (context_2952807035 || []).concat([46] || [],self_2952807034.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2952807036;

}

function getContextWithModeJsWrapper2_2952807029(self_2952807066, context_2952807067) {
  var result_2952807068 = [];

    result_2952807068 = nimCopy(null, getContextWithMode_2952807033(self_2952807066, context_2952807067), NTI33554449);

  return result_2952807068;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2952807029(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function markDirty_2449473557(self_2449473558) {
    if (!(self_2449473558.mDirty)) {
    invoke_2382364734(self_2449473558.onMarkedDirty);
    }
    
    self_2449473558.mDirty = true;

  
}

function accept_3221225858(self_3221225859) {
    if ((self_3221225859.selected < (self_3221225859.completions).length)) {
    self_3221225859.handleItemConfirmed(self_3221225859.completions[chckIndx(self_3221225859.selected, 0, (self_3221225859.completions).length - 1)]);
    }
    
    popPopup_1291849115(self_3221225859.editor, self_3221225859);
    markDirty_2449473557(self_3221225859);

  
}

function acceptJsWrapper_3221225854(self_3221225915) {
    accept_3221225858(self_3221225915);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3221225854(this));};

function cancel_3221225957(self_3221225958) {
    if (!((self_3221225958.handleCanceled == null))) {
    self_3221225958.handleCanceled();
    }
    
    popPopup_1291849115(self_3221225958.editor, self_3221225958);
    markDirty_2449473557(self_3221225958);

  
}

function cancelJsWrapper_3221225953(self_3221225992) {
    cancel_3221225957(self_3221225992);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3221225953(this));};

function prev_3221226013(self_3221226014) {
    var Temporary1;

    if (((self_3221226014.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3221226014.selected, (self_3221226014.completions).length), 1), (self_3221226014.completions).length);
    }
    
    self_3221226014.selected = Temporary1;
    if (((0 < (self_3221226014.completions).length) && !((self_3221226014.handleItemSelected == null)))) {
    self_3221226014.handleItemSelected(self_3221226014.completions[chckIndx(self_3221226014.selected, 0, (self_3221226014.completions).length - 1)]);
    }
    
    markDirty_2449473557(self_3221226014);

  
}

function prevJsWrapper_3221226009(self_3221226060) {
    prev_3221226013(self_3221226060);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3221226009(this));};

function next_3221226081(self_3221226082) {
    var Temporary1;

    if (((self_3221226082.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3221226082.selected, 1), (self_3221226082.completions).length);
    }
    
    self_3221226082.selected = Temporary1;
    if (((0 < (self_3221226082.completions).length) && !((self_3221226082.handleItemSelected == null)))) {
    self_3221226082.handleItemSelected(self_3221226082.completions[chckIndx(self_3221226082.selected, 0, (self_3221226082.completions).length - 1)]);
    }
    
    markDirty_2449473557(self_3221226082);

  
}

function nextJsWrapper_3221226077(self_3221226125) {
    next_3221226081(self_3221226125);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3221226077(this));};

function getBackend_1291854145(self_1291854146) {
  var result_1291854147 = 0;

  BeforeRet: {
    result_1291854147 = self_1291854146.backend;
    break BeforeRet;
  };

  return result_1291854147;

}

function getBackendJsWrapper_1291854141(self_1291854198) {
  var result_1291854199 = 0;

    result_1291854199 = getBackend_1291854145(self_1291854198);

  return result_1291854199;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854141(this));};

function get_2315255863(self_2315255865, otherwise_2315255866) {
    var Temporary1;

  var result_2315255867 = [];

    if (isSome_2315255872(self_2315255865)) {
    Temporary1 = self_2315255865.val;
    }
    else {
    Temporary1 = otherwise_2315255866;
    }
    
    result_2315255867 = nimCopy(null, Temporary1, NTI33554449);

  return result_2315255867;

}

function isSome_2818578798(self_2818578800) {
  var result_2818578801 = false;

    result_2818578801 = !((self_2818578800.val == null));

  return result_2818578801;

}

function map_1291854418(self_1291854421, callback_1291854423) {
    var Temporary1;

  var result_1291854424 = ({val: [], has: false});

    if (isSome_2818578798(self_1291854421)) {
    Temporary1 = some_2248146978(callback_1291854423(self_1291854421.val));
    }
    else {
    Temporary1 = none_2315255831();
    }
    
    result_1291854424 = nimCopy(result_1291854424, Temporary1, NTI2315255829);

  return result_1291854424;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854532(a_1291854534, opt_1291854535) {
  var result_1291854536 = null;

    result_1291854536 = HEX25_1627391792(a_1291854534);

  return result_1291854536;

}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854599(a_1291854601) {
  var result_1291854602 = [];

    result_1291854602 = nimCopy(null, names_1291854604[chckIndx(subInt(a_1291854601, 0), 0, (names_1291854604).length - 1)], NTI33554449);

  return result_1291854602;

}

function toJson_1291854584(a_1291854586, opt_1291854587) {
    var Temporary1;

  var result_1291854588 = null;

    switch (opt_1291854587.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854586);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854599(a_1291854586), opt_1291854587);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854586, NTI1291845663), opt_1291854587);
      break;
    }
    result_1291854588 = Temporary1;

  return result_1291854588;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet214[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet215[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet216[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet217[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855116 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet218[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855116 = nimCopy(colontmp__1291855116, Temporary6.fields, NTI1627389966);
        var L_1291855118 = len_1627392114(colontmp__1291855116);
        if ((0 < colontmp__1291855116.counter)) {
        var h_1291855119 = colontmp__1291855116.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855119)) break Label8;
              var nxt_1291855121 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855116.data[chckIndx(h_1291855119, 0, (colontmp__1291855116.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet219[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855116) == L_1291855118))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855119 = nxt_1291855121;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855123 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet220[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855123 = Temporary11.elems;
        var i_1291855125 = 0;
        var L_1291855126 = (colontmp__1291855123).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855125 < L_1291855126)) break Label13;
              i_1627394330 = colontmp__1291855123[chckIndx(i_1291855125, 0, (colontmp__1291855123).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet221[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855125 = addInt(i_1291855125, 1);
              if (!(((colontmp__1291855123).length == L_1291855126))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818588330(a_2818588332, opt_2818588333) {
  var result_2818588334 = null;

    result_2818588334 = HEX25_1627391795(a_2818588332);

  return result_2818588334;

}

function symbolName_1291854733(a_1291854735) {
  var result_1291854736 = [];

    result_1291854736 = nimCopy(null, names_1291854738[chckIndx(subInt(a_1291854735, 0), 0, (names_1291854738).length - 1)], NTI33554449);

  return result_1291854736;

}

function toJson_1291854717(a_1291854719, opt_1291854720) {
    var Temporary1;

  var result_1291854721 = null;

    switch (opt_1291854720.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854719);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854733(a_1291854719), opt_1291854720);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854719, NTI1627389955), opt_1291854720);
      break;
    }
    result_1291854721 = Temporary1;

  return result_1291854721;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854827(a_1291854829, opt_1291854830) {
  var result_1291854831 = null;

    result_1291854831 = HEX25_1627391789(a_1291854829);

  return result_1291854831;

}

function toJson_1291854837(a_1291854839, opt_1291854840) {
  var result_1291854841 = null;

    result_1291854841 = HEX25_1627391792(a_1291854839);

  return result_1291854841;

}

function toJsonHook_1291854930(t_1291854934, opt_1291854935) {
  var result_1291854936 = null;

    result_1291854936 = newJObject_1627390051();
    Label1: {
      var k_1291854941 = [];
      var v_1291854942 = null;
      var L_1291855129 = len_1627392114(t_1291854934);
      if ((0 < t_1291854934.counter)) {
      var h_1291855130 = t_1291854934.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855130)) break Label3;
            var nxt_1291855132 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field0)) {
            k_1291854941 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field2;
            v_1291854942 = t_1291854934.data[chckIndx(h_1291855130, 0, (t_1291854934.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854936, k_1291854941, toJson_1291854688(v_1291854942, opt_1291854935));
            if (!((len_1627392114(t_1291854934) == L_1291855129))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855130 = nxt_1291855132;
          }
      };
      }
      
    };

  return result_1291854936;

}

function toJson_1291854852(a_1291854854, opt_1291854855) {
  var result_1291854856 = null;

    result_1291854856 = toJsonHook_1291854930(a_1291854854, opt_1291854855);

  return result_1291854856;

}

function toJson_1291854947(a_1291854949, opt_1291854950) {
  var result_1291854951 = null;

    result_1291854951 = newJArray_1627390082();
    Label1: {
      var ai_1291854958 = null;
      var i_1291855134 = 0;
      var L_1291855135 = (a_1291854949).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855134 < L_1291855135)) break Label3;
            ai_1291854958 = a_1291854949[chckIndx(i_1291855134, 0, (a_1291854949).length - 1)];
            add_1627390190(result_1291854951, toJson_1291854688(ai_1291854958, opt_1291854950));
            i_1291855134 = addInt(i_1291855134, 1);
            if (!(((a_1291854949).length == L_1291855135))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854951;

}

function toJson_1291854700(a_1291854702, opt_1291854703) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854704 = null;

    result_1291854704 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [105,115,85,110,113,117,111,116,101,100], toJson_2818588330(a_1291854702.isUnquoted, opt_1291854703));
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [107,105,110,100], toJson_1291854717(a_1291854702.kind, opt_1291854703));
    switch (a_1291854702.kind) {
    case 4:
      var Temporary1 = a_1291854702;
      if (ConstSet222[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854703));
      break;
    case 2:
      var Temporary2 = a_1291854702;
      if (ConstSet223[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [110,117,109], toJson_1291854827(Temporary2.num, opt_1291854703));
      break;
    case 3:
      var Temporary3 = a_1291854702;
      if (ConstSet224[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,110,117,109], toJson_1291854837(Temporary3.fnum, opt_1291854703));
      break;
    case 1:
      var Temporary4 = a_1291854702;
      if (ConstSet225[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [98,118,97,108], toJson_2818588330(Temporary4.bval, opt_1291854703));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854702;
      if (ConstSet226[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,105,101,108,100,115], toJson_1291854852(Temporary5.fields, opt_1291854703));
      break;
    case 6:
      var Temporary6 = a_1291854702;
      if (ConstSet227[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [101,108,101,109,115], toJson_1291854947(Temporary6.elems, opt_1291854703));
      break;
    }

  return result_1291854704;

}

function toJson_1291854688(a_1291854690, opt_1291854691) {
  var result_1291854692 = null;

    switch (opt_1291854691.jsonNodeMode) {
    case 0:
      result_1291854692 = a_1291854690;
      break;
    case 1:
      result_1291854692 = copy_1627394272(a_1291854690);
      break;
    case 2:
      if ((a_1291854690 == null)) {
      result_1291854692 = newJNull_1627390049();
      }
      else {
        result_1291854692 = toJson_1291854700(a_1291854690, opt_1291854691);
      }
      
      break;
    }

  return result_1291854692;

}

function toJson_1291854571(a_1291854573, opt_1291854574) {
  var result_1291854575 = null;

    result_1291854575 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [107,105,110,100], toJson_1291854584(a_1291854573.kind, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [105,100], toJson_1811939932(a_1291854573.id, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [110,97,109,101], toJson_1811939932(a_1291854573.name, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [115,101,116,116,105,110,103,115], toJson_1291854688(a_1291854573.settings, opt_1291854574));

  return result_1291854575;

}

function toJson_1291854559(a_1291854561, opt_1291854562) {
  var result_1291854563 = null;

    result_1291854563 = newJArray_1627390082();
    Label1: {
      var ai_1291854570 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855112 = 0;
      var L_1291855113 = (a_1291854561).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855112 < L_1291855113)) break Label3;
            ai_1291854570 = a_1291854561[chckIndx(i_1291855112, 0, (a_1291854561).length - 1)];
            add_1627390190(result_1291854563, toJson_1291854571(ai_1291854570, opt_1291854562));
            i_1291855112 = addInt(i_1291855112, 1);
            if (!(((a_1291854561).length == L_1291855113))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854563;

}

function toJson_1291854975(a_1291854977, opt_1291854978) {
  var result_1291854979 = null;

    result_1291854979 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291854977.filename, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,115,116], toJson_2818588330(a_1291854977.ast, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291854977.languageID, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,112,112,70,105,108,101], toJson_2818588330(a_1291854977.appFile, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291854977.workspaceId, opt_1291854978));

  return result_1291854979;

}

function toJson_1291854963(a_1291854965, opt_1291854966) {
  var result_1291854967 = null;

    result_1291854967 = newJArray_1627390082();
    Label1: {
      var ai_1291854974 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855139 = 0;
      var L_1291855140 = (a_1291854965).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855139 < L_1291855140)) break Label3;
            ai_1291854974 = a_1291854965[chckIndx(i_1291855139, 0, (a_1291854965).length - 1)];
            add_1627390190(result_1291854967, toJson_1291854975(ai_1291854974, opt_1291854966));
            i_1291855139 = addInt(i_1291855139, 1);
            if (!(((a_1291854965).length == L_1291855140))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854967;

}

function toJson_1291854515(a_1291854517, opt_1291854518) {
  var result_1291854519 = null;

    result_1291854519 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [116,104,101,109,101], toJson_1811939932(a_1291854517.theme, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,83,105,122,101], toJson_1291854532(a_1291854517.fontSize, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854517.fontRegular, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854517.fontBold, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontBoldItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854559(a_1291854517.workspaceFolders, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291854963(a_1291854517.openEditors, opt_1291854518));

  return result_1291854519;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291855157 = 0;
      colontmp__1291855157 = subInt(len_855638790, 1);
      var res_1291855158 = colontmp__1291855157;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291855158)) break Label3;
            j_855638800 = res_1291855158;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291855158 = subInt(res_1291855158, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291855153 = 0;
      var L_1291855154 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855153 < L_1291855154)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291855153, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291855153 = addInt(i_1291855153, 1);
            if (!(((s_1627394347).length == L_1291855154))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291855161 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet230[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291855161 = Temporary2.elems;
        var i_1291855162 = 0;
        var L_1291855163 = (colontmp__1291855161).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855162 < L_1291855163)) break Label4;
              child_1627394384 = colontmp__1291855161[chckIndx(i_1291855162, 0, (colontmp__1291855161).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291855162 = addInt(i_1291855162, 1);
              if (!(((colontmp__1291855161).length == L_1291855163))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291855166 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet231[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855166 = nimCopy(colontmp__1291855166, Temporary6.fields, NTI1627389966);
        var L_1291855167 = len_1627392114(colontmp__1291855166);
        if ((0 < colontmp__1291855166.counter)) {
        var h_1291855168 = colontmp__1291855166.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855168)) break Label8;
              var nxt_1291855170 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291855166.data[chckIndx(h_1291855168, 0, (colontmp__1291855166.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291855166) == L_1291855167))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855168 = nxt_1291855170;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet232[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet233[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet234[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet235[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet236[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet228[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855143 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet229[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855143 = nimCopy(colontmp__1291855143, Temporary3.fields, NTI1627389966);
        var L_1291855144 = len_1627392114(colontmp__1291855143);
        if ((0 < colontmp__1291855143.counter)) {
        var h_1291855145 = colontmp__1291855143.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855145)) break Label5;
              var nxt_1291855147 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855143.data[chckIndx(h_1291855145, 0, (colontmp__1291855143.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855143) == L_1291855144))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855145 = nxt_1291855147;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet237[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet238[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet239[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet240[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855149 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet241[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855149 = subInt((Temporary12.elems).length, 1);
        var res_1291855150 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855150 <= colontmp__1291855149)) break Label14;
              i_1627394476 = res_1291855150;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet242[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855150 = addInt(res_1291855150, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853866(self_1291853867) {
              var Temporary5;
            
function HEX3Aanonymous_1291854402(wf_1291854413) {
              var result_1291854416 = [];

                result_1291854416 = nimCopy(null, HEX24_2046820589(wf_1291854413.id), NTI33554449);

              return result_1291854416;

            }
            
function HEX3Aanonymous_1291854473(wf_1291854484) {
              var result_1291854487 = [];

                result_1291854487 = nimCopy(null, HEX24_2046820589(wf_1291854484.id), NTI33554449);

              return result_1291854487;

            }

    var state_1291854314 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854314.theme = nimCopy(null, self_1291853867.theme.path, NTI33554449);
    if ((self_1291853867.backend == 1)) {
    state_1291854314.fontSize = self_1291853867.loadedFontSize;
    }
    else {
      state_1291854314.fontSize = fontSize_2768240784(self_1291853867.platform);
    }
    
    state_1291854314.fontRegular = nimCopy(null, self_1291853867.fontRegular, NTI33554449);
    state_1291854314.fontBold = nimCopy(null, self_1291853867.fontBold, NTI33554449);
    state_1291854314.fontItalic = nimCopy(null, self_1291853867.fontItalic, NTI33554449);
    state_1291854314.fontBoldItalic = nimCopy(null, self_1291853867.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854342 = null;
      var i_1291855102 = 0;
      var L_1291855103 = (self_1291853867.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855102 < L_1291855103)) break Label3;
            workspaceFolder_1291854342 = self_1291853867.workspace.folders[chckIndx(i_1291855102, 0, (self_1291853867.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2231369732)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2365587461)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2248146948)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854364 = Temporary5;
              state_1291854314.workspaceFolders.push({kind: kind_1291854364, id: HEX24_2046820589(workspaceFolder_1291854342.id), name: nimCopy(null, workspaceFolder_1291854342.name, NTI33554449), settings: settings_2181038102(workspaceFolder_1291854342)});;
            };
            i_1291855102 = addInt(i_1291855102, 1);
            if (!(((self_1291853867.workspace.folders).length == L_1291855103))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854390 = null;
      var i_1291855107 = 0;
      var L_1291855108 = (self_1291853867.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855107 < L_1291855108)) break Label8;
            view_1291854390 = self_1291853867.views[chckIndx(i_1291855107, 0, (self_1291853867.views).length - 1)];
            if (isObj(view_1291854390.document.m_type, NTI2818572427)) {
            var textDocument_1291854397 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, textDocument_1291854397.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854397.languageId, NTI33554449), appFile: textDocument_1291854397.appFile, workspaceId: get_2315255863(map_1291854418(textDocument_1291854397.workspace, HEX3Aanonymous_1291854402), [])});;
            }
            else {
            if (isObj(view_1291854390.document.m_type, NTI2952791498)) {
            var astDocument_1291854468 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, astDocument_1291854468.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854468.appFile, workspaceId: get_2315255863(map_1291854418(astDocument_1291854468.workspace, HEX3Aanonymous_1291854473), [])});;
            }
            }
            i_1291855107 = addInt(i_1291855107, 1);
            if (!(((self_1291853867.views).length == L_1291855108))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855008 = toJson_1291854515(state_1291854314, initToJsonOptions_1811939362());
    saveApplicationFile_2332033048(fs_2332033077, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855008, 2));
    saveApplicationFile_2332033048(fs_2332033077, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853867.options, 2));

  
}

function saveAppStateJsWrapper_1291854308(self_1291855089) {
    saveAppState_1291853866(self_1291855089);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854308(this));};

function requestRender_1291855177(self_1291855178, redrawEverything_1291855179) {
    requestRender_2768240746(self_1291855178.platform, redrawEverything_1291855179);

  
}

function requestRenderJsWrapper_1291855173(self_1291855207, redrawEverything_1291855208) {
    requestRender_1291855177(self_1291855207, redrawEverything_1291855208);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855173(this, redrawEverything_));};

function setHandleInputs_2080375138(config_2080375139, value_2080375140) {
    config_2080375139.handleInputs = value_2080375140;
    config_2080375139.revision = addInt(config_2080375139.revision, 1);

  
}

function setHandleInputs_1291855229(self_1291855230, context_1291855231, value_1291855232) {
    setHandleInputs_2080375138(getEventHandlerConfig_1291849162(self_1291855230, context_1291855231), value_1291855232);

  
}

function setHandleInputsJsWrapper_1291855225(self_1291855261, context_1291855262, value_1291855263) {
    setHandleInputs_1291855229(self_1291855261, context_1291855262, value_1291855263);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855225(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2080375145(config_2080375146, value_2080375147) {
    config_2080375146.handleActions = value_2080375147;
    config_2080375146.revision = addInt(config_2080375146.revision, 1);

  
}

function setHandleActions_1291855289(self_1291855290, context_1291855291, value_1291855292) {
    setHandleActions_2080375145(getEventHandlerConfig_1291849162(self_1291855290, context_1291855291), value_1291855292);

  
}

function setHandleActionsJsWrapper_1291855285(self_1291855321, context_1291855322, value_1291855323) {
    setHandleActions_1291855289(self_1291855321, context_1291855322, value_1291855323);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855285(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2080375152(config_2080375153, value_2080375154) {
    config_2080375153.consumeAllActions = value_2080375154;
    config_2080375153.revision = addInt(config_2080375153.revision, 1);

  
}

function setConsumeAllActions_1291855349(self_1291855350, context_1291855351, value_1291855352) {
    setConsumeAllActions_2080375152(getEventHandlerConfig_1291849162(self_1291855350, context_1291855351), value_1291855352);

  
}

function setConsumeAllActionsJsWrapper_1291855345(self_1291855381, context_1291855382, value_1291855383) {
    setConsumeAllActions_1291855349(self_1291855381, context_1291855382, value_1291855383);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855345(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2080375159(config_2080375160, value_2080375161) {
    config_2080375160.consumeAllInput = value_2080375161;
    config_2080375160.revision = addInt(config_2080375160.revision, 1);

  
}

function setConsumeAllInput_1291855409(self_1291855410, context_1291855411, value_1291855412) {
    setConsumeAllInput_2080375159(getEventHandlerConfig_1291849162(self_1291855410, context_1291855411), value_1291855412);

  
}

function setConsumeAllInputJsWrapper_1291855405(self_1291855441, context_1291855442, value_1291855443) {
    setConsumeAllInput_1291855409(self_1291855441, context_1291855442, value_1291855443);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855405(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855546(self_1291855547) {
    Label1: {
      var wf_1291855551 = null;
      var i_1291855589 = 0;
      var L_1291855590 = (self_1291855547.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855589 < L_1291855590)) break Label3;
            wf_1291855551 = self_1291855547.workspace.folders[chckIndx(i_1291855589, 0, (self_1291855547.workspace.folders).length - 1)];
            clearDirectoryCache_2181038106(wf_1291855551);
            i_1291855589 = addInt(i_1291855589, 1);
            if (!(((self_1291855547.workspace.folders).length == L_1291855590))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855542(self_1291855578) {
    clearWorkspaceCaches_1291855546(self_1291855578);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855542(this));};

function openWorkspaceKind_1291851100(workspaceFolder_1291851101) {
  var result_1291855465 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851101.m_type, NTI2231369732)) {
    result_1291855465 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2365587461)) {
    result_1291855465 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2248146948)) {
    result_1291855465 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,53,57,50,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855465;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291855671 = 0;
      colontmp__1291855671 = subInt((x_1627392045).length, 1);
      var res_1291855672 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291855672 <= colontmp__1291855671)) break Label3;
            i_1627392069 = res_1291855672;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291855672 = addInt(res_1291855672, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet243[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet244[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet245[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet246[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet247[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet248[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet249[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet250[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet251[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet252[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet253[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet254[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291855665 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet255[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291855665 = nimCopy(colontmp__1291855665, Temporary14.fields, NTI1627389966);
          var L_1291855666 = len_1627392114(colontmp__1291855665);
          if ((0 < colontmp__1291855665.counter)) {
          var h_1291855667 = colontmp__1291855665.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291855667)) break Label16;
                var nxt_1291855669 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291855665.data[chckIndx(h_1291855667, 0, (colontmp__1291855665.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet256[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet257[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291855665) == L_1291855666))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291855667 = nxt_1291855669;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function addWorkspaceFolder_1291851102(self_1291851103, workspaceFolder_1291851104) {
  var result_1291855492 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855496 = null;
      var i_1291855661 = 0;
      var L_1291855662 = (self_1291851103.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855661 < L_1291855662)) break Label3;
            wf_1291855496 = self_1291851103.workspace.folders[chckIndx(i_1291855661, 0, (self_1291851103.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851100(wf_1291855496) == openWorkspaceKind_1291851100(workspaceFolder_1291851104)) && HEX3DHEX3D_1627392026(settings_2181038102(wf_1291855496), settings_2181038102(workspaceFolder_1291851104)))) {
            result_1291855492 = false;
            break BeforeRet;
            }
            
            i_1291855661 = addInt(i_1291855661, 1);
            if (!(((self_1291851103.workspace.folders).length == L_1291855662))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820592(workspaceFolder_1291851104.id, idNone_2046820599())) {
    workspaceFolder_1291851104.id = nimCopy(workspaceFolder_1291851104.id, newId_2046820569(), NTI2046820355);
    }
    
    var fmtRes_1291855506 = [mnewString(0)];
    fmtRes_1291855506[0].push.apply(fmtRes_1291855506[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855506, 0, workspaceFolder_1291851104.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855506[0], NTI33554449)]);
    self_1291851103.workspace.folders.push(workspaceFolder_1291851104);;
    result_1291855492 = true;
    break BeforeRet;
  };

  return result_1291855492;

}

function initTable_2248149261(initialSize_2248149264) {
  var result_2248149265 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2248149267 = slotsNeeded_1308622891(chckRange(initialSize_2248149264, 0, 2147483647));
    result_2248149265.counter = 0;
    result_2248149265.data = new Array(chckRange(correctSizeHEX60gensym35_2248149267, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2248149267, 0, 2147483647) ; ++i) { result_2248149265.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2248149265;

}

function newWorkspaceFolderGithub_2248149248(user_2248149249, repository_2248149250, branchOrHash_2248149251) {
  var result_2248149252 = null;

    result_2248149252 = ({m_type: NTI2248146948, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2248149260 = [mnewString(0)];
    fmtRes_2248149260[0].push.apply(fmtRes_2248149260[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2248149260, 0, user_2248149249, []);
    fmtRes_2248149260[0].push.apply(fmtRes_2248149260[0], [47]);;
    formatValue_721420459(fmtRes_2248149260, 0, repository_2248149250, []);
    result_2248149252.baseUrl = nimCopy(null, fmtRes_2248149260[0], NTI33554449);
    result_2248149252.user = nimCopy(null, user_2248149249, NTI33554449);
    result_2248149252.repository = nimCopy(null, repository_2248149250, NTI33554449);
    result_2248149252.branchOrHash = nimCopy(null, branchOrHash_2248149251, NTI33554449);
    result_2248149252.cachedDirectoryListings = nimCopy(result_2248149252.cachedDirectoryListings, initTable_2248149261(32), NTI2248146956);
    result_2248149252.pathToSha = nimCopy(result_2248149252.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2248149280 = [mnewString(0)];
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2248149280, 0, user_2248149249, []);
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [47]);;
    formatValue_721420459(fmtRes_2248149280, 0, repository_2248149250, []);
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [47]);;
    formatValue_721420459(fmtRes_2248149280, 0, branchOrHash_2248149251, []);
    result_2248149252.name = nimCopy(null, fmtRes_2248149280[0], NTI33554449);

  return result_2248149252;

}

function openGithubWorkspace_1291855598(self_1291855599, user_1291855600, repository_1291855601, branchOrHash_1291855602) {
    var _ = addWorkspaceFolder_1291851102(self_1291855599, newWorkspaceFolderGithub_2248149248(user_1291855600, repository_1291855601, branchOrHash_1291855602));

  
}

function openGithubWorkspaceJsWrapper_1291855594(self_1291855632, user_1291855633, repository_1291855634, branchOrHash_1291855635) {
    openGithubWorkspace_1291855598(self_1291855632, user_1291855633, repository_1291855634, branchOrHash_1291855635);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855594(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2365589916(url_2365589917) {
  var result_2365589918 = null;

    result_2365589918 = ({m_type: NTI2365587461, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2365589918.baseUrl = nimCopy(null, url_2365589917, NTI33554449);
    var _ = updateWorkspaceName_2365587945(result_2365589918);

  return result_2365589918;

}

function openAbsytreeServerWorkspace_1291855680(self_1291855681, url_1291855682) {
    var _ = addWorkspaceFolder_1291851102(self_1291855681, newWorkspaceFolderAbsytreeServer_2365589916(url_1291855682));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855676(self_1291855710, url_1291855711) {
    openAbsytreeServerWorkspace_1291855680(self_1291855710, url_1291855711);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855676(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet258[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818582962(editor_2818582964, path_2818582965, default_2818582966) {
  var result_2818582971 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818582964 == null)) {
      result_2818582971 = default_2818582966;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2818582982 = HEX7BHEX7D_1627393316(editor_2818582964.options, nsuSplitString(path_2818582965, [46], -1));
      if ((nodeHEX60gensym165_2818582982 == null)) {
      result_2818582971 = default_2818582966;
      break BeforeRet;
      }
      
    };
    result_2818582971 = getBool_1627390147(nodeHEX60gensym165_2818582982, default_2818582966);
    break BeforeRet;
  };

  return result_2818582971;

}

function getFlag_1291848874(self_1291848875, flag_1291848876, default_1291848877) {
  var result_1291855736 = false;

  BeforeRet: {
    result_1291855736 = getOption_2818582962(self_1291848875, flag_1291848876, default_1291848877);
    break BeforeRet;
  };

  return result_1291855736;

}

function getFlagJsWrapper2_1291855728(self_1291855775, flag_1291855776, default_1291855777) {
  var result_1291855778 = false;

    result_1291855778 = getFlag_1291848874(self_1291855775, flag_1291855776, default_1291855777);

  return result_1291855778;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855728(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855813(editor_1291855815, path_1291855816, value_1291855817) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855815 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym273_1291855832 = nsuSplitString(path_1291855816, [46], -1);
      var nodeHEX60gensym273_1291855833 = editor_1291855815.options;
      Label2: {
        var keyHEX60gensym273_1291855852 = [];
        var colontmp__1291855920 = [];
        colontmp__1291855920 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym273_1291855832, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855921 = 0;
        var L_1291855922 = (colontmp__1291855920).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855921 < L_1291855922)) break Label4;
              keyHEX60gensym273_1291855852 = colontmp__1291855920[chckIndx(i_1291855921, 0, (colontmp__1291855920).length - 1)];
              if (!((nodeHEX60gensym273_1291855833.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym273_1291855833, keyHEX60gensym273_1291855852))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855833, keyHEX60gensym273_1291855852, newJObject_1627390051());
              }
              
              nodeHEX60gensym273_1291855833 = HEX5BHEX5D_1627393037(nodeHEX60gensym273_1291855833, keyHEX60gensym273_1291855852);
              i_1291855921 = addInt(i_1291855921, 1);
              if (!(((colontmp__1291855920).length == L_1291855922))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym273_1291855833 == null) || !((nodeHEX60gensym273_1291855833.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855833, HEX5BHEX5D_2701132581(pathItemsHEX60gensym273_1291855832, 1), newJBool_1627390046(value_1291855817));
    };
  };

  
}

function setFlag_1291848951(self_1291848952, flag_1291848953, value_1291848954) {
    setOption_1291855813(self_1291848952, flag_1291848953, value_1291848954);

  
}

function setFlagJsWrapper2_1291855805(self_1291855896, flag_1291855897, value_1291855898) {
    setFlag_1291848951(self_1291855896, flag_1291855897, value_1291855898);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855805(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848955(self_1291848956, flag_1291848957) {
    setFlag_1291848951(self_1291848956, flag_1291848957, !(getFlag_1291848874(self_1291848956, flag_1291848957, false)));

  
}

function toggleFlagJsWrapper_1291855926(self_1291855960, flag_1291855961) {
    toggleFlag_1291848955(self_1291855960, flag_1291855961);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855926(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291855982(self_1291855983, option_1291855984, value_1291855985) {
  BeforeRet: {
    if ((self_1291855983 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1291855989 = nsuSplitString(option_1291855984, [46], -1);
    var node_1291855990 = self_1291855983.options;
    Label1: {
      var key_1291856009 = [];
      var colontmp__1291856071 = [];
      colontmp__1291856071 = HEX5BHEX5D_2818588799(pathItems_1291855989, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856072 = 0;
      var L_1291856073 = (colontmp__1291856071).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856072 < L_1291856073)) break Label3;
            key_1291856009 = colontmp__1291856071[chckIndx(i_1291856072, 0, (colontmp__1291856071).length - 1)];
            if (!((node_1291855990.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291855990, key_1291856009))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291855990, key_1291856009, newJObject_1627390051());
            }
            
            node_1291855990 = HEX5BHEX5D_1627393037(node_1291855990, key_1291856009);
            i_1291856072 = addInt(i_1291856072, 1);
            if (!(((colontmp__1291856071).length == L_1291856073))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291855990 == null) || !((node_1291855990.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291855990, HEX5BHEX5D_2701132581(pathItems_1291855989, 1), value_1291855985);
  };

  
}

function setOptionJsWrapper_1291855978(self_1291856053, option_1291856054, value_1291856055) {
    setOption_1291855982(self_1291856053, option_1291856054, value_1291856055);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291855978(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856081(self_1291856082) {
    self_1291856082.closeRequested = true;

  
}

function quitJsWrapper_1291856077(self_1291856109) {
    quit_1291856081(self_1291856109);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856077(this));};

function changeFontSize_1291856125(self_1291856126, amount_1291856127) {
    fontSizeHEX3D_2768240776(self_1291856126.platform, (fontSize_2768240784(self_1291856126.platform) + amount_1291856127));
    requestRender_2768240746(self_1291856126.platform, true);

  
}

function changeFontSizeJsWrapper_1291856121(self_1291856155, amount_1291856156) {
    changeFontSize_1291856125(self_1291856155, amount_1291856156);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856121(this, amount_));};

function rawGet_1291848320(t_1291848323, key_1291848324, hc_1291848325, hc_1291848325_Idx) {
  var result_1291848326 = 0;

  BeforeRet: {
    hc_1291848325[hc_1291848325_Idx] = hash_1325400491(key_1291848324);
    if ((hc_1291848325[hc_1291848325_Idx] == 0)) {
    hc_1291848325[hc_1291848325_Idx] = 314159265;
    }
    
    if (((t_1291848323.data).length == 0)) {
    result_1291848326 = -1;
    break BeforeRet;
    }
    
    var h_1291848378 = (hc_1291848325[hc_1291848325_Idx] & (t_1291848323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0)) break Label2;
          if (((t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0 == hc_1291848325[hc_1291848325_Idx]) && eqStrings(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field1, key_1291848324))) {
          result_1291848326 = h_1291848378;
          break BeforeRet;
          }
          
          h_1291848378 = nextTry_1308622883(h_1291848378, (t_1291848323.data).length - 1);
        }
    };
    result_1291848326 = subInt(-1, h_1291848378);
  };

  return result_1291848326;

}

function mustRehash_1291851922(t_1291851924) {
  var result_1291851925 = false;

    if (!((t_1291851924.counter < (t_1291851924.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851925 = ((mulInt((t_1291851924.data).length, 2) < mulInt(t_1291851924.counter, 3)) || (subInt((t_1291851924.data).length, t_1291851924.counter) < 4));

  return result_1291851925;

}

function rawInsert_1291852371(t_1291852375, data_1291852376, data_1291852376_Idx, key_1291852377, val_1291852378, hc_1291852379, h_1291852380) {
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852377, NTI33554449);
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field2 = val_1291852378;
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field0 = hc_1291852379;

  
}

function enlarge_1291852077(t_1291852080) {
    var n_1291852083 = [];
    n_1291852083 = new Array(chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647) ; ++i) { n_1291852083[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852080.data; t_1291852080.data = n_1291852083; n_1291852083 = Temporary1;    Label2: {
      var i_1291852147 = 0;
      var colontmp__1291856483 = 0;
      colontmp__1291856483 = (n_1291852083).length - 1;
      var res_1291856484 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856484 <= colontmp__1291856483)) break Label4;
            i_1291852147 = res_1291856484;
            var eh_1291852201 = n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852201)) {
            var j_1291852205 = (eh_1291852201 & (t_1291852080.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852080.data[chckIndx(j_1291852205, 0, (t_1291852080.data).length - 1)].Field0)) break Label6;
                  j_1291852205 = nextTry_1308622883(j_1291852205, (t_1291852080.data).length - 1);
                }
            };
            rawInsert_1291852371(t_1291852080, t_1291852080, "data", n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field1, n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field2, eh_1291852201, j_1291852205);
            }
            
            res_1291856484 = addInt(res_1291856484, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852549(t_1291852552, key_1291852553, hc_1291852554) {
  var result_1291852555 = 0;

  BeforeRet: {
    if (((t_1291852552.data).length == 0)) {
    result_1291852555 = -1;
    break BeforeRet;
    }
    
    var h_1291852606 = (hc_1291852554 & (t_1291852552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0)) break Label2;
          if (((t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0 == hc_1291852554) && eqStrings(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field1, key_1291852553))) {
          result_1291852555 = h_1291852606;
          break BeforeRet;
          }
          
          h_1291852606 = nextTry_1308622883(h_1291852606, (t_1291852552.data).length - 1);
        }
    };
    result_1291852555 = subInt(-1, h_1291852606);
  };

  return result_1291852555;

}

function mgetOrPut_1291856207(t_1291856210, key_1291856211, val_1291856212) {
  var result_1291856213 = null;
  var result_1291856213_Idx = 0;

    if (((t_1291856210.data).length == 0)) {
    var correctSizeHEX60gensym330_1291856262 = slotsNeeded_1308622891(32);
    t_1291856210.counter = 0;
    t_1291856210.data = new Array(chckRange(correctSizeHEX60gensym330_1291856262, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym330_1291856262, 0, 2147483647) ; ++i) { t_1291856210.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856267 = [0];
    var index_1291856274 = rawGet_1291848320(t_1291856210, key_1291856211, hc_1291856267, 0);
    if ((index_1291856274 < 0)) {
    if (((t_1291856210.data).length == 0)) {
    var correctSizeHEX60gensym333_1291856323 = slotsNeeded_1308622891(32);
    t_1291856210.counter = 0;
    t_1291856210.data = new Array(chckRange(correctSizeHEX60gensym333_1291856323, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym333_1291856323, 0, 2147483647) ; ++i) { t_1291856210.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851922(t_1291856210)) {
    enlarge_1291852077(t_1291856210);
    index_1291856274 = rawGetKnownHC_1291852549(t_1291856210, key_1291856211, hc_1291856267[0]);
    }
    
    index_1291856274 = subInt(-1, index_1291856274);
    rawInsert_1291852371(t_1291856210, t_1291856210, "data", key_1291856211, val_1291856212, hc_1291856267[0], index_1291856274);
    t_1291856210.counter = addInt(t_1291856210.counter, 1);
    }
    
    result_1291856213 = t_1291856210.data[chckIndx(index_1291856274, 0, (t_1291856210.data).length - 1)]; result_1291856213_Idx = "Field2";

  return [result_1291856213, result_1291856213_Idx];

}

function changeLayoutProp_1291856177(self_1291856178, prop_1291856179, change_1291856180) {
    var Temporary1;

    HEX2BHEX3D_2113929329((Temporary1 = mgetOrPut_1291856207(self_1291856178.layout_props.props, prop_1291856179, 0.0), Temporary1)[0], Temporary1[1], change_1291856180);
    requestRender_2768240746(self_1291856178.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856173(self_1291856458, prop_1291856459, change_1291856460) {
    changeLayoutProp_1291856177(self_1291856458, prop_1291856459, change_1291856460);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856173(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856493(self_1291856494) {
    self_1291856494.statusBarOnTop = !(self_1291856494.statusBarOnTop);
    requestRender_2768240746(self_1291856494.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856489(self_1291856521) {
    toggleStatusBarLocation_1291856493(self_1291856521);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856489(this));};

function createEditorForDocument_1291848878(self_1291848879, document_1291848880) {
  var result_1291848881 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848904 = null;
      var i_1291856582 = 0;
      var L_1291856583 = (self_1291848879.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856582 < L_1291856583)) break Label3;
            editor_1291848904 = self_1291848879.editor_defaults[chckIndx(i_1291856582, 0, (self_1291848879.editor_defaults).length - 1)];
            if (canEdit_2382364795(editor_1291848904, document_1291848880)) {
            result_1291848881 = createWithDocument_2382364810(editor_1291848904, document_1291848880);
            break BeforeRet;
            }
            
            i_1291856582 = addInt(i_1291856582, 1);
            if (!(((self_1291848879.editor_defaults).length == L_1291856583))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2164260878(document_1291848880) || [])]);
    result_1291848881 = null;
    break BeforeRet;
  };

  return result_1291848881;

}

function createView_1291848958(self_1291848959, document_1291848960) {
    
function HEX3Aanonymous_1291848973() {
        requestRender_2768240746(self_1291848959.platform, false);

      
    }

    var editor_1291848961 = createEditorForDocument_1291848878(self_1291848959, document_1291848960);
    injectDependencies_1291847761(editor_1291848961, self_1291848959);
    var _ = subscribe_1291848997(editor_1291848961.onMarkedDirty, HEX3Aanonymous_1291848973);
    var view_1291849024 = {document: document_1291848960, editor: editor_1291848961};
    self_1291848959.views.push(view_1291849024);;
    self_1291848959.currentView = subInt((self_1291848959.views).length, 1);
    requestRender_2768240746(self_1291848959.platform, false);

  
}

function createView_1291856537(self_1291856538) {
    createView_1291848958(self_1291856538, newTextDocument_2818578645([], [], false));

  
}

function createViewJsWrapper_1291856533(self_1291856570) {
    createView_1291856537(self_1291856570);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856533(this));};

function delete_1291856593(x_1291856595, x_1291856595_Idx, i_1291856596) {
    x_1291856595[x_1291856595_Idx].splice(i_1291856596, 1);

  
}

function closeCurrentView_1291856591(self_1291856592) {
    unregister_2382364835(self_1291856592.views[chckIndx(self_1291856592.currentView, 0, (self_1291856592.views).length - 1)].editor);
    delete_1291856593(self_1291856592, "views", chckRange(self_1291856592.currentView, 0, 2147483647));
    self_1291856592.currentView = clamp_1660945119(self_1291856592.currentView, 0, subInt((self_1291856592.views).length, 1));
    requestRender_2768240746(self_1291856592.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856587(self_1291856649) {
    closeCurrentView_1291856591(self_1291856649);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856587(this));};

function insert_1291856683(x_1291856685, x_1291856685_Idx, item_1291856686, i_1291856687) {
    var it_1291856707 = null;
    x_1291856685[x_1291856685_Idx] = x_1291856685[x_1291856685_Idx] || []; x_1291856685[x_1291856685_Idx].splice(i_1291856687, 0, it_1291856707);
    x_1291856685[x_1291856685_Idx][chckIndx(i_1291856687, 0, (x_1291856685[x_1291856685_Idx]).length - 1)] = item_1291856686;

  
}

function moveCurrentViewToTop_1291856670(self_1291856671) {
    if ((0 < (self_1291856671.views).length)) {
    var view_1291856678 = self_1291856671.views[chckIndx(self_1291856671.currentView, 0, (self_1291856671.views).length - 1)];
    delete_1291856593(self_1291856671, "views", chckRange(self_1291856671.currentView, 0, 2147483647));
    insert_1291856683(self_1291856671, "views", view_1291856678, 0);
    }
    
    self_1291856671.currentView = 0;
    requestRender_2768240746(self_1291856671.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856666(self_1291856734) {
    moveCurrentViewToTop_1291856670(self_1291856734);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856666(this));};

function nextView_1291856751(self_1291856752) {
    var Temporary1;

    if (((self_1291856752.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856752.currentView, 1), (self_1291856752.views).length);
    }
    
    self_1291856752.currentView = Temporary1;
    requestRender_2768240746(self_1291856752.platform, false);

  
}

function nextViewJsWrapper_1291856747(self_1291856785) {
    nextView_1291856751(self_1291856785);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856747(this));};

function prevView_1291856801(self_1291856802) {
    var Temporary1;

    if (((self_1291856802.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856802.currentView, (self_1291856802.views).length), 1), (self_1291856802.views).length);
    }
    
    self_1291856802.currentView = Temporary1;
    requestRender_2768240746(self_1291856802.platform, false);

  
}

function prevViewJsWrapper_1291856797(self_1291856838) {
    prevView_1291856801(self_1291856838);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856797(this));};

function moveCurrentViewPrev_1291856854(self_1291856855) {
    if ((0 < (self_1291856855.views).length)) {
    var view_1291856862 = self_1291856855.views[chckIndx(self_1291856855.currentView, 0, (self_1291856855.views).length - 1)];
    var index_1291856869 = modInt(subInt(addInt(self_1291856855.currentView, (self_1291856855.views).length), 1), (self_1291856855.views).length);
    delete_1291856593(self_1291856855, "views", chckRange(self_1291856855.currentView, 0, 2147483647));
    insert_1291856683(self_1291856855, "views", view_1291856862, chckRange(index_1291856869, 0, 2147483647));
    self_1291856855.currentView = index_1291856869;
    }
    
    requestRender_2768240746(self_1291856855.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856850(self_1291856905) {
    moveCurrentViewPrev_1291856854(self_1291856905);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856850(this));};

function moveCurrentViewNext_1291856921(self_1291856922) {
    if ((0 < (self_1291856922.views).length)) {
    var view_1291856929 = self_1291856922.views[chckIndx(self_1291856922.currentView, 0, (self_1291856922.views).length - 1)];
    var index_1291856933 = modInt(addInt(self_1291856922.currentView, 1), (self_1291856922.views).length);
    delete_1291856593(self_1291856922, "views", chckRange(self_1291856922.currentView, 0, 2147483647));
    insert_1291856683(self_1291856922, "views", view_1291856929, chckRange(index_1291856933, 0, 2147483647));
    self_1291856922.currentView = index_1291856933;
    }
    
    requestRender_2768240746(self_1291856922.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856917(self_1291856969) {
    moveCurrentViewNext_1291856921(self_1291856969);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856917(this));};

function setLayout_1291856985(self_1291856986, layout_1291856987) {
    var Temporary1;

    switch (toJSStr(layout_1291856987)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291856986.layout = Temporary1;
    requestRender_2768240746(self_1291856986.platform, false);

  
}

function setLayoutJsWrapper_1291856981(self_1291857051, layout_1291857052) {
    setLayout_1291856985(self_1291857051, layout_1291857052);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291856981(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851060(self_1291851061) {
  var result_1291851062 = null;

    result_1291851062 = self_1291851061.commandLineTextEditor;

  return result_1291851062;

}

function commandLine_1291857073(self_1291857074, initialValue_1291857075) {
    contentHEX3D_2818573887(getCommandLineTextEditor_1291851060(self_1291857074).document, [nimCopy(null, initialValue_1291857075, NTI33554449)]);
    self_1291857074.commandLineMode = true;
    requestRender_2768240746(self_1291857074.platform, false);

  
}

function commandLineJsWrapper_1291857069(self_1291857107, initialValue_1291857108) {
    commandLine_1291857073(self_1291857107, initialValue_1291857108);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291857069(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291857129(self_1291857130) {
    contentHEX3D_2818573887(getCommandLineTextEditor_1291851060(self_1291857130).document, [[]]);
    self_1291857130.commandLineMode = false;
    requestRender_2768240746(self_1291857130.platform, false);

  
}

function exitCommandLineJsWrapper_1291857125(self_1291857161) {
    exitCommandLine_1291857129(self_1291857161);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291857125(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857252 = 0;
      var L_1291857253 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857252 < L_1291857253)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857252, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857252 = addInt(i_1291857252, 1);
            if (!(((a_1593835606).length == L_1291857253))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2080376218(action_2080376219) {
  var result_2080376222 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2080376228 = find_1593835603(action_2080376219, 32);
    if ((spaceIndex_2080376228 == -1)) {
    var colontmp__1291857247 = nimCopy(null, action_2080376219, NTI33554449);
    var colontmp__1291857248 = [];
    result_2080376222 = nimCopy(result_2080376222, {Field0: nimCopy(null, colontmp__1291857247, NTI33554449), Field1: nimCopy(null, colontmp__1291857248, NTI33554449)}, NTI2080375506);
    break BeforeRet;
    }
    else {
      var colontmp__1291857249 = HEX5BHEX5D_855639291(action_2080376219, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2080376228, 1)));
      var colontmp__1291857250 = HEX5BHEX5D_855639319(action_2080376219, HEX2EHEX2E_1040187488(addInt(spaceIndex_2080376228, 1), 1));
      result_2080376222 = nimCopy(result_2080376222, {Field0: nimCopy(null, colontmp__1291857249, NTI33554449), Field1: nimCopy(null, colontmp__1291857250, NTI33554449)}, NTI2080375506);
      break BeforeRet;
    }
    
  };

  return result_2080376222;

}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet259[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet260[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function executeCommandLine_1291857177(self_1291857178) {
  var result_1291857179 = false;

  BeforeRet: {
    try {
    self_1291857178.commandLineMode = false;
    var colontmp__1291857246 = parseAction_2080376218(nsuJoinSep(content_2818573983(getCommandLineTextEditor_1291851060(self_1291857178).document), []));
    var action_1291857180 = nimCopy(null, colontmp__1291857246["Field0"], NTI33554449);
    var arg_1291857181 = nimCopy(null, colontmp__1291857246["Field1"], NTI33554449);
    contentHEX3D_2818573887(getCommandLineTextEditor_1291851060(self_1291857178).document, [[]]);
    if (nsuStartsWith(arg_1291857181, [92])) {
    arg_1291857181 = nimCopy(null, HEX24_1627394481(newJString_1627389994(HEX5BHEX5D_855639319(arg_1291857181, HEX2EHEX2E_1040187488(1, 1)))), NTI33554449);
    }
    
    result_1291857179 = handleAction_1291848870(self_1291857178, action_1291857180, arg_1291857181);
    break BeforeRet;
    } finally {
    requestRender_2768240746(self_1291857178.platform, false);
    }
  };

  return result_1291857179;

}

function executeCommandLineJsWrapper_1291857173(self_1291857231) {
  var result_1291857232 = false;

    result_1291857232 = executeCommandLine_1291857177(self_1291857231);

  return result_1291857232;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857173(this));};

function writeFile_1291857285(self_1291857286, path_1291857287, app_1291857288) {
    try {
    if ((((0 <= self_1291857286.currentView) && (self_1291857286.currentView < (self_1291857286.views).length)) && !((self_1291857286.views[chckIndx(self_1291857286.currentView, 0, (self_1291857286.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2164260884(self_1291857286.views[chckIndx(self_1291857286.currentView, 0, (self_1291857286.views).length - 1)].document, path_1291857287, app_1291857288);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857300 = [mnewString(0)];
    fmtRes_1291857300[0].push.apply(fmtRes_1291857300[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857300, 0, path_1291857287, []);
    fmtRes_1291857300[0].push.apply(fmtRes_1291857300[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857300, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857300[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857286.platform, false);
    }

  
}

function writeFileJsWrapper_1291857281(self_1291857329, path_1291857330, app_1291857331) {
    writeFile_1291857285(self_1291857329, path_1291857330, app_1291857331);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857281(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857357(self_1291857358, path_1291857359) {
    try {
    if ((((0 <= self_1291857358.currentView) && (self_1291857358.currentView < (self_1291857358.views).length)) && !((self_1291857358.views[chckIndx(self_1291857358.currentView, 0, (self_1291857358.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2164260888(self_1291857358.views[chckIndx(self_1291857358.currentView, 0, (self_1291857358.views).length - 1)].document, path_1291857359);
    handleDocumentChanged_2382364832(self_1291857358.views[chckIndx(self_1291857358.currentView, 0, (self_1291857358.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857371 = [mnewString(0)];
    fmtRes_1291857371[0].push.apply(fmtRes_1291857371[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857371, 0, path_1291857359, []);
    fmtRes_1291857371[0].push.apply(fmtRes_1291857371[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857371, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857371[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857358.platform, false);
    }

  
}

function loadFileJsWrapper_1291857353(self_1291857399, path_1291857400) {
    loadFile_1291857357(self_1291857399, path_1291857400);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857353(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2952794223(filename_2952794224, app_2952794225, workspaceFolder_2952794227) {
  var result_2952794228 = null;

    result_2952794228 = ({m_type: NTI2952791498, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2952794228.filename = nimCopy(null, filename_2952794224, NTI33554449);
    result_2952794228.rootNode = {kind: 7, parent: null, id: newId_2046820569(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2952794228.symbols = nimCopy(result_2952794228.symbols, initTable_3003174248(32), NTI3087008712);
    result_2952794228.appFile = app_2952794225;
    result_2952794228.workspace = nimCopy(result_2952794228.workspace, workspaceFolder_2952794227, NTI2164260874);
    if ((0 < (filename_2952794224).length)) {
    load_2164260888(result_2952794228, []);
    }
    

  return result_2952794228;

}

function none_1291855533() {
  var result_1291855539 = ({val: null});

  return result_1291855539;

}

function newTextDocument_1291857451(filename_1291857453, content_1291857454, app_1291857455) {
  var result_1291857456 = null;

    result_1291857456 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857460 = result_1291857456;
    self_1291857460.filename = nimCopy(null, filename_1291857453, NTI33554449);
    self_1291857460.currentTree = null;
    self_1291857460.appFile = app_1291857455;
    var _ = initTreesitter_2818578427(self_1291857460);
    var language_1291857461 = getLanguageForFile_2902458372(filename_1291857453);
    if (isSome_2315255872(language_1291857461)) {
    self_1291857460.languageId = nimCopy(null, get_2818578464(language_1291857461), NTI33554449);
    }
    
    contentHEX3D_2818573887(self_1291857460, content_1291857454);

  return result_1291857456;

}

function openFile_1291857440(self_1291857441, path_1291857442, app_1291857443) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857442, [46,97,115,116])) {
    createView_1291848958(self_1291857441, newAstDocument_2952794223(path_1291857442, app_1291857443, none_1291855533()));
    }
    else {
      if (app_1291857443) {
      Temporary3 = loadApplicationFile_2332033042(fs_2332033077, path_1291857442);
      }
      else {
      Temporary3 = loadFile_2332033031(fs_2332033077, path_1291857442);
      }
      
      var file_1291857450 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848958(self_1291857441, newTextDocument_1291857451(path_1291857442, nsuSplitLines(file_1291857450, false), app_1291857443));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857488 = [mnewString(0)];
    fmtRes_1291857488[0].push.apply(fmtRes_1291857488[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857488, 0, path_1291857442, []);
    fmtRes_1291857488[0].push.apply(fmtRes_1291857488[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857488, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857488[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857441.platform, false);
    }

  
}

function openFileJsWrapper_1291857436(self_1291857517, path_1291857518, app_1291857519) {
    openFile_1291857440(self_1291857517, path_1291857518, app_1291857519);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857436(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857599(self_1291857600) {
    var Temporary1;

    if ((((0 <= self_1291857600.currentView) && (self_1291857600.currentView < (self_1291857600.views).length)) && !((self_1291857600.views[chckIndx(self_1291857600.currentView, 0, (self_1291857600.views).length - 1)].document == null)))) {
    if (isObj(self_1291857600.views[chckIndx(self_1291857600.currentView, 0, (self_1291857600.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291857600.views[chckIndx(self_1291857600.currentView, 0, (self_1291857600.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857600.views[chckIndx(self_1291857600.currentView, 0, (self_1291857600.views).length - 1)].document.filename;
    }
    
    var filename_1291857616 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857616));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857595(self_1291857643) {
    removeFromLocalStorage_1291857599(self_1291857643);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857595(this));};

function loadFromFile_2516586059(path_2516586060) {
  var result_2516586062 = ({val: null});

  return result_2516586062;

}

function isSome_1291851013(self_1291851015) {
  var result_1291851016 = false;

    result_1291851016 = !((self_1291851015.val == null));

  return result_1291851016;

}

function isNone_1291851041(self_1291851043) {
  var result_1291851044 = false;

    result_1291851044 = (self_1291851043.val == null);

  return result_1291851044;

}

function get_1291851033(self_1291851035) {
  var result_1291851036 = null;

    if (isNone_1291851041(self_1291851035)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851036 = self_1291851035["val"];

  return result_1291851036;

}

function loadTheme_1291857659(self_1291857660, name_1291857661) {
      var Temporary2;

    try {
      var fmtRes_1291857666 = [mnewString(0)];
      fmtRes_1291857666[0].push.apply(fmtRes_1291857666[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857666, 0, name_1291857661, []);
      fmtRes_1291857666[0].push.apply(fmtRes_1291857666[0], [46,106,115,111,110]);;
      var oHEX60gensym513_1291857669 = loadFromFile_2516586059(fmtRes_1291857666[0]);
      if (!isSome_1291851013(oHEX60gensym513_1291857669)) Temporary2 = false; else {        var theme_1291857692 = get_1291851033(oHEX60gensym513_1291857669);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857660.theme = theme_1291857692;
    }
    else {
      var fmtRes_1291857697 = [mnewString(0)];
      fmtRes_1291857697[0].push.apply(fmtRes_1291857697[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857697, 0, name_1291857661, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857697[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2768240746(self_1291857660.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857655(self_1291857725, name_1291857726) {
    loadTheme_1291857659(self_1291857725, name_1291857726);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857655(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function setCompletions_3221225546(self_3221225547, newCompletions_3221225548) {
    if (!(((newCompletions_3221225548).length == (self_3221225547.completions).length))) {
    markDirty_2449473557(self_3221225547);
    }
    else {
      Label1: {
        var i_3221225566 = 0;
        var colontmp__1291858065 = 0;
        colontmp__1291858065 = (newCompletions_3221225548).length - 1;
        var res_1291858066 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_1291858066 <= colontmp__1291858065)) break Label3;
              i_3221225566 = res_1291858066;
              if (changed_3221225544(self_3221225547.completions[chckIndx(i_3221225566, 0, (self_3221225547.completions).length - 1)], newCompletions_3221225548[chckIndx(i_3221225566, 0, (newCompletions_3221225548).length - 1)])) {
              markDirty_2449473557(self_3221225547);
              break Label1;
              }
              
              res_1291858066 = addInt(res_1291858066, 1);
            }
        };
      };
    }
    
    self_3221225547.completions = nimCopy(null, newCompletions_3221225548, NTI3221225512);
    if ((0 < (self_3221225547.completions).length)) {
    self_3221225547.selected = clamp_1660945119(self_3221225547.selected, 0, subInt((self_3221225547.completions).length, 1));
    }
    else {
      self_3221225547.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3221225606(self_3221225607) {
  var result_3221225609 = null;

  BeforeRet: {
    var text_3221225615 = nsuJoinSep(content_2818573983(self_3221225607.textEditor.document), []);
    var newCompletions_3221225620 = (await self_3221225607.getCompletionsAsync(self_3221225607, text_3221225615));
    setCompletions_3221225546(self_3221225607, newCompletions_3221225620);
    result_3221225609 = undefined;
    break BeforeRet;
  };

  return result_3221225609;

}
async function updateCompletionsAsyncIter_3221225633(self_3221225634) {
  var result_3221225636 = null;

  BeforeRet: {
    var text_3221225642 = nsuJoinSep(content_2818573983(self_3221225634.textEditor.document), []);
    setCompletions_3221225546(self_3221225634, []);
    (await self_3221225634.getCompletionsAsyncIter(self_3221225634, text_3221225642));
    result_3221225636 = undefined;
    break BeforeRet;
  };

  return result_3221225636;

}

function updateCompletions_3221225653(self_3221225654) {
    var text_3221225655 = nsuJoinSep(content_2818573983(self_3221225654.textEditor.document), []);
    if (!((self_3221225654.getCompletions == null))) {
    var newCompletions_3221225659 = self_3221225654.getCompletions(self_3221225654, text_3221225655);
    setCompletions_3221225546(self_3221225654, newCompletions_3221225659);
    }
    else {
    if (!((self_3221225654.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3221225606(self_3221225654);
    }
    else {
    if (!((self_3221225654.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3221225633(self_3221225654);
    }
    else {
      var fmtRes_3221225670 = [mnewString(0)];
      fmtRes_3221225670[0].push.apply(fmtRes_3221225670[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2701131945(fmtRes_3221225670, 0, self_3221225654.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3221225670[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3221226182(self_3221226183) {
    updateCompletions_3221225653(self_3221226183);
    self_3221226183.selected = 0;

  
}

function toJson_3221225840(self_3221225841, opt_3221225842) {
  var result_3221225843 = null;

    result_3221225843 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3221225843, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3221225843, [105,100], newJInt_1627390040(self_3221225841.id));

  return result_3221225843;

}

function isSome_2818590904(self_2818590906) {
  var result_2818590907 = false;

    result_2818590907 = !((self_2818590906.val == null));

  return result_2818590907;

}

function some_2818590637(val_2818590639) {
  var result_2818590640 = ({val: null});

    if (!(!((val_2818590639 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818590640.val = val_2818590639;

  return result_2818590640;

}

function none_3221225753() {
  var result_3221225759 = ({val: null});

  return result_3221225759;

}

function some_1291850925(val_1291850927) {
  var result_1291850928 = ({val: null});

    if (!(!((val_1291850927 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850928.val = val_1291850927;

  return result_1291850928;

}

function none_1291850938() {
  var result_1291850944 = ({val: null});

  return result_1291850944;

}

function getPopupForId_1291850895(self_1291850896, id_1291850897) {
  var result_1291850902 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850924 = null;
      var i_1291858076 = 0;
      var L_1291858077 = (self_1291850896.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858076 < L_1291858077)) break Label3;
            popup_1291850924 = self_1291850896.popups[chckIndx(i_1291858076, 0, (self_1291850896.popups).length - 1)];
            if ((popup_1291850924.id == id_1291850897)) {
            result_1291850902 = nimCopy(result_1291850902, some_1291850925(popup_1291850924), NTI1291848450);
            break BeforeRet;
            }
            
            i_1291858076 = addInt(i_1291858076, 1);
            if (!(((self_1291850896.popups).length == L_1291858077))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850902 = nimCopy(result_1291850902, none_1291850938(), NTI1291848450);
    break BeforeRet;
  };

  return result_1291850902;

}

function isSome_3221225767(self_3221225769) {
  var result_3221225770 = false;

    result_3221225770 = !((self_3221225769.val == null));

  return result_3221225770;

}

function isNone_3221225795(self_3221225797) {
  var result_3221225798 = false;

    result_3221225798 = (self_3221225797.val == null);

  return result_3221225798;

}

function get_3221225787(self_3221225789) {
  var result_3221225790 = null;

    if (isNone_3221225795(self_3221225789)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225790 = self_3221225789["val"];

  return result_3221225790;

}

function some_3221225812(val_3221225814) {
  var result_3221225815 = ({val: null});

    if (!(!((val_3221225814 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225815.val = val_3221225814;

  return result_3221225815;

}

function getSelectorPopup_3221225743(wrapper_3221225744) {
      var Temporary1;

  var result_3221225749 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3221225749 = nimCopy(result_3221225749, none_3221225753(), NTI3221225686);
    break BeforeRet;
    }
    
      var oHEX60gensym16_3221225762 = getPopupForId_1291850895(gEditor, wrapper_3221225744.id);
      if (!isSome_3221225767(oHEX60gensym16_3221225762)) Temporary1 = false; else {        var editor_3221225804 = get_3221225787(oHEX60gensym16_3221225762);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3221225804.m_type, NTI3221225494)) {
    result_3221225749 = nimCopy(result_3221225749, some_3221225812(editor_3221225804), NTI3221225686);
    break BeforeRet;
    }
    
    }
    
    result_3221225749 = nimCopy(result_3221225749, none_3221225753(), NTI3221225686);
    break BeforeRet;
  };

  return result_3221225749;

}

function isNone_3221225872(self_3221225874) {
  var result_3221225875 = false;

    result_3221225875 = (self_3221225874.val == null);

  return result_3221225875;

}

function get_3221225892(self_3221225894) {
  var result_3221225895 = null;

    if (isNone_3221225872(self_3221225894)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225895 = self_3221225894["val"];

  return result_3221225895;

}

function acceptScript_3221225853_3221225865(self_3221225866) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym21_3221225867 = getSelectorPopup_3221225743(self_3221225866);
      if (isNone_3221225872(rHEX60gensym21_3221225867)) {
      break BeforeRet;
      }
      
    };
    accept_3221225858(get_3221225892(rHEX60gensym21_3221225867));
  };

  
}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291858081 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858081 <= 6)) break Label3;
            if ((x_1627395424[i_1291858081] != undefined)) {
            value_1627395451 = i_1291858081;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291858081 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2818583372(dst_2818583374, dst_2818583374_Idx, jsonNode_2818583375, jsonPath_2818583376, jsonPath_2818583376_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818583375, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818583376[jsonPath_2818583376_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet261[jsonNode_2818583375.kind] != undefined))) {
    var msgHEX60gensym174_2818583393 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet262), nimCopy(null, jsonPath_2818583376[jsonPath_2818583376_Idx], NTI33554449), reprEnum(jsonNode_2818583375.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym174_2818583393, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818583375;
    if (ConstSet263[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818583374[dst_2818583374_Idx] = Temporary1.num;

  
}

function to_2818583361(node_2818583364) {
  var result_2818583366 = [0];

    var jsonPath_2818583367 = [[]];
    result_2818583366[0] = 0;
    initFromJson_2818583372(result_2818583366, 0, node_2818583364, jsonPath_2818583367, 0);

  return result_2818583366[0];

}

function fromJson_2818583348(a_2818583350, a_2818583350_Idx, b_2818583351, opt_2818583352) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583351, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818583351}));
    }
    
    a_2818583350[a_2818583350_Idx] = to_2818583361(b_2818583351);

  
}

function jsonTo_2818583342(b_2818583344, opt_2818583346) {
  var result_2818583347 = [0];

    fromJson_2818583348(result_2818583347, 0, b_2818583344, opt_2818583346);

  return result_2818583347[0];

}

function fromJsonHook_3221225844(t_3221225845, jsonNode_3221225846) {
    t_3221225845.id = jsonTo_2818583342(HEX5BHEX5D_1627393037(jsonNode_3221225846, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3221225924(a_3221225926, b_3221225927, opt_3221225928) {
    if (!(!(HEX3DHEX3D_1627392026(b_3221225927, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3221225927}));
    }
    
    fromJsonHook_3221225844(a_3221225926, b_3221225927);

  
}

function jsonTo_3221225918(b_3221225920, opt_3221225922) {
  var result_3221225923 = [({id: 0})];

    fromJson_3221225924(result_3221225923[0], b_3221225920, opt_3221225922);

  return result_3221225923[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet264[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3221225916(HEX3Atmp_3221225855) {
  var result_3221225917 = null;

    result_3221225917 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3221225853_3221225865(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221225855, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym26_3221225935 = [97,99,99,101,112,116];
    var fmtRes_3221225940 = [mnewString(0)];
    fmtRes_3221225940[0].push.apply(fmtRes_3221225940[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221225940, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym26_3221225935 || [],fmtRes_3221225940[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225917;

}

function cancelScript_3221225952_3221225965(self_3221225966) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym31_3221225967 = getSelectorPopup_3221225743(self_3221225966);
      if (isNone_3221225872(rHEX60gensym31_3221225967)) {
      break BeforeRet;
      }
      
    };
    cancel_3221225957(get_3221225892(rHEX60gensym31_3221225967));
  };

  
}

function cancelApi_3221225993(HEX3Atmp_3221225954) {
  var result_3221225994 = null;

    result_3221225994 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3221225952_3221225965(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221225954, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym36_3221226000 = [99,97,110,99,101,108];
    var fmtRes_3221226005 = [mnewString(0)];
    fmtRes_3221226005[0].push.apply(fmtRes_3221226005[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226005, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym36_3221226000 || [],fmtRes_3221226005[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225994;

}

function prevScript_3221226008_3221226033(self_3221226034) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym40_3221226035 = getSelectorPopup_3221225743(self_3221226034);
      if (isNone_3221225872(rHEX60gensym40_3221226035)) {
      break BeforeRet;
      }
      
    };
    prev_3221226013(get_3221225892(rHEX60gensym40_3221226035));
  };

  
}

function prevApi_3221226061(HEX3Atmp_3221226010) {
  var result_3221226062 = null;

    result_3221226062 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3221226008_3221226033(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221226010, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym45_3221226068 = [112,114,101,118];
    var fmtRes_3221226073 = [mnewString(0)];
    fmtRes_3221226073[0].push.apply(fmtRes_3221226073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym45_3221226068 || [],fmtRes_3221226073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226062;

}

function nextScript_3221226076_3221226098(self_3221226099) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym50_3221226100 = getSelectorPopup_3221225743(self_3221226099);
      if (isNone_3221225872(rHEX60gensym50_3221226100)) {
      break BeforeRet;
      }
      
    };
    next_3221226081(get_3221225892(rHEX60gensym50_3221226100));
  };

  
}

function nextApi_3221226126(HEX3Atmp_3221226078) {
  var result_3221226127 = null;

    result_3221226127 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3221226076_3221226098(jsonTo_3221225918(HEX5BHEX5D_1627393116(HEX3Atmp_3221226078, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym55_3221226133 = [110,101,120,116];
    var fmtRes_3221226138 = [mnewString(0)];
    fmtRes_3221226138[0].push.apply(fmtRes_3221226138[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226138, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym55_3221226133 || [],fmtRes_3221226138[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226127;

}

function none_2818590836() {
  var result_2818590842 = ({val: null});

  return result_2818590842;

}

function dispatch_3221226143(command_3221226142, arg_3221226141) {
    var Temporary1;

  var result_3221226145 = ({val: null});

    switch (toJSStr(command_3221226142)) {
    case "accept":
      Temporary1 = some_2818590637(acceptApi_3221225916(arg_3221226141));
      break;
    case "cancel":
      Temporary1 = some_2818590637(cancelApi_3221225993(arg_3221226141));
      break;
    case "prev":
      Temporary1 = some_2818590637(prevApi_3221226061(arg_3221226141));
      break;
    case "next":
      Temporary1 = some_2818590637(nextApi_3221226126(arg_3221226141));
      break;
    default: 
      Temporary1 = none_2818590836();
      break;
    }
    result_3221226145 = nimCopy(result_3221226145, Temporary1, NTI2818584229);

  return result_3221226145;

}

function handleAction_3221226164(self_3221226165, action_3221226166, arg_3221226167) {
  var result_3221226168 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848841(self_3221226165.editor, self_3221226165, action_3221226166, arg_3221226167) == 3)) {
    result_3221226168 = 3;
    break BeforeRet;
    }
    
    var args_3221226173 = newJArray_1627390082();
    add_1627390190(args_3221226173, toJson_3221225840({id: self_3221226165.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3221226174 = null;
      var colontmp__1291858069 = null;
      colontmp__1291858069 = newStringStream_1660945417(arg_3221226167);
      var p_1291858070 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291858070[0], colontmp__1291858069, [], false);
      try {
      var _ = getTok_1694499270(p_1291858070[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291858070[0].tok == 1))) break Label4;
            a_3221226174 = parseJson_1627395211(p_1291858070[0], false, false, 0);
            add_1627390190(args_3221226173, a_3221226174);
          }
      };
      } finally {
      close_1694498967(p_1291858070[0]);
      }
    };
    if (isSome_2818590904(dispatch_3221226143(action_3221226166, args_3221226173))) {
    result_3221226168 = 3;
    break BeforeRet;
    }
    
    result_3221226168 = 1;
    break BeforeRet;
  };

  return result_3221226168;

}

function newSelectorPopup_3221226270(editor_3221226271) {
    
function HEX3Aanonymous_3221226293(doc_3221226294) {
        handleTextChanged_3221226182(popup_3221226273);

      
    }
      
function HEX3Aanonymous_3221226342(actionHEX60gensym67HEX60gensym68_3221226343, argHEX60gensym67HEX60gensym68_3221226344) {
        var result_3221226345 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226330.config.handleActions) {
          var action_3221226346 = nimCopy(null, actionHEX60gensym67HEX60gensym68_3221226343, NTI33554449);
          var arg_3221226347 = nimCopy(null, argHEX60gensym67HEX60gensym68_3221226344, NTI33554449);
          var responseHEX60gensym67HEX60gensym68_3221226348 = handleAction_3221226164(popup_3221226273, action_3221226346, arg_3221226347);
          if (handlerHEX60gensym67_3221226330.config.consumeAllActions) {
          result_3221226345 = 3;
          break BeforeRet;
          }
          
          result_3221226345 = responseHEX60gensym67HEX60gensym68_3221226348;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym67_3221226330.config.consumeAllActions) {
          result_3221226345 = 3;
          break BeforeRet;
          }
          else {
            result_3221226345 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3221226345;

      }
      
function HEX3Aanonymous_3221226350(inputHEX60gensym67HEX60gensym69_3221226351) {
        var result_3221226352 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226330.config.handleInputs) {
          var input_3221226353 = nimCopy(null, inputHEX60gensym67HEX60gensym69_3221226351, NTI33554449);
          result_3221226352 = 1;
          break BeforeRet;
          }
          else {
            result_3221226352 = 1;
            break BeforeRet;
          }
          
        };

        return result_3221226352;

      }

  var result_3221226272 = null;

  BeforeRet: {
    var popup_3221226273 = {editor: editor_3221226271, m_type: NTI3221225494, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], cancellationToken: null, id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3221226273.textEditor = newTextEditor_2818591034(newTextDocument_2818578645([], [], false), editor_3221226271);
    setMode_2818583517(popup_3221226273.textEditor, [105,110,115,101,114,116]);
    popup_3221226273.textEditor.renderHeader = false;
    popup_3221226273.textEditor.lineNumbers = nimCopy(popup_3221226273.textEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    popup_3221226273.textEditor.document.singleLine = true;
    var _ = subscribe_2818591082(popup_3221226273.textEditor.document.textChanged, HEX3Aanonymous_3221226293);
    Label1: {
      var handlerHEX60gensym67_3221226330 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym67_3221226330.config = getEventHandlerConfig_1291849162(editor_3221226271, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym67_3221226330.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(editor_3221226271, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym67_3221226330.handleAction = HEX3Aanonymous_3221226342;
      handlerHEX60gensym67_3221226330.handleInput = HEX3Aanonymous_3221226350;
    };
    popup_3221226273.eventHandler = handlerHEX60gensym67_3221226330;
    result_3221226272 = popup_3221226273;
    break BeforeRet;
  };

  return result_3221226272;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet267[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet268[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet270[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet271[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291858151 = it_1442840587.prev;
    var colontmp__1291858152 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291858151, Field1: colontmp__1291858152}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet272[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet273[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet269[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet274[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet275[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet276[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet277[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet265[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet266[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291857810(len_1291857812) {
  var result_1291857813 = [];

    result_1291857813 = new Array(len_1291857812); for (var i = 0 ; i < len_1291857812 ; ++i) { result_1291857813[i] = null; }
  return result_1291857813;

}

function mergeAlt_1291857821(a_1291857823, b_1291857824, lo_1291857825, m_1291857826, hi_1291857827, cmp_1291857830, order_1291857831) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291857830(a_1291857823[chckIndx(m_1291857826, 0, (a_1291857823).length - 1)], a_1291857823[chckIndx(addInt(m_1291857826, 1), 0, (a_1291857823).length - 1)]), order_1291857831) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291857832 = lo_1291857825;
    if (!((j_1291857832 <= m_1291857826))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291857838 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291857832 <= m_1291857826)) break Label2;
          b_1291857824[chckIndx(bb_1291857838, 0, (b_1291857824).length - 1)] = a_1291857823[chckIndx(j_1291857832, 0, (a_1291857823).length - 1)];
          bb_1291857838 = addInt(bb_1291857838, 1);
          j_1291857832 = addInt(j_1291857832, 1);
        }
    };
    var i_1291857849 = 0;
    var k_1291857850 = lo_1291857825;
    Label3: {
        Label4: while (true) {
        if (!((k_1291857850 < j_1291857832) && (j_1291857832 <= hi_1291857827))) break Label4;
          if ((HEX2A_1023410184(cmp_1291857830(b_1291857824[chckIndx(i_1291857849, 0, (b_1291857824).length - 1)], a_1291857823[chckIndx(j_1291857832, 0, (a_1291857823).length - 1)]), order_1291857831) <= 0)) {
          a_1291857823[chckIndx(k_1291857850, 0, (a_1291857823).length - 1)] = b_1291857824[chckIndx(i_1291857849, 0, (b_1291857824).length - 1)];
          i_1291857849 = addInt(i_1291857849, 1);
          }
          else {
            a_1291857823[chckIndx(k_1291857850, 0, (a_1291857823).length - 1)] = a_1291857823[chckIndx(j_1291857832, 0, (a_1291857823).length - 1)];
            j_1291857832 = addInt(j_1291857832, 1);
          }
          
          k_1291857850 = addInt(k_1291857850, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291857850 < j_1291857832)) break Label6;
          a_1291857823[chckIndx(k_1291857850, 0, (a_1291857823).length - 1)] = b_1291857824[chckIndx(i_1291857849, 0, (b_1291857824).length - 1)];
          k_1291857850 = addInt(k_1291857850, 1);
          i_1291857849 = addInt(i_1291857849, 1);
        }
    };
  };

  
}

function sort_1291857798(a_1291857800, cmp_1291857803, order_1291857804) {
    var n_1291857809 = (a_1291857800).length;
    var b_1291857818 = newSeq_1291857810(chckRange(divInt(n_1291857809, 2), 0, 2147483647));
    var s_1291857819 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291857819 < n_1291857809)) break Label2;
          var m_1291857820 = subInt(subInt(n_1291857809, 1), s_1291857819);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291857820)) break Label4;
                mergeAlt_1291857821(a_1291857800, b_1291857818, nimMax(addInt(subInt(m_1291857820, s_1291857819), 1), 0), m_1291857820, addInt(m_1291857820, s_1291857819), cmp_1291857803, order_1291857804);
                m_1291857820 = subInt(m_1291857820, mulInt(s_1291857819, 2));
              }
          };
          s_1291857819 = mulInt(s_1291857819, 2);
        }
    };

  
}

function chooseTheme_1291857747(self_1291857748) {
    
function HEX3Aanonymous_1291857751(popup_1291857752, text_1291857753) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857767(a_1291857785, b_1291857786) {
          var result_1291857791 = 0;

            result_1291857791 = cmp_2952806269(a_1291857785.score, b_1291857786.score);

          return result_1291857791;

        }

      var result_1291857754 = [];

        Label1: {
          var file_1291857755 = [];
          var stack_1291858119 = [[[]]];
          var checkDir_1291858120 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291858119[0]).length)) break Label3;
                var d_1291858122 = pop_1560281227(stack_1291858119, 0);
                Label4: {
                  var k_1291858124 = 0;
                  var p_1291858125 = [];
                  var colontmp__1291858126 = [];
                  colontmp__1291858126 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291858122);
                  Label5: {
                    var k_1291858136 = 0;
                    var v_1291858137 = [];
                    var colontmp__1291858138 = [];
                    colontmp__1291858138 = staticWalkDir_1560281124(colontmp__1291858126, true);
                    var i_1291858139 = 0;
                    var L_1291858140 = (colontmp__1291858138).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291858139 < L_1291858140)) break Label7;
                          k_1291858136 = colontmp__1291858138[chckIndx(i_1291858139, 0, (colontmp__1291858138).length - 1)]["Field0"];
                          v_1291858137 = colontmp__1291858138[chckIndx(i_1291858139, 0, (colontmp__1291858138).length - 1)]["Field1"];
                          k_1291858124 = k_1291858136;
                          p_1291858125 = v_1291858137;
                          var rel_1291858142 = HEX2F_1426063446(d_1291858122, p_1291858125);
                          if (((ConstSet278[k_1291858124] != undefined) && (ConstSet279[k_1291858124] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291858142, NTI33554449);
                          stack_1291858119[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet280[k_1291858124] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291858142;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291858142);
                          }
                          
                          file_1291857755 = Temporary9;
                          if (nsuEndsWith(file_1291857755, [46,106,115,111,110])) {
                          var name_1291858143 = nimCopy(null, nossplitFile(file_1291857755).Field1, NTI33554449);
                          var score_1291858144 = fuzzyMatchSmart_1979711572(text_1291857753, name_1291858143, true);
                          var fmtRes_1291858145 = [mnewString(0)];
                          fmtRes_1291858145[0].push.apply(fmtRes_1291858145[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291858145, 0, file_1291857755, []);
                          result_1291857754.push({name: nimCopy(null, name_1291858143, NTI33554449), path: nimCopy(null, fmtRes_1291858145[0], NTI33554449), score: score_1291858144, m_type: NTI1291848505});;
                          }
                          
                          }
                          
                          i_1291858139 = addInt(i_1291858139, 1);
                          if (!(((colontmp__1291858138).length == L_1291858140))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291858120 = false;
              }
          };
        };
        sort_1291857798(result_1291857754, HEX3Aanonymous_1291857767, 0);

      return result_1291857754;

    }
    
function HEX3Aanonymous_1291857917(item_1291857918) {
          var Temporary1;

          var oHEX60gensym526_1291857921 = loadFromFile_2516586059(item_1291857918.path);
          if (!isSome_1291851013(oHEX60gensym526_1291857921)) Temporary1 = false; else {            var theme_1291857944 = get_1291851033(oHEX60gensym526_1291857921);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857748.theme = theme_1291857944;
        }
        

      
    }
    
function HEX3Aanonymous_1291857945(item_1291857946) {
          var Temporary1;

          var oHEX60gensym527_1291857949 = loadFromFile_2516586059(item_1291857946.path);
          if (!isSome_1291851013(oHEX60gensym527_1291857949)) Temporary1 = false; else {            var theme_1291857972 = get_1291851033(oHEX60gensym527_1291857949);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857748.theme = theme_1291857972;
        }
        

      
    }
    
function HEX3Aanonymous_1291857973() {
          var Temporary1;

          var oHEX60gensym528_1291857976 = loadFromFile_2516586059(originalTheme_1291857749);
          if (!isSome_1291851013(oHEX60gensym528_1291857976)) Temporary1 = false; else {            var theme_1291857999 = get_1291851033(oHEX60gensym528_1291857976);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857748.theme = theme_1291857999;
        }
        

      
    }

    try {
    var originalTheme_1291857749 = nimCopy(null, self_1291857748.theme.path, NTI33554449);
    var popup_1291857750 = newSelectorPopup_3221226270(self_1291857748);
    popup_1291857750.getCompletions = HEX3Aanonymous_1291857751;
    popup_1291857750.handleItemSelected = HEX3Aanonymous_1291857917;
    popup_1291857750.handleItemConfirmed = HEX3Aanonymous_1291857945;
    popup_1291857750.handleCanceled = HEX3Aanonymous_1291857973;
    updateCompletions_3221225653(popup_1291857750);
    pushPopup_1291849060(self_1291857748, popup_1291857750);
    } finally {
    requestRender_2768240746(self_1291857748.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857743(self_1291858053) {
    chooseTheme_1291857747(self_1291858053);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857743(this));};

function cancel_2499805208(token_2499805209) {
    token_2499805209.canceled = true;

  
}

function newCancellationToken_2499805188() {
  var result_2499805189 = null;

    result_2499805189 = {canceled: false};

  return result_2499805189;

}

function canceled_2499805210(token_2499805211) {
  var result_2499805212 = false;

    result_2499805212 = token_2499805211.canceled;

  return result_2499805212;

}
async function iterateDirectoryRec_1291858265(self_1291858266, folder_1291858267, path_1291858268, cancellationToken_1291858269, callback_1291858272) {
  var result_1291858274 = null;

  BeforeRet: {
    var path_1291858280 = nimCopy(null, path_1291858268, NTI33554449);
    var resultItems_1291858281 = [];
    var folders_1291858282 = [];
    if (canceled_2499805210(cancellationToken_1291858269)) {
    result_1291858274 = undefined;
    break BeforeRet;
    }
    
    var items_1291858287 = (await getDirectoryListing_2181038129(folder_1291858267, path_1291858280));
    if (canceled_2499805210(cancellationToken_1291858269)) {
    result_1291858274 = undefined;
    break BeforeRet;
    }
    
    Label1: {
      var file_1291858291 = [];
      var i_1291858591 = 0;
      var L_1291858592 = (items_1291858287.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858591 < L_1291858592)) break Label3;
            file_1291858291 = items_1291858287.files[chckIndx(i_1291858591, 0, (items_1291858287.files).length - 1)];
            resultItems_1291858281.push(HEX2F_1426063446(path_1291858280, file_1291858291));;
            i_1291858591 = addInt(i_1291858591, 1);
            if (!(((items_1291858287.files).length == L_1291858592))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291858299 = [];
      var i_1291858595 = 0;
      var L_1291858596 = (items_1291858287.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858595 < L_1291858596)) break Label6;
            dir_1291858299 = items_1291858287.folders[chckIndx(i_1291858595, 0, (items_1291858287.folders).length - 1)];
            folders_1291858282.push(HEX2F_1426063446(path_1291858280, dir_1291858299));;
            i_1291858595 = addInt(i_1291858595, 1);
            if (!(((items_1291858287.folders).length == L_1291858596))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291858272(resultItems_1291858281);
    if (canceled_2499805210(cancellationToken_1291858269)) {
    result_1291858274 = undefined;
    break BeforeRet;
    }
    
    var futs_1291858305 = [];
    Label7: {
      var dir_1291858309 = [];
      var i_1291858599 = 0;
      var L_1291858600 = (folders_1291858282).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858599 < L_1291858600)) break Label9;
            dir_1291858309 = folders_1291858282[chckIndx(i_1291858599, 0, (folders_1291858282).length - 1)];
            futs_1291858305.push(iterateDirectoryRec_1291858265(self_1291858266, folder_1291858267, dir_1291858309, cancellationToken_1291858269, callback_1291858272));;
            i_1291858599 = addInt(i_1291858599, 1);
            if (!(((folders_1291858282).length == L_1291858600))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858336 = null;
      var i_1291858604 = 0;
      var L_1291858605 = (futs_1291858305).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858604 < L_1291858605)) break Label12;
            fut_1291858336 = futs_1291858305[chckIndx(i_1291858604, 0, (futs_1291858305).length - 1)];
            (await fut_1291858336);
            i_1291858604 = addInt(i_1291858604, 1);
            if (!(((futs_1291858305).length == L_1291858605))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291858274 = undefined;
    break BeforeRet;
  };

  return result_1291858274;

}

function some_1291855520(val_1291855522) {
  var result_1291855523 = ({val: null});

    if (!(!((val_1291855522 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855523.val = val_1291855522;

  return result_1291855523;

}

function loadWorkspaceFile_1291857415(self_1291857416, path_1291857417, folder_1291857418) {
    try {
    if ((((0 <= self_1291857416.currentView) && (self_1291857416.currentView < (self_1291857416.views).length)) && !((self_1291857416.views[chckIndx(self_1291857416.currentView, 0, (self_1291857416.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857416.views[chckIndx(self_1291857416.currentView, 0, (self_1291857416.views).length - 1)].document.workspace = nimCopy(self_1291857416.views[chckIndx(self_1291857416.currentView, 0, (self_1291857416.views).length - 1)].document.workspace, some_1291855520(folder_1291857418), NTI2164260874);
    load_2164260888(self_1291857416.views[chckIndx(self_1291857416.currentView, 0, (self_1291857416.views).length - 1)].document, path_1291857417);
    handleDocumentChanged_2382364832(self_1291857416.views[chckIndx(self_1291857416.currentView, 0, (self_1291857416.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857433 = [mnewString(0)];
    fmtRes_1291857433[0].push.apply(fmtRes_1291857433[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857433, 0, path_1291857417, []);
    fmtRes_1291857433[0].push.apply(fmtRes_1291857433[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857433, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857433[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857416.platform, false);
    }

  
}

function isNone_2818578826(self_2818578828) {
  var result_2818578829 = false;

    result_2818578829 = (self_2818578828.val == null);

  return result_2818578829;

}

function get_1291858482(self_1291858484) {
  var result_1291858485 = null;
  var result_1291858485_Idx = 0;

  BeforeRet: {
    if (isNone_2818578826(self_1291858484)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858485 = self_1291858484; result_1291858485_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858485, result_1291858485_Idx];

}

function newTextDocument_1291857551(filename_1291857553, content_1291857554, app_1291857555) {
  var result_1291857556 = null;

    result_1291857556 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857560 = result_1291857556;
    self_1291857560.filename = nimCopy(null, filename_1291857553, NTI33554449);
    self_1291857560.currentTree = null;
    self_1291857560.appFile = app_1291857555;
    var _ = initTreesitter_2818578427(self_1291857560);
    var language_1291857561 = getLanguageForFile_2902458372(filename_1291857553);
    if (isSome_2315255872(language_1291857561)) {
    self_1291857560.languageId = nimCopy(null, get_2818578464(language_1291857561), NTI33554449);
    }
    
    contentHEX3D_2818573887(self_1291857560, content_1291857554);

  return result_1291857556;

}
async function updateDocumentContent_1291857256(self_1291857257, document_1291857258, path_1291857259, folder_1291857260) {
  var result_1291857262 = null;

  BeforeRet: {
    var content_1291857272 = (await loadFile_2181038113(folder_1291857260, path_1291857259));
    if (isObj(document_1291857258.m_type, NTI2818572427)) {
    contentHEX3D_2818573846(document_1291857258, content_1291857272);
    }
    
    result_1291857262 = undefined;
    break BeforeRet;
  };

  return result_1291857262;

}

function openWorkspaceFile_1291857540(self_1291857541, path_1291857542, folder_1291857543) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857542, [46,97,115,116])) {
    createView_1291848958(self_1291857541, newAstDocument_2952794223(path_1291857542, false, some_1291855520(folder_1291857543)));
    }
    else {
      var document_1291857584 = newTextDocument_1291857551(path_1291857542, [], false);
      document_1291857584.workspace = nimCopy(document_1291857584.workspace, some_1291855520(folder_1291857543), NTI2164260874);
      var _ = updateDocumentContent_1291857256(self_1291857541, document_1291857584, path_1291857542, folder_1291857543);
      createView_1291848958(self_1291857541, document_1291857584);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857592 = [mnewString(0)];
    fmtRes_1291857592[0].push.apply(fmtRes_1291857592[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857592, 0, path_1291857542, []);
    fmtRes_1291857592[0].push.apply(fmtRes_1291857592[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857592, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857592[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857541.platform, false);
    }

  
}

function chooseFile_1291858365(self_1291858366, view_1291858367) {
    async function HEX3Aanonymous_1291858370(popup_1291858371, text_1291858372) {
                text_1291858372 = nimCopy(null, text_1291858372, NTI33554449);
                
function HEX3Aanonymous_1291858389(files_1291858390) {
                    
function HEX3Aanonymous_1291858410(a_1291858428, b_1291858429) {
                      var result_1291858434 = 0;

                        result_1291858434 = cmp_2952806269(a_1291858428.score, b_1291858429.score);

                      return result_1291858434;

                    }

                    var folder_1291858391 = folder_1291858388;
                    Label1: {
                      var file_1291858395 = [];
                      var i_1291858584 = 0;
                      var L_1291858585 = (files_1291858390).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858584 < L_1291858585)) break Label3;
                            file_1291858395 = files_1291858390[chckIndx(i_1291858584, 0, (files_1291858390).length - 1)];
                            var name_1291858396 = nimCopy(null, nossplitFile(file_1291858395).Field1, NTI33554449);
                            var score_1291858397 = fuzzyMatchSmart_1979711572(text_1291858372, name_1291858396, true);
                            var fmtRes_1291858402 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858402, 0, file_1291858395, []);
                            popup_1291858371.completions.push({path: nimCopy(null, fmtRes_1291858402[0], NTI33554449), score: score_1291858397, workspaceFolder: some_1291855520(folder_1291858391), m_type: NTI1291848507});;
                            i_1291858584 = addInt(i_1291858584, 1);
                            if (!(((files_1291858390).length == L_1291858585))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_1291857798(popup_1291858371.completions, HEX3Aanonymous_1291858410, 0);
                    markDirty_2449473557(popup_1291858371);

                  
                }

      var result_1291858374 = null;

      BeforeRet: {
        if (!((popup_1291858371.cancellationToken == null))) {
        cancel_2499805208(popup_1291858371.cancellationToken);
        }
        
        var cancellationToken_1291858383 = newCancellationToken_2499805188();
        popup_1291858371.cancellationToken = cancellationToken_1291858383;
        Label1: {
          var folder_1291858387 = null;
          var i_1291858587 = 0;
          var L_1291858588 = (self_1291858366.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858587 < L_1291858588)) break Label3;
                folder_1291858387 = self_1291858366.workspace.folders[chckIndx(i_1291858587, 0, (self_1291858366.workspace.folders).length - 1)];
                var folder_1291858388 = folder_1291858387;
                (await iterateDirectoryRec_1291858265(self_1291858366, folder_1291858388, [], cancellationToken_1291858383, HEX3Aanonymous_1291858389));
                i_1291858587 = addInt(i_1291858587, 1);
                if (!(((self_1291858366.workspace.folders).length == L_1291858588))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858374 = undefined;
        break BeforeRet;
      };

      return result_1291858374;

    }
    view_1291858367 = nimCopy(null, view_1291858367, NTI33554449);
    
function HEX3Aanonymous_1291858461(item_1291858462) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858367)) {
        case "current":
          if (isSome_2818578798(item_1291858462.workspaceFolder)) {
          loadWorkspaceFile_1291857415(self_1291858366, item_1291858462.path, (Temporary1 = get_1291858482(item_1291858462.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857357(self_1291858366, item_1291858462.path);
          }
          
          break;
        case "new":
          if (isSome_2818578798(item_1291858462.workspaceFolder)) {
          openWorkspaceFile_1291857540(self_1291858366, item_1291858462.path, (Temporary2 = get_1291858482(item_1291858462.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857440(self_1291858366, item_1291858462.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858529 = [mnewString(0)];
          fmtRes_1291858529[0].push.apply(fmtRes_1291858529[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858529, 0, view_1291858367, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858529[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858368 = newSelectorPopup_3221226270(self_1291858366);
    popup_1291858368.getCompletionsAsyncIter = HEX3Aanonymous_1291858370;
    popup_1291858368.handleItemConfirmed = HEX3Aanonymous_1291858461;
    updateCompletions_3221225653(popup_1291858368);
    pushPopup_1291849060(self_1291858366, popup_1291858368);
    } finally {
    requestRender_2768240746(self_1291858366.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858361(self_1291858566, view_1291858567) {
    chooseFile_1291858365(self_1291858566, view_1291858567);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858361(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858613(self_1291858614, token_1291858615) {
    saveApplicationFile_2332033048(fs_2332033077, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858615);

  
}

function setGithubAccessTokenJsWrapper_1291858609(self_1291858643, token_1291858644) {
    setGithubAccessToken_1291858613(self_1291858643, token_1291858644);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858609(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858665(self_1291858666) {
    try {
    if (!((self_1291858666.scriptContext == null))) {
++excHandler;
    try {
    reload_2751463441(self_1291858666.scriptContext);
    if (!(self_1291858666.initializeCalled)) {
    var _ = false;
    self_1291858666.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858679 = mnewString(0);
    fmtRes_1291858679.push.apply(fmtRes_1291858679, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858679, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291858666.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858661(self_1291858706) {
    reloadConfig_1291858665(self_1291858706);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858661(this));};

function logOptions_1291858722(self_1291858723) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858723.options, 2)]);

  
}

function logOptionsJsWrapper_1291858718(self_1291858750) {
    logOptions_1291858722(self_1291858750);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858718(this));};

function clear_2080375815(t_2080375818) {
    Label1: {
      var i_2080375870 = 0;
      var colontmp__1291858813 = 0;
      colontmp__1291858813 = (t_2080375818.data).length;
      var i_1291858814 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858814 < colontmp__1291858813)) break Label3;
            i_2080375870 = i_1291858814;
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field0 = 0;
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858814 = addInt(i_1291858814, 1);
          }
      };
    };
    t_2080375818.counter = 0;

  
}

function clearCommands_2080375773(config_2080375774) {
    clear_2080375815(config_2080375774.commands);
    config_2080375774.revision = addInt(config_2080375774.revision, 1);

  
}

function clearCommands_1291858766(self_1291858767, context_1291858768) {
    clearCommands_2080375773(getEventHandlerConfig_1291849162(self_1291858767, context_1291858768));

  
}

function clearCommandsJsWrapper_1291858762(self_1291858796, context_1291858797) {
    clearCommands_1291858766(self_1291858796, context_1291858797);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858762(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853918(t_1291853921) {
  var result_1291853922 = 0;

    result_1291853922 = t_1291853921.counter;

  return result_1291853922;

}

function getAllEditors_1291858822(self_1291858823) {
  var result_1291858824 = [];

    Label1: {
      var id_1291859045 = 0;
      var L_1291859109 = len_1291853918(self_1291858823.editors);
      Label2: {
        var h_1291859111 = 0;
        var colontmp__1291859112 = 0;
        colontmp__1291859112 = (self_1291858823.editors.data).length - 1;
        var res_1291859113 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291859113 <= colontmp__1291859112)) break Label4;
              h_1291859111 = res_1291859113;
              if (isFilled_1308622880(self_1291858823.editors.data[chckIndx(h_1291859111, 0, (self_1291858823.editors.data).length - 1)].Field0)) {
              id_1291859045 = self_1291858823.editors.data[chckIndx(h_1291859111, 0, (self_1291858823.editors.data).length - 1)]["Field1"];
              result_1291858824.push(id_1291859045);;
              if (!((len_1291853918(self_1291858823.editors) == L_1291859109))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291859113 = addInt(res_1291859113, 1);
            }
        };
      };
    };

  return result_1291858824;

}

function getAllEditorsJsWrapper_1291858818(self_1291859077) {
  var result_1291859078 = [];

    result_1291859078 = nimCopy(null, getAllEditors_1291858822(self_1291859077), NTI1291854648);

  return result_1291859078;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858818(this));};

function getModeConfig_1291859115(self_1291859116, mode_1291859117) {
  var result_1291859118 = null;

  BeforeRet: {
    result_1291859118 = getEventHandlerConfig_1291849162(self_1291859116, ([101,100,105,116,111,114,46] || []).concat(mode_1291859117 || []));
    break BeforeRet;
  };

  return result_1291859118;

}

function setMode_1291859125(self_1291859126, mode_1291859127) {
        
function HEX3Aanonymous_1291859148(actionHEX60gensym613HEX60gensym614_1291859149, argHEX60gensym613HEX60gensym614_1291859150) {
            var Temporary1;

          var result_1291859151 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859136.config.handleActions) {
            var action_1291859152 = nimCopy(null, actionHEX60gensym613HEX60gensym614_1291859149, NTI33554449);
            var arg_1291859153 = nimCopy(null, argHEX60gensym613HEX60gensym614_1291859150, NTI33554449);
            if (handleAction_1291848870(self_1291859126, action_1291859152, arg_1291859153)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym613HEX60gensym614_1291859154 = Temporary1;
            if (handlerHEX60gensym613_1291859136.config.consumeAllActions) {
            result_1291859151 = 3;
            break BeforeRet;
            }
            
            result_1291859151 = responseHEX60gensym613HEX60gensym614_1291859154;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym613_1291859136.config.consumeAllActions) {
            result_1291859151 = 3;
            break BeforeRet;
            }
            else {
              result_1291859151 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291859151;

        }
        
function HEX3Aanonymous_1291859156(inputHEX60gensym613HEX60gensym615_1291859157) {
          var result_1291859158 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859136.config.handleInputs) {
            var input_1291859159 = nimCopy(null, inputHEX60gensym613HEX60gensym615_1291859157, NTI33554449);
            result_1291859158 = 1;
            break BeforeRet;
            }
            else {
              result_1291859158 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291859158;

        }

    try {
    if (((mode_1291859127).length == 0)) {
    self_1291859126.modeEventHandler = null;
    }
    else {
      var config_1291859128 = getModeConfig_1291859115(self_1291859126, mode_1291859127);
      Label2: {
        var handlerHEX60gensym613_1291859136 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym613_1291859136.config = config_1291859128;
        handlerHEX60gensym613_1291859136.dfaInternal = buildDFA_2080374847(config_1291859128);
        handlerHEX60gensym613_1291859136.handleAction = HEX3Aanonymous_1291859148;
        handlerHEX60gensym613_1291859136.handleInput = HEX3Aanonymous_1291859156;
      };
      self_1291859126.modeEventHandler = handlerHEX60gensym613_1291859136;
    }
    
    self_1291859126.currentMode = nimCopy(null, mode_1291859127, NTI33554449);
    } finally {
    requestRender_2768240746(self_1291859126.platform, false);
    }

  
}

function setModeJsWrapper22_1291859121(self_1291859187, mode_1291859188) {
    setMode_1291859125(self_1291859187, mode_1291859188);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291859121(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291859210(self_1291859211) {
  var result_1291859212 = [];

  BeforeRet: {
    result_1291859212 = nimCopy(null, self_1291859211.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291859212;

}

function modeJsWrapper22_1291859206(self_1291859240) {
  var result_1291859241 = [];

    result_1291859241 = nimCopy(null, mode_1291859210(self_1291859240), NTI33554449);

  return result_1291859241;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291859206(this));};

function getContextWithMode_1291859261(self_1291859262, context_1291859263) {
  var result_1291859264 = [];

  BeforeRet: {
    result_1291859264 = nimCopy(null, (context_1291859263 || []).concat([46] || [],self_1291859262.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291859264;

}

function getContextWithModeJsWrapper22_1291859257(self_1291859293, context_1291859294) {
  var result_1291859295 = [];

    result_1291859295 = nimCopy(null, getContextWithMode_1291859261(self_1291859293, context_1291859294), NTI33554449);

  return result_1291859295;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291859257(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859573(action_1291859574, arg_1291859575) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848870(gEditor, action_1291859574, arg_1291859575);
  };

  
}

function scriptRunActionJsWrapper_1291859570(action_1291859584, arg_1291859585) {
    scriptRunAction_1291859573(action_1291859584, arg_1291859585);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859570(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859610(message_1291859611) {
    var fmtRes_1291859616 = [mnewString(0)];
    fmtRes_1291859616[0].push.apply(fmtRes_1291859616[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859616, 0, message_1291859611, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859616[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859607(message_1291859621) {
    scriptLog_1291859610(message_1291859621);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859607(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859715 = 0;
      colontmp__1291859715 = (n_1795163066).length - 1;
      var res_1291859716 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859716 <= colontmp__1291859715)) break Label4;
            i_1795163130 = res_1291859716;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859716 = addInt(res_1291859716, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2080375166(config_2080375167, keys_2080375168, action_2080375169) {
    HEX5BHEX5DHEX3D_1795162732(config_2080375167.commands, keys_2080375168, action_2080375169);
    config_2080375167.revision = addInt(config_2080375167.revision, 1);

  
}

function addCommandScript_1291859642(self_1291859643, context_1291859644, keys_1291859645, action_1291859646, arg_1291859647) {
    var Temporary1;

    if (((arg_1291859647).length == 0)) {
    Temporary1 = action_1291859646;
    }
    else {
    Temporary1 = (action_1291859646 || []).concat([32] || [],arg_1291859647 || []);
    }
    
    var command_1291859648 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2080375166(getEventHandlerConfig_1291849162(self_1291859643, context_1291859644), keys_1291859645, command_1291859648);

  
}

function addCommandScriptJsWrapper_1291859638(self_1291859679, context_1291859680, keys_1291859681, action_1291859682, arg_1291859683) {
    addCommandScript_1291859642(self_1291859679, context_1291859680, keys_1291859681, action_1291859682, arg_1291859683);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859638(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2080375263(t_2080375266, key_2080375267) {
    var hc_2080375268 = [0];
    var i_2080375275 = rawGet_1795162457(t_2080375266, key_2080375267, hc_2080375268, 0);
    var mskHEX60gensym36_2080375279 = (t_2080375266.data).length - 1;
    if ((0 <= i_2080375275)) {
    t_2080375266.counter = subInt(t_2080375266.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2080375286 = i_2080375275;
            var rHEX60gensym36_2080375287 = jHEX60gensym36_2080375286;
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0 = 0;
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2080375275 = (addInt(i_2080375275, 1) & mskHEX60gensym36_2080375279);
                  if (isEmpty_1308622877(t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2080375287 = (t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0 & mskHEX60gensym36_2080375279);
                  if (!(((((rHEX60gensym36_2080375287 <= i_2080375275) && (jHEX60gensym36_2080375286 < rHEX60gensym36_2080375287)) || ((jHEX60gensym36_2080375286 < rHEX60gensym36_2080375287) && (i_2080375275 < jHEX60gensym36_2080375286))) || ((i_2080375275 < jHEX60gensym36_2080375286) && (rHEX60gensym36_2080375287 <= i_2080375275))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2080375266.data[chckIndx(jHEX60gensym36_2080375286, 0, (t_2080375266.data).length - 1)] = nimCopy(t_2080375266.data[chckIndx(jHEX60gensym36_2080375286, 0, (t_2080375266.data).length - 1)], t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2080375220(config_2080375221, keys_2080375222) {
    del_2080375263(config_2080375221.commands, keys_2080375222);
    config_2080375221.revision = addInt(config_2080375221.revision, 1);

  
}

function removeCommand_1291859725(self_1291859726, context_1291859727, keys_1291859728) {
    removeCommand_2080375220(getEventHandlerConfig_1291849162(self_1291859726, context_1291859727), keys_1291859728);

  
}

function removeCommandJsWrapper_1291859721(self_1291859757, context_1291859758, keys_1291859759) {
    removeCommand_1291859725(self_1291859757, context_1291859758, keys_1291859759);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859721(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859786() {
  var result_1291859787 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859787 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859787 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859787 = -1;
    break BeforeRet;
  };

  return result_1291859787;

}

function getActivePopupJsWrapper_1291859783() {
  var result_1291859804 = 0;

    result_1291859804 = getActivePopup_1291859786();

  return result_1291859804;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859783());};

function getActiveEditor_1291859823() {
  var result_1291859824 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859824 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859824 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859824 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859824 = -1;
    break BeforeRet;
  };

  return result_1291859824;

}

function getActiveEditorJsWrapper_1291859820() {
  var result_1291859835 = 0;

    result_1291859835 = getActiveEditor_1291859823();

  return result_1291859835;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859820());};

function getActiveEditor2_1291859854(self_1291859855) {
  var result_1291859856 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859856 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859856 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859856 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859856 = null;
    break BeforeRet;
  };

  return result_1291859856;

}

function getActiveEditor2JsWrapper_1291859851(self_1291859890) {
  var result_1291859891 = null;

    result_1291859891 = getActiveEditor2_1291859854(self_1291859890);

  return result_1291859891;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859851(this));};

function loadCurrentConfig_1291859898(self_1291859899) {
    createView_1291848958(self_1291859899, newTextDocument_2818578645([99,111,110,102,105,103,46,106,115], loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859894(self_1291859931) {
    loadCurrentConfig_1291859898(self_1291859931);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859894(this));};

function sourceCurrentDocument_1291859947(self_1291859948) {
    var editor_1291859953 = getActiveEditor2_1291859854(self_1291859948);
    if (isObj(editor_1291859953.m_type, NTI2818572510)) {
    var document_1291859960 = editor_1291859953.document;
    var contentStrict_1291859961 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818573986(document_1291859960) || []);
    rawEcho(contentStrict_1291859961);
      var fmtRes_1291859966 = [mnewString(0)];
      fmtRes_1291859966[0].push.apply(fmtRes_1291859966[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859966, 0, document_1291859960.filename, []);
      fmtRes_1291859966[0].push.apply(fmtRes_1291859966[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859966[0]))) {
    eval(toJSStr(contentStrict_1291859961));
    }
    else {
      var fmtRes_1291859971 = mnewString(0);
      fmtRes_1291859971.push.apply(fmtRes_1291859971, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859971, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859943(self_1291859998) {
    sourceCurrentDocument_1291859947(self_1291859998);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859943(this));};

function getEditor_1291860013(index_1291860014) {
  var result_1291860015 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860015 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291860014) && (index_1291860014 < (gEditor.views).length))) {
    result_1291860015 = gEditor.views[chckIndx(index_1291860014, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291860015 = -1;
    break BeforeRet;
  };

  return result_1291860015;

}

function getEditorJsWrapper_1291860010(index_1291860027) {
  var result_1291860028 = 0;

    result_1291860028 = getEditor_1291860013(index_1291860027);

  return result_1291860028;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291860010(index_));};

function rawGet_1291845908(t_1291845911, key_1291845912, hc_1291845913, hc_1291845913_Idx) {
  var result_1291845914 = 0;

  BeforeRet: {
    hc_1291845913[hc_1291845913_Idx] = hash_1325400236(key_1291845912);
    if ((hc_1291845913[hc_1291845913_Idx] == 0)) {
    hc_1291845913[hc_1291845913_Idx] = 314159265;
    }
    
    if (((t_1291845911.data).length == 0)) {
    result_1291845914 = -1;
    break BeforeRet;
    }
    
    var h_1291845968 = (hc_1291845913[hc_1291845913_Idx] & (t_1291845911.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0)) break Label2;
          if (((t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0 == hc_1291845913[hc_1291845913_Idx]) && (t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field1 == key_1291845912))) {
          result_1291845914 = h_1291845968;
          break BeforeRet;
          }
          
          h_1291845968 = nextTry_1308622883(h_1291845968, (t_1291845911.data).length - 1);
        }
    };
    result_1291845914 = subInt(-1, h_1291845968);
  };

  return result_1291845914;

}

function hasKey_1291850717(t_1291850720, key_1291850721) {
  var result_1291850722 = false;

    var hc_1291850723 = [0];
    result_1291850722 = (0 <= rawGet_1291845908(t_1291850720, key_1291850721, hc_1291850723, 0));

  return result_1291850722;

}

function contains_1291850711(t_1291850714, key_1291850715) {
  var result_1291850716 = false;

  BeforeRet: {
    result_1291850716 = hasKey_1291850717(t_1291850714, key_1291850715);
    break BeforeRet;
  };

  return result_1291850716;

}

function some_1291850863(val_1291850865) {
  var result_1291850866 = ({val: null});

    if (!(!((val_1291850865 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850866.val = val_1291850865;

  return result_1291850866;

}

function HEX5BHEX5D_1291850783(t_1291850786, key_1291850787) {
  var result_1291850788 = null;
  var result_1291850788_Idx = 0;

    var hcHEX60gensym22_1291850789 = [0];
    var indexHEX60gensym22_1291850796 = rawGet_1291845908(t_1291850786, key_1291850787, hcHEX60gensym22_1291850789, 0);
    if ((0 <= indexHEX60gensym22_1291850796)) {
    result_1291850788 = t_1291850786.data[chckIndx(indexHEX60gensym22_1291850796, 0, (t_1291850786.data).length - 1)]; result_1291850788_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_1291850787);
    }
    

  return [result_1291850788, result_1291850788_Idx];

}

function none_1291850879() {
  var result_1291850885 = ({val: null});

  return result_1291850885;

}

function getEditorForId_1291850661(self_1291850662, id_1291850663) {
    var Temporary1;

  var result_1291850668 = ({val: null});

  BeforeRet: {
    if (contains_1291850711(self_1291850662.editors, id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863((Temporary1 = HEX5BHEX5D_1291850783(self_1291850662.editors, id_1291850663), Temporary1)[0][Temporary1[1]]), NTI1291848318);
    break BeforeRet;
    }
    
    if ((self_1291850662.commandLineTextEditor.id == id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863(self_1291850662.commandLineTextEditor), NTI1291848318);
    break BeforeRet;
    }
    
    result_1291850668 = nimCopy(result_1291850668, none_1291850879(), NTI1291848318);
    break BeforeRet;
  };

  return result_1291850668;

}

function isSome_2818583255(self_2818583257) {
  var result_2818583258 = false;

    result_2818583258 = !((self_2818583257.val == null));

  return result_2818583258;

}

function isNone_2818583283(self_2818583285) {
  var result_2818583286 = false;

    result_2818583286 = (self_2818583285.val == null);

  return result_2818583286;

}

function get_2818583275(self_2818583277) {
  var result_2818583278 = null;

    if (isNone_2818583283(self_2818583277)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583278 = self_2818583277["val"];

  return result_2818583278;

}

function scriptIsTextEditor_1291860052(editorId_1291860053) {
      var Temporary1;

  var result_1291860054 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860054 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym744_1291860060 = getEditorForId_1291850661(gEditor, editorId_1291860053);
      if (!isSome_2818583255(oHEX60gensym744_1291860060)) Temporary1 = false; else {        var editor_1291860083 = get_2818583275(oHEX60gensym744_1291860060);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860054 = isObj(editor_1291860083.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291860054 = false;
    break BeforeRet;
  };

  return result_1291860054;

}

function scriptIsTextEditorJsWrapper_1291860049(editorId_1291860095) {
  var result_1291860096 = false;

    result_1291860096 = scriptIsTextEditor_1291860052(editorId_1291860095);

  return result_1291860096;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291860049(editorId_));};

function scriptIsAstEditor_1291860121(editorId_1291860122) {
      var Temporary1;

  var result_1291860123 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860123 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym753_1291860129 = getEditorForId_1291850661(gEditor, editorId_1291860122);
      if (!isSome_2818583255(oHEX60gensym753_1291860129)) Temporary1 = false; else {        var editor_1291860152 = get_2818583275(oHEX60gensym753_1291860129);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860123 = isObj(editor_1291860152.m_type, NTI2952791527);
    break BeforeRet;
    }
    
    result_1291860123 = false;
    break BeforeRet;
  };

  return result_1291860123;

}

function scriptIsAstEditorJsWrapper_1291860118(editorId_1291860164) {
  var result_1291860165 = false;

    result_1291860165 = scriptIsAstEditor_1291860121(editorId_1291860164);

  return result_1291860165;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291860118(editorId_));};

function scriptRunActionFor_1291860189(editorId_1291860190, action_1291860191, arg_1291860192) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym763_1291860198 = getEditorForId_1291850661(gEditor, editorId_1291860190);
      if (!isSome_2818583255(oHEX60gensym763_1291860198)) Temporary2 = false; else {        var editor_1291860221 = get_2818583275(oHEX60gensym763_1291860198);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860221.eventHandler.handleAction(action_1291860191, arg_1291860192);
    }
    else {
      var oHEX60gensym764_1291860224 = getPopupForId_1291850895(gEditor, editorId_1291860190);
      if (!isSome_3221225767(oHEX60gensym764_1291860224)) Temporary3 = false; else {        var popup_1291860247 = get_3221225787(oHEX60gensym764_1291860224);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291860247.eventHandler.handleAction(action_1291860191, arg_1291860192);
    }
    }
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291860186(editorId_1291860258, action_1291860259, arg_1291860260) {
    scriptRunActionFor_1291860189(editorId_1291860258, action_1291860259, arg_1291860260);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291860186(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291860290(editorId_1291860291, text_1291860292) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym773_1291860298 = getEditorForId_1291850661(gEditor, editorId_1291860291);
      if (!isSome_2818583255(oHEX60gensym773_1291860298)) Temporary2 = false; else {        var editor_1291860321 = get_2818583275(oHEX60gensym773_1291860298);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860321.eventHandler.handleInput(text_1291860292);
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291860287(editorId_1291860329, text_1291860330) {
    scriptInsertTextInto_1291860290(editorId_1291860329, text_1291860330);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291860287(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291860355(editorId_1291860356) {
      var Temporary2;

  var result_1291860357 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291860419 = {Field0: 0, Field1: 0};
    var colontmp__1291860420 = {Field0: 0, Field1: 0};
    result_1291860357 = nimCopy(result_1291860357, {Field0: nimCopy(null, colontmp__1291860419, NTI2415919113), Field1: nimCopy(null, colontmp__1291860420, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym782_1291860363 = getEditorForId_1291850661(gEditor, editorId_1291860356);
      if (!isSome_2818583255(oHEX60gensym782_1291860363)) Temporary2 = false; else {        var editor_1291860386 = get_2818583275(oHEX60gensym782_1291860363);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860386.m_type, NTI2818572510)) {
    var editor_1291860393 = editor_1291860386;
    result_1291860357 = nimCopy(result_1291860357, selection_2818572793(editor_1291860393), NTI2415919115);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291860421 = {Field0: 0, Field1: 0};
    var colontmp__1291860422 = {Field0: 0, Field1: 0};
    result_1291860357 = nimCopy(result_1291860357, {Field0: nimCopy(null, colontmp__1291860421, NTI2415919113), Field1: nimCopy(null, colontmp__1291860422, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  return result_1291860357;

}

function scriptTextEditorSelectionJsWrapper_1291860352(editorId_1291860399) {
  var result_1291860400 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860400 = nimCopy(result_1291860400, scriptTextEditorSelection_1291860355(editorId_1291860399), NTI2415919115);

  return result_1291860400;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291860352(editorId_));};

function scriptSetTextEditorSelection_1291860428(editorId_1291860429, selection_1291860430) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym791_1291860436 = getEditorForId_1291850661(gEditor, editorId_1291860429);
      if (!isSome_2818583255(oHEX60gensym791_1291860436)) Temporary2 = false; else {        var editor_1291860459 = get_2818583275(oHEX60gensym791_1291860436);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860459.m_type, NTI2818572510)) {
    selectionHEX3D_2818572799(editor_1291860459, selection_1291860430);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291860425(editorId_1291860471, selection_1291860472) {
    scriptSetTextEditorSelection_1291860428(editorId_1291860471, selection_1291860472);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291860425(editorId_, selection_));};

function scriptTextEditorSelections_1291860497(editorId_1291860498) {
      var Temporary1;

  var result_1291860499 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860499 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856014);
    break BeforeRet;
    }
    
      var oHEX60gensym800_1291860509 = getEditorForId_1291850661(gEditor, editorId_1291860498);
      if (!isSome_2818583255(oHEX60gensym800_1291860509)) Temporary1 = false; else {        var editor_1291860532 = get_2818583275(oHEX60gensym800_1291860509);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860532.m_type, NTI2818572510)) {
    var editor_1291860539 = editor_1291860532;
    result_1291860499 = nimCopy(null, selections_2818572790(editor_1291860539), NTI2415919123);
    break BeforeRet;
    }
    
    }
    
    result_1291860499 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856014);
    break BeforeRet;
  };

  return result_1291860499;

}

function scriptTextEditorSelectionsJsWrapper_1291860494(editorId_1291860549) {
  var result_1291860550 = [];

    result_1291860550 = nimCopy(null, scriptTextEditorSelections_1291860497(editorId_1291860549), NTI1291856001);

  return result_1291860550;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860494(editorId_));};

function scriptSetTextEditorSelections_1291860574(editorId_1291860575, selections_1291860576) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym809_1291860582 = getEditorForId_1291850661(gEditor, editorId_1291860575);
      if (!isSome_2818583255(oHEX60gensym809_1291860582)) Temporary2 = false; else {        var editor_1291860605 = get_2818583275(oHEX60gensym809_1291860582);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860605.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573049(editor_1291860605, selections_1291860576);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860571(editorId_1291860617, selections_1291860618) {
    scriptSetTextEditorSelections_1291860574(editorId_1291860617, selections_1291860618);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860571(editorId_, selections_));};

function scriptGetTextEditorLine_1291860643(editorId_1291860644, line_1291860645) {
      var Temporary1;
    var Temporary2;

  var result_1291860646 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860646 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym819_1291860652 = getEditorForId_1291850661(gEditor, editorId_1291860644);
      if (!isSome_2818583255(oHEX60gensym819_1291860652)) Temporary1 = false; else {        var editor_1291860675 = get_2818583275(oHEX60gensym819_1291860652);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860675.m_type, NTI2818572510)) {
    var editor_1291860682 = editor_1291860675;
    if (((0 <= line_1291860645) && (line_1291860645 < (content_2818573983(editor_1291860682.document)).length))) {
    result_1291860646 = nimCopy(null, (Temporary2 = content_2818573983(editor_1291860682.document), Temporary2)[chckIndx(line_1291860645, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860646 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860646;

}

function scriptGetTextEditorLineJsWrapper_1291860640(editorId_1291860692, line_1291860693) {
  var result_1291860694 = [];

    result_1291860694 = nimCopy(null, scriptGetTextEditorLine_1291860643(editorId_1291860692, line_1291860693), NTI33554449);

  return result_1291860694;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860640(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860723(editorId_1291860724) {
      var Temporary1;

  var result_1291860725 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860725 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym829_1291860731 = getEditorForId_1291850661(gEditor, editorId_1291860724);
      if (!isSome_2818583255(oHEX60gensym829_1291860731)) Temporary1 = false; else {        var editor_1291860754 = get_2818583275(oHEX60gensym829_1291860731);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860754.m_type, NTI2818572510)) {
    var editor_1291860761 = editor_1291860754;
    result_1291860725 = (content_2818573983(editor_1291860761.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860725 = 0;
    break BeforeRet;
  };

  return result_1291860725;

}

function scriptGetTextEditorLineCountJsWrapper_1291860720(editorId_1291860770) {
  var result_1291860771 = 0;

    result_1291860771 = scriptGetTextEditorLineCount_1291860723(editorId_1291860770);

  return result_1291860771;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860720(editorId_));};

function scriptGetOptionInt_1291860806(path_1291860807, default_1291860808) {
  var result_1291860809 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860809 = default_1291860808;
      break BeforeRet;
      }
      
      var nodeHEX60gensym839_1291860814 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860807, [46], -1));
      if ((nodeHEX60gensym839_1291860814 == null)) {
      result_1291860809 = default_1291860808;
      break BeforeRet;
      }
      
    };
    result_1291860809 = getInt_1627390118(nodeHEX60gensym839_1291860814, default_1291860808);
  };

  return result_1291860809;

}

function scriptGetOptionIntJsWrapper_1291860803(path_1291860824, default_1291860825) {
  var result_1291860826 = 0;

    result_1291860826 = scriptGetOptionInt_1291860806(path_1291860824, default_1291860825);

  return result_1291860826;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860803(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860856(path_1291860857, default_1291860858) {
  var result_1291860859 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860859 = default_1291860858;
      break BeforeRet;
      }
      
      var nodeHEX60gensym849_1291860864 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860857, [46], -1));
      if ((nodeHEX60gensym849_1291860864 == null)) {
      result_1291860859 = default_1291860858;
      break BeforeRet;
      }
      
    };
    result_1291860859 = getFloat_1627390140(nodeHEX60gensym849_1291860864, default_1291860858);
  };

  return result_1291860859;

}

function scriptGetOptionFloatJsWrapper_1291860853(path_1291860874, default_1291860875) {
  var result_1291860876 = 0.0;

    result_1291860876 = scriptGetOptionFloat_1291860856(path_1291860874, default_1291860875);

  return result_1291860876;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860853(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860964(path_1291860965, default_1291860966) {
  var result_1291860967 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860967 = default_1291860966;
      break BeforeRet;
      }
      
      var nodeHEX60gensym865_1291860972 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860965, [46], -1));
      if ((nodeHEX60gensym865_1291860972 == null)) {
      result_1291860967 = default_1291860966;
      break BeforeRet;
      }
      
    };
    result_1291860967 = getBool_1627390147(nodeHEX60gensym865_1291860972, default_1291860966);
  };

  return result_1291860967;

}

function scriptGetOptionBoolJsWrapper_1291860961(path_1291860982, default_1291860983) {
  var result_1291860984 = false;

    result_1291860984 = scriptGetOptionBool_1291860964(path_1291860982, default_1291860983);

  return result_1291860984;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860961(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291861014(path_1291861015, default_1291861016) {
  var result_1291861017 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291861017 = nimCopy(null, default_1291861016, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym875_1291861022 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291861015, [46], -1));
      if ((nodeHEX60gensym875_1291861022 == null)) {
      result_1291861017 = nimCopy(null, default_1291861016, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291861017 = nimCopy(null, getStr_1627390106(nodeHEX60gensym875_1291861022, default_1291861016), NTI33554449);
  };

  return result_1291861017;

}

function scriptGetOptionStringJsWrapper_1291861011(path_1291861032, default_1291861033) {
  var result_1291861034 = [];

    result_1291861034 = nimCopy(null, scriptGetOptionString_1291861014(path_1291861032, default_1291861033), NTI33554449);

  return result_1291861034;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291861011(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291861064(path_1291861065, value_1291861066) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym884_1291861073 = nsuSplitString(path_1291861065, [46], -1);
      var nodeHEX60gensym884_1291861074 = gEditor.options;
      Label3: {
        var keyHEX60gensym884_1291861093 = [];
        var colontmp__1291861137 = [];
        colontmp__1291861137 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym884_1291861073, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861138 = 0;
        var L_1291861139 = (colontmp__1291861137).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861138 < L_1291861139)) break Label5;
              keyHEX60gensym884_1291861093 = colontmp__1291861137[chckIndx(i_1291861138, 0, (colontmp__1291861137).length - 1)];
              if (!((nodeHEX60gensym884_1291861074.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym884_1291861074, keyHEX60gensym884_1291861093))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym884_1291861074, keyHEX60gensym884_1291861093, newJObject_1627390051());
              }
              
              nodeHEX60gensym884_1291861074 = HEX5BHEX5D_1627393037(nodeHEX60gensym884_1291861074, keyHEX60gensym884_1291861093);
              i_1291861138 = addInt(i_1291861138, 1);
              if (!(((colontmp__1291861137).length == L_1291861139))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym884_1291861074 == null) || !((nodeHEX60gensym884_1291861074.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym884_1291861074, HEX5BHEX5D_2701132581(pathItemsHEX60gensym884_1291861073, 1), newJInt_1627390040(value_1291861066));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291861061(path_1291861114, value_1291861115) {
    scriptSetOptionInt_1291861064(path_1291861114, value_1291861115);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291861061(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291861146(path_1291861147, value_1291861148) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym898_1291861155 = nsuSplitString(path_1291861147, [46], -1);
      var nodeHEX60gensym898_1291861156 = gEditor.options;
      Label3: {
        var keyHEX60gensym898_1291861175 = [];
        var colontmp__1291861219 = [];
        colontmp__1291861219 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym898_1291861155, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861220 = 0;
        var L_1291861221 = (colontmp__1291861219).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861220 < L_1291861221)) break Label5;
              keyHEX60gensym898_1291861175 = colontmp__1291861219[chckIndx(i_1291861220, 0, (colontmp__1291861219).length - 1)];
              if (!((nodeHEX60gensym898_1291861156.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym898_1291861156, keyHEX60gensym898_1291861175))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym898_1291861156, keyHEX60gensym898_1291861175, newJObject_1627390051());
              }
              
              nodeHEX60gensym898_1291861156 = HEX5BHEX5D_1627393037(nodeHEX60gensym898_1291861156, keyHEX60gensym898_1291861175);
              i_1291861220 = addInt(i_1291861220, 1);
              if (!(((colontmp__1291861219).length == L_1291861221))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym898_1291861156 == null) || !((nodeHEX60gensym898_1291861156.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym898_1291861156, HEX5BHEX5D_2701132581(pathItemsHEX60gensym898_1291861155, 1), newJFloat_1627390043(value_1291861148));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291861143(path_1291861196, value_1291861197) {
    scriptSetOptionFloat_1291861146(path_1291861196, value_1291861197);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291861143(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291861228(path_1291861229, value_1291861230) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym912_1291861237 = nsuSplitString(path_1291861229, [46], -1);
      var nodeHEX60gensym912_1291861238 = gEditor.options;
      Label3: {
        var keyHEX60gensym912_1291861257 = [];
        var colontmp__1291861301 = [];
        colontmp__1291861301 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym912_1291861237, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861302 = 0;
        var L_1291861303 = (colontmp__1291861301).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861302 < L_1291861303)) break Label5;
              keyHEX60gensym912_1291861257 = colontmp__1291861301[chckIndx(i_1291861302, 0, (colontmp__1291861301).length - 1)];
              if (!((nodeHEX60gensym912_1291861238.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym912_1291861238, keyHEX60gensym912_1291861257))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym912_1291861238, keyHEX60gensym912_1291861257, newJObject_1627390051());
              }
              
              nodeHEX60gensym912_1291861238 = HEX5BHEX5D_1627393037(nodeHEX60gensym912_1291861238, keyHEX60gensym912_1291861257);
              i_1291861302 = addInt(i_1291861302, 1);
              if (!(((colontmp__1291861301).length == L_1291861303))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym912_1291861238 == null) || !((nodeHEX60gensym912_1291861238.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym912_1291861238, HEX5BHEX5D_2701132581(pathItemsHEX60gensym912_1291861237, 1), newJBool_1627390046(value_1291861230));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291861225(path_1291861278, value_1291861279) {
    scriptSetOptionBool_1291861228(path_1291861278, value_1291861279);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291861225(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291861310(path_1291861311, value_1291861312) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym926_1291861319 = nsuSplitString(path_1291861311, [46], -1);
      var nodeHEX60gensym926_1291861320 = gEditor.options;
      Label3: {
        var keyHEX60gensym926_1291861339 = [];
        var colontmp__1291861383 = [];
        colontmp__1291861383 = HEX5BHEX5D_2818588799(pathItemsHEX60gensym926_1291861319, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861384 = 0;
        var L_1291861385 = (colontmp__1291861383).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861384 < L_1291861385)) break Label5;
              keyHEX60gensym926_1291861339 = colontmp__1291861383[chckIndx(i_1291861384, 0, (colontmp__1291861383).length - 1)];
              if (!((nodeHEX60gensym926_1291861320.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym926_1291861320, keyHEX60gensym926_1291861339))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym926_1291861320, keyHEX60gensym926_1291861339, newJObject_1627390051());
              }
              
              nodeHEX60gensym926_1291861320 = HEX5BHEX5D_1627393037(nodeHEX60gensym926_1291861320, keyHEX60gensym926_1291861339);
              i_1291861384 = addInt(i_1291861384, 1);
              if (!(((colontmp__1291861383).length == L_1291861385))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym926_1291861320 == null) || !((nodeHEX60gensym926_1291861320.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym926_1291861320, HEX5BHEX5D_2701132581(pathItemsHEX60gensym926_1291861319, 1), newJString_1627389994(value_1291861312));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291861307(path_1291861360, value_1291861361) {
    scriptSetOptionString_1291861310(path_1291861360, value_1291861361);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291861307(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847822(t_1291847825, key_1291847826, hc_1291847827, hc_1291847827_Idx) {
  var result_1291847828 = 0;

  BeforeRet: {
    hc_1291847827[hc_1291847827_Idx] = hash_1325400491(key_1291847826);
    if ((hc_1291847827[hc_1291847827_Idx] == 0)) {
    hc_1291847827[hc_1291847827_Idx] = 314159265;
    }
    
    if (((t_1291847825.data).length == 0)) {
    result_1291847828 = -1;
    break BeforeRet;
    }
    
    var h_1291847880 = (hc_1291847827[hc_1291847827_Idx] & (t_1291847825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0)) break Label2;
          if (((t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0 == hc_1291847827[hc_1291847827_Idx]) && eqStrings(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field1, key_1291847826))) {
          result_1291847828 = h_1291847880;
          break BeforeRet;
          }
          
          h_1291847880 = nextTry_1308622883(h_1291847880, (t_1291847825.data).length - 1);
        }
    };
    result_1291847828 = subInt(-1, h_1291847880);
  };

  return result_1291847828;

}

function mustRehash_3019917621(t_3019917623) {
  var result_3019917624 = false;

    if (!((t_3019917623.counter < (t_3019917623.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019917624 = ((mulInt((t_3019917623.data).length, 2) < mulInt(t_3019917623.counter, 3)) || (subInt((t_3019917623.data).length, t_3019917623.counter) < 4));

  return result_3019917624;

}

function rawInsert_3019918314(t_3019918318, data_3019918319, data_3019918319_Idx, key_3019918320, val_3019918321, hc_3019918322, h_3019918323) {
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field1 = nimCopy(null, key_3019918320, NTI33554449);
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field2 = val_3019918321;
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field0 = hc_3019918322;

  
}

function enlarge_3019917878(t_3019917881) {
    var n_3019917884 = [];
    n_3019917884 = new Array(chckRange(mulInt((t_3019917881.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019917881.data).length, 2), 0, 2147483647) ; ++i) { n_3019917884[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3019917881.data; t_3019917881.data = n_3019917884; n_3019917884 = Temporary1;    Label2: {
      var i_3019917982 = 0;
      var colontmp__1291861472 = 0;
      colontmp__1291861472 = (n_3019917884).length - 1;
      var res_1291861473 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291861473 <= colontmp__1291861472)) break Label4;
            i_3019917982 = res_1291861473;
            var eh_3019918063 = n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019918063)) {
            var j_3019918067 = (eh_3019918063 & (t_3019917881.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019917881.data[chckIndx(j_3019918067, 0, (t_3019917881.data).length - 1)].Field0)) break Label6;
                  j_3019918067 = nextTry_1308622883(j_3019918067, (t_3019917881.data).length - 1);
                }
            };
            rawInsert_3019918314(t_3019917881, t_3019917881, "data", n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field1, n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field2, eh_3019918063, j_3019918067);
            }
            
            res_1291861473 = addInt(res_1291861473, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019918564(t_3019918567, key_3019918568, hc_3019918569) {
  var result_3019918570 = 0;

  BeforeRet: {
    if (((t_3019918567.data).length == 0)) {
    result_3019918570 = -1;
    break BeforeRet;
    }
    
    var h_3019918655 = (hc_3019918569 & (t_3019918567.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field0)) break Label2;
          if (((t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field0 == hc_3019918569) && eqStrings(t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field1, key_3019918568))) {
          result_3019918570 = h_3019918655;
          break BeforeRet;
          }
          
          h_3019918655 = nextTry_1308622883(h_3019918655, (t_3019918567.data).length - 1);
        }
    };
    result_3019918570 = subInt(-1, h_3019918655);
  };

  return result_3019918570;

}

function HEX5BHEX5DHEX3D_3019917353(t_3019917356, key_3019917357, val_3019917358) {
    if (((t_3019917356.data).length == 0)) {
    var correctSizeHEX60gensym115_3019917441 = slotsNeeded_1308622891(32);
    t_3019917356.counter = 0;
    t_3019917356.data = new Array(chckRange(correctSizeHEX60gensym115_3019917441, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_3019917441, 0, 2147483647) ; ++i) { t_3019917356.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3019917446 = [0];
    var index_3019917453 = rawGet_1291847822(t_3019917356, key_3019917357, hc_3019917446, 0);
    if ((0 <= index_3019917453)) {
    t_3019917356.data[chckIndx(index_3019917453, 0, (t_3019917356.data).length - 1)].Field2 = val_3019917358;
    }
    else {
      if (((t_3019917356.data).length == 0)) {
      var correctSizeHEX60gensym118_3019917616 = slotsNeeded_1308622891(32);
      t_3019917356.counter = 0;
      t_3019917356.data = new Array(chckRange(correctSizeHEX60gensym118_3019917616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_3019917616, 0, 2147483647) ; ++i) { t_3019917356.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3019917621(t_3019917356)) {
      enlarge_3019917878(t_3019917356);
      index_3019917453 = rawGetKnownHC_3019918564(t_3019917356, key_3019917357, hc_3019917446[0]);
      }
      
      index_3019917453 = subInt(-1, index_3019917453);
      rawInsert_3019918314(t_3019917356, t_3019917356, "data", key_3019917357, val_3019917358, hc_3019917446[0], index_3019917453);
      t_3019917356.counter = addInt(t_3019917356.counter, 1);
    }
    

  
}

function scriptSetCallback_1291861392(path_1291861393, id_1291861394) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3019917353(gEditor.callbacks, path_1291861393, id_1291861394);
  };

  
}

function scriptSetCallbackJsWrapper_1291861389(path_1291861449, id_1291861450) {
    scriptSetCallback_1291861392(path_1291861449, id_1291861450);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291861389(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3254779947(initialSize_3254779950) {
  var result_3254779956 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3254779958 = slotsNeeded_1308622891(chckRange(initialSize_3254779950, 0, 2147483647));
    result_3254779956.counter = 0;
    result_3254779956.data = new Array(chckRange(correctSizeHEX60gensym0_3254779958, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3254779958, 0, 2147483647) ; ++i) { result_3254779956.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3254779956;

}
var commandLineWidget_3254779943 = [null];
var mainStack_3254779944 = [null];
var viewPanel_3254779945 = [null];
var mainPanel_3254779946 = [null];
var widgetsPerEditor_3254779972 = [initTable_3254779947(32)];

function new_536870928() {
  var result_536870931 = null;

  BeforeRet: {
    var r_536870933 = null;
    r_536870933 = ({m_type: NTI3321888779, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], currentEvent: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870931 = r_536870933;
    break BeforeRet;
  };

  return result_536870931;

}

function subscribe_1291851158(event_1291851160, callback_1291851162) {
  var result_1291851163 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851163 = nimCopy(result_1291851163, newId_2046820569(), NTI2046820355);
    event_1291851160.handlers.push({Field0: nimCopy(null, result_1291851163, NTI2046820355), Field1: callback_1291851162});;

  return result_1291851163;

}

function anyInProgress_2080376305(handlers_2080376306) {
  var result_2080376307 = false;

  BeforeRet: {
    Label1: {
      var h_2080376321 = null;
      var i_536871015 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871015 < (handlers_2080376306).length)) break Label3;
            h_2080376321 = handlers_2080376306[chckIndx(i_536871015, 0, (handlers_2080376306).length - 1)];
            if (!((h_2080376321.state.current == 0))) {
            result_2080376307 = true;
            break BeforeRet;
            }
            
            i_536871015 = addInt(i_536871015, 1);
          }
      };
    };
    result_2080376307 = false;
    break BeforeRet;
  };

  return result_2080376307;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2080375135(handler_2080375136) {
  var result_2080375137 = null;

  BeforeRet: {
    if ((handler_2080375136.revision < handler_2080375136.config.revision)) {
    handler_2080375136.dfaInternal = buildDFA_2080374847(handler_2080375136.config);
    handler_2080375136.revision = handler_2080375136.config.revision;
    }
    
    result_2080375137 = handler_2080375136.dfaInternal;
    break BeforeRet;
  };

  return result_2080375137;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet283)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet284))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet285)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2080376271(handler_2080376272, handler_2080376272_Idx, input_2080376273, modifiers_2080376274, handleUnknownAsInput_2080376275) {
  var result_2080376276 = 0;

  BeforeRet: {
    if (!((input_2080376273 == 0))) {
    var prevState_2080376277 = nimCopy(null, handler_2080376272[handler_2080376272_Idx].state, NTI2013265955);
    handler_2080376272[handler_2080376272_Idx].state = nimCopy(handler_2080376272[handler_2080376272_Idx].state, step_2013266020(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state, input_2080376273, modifiers_2080376274), NTI2013265955);
    if ((handler_2080376272[handler_2080376272_Idx].state.current == 0)) {
    if ((prevState_2080376277.current == 0)) {
    if ((((handleUnknownAsInput_2080376275 && (0 < input_2080376273)) && SetEq(SetPlus(modifiers_2080376274, ConstSet281), ConstSet282)) && !((handler_2080376272[handler_2080376272_Idx].handleInput == null)))) {
    result_2080376276 = handler_2080376272[handler_2080376272_Idx].handleInput(inputToString_2013267082(input_2080376273, ConstSet286));
    break BeforeRet;
    }
    
    result_2080376276 = 1;
    break BeforeRet;
    }
    else {
      result_2080376276 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current)) {
    var colontmp__536871017 = parseAction_2080376218(getAction_2013267075(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current));
    var action_2080376290 = nimCopy(null, colontmp__536871017["Field0"], NTI33554449);
    var arg_2080376291 = nimCopy(null, colontmp__536871017["Field1"], NTI33554449);
    handler_2080376272[handler_2080376272_Idx].state.current = getDefaultState_2013267071(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current);
    result_2080376276 = handler_2080376272[handler_2080376272_Idx].handleAction(action_2080376290, arg_2080376291);
    break BeforeRet;
    }
    else {
      result_2080376276 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2080376276 = 0;
      break BeforeRet;
    }
    
  };

  return result_2080376276;

}

function reset_2080376211(handler_2080376212, handler_2080376212_Idx) {
    handler_2080376212[handler_2080376212_Idx].state = nimCopy(handler_2080376212[handler_2080376212_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2080376331(handlers_2080376332, input_2080376333, modifiers_2080376334) {
            var Temporary4;

  var result_2080376335 = false;

    var anyInProgress_2080376336 = anyInProgress_2080376305(handlers_2080376332);
    var allowHandlingUnknownAsInput_2080376337 = true;
    Label1: {
      var i_2080376346 = 0;
      var colontmp__536871010 = 0;
      colontmp__536871010 = (handlers_2080376332).length;
      var i_536871011 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871011 < colontmp__536871010)) break Label3;
            i_2080376346 = i_536871011;
            var handlerIndex_2080376350 = subInt(subInt((handlers_2080376332).length, i_2080376346), 1);
            var handler_2080376351 = [handlers_2080376332[chckIndx(handlerIndex_2080376350, 0, (handlers_2080376332).length - 1)]];
            if (((anyInProgress_2080376336 && !((handler_2080376351[0].state.current == 0))) || (!(anyInProgress_2080376336) && (handler_2080376351[0].state.current == 0)))) {
            Temporary4 = handleEvent_2080376271(handler_2080376351, 0, input_2080376333, modifiers_2080376334, allowHandlingUnknownAsInput_2080376337);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2080376352 = Temporary4;
            if (!((response_2080376352 == 1))) {
            result_2080376335 = true;
            }
            
            switch (response_2080376352) {
            case 3:
              allowHandlingUnknownAsInput_2080376337 = false;
              Label5: {
                var k_2080376399 = 0;
                var h_2080376400 = null;
                var i_536871007 = 0;
                var L_536871008 = (handlers_2080376332).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871007 < L_536871008)) break Label7;
                      k_2080376399 = i_536871007;
                      h_2080376400 = handlers_2080376332[chckIndx(i_536871007, 0, (handlers_2080376332).length - 1)];
                      if (!((k_2080376399 == handlerIndex_2080376350))) {
                      var h_2080376401 = [h_2080376400];
                      reset_2080376211(h_2080376401, 0);
                      }
                      
                      i_536871007 = addInt(i_536871007, 1);
                      if (!(((handlers_2080376332).length == L_536871008))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2080376337 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2080376351[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871011 = addInt(i_536871011, 1);
          }
      };
    };

  return result_2080376335;

}

function add_2952797987(x_2952797989, x_2952797989_Idx, y_2952797990) {
    var Temporary1;

    var xl_2952797994 = (x_2952797989[x_2952797989_Idx]).length;
    if (x_2952797989[x_2952797989_Idx].length < (Temporary1 = chckRange(addInt(xl_2952797994, (y_2952797990).length), 0, 2147483647), Temporary1)) { for (var i = x_2952797989[x_2952797989_Idx].length ; i < Temporary1 ; ++i) x_2952797989[x_2952797989_Idx].push(null); }
               else { x_2952797989[x_2952797989_Idx].length = Temporary1; };
    Label2: {
      var i_2952798009 = 0;
      var colontmp__536871019 = 0;
      colontmp__536871019 = (y_2952797990).length - 1;
      var res_536871020 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871020 <= colontmp__536871019)) break Label4;
            i_2952798009 = res_536871020;
            x_2952797989[x_2952797989_Idx][chckIndx(addInt(xl_2952797994, i_2952798009), 0, (x_2952797989[x_2952797989_Idx]).length - 1)] = y_2952797990[chckIndx(i_2952798009, 0, (y_2952797990).length - 1)];
            res_536871020 = addInt(res_536871020, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291859314(self_1291859315) {
  var result_1291859316 = [[]];

    result_1291859316[0] = nimCopy(null, [self_1291859315.eventHandler], NTI2432696334);
    var modeOnTop_1291859330 = getOption_2818582962(self_1291859315, getContextWithMode_1291859261(self_1291859315, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291859315.modeEventHandler == null)) && !(modeOnTop_1291859330))) {
    result_1291859316[0].push(self_1291859315.modeEventHandler);;
    }
    
    if (self_1291859315.commandLineMode) {
    add_2952797987(result_1291859316, 0, getEventHandlers_2382364828(getCommandLineTextEditor_1291851060(self_1291859315)));
    result_1291859316[0].push(self_1291859315.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291859315.popups).length)) {
    add_2952797987(result_1291859316, 0, getEventHandlers_2449473595(self_1291859315.popups[chckIndx((self_1291859315.popups).length - 1, 0, (self_1291859315.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291859315.currentView) && (self_1291859315.currentView < (self_1291859315.views).length))) {
    add_2952797987(result_1291859316, 0, getEventHandlers_2382364828(self_1291859315.views[chckIndx(self_1291859315.currentView, 0, (self_1291859315.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291859315.modeEventHandler == null)) && modeOnTop_1291859330)) {
    result_1291859316[0].push(self_1291859315.modeEventHandler);;
    }
    

  return result_1291859316[0];

}

function handleKeyPress_1291851063(self_1291851064, input_1291851065, modifiers_1291851066) {
    if (handleEvent_2080376331(currentEventHandlers_1291859314(self_1291851064), input_1291851065, modifiers_1291851066)) {
    preventDefault_2768240809(self_1291851064.platform);
    }
    

  
}

function handleKeyRelease_1291851067(self_1291851068, input_1291851069, modifiers_1291851070) {
  
}

function handleRune_1291851071(self_1291851072, input_1291851073, modifiers_1291851074) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851073)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851073, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851074;
    }
    else {
    Temporary1 = ConstSet287;
    }
    
    var modifiers_1291859558 = nimCopy(null, Temporary1, NTI2013265950);
    if (handleEvent_2080376331(currentEventHandlers_1291859314(self_1291851072), input_1291851073, modifiers_1291859558)) {
    preventDefault_2768240809(self_1291851072.platform);
    }
    

  
}

function subscribe_1291851328(event_1291851330, callback_1291851332) {
  var result_1291851333 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851333 = nimCopy(result_1291851333, newId_2046820569(), NTI2046820355);
    event_1291851330.handlers.push({Field0: nimCopy(null, result_1291851333, NTI2046820355), Field1: callback_1291851332});;

  return result_1291851333;

}

function contains_2097152182(a_2097152183, b_2097152184) {
  var result_2097152185 = false;

  BeforeRet: {
    result_2097152185 = ((((a_2097152183.x <= b_2097152184.x) && (b_2097152184.x <= (a_2097152183.x + a_2097152183.w))) && (a_2097152183.y <= b_2097152184.y)) && (b_2097152184.y <= (a_2097152183.y + a_2097152183.h)));
    break BeforeRet;
  };

  return result_2097152185;

}

function handleMousePress_1291851075(self_1291851076, button_1291851077, modifiers_1291851078, mousePosWindow_1291851079) {
  BeforeRet: {
    Label1: {
      var i_1291859385 = 0;
      var colontmp__536871023 = 0;
      colontmp__536871023 = (self_1291851076.popups).length - 1;
      var res_536871024 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871024 <= colontmp__536871023)) break Label3;
            i_1291859385 = res_536871024;
            var popup_1291859389 = self_1291851076.popups[chckIndx(subInt((self_1291851076.popups).length - 1, i_1291859385), 0, (self_1291851076.popups).length - 1)];
            if (contains_2097152182(popup_1291859389.lastBounds, mousePosWindow_1291851079)) {
            handleMousePress_2449473606(popup_1291859389, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            res_536871024 = addInt(res_536871024, 1);
          }
      };
    };
    var rects_1291859393 = layoutViews_1291848236(self_1291851076.layout, self_1291851076.layout_props, self_1291851076.lastBounds, (self_1291851076.views).length);
    Label4: {
      var i_1291859426 = 0;
      var view_1291859427 = null;
      var i_536871028 = 0;
      var L_536871029 = (self_1291851076.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871028 < L_536871029)) break Label6;
            i_1291859426 = i_536871028;
            view_1291859427 = self_1291851076.views[chckIndx(i_536871028, 0, (self_1291851076.views).length - 1)];
            if (((rects_1291859393).length <= i_1291859426)) {
            break BeforeRet;
            }
            
            if (contains_2097152182(rects_1291859393[chckIndx(i_1291859426, 0, (rects_1291859393).length - 1)], mousePosWindow_1291851079)) {
            self_1291851076.currentView = i_1291859426;
            handleMousePress_2382364845(view_1291859427.editor, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            i_536871028 = addInt(i_536871028, 1);
            if (!(((self_1291851076.views).length == L_536871029))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851080(self_1291851081, button_1291851082, modifiers_1291851083, mousePosWindow_1291851084) {
  BeforeRet: {
    Label1: {
      var i_1291859444 = 0;
      var colontmp__536871032 = 0;
      colontmp__536871032 = (self_1291851081.popups).length - 1;
      var res_536871033 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871033 <= colontmp__536871032)) break Label3;
            i_1291859444 = res_536871033;
            var popup_1291859448 = self_1291851081.popups[chckIndx(subInt((self_1291851081.popups).length - 1, i_1291859444), 0, (self_1291851081.popups).length - 1)];
            if (contains_2097152182(popup_1291859448.lastBounds, mousePosWindow_1291851084)) {
            handleMouseRelease_2449473611(popup_1291859448, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            res_536871033 = addInt(res_536871033, 1);
          }
      };
    };
    var rects_1291859452 = layoutViews_1291848236(self_1291851081.layout, self_1291851081.layout_props, self_1291851081.lastBounds, (self_1291851081.views).length);
    Label4: {
      var i_1291859458 = 0;
      var view_1291859459 = null;
      var i_536871036 = 0;
      var L_536871037 = (self_1291851081.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871036 < L_536871037)) break Label6;
            i_1291859458 = i_536871036;
            view_1291859459 = self_1291851081.views[chckIndx(i_536871036, 0, (self_1291851081.views).length - 1)];
            if (((rects_1291859452).length <= i_1291859458)) {
            break BeforeRet;
            }
            
            if (((self_1291851081.currentView == i_1291859458) && contains_2097152182(rects_1291859452[chckIndx(i_1291859458, 0, (rects_1291859452).length - 1)], mousePosWindow_1291851084))) {
            handleMouseRelease_2382364850(view_1291859459.editor, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            i_536871036 = addInt(i_536871036, 1);
            if (!(((self_1291851081.views).length == L_536871037))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851449(event_1291851451, callback_1291851453) {
  var result_1291851454 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851454 = nimCopy(result_1291851454, newId_2046820569(), NTI2046820355);
    event_1291851451.handlers.push({Field0: nimCopy(null, result_1291851454, NTI2046820355), Field1: callback_1291851453});;

  return result_1291851454;

}

function handleMouseMove_1291851085(self_1291851086, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090) {
  BeforeRet: {
    Label1: {
      var i_1291859476 = 0;
      var colontmp__536871040 = 0;
      colontmp__536871040 = (self_1291851086.popups).length - 1;
      var res_536871041 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871041 <= colontmp__536871040)) break Label3;
            i_1291859476 = res_536871041;
            var popup_1291859480 = self_1291851086.popups[chckIndx(subInt((self_1291851086.popups).length - 1, i_1291859476), 0, (self_1291851086.popups).length - 1)];
            if (contains_2097152182(popup_1291859480.lastBounds, mousePosWindow_1291851087)) {
            handleMouseMove_2449473618(popup_1291859480, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            res_536871041 = addInt(res_536871041, 1);
          }
      };
    };
    var rects_1291859484 = layoutViews_1291848236(self_1291851086.layout, self_1291851086.layout_props, self_1291851086.lastBounds, (self_1291851086.views).length);
    Label4: {
      var i_1291859490 = 0;
      var view_1291859491 = null;
      var i_536871044 = 0;
      var L_536871045 = (self_1291851086.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871044 < L_536871045)) break Label6;
            i_1291859490 = i_536871044;
            view_1291859491 = self_1291851086.views[chckIndx(i_536871044, 0, (self_1291851086.views).length - 1)];
            if (((rects_1291859484).length <= i_1291859490)) {
            break BeforeRet;
            }
            
            if (((self_1291851086.currentView == i_1291859490) && contains_2097152182(rects_1291859484[chckIndx(i_1291859490, 0, (rects_1291859484).length - 1)], mousePosWindow_1291851087))) {
            handleMouseMove_2382364857(view_1291859491.editor, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            i_536871044 = addInt(i_536871044, 1);
            if (!(((self_1291851086.views).length == L_536871045))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851521(event_1291851523, callback_1291851525) {
  var result_1291851526 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851526 = nimCopy(result_1291851526, newId_2046820569(), NTI2046820355);
    event_1291851523.handlers.push({Field0: nimCopy(null, result_1291851526, NTI2046820355), Field1: callback_1291851525});;

  return result_1291851526;

}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet288[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536871056 = 0;
      colontmp__536871056 = subInt((s_855638110).length, 1);
      var res_536871057 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871057 <= colontmp__536871056)) break Label3;
            iHEX60gensym7_855638117 = res_536871057;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536871057 = addInt(res_536871057, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2130707356(aHEX60gensym45_2130707357) {
  var result_2130707358 = [];

    result_2130707358 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2130707362(aHEX60gensym45_2130707357.x) || [],[44,32] || [],HEX24_2130707362(aHEX60gensym45_2130707357.y) || [],[41] || []), NTI33554449);

  return result_2130707358;

}

function formatValue_2785018284(result_2785018286, result_2785018286_Idx, value_2785018287, specifier_2785018288) {
    formatValue_721420459(result_2785018286, result_2785018286_Idx, HEX24_2130707356(value_2785018287), specifier_2785018288);

  
}

function formatValue_2785018207(result_2785018209, result_2785018209_Idx, value_2785018210, specifier_2785018211) {
    formatValue_721420459(result_2785018209, result_2785018209_Idx, HEX24_2113929281(value_2785018210), specifier_2785018211);

  
}

function handleScroll_1291851091(self_1291851092, scroll_1291851093, mousePosWindow_1291851094, modifiers_1291851095) {
  BeforeRet: {
    var fmtRes_1291859505 = [mnewString(0)];
    fmtRes_1291859505[0].push.apply(fmtRes_1291859505[0], [104,97,110,100,108,101,83,99,114,111,108,108,32]);;
    formatValue_2785018284(fmtRes_1291859505, 0, scroll_1291851093, []);
    fmtRes_1291859505[0].push.apply(fmtRes_1291859505[0], [44,32]);;
    formatValue_2785018284(fmtRes_1291859505, 0, mousePosWindow_1291851094, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_1291859505[0], NTI33554449)]);
    Label1: {
      var i_1291859523 = 0;
      var colontmp__536871048 = 0;
      colontmp__536871048 = (self_1291851092.popups).length - 1;
      var res_536871049 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871049 <= colontmp__536871048)) break Label3;
            i_1291859523 = res_536871049;
            var popup_1291859527 = self_1291851092.popups[chckIndx(subInt((self_1291851092.popups).length - 1, i_1291859523), 0, (self_1291851092.popups).length - 1)];
            var fmtRes_1291859533 = [mnewString(0)];
            fmtRes_1291859533[0].push.apply(fmtRes_1291859533[0], [112,111,112,117,112,32]);;
            formatValue_2785018207(fmtRes_1291859533, 0, popup_1291859527.lastBounds, []);
            log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_1291859533[0], NTI33554449)]);
            if (contains_2097152182(popup_1291859527.lastBounds, mousePosWindow_1291851094)) {
            handleScroll_2449473601(popup_1291859527, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            res_536871049 = addInt(res_536871049, 1);
          }
      };
    };
    Label4: {
      var i_1291859544 = 0;
      var view_1291859545 = null;
      var i_536871052 = 0;
      var L_536871053 = (self_1291851092.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871052 < L_536871053)) break Label6;
            i_1291859544 = i_536871052;
            view_1291859545 = self_1291851092.views[chckIndx(i_536871052, 0, (self_1291851092.views).length - 1)];
            if (contains_2097152182(view_1291859545.editor.lastContentBounds, mousePosWindow_1291851094)) {
            handleScroll_2382364840(view_1291859545.editor, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            i_536871052 = addInt(i_536871052, 1);
            if (!(((self_1291851092.views).length == L_536871053))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851593(event_1291851595, callback_1291851597) {
  var result_1291851598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851598 = nimCopy(result_1291851598, newId_2046820569(), NTI2046820355);
    event_1291851595.handlers.push({Field0: nimCopy(null, result_1291851598, NTI2046820355), Field1: callback_1291851597});;

  return result_1291851598;

}

function handleDropFile_1291851096(self_1291851097, path_1291851098, content_1291851099) {
    createView_1291848958(self_1291851097, newTextDocument_2818578645(path_1291851098, content_1291851099, false));

  
}

function subscribe_1291851665(event_1291851667, callback_1291851669) {
  var result_1291851670 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851670 = nimCopy(result_1291851670, newId_2046820569(), NTI2046820355);
    event_1291851667.handlers.push({Field0: nimCopy(null, result_1291851670, NTI2046820355), Field1: callback_1291851669});;

  return result_1291851670;

}

function initTable_1291851680(initialSize_1291851683) {
  var result_1291851684 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_1291851686 = slotsNeeded_1308622891(chckRange(initialSize_1291851683, 0, 2147483647));
    result_1291851684.counter = 0;
    result_1291851684.data = new Array(chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647) ; ++i) { result_1291851684.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851684;

}

function HEX5BHEX5DHEX3D_1291851749(t_1291851752, key_1291851753, val_1291851754) {
    if (((t_1291851752.data).length == 0)) {
    var correctSizeHEX60gensym62_1291851803 = slotsNeeded_1308622891(32);
    t_1291851752.counter = 0;
    t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851808 = [0];
    var index_1291851815 = rawGet_1291848320(t_1291851752, key_1291851753, hc_1291851808, 0);
    if ((0 <= index_1291851815)) {
    t_1291851752.data[chckIndx(index_1291851815, 0, (t_1291851752.data).length - 1)].Field2 = val_1291851754;
    }
    else {
      if (((t_1291851752.data).length == 0)) {
      var correctSizeHEX60gensym65_1291851917 = slotsNeeded_1308622891(32);
      t_1291851752.counter = 0;
      t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851922(t_1291851752)) {
      enlarge_1291852077(t_1291851752);
      index_1291851815 = rawGetKnownHC_1291852549(t_1291851752, key_1291851753, hc_1291851808[0]);
      }
      
      index_1291851815 = subInt(-1, index_1291851815);
      rawInsert_1291852371(t_1291851752, t_1291851752, "data", key_1291851753, val_1291851754, hc_1291851808[0], index_1291851815);
      t_1291851752.counter = addInt(t_1291851752.counter, 1);
    }
    

  
}

function toTable_1291851675(pairs_1291851678) {
  var result_1291851679 = [({data: [], counter: 0})];

    result_1291851679[0] = nimCopy(result_1291851679[0], initTable_1291851680((pairs_1291851678).length), NTI1291845654);
    Label1: {
      var key_1291851707 = [];
      var val_1291851708 = 0.0;
      var i_536871061 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871061 < (pairs_1291851678).length)) break Label3;
            key_1291851707 = pairs_1291851678[chckIndx(i_536871061, 0, (pairs_1291851678).length - 1)]["Field0"];
            val_1291851708 = pairs_1291851678[chckIndx(i_536871061, 0, (pairs_1291851678).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851749(result_1291851679[0], key_1291851707, val_1291851708);
            i_536871061 = addInt(i_536871061, 1);
          }
      };
    };

  return result_1291851679[0];

}

function rawGet_2516583429(t_2516583432, key_2516583433, hc_2516583434, hc_2516583434_Idx) {
  var result_2516583435 = 0;

  BeforeRet: {
    hc_2516583434[hc_2516583434_Idx] = hash_1325400491(key_2516583433);
    if ((hc_2516583434[hc_2516583434_Idx] == 0)) {
    hc_2516583434[hc_2516583434_Idx] = 314159265;
    }
    
    if (((t_2516583432.data).length == 0)) {
    result_2516583435 = -1;
    break BeforeRet;
    }
    
    var h_2516583486 = (hc_2516583434[hc_2516583434_Idx] & (t_2516583432.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0)) break Label2;
          if (((t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0 == hc_2516583434[hc_2516583434_Idx]) && eqStrings(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field1, key_2516583433))) {
          result_2516583435 = h_2516583486;
          break BeforeRet;
          }
          
          h_2516583486 = nextTry_1308622883(h_2516583486, (t_2516583432.data).length - 1);
        }
    };
    result_2516583435 = subInt(-1, h_2516583486);
  };

  return result_2516583435;

}

function mustRehash_2516583774(t_2516583776) {
  var result_2516583777 = false;

    if (!((t_2516583776.counter < (t_2516583776.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516583777 = ((mulInt((t_2516583776.data).length, 2) < mulInt(t_2516583776.counter, 3)) || (subInt((t_2516583776.data).length, t_2516583776.counter) < 4));

  return result_2516583777;

}

function rawInsert_2516584223(t_2516584227, data_2516584228, data_2516584228_Idx, key_2516584229, val_2516584230, hc_2516584231, h_2516584232) {
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field1 = nimCopy(null, key_2516584229, NTI33554449);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2 = nimCopy(data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2, val_2516584230, NTI2550136835);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field0 = hc_2516584231;

  
}

function enlarge_2516583929(t_2516583932) {
    var n_2516583935 = [];
    n_2516583935 = new Array(chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647) ; ++i) { n_2516583935[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2516583932.data; t_2516583932.data = n_2516583935; n_2516583935 = Temporary1;    Label2: {
      var i_2516583999 = 0;
      var colontmp__536871066 = 0;
      colontmp__536871066 = (n_2516583935).length - 1;
      var res_536871067 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871067 <= colontmp__536871066)) break Label4;
            i_2516583999 = res_536871067;
            var eh_2516584053 = n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516584053)) {
            var j_2516584057 = (eh_2516584053 & (t_2516583932.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516583932.data[chckIndx(j_2516584057, 0, (t_2516583932.data).length - 1)].Field0)) break Label6;
                  j_2516584057 = nextTry_1308622883(j_2516584057, (t_2516583932.data).length - 1);
                }
            };
            rawInsert_2516584223(t_2516583932, t_2516583932, "data", n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field1, n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field2, eh_2516584053, j_2516584057);
            }
            
            res_536871067 = addInt(res_536871067, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516584392(t_2516584395, key_2516584396, hc_2516584397) {
  var result_2516584398 = 0;

  BeforeRet: {
    if (((t_2516584395.data).length == 0)) {
    result_2516584398 = -1;
    break BeforeRet;
    }
    
    var h_2516584449 = (hc_2516584397 & (t_2516584395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0)) break Label2;
          if (((t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0 == hc_2516584397) && eqStrings(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field1, key_2516584396))) {
          result_2516584398 = h_2516584449;
          break BeforeRet;
          }
          
          h_2516584449 = nextTry_1308622883(h_2516584449, (t_2516584395.data).length - 1);
        }
    };
    result_2516584398 = subInt(-1, h_2516584449);
  };

  return result_2516584398;

}

function HEX5BHEX5DHEX3D_2516583368(t_2516583371, key_2516583372, val_2516583373) {
    if (((t_2516583371.data).length == 0)) {
    var correctSizeHEX60gensym23_2516583423 = slotsNeeded_1308622891(32);
    t_2516583371.counter = 0;
    t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2516583428 = [0];
    var index_2516583667 = rawGet_2516583429(t_2516583371, key_2516583372, hc_2516583428, 0);
    if ((0 <= index_2516583667)) {
    t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2 = nimCopy(t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2, val_2516583373, NTI2550136835);
    }
    else {
      if (((t_2516583371.data).length == 0)) {
      var correctSizeHEX60gensym28_2516583769 = slotsNeeded_1308622891(32);
      t_2516583371.counter = 0;
      t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2516583774(t_2516583371)) {
      enlarge_2516583929(t_2516583371);
      index_2516583667 = rawGetKnownHC_2516584392(t_2516583371, key_2516583372, hc_2516583428[0]);
      }
      
      index_2516583667 = subInt(-1, index_2516583667);
      rawInsert_2516584223(t_2516583371, t_2516583371, "data", key_2516583372, val_2516583373, hc_2516583428[0], index_2516583667);
      t_2516583371.counter = addInt(t_2516583371.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet289[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871072 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871072 < L_2533359907)) break Label3;
            i_2533359912 = i_536871072;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871072 = addInt(i_536871072, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2516582448(text_2516582449) {
    var Temporary1;

  var result_2516582450 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2516582449, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2516582451 = Temporary1;
    if (((text_2516582449).length == addInt(6, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHex_2533359858(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(8, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(3, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(4, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 2)) || [])), NTI2550136835);
    result_2516582450.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2516582449, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2516582449, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2516582450 = nimCopy(result_2516582450, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2516582450;

}

function rawGet_2516582665(t_2516582668, key_2516582669, hc_2516582670, hc_2516582670_Idx) {
  var result_2516582671 = 0;

  BeforeRet: {
    hc_2516582670[hc_2516582670_Idx] = hash_1325400491(key_2516582669);
    if ((hc_2516582670[hc_2516582670_Idx] == 0)) {
    hc_2516582670[hc_2516582670_Idx] = 314159265;
    }
    
    if (((t_2516582668.data).length == 0)) {
    result_2516582671 = -1;
    break BeforeRet;
    }
    
    var h_2516582723 = (hc_2516582670[hc_2516582670_Idx] & (t_2516582668.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0)) break Label2;
          if (((t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0 == hc_2516582670[hc_2516582670_Idx]) && eqStrings(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field1, key_2516582669))) {
          result_2516582671 = h_2516582723;
          break BeforeRet;
          }
          
          h_2516582723 = nextTry_1308622883(h_2516582723, (t_2516582668.data).length - 1);
        }
    };
    result_2516582671 = subInt(-1, h_2516582723);
  };

  return result_2516582671;

}

function mustRehash_2516584939(t_2516584941) {
  var result_2516584942 = false;

    if (!((t_2516584941.counter < (t_2516584941.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516584942 = ((mulInt((t_2516584941.data).length, 2) < mulInt(t_2516584941.counter, 3)) || (subInt((t_2516584941.data).length, t_2516584941.counter) < 4));

  return result_2516584942;

}

function rawInsert_2516585388(t_2516585392, data_2516585393, data_2516585393_Idx, key_2516585394, val_2516585395, hc_2516585396, h_2516585397) {
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field1 = nimCopy(null, key_2516585394, NTI33554449);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2 = nimCopy(data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2, val_2516585395, NTI2516582404);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field0 = hc_2516585396;

  
}

function enlarge_2516585094(t_2516585097) {
    var n_2516585100 = [];
    n_2516585100 = new Array(chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647) ; ++i) { n_2516585100[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2516585097.data; t_2516585097.data = n_2516585100; n_2516585100 = Temporary1;    Label2: {
      var i_2516585164 = 0;
      var colontmp__536871077 = 0;
      colontmp__536871077 = (n_2516585100).length - 1;
      var res_536871078 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871078 <= colontmp__536871077)) break Label4;
            i_2516585164 = res_536871078;
            var eh_2516585218 = n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516585218)) {
            var j_2516585222 = (eh_2516585218 & (t_2516585097.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516585097.data[chckIndx(j_2516585222, 0, (t_2516585097.data).length - 1)].Field0)) break Label6;
                  j_2516585222 = nextTry_1308622883(j_2516585222, (t_2516585097.data).length - 1);
                }
            };
            rawInsert_2516585388(t_2516585097, t_2516585097, "data", n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field1, n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field2, eh_2516585218, j_2516585222);
            }
            
            res_536871078 = addInt(res_536871078, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516585557(t_2516585560, key_2516585561, hc_2516585562) {
  var result_2516585563 = 0;

  BeforeRet: {
    if (((t_2516585560.data).length == 0)) {
    result_2516585563 = -1;
    break BeforeRet;
    }
    
    var h_2516585614 = (hc_2516585562 & (t_2516585560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0)) break Label2;
          if (((t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0 == hc_2516585562) && eqStrings(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field1, key_2516585561))) {
          result_2516585563 = h_2516585614;
          break BeforeRet;
          }
          
          h_2516585614 = nextTry_1308622883(h_2516585614, (t_2516585560.data).length - 1);
        }
    };
    result_2516585563 = subInt(-1, h_2516585614);
  };

  return result_2516585563;

}

function HEX5BHEX5DHEX3D_2516584766(t_2516584769, key_2516584770, val_2516584771) {
    if (((t_2516584769.data).length == 0)) {
    var correctSizeHEX60gensym37_2516584820 = slotsNeeded_1308622891(32);
    t_2516584769.counter = 0;
    t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2516584825 = [0];
    var index_2516584832 = rawGet_2516582665(t_2516584769, key_2516584770, hc_2516584825, 0);
    if ((0 <= index_2516584832)) {
    t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2 = nimCopy(t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2, val_2516584771, NTI2516582404);
    }
    else {
      if (((t_2516584769.data).length == 0)) {
      var correctSizeHEX60gensym40_2516584934 = slotsNeeded_1308622891(32);
      t_2516584769.counter = 0;
      t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2516584939(t_2516584769)) {
      enlarge_2516585094(t_2516584769);
      index_2516584832 = rawGetKnownHC_2516585557(t_2516584769, key_2516584770, hc_2516584825[0]);
      }
      
      index_2516584832 = subInt(-1, index_2516584832);
      rawInsert_2516585388(t_2516584769, t_2516584769, "data", key_2516584770, val_2516584771, hc_2516584825[0], index_2516584832);
      t_2516584769.counter = addInt(t_2516584769.counter, 1);
    }
    

  
}

function some_2516583251(val_2516583253) {
  var result_2516583254 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2516583254.has = true;
    result_2516583254.val = nimCopy(result_2516583254.val, val_2516583253, NTI2550136835);

  return result_2516583254;

}

function defaultTheme_2516586063() {
  var result_2516586064 = null;

    result_2516586064 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2516586064.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2516586064.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2516582448([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516584766(result_2516586064.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2516583251(parseHexVar_2516582448([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet290, NTI2516582423), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2516586064;

}

function setTheme_1291851003(self_1291851004, path_1291851005) {
      var Temporary1;

      var oHEX60gensym57_1291851008 = loadFromFile_2516586059(path_1291851005);
      if (!isSome_1291851013(oHEX60gensym57_1291851008)) Temporary1 = false; else {        var theme_1291851059 = get_1291851033(oHEX60gensym57_1291851008);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851004.theme = theme_1291851059;
    }
    
    requestRender_2768240746(self_1291851004.platform, false);

  
}

function symbolName_1291854218(a_1291854220) {
  var result_1291854221 = [];

    result_1291854221 = nimCopy(null, names_1291854223[chckIndx(subInt(a_1291854220, 0), 0, (names_1291854223).length - 1)], NTI33554449);

  return result_1291854221;

}

function toJson_1291854202(a_1291854204, opt_1291854205) {
    var Temporary1;

  var result_1291854206 = null;

    switch (opt_1291854205.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854204);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854218(a_1291854204), opt_1291854205);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854204, NTI2415919121), opt_1291854205);
      break;
    }
    result_1291854206 = Temporary1;

  return result_1291854206;

}

function none_1291854110() {
  var result_1291854116 = ({val: null});

  return result_1291854116;

}

function some_1291854117(val_1291854119) {
  var result_1291854120 = ({val: null});

    if (!(!((val_1291854119 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854120.val = val_1291854119;

  return result_1291854120;

}

function getEditor_1291854101() {
  var result_1291854106 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854106 = nimCopy(result_1291854106, none_1291854110(), NTI1291850590);
    break BeforeRet;
    }
    
    result_1291854106 = nimCopy(result_1291854106, some_1291854117(gEditor), NTI1291850590);
    break BeforeRet;
  };

  return result_1291854106;

}

function isNone_1291854155(self_1291854157) {
  var result_1291854158 = false;

    result_1291854158 = (self_1291854157.val == null);

  return result_1291854158;

}

function get_1291854175(self_1291854177) {
  var result_1291854178 = null;

    if (isNone_1291854155(self_1291854177)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854178 = self_1291854177["val"];

  return result_1291854178;

}

function getBackendScript_1291854140_1291854148() {
  var result_1291854149 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym144_1291854150 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym144_1291854150)) {
      break BeforeRet;
      }
      
    };
    result_1291854149 = getBackend_1291854145(get_1291854175(rHEX60gensym144_1291854150));
  };

  return result_1291854149;

}

function getBackendApi_1291854200(HEX3Atmp_1291854142) {
  var result_1291854201 = null;

  BeforeRet: {
    result_1291854201 = newJNull_1627390049();
++excHandler;
    try {
    result_1291854201 = toJson_1291854202(getBackendScript_1291854140_1291854148(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym150_1291854299 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854304 = [mnewString(0)];
    fmtRes_1291854304[0].push.apply(fmtRes_1291854304[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854304, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym150_1291854299 || [],fmtRes_1291854304[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854201;

}

function saveAppStateScript_1291854307_1291855063() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym155_1291855064 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym155_1291855064)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853866(get_1291854175(rHEX60gensym155_1291855064));
  };

  
}

function saveAppStateApi_1291855090(HEX3Atmp_1291854309) {
  var result_1291855091 = null;

    result_1291855091 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291854307_1291855063();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym160_1291855092 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291855097 = [mnewString(0)];
    fmtRes_1291855097[0].push.apply(fmtRes_1291855097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym160_1291855092 || [],fmtRes_1291855097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855091;

}

function requestRenderScript_1291855172_1291855180(redrawEverything_1291855181) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym171_1291855182 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym171_1291855182)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855177(get_1291854175(rHEX60gensym171_1291855182), redrawEverything_1291855181);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet291[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet292), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet293[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818584401(node_2818584404) {
  var result_2818584406 = [false];

    var jsonPath_2818584407 = [[]];
    result_2818584406[0] = false;
    initFromJson_1627395343(result_2818584406, 0, node_2818584404, jsonPath_2818584407, 0);

  return result_2818584406[0];

}

function fromJson_2818584390(a_2818584392, a_2818584392_Idx, b_2818584393, opt_2818584394) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584393, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818584393}));
    }
    
    a_2818584392[a_2818584392_Idx] = to_2818584401(b_2818584393);

  
}

function jsonTo_2818584384(b_2818584386, opt_2818584388) {
  var result_2818584389 = [false];

    fromJson_2818584390(result_2818584389, 0, b_2818584386, opt_2818584388);

  return result_2818584389[0];

}

function requestRenderApi_1291855209(HEX3Atmp_1291855174) {
      var Temporary3;

  var result_1291855210 = null;

    result_1291855210 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855174))) {
      Temporary3 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855174, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291855172_1291855180(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym176_1291855216 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291855221 = [mnewString(0)];
    fmtRes_1291855221[0].push.apply(fmtRes_1291855221[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855221, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym176_1291855216 || [],fmtRes_1291855221[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855210;

}

function setHandleInputsScript_1291855224_1291855233(context_1291855234, value_1291855235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_1291855236 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym182_1291855236)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855229(get_1291854175(rHEX60gensym182_1291855236), context_1291855234, value_1291855235);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet294[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet295), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet296[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855264(HEX3Atmp_1291855226) {
  var result_1291855265 = null;

    result_1291855265 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291855224_1291855233(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855226, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855226, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_1291855276 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291855281 = [mnewString(0)];
    fmtRes_1291855281[0].push.apply(fmtRes_1291855281[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855281, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_1291855276 || [],fmtRes_1291855281[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855265;

}

function setHandleActionsScript_1291855284_1291855293(context_1291855294, value_1291855295) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym192_1291855296 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym192_1291855296)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855289(get_1291854175(rHEX60gensym192_1291855296), context_1291855294, value_1291855295);
  };

  
}

function setHandleActionsApi_1291855324(HEX3Atmp_1291855286) {
  var result_1291855325 = null;

    result_1291855325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291855284_1291855293(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855286, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855286, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym197_1291855336 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291855341 = [mnewString(0)];
    fmtRes_1291855341[0].push.apply(fmtRes_1291855341[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855341, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym197_1291855336 || [],fmtRes_1291855341[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855325;

}

function setConsumeAllActionsScript_1291855344_1291855353(context_1291855354, value_1291855355) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym202_1291855356 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym202_1291855356)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855349(get_1291854175(rHEX60gensym202_1291855356), context_1291855354, value_1291855355);
  };

  
}

function setConsumeAllActionsApi_1291855384(HEX3Atmp_1291855346) {
  var result_1291855385 = null;

    result_1291855385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291855344_1291855353(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855346, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855346, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym207_1291855396 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291855401 = [mnewString(0)];
    fmtRes_1291855401[0].push.apply(fmtRes_1291855401[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855401, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym207_1291855396 || [],fmtRes_1291855401[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855385;

}

function setConsumeAllInputScript_1291855404_1291855413(context_1291855414, value_1291855415) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym212_1291855416 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym212_1291855416)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855409(get_1291854175(rHEX60gensym212_1291855416), context_1291855414, value_1291855415);
  };

  
}

function setConsumeAllInputApi_1291855444(HEX3Atmp_1291855406) {
  var result_1291855445 = null;

    result_1291855445 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291855404_1291855413(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855406, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855406, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym217_1291855456 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291855461 = [mnewString(0)];
    fmtRes_1291855461[0].push.apply(fmtRes_1291855461[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855461, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym217_1291855456 || [],fmtRes_1291855461[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855445;

}

function clearWorkspaceCachesScript_1291855541_1291855552() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym225_1291855553 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym225_1291855553)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855546(get_1291854175(rHEX60gensym225_1291855553));
  };

  
}

function clearWorkspaceCachesApi_1291855579(HEX3Atmp_1291855543) {
  var result_1291855580 = null;

    result_1291855580 = newJNull_1627390049();
++excHandler;
    try {
    clearWorkspaceCachesScript_1291855541_1291855552();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym230_1291855581 = [99,108,101,97,114,87,111,114,107,115,112,97,99,101,67,97,99,104,101,115];
    var fmtRes_1291855586 = [mnewString(0)];
    fmtRes_1291855586[0].push.apply(fmtRes_1291855586[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855586, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym230_1291855581 || [],fmtRes_1291855586[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855580;

}

function openGithubWorkspaceScript_1291855593_1291855603(user_1291855604, repository_1291855605, branchOrHash_1291855606) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym236_1291855607 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym236_1291855607)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855598(get_1291854175(rHEX60gensym236_1291855607), user_1291855604, repository_1291855605, branchOrHash_1291855606);
  };

  
}

function openGithubWorkspaceApi_1291855636(HEX3Atmp_1291855595) {
  var result_1291855637 = null;

    result_1291855637 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291855593_1291855603(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855595, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym241_1291855653 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855658 = [mnewString(0)];
    fmtRes_1291855658[0].push.apply(fmtRes_1291855658[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855658, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym241_1291855653 || [],fmtRes_1291855658[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855637;

}

function openAbsytreeServerWorkspaceScript_1291855675_1291855683(url_1291855684) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_1291855685 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym245_1291855685)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855680(get_1291854175(rHEX60gensym245_1291855685), url_1291855684);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855712(HEX3Atmp_1291855677) {
  var result_1291855713 = null;

    result_1291855713 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291855675_1291855683(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855677, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym250_1291855719 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855724 = [mnewString(0)];
    fmtRes_1291855724[0].push.apply(fmtRes_1291855724[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855724, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym250_1291855719 || [],fmtRes_1291855724[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855713;

}

function getFlagScript2_1291855727_1291855746(flag_1291855747, default_1291855748) {
  var result_1291855749 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym255_1291855750 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym255_1291855750)) {
      break BeforeRet;
      }
      
    };
    result_1291855749 = getFlag_1291848874(get_1291854175(rHEX60gensym255_1291855750), flag_1291855747, default_1291855748);
  };

  return result_1291855749;

}

function getFlagApi2_1291855779(HEX3Atmp_1291855729) {
      var Temporary4;

  var result_1291855780 = null;

  BeforeRet: {
    result_1291855780 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291855729))) {
      Temporary4 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855729, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291855780 = toJson_2818588330(getFlagScript2_1291855727_1291855746(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855729, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym261_1291855795 = [103,101,116,70,108,97,103];
    var fmtRes_1291855800 = [mnewString(0)];
    fmtRes_1291855800[0].push.apply(fmtRes_1291855800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym261_1291855795 || [],fmtRes_1291855800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855780;

}

function setFlagScript2_1291855804_1291855868(flag_1291855869, value_1291855870) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym267_1291855871 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym267_1291855871)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848951(get_1291854175(rHEX60gensym267_1291855871), flag_1291855869, value_1291855870);
  };

  
}

function setFlagApi2_1291855899(HEX3Atmp_1291855806) {
  var result_1291855900 = null;

    result_1291855900 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291855804_1291855868(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855806, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291855806, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym272_1291855911 = [115,101,116,70,108,97,103];
    var fmtRes_1291855916 = [mnewString(0)];
    fmtRes_1291855916[0].push.apply(fmtRes_1291855916[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855916, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym272_1291855911 || [],fmtRes_1291855916[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855900;

}

function toggleFlagScript_1291855925_1291855933(flag_1291855934) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym281_1291855935 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym281_1291855935)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848955(get_1291854175(rHEX60gensym281_1291855935), flag_1291855934);
  };

  
}

function toggleFlagApi_1291855962(HEX3Atmp_1291855927) {
  var result_1291855963 = null;

    result_1291855963 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291855925_1291855933(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855927, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym286_1291855969 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291855974 = [mnewString(0)];
    fmtRes_1291855974[0].push.apply(fmtRes_1291855974[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855974, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym286_1291855969 || [],fmtRes_1291855974[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855963;

}

function setOptionScript_1291855977_1291856025(option_1291856026, value_1291856027) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym291_1291856028 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym291_1291856028)) {
      break BeforeRet;
      }
      
    };
    setOption_1291855982(get_1291854175(rHEX60gensym291_1291856028), option_1291856026, value_1291856027);
  };

  
}

function setOptionApi_1291856056(HEX3Atmp_1291855979) {
  var result_1291856057 = null;

    result_1291856057 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291855977_1291856025(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855979, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291855979, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym296_1291856063 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291856068 = [mnewString(0)];
    fmtRes_1291856068[0].push.apply(fmtRes_1291856068[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856068, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym296_1291856063 || [],fmtRes_1291856068[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856057;

}

function quitScript_1291856076_1291856083() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym304_1291856084 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym304_1291856084)) {
      break BeforeRet;
      }
      
    };
    quit_1291856081(get_1291854175(rHEX60gensym304_1291856084));
  };

  
}

function quitApi_1291856110(HEX3Atmp_1291856078) {
  var result_1291856111 = null;

    result_1291856111 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291856076_1291856083();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym309_1291856112 = [113,117,105,116];
    var fmtRes_1291856117 = [mnewString(0)];
    fmtRes_1291856117[0].push.apply(fmtRes_1291856117[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856117, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym309_1291856112 || [],fmtRes_1291856117[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856111;

}

function changeFontSizeScript_1291856120_1291856128(amount_1291856129) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym313_1291856130 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym313_1291856130)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856125(get_1291854175(rHEX60gensym313_1291856130), amount_1291856129);
  };

  
}

function initFromJson_2818585761(dst_2818585763, dst_2818585763_Idx, jsonNode_2818585764, jsonPath_2818585765, jsonPath_2818585765_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818585764.kind == 4)) {
    var Temporary1 = jsonNode_2818585764;
    if (ConstSet297[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818585770 = NaN;
      dst_2818585763[dst_2818585763_Idx] = b_2818585770;
      break;
    case "inf":
      var b_2818585771 = Infinity;
      dst_2818585763[dst_2818585763_Idx] = b_2818585771;
      break;
    case "-inf":
      var b_2818585772 = -Infinity;
      dst_2818585763[dst_2818585763_Idx] = b_2818585772;
      break;
    default: 
      var Temporary2 = jsonNode_2818585764;
      if (ConstSet298[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818585764, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818585765[jsonPath_2818585765_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet299[jsonNode_2818585764.kind] != undefined))) {
      var msgHEX60gensym398_2818585786 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet300), nimCopy(null, jsonPath_2818585765[jsonPath_2818585765_Idx], NTI33554449), reprEnum(jsonNode_2818585764.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym398_2818585786, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818585764.kind == 3)) {
      var Temporary3 = jsonNode_2818585764;
      if (ConstSet301[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818585763[dst_2818585763_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818585764;
        if (ConstSet302[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818585763[dst_2818585763_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818585750(node_2818585753) {
  var result_2818585755 = [0.0];

    var jsonPath_2818585756 = [[]];
    result_2818585755[0] = 0.0;
    initFromJson_2818585761(result_2818585755, 0, node_2818585753, jsonPath_2818585756, 0);

  return result_2818585755[0];

}

function fromJson_2818585735(a_2818585737, a_2818585737_Idx, b_2818585738, opt_2818585739) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585738, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818585738}));
    }
    
    a_2818585737[a_2818585737_Idx] = to_2818585750(b_2818585738);

  
}

function jsonTo_2818585729(b_2818585731, opt_2818585733) {
  var result_2818585734 = [0.0];

    fromJson_2818585735(result_2818585734, 0, b_2818585731, opt_2818585733);

  return result_2818585734[0];

}

function changeFontSizeApi_1291856157(HEX3Atmp_1291856122) {
  var result_1291856158 = null;

    result_1291856158 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291856120_1291856128(jsonTo_2818585729(HEX5BHEX5D_1627393116(HEX3Atmp_1291856122, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym318_1291856164 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291856169 = [mnewString(0)];
    fmtRes_1291856169[0].push.apply(fmtRes_1291856169[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856169, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym318_1291856164 || [],fmtRes_1291856169[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856158;

}

function changeLayoutPropScript_1291856172_1291856430(prop_1291856431, change_1291856432) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym323_1291856433 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym323_1291856433)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856177(get_1291854175(rHEX60gensym323_1291856433), prop_1291856431, change_1291856432);
  };

  
}

function changeLayoutPropApi_1291856461(HEX3Atmp_1291856174) {
  var result_1291856462 = null;

    result_1291856462 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291856172_1291856430(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856174, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585729(HEX5BHEX5D_1627393116(HEX3Atmp_1291856174, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym328_1291856473 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291856478 = [mnewString(0)];
    fmtRes_1291856478[0].push.apply(fmtRes_1291856478[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856478, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym328_1291856473 || [],fmtRes_1291856478[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856462;

}

function toggleStatusBarLocationScript_1291856488_1291856495() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym337_1291856496 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym337_1291856496)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856493(get_1291854175(rHEX60gensym337_1291856496));
  };

  
}

function toggleStatusBarLocationApi_1291856522(HEX3Atmp_1291856490) {
  var result_1291856523 = null;

    result_1291856523 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291856488_1291856495();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym342_1291856524 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291856529 = [mnewString(0)];
    fmtRes_1291856529[0].push.apply(fmtRes_1291856529[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856529, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym342_1291856524 || [],fmtRes_1291856529[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856523;

}

function createViewScript_1291856532_1291856544() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym345_1291856545 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym345_1291856545)) {
      break BeforeRet;
      }
      
    };
    createView_1291856537(get_1291854175(rHEX60gensym345_1291856545));
  };

  
}

function createViewApi_1291856571(HEX3Atmp_1291856534) {
  var result_1291856572 = null;

    result_1291856572 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291856532_1291856544();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym350_1291856573 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291856578 = [mnewString(0)];
    fmtRes_1291856578[0].push.apply(fmtRes_1291856578[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856578, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym350_1291856573 || [],fmtRes_1291856578[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856572;

}

function closeCurrentViewScript_1291856586_1291856623() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym353_1291856624 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym353_1291856624)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856591(get_1291854175(rHEX60gensym353_1291856624));
  };

  
}

function closeCurrentViewApi_1291856650(HEX3Atmp_1291856588) {
  var result_1291856651 = null;

    result_1291856651 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291856586_1291856623();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym358_1291856652 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291856657 = [mnewString(0)];
    fmtRes_1291856657[0].push.apply(fmtRes_1291856657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym358_1291856652 || [],fmtRes_1291856657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856651;

}

function moveCurrentViewToTopScript_1291856665_1291856708() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym363_1291856709 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym363_1291856709)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856670(get_1291854175(rHEX60gensym363_1291856709));
  };

  
}

function moveCurrentViewToTopApi_1291856735(HEX3Atmp_1291856667) {
  var result_1291856736 = null;

    result_1291856736 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291856665_1291856708();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym368_1291856737 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291856742 = [mnewString(0)];
    fmtRes_1291856742[0].push.apply(fmtRes_1291856742[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856742, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym368_1291856737 || [],fmtRes_1291856742[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856736;

}

function nextViewScript_1291856746_1291856759() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym374_1291856760 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym374_1291856760)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856751(get_1291854175(rHEX60gensym374_1291856760));
  };

  
}

function nextViewApi_1291856786(HEX3Atmp_1291856748) {
  var result_1291856787 = null;

    result_1291856787 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291856746_1291856759();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym379_1291856788 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291856793 = [mnewString(0)];
    fmtRes_1291856793[0].push.apply(fmtRes_1291856793[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856793, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym379_1291856788 || [],fmtRes_1291856793[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856787;

}

function prevViewScript_1291856796_1291856812() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_1291856813 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym382_1291856813)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856801(get_1291854175(rHEX60gensym382_1291856813));
  };

  
}

function prevViewApi_1291856839(HEX3Atmp_1291856798) {
  var result_1291856840 = null;

    result_1291856840 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291856796_1291856812();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_1291856841 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291856846 = [mnewString(0)];
    fmtRes_1291856846[0].push.apply(fmtRes_1291856846[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856846, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_1291856841 || [],fmtRes_1291856846[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856840;

}

function moveCurrentViewPrevScript_1291856849_1291856879() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym390_1291856880 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym390_1291856880)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856854(get_1291854175(rHEX60gensym390_1291856880));
  };

  
}

function moveCurrentViewPrevApi_1291856906(HEX3Atmp_1291856851) {
  var result_1291856907 = null;

    result_1291856907 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291856849_1291856879();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym395_1291856908 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291856913 = [mnewString(0)];
    fmtRes_1291856913[0].push.apply(fmtRes_1291856913[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856913, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym395_1291856908 || [],fmtRes_1291856913[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856907;

}

function moveCurrentViewNextScript_1291856916_1291856943() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym399_1291856944 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym399_1291856944)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856921(get_1291854175(rHEX60gensym399_1291856944));
  };

  
}

function moveCurrentViewNextApi_1291856970(HEX3Atmp_1291856918) {
  var result_1291856971 = null;

    result_1291856971 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291856916_1291856943();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym404_1291856972 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291856977 = [mnewString(0)];
    fmtRes_1291856977[0].push.apply(fmtRes_1291856977[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856977, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym404_1291856972 || [],fmtRes_1291856977[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856971;

}

function setLayoutScript_1291856980_1291857024(layout_1291857025) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym409_1291857026 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym409_1291857026)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291856985(get_1291854175(rHEX60gensym409_1291857026), layout_1291857025);
  };

  
}

function setLayoutApi_1291857053(HEX3Atmp_1291856982) {
  var result_1291857054 = null;

    result_1291857054 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291856980_1291857024(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856982, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym414_1291857060 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291857065 = [mnewString(0)];
    fmtRes_1291857065[0].push.apply(fmtRes_1291857065[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857065, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym414_1291857060 || [],fmtRes_1291857065[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857054;

}

function commandLineScript_1291857068_1291857080(initialValue_1291857081) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym418_1291857082 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym418_1291857082)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291857073(get_1291854175(rHEX60gensym418_1291857082), initialValue_1291857081);
  };

  
}

function commandLineApi_1291857109(HEX3Atmp_1291857070) {
      var Temporary3;

  var result_1291857110 = null;

    result_1291857110 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857070))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857070, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291857068_1291857080(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym423_1291857116 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857121 = [mnewString(0)];
    fmtRes_1291857121[0].push.apply(fmtRes_1291857121[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857121, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym423_1291857116 || [],fmtRes_1291857121[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857110;

}

function exitCommandLineScript_1291857124_1291857135() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym427_1291857136 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym427_1291857136)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291857129(get_1291854175(rHEX60gensym427_1291857136));
  };

  
}

function exitCommandLineApi_1291857162(HEX3Atmp_1291857126) {
  var result_1291857163 = null;

    result_1291857163 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291857124_1291857135();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym432_1291857164 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857169 = [mnewString(0)];
    fmtRes_1291857169[0].push.apply(fmtRes_1291857169[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857169, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym432_1291857164 || [],fmtRes_1291857169[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857163;

}

function executeCommandLineScript_1291857172_1291857204() {
  var result_1291857205 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym435_1291857206 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym435_1291857206)) {
      break BeforeRet;
      }
      
    };
    result_1291857205 = executeCommandLine_1291857177(get_1291854175(rHEX60gensym435_1291857206));
  };

  return result_1291857205;

}

function executeCommandLineApi_1291857233(HEX3Atmp_1291857174) {
  var result_1291857234 = null;

  BeforeRet: {
    result_1291857234 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857234 = toJson_2818588330(executeCommandLineScript_1291857172_1291857204(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym441_1291857239 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857244 = [mnewString(0)];
    fmtRes_1291857244[0].push.apply(fmtRes_1291857244[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857244, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym441_1291857239 || [],fmtRes_1291857244[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857234;

}

function writeFileScript_1291857280_1291857301(path_1291857302, app_1291857303) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_1291857304 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym452_1291857304)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857285(get_1291854175(rHEX60gensym452_1291857304), path_1291857302, app_1291857303);
  };

  
}

function writeFileApi_1291857332(HEX3Atmp_1291857282) {
      var Temporary3;
      var Temporary5;

  var result_1291857333 = null;

    result_1291857333 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857282))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857282, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291857282))) {
      Temporary5 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291857282, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291857280_1291857301(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_1291857344 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291857349 = [mnewString(0)];
    fmtRes_1291857349[0].push.apply(fmtRes_1291857349[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857349, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_1291857344 || [],fmtRes_1291857349[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857333;

}

function loadFileScript_1291857352_1291857372(path_1291857373) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym466_1291857374 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym466_1291857374)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857357(get_1291854175(rHEX60gensym466_1291857374), path_1291857373);
  };

  
}

function loadFileApi_1291857401(HEX3Atmp_1291857354) {
      var Temporary3;

  var result_1291857402 = null;

    result_1291857402 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857354))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857354, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291857352_1291857372(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym471_1291857408 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291857413 = [mnewString(0)];
    fmtRes_1291857413[0].push.apply(fmtRes_1291857413[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857413, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym471_1291857408 || [],fmtRes_1291857413[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857402;

}

function openFileScript_1291857435_1291857489(path_1291857490, app_1291857491) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_1291857492 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym483_1291857492)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857440(get_1291854175(rHEX60gensym483_1291857492), path_1291857490, app_1291857491);
  };

  
}

function openFileApi_1291857520(HEX3Atmp_1291857437) {
      var Temporary4;

  var result_1291857521 = null;

    result_1291857521 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857437))) {
      Temporary4 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291857437, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291857435_1291857489(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857437, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_1291857532 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291857537 = [mnewString(0)];
    fmtRes_1291857537[0].push.apply(fmtRes_1291857537[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857537, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_1291857532 || [],fmtRes_1291857537[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857521;

}

function removeFromLocalStorageScript_1291857594_1291857617() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857618 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym495_1291857618)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857599(get_1291854175(rHEX60gensym495_1291857618));
  };

  
}

function removeFromLocalStorageApi_1291857644(HEX3Atmp_1291857596) {
  var result_1291857645 = null;

    result_1291857645 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291857594_1291857617();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_1291857646 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291857651 = [mnewString(0)];
    fmtRes_1291857651[0].push.apply(fmtRes_1291857651[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857651, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_1291857646 || [],fmtRes_1291857651[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857645;

}

function loadThemeScript_1291857654_1291857698(name_1291857699) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym506_1291857700 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym506_1291857700)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857659(get_1291854175(rHEX60gensym506_1291857700), name_1291857699);
  };

  
}

function loadThemeApi_1291857727(HEX3Atmp_1291857656) {
  var result_1291857728 = null;

    result_1291857728 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291857654_1291857698(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857656, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_1291857734 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291857739 = [mnewString(0)];
    fmtRes_1291857739[0].push.apply(fmtRes_1291857739[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857739, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_1291857734 || [],fmtRes_1291857739[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857728;

}

function chooseThemeScript_1291857742_1291858027() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_1291858028 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym517_1291858028)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857747(get_1291854175(rHEX60gensym517_1291858028));
  };

  
}

function chooseThemeApi_1291858054(HEX3Atmp_1291857744) {
  var result_1291858055 = null;

    result_1291858055 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291857742_1291858027();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_1291858056 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291858061 = [mnewString(0)];
    fmtRes_1291858061[0].push.apply(fmtRes_1291858061[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858061, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_1291858056 || [],fmtRes_1291858061[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858055;

}

function chooseFileScript_1291858360_1291858539(view_1291858540) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym543_1291858541 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym543_1291858541)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858365(get_1291854175(rHEX60gensym543_1291858541), view_1291858540);
  };

  
}

function chooseFileApi_1291858568(HEX3Atmp_1291858362) {
      var Temporary3;

  var result_1291858569 = null;

    result_1291858569 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291858362))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858362, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858360_1291858539(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym548_1291858575 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291858580 = [mnewString(0)];
    fmtRes_1291858580[0].push.apply(fmtRes_1291858580[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858580, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym548_1291858575 || [],fmtRes_1291858580[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858569;

}

function setGithubAccessTokenScript_1291858608_1291858616(token_1291858617) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym560_1291858618 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym560_1291858618)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858613(get_1291854175(rHEX60gensym560_1291858618), token_1291858617);
  };

  
}

function setGithubAccessTokenApi_1291858645(HEX3Atmp_1291858610) {
  var result_1291858646 = null;

    result_1291858646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291858608_1291858616(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858610, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_1291858652 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291858657 = [mnewString(0)];
    fmtRes_1291858657[0].push.apply(fmtRes_1291858657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_1291858652 || [],fmtRes_1291858657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858646;

}

function reloadConfigScript_1291858660_1291858680() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_1291858681 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym568_1291858681)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858665(get_1291854175(rHEX60gensym568_1291858681));
  };

  
}

function reloadConfigApi_1291858707(HEX3Atmp_1291858662) {
  var result_1291858708 = null;

    result_1291858708 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291858660_1291858680();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_1291858709 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291858714 = [mnewString(0)];
    fmtRes_1291858714[0].push.apply(fmtRes_1291858714[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858714, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_1291858709 || [],fmtRes_1291858714[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858708;

}

function logOptionsScript_1291858717_1291858724() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym578_1291858725 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym578_1291858725)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858722(get_1291854175(rHEX60gensym578_1291858725));
  };

  
}

function logOptionsApi_1291858751(HEX3Atmp_1291858719) {
  var result_1291858752 = null;

    result_1291858752 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291858717_1291858724();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_1291858753 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291858758 = [mnewString(0)];
    fmtRes_1291858758[0].push.apply(fmtRes_1291858758[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858758, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_1291858753 || [],fmtRes_1291858758[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858752;

}

function clearCommandsScript_1291858761_1291858769(context_1291858770) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym587_1291858771 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym587_1291858771)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858766(get_1291854175(rHEX60gensym587_1291858771), context_1291858770);
  };

  
}

function clearCommandsApi_1291858798(HEX3Atmp_1291858763) {
  var result_1291858799 = null;

    result_1291858799 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291858761_1291858769(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858763, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_1291858805 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291858810 = [mnewString(0)];
    fmtRes_1291858810[0].push.apply(fmtRes_1291858810[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858810, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_1291858805 || [],fmtRes_1291858810[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858799;

}

function toJson_2818584460(a_2818584462, opt_2818584463) {
  var result_2818584464 = null;

    result_2818584464 = HEX25_1627391779(a_2818584462);

  return result_2818584464;

}

function toJson_1291859081(a_1291859083, opt_1291859084) {
  var result_1291859085 = null;

    result_1291859085 = newJArray_1627390082();
    Label1: {
      var ai_1291859092 = 0;
      var i_536871160 = 0;
      var L_536871161 = (a_1291859083).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871160 < L_536871161)) break Label3;
            ai_1291859092 = a_1291859083[chckIndx(i_536871160, 0, (a_1291859083).length - 1)];
            add_1627390190(result_1291859085, toJson_2818584460(ai_1291859092, opt_1291859084));
            i_536871160 = addInt(i_536871160, 1);
            if (!(((a_1291859083).length == L_536871161))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291859085;

}

function getAllEditorsScript_1291858817_1291859050() {
  var result_1291859051 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym595_1291859052 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym595_1291859052)) {
      break BeforeRet;
      }
      
    };
    result_1291859051 = nimCopy(null, getAllEditors_1291858822(get_1291854175(rHEX60gensym595_1291859052)), NTI1291854648);
  };

  return result_1291859051;

}

function getAllEditorsApi_1291859079(HEX3Atmp_1291858819) {
  var result_1291859080 = null;

  BeforeRet: {
    result_1291859080 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859080 = toJson_1291859081(getAllEditorsScript_1291858817_1291859050(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym601_1291859097 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291859102 = [mnewString(0)];
    fmtRes_1291859102[0].push.apply(fmtRes_1291859102[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859102, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym601_1291859097 || [],fmtRes_1291859102[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859080;

}

function setModeScript22_1291859120_1291859160(mode_1291859161) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym607_1291859162 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym607_1291859162)) {
      break BeforeRet;
      }
      
    };
    setMode_1291859125(get_1291854175(rHEX60gensym607_1291859162), mode_1291859161);
  };

  
}

function setModeApi22_1291859189(HEX3Atmp_1291859122) {
  var result_1291859190 = null;

    result_1291859190 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291859120_1291859160(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859122, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_1291859196 = [115,101,116,77,111,100,101];
    var fmtRes_1291859201 = [mnewString(0)];
    fmtRes_1291859201[0].push.apply(fmtRes_1291859201[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859201, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_1291859196 || [],fmtRes_1291859201[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859190;

}

function modeScript22_1291859205_1291859213() {
  var result_1291859214 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym618_1291859215 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym618_1291859215)) {
      break BeforeRet;
      }
      
    };
    result_1291859214 = nimCopy(null, mode_1291859210(get_1291854175(rHEX60gensym618_1291859215)), NTI33554449);
  };

  return result_1291859214;

}

function modeApi22_1291859242(HEX3Atmp_1291859207) {
  var result_1291859243 = null;

  BeforeRet: {
    result_1291859243 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859243 = toJson_1811939932(modeScript22_1291859205_1291859213(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_1291859248 = [109,111,100,101];
    var fmtRes_1291859253 = [mnewString(0)];
    fmtRes_1291859253[0].push.apply(fmtRes_1291859253[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859253, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_1291859248 || [],fmtRes_1291859253[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859243;

}

function getContextWithModeScript22_1291859256_1291859265(context_1291859266) {
  var result_1291859267 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym628_1291859268 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym628_1291859268)) {
      break BeforeRet;
      }
      
    };
    result_1291859267 = nimCopy(null, getContextWithMode_1291859261(get_1291854175(rHEX60gensym628_1291859268), context_1291859266), NTI33554449);
  };

  return result_1291859267;

}

function getContextWithModeApi22_1291859296(HEX3Atmp_1291859258) {
  var result_1291859297 = null;

  BeforeRet: {
    result_1291859297 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859297 = toJson_1811939932(getContextWithModeScript22_1291859256_1291859265(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859258, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym634_1291859307 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291859312 = [mnewString(0)];
    fmtRes_1291859312[0].push.apply(fmtRes_1291859312[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859312, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym634_1291859307 || [],fmtRes_1291859312[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859297;

}

function scriptRunActionScript_1291859569_1291859579(action_1291859580, arg_1291859581) {
    scriptRunAction_1291859573(action_1291859580, arg_1291859581);

  
}

function scriptRunActionApi_1291859586(HEX3Atmp_1291859571) {
  var result_1291859587 = null;

    result_1291859587 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291859569_1291859579(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859571, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859571, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym653_1291859598 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291859603 = [mnewString(0)];
    fmtRes_1291859603[0].push.apply(fmtRes_1291859603[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859603, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym653_1291859598 || [],fmtRes_1291859603[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859587;

}

function scriptLogScript_1291859606_1291859617(message_1291859618) {
    scriptLog_1291859610(message_1291859618);

  
}

function scriptLogApi_1291859622(HEX3Atmp_1291859608) {
  var result_1291859623 = null;

    result_1291859623 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291859606_1291859617(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859608, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym660_1291859629 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291859634 = [mnewString(0)];
    fmtRes_1291859634[0].push.apply(fmtRes_1291859634[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859634, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym660_1291859629 || [],fmtRes_1291859634[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859623;

}

function addCommandScriptScript_1291859637_1291859649(context_1291859650, keys_1291859651, action_1291859652, arg_1291859653) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym668_1291859654 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym668_1291859654)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859642(get_1291854175(rHEX60gensym668_1291859654), context_1291859650, keys_1291859651, action_1291859652, arg_1291859653);
  };

  
}

function addCommandScriptApi_1291859684(HEX3Atmp_1291859639) {
      var Temporary6;

  var result_1291859685 = null;

    result_1291859685 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291859639))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859639, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291859637_1291859649(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859639, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859639, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859639, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym673_1291859706 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291859711 = [mnewString(0)];
    fmtRes_1291859711[0].push.apply(fmtRes_1291859711[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859711, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym673_1291859706 || [],fmtRes_1291859711[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859685;

}

function removeCommandScript_1291859720_1291859729(context_1291859730, keys_1291859731) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym679_1291859732 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym679_1291859732)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859725(get_1291854175(rHEX60gensym679_1291859732), context_1291859730, keys_1291859731);
  };

  
}

function removeCommandApi_1291859760(HEX3Atmp_1291859722) {
  var result_1291859761 = null;

    result_1291859761 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291859720_1291859729(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859722, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859722, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym684_1291859772 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291859777 = [mnewString(0)];
    fmtRes_1291859777[0].push.apply(fmtRes_1291859777[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859777, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym684_1291859772 || [],fmtRes_1291859777[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859761;

}

function getActivePopupScript_1291859782_1291859800() {
  var result_1291859801 = 0;

    result_1291859801 = getActivePopup_1291859786();

  return result_1291859801;

}

function getActivePopupApi_1291859805(HEX3Atmp_1291859784) {
  var result_1291859806 = null;

  BeforeRet: {
    result_1291859806 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859806 = toJson_2818584460(getActivePopupScript_1291859782_1291859800(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym691_1291859811 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291859816 = [mnewString(0)];
    fmtRes_1291859816[0].push.apply(fmtRes_1291859816[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859816, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym691_1291859811 || [],fmtRes_1291859816[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859806;

}

function getActiveEditorScript_1291859819_1291859831() {
  var result_1291859832 = 0;

    result_1291859832 = getActiveEditor_1291859823();

  return result_1291859832;

}

function getActiveEditorApi_1291859836(HEX3Atmp_1291859821) {
  var result_1291859837 = null;

  BeforeRet: {
    result_1291859837 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859837 = toJson_2818584460(getActiveEditorScript_1291859819_1291859831(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym699_1291859842 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291859847 = [mnewString(0)];
    fmtRes_1291859847[0].push.apply(fmtRes_1291859847[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859847, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym699_1291859842 || [],fmtRes_1291859847[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859837;

}

function loadCurrentConfigScript_1291859893_1291859905() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym711_1291859906 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym711_1291859906)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859898(get_1291854175(rHEX60gensym711_1291859906));
  };

  
}

function loadCurrentConfigApi_1291859932(HEX3Atmp_1291859895) {
  var result_1291859933 = null;

    result_1291859933 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291859893_1291859905();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym716_1291859934 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291859939 = [mnewString(0)];
    fmtRes_1291859939[0].push.apply(fmtRes_1291859939[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859939, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym716_1291859934 || [],fmtRes_1291859939[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859933;

}

function sourceCurrentDocumentScript_1291859942_1291859972() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym719_1291859973 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym719_1291859973)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859947(get_1291854175(rHEX60gensym719_1291859973));
  };

  
}

function sourceCurrentDocumentApi_1291859999(HEX3Atmp_1291859944) {
  var result_1291860000 = null;

    result_1291860000 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291859942_1291859972();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym724_1291860001 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291860006 = [mnewString(0)];
    fmtRes_1291860006[0].push.apply(fmtRes_1291860006[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860006, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym724_1291860001 || [],fmtRes_1291860006[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860000;

}

function getEditorScript_1291860009_1291860022(index_1291860023) {
  var result_1291860024 = 0;

    result_1291860024 = getEditor_1291860013(index_1291860023);

  return result_1291860024;

}

function getEditorApi_1291860029(HEX3Atmp_1291860011) {
  var result_1291860030 = null;

  BeforeRet: {
    result_1291860030 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860030 = toJson_2818584460(getEditorScript_1291860009_1291860022(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860011, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym734_1291860040 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291860045 = [mnewString(0)];
    fmtRes_1291860045[0].push.apply(fmtRes_1291860045[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860045, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym734_1291860040 || [],fmtRes_1291860045[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860030;

}

function scriptIsTextEditorScript_1291860048_1291860090(editorId_1291860091) {
  var result_1291860092 = false;

    result_1291860092 = scriptIsTextEditor_1291860052(editorId_1291860091);

  return result_1291860092;

}

function scriptIsTextEditorApi_1291860097(HEX3Atmp_1291860050) {
  var result_1291860098 = null;

  BeforeRet: {
    result_1291860098 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860098 = toJson_2818588330(scriptIsTextEditorScript_1291860048_1291860090(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860050, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym743_1291860108 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291860113 = [mnewString(0)];
    fmtRes_1291860113[0].push.apply(fmtRes_1291860113[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860113, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym743_1291860108 || [],fmtRes_1291860113[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860098;

}

function scriptIsAstEditorScript_1291860117_1291860159(editorId_1291860160) {
  var result_1291860161 = false;

    result_1291860161 = scriptIsAstEditor_1291860121(editorId_1291860160);

  return result_1291860161;

}

function scriptIsAstEditorApi_1291860166(HEX3Atmp_1291860119) {
  var result_1291860167 = null;

  BeforeRet: {
    result_1291860167 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860167 = toJson_2818588330(scriptIsAstEditorScript_1291860117_1291860159(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860119, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym752_1291860177 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291860182 = [mnewString(0)];
    fmtRes_1291860182[0].push.apply(fmtRes_1291860182[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860182, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym752_1291860177 || [],fmtRes_1291860182[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860167;

}

function scriptRunActionForScript_1291860185_1291860252(editorId_1291860253, action_1291860254, arg_1291860255) {
    scriptRunActionFor_1291860189(editorId_1291860253, action_1291860254, arg_1291860255);

  
}

function scriptRunActionForApi_1291860261(HEX3Atmp_1291860187) {
  var result_1291860262 = null;

    result_1291860262 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291860185_1291860252(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860187, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860187, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860187, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym762_1291860278 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291860283 = [mnewString(0)];
    fmtRes_1291860283[0].push.apply(fmtRes_1291860283[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860283, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym762_1291860278 || [],fmtRes_1291860283[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860262;

}

function scriptInsertTextIntoScript_1291860286_1291860324(editorId_1291860325, text_1291860326) {
    scriptInsertTextInto_1291860290(editorId_1291860325, text_1291860326);

  
}

function scriptInsertTextIntoApi_1291860331(HEX3Atmp_1291860288) {
  var result_1291860332 = null;

    result_1291860332 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291860286_1291860324(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860288, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860288, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym772_1291860343 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291860348 = [mnewString(0)];
    fmtRes_1291860348[0].push.apply(fmtRes_1291860348[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860348, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym772_1291860343 || [],fmtRes_1291860348[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860332;

}

function toJson_2818584447(a_2818584449, opt_2818584450) {
  var result_2818584451 = null;

    result_2818584451 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584451, [108,105,110,101], toJson_2818584460(a_2818584449["Field0"], opt_2818584450));
    HEX5BHEX5DHEX3D_1627391903(result_2818584451, [99,111,108,117,109,110], toJson_2818584460(a_2818584449["Field1"], opt_2818584450));

  return result_2818584451;

}

function toJson_2818584434(a_2818584436, opt_2818584437) {
  var result_2818584438 = null;

    result_2818584438 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584438, [102,105,114,115,116], toJson_2818584447(a_2818584436["Field0"], opt_2818584437));
    HEX5BHEX5DHEX3D_1627391903(result_2818584438, [108,97,115,116], toJson_2818584447(a_2818584436["Field1"], opt_2818584437));

  return result_2818584438;

}

function scriptTextEditorSelectionScript_1291860351_1291860394(editorId_1291860395) {
  var result_1291860396 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860396 = nimCopy(result_1291860396, scriptTextEditorSelection_1291860355(editorId_1291860395), NTI2415919115);

  return result_1291860396;

}

function scriptTextEditorSelectionApi_1291860401(HEX3Atmp_1291860353) {
  var result_1291860402 = null;

  BeforeRet: {
    result_1291860402 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860402 = toJson_2818584434(scriptTextEditorSelectionScript_1291860351_1291860394(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860353, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym781_1291860412 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860417 = [mnewString(0)];
    fmtRes_1291860417[0].push.apply(fmtRes_1291860417[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860417, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym781_1291860412 || [],fmtRes_1291860417[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860402;

}

function scriptSetTextEditorSelectionScript_1291860424_1291860466(editorId_1291860467, selection_1291860468) {
    scriptSetTextEditorSelection_1291860428(editorId_1291860467, selection_1291860468);

  
}

function fromJson_2818584245(a_2818584247, b_2818584248, opt_2818584249) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584248, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584248}));
    }
    
    if (!((b_2818584248.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584248.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584275 = 0;
    var numMatchedHEX60gensym25_2818584276 = 0;
    numHEX60gensym25_2818584275 = addInt(numHEX60gensym25_2818584275, 1);
    if (hasKey_1627393154(b_2818584248, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584276 = addInt(numMatchedHEX60gensym25_2818584276, 1);
    fromJson_2818583348(a_2818584247, "Field0", HEX5BHEX5D_1627393037(b_2818584248, [108,105,110,101]), opt_2818584249);
    }
    else {
    if (opt_2818584249.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584248, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584275 = addInt(numHEX60gensym25_2818584275, 1);
    if (hasKey_1627393154(b_2818584248, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584276 = addInt(numMatchedHEX60gensym25_2818584276, 1);
    fromJson_2818583348(a_2818584247, "Field1", HEX5BHEX5D_1627393037(b_2818584248, [99,111,108,117,109,110]), opt_2818584249);
    }
    else {
    if (opt_2818584249.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584248, 2)]));
      }
      
    }
    }
    if ((opt_2818584249.allowExtraKeys && opt_2818584249.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584249.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584275 == numMatchedHEX60gensym25_2818584276))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584275 == numMatchedHEX60gensym25_2818584276);
    }
    else {
    if (opt_2818584249.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584248) == numMatchedHEX60gensym25_2818584276);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584248) == numHEX60gensym25_2818584275) && (numHEX60gensym25_2818584275 == numMatchedHEX60gensym25_2818584276));
    }
    }}
    var okHEX60gensym25_2818584337 = Temporary1;
    if (!(okHEX60gensym25_2818584337)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584248)), HEX24_369098760(numHEX60gensym25_2818584275), [67,117,114,115,111,114], pretty_1627394477(b_2818584248, 2)]));
    }
    

  
}

function fromJson_2818584191(a_2818584193, b_2818584194, opt_2818584195) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584194, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584194}));
    }
    
    if (!((b_2818584194.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584194.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584221 = 0;
    var numMatchedHEX60gensym25_2818584222 = 0;
    numHEX60gensym25_2818584221 = addInt(numHEX60gensym25_2818584221, 1);
    if (hasKey_1627393154(b_2818584194, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584222 = addInt(numMatchedHEX60gensym25_2818584222, 1);
    fromJson_2818584245(a_2818584193["Field0"], HEX5BHEX5D_1627393037(b_2818584194, [102,105,114,115,116]), opt_2818584195);
    }
    else {
    if (opt_2818584195.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584194, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584221 = addInt(numHEX60gensym25_2818584221, 1);
    if (hasKey_1627393154(b_2818584194, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584222 = addInt(numMatchedHEX60gensym25_2818584222, 1);
    fromJson_2818584245(a_2818584193["Field1"], HEX5BHEX5D_1627393037(b_2818584194, [108,97,115,116]), opt_2818584195);
    }
    else {
    if (opt_2818584195.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584194, 2)]));
      }
      
    }
    }
    if ((opt_2818584195.allowExtraKeys && opt_2818584195.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584195.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584221 == numMatchedHEX60gensym25_2818584222))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584221 == numMatchedHEX60gensym25_2818584222);
    }
    else {
    if (opt_2818584195.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584194) == numMatchedHEX60gensym25_2818584222);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584194) == numHEX60gensym25_2818584221) && (numHEX60gensym25_2818584221 == numMatchedHEX60gensym25_2818584222));
    }
    }}
    var okHEX60gensym25_2818584375 = Temporary1;
    if (!(okHEX60gensym25_2818584375)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584194)), HEX24_369098760(numHEX60gensym25_2818584221), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584194, 2)]));
    }
    

  
}

function jsonTo_2818585347(b_2818585349, opt_2818585351) {
  var result_2818585352 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584191(result_2818585352[0], b_2818585349, opt_2818585351);

  return result_2818585352[0];

}

function scriptSetTextEditorSelectionApi_1291860473(HEX3Atmp_1291860426) {
  var result_1291860474 = null;

    result_1291860474 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291860424_1291860466(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860426, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585347(HEX5BHEX5D_1627393116(HEX3Atmp_1291860426, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym790_1291860485 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860490 = [mnewString(0)];
    fmtRes_1291860490[0].push.apply(fmtRes_1291860490[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860490, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym790_1291860485 || [],fmtRes_1291860490[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860474;

}

function toJson_2818584422(a_2818584424, opt_2818584425) {
  var result_2818584426 = null;

    result_2818584426 = newJArray_1627390082();
    Label1: {
      var ai_2818584433 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871195 = 0;
      var L_536871196 = (a_2818584424).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871195 < L_536871196)) break Label3;
            ai_2818584433 = a_2818584424[chckIndx(i_536871195, 0, (a_2818584424).length - 1)];
            add_1627390190(result_2818584426, toJson_2818584434(ai_2818584433, opt_2818584425));
            i_536871195 = addInt(i_536871195, 1);
            if (!(((a_2818584424).length == L_536871196))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818584426;

}

function scriptTextEditorSelectionsScript_1291860493_1291860544(editorId_1291860545) {
  var result_1291860546 = [];

    result_1291860546 = nimCopy(null, scriptTextEditorSelections_1291860497(editorId_1291860545), NTI1291856001);

  return result_1291860546;

}

function scriptTextEditorSelectionsApi_1291860551(HEX3Atmp_1291860495) {
  var result_1291860552 = null;

  BeforeRet: {
    result_1291860552 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860552 = toJson_2818584422(scriptTextEditorSelectionsScript_1291860493_1291860544(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860495, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym799_1291860562 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860567 = [mnewString(0)];
    fmtRes_1291860567[0].push.apply(fmtRes_1291860567[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860567, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym799_1291860562 || [],fmtRes_1291860567[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860552;

}

function scriptSetTextEditorSelectionsScript_1291860570_1291860612(editorId_1291860613, selections_1291860614) {
    scriptSetTextEditorSelections_1291860574(editorId_1291860613, selections_1291860614);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet303[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818584136(a_2818584138, a_2818584138_Idx, b_2818584139, opt_2818584140) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584139, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818584139}));
    }
    
    if (a_2818584138[a_2818584138_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818584139), 0, 2147483647), Temporary1)) { for (var i = a_2818584138[a_2818584138_Idx].length ; i < Temporary1 ; ++i) a_2818584138[a_2818584138_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818584138[a_2818584138_Idx].length = Temporary1; };
    Label2: {
      var i_2818584189 = 0;
      var val_2818584190 = null;
      var colontmp__536871201 = [];
      colontmp__536871201 = getElems_1627390175(b_2818584139, []);
      var i_536871203 = 0;
      var L_536871204 = (colontmp__536871201).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871203 < L_536871204)) break Label4;
            i_2818584189 = i_536871203;
            val_2818584190 = colontmp__536871201[chckIndx(i_536871203, 0, (colontmp__536871201).length - 1)];
            fromJson_2818584191(a_2818584138[a_2818584138_Idx][chckIndx(i_2818584189, 0, (a_2818584138[a_2818584138_Idx]).length - 1)], val_2818584190, opt_2818584140);
            i_536871203 = addInt(i_536871203, 1);
            if (!(((colontmp__536871201).length == L_536871204))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818584130(b_2818584132, opt_2818584134) {
  var result_2818584135 = [[]];

    fromJson_2818584136(result_2818584135, 0, b_2818584132, opt_2818584134);

  return result_2818584135[0];

}

function scriptSetTextEditorSelectionsApi_1291860619(HEX3Atmp_1291860572) {
  var result_1291860620 = null;

    result_1291860620 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291860570_1291860612(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860572, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584130(HEX5BHEX5D_1627393116(HEX3Atmp_1291860572, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym808_1291860631 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860636 = [mnewString(0)];
    fmtRes_1291860636[0].push.apply(fmtRes_1291860636[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860636, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym808_1291860631 || [],fmtRes_1291860636[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860620;

}

function scriptGetTextEditorLineScript_1291860639_1291860686(editorId_1291860687, line_1291860688) {
  var result_1291860689 = [];

    result_1291860689 = nimCopy(null, scriptGetTextEditorLine_1291860643(editorId_1291860687, line_1291860688), NTI33554449);

  return result_1291860689;

}

function scriptGetTextEditorLineApi_1291860695(HEX3Atmp_1291860641) {
  var result_1291860696 = null;

  BeforeRet: {
    result_1291860696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860696 = toJson_1811939932(scriptGetTextEditorLineScript_1291860639_1291860686(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860641, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860641, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym818_1291860711 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291860716 = [mnewString(0)];
    fmtRes_1291860716[0].push.apply(fmtRes_1291860716[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860716, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym818_1291860711 || [],fmtRes_1291860716[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860696;

}

function scriptGetTextEditorLineCountScript_1291860719_1291860765(editorId_1291860766) {
  var result_1291860767 = 0;

    result_1291860767 = scriptGetTextEditorLineCount_1291860723(editorId_1291860766);

  return result_1291860767;

}

function scriptGetTextEditorLineCountApi_1291860772(HEX3Atmp_1291860721) {
  var result_1291860773 = null;

  BeforeRet: {
    result_1291860773 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860773 = toJson_2818584460(scriptGetTextEditorLineCountScript_1291860719_1291860765(jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860721, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym828_1291860783 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291860788 = [mnewString(0)];
    fmtRes_1291860788[0].push.apply(fmtRes_1291860788[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860788, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym828_1291860783 || [],fmtRes_1291860788[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860773;

}

function scriptGetOptionIntScript_1291860802_1291860818(path_1291860819, default_1291860820) {
  var result_1291860821 = 0;

    result_1291860821 = scriptGetOptionInt_1291860806(path_1291860819, default_1291860820);

  return result_1291860821;

}

function scriptGetOptionIntApi_1291860827(HEX3Atmp_1291860804) {
  var result_1291860828 = null;

  BeforeRet: {
    result_1291860828 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860828 = toJson_2818584460(scriptGetOptionIntScript_1291860802_1291860818(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860804, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291860804, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym838_1291860843 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860848 = [mnewString(0)];
    fmtRes_1291860848[0].push.apply(fmtRes_1291860848[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860848, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym838_1291860843 || [],fmtRes_1291860848[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860828;

}

function scriptGetOptionFloatScript_1291860852_1291860868(path_1291860869, default_1291860870) {
  var result_1291860871 = 0.0;

    result_1291860871 = scriptGetOptionFloat_1291860856(path_1291860869, default_1291860870);

  return result_1291860871;

}

function initFromJson_1291860916(dst_1291860918, dst_1291860918_Idx, jsonNode_1291860919, jsonPath_1291860920, jsonPath_1291860920_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860919.kind == 4)) {
    var Temporary1 = jsonNode_1291860919;
    if (ConstSet304[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860925 = NaN;
      dst_1291860918[dst_1291860918_Idx] = b_1291860925;
      break;
    case "inf":
      var b_1291860926 = Infinity;
      dst_1291860918[dst_1291860918_Idx] = b_1291860926;
      break;
    case "-inf":
      var b_1291860927 = -Infinity;
      dst_1291860918[dst_1291860918_Idx] = b_1291860927;
      break;
    default: 
      var Temporary2 = jsonNode_1291860919;
      if (ConstSet305[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860919, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860920[jsonPath_1291860920_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet306[jsonNode_1291860919.kind] != undefined))) {
      var msgHEX60gensym852_1291860941 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet307), nimCopy(null, jsonPath_1291860920[jsonPath_1291860920_Idx], NTI33554449), reprEnum(jsonNode_1291860919.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym852_1291860941, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860919.kind == 3)) {
      var Temporary3 = jsonNode_1291860919;
      if (ConstSet308[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860918[dst_1291860918_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860919;
        if (ConstSet309[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860918[dst_1291860918_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860905(node_1291860908) {
  var result_1291860910 = [0.0];

    var jsonPath_1291860911 = [[]];
    result_1291860910[0] = 0.0;
    initFromJson_1291860916(result_1291860910, 0, node_1291860908, jsonPath_1291860911, 0);

  return result_1291860910[0];

}

function fromJson_1291860890(a_1291860892, a_1291860892_Idx, b_1291860893, opt_1291860894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860893}));
    }
    
    a_1291860892[a_1291860892_Idx] = to_1291860905(b_1291860893);

  
}

function jsonTo_1291860884(b_1291860886, opt_1291860888) {
  var result_1291860889 = [0.0];

    fromJson_1291860890(result_1291860889, 0, b_1291860886, opt_1291860888);

  return result_1291860889[0];

}

function scriptGetOptionFloatApi_1291860877(HEX3Atmp_1291860854) {
  var result_1291860878 = null;

  BeforeRet: {
    result_1291860878 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860878 = toJson_1291854837(scriptGetOptionFloatScript_1291860852_1291860868(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860854, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860854, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym848_1291860951 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860956 = [mnewString(0)];
    fmtRes_1291860956[0].push.apply(fmtRes_1291860956[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860956, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym848_1291860951 || [],fmtRes_1291860956[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860878;

}

function scriptGetOptionBoolScript_1291860960_1291860976(path_1291860977, default_1291860978) {
  var result_1291860979 = false;

    result_1291860979 = scriptGetOptionBool_1291860964(path_1291860977, default_1291860978);

  return result_1291860979;

}

function scriptGetOptionBoolApi_1291860985(HEX3Atmp_1291860962) {
  var result_1291860986 = null;

  BeforeRet: {
    result_1291860986 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860986 = toJson_2818588330(scriptGetOptionBoolScript_1291860960_1291860976(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860962, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291860962, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym864_1291861001 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861006 = [mnewString(0)];
    fmtRes_1291861006[0].push.apply(fmtRes_1291861006[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861006, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym864_1291861001 || [],fmtRes_1291861006[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860986;

}

function scriptGetOptionStringScript_1291861010_1291861026(path_1291861027, default_1291861028) {
  var result_1291861029 = [];

    result_1291861029 = nimCopy(null, scriptGetOptionString_1291861014(path_1291861027, default_1291861028), NTI33554449);

  return result_1291861029;

}

function scriptGetOptionStringApi_1291861035(HEX3Atmp_1291861012) {
  var result_1291861036 = null;

  BeforeRet: {
    result_1291861036 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291861036 = toJson_1811939932(scriptGetOptionStringScript_1291861010_1291861026(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861012, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861012, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym874_1291861051 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861056 = [mnewString(0)];
    fmtRes_1291861056[0].push.apply(fmtRes_1291861056[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861056, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym874_1291861051 || [],fmtRes_1291861056[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291861036;

}

function scriptSetOptionIntScript_1291861060_1291861109(path_1291861110, value_1291861111) {
    scriptSetOptionInt_1291861064(path_1291861110, value_1291861111);

  
}

function scriptSetOptionIntApi_1291861116(HEX3Atmp_1291861062) {
  var result_1291861117 = null;

    result_1291861117 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291861060_1291861109(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861062, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291861062, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym883_1291861128 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291861133 = [mnewString(0)];
    fmtRes_1291861133[0].push.apply(fmtRes_1291861133[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861133, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym883_1291861128 || [],fmtRes_1291861133[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861117;

}

function scriptSetOptionFloatScript_1291861142_1291861191(path_1291861192, value_1291861193) {
    scriptSetOptionFloat_1291861146(path_1291861192, value_1291861193);

  
}

function scriptSetOptionFloatApi_1291861198(HEX3Atmp_1291861144) {
  var result_1291861199 = null;

    result_1291861199 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291861142_1291861191(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861144, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861144, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym897_1291861210 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291861215 = [mnewString(0)];
    fmtRes_1291861215[0].push.apply(fmtRes_1291861215[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861215, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym897_1291861210 || [],fmtRes_1291861215[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861199;

}

function scriptSetOptionBoolScript_1291861224_1291861273(path_1291861274, value_1291861275) {
    scriptSetOptionBool_1291861228(path_1291861274, value_1291861275);

  
}

function scriptSetOptionBoolApi_1291861280(HEX3Atmp_1291861226) {
  var result_1291861281 = null;

    result_1291861281 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291861224_1291861273(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861226, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_1291861226, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym911_1291861292 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861297 = [mnewString(0)];
    fmtRes_1291861297[0].push.apply(fmtRes_1291861297[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861297, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym911_1291861292 || [],fmtRes_1291861297[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861281;

}

function scriptSetOptionStringScript_1291861306_1291861355(path_1291861356, value_1291861357) {
    scriptSetOptionString_1291861310(path_1291861356, value_1291861357);

  
}

function scriptSetOptionStringApi_1291861362(HEX3Atmp_1291861308) {
  var result_1291861363 = null;

    result_1291861363 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291861306_1291861355(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861308, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861308, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym925_1291861374 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861379 = [mnewString(0)];
    fmtRes_1291861379[0].push.apply(fmtRes_1291861379[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861379, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym925_1291861374 || [],fmtRes_1291861379[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861363;

}

function scriptSetCallbackScript_1291861388_1291861444(path_1291861445, id_1291861446) {
    scriptSetCallback_1291861392(path_1291861445, id_1291861446);

  
}

function scriptSetCallbackApi_1291861451(HEX3Atmp_1291861390) {
  var result_1291861452 = null;

    result_1291861452 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291861388_1291861444(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861390, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_1291861390, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym939_1291861463 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291861468 = [mnewString(0)];
    fmtRes_1291861468[0].push.apply(fmtRes_1291861468[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861468, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym939_1291861463 || [],fmtRes_1291861468[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861452;

}

function dispatch_1291861479(command_1291861478, arg_1291861477) {
    var Temporary1;

  var result_1291861481 = ({val: null});

    switch (toJSStr(command_1291861478)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818590637(getBackendApi_1291854200(arg_1291861477));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818590637(saveAppStateApi_1291855090(arg_1291861477));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818590637(requestRenderApi_1291855209(arg_1291861477));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818590637(setHandleInputsApi_1291855264(arg_1291861477));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818590637(setHandleActionsApi_1291855324(arg_1291861477));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818590637(setConsumeAllActionsApi_1291855384(arg_1291861477));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818590637(setConsumeAllInputApi_1291855444(arg_1291861477));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2818590637(clearWorkspaceCachesApi_1291855579(arg_1291861477));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818590637(openGithubWorkspaceApi_1291855636(arg_1291861477));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818590637(openAbsytreeServerWorkspaceApi_1291855712(arg_1291861477));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818590637(getFlagApi2_1291855779(arg_1291861477));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818590637(setFlagApi2_1291855899(arg_1291861477));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818590637(toggleFlagApi_1291855962(arg_1291861477));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818590637(setOptionApi_1291856056(arg_1291861477));
      break;
    case "quit":
      Temporary1 = some_2818590637(quitApi_1291856110(arg_1291861477));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818590637(changeFontSizeApi_1291856157(arg_1291861477));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818590637(changeLayoutPropApi_1291856461(arg_1291861477));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818590637(toggleStatusBarLocationApi_1291856522(arg_1291861477));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818590637(createViewApi_1291856571(arg_1291861477));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818590637(closeCurrentViewApi_1291856650(arg_1291861477));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818590637(moveCurrentViewToTopApi_1291856735(arg_1291861477));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818590637(nextViewApi_1291856786(arg_1291861477));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818590637(prevViewApi_1291856839(arg_1291861477));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818590637(moveCurrentViewPrevApi_1291856906(arg_1291861477));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818590637(moveCurrentViewNextApi_1291856970(arg_1291861477));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818590637(setLayoutApi_1291857053(arg_1291861477));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818590637(commandLineApi_1291857109(arg_1291861477));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818590637(exitCommandLineApi_1291857162(arg_1291861477));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818590637(executeCommandLineApi_1291857233(arg_1291861477));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818590637(writeFileApi_1291857332(arg_1291861477));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818590637(loadFileApi_1291857401(arg_1291861477));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818590637(openFileApi_1291857520(arg_1291861477));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818590637(removeFromLocalStorageApi_1291857644(arg_1291861477));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818590637(loadThemeApi_1291857727(arg_1291861477));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818590637(chooseThemeApi_1291858054(arg_1291861477));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818590637(chooseFileApi_1291858568(arg_1291861477));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818590637(setGithubAccessTokenApi_1291858645(arg_1291861477));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818590637(reloadConfigApi_1291858707(arg_1291861477));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818590637(logOptionsApi_1291858751(arg_1291861477));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818590637(clearCommandsApi_1291858798(arg_1291861477));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818590637(getAllEditorsApi_1291859079(arg_1291861477));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590637(setModeApi22_1291859189(arg_1291861477));
      break;
    case "mode":
      Temporary1 = some_2818590637(modeApi22_1291859242(arg_1291861477));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590637(getContextWithModeApi22_1291859296(arg_1291861477));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818590637(scriptRunActionApi_1291859586(arg_1291861477));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818590637(scriptLogApi_1291859622(arg_1291861477));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818590637(addCommandScriptApi_1291859684(arg_1291861477));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818590637(removeCommandApi_1291859760(arg_1291861477));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818590637(getActivePopupApi_1291859805(arg_1291861477));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818590637(getActiveEditorApi_1291859836(arg_1291861477));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818590637(loadCurrentConfigApi_1291859932(arg_1291861477));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818590637(sourceCurrentDocumentApi_1291859999(arg_1291861477));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818590637(getEditorApi_1291860029(arg_1291861477));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818590637(scriptIsTextEditorApi_1291860097(arg_1291861477));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818590637(scriptIsAstEditorApi_1291860166(arg_1291861477));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818590637(scriptRunActionForApi_1291860261(arg_1291861477));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818590637(scriptInsertTextIntoApi_1291860331(arg_1291861477));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818590637(scriptTextEditorSelectionApi_1291860401(arg_1291861477));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818590637(scriptSetTextEditorSelectionApi_1291860473(arg_1291861477));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818590637(scriptTextEditorSelectionsApi_1291860551(arg_1291861477));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818590637(scriptSetTextEditorSelectionsApi_1291860619(arg_1291861477));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818590637(scriptGetTextEditorLineApi_1291860695(arg_1291861477));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818590637(scriptGetTextEditorLineCountApi_1291860772(arg_1291861477));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818590637(scriptGetOptionIntApi_1291860827(arg_1291861477));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818590637(scriptGetOptionFloatApi_1291860877(arg_1291861477));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818590637(scriptGetOptionBoolApi_1291860985(arg_1291861477));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818590637(scriptGetOptionStringApi_1291861035(arg_1291861477));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818590637(scriptSetOptionIntApi_1291861116(arg_1291861477));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818590637(scriptSetOptionFloatApi_1291861198(arg_1291861477));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818590637(scriptSetOptionBoolApi_1291861280(arg_1291861477));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818590637(scriptSetOptionStringApi_1291861362(arg_1291861477));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818590637(scriptSetCallbackApi_1291861451(arg_1291861477));
      break;
    default: 
      Temporary1 = none_2818590836();
      break;
    }
    result_1291861481 = nimCopy(result_1291861481, Temporary1, NTI2818584229);

  return result_1291861481;

}

function handleAction_1291848870(self_1291848871, action_1291848872, arg_1291848873) {
  var result_1291861708 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848872, NTI33554449), nimCopy(null, arg_1291848873, NTI33554449)])]);
    var args_1291861709 = newJArray_1627390082();
    Label1: {
      var a_1291861710 = null;
      var colontmp__536871082 = null;
      colontmp__536871082 = newStringStream_1660945417(arg_1291848873);
      var p_536871083 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871083[0], colontmp__536871082, [], false);
      try {
      var _ = getTok_1694499270(p_536871083[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871083[0].tok == 1))) break Label4;
            a_1291861710 = parseJson_1627395211(p_536871083[0], false, false, 0);
            add_1627390190(args_1291861709, a_1291861710);
          }
      };
      } finally {
      close_1694498967(p_536871083[0]);
      }
    };
++excHandler;
    try {
    if (handleGlobalAction_2751463463(self_1291848871.scriptContext, action_1291848872, args_1291861709)) {
    result_1291861708 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861715 = [mnewString(0)];
    fmtRes_1291861715[0].push.apply(fmtRes_1291861715[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861715, 0, action_1291848872, []);
    fmtRes_1291861715[0].push.apply(fmtRes_1291861715[0], [32]);;
    formatValue_721420459(fmtRes_1291861715, 0, arg_1291848873, []);
    fmtRes_1291861715[0].push.apply(fmtRes_1291861715[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861715, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861715[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861708 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291861708 = isSome_2818590904(dispatch_1291861479(action_1291848872, args_1291861709));
    break BeforeRet;
  };

  return result_1291861708;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet310[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853194(s_1291853196) {
    var Temporary1;

  var result_1291853197 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853196))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853196 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853197 = Temporary1;

  return result_1291853197;

}

function fromJson_1291853182(a_1291853184, a_1291853184_Idx, b_1291853185, opt_1291853186) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853185, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853185}));
    }
    
    switch (b_1291853185.kind) {
    case 2:
      a_1291853184[a_1291853184_Idx] = chckRange(getBiggestInt_1627390129(b_1291853185, 0), 0, 2);
      break;
    case 4:
      a_1291853184[a_1291853184_Idx] = parseEnum_1291853194(getStr_1627390106(b_1291853185, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853232 = [mnewString(0)];
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, pretty_1627394477(b_1291853185, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853232[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853297(a_1291853299, a_1291853299_Idx, b_1291853300, opt_1291853301) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853300, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853300}));
    }
    
    a_1291853299[a_1291853299_Idx] = b_1291853300;

  
}

function fromJson_1291853124(a_1291853126, b_1291853127, opt_1291853128) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853127, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853127}));
    }
    
    if (!((b_1291853127.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853127.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853163 = 0;
    var numMatchedHEX60gensym16_1291853164 = 0;
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853182(a_1291853126, "kind", HEX5BHEX5D_1627393037(b_1291853127, [107,105,110,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [105,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "id", HEX5BHEX5D_1627393037(b_1291853127, [105,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "name", HEX5BHEX5D_1627393037(b_1291853127, [110,97,109,101]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853297(a_1291853126, "settings", HEX5BHEX5D_1627393037(b_1291853127, [115,101,116,116,105,110,103,115]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    if ((opt_1291853128.allowExtraKeys && opt_1291853128.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853128.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853127) == numMatchedHEX60gensym16_1291853164);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853127) == numHEX60gensym16_1291853163) && (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164));
    }
    }}
    var okHEX60gensym16_1291853320 = Temporary1;
    if (!(okHEX60gensym16_1291853320)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853127)), HEX24_369098760(numHEX60gensym16_1291853163), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
    }
    

  
}

function fromJson_1291853096(a_1291853098, a_1291853098_Idx, b_1291853099, opt_1291853100) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853099, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853099}));
    }
    
    if (a_1291853098[a_1291853098_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853099), 0, 2147483647), Temporary1)) { for (var i = a_1291853098[a_1291853098_Idx].length ; i < Temporary1 ; ++i) a_1291853098[a_1291853098_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853098[a_1291853098_Idx].length = Temporary1; };
    Label2: {
      var i_1291853122 = 0;
      var val_1291853123 = null;
      var colontmp__536871228 = [];
      colontmp__536871228 = getElems_1627390175(b_1291853099, []);
      var i_536871229 = 0;
      var L_536871230 = (colontmp__536871228).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871229 < L_536871230)) break Label4;
            i_1291853122 = i_536871229;
            val_1291853123 = colontmp__536871228[chckIndx(i_536871229, 0, (colontmp__536871228).length - 1)];
            fromJson_1291853124(a_1291853098[a_1291853098_Idx][chckIndx(i_1291853122, 0, (a_1291853098[a_1291853098_Idx]).length - 1)], val_1291853123, opt_1291853100);
            i_536871229 = addInt(i_536871229, 1);
            if (!(((colontmp__536871228).length == L_536871230))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853369(a_1291853371, b_1291853372, opt_1291853373) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853372, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853372}));
    }
    
    if (!((b_1291853372.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853372.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853408 = 0;
    var numMatchedHEX60gensym16_1291853409 = 0;
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "filename", HEX5BHEX5D_1627393037(b_1291853372, [102,105,108,101,110,97,109,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,115,116])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818584390(a_1291853371, "ast", HEX5BHEX5D_1627393037(b_1291853372, [97,115,116]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "languageID", HEX5BHEX5D_1627393037(b_1291853372, [108,97,110,103,117,97,103,101,73,68]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818584390(a_1291853371, "appFile", HEX5BHEX5D_1627393037(b_1291853372, [97,112,112,70,105,108,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "workspaceId", HEX5BHEX5D_1627393037(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    if ((opt_1291853373.allowExtraKeys && opt_1291853373.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853373.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853372) == numMatchedHEX60gensym16_1291853409);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853372) == numHEX60gensym16_1291853408) && (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409));
    }
    }}
    var okHEX60gensym16_1291853528 = Temporary1;
    if (!(okHEX60gensym16_1291853528)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853372)), HEX24_369098760(numHEX60gensym16_1291853408), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
    }
    

  
}

function fromJson_1291853341(a_1291853343, a_1291853343_Idx, b_1291853344, opt_1291853345) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853344, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853344}));
    }
    
    if (a_1291853343[a_1291853343_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853344), 0, 2147483647), Temporary1)) { for (var i = a_1291853343[a_1291853343_Idx].length ; i < Temporary1 ; ++i) a_1291853343[a_1291853343_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853343[a_1291853343_Idx].length = Temporary1; };
    Label2: {
      var i_1291853367 = 0;
      var val_1291853368 = null;
      var colontmp__536871233 = [];
      colontmp__536871233 = getElems_1627390175(b_1291853344, []);
      var i_536871234 = 0;
      var L_536871235 = (colontmp__536871233).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871234 < L_536871235)) break Label4;
            i_1291853367 = i_536871234;
            val_1291853368 = colontmp__536871233[chckIndx(i_536871234, 0, (colontmp__536871233).length - 1)];
            fromJson_1291853369(a_1291853343[a_1291853343_Idx][chckIndx(i_1291853367, 0, (a_1291853343[a_1291853343_Idx]).length - 1)], val_1291853368, opt_1291853345);
            i_536871234 = addInt(i_536871234, 1);
            if (!(((colontmp__536871233).length == L_536871235))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852898(a_1291852900, b_1291852901, opt_1291852902) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852901, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852901}));
    }
    
    if (!((b_1291852901.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852901.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852945 = 0;
    var numMatchedHEX60gensym16_1291852946 = 0;
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "theme", HEX5BHEX5D_1627393037(b_1291852901, [116,104,101,109,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_2818585735(a_1291852900, "fontSize", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,83,105,122,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontRegular", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBold", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853096(a_1291852900, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853341(a_1291852900, "openEditors", HEX5BHEX5D_1627393037(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    if ((opt_1291852902.allowExtraKeys && opt_1291852902.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852902.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852901) == numMatchedHEX60gensym16_1291852946);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852901) == numHEX60gensym16_1291852945) && (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946));
    }
    }}
    var okHEX60gensym16_1291853540 = Temporary1;
    if (!(okHEX60gensym16_1291853540)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852901)), HEX24_369098760(numHEX60gensym16_1291852945), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
    }
    

  
}

function jsonTo_1291852892(b_1291852894, opt_1291852896) {
  var result_1291852897 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852898(result_1291852897[0], b_1291852894, opt_1291852896);

  return result_1291852897[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871238 = 0;
        colontmp__536871238 = len_1627395282(x_1627395286);
        var i_536871239 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871239 < colontmp__536871238)) break Label3;
              i_1627395293 = i_536871239;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871239 = addInt(i_536871239, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2231369832(path_2231369833) {
  var result_2231369834 = null;

    result_2231369834 = ({m_type: NTI2231369732, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2231369834.path = nimCopy(null, path_2231369833, NTI33554449);
    var fmtRes_2231369842 = [mnewString(0)];
    fmtRes_2231369842[0].push.apply(fmtRes_2231369842[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2231369842, 0, absolutePath_1426063704(path_2231369833, nosgetCurrentDir()), []);
    result_2231369834.name = nimCopy(null, fmtRes_2231369842[0], NTI33554449);

  return result_2231369834;

}

function newWorkspaceFolderLocal_2231369861(settings_2231369862) {
  var result_2231369863 = null;

  BeforeRet: {
    var path_2231369864 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2231369862, [112,97,116,104]), []);
    result_2231369863 = newWorkspaceFolderLocal_2231369832(path_2231369864);
    break BeforeRet;
  };

  return result_2231369863;

}

function newWorkspaceFolderAbsytreeServer_2365589940(settings_2365589941) {
  var result_2365589942 = null;

  BeforeRet: {
    var url_2365589943 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2365589941, [98,97,115,101,85,114,108]), []);
    result_2365589942 = newWorkspaceFolderAbsytreeServer_2365589916(url_2365589943);
    break BeforeRet;
  };

  return result_2365589942;

}

function newWorkspaceFolderGithub_2248149308(settings_2248149309) {
  var result_2248149310 = null;

  BeforeRet: {
    var user_2248149311 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [117,115,101,114]), []);
    var repository_2248149312 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2248149313 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2248149310 = newWorkspaceFolderGithub_2248149248(user_2248149311, repository_2248149312, branchOrHash_2248149313);
    break BeforeRet;
  };

  return result_2248149310;

}

function formatValue_1291853582(result_1291853584, result_1291853584_Idx, value_1291853585, specifier_1291853586) {
    formatValue_721420459(result_1291853584, result_1291853584_Idx, reprEnum(value_1291853585, NTI1291845663), specifier_1291853586);

  
}

function new_1291853619() {
  var result_1291853622 = null;

  BeforeRet: {
    var r_1291853624 = null;
    r_1291853624 = ({m_type: NTI2801795076});
    result_1291853622 = r_1291853624;
    break BeforeRet;
  };

  return result_1291853622;

}

function getWorkspaceFolder_1291851105(self_1291851106, id_1291851107) {
  var result_1291855515 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855519 = null;
      var i_536871242 = 0;
      var L_536871243 = (self_1291851106.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871242 < L_536871243)) break Label3;
            wf_1291855519 = self_1291851106.workspace.folders[chckIndx(i_536871242, 0, (self_1291851106.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820592(wf_1291855519.id, id_1291851107)) {
            result_1291855515 = nimCopy(result_1291855515, some_1291855520(wf_1291855519), NTI2164260874);
            break BeforeRet;
            }
            
            i_536871242 = addInt(i_536871242, 1);
            if (!(((self_1291851106.workspace.folders).length == L_536871243))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855515 = nimCopy(result_1291855515, none_1291855533(), NTI2164260874);
    break BeforeRet;
  };

  return result_1291855515;

}

function newTextDocument_2818578639(filename_2818578640, app_2818578641, workspaceFolder_2818578643) {
  var result_2818578644 = null;

    result_2818578644 = newTextDocument_2818578645(filename_2818578640, [], app_2818578641);
    result_2818578644.workspace = nimCopy(result_2818578644.workspace, workspaceFolder_2818578643, NTI2164260874);
    load_2164260888(result_2818578644, []);

  return result_2818578644;

}

function newEditor_1291851109(backend_1291851110, platform_1291851111) {
    
function HEX3Aanonymous_1291851125(event_1291851143) {
        handleKeyPress_1291851063(self_1291851113, event_1291851143.Field0, event_1291851143.Field1);

      
    }
    
function HEX3Aanonymous_1291851197(event_1291851215) {
        handleKeyRelease_1291851067(self_1291851113, event_1291851215.Field0, event_1291851215.Field1);

      
    }
    
function HEX3Aanonymous_1291851246(event_1291851264) {
        handleRune_1291851071(self_1291851113, event_1291851264.Field0, event_1291851264.Field1);

      
    }
    
function HEX3Aanonymous_1291851295(event_1291851313) {
        handleMousePress_1291851075(self_1291851113, event_1291851313.Field0, event_1291851313.Field1, event_1291851313.Field2);

      
    }
    
function HEX3Aanonymous_1291851367(event_1291851385) {
        handleMouseRelease_1291851080(self_1291851113, event_1291851385.Field0, event_1291851385.Field1, event_1291851385.Field2);

      
    }
    
function HEX3Aanonymous_1291851416(event_1291851434) {
        handleMouseMove_1291851085(self_1291851113, event_1291851434.Field0, event_1291851434.Field1, event_1291851434.Field2, event_1291851434.Field3);

      
    }
    
function HEX3Aanonymous_1291851488(event_1291851506) {
        handleScroll_1291851091(self_1291851113, event_1291851506.Field1, event_1291851506.Field0, event_1291851506.Field2);

      
    }
    
function HEX3Aanonymous_1291851560(event_1291851578) {
        handleDropFile_1291851096(self_1291851113, event_1291851578.Field0, event_1291851578.Field1);

      
    }
    
function HEX3Aanonymous_1291851632() {
        self_1291851113.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852840(actionHEX60gensym73HEX60gensym74_1291852841, argHEX60gensym73HEX60gensym74_1291852842) {
          var Temporary1;

        var result_1291852843 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleActions) {
          var action_1291852844 = nimCopy(null, actionHEX60gensym73HEX60gensym74_1291852841, NTI33554449);
          var arg_1291852845 = nimCopy(null, argHEX60gensym73HEX60gensym74_1291852842, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852844, arg_1291852845)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym73HEX60gensym74_1291852846 = Temporary1;
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          
          result_1291852843 = responseHEX60gensym73HEX60gensym74_1291852846;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          else {
            result_1291852843 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852843;

      }
      
function HEX3Aanonymous_1291852848(inputHEX60gensym73HEX60gensym75_1291852849) {
        var result_1291852850 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleInputs) {
          var input_1291852851 = nimCopy(null, inputHEX60gensym73HEX60gensym75_1291852849, NTI33554449);
          result_1291852850 = 1;
          break BeforeRet;
          }
          else {
            result_1291852850 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852850;

      }
      
function HEX3Aanonymous_1291852871(actionHEX60gensym76HEX60gensym77_1291852872, argHEX60gensym76HEX60gensym77_1291852873) {
          var Temporary1;

        var result_1291852874 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleActions) {
          var action_1291852875 = nimCopy(null, actionHEX60gensym76HEX60gensym77_1291852872, NTI33554449);
          var arg_1291852876 = nimCopy(null, argHEX60gensym76HEX60gensym77_1291852873, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852875, arg_1291852876)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym76HEX60gensym77_1291852877 = Temporary1;
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          
          result_1291852874 = responseHEX60gensym76HEX60gensym77_1291852877;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          else {
            result_1291852874 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852874;

      }
      
function HEX3Aanonymous_1291852879(inputHEX60gensym76HEX60gensym78_1291852880) {
        var result_1291852881 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleInputs) {
          var input_1291852882 = nimCopy(null, inputHEX60gensym76HEX60gensym78_1291852880, NTI33554449);
          result_1291852881 = 1;
          break BeforeRet;
          }
          else {
            result_1291852881 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852881;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
                var Temporary20;

  var result_1291851112 = null;

  BeforeRet: {
    var self_1291851113 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851113 = createWithPrototype(editor_prototype, self_1291851113);
    gEditor = self_1291851113;
    self_1291851113.platform = platform_1291851111;
    self_1291851113.backend = backend_1291851110;
    self_1291851113.statusBarOnTop = false;
    var _ = subscribe_1291851158(platform_1291851111.onKeyPress, HEX3Aanonymous_1291851125);
    var _ = subscribe_1291851158(platform_1291851111.onKeyRelease, HEX3Aanonymous_1291851197);
    var _ = subscribe_1291851158(platform_1291851111.onRune, HEX3Aanonymous_1291851246);
    var _ = subscribe_1291851328(platform_1291851111.onMousePress, HEX3Aanonymous_1291851295);
    var _ = subscribe_1291851328(platform_1291851111.onMouseRelease, HEX3Aanonymous_1291851367);
    var _ = subscribe_1291851449(platform_1291851111.onMouseMove, HEX3Aanonymous_1291851416);
    var _ = subscribe_1291851521(platform_1291851111.onScroll, HEX3Aanonymous_1291851488);
    var _ = subscribe_1291851593(platform_1291851111.onDropFile, HEX3Aanonymous_1291851560);
    var _ = subscribe_1291851665(platform_1291851111.onCloseRequested, HEX3Aanonymous_1291851632);
    self_1291851113.timer = nimCopy(self_1291851113.timer, startTimer_2466250804(), NTI2466250783);
    self_1291851113.frameTimer = nimCopy(self_1291851113.frameTimer, startTimer_2466250804(), NTI2466250783);
    self_1291851113.layout = {m_type: NTI1291845643};
    self_1291851113.layout_props = {props: toTable_1291851675([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2768240776(self_1291851113.platform, 20.0);
    self_1291851113.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851113.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851113.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2952791527, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849425);
    self_1291851113.workspace = ({folders: []});
    self_1291851113.theme = defaultTheme_2516586063();
    setTheme_1291851003(self_1291851113, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851113.currentView = 0;
    addCommand_2080375166(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2080375166(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851113.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym73_1291852828 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym73_1291852828.config = getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]);
      handlerHEX60gensym73_1291852828.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]));
      handlerHEX60gensym73_1291852828.handleAction = HEX3Aanonymous_1291852840;
      handlerHEX60gensym73_1291852828.handleInput = HEX3Aanonymous_1291852848;
    };
    self_1291851113.eventHandler = handlerHEX60gensym73_1291852828;
    Label2: {
      var handlerHEX60gensym76_1291852859 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym76_1291852859.config = getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym76_1291852859.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym76_1291852859.handleAction = HEX3Aanonymous_1291852871;
      handlerHEX60gensym76_1291852859.handleInput = HEX3Aanonymous_1291852879;
    };
    self_1291851113.commandLineEventHandler = handlerHEX60gensym76_1291852859;
    self_1291851113.commandLineMode = false;
    self_1291851113.commandLineTextEditor = newTextEditor_2818591034(newTextDocument_2818578645([], [], false), self_1291851113);
    self_1291851113.commandLineTextEditor.renderHeader = false;
    self_1291851113.commandLineTextEditor.lineNumbers = nimCopy(self_1291851113.commandLineTextEditor.lineNumbers, some_3170894358(0), NTI2818572554);
    getCommandLineTextEditor_1291851060(self_1291851113).hideCursorWhenInactive = true;
    var state_1291852891 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852891 = nimCopy(state_1291852891, jsonTo_1291852892(parseJson_1627395313(loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851003(self_1291851113, state_1291852891.theme);
    self_1291851113.loadedFontSize = state_1291852891.fontSize;
    fontSizeHEX3D_2768240776(self_1291851113.platform, state_1291852891.fontSize);
    if ((0 < (state_1291852891.fontRegular).length)) {
    self_1291851113.fontRegular = nimCopy(null, state_1291852891.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBold).length)) {
    self_1291851113.fontBold = nimCopy(null, state_1291852891.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontItalic).length)) {
    self_1291851113.fontItalic = nimCopy(null, state_1291852891.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBoldItalic).length)) {
    self_1291851113.fontBoldItalic = nimCopy(null, state_1291852891.fontBoldItalic, NTI33554449);
    }
    
    self_1291851113.options = parseJson_1627395313(loadApplicationFile_2332033042(fs_2332033077, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853548 = [mnewString(0)];
    fmtRes_1291853548[0].push.apply(fmtRes_1291853548[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853548, 0, pretty_1627394477(self_1291851113.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853548[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853553 = [mnewString(0)];
    fmtRes_1291853553[0].push.apply(fmtRes_1291853553[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853553, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853553[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853576 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870984 = 0;
      var L_536870985 = (state_1291852891.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870984 < L_536870985)) break Label6;
            wf_1291853576 = state_1291852891.workspaceFolders[chckIndx(i_536870984, 0, (state_1291852891.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853576.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2231369861(wf_1291853576.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2365589940(wf_1291853576.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2248149308(wf_1291853576.settings);
                break;
              default: 
                var fmtRes_1291853581 = [mnewString(0)];
                fmtRes_1291853581[0].push.apply(fmtRes_1291853581[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853582(fmtRes_1291853581, 0, wf_1291853576.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853581[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853590 = Temporary8;
              folder_1291853590.id = nimCopy(folder_1291853590.id, parseId_2046820606(wf_1291853576.id), NTI2046820355);
              folder_1291853590.name = nimCopy(null, wf_1291853576.name, NTI33554449);
              if (addWorkspaceFolder_1291851102(self_1291851113, folder_1291853590)) {
              var fmtRes_1291853595 = [mnewString(0)];
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853595, 0, folder_1291853590.name, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [32,40]);;
              formatValue_3019899100(fmtRes_1291853595, 0, folder_1291853590.id, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853595[0], NTI33554449)]);
              }
              
            };
            i_536870984 = addInt(i_536870984, 1);
            if (!(((state_1291852891.workspaceFolders).length == L_536870985))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853605 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853610 = HEX7BHEX7D_1627393316(self_1291851113.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853610 == null))) {
    Label10: {
      var sp_1291853614 = null;
      if (!((searchPathsJson_1291853610.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853610.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870994 = null;
        var colontmp__536870995 = [];
        var Temporary12 = searchPathsJson_1291853610;
        if (ConstSet311[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870995 = Temporary12.elems;
        var i_536870996 = 0;
        var L_536870997 = (colontmp__536870995).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870996 < L_536870997)) break Label14;
              i_536870994 = colontmp__536870995[chckIndx(i_536870996, 0, (colontmp__536870995).length - 1)];
              sp_1291853614 = i_536870994;
              searchPaths_1291853605.push(getStr_1627390106(sp_1291853614, []));;
              i_536870996 = addInt(i_536870996, 1);
              if (!(((colontmp__536870995).length == L_536870997))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851113.scriptContext = new_1291853619();
    init_2751463438(self_1291851113.scriptContext, []);
    var _ = false;
    self_1291851113.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853655 = [mnewString(0)];
    fmtRes_1291853655[0].push.apply(fmtRes_1291853655[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853655, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853655[0], 10);;
    formatValue_721420459(fmtRes_1291853655, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853655[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853678 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871001 = 0;
      var L_536871002 = (state_1291852891.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871001 < L_536871002)) break Label17;
            editorState_1291853678 = state_1291852891.openEditors[chckIndx(i_536871001, 0, (state_1291852891.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853679 = getWorkspaceFolder_1291851105(self_1291851113, parseId_2046820606(editorState_1291853678.workspaceId));
              if (editorState_1291853678.ast) {
              Temporary19 = newAstDocument_2952794223(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
              }
              else {
++excHandler;
                try {
                Temporary20 = newTextDocument_2818578639(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853684 = [mnewString(0)];
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, editorState_1291853678.filename, []);
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853684[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary20;
              }
              
              var document_1291853685 = Temporary19;
              createView_1291848958(self_1291851113, document_1291853685);
            };
            i_536871001 = addInt(i_536871001, 1);
            if (!(((state_1291852891.openEditors).length == L_536871002))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851112 = self_1291851113;
    break BeforeRet;
  };

  return result_1291851112;

}

function fromJsonHook_2516583208(color_2516583209, jsonNode_2516583210) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2516583210.kind == 0)) {
    color_2516583209 = nimCopy(color_2516583209, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2516583210;
    if (ConstSet313[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2516583209 = nimCopy(color_2516583209, parseHexVar_2516582448(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2516583240(a_2516583242, b_2516583243, opt_2516583244) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583243, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2516583243}));
    }
    
    fromJsonHook_2516583208(a_2516583242, b_2516583243);

  
}

function jsonTo_2516583234(b_2516583236, opt_2516583238) {
  var result_2516583239 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2516583240(result_2516583239[0], b_2516583236, opt_2516583238);

  return result_2516583239[0];

}

function hasKey_2516582658(t_2516582661, key_2516582662) {
  var result_2516582663 = false;

    var hc_2516582664 = [0];
    result_2516582663 = (0 <= rawGet_2516582665(t_2516582661, key_2516582662, hc_2516582664, 0));

  return result_2516582663;

}

function contains_2516582652(t_2516582655, key_2516582656) {
  var result_2516582657 = false;

  BeforeRet: {
    result_2516582657 = hasKey_2516582658(t_2516582655, key_2516582656);
    break BeforeRet;
  };

  return result_2516582657;

}

function none_2516583264() {
  var result_2516583271 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2516583271;

}

function HEX5BHEX5D_2516582957(t_2516582960, key_2516582961) {
  var result_2516582962 = null;

    var hcHEX60gensym22_2516582963 = [0];
    var indexHEX60gensym22_2516582970 = rawGet_2516582665(t_2516582960, key_2516582961, hcHEX60gensym22_2516582963, 0);
    if ((0 <= indexHEX60gensym22_2516582970)) {
    result_2516582962 = t_2516582960.data[chckIndx(indexHEX60gensym22_2516582970, 0, (t_2516582960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2516582961);
    }
    

  return result_2516582962;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2516583215(style_2516583216, jsonNode_2516583217) {
    var Temporary1;

    style_2516583216 = nimCopy(style_2516583216, ConstSet318, NTI2516582915);
    var Temporary1 = jsonNode_2516583217;
    if (ConstSet319[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2516583218 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2516583218, [105,116,97,108,105,99])) {
    style_2516583216[0] = true;
    }
    
    if (contains_855639877(text_2516583218, [98,111,108,100])) {
    style_2516583216[2] = true;
    }
    
    if (contains_855639877(text_2516583218, [117,110,100,101,114,108,105,110,101])) {
    style_2516583216[1] = true;
    }
    

  
}

function fromJson_2516583278(a_2516583280, b_2516583281, opt_2516583282) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583281, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2516583281}));
    }
    
    fromJsonHook_2516583215(a_2516583280, b_2516583281);

  
}

function jsonTo_2516583272(b_2516583274, opt_2516583276) {
  var result_2516583277 = [{}];

    fromJson_2516583278(result_2516583277[0], b_2516583274, opt_2516583276);

  return result_2516583277[0];

}

function jsonToTheme_2516583298(json_2516583299, opt_2516583300) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2516583301 = null;

    result_2516583301 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2516583301.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2516583299, [116,121,112,101])) {
    result_2516583301.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2516583301.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,115])) {
    Label1: {
      var key_2516583321 = [];
      var value_2516583322 = null;
      var colontmp__536871246 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,115]);
      if (ConstSet312[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871246 = nimCopy(colontmp__536871246, Temporary2.fields, NTI1627389966);
      var L_536871247 = len_1627392114(colontmp__536871246);
      if ((0 < colontmp__536871246.counter)) {
      var h_536871248 = colontmp__536871246.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871248)) break Label4;
            var nxt_536871250 = colontmp__536871246.data[chckIndx(h_536871248, 0, (colontmp__536871246.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871246.data[chckIndx(h_536871248, 0, (colontmp__536871246.data).length - 1)].Field0)) {
            var colontmp__536871252 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871246.data[chckIndx(h_536871248, 0, (colontmp__536871246.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871246.data[chckIndx(h_536871248, 0, (colontmp__536871246.data).length - 1)].Field3}, NTI1627391161);
            key_2516583321 = colontmp__536871252["Field0"];
            value_2516583322 = colontmp__536871252["Field1"];
            HEX5BHEX5DHEX3D_2516583368(result_2516583301.colors, key_2516583321, jsonTo_2516583234(value_2516583322, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871246) == L_536871247))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871248 = nxt_536871250;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2516584633 = null;
      var colontmp__536871263 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet314[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871263 = Temporary6.elems;
      var i_536871264 = 0;
      var L_536871265 = (colontmp__536871263).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871264 < L_536871265)) break Label8;
            item_2516584633 = colontmp__536871263[chckIndx(i_536871264, 0, (colontmp__536871263).length - 1)];
            var scopes_2516584638 = [];
            if (hasKey_1627393154(item_2516584633, [115,99,111,112,101])) {
            var scope_2516584639 = HEX5BHEX5D_1627393037(item_2516584633, [115,99,111,112,101]);
            if ((scope_2516584639.kind == 4)) {
            var Temporary9 = scope_2516584639;
            if (ConstSet315[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2516584638.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2516584651 = null;
                var colontmp__536871255 = [];
                var Temporary12 = scope_2516584639;
                if (ConstSet316[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871255 = Temporary12.elems;
                var i_536871256 = 0;
                var L_536871257 = (colontmp__536871255).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871256 < L_536871257)) break Label14;
                      scopeName_2516584651 = colontmp__536871255[chckIndx(i_536871256, 0, (colontmp__536871255).length - 1)];
                      var Temporary15 = scopeName_2516584651;
                      if (ConstSet317[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2516584638.push(Temporary16);;
                      i_536871256 = addInt(i_536871256, 1);
                      if (!(((colontmp__536871255).length == L_536871257))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2516584638.push([46]);;
            }
            
            var settings_2516584660 = HEX5BHEX5D_1627393037(item_2516584633, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2516584664 = [];
              var i_536871260 = 0;
              var L_536871261 = (scopes_2516584638).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871260 < L_536871261)) break Label19;
                    scope_2516584664 = scopes_2516584638[chckIndx(i_536871260, 0, (scopes_2516584638).length - 1)];
                    if (!(contains_2516582652(result_2516583301.tokenColors, scope_2516584664))) {
                    HEX5BHEX5DHEX3D_2516584766(result_2516583301.tokenColors, scope_2516584664, {foreground: none_2516583264(), background: none_2516583264(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle, jsonTo_2516583272(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2516582423);
                    }
                    
                    i_536871260 = addInt(i_536871260, 1);
                    if (!(((scopes_2516584638).length == L_536871261))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871264 = addInt(i_536871264, 1);
            if (!(((colontmp__536871263).length == L_536871265))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2516583301;

}

function some_2516586018(val_2516586020) {
  var result_2516586021 = ({val: null});

    if (!(!((val_2516586020 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2516586021.val = val_2516586020;

  return result_2516586021;

}

function none_2516586043() {
  var result_2516586049 = ({val: null});

  return result_2516586049;

}

function loadFromString_2516586008(input_2516586009, path_2516586010) {
  var result_2516586015 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2516586016 = parseJson_1627395313(input_2516586009);
    var newTheme_2516586017 = jsonToTheme_2516583298(json_2516586016, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2516586017.path = nimCopy(null, path_2516586010, NTI33554449);
    result_2516586015 = nimCopy(result_2516586015, some_2516586018(newTheme_2516586017), NTI2516584388);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2516586036 = [mnewString(0)];
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, path_2516586010, []);
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [58,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586036[0], NTI33554449)]);
    var fmtRes_2516586042 = [mnewString(0)];
    formatValue_721420459(fmtRes_2516586042, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586042[0], NTI33554449)]);
    result_2516586015 = nimCopy(result_2516586015, none_2516586043(), NTI2516584388);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2516586015;

}
  var Temporary281;
var rend_536870946 = [new_536870928()];
init_2768240764(rend_536870946[0]);
var initializedEditor_536870947 = [false];
var ed_536870948 = [newEditor_1291851109(2, rend_536870946[0])];
  var oHEX60gensym0_536870952 = loadFromString_2516586008(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851013(oHEX60gensym0_536870952)) Temporary281 = false; else {    var theme_536870975 = get_1291851033(oHEX60gensym0_536870952);
    Temporary281 = true;  }if (Temporary281) {
ed_536870948[0].theme = theme_536870975;
}

setLayout_1291856985(ed_536870948[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870976 = [0.0];
var frameIndex_536870977 = [0];
var hasRequestedRerender_536870978 = [false];
var isRenderInProgress_536870979 = [false];

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function rawGet_3254780071(t_3254780074, key_3254780075, hc_3254780076, hc_3254780076_Idx) {
  var result_3254780077 = 0;

  BeforeRet: {
    hc_3254780076[hc_3254780076_Idx] = hash_1325400236(key_3254780075);
    if ((hc_3254780076[hc_3254780076_Idx] == 0)) {
    hc_3254780076[hc_3254780076_Idx] = 314159265;
    }
    
    if (((t_3254780074.data).length == 0)) {
    result_3254780077 = -1;
    break BeforeRet;
    }
    
    var h_3254780132 = (hc_3254780076[hc_3254780076_Idx] & (t_3254780074.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254780074.data[chckIndx(h_3254780132, 0, (t_3254780074.data).length - 1)].Field0)) break Label2;
          if (((t_3254780074.data[chckIndx(h_3254780132, 0, (t_3254780074.data).length - 1)].Field0 == hc_3254780076[hc_3254780076_Idx]) && (t_3254780074.data[chckIndx(h_3254780132, 0, (t_3254780074.data).length - 1)].Field1 == key_3254780075))) {
          result_3254780077 = h_3254780132;
          break BeforeRet;
          }
          
          h_3254780132 = nextTry_1308622883(h_3254780132, (t_3254780074.data).length - 1);
        }
    };
    result_3254780077 = subInt(-1, h_3254780132);
  };

  return result_3254780077;

}

function hasKey_3254780064(t_3254780067, key_3254780068) {
  var result_3254780069 = false;

    var hc_3254780070 = [0];
    result_3254780069 = (0 <= rawGet_3254780071(t_3254780067, key_3254780068, hc_3254780070, 0));

  return result_3254780069;

}

function contains_3254780058(t_3254780061, key_3254780062) {
  var result_3254780063 = false;

  BeforeRet: {
    result_3254780063 = hasKey_3254780064(t_3254780061, key_3254780062);
    break BeforeRet;
  };

  return result_3254780063;

}

function HEX5BHEX5D_3254780357(t_3254780360, key_3254780361) {
  var result_3254780362 = null;
  var result_3254780362_Idx = 0;

    var hcHEX60gensym22_3254780363 = [0];
    var indexHEX60gensym22_3254780370 = rawGet_3254780071(t_3254780360, key_3254780361, hcHEX60gensym22_3254780363, 0);
    if ((0 <= indexHEX60gensym22_3254780370)) {
    result_3254780362 = t_3254780360.data[chckIndx(indexHEX60gensym22_3254780370, 0, (t_3254780360.data).length - 1)]; result_3254780362_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3254780361);
    }
    

  return [result_3254780362, result_3254780362_Idx];

}

function mustRehash_3254780649(t_3254780651) {
  var result_3254780652 = false;

    if (!((t_3254780651.counter < (t_3254780651.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3254780652 = ((mulInt((t_3254780651.data).length, 2) < mulInt(t_3254780651.counter, 3)) || (subInt((t_3254780651.data).length, t_3254780651.counter) < 4));

  return result_3254780652;

}

function rawInsert_3254781098(t_3254781102, data_3254781103, data_3254781103_Idx, key_3254781104, val_3254781105, hc_3254781106, h_3254781107) {
    data_3254781103[data_3254781103_Idx][chckIndx(h_3254781107, 0, (data_3254781103[data_3254781103_Idx]).length - 1)].Field1 = key_3254781104;
    data_3254781103[data_3254781103_Idx][chckIndx(h_3254781107, 0, (data_3254781103[data_3254781103_Idx]).length - 1)].Field2 = val_3254781105;
    data_3254781103[data_3254781103_Idx][chckIndx(h_3254781107, 0, (data_3254781103[data_3254781103_Idx]).length - 1)].Field0 = hc_3254781106;

  
}

function enlarge_3254780804(t_3254780807) {
    var n_3254780810 = [];
    n_3254780810 = new Array(chckRange(mulInt((t_3254780807.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3254780807.data).length, 2), 0, 2147483647) ; ++i) { n_3254780810[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3254780807.data; t_3254780807.data = n_3254780810; n_3254780810 = Temporary1;    Label2: {
      var i_3254780874 = 0;
      var colontmp__536871864 = 0;
      colontmp__536871864 = (n_3254780810).length - 1;
      var res_536871865 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871865 <= colontmp__536871864)) break Label4;
            i_3254780874 = res_536871865;
            var eh_3254780928 = n_3254780810[chckIndx(i_3254780874, 0, (n_3254780810).length - 1)].Field0;
            if (isFilled_1308622880(eh_3254780928)) {
            var j_3254780932 = (eh_3254780928 & (t_3254780807.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3254780807.data[chckIndx(j_3254780932, 0, (t_3254780807.data).length - 1)].Field0)) break Label6;
                  j_3254780932 = nextTry_1308622883(j_3254780932, (t_3254780807.data).length - 1);
                }
            };
            rawInsert_3254781098(t_3254780807, t_3254780807, "data", n_3254780810[chckIndx(i_3254780874, 0, (n_3254780810).length - 1)].Field1, n_3254780810[chckIndx(i_3254780874, 0, (n_3254780810).length - 1)].Field2, eh_3254780928, j_3254780932);
            }
            
            res_536871865 = addInt(res_536871865, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3254781267(t_3254781270, key_3254781271, hc_3254781272) {
  var result_3254781273 = 0;

  BeforeRet: {
    if (((t_3254781270.data).length == 0)) {
    result_3254781273 = -1;
    break BeforeRet;
    }
    
    var h_3254781324 = (hc_3254781272 & (t_3254781270.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3254781270.data[chckIndx(h_3254781324, 0, (t_3254781270.data).length - 1)].Field0)) break Label2;
          if (((t_3254781270.data[chckIndx(h_3254781324, 0, (t_3254781270.data).length - 1)].Field0 == hc_3254781272) && (t_3254781270.data[chckIndx(h_3254781324, 0, (t_3254781270.data).length - 1)].Field1 == key_3254781271))) {
          result_3254781273 = h_3254781324;
          break BeforeRet;
          }
          
          h_3254781324 = nextTry_1308622883(h_3254781324, (t_3254781270.data).length - 1);
        }
    };
    result_3254781273 = subInt(-1, h_3254781324);
  };

  return result_3254781273;

}

function HEX5BHEX5DHEX3D_3254780476(t_3254780479, key_3254780480, val_3254780481) {
    if (((t_3254780479.data).length == 0)) {
    var correctSizeHEX60gensym5_3254780530 = slotsNeeded_1308622891(32);
    t_3254780479.counter = 0;
    t_3254780479.data = new Array(chckRange(correctSizeHEX60gensym5_3254780530, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3254780530, 0, 2147483647) ; ++i) { t_3254780479.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3254780535 = [0];
    var index_3254780542 = rawGet_3254780071(t_3254780479, key_3254780480, hc_3254780535, 0);
    if ((0 <= index_3254780542)) {
    t_3254780479.data[chckIndx(index_3254780542, 0, (t_3254780479.data).length - 1)].Field2 = val_3254780481;
    }
    else {
      if (((t_3254780479.data).length == 0)) {
      var correctSizeHEX60gensym8_3254780644 = slotsNeeded_1308622891(32);
      t_3254780479.counter = 0;
      t_3254780479.data = new Array(chckRange(correctSizeHEX60gensym8_3254780644, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3254780644, 0, 2147483647) ; ++i) { t_3254780479.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3254780649(t_3254780479)) {
      enlarge_3254780804(t_3254780479);
      index_3254780542 = rawGetKnownHC_3254781267(t_3254780479, key_3254780480, hc_3254780535[0]);
      }
      
      index_3254780542 = subInt(-1, index_3254780542);
      rawInsert_3254781098(t_3254780479, t_3254780479, "data", key_3254780480, val_3254780481, hc_3254780535[0], index_3254780542);
      t_3254780479.counter = addInt(t_3254780479.counter, 1);
    }
    

  
}

function activeHEX3D_2382364782(self_2382364783, newActive_2382364784) {
    if (!((newActive_2382364784 == self_2382364783.active))) {
    markDirty_2382364710(self_2382364783);
    }
    
    self_2382364783.active = newActive_2382364784;

  
}

function HEX5BHEX5D_3254781521(s_3254781525, x_3254781526) {
  var result_3254781527 = [];

    var a_3254781529 = x_3254781526.a;
    var L_3254781535 = addInt(subInt(subInt((s_3254781525).length, x_3254781526.b), a_3254781529), 1);
    result_3254781527 = new Array(chckRange(L_3254781535, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3254781535, 0, 2147483647) ; ++i) { result_3254781527[i] = null; }    Label1: {
      var i_3254781544 = 0;
      var i_536871869 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871869 < L_3254781535)) break Label3;
            i_3254781544 = i_536871869;
            result_3254781527[chckIndx(i_3254781544, 0, (result_3254781527).length - 1)] = s_3254781525[chckIndx(addInt(i_3254781544, a_3254781529), 0, (s_3254781525).length - 1)];
            i_536871869 = addInt(i_536871869, 1);
          }
      };
    };

  return result_3254781527;

}

function find_3254781749(a_3254781752, item_3254781753) {
  var result_3254781754 = 0;

  BeforeRet: {
    result_3254781754 = 0;
    Label1: {
      var i_3254781767 = null;
      var i_536871873 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871873 < (a_3254781752).length)) break Label3;
            i_3254781767 = a_3254781752[chckIndx(i_536871873, 0, (a_3254781752).length - 1)];
            if ((i_3254781767 == item_3254781753)) {
            break BeforeRet;
            }
            
            result_3254781754 = addInt(result_3254781754, 1);
            i_536871873 = addInt(i_536871873, 1);
          }
      };
    };
    result_3254781754 = -1;
  };

  return result_3254781754;

}

function contains_3254781744(a_3254781746, item_3254781747) {
  var result_3254781748 = false;

  BeforeRet: {
    result_3254781748 = (0 <= find_3254781749(a_3254781746, item_3254781747));
    break BeforeRet;
  };

  return result_3254781748;

}

function contains_2097152186(a_2097152187, b_2097152188) {
  var result_2097152189 = false;

  BeforeRet: {
    result_2097152189 = ((((a_2097152187.x <= b_2097152188.x) && ((b_2097152188.x + b_2097152188.w) <= (a_2097152187.x + a_2097152187.w))) && (a_2097152187.y <= b_2097152188.y)) && ((b_2097152188.y + b_2097152188.h) <= (a_2097152187.y + a_2097152187.h)));
    break BeforeRet;
  };

  return result_2097152189;

}

function invalidate_2785018087(self_2785018088, currentIndex_2785018089, rect_2785018090) {
  BeforeRet: {
    if ((!(intersects_2097152177(self_2785018088.lastBounds, rect_2785018090)) || ((currentIndex_2785018089 <= self_2785018088.lastInvalidation) && contains_2097152186(self_2785018088.lastInvalidationRect, rect_2785018090)))) {
    break BeforeRet;
    }
    
    self_2785018088.lastInvalidationRect = nimCopy(self_2785018088.lastInvalidationRect, and_2113929300(rect_2785018090, self_2785018088.lastBounds), NTI2113929221);
    self_2785018088.lastInvalidation = currentIndex_2785018089;
    if (isObj(self_2785018088.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018100 = null;
      var colontmp__536871876 = [];
      colontmp__536871876 = self_2785018088.children;
      var i_536871877 = 0;
      var L_536871878 = (colontmp__536871876).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871877 < L_536871878)) break Label3;
            c_2785018100 = colontmp__536871876[chckIndx(i_536871877, 0, (colontmp__536871876).length - 1)];
            invalidate_2785018087(c_2785018100, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871877 = addInt(i_536871877, 1);
            if (!(((colontmp__536871876).length == L_536871878))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018110 = null;
      var colontmp__536871881 = [];
      colontmp__536871881 = self_2785018088.children;
      var i_536871882 = 0;
      var L_536871883 = (colontmp__536871881).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871882 < L_536871883)) break Label6;
            c_2785018110 = colontmp__536871881[chckIndx(i_536871882, 0, (colontmp__536871881).length - 1)];
            invalidate_2785018087(c_2785018110, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871882 = addInt(i_536871882, 1);
            if (!(((colontmp__536871881).length == L_536871883))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018120 = null;
      var colontmp__536871886 = [];
      colontmp__536871886 = self_2785018088.children;
      var i_536871887 = 0;
      var L_536871888 = (colontmp__536871886).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871887 < L_536871888)) break Label9;
            c_2785018120 = colontmp__536871886[chckIndx(i_536871887, 0, (colontmp__536871886).length - 1)];
            invalidate_2785018087(c_2785018120, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871887 = addInt(i_536871887, 1);
            if (!(((colontmp__536871886).length == L_536871888))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018088.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018130 = null;
      var colontmp__536871891 = [];
      colontmp__536871891 = self_2785018088.children;
      var i_536871892 = 0;
      var L_536871893 = (colontmp__536871891).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871892 < L_536871893)) break Label12;
            c_2785018130 = colontmp__536871891[chckIndx(i_536871892, 0, (colontmp__536871891).length - 1)];
            invalidate_2785018087(c_2785018130, currentIndex_2785018089, self_2785018088.lastInvalidationRect);
            i_536871892 = addInt(i_536871892, 1);
            if (!(((colontmp__536871891).length == L_536871893))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3187671625(t_3187671628, key_3187671629) {
  var result_3187671630 = false;

    var hc_3187671631 = [0];
    result_3187671630 = (0 <= rawGet_2516583429(t_3187671628, key_3187671629, hc_3187671631, 0));

  return result_3187671630;

}

function contains_3187671619(t_3187671622, key_3187671623) {
  var result_3187671624 = false;

  BeforeRet: {
    result_3187671624 = hasKey_3187671625(t_3187671622, key_3187671623);
    break BeforeRet;
  };

  return result_3187671624;

}

function HEX5BHEX5D_3187671709(t_3187671712, key_3187671713) {
  var result_3187671714 = null;

    var hcHEX60gensym22_3187671715 = [0];
    var indexHEX60gensym22_3187671722 = rawGet_2516583429(t_3187671712, key_3187671713, hcHEX60gensym22_3187671715, 0);
    if ((0 <= indexHEX60gensym22_3187671722)) {
    result_3187671714 = t_3187671712.data[chckIndx(indexHEX60gensym22_3187671722, 0, (t_3187671712.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3187671713);
    }
    

  return result_3187671714;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871900 = 0;
      var colontmp__536871901 = 0;
      colontmp__536871900 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871901 = start_855639774;
      var res_536871902 = colontmp__536871900;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871901 <= res_536871902)) break Label5;
            i_855639789 = res_536871902;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871897 = 0;
              colontmp__536871897 = subInt((sub_855639773).length, 1);
              var res_536871898 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871898 <= colontmp__536871897)) break Label8;
                    j_855639794 = res_536871898;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871898 = addInt(res_536871898, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871902 = subInt(res_536871902, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3288334458(table_3288334460, key_3288334461, default_3288334462) {
  var result_3288334463 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3187671619(table_3288334460, key_3288334461)) {
    result_3288334463 = nimCopy(result_3288334463, HEX5BHEX5D_3187671709(table_3288334460, key_3288334461), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3288334569 = nsuRFindStr(key_3288334461, [46], 0, -1);
    if (!((index_3288334569 == -1))) {
    result_3288334463 = nimCopy(result_3288334463, getCascading_3288334458(table_3288334460, HEX5BHEX5D_855639291(key_3288334461, HEX2EHEX2E_805306418(0, subInt(index_3288334569, 1))), default_3288334462), NTI2550136835);
    break BeforeRet;
    }
    
    result_3288334463 = nimCopy(result_3288334463, default_3288334462, NTI2550136835);
    break BeforeRet;
  };

  return result_3288334463;

}

function color_3288334447(theme_3288334449, name_3288334450, default_3288334451) {
  var result_3288334452 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3288334452 = nimCopy(result_3288334452, getCascading_3288334458(theme_3288334449.colors, name_3288334450, color_2634022945(default_3288334451)), NTI2550136835);
    break BeforeRet;
  };

  return result_3288334452;

}

function HEX3DHEX3D_2785017924(x_2785017926, y_2785017927) {
  var result_2785017928 = false;

  BeforeRet: {
    if (!((x_2785017926.r == y_2785017927.r))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.g == y_2785017927.g))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.b == y_2785017927.b))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    if (!((x_2785017926.a == y_2785017927.a))) {
    result_2785017928 = false;
    break BeforeRet;
    }
    
    result_2785017928 = true;
    break BeforeRet;
  };

  return result_2785017928;

}

function updateForegroundColor_2785017920(self_2785017921, color_2785017922, frameIndex_2785017923) {
    if (!(HEX3DHEX3D_2785017924(self_2785017921.foregroundColor, color_2785017922))) {
    self_2785017921.lastHierarchyChange = nimMax(self_2785017921.lastHierarchyChange, frameIndex_2785017923);
    }
    
    self_2785017921.foregroundColor = nimCopy(self_2785017921.foregroundColor, color_2785017922, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2785017942(self_2785017943, currentIndex_2785017944) {
    if (isObj(self_2785017943.m_type, NTI2785017868)) {
    Label1: {
      var c_2785017974 = null;
      var colontmp__536871905 = [];
      colontmp__536871905 = self_2785017943.children;
      var i_536871906 = 0;
      var L_536871907 = (colontmp__536871905).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871906 < L_536871907)) break Label3;
            c_2785017974 = colontmp__536871905[chckIndx(i_536871906, 0, (colontmp__536871905).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017974, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017974.lastHierarchyChange), c_2785017974.lastBoundsChange);
            i_536871906 = addInt(i_536871906, 1);
            if (!(((colontmp__536871905).length == L_536871907))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017870)) {
    Label4: {
      var c_2785017985 = null;
      var colontmp__536871910 = [];
      colontmp__536871910 = self_2785017943.children;
      var i_536871911 = 0;
      var L_536871912 = (colontmp__536871910).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871911 < L_536871912)) break Label6;
            c_2785017985 = colontmp__536871910[chckIndx(i_536871911, 0, (colontmp__536871910).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017985, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017985.lastHierarchyChange), c_2785017985.lastBoundsChange);
            i_536871911 = addInt(i_536871911, 1);
            if (!(((colontmp__536871910).length == L_536871912))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017872)) {
    Label7: {
      var c_2785017996 = null;
      var colontmp__536871915 = [];
      colontmp__536871915 = self_2785017943.children;
      var i_536871916 = 0;
      var L_536871917 = (colontmp__536871915).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871916 < L_536871917)) break Label9;
            c_2785017996 = colontmp__536871915[chckIndx(i_536871916, 0, (colontmp__536871915).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785017996, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785017996.lastHierarchyChange), c_2785017996.lastBoundsChange);
            i_536871916 = addInt(i_536871916, 1);
            if (!(((colontmp__536871915).length == L_536871917))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018007 = null;
      var colontmp__536871920 = [];
      colontmp__536871920 = self_2785017943.children;
      var i_536871921 = 0;
      var L_536871922 = (colontmp__536871920).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871921 < L_536871922)) break Label12;
            c_2785018007 = colontmp__536871920[chckIndx(i_536871921, 0, (colontmp__536871920).length - 1)];
            updateLastHierarchyChangeFromChildren_2785017942(c_2785018007, currentIndex_2785017944);
            self_2785017943.lastHierarchyChange = nimMax(nimMax(self_2785017943.lastHierarchyChange, c_2785018007.lastHierarchyChange), c_2785018007.lastBoundsChange);
            i_536871921 = addInt(i_536871921, 1);
            if (!(((colontmp__536871920).length == L_536871922))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785017943.m_type, NTI2785017876)) {
    if (!(eqStrings(self_2785017943.text, self_2785017943.lastRenderedText))) {
    self_2785017943.lastHierarchyChange = nimMax(self_2785017943.lastHierarchyChange, currentIndex_2785017944);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3254779920(self_3254779921, frameIndex_3254779922, statusBarWidget_3254779923) {
    var Temporary1;

    var statusWidget_3254779924 = null;
    var commandLineWidget_3254779925 = null;
    if (((statusBarWidget_3254779923.children).length == 0)) {
    statusWidget_3254779924 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.5)}, NTI2785017867), lastHierarchyChange: frameIndex_3254779922, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3254779923.children.push(statusWidget_3254779924);;
    commandLineWidget_3254779925 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.5), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3254779922, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3254779923.children.push(commandLineWidget_3254779925);;
    layoutWidget_2785018180(statusWidget_3254779924, statusBarWidget_3254779923.lastBounds, frameIndex_3254779922, self_3254779921.platform.layoutOptions);
    layoutWidget_2785018180(commandLineWidget_3254779925, statusBarWidget_3254779923.lastBounds, frameIndex_3254779922, self_3254779921.platform.layoutOptions);
    }
    else {
      statusWidget_3254779924 = statusBarWidget_3254779923.children[chckIndx(0, 0, (statusBarWidget_3254779923.children).length - 1)];
      commandLineWidget_3254779925 = statusBarWidget_3254779923.children[chckIndx(1, 0, (statusBarWidget_3254779923.children).length - 1)];
    }
    
    var textColor_3254779942 = color_3288334447(self_3254779921.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3254779921.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3254779921.currentMode;
    }
    
    statusWidget_3254779924.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2785017920(statusWidget_3254779924, textColor_3254779942, frameIndex_3254779922);
    updateLastHierarchyChangeFromChildren_2785017942(statusWidget_3254779924, frameIndex_3254779922);
    statusBarWidget_3254779923.lastHierarchyChange = nimMax(statusBarWidget_3254779923.lastHierarchyChange, statusWidget_3254779924.lastHierarchyChange);
    activeHEX3D_2382364782(getCommandLineTextEditor_1291851060(self_3254779921), self_3254779921.commandLineMode);
    updateWidget_3271557130(getCommandLineTextEditor_1291851060(self_3254779921), self_3254779921, commandLineWidget_3254779925, frameIndex_3254779922);
    statusBarWidget_3254779923.lastHierarchyChange = nimMax(statusBarWidget_3254779923.lastHierarchyChange, commandLineWidget_3254779925.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2785018131(self_2785018132, currentIndex_2785018133, recurse_2785018134) {
    if (isObj(self_2785018132.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018144 = null;
      var colontmp__536871925 = [];
      colontmp__536871925 = self_2785018132.children;
      var i_536871926 = 0;
      var L_536871927 = (colontmp__536871925).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871926 < L_536871927)) break Label3;
            c_2785018144 = colontmp__536871925[chckIndx(i_536871926, 0, (colontmp__536871925).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018144, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018144.lastInvalidation), currentIndex_2785018133);
            i_536871926 = addInt(i_536871926, 1);
            if (!(((colontmp__536871925).length == L_536871927))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018154 = null;
      var colontmp__536871930 = [];
      colontmp__536871930 = self_2785018132.children;
      var i_536871931 = 0;
      var L_536871932 = (colontmp__536871930).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871931 < L_536871932)) break Label6;
            c_2785018154 = colontmp__536871930[chckIndx(i_536871931, 0, (colontmp__536871930).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018154, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018154.lastInvalidation), currentIndex_2785018133);
            i_536871931 = addInt(i_536871931, 1);
            if (!(((colontmp__536871930).length == L_536871932))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018164 = null;
      var colontmp__536871935 = [];
      colontmp__536871935 = self_2785018132.children;
      var i_536871936 = 0;
      var L_536871937 = (colontmp__536871935).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871936 < L_536871937)) break Label9;
            c_2785018164 = colontmp__536871935[chckIndx(i_536871936, 0, (colontmp__536871935).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018164, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018164.lastInvalidation), currentIndex_2785018133);
            i_536871936 = addInt(i_536871936, 1);
            if (!(((colontmp__536871935).length == L_536871937))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018132.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018174 = null;
      var colontmp__536871940 = [];
      colontmp__536871940 = self_2785018132.children;
      var i_536871941 = 0;
      var L_536871942 = (colontmp__536871940).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871941 < L_536871942)) break Label12;
            c_2785018174 = colontmp__536871940[chckIndx(i_536871941, 0, (colontmp__536871940).length - 1)];
            if (recurse_2785018134) {
            updateInvalidationFromChildren_2785018131(c_2785018174, currentIndex_2785018133, recurse_2785018134);
            }
            
            self_2785018132.lastInvalidation = nimMax(nimMax(self_2785018132.lastInvalidation, c_2785018174.lastInvalidation), currentIndex_2785018133);
            i_536871941 = addInt(i_536871941, 1);
            if (!(((colontmp__536871940).length == L_536871942))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3254779982(self_3254779983, frameIndex_3254779984) {
            var Temporary4;
            var Temporary8;

    if ((self_3254779983.widget == null)) {
    mainStack_3254779944[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), right: -1.0, logLayout: false, m_type: NTI2785017870, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3254779983.widget = mainStack_3254779944[0];
    mainPanel_3254779946[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3254779944[0].children.push(mainPanel_3254779946[0]);;
    viewPanel_3254779945[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), bottom: (-2.0 * totalLineHeight_2768240810(self_3254779983.platform)), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3254779946[0].children.push(viewPanel_3254779945[0]);;
    commandLineWidget_3254779943[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 1.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), top: (-2.0 * totalLineHeight_2768240810(self_3254779983.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3254779946[0].children.push(commandLineWidget_3254779943[0]);;
    layoutWidget_2785018180(self_3254779983.widget, rect_2113929240(vec2_2130707293(0.0, 0.0), size_2768240760(self_3254779983.platform)), frameIndex_3254779984, self_3254779983.platform.layoutOptions);
    }
    
    if (viewPanel_3254779945[0].children.length < 0) { for (var i = viewPanel_3254779945[0].children.length ; i < 0 ; ++i) viewPanel_3254779945[0].children.push(null); }
               else { viewPanel_3254779945[0].children.length = 0; };
    var rects_3254780007 = layoutViews_1291848236(self_3254779983.layout, self_3254779983.layout_props, rect_2113929234(0.0, 0.0, 1.0, 1.0), (self_3254779983.views).length);
    Label1: {
      var i_3254780013 = 0;
      var view_3254780014 = null;
      var i_536871841 = 0;
      var L_536871842 = (self_3254779983.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871841 < L_536871842)) break Label3;
            i_3254780013 = i_536871841;
            view_3254780014 = self_3254779983.views[chckIndx(i_536871841, 0, (self_3254779983.views).length - 1)];
            var widget_3254780015 = null;
            if (contains_3254780058(widgetsPerEditor_3254779972[0], view_3254780014.editor.id)) {
            widget_3254780015 = (Temporary4 = HEX5BHEX5D_3254780357(widgetsPerEditor_3254779972[0], view_3254780014.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3254780015 = {lastHierarchyChange: frameIndex_3254779984, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3254780476(widgetsPerEditor_3254779972[0], view_3254780014.editor.id, widget_3254780015);
            }
            
            if ((i_3254780013 < (rects_3254780007).length)) {
            var colontmp__536871839 = xy_2113929248(rects_3254780007[chckIndx(i_3254780013, 0, (rects_3254780007).length - 1)]);
            var colontmp__536871840 = vec2_2130707293((rects_3254780007[chckIndx(i_3254780013, 0, (rects_3254780007).length - 1)].x + rects_3254780007[chckIndx(i_3254780013, 0, (rects_3254780007).length - 1)].w), (rects_3254780007[chckIndx(i_3254780013, 0, (rects_3254780007).length - 1)].y + rects_3254780007[chckIndx(i_3254780013, 0, (rects_3254780007).length - 1)].h));
            widget_3254780015.anchor = nimCopy(widget_3254780015.anchor, {Field0: nimCopy(null, colontmp__536871839, NTI2130706720), Field1: nimCopy(null, colontmp__536871840, NTI2130706720)}, NTI2785017867);
            layoutWidget_2785018180(widget_3254780015, viewPanel_3254779945[0].lastBounds, frameIndex_3254779984, self_3254779983.platform.layoutOptions);
            viewPanel_3254779945[0].children.push(widget_3254780015);;
            activeHEX3D_2382364782(view_3254780014.editor, (self_3254779983.currentView == i_3254780013));
            updateWidget_3271557130(view_3254780014.editor, self_3254779983, widget_3254780015, frameIndex_3254779984);
            viewPanel_3254779945[0].lastHierarchyChange = nimMax(viewPanel_3254779945[0].lastHierarchyChange, widget_3254780015.lastHierarchyChange);
            }
            
            i_536871841 = addInt(i_536871841, 1);
            if (!(((self_3254779983.views).length == L_536871842))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3254779946[0].lastHierarchyChange = nimMax(mainPanel_3254779946[0].lastHierarchyChange, viewPanel_3254779945[0].lastHierarchyChange);
    var lastPopups_3254781545 = HEX5BHEX5D_3254781521(mainStack_3254779944[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3254779944[0].children.length < 1) { for (var i = mainStack_3254779944[0].children.length ; i < 1 ; ++i) mainStack_3254779944[0].children.push(null); }
               else { mainStack_3254779944[0].children.length = 1; };
    Label5: {
      var i_3254781582 = 0;
      var popup_3254781583 = null;
      var i_536871848 = 0;
      var L_536871849 = (self_3254779983.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871848 < L_536871849)) break Label7;
            i_3254781582 = i_536871848;
            popup_3254781583 = self_3254779983.popups[chckIndx(i_536871848, 0, (self_3254779983.popups).length - 1)];
            var widget_3254781584 = null;
            if (contains_3254780058(widgetsPerEditor_3254779972[0], popup_3254781583.id)) {
            widget_3254781584 = (Temporary8 = HEX5BHEX5D_3254780357(widgetsPerEditor_3254779972[0], popup_3254781583.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3254781584 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3254779984, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3254780476(widgetsPerEditor_3254779972[0], popup_3254781583.id, widget_3254781584);
            }
            
            var colontmp__536871845 = vec2_2130707293(0.25, 0.25);
            var colontmp__536871846 = vec2_2130707293(0.75, 0.75);
            widget_3254781584.anchor = nimCopy(widget_3254781584.anchor, {Field0: nimCopy(null, colontmp__536871845, NTI2130706720), Field1: nimCopy(null, colontmp__536871846, NTI2130706720)}, NTI2785017867);
            layoutWidget_2785018180(widget_3254781584, mainStack_3254779944[0].lastBounds, frameIndex_3254779984, self_3254779983.platform.layoutOptions);
            mainStack_3254779944[0].children.push(widget_3254781584);;
            updateWidget_3271557136(popup_3254781583, self_3254779983, widget_3254781584, frameIndex_3254779984);
            mainStack_3254779944[0].lastHierarchyChange = nimMax(mainStack_3254779944[0].lastHierarchyChange, widget_3254781584.lastHierarchyChange);
            i_536871848 = addInt(i_536871848, 1);
            if (!(((self_3254779983.popups).length == L_536871849))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3254781743 = null;
      var i_536871858 = 0;
      var L_536871859 = (lastPopups_3254781545).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871858 < L_536871859)) break Label11;
            p_3254781743 = lastPopups_3254781545[chckIndx(i_536871858, 0, (lastPopups_3254781545).length - 1)];
            Label12: {
              if (contains_3254781744(mainStack_3254779944[0].children, p_3254781743)) {
              break Label12;
              }
              
              Label13: {
                var c_3254781780 = null;
                var i_536871855 = 0;
                var L_536871856 = (mainStack_3254779944[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871855 < L_536871856)) break Label15;
                      c_3254781780 = mainStack_3254779944[0].children[chckIndx(i_536871855, 0, (mainStack_3254779944[0].children).length - 1)];
                      invalidate_2785018087(c_3254781780, frameIndex_3254779984, p_3254781743.lastBounds);
                      i_536871855 = addInt(i_536871855, 1);
                      if (!(((mainStack_3254779944[0].children).length == L_536871856))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871858 = addInt(i_536871858, 1);
            if (!(((lastPopups_3254781545).length == L_536871859))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3254779920(self_3254779983, frameIndex_3254779984, commandLineWidget_3254779943[0]);
    mainPanel_3254779946[0].lastHierarchyChange = nimMax(mainPanel_3254779946[0].lastHierarchyChange, commandLineWidget_3254779943[0].lastHierarchyChange);
    mainStack_3254779944[0].lastHierarchyChange = nimMax(mainStack_3254779944[0].lastHierarchyChange, mainPanel_3254779946[0].lastHierarchyChange);
    updateInvalidationFromChildren_2785018131(mainStack_3254779944[0], -1, false);
    self_3254779983.widget.lastHierarchyChange = nimMax(self_3254779983.widget.lastHierarchyChange, commandLineWidget_3254779943[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3254781799(self_3254781800, size_3254781801, frameIndex_3254781802) {
  BeforeRet: {
    self_3254781800.lastBounds = nimCopy(self_3254781800.lastBounds, rect_2113929240(vec2_2130707293(0.0, 0.0), size_3254781801), NTI2113929221);
    if ((self_3254781800.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2785018180(self_3254781800.widget, self_3254781800.lastBounds, frameIndex_3254781802, self_3254781800.platform.layoutOptions);
  };

  
}

function requestRender_536871267(redrawEverything_536871268) {
    
function HEX3Aanonymous_536871269(time_536871270) {
        hasRequestedRerender_536870978[0] = false;
        isRenderInProgress_536870979[0] = true;
        try {
        try {
        var layoutTime_536871276 = 0.0;
        var updateTime_536871277 = 0.0;
        var renderTime_536871278 = 0.0;
        Label3: {
          ed_536870948[0].frameTimer = nimCopy(ed_536870948[0].frameTimer, startTimer_2466250804(), NTI2466250783);
          var updateTimer_536871279 = startTimer_2466250804();
          updateWidgetTree_3254779982(ed_536870948[0], frameIndex_536870977[0]);
          updateTime_536871277 = ms_2466250801(elapsed_2466250815(updateTimer_536871279));
          var layoutTimer_536871280 = startTimer_2466250804();
          layoutWidgetTree_3254781799(ed_536870948[0], size_2768240760(rend_536870946[0]), frameIndex_536870977[0]);
          layoutTime_536871276 = ms_2466250801(elapsed_2466250815(layoutTimer_536871280));
          var renderTimer_536871281 = startTimer_2466250804();
          render_2768240751(rend_536870946[0], ed_536870948[0].widget, frameIndex_536870977[0]);
          renderTime_536871278 = ms_2466250801(elapsed_2466250815(renderTimer_536871281));
          frameTime_536870976[0] = ms_2466250801(elapsed_2466250815(ed_536870948[0].frameTimer));
        };
        if ((20.0 < frameTime_536870976[0])) {
        var fmtRes_536871286 = [mnewString(0)];
        fmtRes_536871286[0].push.apply(fmtRes_536871286[0], [70,114,97,109,101,58,32]);;
        formatValue_2785018295(fmtRes_536871286, 0, frameTime_536870976[0], [62,53,46,50]);
        fmtRes_536871286[0].push.apply(fmtRes_536871286[0], [109,115,32,40,117,58,32]);;
        formatValue_2785018295(fmtRes_536871286, 0, updateTime_536871277, [62,53,46,50]);
        fmtRes_536871286[0].push.apply(fmtRes_536871286[0], [109,115,44,32,108,58,32]);;
        formatValue_2785018295(fmtRes_536871286, 0, layoutTime_536871276, [62,53,46,50]);
        fmtRes_536871286[0].push.apply(fmtRes_536871286[0], [109,115,44,32,114,58,32]);;
        formatValue_2785018295(fmtRes_536871286, 0, renderTime_536871278, [62,53,46,50]);
        fmtRes_536871286[0].push.apply(fmtRes_536871286[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871286[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870977[0] = addInt(frameIndex_536870977[0], 1);
        }
        } finally {
        isRenderInProgress_536870979[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870947[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870978[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870979[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871269);
  };

  
}

function subscribe_536871754(event_536871756, callback_536871758) {
  var result_536871759 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871759 = nimCopy(result_536871759, newId_2046820569(), NTI2046820355);
    event_536871756.handlers.push({Field0: nimCopy(null, result_536871759, NTI2046820355), Field1: callback_536871758});;

  return result_536871759;

}

function HEX3Aanonymous_536871336(event_536871354) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871385(event_536871403) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871434(event_536871452) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871483(event_536871501) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871532(event_536871550) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871581(event_536871599) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871630(event_536871648) {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871679() {
    requestRender_536871267(false);

  
}

function HEX3Aanonymous_536871728(redrawEverything_536871729) {
    requestRender_536871267(redrawEverything_536871729);

  
}
var _ = subscribe_1291851158(rend_536870946[0].onKeyPress, HEX3Aanonymous_536871336);
var _ = subscribe_1291851158(rend_536870946[0].onKeyRelease, HEX3Aanonymous_536871385);
var _ = subscribe_1291851158(rend_536870946[0].onRune, HEX3Aanonymous_536871434);
var _ = subscribe_1291851328(rend_536870946[0].onMousePress, HEX3Aanonymous_536871483);
var _ = subscribe_1291851328(rend_536870946[0].onMouseRelease, HEX3Aanonymous_536871532);
var _ = subscribe_1291851449(rend_536870946[0].onMouseMove, HEX3Aanonymous_536871581);
var _ = subscribe_1291851521(rend_536870946[0].onScroll, HEX3Aanonymous_536871630);
var _ = subscribe_1291851665(rend_536870946[0].onCloseRequested, HEX3Aanonymous_536871679);
var _ = subscribe_536871754(rend_536870946[0].onResized, HEX3Aanonymous_536871728);
Label320: {
  setHandleInputs_1291855229(ed_536870948[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291861310([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291861228([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859642(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859642(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870947[0] = true;
requestRender_536871267(false);

function formatValue_1291848865(result_1291848867, result_1291848867_Idx, value_1291848868, specifier_1291848869) {
    formatValue_721420459(result_1291848867, result_1291848867_Idx, HEX24_1627394481(value_1291848868), specifier_1291848869);

  
}

function handleUnknownDocumentEditorAction_1291848854(self_1291848855, editor_1291848856, action_1291848857, args_1291848858) {
  var result_1291848859 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (handleUnknownDocumentEditorAction_2751463456(self_1291848855.scriptContext, editor_1291848856, action_1291848857, args_1291848858)) {
    result_1291848859 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848864 = [mnewString(0)];
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848864, 0, action_1291848857, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [32]);;
    formatValue_1291848865(fmtRes_1291848864, 0, args_1291848858, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848864, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848864[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848859 = 0;
    break BeforeRet;
  };

  return result_1291848859;

}

function insert_2818590875(x_2818590877, x_2818590877_Idx, item_2818590878, i_2818590879) {
    var it_2818590899 = null;
    x_2818590877[x_2818590877_Idx] = x_2818590877[x_2818590877_Idx] || []; x_2818590877[x_2818590877_Idx].splice(i_2818590879, 0, it_2818590899);
    x_2818590877[x_2818590877_Idx][chckIndx(i_2818590879, 0, (x_2818590877[x_2818590877_Idx]).length - 1)] = item_2818590878;

  
}

function toJson_2818583335(self_2818583336, opt_2818583337) {
  var result_2818583338 = null;

    result_2818583338 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818583338, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818583338, [105,100], newJInt_1627390040(self_2818583336.id));

  return result_2818583338;

}

function none_2818583241() {
  var result_2818583247 = ({val: null});

  return result_2818583247;

}

function some_2818583300(val_2818583302) {
  var result_2818583303 = ({val: null});

    if (!(!((val_2818583302 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818583303.val = val_2818583302;

  return result_2818583303;

}

function getTextDocumentEditor_2818583231(wrapper_2818583232) {
      var Temporary1;

  var result_2818583237 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583237 = nimCopy(result_2818583237, none_2818583241(), NTI2818578194);
    break BeforeRet;
    }
    
      var oHEX60gensym169_2818583250 = getEditorForId_1291850661(gEditor, wrapper_2818583232.id);
      if (!isSome_2818583255(oHEX60gensym169_2818583250)) Temporary1 = false; else {        var editor_2818583292 = get_2818583275(oHEX60gensym169_2818583250);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583292.m_type, NTI2818572510)) {
    result_2818583237 = nimCopy(result_2818583237, some_2818583300(editor_2818583292), NTI2818578194);
    break BeforeRet;
    }
    
    }
    
    result_2818583237 = nimCopy(result_2818583237, none_2818583241(), NTI2818578194);
    break BeforeRet;
  };

  return result_2818583237;

}

function isNone_2818583592(self_2818583594) {
  var result_2818583595 = false;

    result_2818583595 = (self_2818583594.val == null);

  return result_2818583595;

}

function get_2818583612(self_2818583614) {
  var result_2818583615 = null;

    if (isNone_2818583592(self_2818583614)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583615 = self_2818583614["val"];

  return result_2818583615;

}

function setModeScript_2818583477_2818583584(self_2818583585, mode_2818583586) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym180_2818583587 = getTextDocumentEditor_2818583231(self_2818583585);
      if (isNone_2818583592(rHEX60gensym180_2818583587)) {
      break BeforeRet;
      }
      
    };
    setMode_2818583517(get_2818583612(rHEX60gensym180_2818583587), mode_2818583586);
  };

  
}

function fromJsonHook_2818583339(t_2818583340, jsonNode_2818583341) {
    t_2818583340.id = jsonTo_2818583342(HEX5BHEX5D_1627393037(jsonNode_2818583341, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818583652(a_2818583654, b_2818583655, opt_2818583656) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583655, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818583655}));
    }
    
    fromJsonHook_2818583339(a_2818583654, b_2818583655);

  
}

function jsonTo_2818583646(b_2818583648, opt_2818583650) {
  var result_2818583651 = [({id: 0})];

    fromJson_2818583652(result_2818583651[0], b_2818583648, opt_2818583650);

  return result_2818583651[0];

}

function setModeApi_2818583644(HEX3Atmp_2818583480) {
  var result_2818583645 = null;

    result_2818583645 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2818583477_2818583584(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818583480, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818583480, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym185_2818583668 = [115,101,116,77,111,100,101];
    var fmtRes_2818583673 = [mnewString(0)];
    fmtRes_2818583673[0].push.apply(fmtRes_2818583673[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583673, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym185_2818583668 || [],fmtRes_2818583673[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818583645;

}

function modeScript_2818583768_2818583776(self_2818583777) {
  var result_2818583778 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym194_2818583779 = getTextDocumentEditor_2818583231(self_2818583777);
      if (isNone_2818583592(rHEX60gensym194_2818583779)) {
      break BeforeRet;
      }
      
    };
    result_2818583778 = nimCopy(null, mode_2818583773(get_2818583612(rHEX60gensym194_2818583779)), NTI33554449);
  };

  return result_2818583778;

}

function modeApi_2818583806(HEX3Atmp_2818583770) {
  var result_2818583807 = null;

  BeforeRet: {
    result_2818583807 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818583807 = toJson_1811939932(modeScript_2818583768_2818583776(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818583770, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym200_2818583817 = [109,111,100,101];
    var fmtRes_2818583822 = [mnewString(0)];
    fmtRes_2818583822[0].push.apply(fmtRes_2818583822[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583822, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym200_2818583817 || [],fmtRes_2818583822[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818583807;

}

function getContextWithModeScript_2818583825_2818583834(self_2818583835, context_2818583836) {
  var result_2818583837 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym204_2818583838 = getTextDocumentEditor_2818583231(self_2818583835);
      if (isNone_2818583592(rHEX60gensym204_2818583838)) {
      break BeforeRet;
      }
      
    };
    result_2818583837 = nimCopy(null, getContextWithMode_2818582956(get_2818583612(rHEX60gensym204_2818583838), context_2818583836), NTI33554449);
  };

  return result_2818583837;

}

function getContextWithModeApi_2818583866(HEX3Atmp_2818583827) {
  var result_2818583867 = null;

  BeforeRet: {
    result_2818583867 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818583867 = toJson_1811939932(getContextWithModeScript_2818583825_2818583834(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818583827, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818583827, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym210_2818583882 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818583887 = [mnewString(0)];
    fmtRes_2818583887[0].push.apply(fmtRes_2818583887[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583887, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym210_2818583882 || [],fmtRes_2818583887[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818583867;

}

function updateTargetColumnScript_2818583890_2818583898(self_2818583899, cursor_2818583900) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym214_2818583901 = getTextDocumentEditor_2818583231(self_2818583899);
      if (isNone_2818583592(rHEX60gensym214_2818583901)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818583895(get_2818583612(rHEX60gensym214_2818583901), cursor_2818583900);
  };

  
}

function parseEnum_2818583953(s_2818583955) {
    var Temporary1;

  var result_2818583956 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583955))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818583955 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818583956 = Temporary1;

  return result_2818583956;

}

function fromJson_2818583941(a_2818583943, a_2818583943_Idx, b_2818583944, opt_2818583945) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583944, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818583944}));
    }
    
    switch (b_2818583944.kind) {
    case 2:
      a_2818583943[a_2818583943_Idx] = chckRange(getBiggestInt_1627390129(b_2818583944, 0), 0, 4);
      break;
    case 4:
      a_2818583943[a_2818583943_Idx] = parseEnum_2818583953(getStr_1627390106(b_2818583944, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818583981 = [mnewString(0)];
      fmtRes_2818583981[0].push.apply(fmtRes_2818583981[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818583981, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818583981[0].push.apply(fmtRes_2818583981[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818583981, 0, pretty_1627394477(b_2818583944, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818583981[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818583935(b_2818583937, opt_2818583939) {
  var result_2818583940 = [0];

    fromJson_2818583941(result_2818583940, 0, b_2818583937, opt_2818583939);

  return result_2818583940[0];

}

function updateTargetColumnApi_2818583928(HEX3Atmp_2818583892) {
  var result_2818583929 = null;

    result_2818583929 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2818583890_2818583898(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818583892, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818583892, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym219_2818583985 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2818583990 = [mnewString(0)];
    fmtRes_2818583990[0].push.apply(fmtRes_2818583990[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583990, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym219_2818583985 || [],fmtRes_2818583990[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818583929;

}

function invertSelectionScript_2818584007_2818584014(self_2818584015) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym228_2818584016 = getTextDocumentEditor_2818583231(self_2818584015);
      if (isNone_2818583592(rHEX60gensym228_2818584016)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818584012(get_2818583612(rHEX60gensym228_2818584016));
  };

  
}

function invertSelectionApi_2818584042(HEX3Atmp_2818584009) {
  var result_2818584043 = null;

    result_2818584043 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2818584007_2818584014(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818584009, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym233_2818584049 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818584054 = [mnewString(0)];
    fmtRes_2818584054[0].push.apply(fmtRes_2818584054[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584054, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym233_2818584049 || [],fmtRes_2818584054[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584043;

}

function insertScript_2818584070_2818584083(self_2818584084, selections_2818584085, text_2818584086, notify_2818584087, record_2818584088, autoIndent_2818584089) {
  var result_2818584090 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym241_2818584091 = getTextDocumentEditor_2818583231(self_2818584084);
      if (isNone_2818583592(rHEX60gensym241_2818584091)) {
      break BeforeRet;
      }
      
    };
    result_2818584090 = nimCopy(null, insert_2818584075(get_2818583612(rHEX60gensym241_2818584091), selections_2818584085, text_2818584086, notify_2818584087, record_2818584088, autoIndent_2818584089), NTI2818578877);
  };

  return result_2818584090;

}

function insertApi_2818584123(HEX3Atmp_2818584072) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2818584124 = null;

  BeforeRet: {
    result_2818584124 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818584072))) {
      Temporary6 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818584072))) {
      Temporary8 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2818584072))) {
      Temporary10 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2818584124 = toJson_2818584422(insertScript_2818584070_2818584083(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584130(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584072, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym247_2818584478 = [105,110,115,101,114,116];
    var fmtRes_2818584483 = [mnewString(0)];
    fmtRes_2818584483[0].push.apply(fmtRes_2818584483[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584483, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym247_2818584478 || [],fmtRes_2818584483[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584124;

}

function deleteScript_2818584571_2818584582(self_2818584583, selections_2818584584, notify_2818584585, record_2818584586) {
  var result_2818584587 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym274_2818584588 = getTextDocumentEditor_2818583231(self_2818584583);
      if (isNone_2818583592(rHEX60gensym274_2818584588)) {
      break BeforeRet;
      }
      
    };
    result_2818584587 = nimCopy(null, delete_2818584576(get_2818583612(rHEX60gensym274_2818584588), selections_2818584584, notify_2818584585, record_2818584586), NTI2818579393);
  };

  return result_2818584587;

}

function deleteApi_2818584618(HEX3Atmp_2818584573) {
      var Temporary5;
      var Temporary7;

  var result_2818584619 = null;

  BeforeRet: {
    result_2818584619 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818584573))) {
      Temporary5 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818584573, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818584573))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818584573, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2818584619 = toJson_2818584422(deleteScript_2818584571_2818584582(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818584573, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584130(HEX5BHEX5D_1627393116(HEX3Atmp_2818584573, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym280_2818584644 = [100,101,108,101,116,101];
    var fmtRes_2818584649 = [mnewString(0)];
    fmtRes_2818584649[0].push.apply(fmtRes_2818584649[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584649, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym280_2818584644 || [],fmtRes_2818584649[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584619;

}

function selectPrevScript_2818584687_2818584839(self_2818584840) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym285_2818584841 = getTextDocumentEditor_2818583231(self_2818584840);
      if (isNone_2818583592(rHEX60gensym285_2818584841)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818584692(get_2818583612(rHEX60gensym285_2818584841));
  };

  
}

function selectPrevApi_2818584867(HEX3Atmp_2818584689) {
  var result_2818584868 = null;

    result_2818584868 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2818584687_2818584839(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818584689, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym290_2818584874 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818584879 = [mnewString(0)];
    fmtRes_2818584879[0].push.apply(fmtRes_2818584879[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584879, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym290_2818584874 || [],fmtRes_2818584879[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584868;

}

function selectNextScript_2818584883_2818585012(self_2818585013) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym296_2818585014 = getTextDocumentEditor_2818583231(self_2818585013);
      if (isNone_2818583592(rHEX60gensym296_2818585014)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818584888(get_2818583612(rHEX60gensym296_2818585014));
  };

  
}

function selectNextApi_2818585040(HEX3Atmp_2818584885) {
  var result_2818585041 = null;

    result_2818585041 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2818584883_2818585012(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818584885, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym301_2818585047 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818585052 = [mnewString(0)];
    fmtRes_2818585052[0].push.apply(fmtRes_2818585052[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585052, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym301_2818585047 || [],fmtRes_2818585052[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585041;

}

function selectInsideScript_2818585055_2818585074(self_2818585075, cursor_2818585076) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym306_2818585077 = getTextDocumentEditor_2818583231(self_2818585075);
      if (isNone_2818583592(rHEX60gensym306_2818585077)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818585060(get_2818583612(rHEX60gensym306_2818585077), cursor_2818585076);
  };

  
}

function jsonTo_2818585111(b_2818585113, opt_2818585115) {
  var result_2818585116 = [{Field0: 0, Field1: 0}];

    fromJson_2818584245(result_2818585116[0], b_2818585113, opt_2818585115);

  return result_2818585116[0];

}

function selectInsideApi_2818585104(HEX3Atmp_2818585057) {
  var result_2818585105 = null;

    result_2818585105 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2818585055_2818585074(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585057, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585111(HEX5BHEX5D_1627393116(HEX3Atmp_2818585057, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym311_2818585122 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2818585127 = [mnewString(0)];
    fmtRes_2818585127[0].push.apply(fmtRes_2818585127[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585127, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym311_2818585122 || [],fmtRes_2818585127[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585105;

}

function selectInsideCurrentScript_2818585132_2818585139(self_2818585140) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_2818585141 = getTextDocumentEditor_2818583231(self_2818585140);
      if (isNone_2818583592(rHEX60gensym315_2818585141)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818585137(get_2818583612(rHEX60gensym315_2818585141));
  };

  
}

function selectInsideCurrentApi_2818585167(HEX3Atmp_2818585134) {
  var result_2818585168 = null;

    result_2818585168 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2818585132_2818585139(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585134, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym320_2818585174 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2818585179 = [mnewString(0)];
    fmtRes_2818585179[0].push.apply(fmtRes_2818585179[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585179, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym320_2818585174 || [],fmtRes_2818585179[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585168;

}

function selectLineScript_2818585182_2818585190(self_2818585191, line_2818585192) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym324_2818585193 = getTextDocumentEditor_2818583231(self_2818585191);
      if (isNone_2818583592(rHEX60gensym324_2818585193)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585187(get_2818583612(rHEX60gensym324_2818585193), line_2818585192);
  };

  
}

function selectLineApi_2818585220(HEX3Atmp_2818585184) {
  var result_2818585221 = null;

    result_2818585221 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2818585182_2818585190(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585184, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818585184, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym329_2818585232 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2818585237 = [mnewString(0)];
    fmtRes_2818585237[0].push.apply(fmtRes_2818585237[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585237, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym329_2818585232 || [],fmtRes_2818585237[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585221;

}

function selectLineCurrentScript_2818585240_2818585247(self_2818585248) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym332_2818585249 = getTextDocumentEditor_2818583231(self_2818585248);
      if (isNone_2818583592(rHEX60gensym332_2818585249)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585245(get_2818583612(rHEX60gensym332_2818585249));
  };

  
}

function selectLineCurrentApi_2818585275(HEX3Atmp_2818585242) {
  var result_2818585276 = null;

    result_2818585276 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2818585240_2818585247(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585242, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym337_2818585282 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2818585287 = [mnewString(0)];
    fmtRes_2818585287[0].push.apply(fmtRes_2818585287[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585287, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym337_2818585282 || [],fmtRes_2818585287[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585276;

}

function selectParentTsScript_2818585290_2818585310(self_2818585311, selection_2818585312) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym341_2818585313 = getTextDocumentEditor_2818583231(self_2818585311);
      if (isNone_2818583592(rHEX60gensym341_2818585313)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818585295(get_2818583612(rHEX60gensym341_2818585313), selection_2818585312);
  };

  
}

function selectParentTsApi_2818585340(HEX3Atmp_2818585292) {
  var result_2818585341 = null;

    result_2818585341 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2818585290_2818585310(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585292, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585347(HEX5BHEX5D_1627393116(HEX3Atmp_2818585292, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym346_2818585358 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2818585363 = [mnewString(0)];
    fmtRes_2818585363[0].push.apply(fmtRes_2818585363[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585363, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym346_2818585358 || [],fmtRes_2818585363[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585341;

}

function selectParentCurrentTsScript_2818585373_2818585380(self_2818585381) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym350_2818585382 = getTextDocumentEditor_2818583231(self_2818585381);
      if (isNone_2818583592(rHEX60gensym350_2818585382)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818585378(get_2818583612(rHEX60gensym350_2818585382));
  };

  
}

function selectParentCurrentTsApi_2818585408(HEX3Atmp_2818585375) {
  var result_2818585409 = null;

    result_2818585409 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2818585373_2818585380(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585375, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym355_2818585415 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2818585420 = [mnewString(0)];
    fmtRes_2818585420[0].push.apply(fmtRes_2818585420[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585420, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym355_2818585415 || [],fmtRes_2818585420[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585409;

}

function insertTextScript_2818585426_2818585435(self_2818585436, text_2818585437) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym360_2818585438 = getTextDocumentEditor_2818583231(self_2818585436);
      if (isNone_2818583592(rHEX60gensym360_2818585438)) {
      break BeforeRet;
      }
      
    };
    insertText_2818585431(get_2818583612(rHEX60gensym360_2818585438), text_2818585437);
  };

  
}

function insertTextApi_2818585465(HEX3Atmp_2818585428) {
  var result_2818585466 = null;

    result_2818585466 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2818585426_2818585435(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585428, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818585428, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym365_2818585477 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2818585482 = [mnewString(0)];
    fmtRes_2818585482[0].push.apply(fmtRes_2818585482[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585482, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym365_2818585477 || [],fmtRes_2818585482[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585466;

}

function undoScript_2818585498_2818585553(self_2818585554) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym370_2818585555 = getTextDocumentEditor_2818583231(self_2818585554);
      if (isNone_2818583592(rHEX60gensym370_2818585555)) {
      break BeforeRet;
      }
      
    };
    undo_2818585503(get_2818583612(rHEX60gensym370_2818585555));
  };

  
}

function undoApi_2818585581(HEX3Atmp_2818585500) {
  var result_2818585582 = null;

    result_2818585582 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2818585498_2818585553(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585500, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym375_2818585588 = [117,110,100,111];
    var fmtRes_2818585593 = [mnewString(0)];
    fmtRes_2818585593[0].push.apply(fmtRes_2818585593[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585593, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym375_2818585588 || [],fmtRes_2818585593[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585582;

}

function redoScript_2818585600_2818585633(self_2818585634) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym380_2818585635 = getTextDocumentEditor_2818583231(self_2818585634);
      if (isNone_2818583592(rHEX60gensym380_2818585635)) {
      break BeforeRet;
      }
      
    };
    redo_2818585605(get_2818583612(rHEX60gensym380_2818585635));
  };

  
}

function redoApi_2818585661(HEX3Atmp_2818585602) {
  var result_2818585662 = null;

    result_2818585662 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2818585600_2818585633(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585602, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym385_2818585668 = [114,101,100,111];
    var fmtRes_2818585673 = [mnewString(0)];
    fmtRes_2818585673[0].push.apply(fmtRes_2818585673[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585673, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym385_2818585668 || [],fmtRes_2818585673[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585662;

}

function scrollTextScript_2818585680_2818585692(self_2818585693, amount_2818585694) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym390_2818585695 = getTextDocumentEditor_2818583231(self_2818585693);
      if (isNone_2818583592(rHEX60gensym390_2818585695)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818585685(get_2818583612(rHEX60gensym390_2818585695), amount_2818585694);
  };

  
}

function scrollTextApi_2818585722(HEX3Atmp_2818585682) {
  var result_2818585723 = null;

    result_2818585723 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2818585680_2818585692(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585682, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585729(HEX5BHEX5D_1627393116(HEX3Atmp_2818585682, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym395_2818585792 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2818585797 = [mnewString(0)];
    fmtRes_2818585797[0].push.apply(fmtRes_2818585797[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585797, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym395_2818585792 || [],fmtRes_2818585797[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585723;

}

function duplicateLastSelectionScript_2818585800_2818585849(self_2818585850) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym404_2818585851 = getTextDocumentEditor_2818583231(self_2818585850);
      if (isNone_2818583592(rHEX60gensym404_2818585851)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818585805(get_2818583612(rHEX60gensym404_2818585851));
  };

  
}

function duplicateLastSelectionApi_2818585877(HEX3Atmp_2818585802) {
  var result_2818585878 = null;

    result_2818585878 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2818585800_2818585849(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585802, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym409_2818585884 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818585889 = [mnewString(0)];
    fmtRes_2818585889[0].push.apply(fmtRes_2818585889[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585889, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym409_2818585884 || [],fmtRes_2818585889[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585878;

}

function addCursorBelowScript_2818585900_2818585919(self_2818585920) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym412_2818585921 = getTextDocumentEditor_2818583231(self_2818585920);
      if (isNone_2818583592(rHEX60gensym412_2818585921)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818585905(get_2818583612(rHEX60gensym412_2818585921));
  };

  
}

function addCursorBelowApi_2818585947(HEX3Atmp_2818585902) {
  var result_2818585948 = null;

    result_2818585948 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2818585900_2818585919(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585902, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym417_2818585954 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2818585959 = [mnewString(0)];
    fmtRes_2818585959[0].push.apply(fmtRes_2818585959[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585959, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym417_2818585954 || [],fmtRes_2818585959[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585948;

}

function addCursorAboveScript_2818585966_2818585985(self_2818585986) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym420_2818585987 = getTextDocumentEditor_2818583231(self_2818585986);
      if (isNone_2818583592(rHEX60gensym420_2818585987)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818585971(get_2818583612(rHEX60gensym420_2818585987));
  };

  
}

function addCursorAboveApi_2818586013(HEX3Atmp_2818585968) {
  var result_2818586014 = null;

    result_2818586014 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2818585966_2818585985(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818585968, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym425_2818586020 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2818586025 = [mnewString(0)];
    fmtRes_2818586025[0].push.apply(fmtRes_2818586025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym425_2818586020 || [],fmtRes_2818586025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586014;

}

function getPrevFindResultScript_2818586028_2818586289(self_2818586290, cursor_2818586291, offset_2818586292) {
  var result_2818586293 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym430_2818586294 = getTextDocumentEditor_2818583231(self_2818586290);
      if (isNone_2818583592(rHEX60gensym430_2818586294)) {
      break BeforeRet;
      }
      
    };
    result_2818586293 = nimCopy(result_2818586293, getPrevFindResult_2818582885(get_2818583612(rHEX60gensym430_2818586294), cursor_2818586291, offset_2818586292), NTI2415919115);
  };

  return result_2818586293;

}

function getPrevFindResultApi_2818586323(HEX3Atmp_2818586030) {
      var Temporary5;

  var result_2818586324 = null;

  BeforeRet: {
    result_2818586324 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586030))) {
      Temporary5 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818586030, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818586324 = toJson_2818584434(getPrevFindResultScript_2818586028_2818586289(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818586030, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585111(HEX5BHEX5D_1627393116(HEX3Atmp_2818586030, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym436_2818586344 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818586349 = [mnewString(0)];
    fmtRes_2818586349[0].push.apply(fmtRes_2818586349[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586349, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym436_2818586344 || [],fmtRes_2818586349[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818586324;

}

function getNextFindResultScript_2818586360_2818586518(self_2818586519, cursor_2818586520, offset_2818586521) {
  var result_2818586522 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym442_2818586523 = getTextDocumentEditor_2818583231(self_2818586519);
      if (isNone_2818583592(rHEX60gensym442_2818586523)) {
      break BeforeRet;
      }
      
    };
    result_2818586522 = nimCopy(result_2818586522, getNextFindResult_2818582889(get_2818583612(rHEX60gensym442_2818586523), cursor_2818586520, offset_2818586521), NTI2415919115);
  };

  return result_2818586522;

}

function getNextFindResultApi_2818586552(HEX3Atmp_2818586362) {
      var Temporary5;

  var result_2818586553 = null;

  BeforeRet: {
    result_2818586553 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586362))) {
      Temporary5 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818586362, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818586553 = toJson_2818584434(getNextFindResultScript_2818586360_2818586518(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818586362, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585111(HEX5BHEX5D_1627393116(HEX3Atmp_2818586362, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym448_2818586573 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818586578 = [mnewString(0)];
    fmtRes_2818586578[0].push.apply(fmtRes_2818586578[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586578, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym448_2818586573 || [],fmtRes_2818586578[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818586553;

}

function addNextFindResultToSelectionScript_2818586591_2818586606(self_2818586607) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_2818586608 = getTextDocumentEditor_2818583231(self_2818586607);
      if (isNone_2818583592(rHEX60gensym452_2818586608)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818586596(get_2818583612(rHEX60gensym452_2818586608));
  };

  
}

function addNextFindResultToSelectionApi_2818586634(HEX3Atmp_2818586593) {
  var result_2818586635 = null;

    result_2818586635 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2818586591_2818586606(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818586593, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_2818586641 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586646 = [mnewString(0)];
    fmtRes_2818586646[0].push.apply(fmtRes_2818586646[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586646, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_2818586641 || [],fmtRes_2818586646[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586635;

}

function addPrevFindResultToSelectionScript_2818586649_2818586664(self_2818586665) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym460_2818586666 = getTextDocumentEditor_2818583231(self_2818586665);
      if (isNone_2818583592(rHEX60gensym460_2818586666)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818586654(get_2818583612(rHEX60gensym460_2818586666));
  };

  
}

function addPrevFindResultToSelectionApi_2818586692(HEX3Atmp_2818586651) {
  var result_2818586693 = null;

    result_2818586693 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2818586649_2818586664(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818586651, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym465_2818586699 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586704 = [mnewString(0)];
    fmtRes_2818586704[0].push.apply(fmtRes_2818586704[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586704, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym465_2818586699 || [],fmtRes_2818586704[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586693;

}

function setAllFindResultToSelectionScript_2818586707_2818587008(self_2818587009) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym468_2818587010 = getTextDocumentEditor_2818583231(self_2818587009);
      if (isNone_2818583592(rHEX60gensym468_2818587010)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818586712(get_2818583612(rHEX60gensym468_2818587010));
  };

  
}

function setAllFindResultToSelectionApi_2818587036(HEX3Atmp_2818586709) {
  var result_2818587037 = null;

    result_2818587037 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2818586707_2818587008(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818586709, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym473_2818587043 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587048 = [mnewString(0)];
    fmtRes_2818587048[0].push.apply(fmtRes_2818587048[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587048, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym473_2818587043 || [],fmtRes_2818587048[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587037;

}

function clearSelectionsScript_2818587066_2818587079(self_2818587080) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym478_2818587081 = getTextDocumentEditor_2818583231(self_2818587080);
      if (isNone_2818583592(rHEX60gensym478_2818587081)) {
      break BeforeRet;
      }
      
    };
    clearSelections_2818587071(get_2818583612(rHEX60gensym478_2818587081));
  };

  
}

function clearSelectionsApi_2818587107(HEX3Atmp_2818587068) {
  var result_2818587108 = null;

    result_2818587108 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearSelectionsScript_2818587066_2818587079(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587068, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym483_2818587114 = [99,108,101,97,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_2818587119 = [mnewString(0)];
    fmtRes_2818587119[0].push.apply(fmtRes_2818587119[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587119, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym483_2818587114 || [],fmtRes_2818587119[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587108;

}

function moveCursorColumnScript_2818587122_2818587150(self_2818587151, distance_2818587152, cursor_2818587153, all_2818587154) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym490_2818587155 = getTextDocumentEditor_2818583231(self_2818587151);
      if (isNone_2818583592(rHEX60gensym490_2818587155)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818587127(get_2818583612(rHEX60gensym490_2818587155), distance_2818587152, cursor_2818587153, all_2818587154);
  };

  
}

function moveCursorColumnApi_2818587184(HEX3Atmp_2818587124) {
      var Temporary5;
      var Temporary7;

  var result_2818587185 = null;

    result_2818587185 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587124))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587124, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587124))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587124, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2818587122_2818587150(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587124, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818587124, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym495_2818587206 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2818587211 = [mnewString(0)];
    fmtRes_2818587211[0].push.apply(fmtRes_2818587211[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587211, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym495_2818587206 || [],fmtRes_2818587211[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587185;

}

function moveCursorLineScript_2818587230_2818587240(self_2818587241, distance_2818587242, cursor_2818587243, all_2818587244) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym503_2818587245 = getTextDocumentEditor_2818583231(self_2818587241);
      if (isNone_2818583592(rHEX60gensym503_2818587245)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818587235(get_2818583612(rHEX60gensym503_2818587245), distance_2818587242, cursor_2818587243, all_2818587244);
  };

  
}

function moveCursorLineApi_2818587274(HEX3Atmp_2818587232) {
      var Temporary5;
      var Temporary7;

  var result_2818587275 = null;

    result_2818587275 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587232))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587232, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587232))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587232, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2818587230_2818587240(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587232, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818587232, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym508_2818587296 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2818587301 = [mnewString(0)];
    fmtRes_2818587301[0].push.apply(fmtRes_2818587301[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587301, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym508_2818587296 || [],fmtRes_2818587301[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587275;

}

function moveCursorHomeScript_2818587304_2818587313(self_2818587314, cursor_2818587315, all_2818587316) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym515_2818587317 = getTextDocumentEditor_2818583231(self_2818587314);
      if (isNone_2818583592(rHEX60gensym515_2818587317)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818587309(get_2818583612(rHEX60gensym515_2818587317), cursor_2818587315, all_2818587316);
  };

  
}

function moveCursorHomeApi_2818587345(HEX3Atmp_2818587306) {
      var Temporary4;
      var Temporary6;

  var result_2818587346 = null;

    result_2818587346 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587306))) {
      Temporary4 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587306, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587306))) {
      Temporary6 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587306, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2818587304_2818587313(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587306, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym520_2818587362 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2818587367 = [mnewString(0)];
    fmtRes_2818587367[0].push.apply(fmtRes_2818587367[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587367, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym520_2818587362 || [],fmtRes_2818587367[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587346;

}

function moveCursorEndScript_2818587372_2818587381(self_2818587382, cursor_2818587383, all_2818587384) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym527_2818587385 = getTextDocumentEditor_2818583231(self_2818587382);
      if (isNone_2818583592(rHEX60gensym527_2818587385)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818587377(get_2818583612(rHEX60gensym527_2818587385), cursor_2818587383, all_2818587384);
  };

  
}

function moveCursorEndApi_2818587413(HEX3Atmp_2818587374) {
      var Temporary4;
      var Temporary6;

  var result_2818587414 = null;

    result_2818587414 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587374))) {
      Temporary4 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587374, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587374))) {
      Temporary6 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587374, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2818587372_2818587381(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587374, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym532_2818587430 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2818587435 = [mnewString(0)];
    fmtRes_2818587435[0].push.apply(fmtRes_2818587435[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587435, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym532_2818587430 || [],fmtRes_2818587435[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587414;

}

function moveCursorToScript_2818587440_2818587457(self_2818587458, str_2818587459, cursor_2818587460, all_2818587461) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym540_2818587462 = getTextDocumentEditor_2818583231(self_2818587458);
      if (isNone_2818583592(rHEX60gensym540_2818587462)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818587445(get_2818583612(rHEX60gensym540_2818587462), str_2818587459, cursor_2818587460, all_2818587461);
  };

  
}

function moveCursorToApi_2818587491(HEX3Atmp_2818587442) {
      var Temporary5;
      var Temporary7;

  var result_2818587492 = null;

    result_2818587492 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587442))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587442, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587442))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587442, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2818587440_2818587457(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587442, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587442, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym545_2818587513 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2818587518 = [mnewString(0)];
    fmtRes_2818587518[0].push.apply(fmtRes_2818587518[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587518, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym545_2818587513 || [],fmtRes_2818587518[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587492;

}

function moveCursorBeforeScript_2818587523_2818587540(self_2818587541, str_2818587542, cursor_2818587543, all_2818587544) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym554_2818587545 = getTextDocumentEditor_2818583231(self_2818587541);
      if (isNone_2818583592(rHEX60gensym554_2818587545)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818587528(get_2818583612(rHEX60gensym554_2818587545), str_2818587542, cursor_2818587543, all_2818587544);
  };

  
}

function moveCursorBeforeApi_2818587574(HEX3Atmp_2818587525) {
      var Temporary5;
      var Temporary7;

  var result_2818587575 = null;

    result_2818587575 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587525))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587525, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587525))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587525, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2818587523_2818587540(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587525, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587525, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym559_2818587596 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2818587601 = [mnewString(0)];
    fmtRes_2818587601[0].push.apply(fmtRes_2818587601[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587601, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym559_2818587596 || [],fmtRes_2818587601[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587575;

}

function moveCursorNextFindResultScript_2818587606_2818587615(self_2818587616, cursor_2818587617, all_2818587618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym567_2818587619 = getTextDocumentEditor_2818583231(self_2818587616);
      if (isNone_2818583592(rHEX60gensym567_2818587619)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818587611(get_2818583612(rHEX60gensym567_2818587619), cursor_2818587617, all_2818587618);
  };

  
}

function moveCursorNextFindResultApi_2818587647(HEX3Atmp_2818587608) {
      var Temporary4;
      var Temporary6;

  var result_2818587648 = null;

    result_2818587648 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587608))) {
      Temporary4 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587608, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587608))) {
      Temporary6 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587608, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818587606_2818587615(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587608, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_2818587664 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587669 = [mnewString(0)];
    fmtRes_2818587669[0].push.apply(fmtRes_2818587669[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587669, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_2818587664 || [],fmtRes_2818587669[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587648;

}

function moveCursorPrevFindResultScript_2818587672_2818587681(self_2818587682, cursor_2818587683, all_2818587684) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym579_2818587685 = getTextDocumentEditor_2818583231(self_2818587682);
      if (isNone_2818583592(rHEX60gensym579_2818587685)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818587677(get_2818583612(rHEX60gensym579_2818587685), cursor_2818587683, all_2818587684);
  };

  
}

function moveCursorPrevFindResultApi_2818587713(HEX3Atmp_2818587674) {
      var Temporary4;
      var Temporary6;

  var result_2818587714 = null;

    result_2818587714 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587674))) {
      Temporary4 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587674, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587674))) {
      Temporary6 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818587674, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818587672_2818587681(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587674, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym584_2818587730 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587735 = [mnewString(0)];
    fmtRes_2818587735[0].push.apply(fmtRes_2818587735[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587735, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym584_2818587730 || [],fmtRes_2818587735[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587714;

}

function scrollToCursorScript_2818587738_2818587746(self_2818587747, cursor_2818587748) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym590_2818587749 = getTextDocumentEditor_2818583231(self_2818587747);
      if (isNone_2818583592(rHEX60gensym590_2818587749)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818583332(get_2818583612(rHEX60gensym590_2818587749), cursor_2818587748);
  };

  
}

function scrollToCursorApi_2818587776(HEX3Atmp_2818587740) {
      var Temporary4;

  var result_2818587777 = null;

    result_2818587777 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587740))) {
      Temporary4 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818587740, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2818587738_2818587746(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587740, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym595_2818587788 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2818587793 = [mnewString(0)];
    fmtRes_2818587793[0].push.apply(fmtRes_2818587793[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587793, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym595_2818587788 || [],fmtRes_2818587793[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587777;

}

function reloadTreesitterScript_2818587796_2818587803(self_2818587804) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym599_2818587805 = getTextDocumentEditor_2818583231(self_2818587804);
      if (isNone_2818583592(rHEX60gensym599_2818587805)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818587801(get_2818583612(rHEX60gensym599_2818587805));
  };

  
}

function reloadTreesitterApi_2818587831(HEX3Atmp_2818587798) {
  var result_2818587832 = null;

    result_2818587832 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2818587796_2818587803(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587798, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym604_2818587838 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2818587843 = [mnewString(0)];
    fmtRes_2818587843[0].push.apply(fmtRes_2818587843[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587843, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym604_2818587838 || [],fmtRes_2818587843[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587832;

}

function deleteLeftScript_2818587852_2818587867(self_2818587868) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym608_2818587869 = getTextDocumentEditor_2818583231(self_2818587868);
      if (isNone_2818583592(rHEX60gensym608_2818587869)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818587857(get_2818583612(rHEX60gensym608_2818587869));
  };

  
}

function deleteLeftApi_2818587895(HEX3Atmp_2818587854) {
  var result_2818587896 = null;

    result_2818587896 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2818587852_2818587867(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587854, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym613_2818587902 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2818587907 = [mnewString(0)];
    fmtRes_2818587907[0].push.apply(fmtRes_2818587907[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587907, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym613_2818587902 || [],fmtRes_2818587907[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587896;

}

function deleteRightScript_2818587916_2818587931(self_2818587932) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym616_2818587933 = getTextDocumentEditor_2818583231(self_2818587932);
      if (isNone_2818583592(rHEX60gensym616_2818587933)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818587921(get_2818583612(rHEX60gensym616_2818587933));
  };

  
}

function deleteRightApi_2818587959(HEX3Atmp_2818587918) {
  var result_2818587960 = null;

    result_2818587960 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2818587916_2818587931(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587918, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2818587966 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2818587971 = [mnewString(0)];
    fmtRes_2818587971[0].push.apply(fmtRes_2818587971[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587971, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2818587966 || [],fmtRes_2818587971[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587960;

}

function getCommandCountScript_2818587980_2818587988(self_2818587989) {
  var result_2818587990 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym624_2818587991 = getTextDocumentEditor_2818583231(self_2818587989);
      if (isNone_2818583592(rHEX60gensym624_2818587991)) {
      break BeforeRet;
      }
      
    };
    result_2818587990 = getCommandCount_2818587985(get_2818583612(rHEX60gensym624_2818587991));
  };

  return result_2818587990;

}

function getCommandCountApi_2818588018(HEX3Atmp_2818587982) {
  var result_2818588019 = null;

  BeforeRet: {
    result_2818588019 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818588019 = toJson_2818584460(getCommandCountScript_2818587980_2818587988(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818587982, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym630_2818588029 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588034 = [mnewString(0)];
    fmtRes_2818588034[0].push.apply(fmtRes_2818588034[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588034, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym630_2818588029 || [],fmtRes_2818588034[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588019;

}

function setCommandCountScript_2818588037_2818588045(self_2818588046, count_2818588047) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym634_2818588048 = getTextDocumentEditor_2818583231(self_2818588046);
      if (isNone_2818583592(rHEX60gensym634_2818588048)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818588042(get_2818583612(rHEX60gensym634_2818588048), count_2818588047);
  };

  
}

function setCommandCountApi_2818588075(HEX3Atmp_2818588039) {
  var result_2818588076 = null;

    result_2818588076 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2818588037_2818588045(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588039, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818588039, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym639_2818588087 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588092 = [mnewString(0)];
    fmtRes_2818588092[0].push.apply(fmtRes_2818588092[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588092, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym639_2818588087 || [],fmtRes_2818588092[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588076;

}

function setCommandCountRestoreScript_2818588095_2818588103(self_2818588104, count_2818588105) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym643_2818588106 = getTextDocumentEditor_2818583231(self_2818588104);
      if (isNone_2818583592(rHEX60gensym643_2818588106)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818588100(get_2818583612(rHEX60gensym643_2818588106), count_2818588105);
  };

  
}

function setCommandCountRestoreApi_2818588133(HEX3Atmp_2818588097) {
  var result_2818588134 = null;

    result_2818588134 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2818588095_2818588103(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588097, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818588097, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym648_2818588145 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2818588150 = [mnewString(0)];
    fmtRes_2818588150[0].push.apply(fmtRes_2818588150[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588150, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym648_2818588145 || [],fmtRes_2818588150[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588134;

}

function updateCommandCountScript_2818588153_2818588161(self_2818588162, digit_2818588163) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym652_2818588164 = getTextDocumentEditor_2818583231(self_2818588162);
      if (isNone_2818583592(rHEX60gensym652_2818588164)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818588158(get_2818583612(rHEX60gensym652_2818588164), digit_2818588163);
  };

  
}

function updateCommandCountApi_2818588191(HEX3Atmp_2818588155) {
  var result_2818588192 = null;

    result_2818588192 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2818588153_2818588161(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588155, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818588155, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym657_2818588203 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588208 = [mnewString(0)];
    fmtRes_2818588208[0].push.apply(fmtRes_2818588208[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588208, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym657_2818588203 || [],fmtRes_2818588208[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588192;

}

function setFlagScript_2818588211_2818588220(self_2818588221, name_2818588222, value_2818588223) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym662_2818588224 = getTextDocumentEditor_2818583231(self_2818588221);
      if (isNone_2818583592(rHEX60gensym662_2818588224)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818588216(get_2818583612(rHEX60gensym662_2818588224), name_2818588222, value_2818588223);
  };

  
}

function setFlagApi_2818588252(HEX3Atmp_2818588213) {
  var result_2818588253 = null;

    result_2818588253 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2818588211_2818588220(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588213, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588213, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818588213, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym667_2818588269 = [115,101,116,70,108,97,103];
    var fmtRes_2818588274 = [mnewString(0)];
    fmtRes_2818588274[0].push.apply(fmtRes_2818588274[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588274, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym667_2818588269 || [],fmtRes_2818588274[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588253;

}

function getFlagScript_2818588277_2818588286(self_2818588287, name_2818588288) {
  var result_2818588289 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym671_2818588290 = getTextDocumentEditor_2818583231(self_2818588287);
      if (isNone_2818583592(rHEX60gensym671_2818588290)) {
      break BeforeRet;
      }
      
    };
    result_2818588289 = getFlag_2818588282(get_2818583612(rHEX60gensym671_2818588290), name_2818588288);
  };

  return result_2818588289;

}

function getFlagApi_2818588318(HEX3Atmp_2818588279) {
  var result_2818588319 = null;

  BeforeRet: {
    result_2818588319 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818588319 = toJson_2818588330(getFlagScript_2818588277_2818588286(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588279, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588279, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym677_2818588339 = [103,101,116,70,108,97,103];
    var fmtRes_2818588344 = [mnewString(0)];
    fmtRes_2818588344[0].push.apply(fmtRes_2818588344[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588344, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym677_2818588339 || [],fmtRes_2818588344[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588319;

}

function runActionScript_2818588347_2818588361(self_2818588362, action_2818588363, args_2818588364) {
  var result_2818588365 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym682_2818588366 = getTextDocumentEditor_2818583231(self_2818588362);
      if (isNone_2818583592(rHEX60gensym682_2818588366)) {
      break BeforeRet;
      }
      
    };
    result_2818588365 = runAction_2818588352(get_2818583612(rHEX60gensym682_2818588366), action_2818588363, args_2818588364);
  };

  return result_2818588365;

}

function runActionApi_2818588395(HEX3Atmp_2818588349) {
  var result_2818588396 = null;

  BeforeRet: {
    result_2818588396 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2818588396 = toJson_2818588330(runActionScript_2818588347_2818588361(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588349, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588349, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818588349, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym688_2818588411 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2818588416 = [mnewString(0)];
    fmtRes_2818588416[0].push.apply(fmtRes_2818588416[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588416, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym688_2818588411 || [],fmtRes_2818588416[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588396;

}

function findWordBoundaryScript_2818588422_2818588458(self_2818588459, cursor_2818588460) {
  var result_2818588461 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym692_2818588462 = getTextDocumentEditor_2818583231(self_2818588459);
      if (isNone_2818583592(rHEX60gensym692_2818588462)) {
      break BeforeRet;
      }
      
    };
    result_2818588461 = nimCopy(result_2818588461, findWordBoundary_2818588427(get_2818583612(rHEX60gensym692_2818588462), cursor_2818588460), NTI2415919115);
  };

  return result_2818588461;

}

function findWordBoundaryApi_2818588490(HEX3Atmp_2818588424) {
  var result_2818588491 = null;

  BeforeRet: {
    result_2818588491 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818588491 = toJson_2818584434(findWordBoundaryScript_2818588422_2818588458(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588424, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585111(HEX5BHEX5D_1627393116(HEX3Atmp_2818588424, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym698_2818588506 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2818588511 = [mnewString(0)];
    fmtRes_2818588511[0].push.apply(fmtRes_2818588511[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588511, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym698_2818588506 || [],fmtRes_2818588511[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588491;

}

function getSelectionForMoveScript_2818588516_2818588619(self_2818588620, cursor_2818588621, move_2818588622, count_2818588623) {
  var result_2818588624 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym708_2818588625 = getTextDocumentEditor_2818583231(self_2818588620);
      if (isNone_2818583592(rHEX60gensym708_2818588625)) {
      break BeforeRet;
      }
      
    };
    result_2818588624 = nimCopy(result_2818588624, getSelectionForMove_2818588521(get_2818583612(rHEX60gensym708_2818588625), cursor_2818588621, move_2818588622, count_2818588623), NTI2415919115);
  };

  return result_2818588624;

}

function getSelectionForMoveApi_2818588655(HEX3Atmp_2818588518) {
      var Temporary6;

  var result_2818588656 = null;

  BeforeRet: {
    result_2818588656 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818588518))) {
      Temporary6 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818588518, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2818588656 = toJson_2818584434(getSelectionForMoveScript_2818588516_2818588619(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588518, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585111(HEX5BHEX5D_1627393116(HEX3Atmp_2818588518, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588518, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym714_2818588681 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2818588686 = [mnewString(0)];
    fmtRes_2818588686[0].push.apply(fmtRes_2818588686[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588686, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym714_2818588681 || [],fmtRes_2818588686[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588656;

}

function setMoveScript_2818588761_2818588957(self_2818588958, args_2818588959) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym730_2818588960 = getTextDocumentEditor_2818583231(self_2818588958);
      if (isNone_2818583592(rHEX60gensym730_2818588960)) {
      break BeforeRet;
      }
      
    };
    setMove_2818588766(get_2818583612(rHEX60gensym730_2818588960), args_2818588959);
  };

  
}

function HEX5BHEX5D_2818589001(a_2818589004, x_2818589005) {
  var result_2818589006 = null;

    if (!((a_2818589004.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818589006 = newJArray_1627390082();
    var xa_2818589017 = x_2818589005.a;
    var L_2818589019 = addInt(subInt(subInt(len_1627392983(a_2818589004), x_2818589005.b), xa_2818589017), 1);
    Label1: {
      var i_2818589024 = 0;
      var i_536872106 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872106 < L_2818589019)) break Label3;
            i_2818589024 = i_536872106;
            add_1627390190(result_2818589006, HEX5BHEX5D_1627393116(a_2818589004, addInt(i_2818589024, xa_2818589017)));
            i_536872106 = addInt(i_536872106, 1);
          }
      };
    };

  return result_2818589006;

}

function setMoveApi_2818588987(HEX3Atmp_2818588763) {
  var result_2818588988 = null;

    result_2818588988 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2818588761_2818588957(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818588763, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818589001(HEX3Atmp_2818588763, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym735_2818589025 = [115,101,116,77,111,118,101];
    var fmtRes_2818589030 = [mnewString(0)];
    fmtRes_2818589030[0].push.apply(fmtRes_2818589030[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589030, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym735_2818589025 || [],fmtRes_2818589030[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588988;

}

function deleteMoveScript_2818589053_2818589093(self_2818589094, move_2818589095, which_2818589096, all_2818589097) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym757_2818589098 = getTextDocumentEditor_2818583231(self_2818589094);
      if (isNone_2818583592(rHEX60gensym757_2818589098)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818589058(get_2818583612(rHEX60gensym757_2818589098), move_2818589095, which_2818589096, all_2818589097);
  };

  
}

function deleteMoveApi_2818589127(HEX3Atmp_2818589055) {
      var Temporary5;
      var Temporary7;

  var result_2818589128 = null;

    result_2818589128 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589055))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818589055, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589055))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818589055, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2818589053_2818589093(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589055, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589055, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym762_2818589149 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2818589154 = [mnewString(0)];
    fmtRes_2818589154[0].push.apply(fmtRes_2818589154[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589154, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym762_2818589149 || [],fmtRes_2818589154[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589128;

}

function selectMoveScript_2818589157_2818589222(self_2818589223, move_2818589224, which_2818589225, all_2818589226) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym770_2818589227 = getTextDocumentEditor_2818583231(self_2818589223);
      if (isNone_2818583592(rHEX60gensym770_2818589227)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818589162(get_2818583612(rHEX60gensym770_2818589227), move_2818589224, which_2818589225, all_2818589226);
  };

  
}

function selectMoveApi_2818589256(HEX3Atmp_2818589159) {
      var Temporary5;
      var Temporary7;

  var result_2818589257 = null;

    result_2818589257 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589159))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818589159, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589159))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818589159, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2818589157_2818589222(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589159, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589159, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_2818589278 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2818589283 = [mnewString(0)];
    fmtRes_2818589283[0].push.apply(fmtRes_2818589283[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589283, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_2818589278 || [],fmtRes_2818589283[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589257;

}

function changeMoveScript_2818589286_2818589326(self_2818589327, move_2818589328, which_2818589329, all_2818589330) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym784_2818589331 = getTextDocumentEditor_2818583231(self_2818589327);
      if (isNone_2818583592(rHEX60gensym784_2818589331)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818589291(get_2818583612(rHEX60gensym784_2818589331), move_2818589328, which_2818589329, all_2818589330);
  };

  
}

function changeMoveApi_2818589360(HEX3Atmp_2818589288) {
      var Temporary5;
      var Temporary7;

  var result_2818589361 = null;

    result_2818589361 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589288))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818589288, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589288))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818589288, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2818589286_2818589326(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589288, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589288, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym789_2818589382 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2818589387 = [mnewString(0)];
    fmtRes_2818589387[0].push.apply(fmtRes_2818589387[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589387, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym789_2818589382 || [],fmtRes_2818589387[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589361;

}

function moveLastScript_2818589390_2818589438(self_2818589439, move_2818589440, which_2818589441, all_2818589442, count_2818589443) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym798_2818589444 = getTextDocumentEditor_2818583231(self_2818589439);
      if (isNone_2818583592(rHEX60gensym798_2818589444)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818589395(get_2818583612(rHEX60gensym798_2818589444), move_2818589440, which_2818589441, all_2818589442, count_2818589443);
  };

  
}

function moveLastApi_2818589474(HEX3Atmp_2818589392) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818589475 = null;

    result_2818589475 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589392))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818589392, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589392))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818589392, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818589392))) {
      Temporary9 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818589392, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2818589390_2818589438(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589392, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589392, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym803_2818589501 = [109,111,118,101,76,97,115,116];
    var fmtRes_2818589506 = [mnewString(0)];
    fmtRes_2818589506[0].push.apply(fmtRes_2818589506[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589506, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym803_2818589501 || [],fmtRes_2818589506[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589475;

}

function moveFirstScript_2818589517_2818589565(self_2818589566, move_2818589567, which_2818589568, all_2818589569, count_2818589570) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym813_2818589571 = getTextDocumentEditor_2818583231(self_2818589566);
      if (isNone_2818583592(rHEX60gensym813_2818589571)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818589522(get_2818583612(rHEX60gensym813_2818589571), move_2818589567, which_2818589568, all_2818589569, count_2818589570);
  };

  
}

function moveFirstApi_2818589601(HEX3Atmp_2818589519) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818589602 = null;

    result_2818589602 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589519))) {
      Temporary5 = jsonTo_2818583935(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589519))) {
      Temporary7 = jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818589519))) {
      Temporary9 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2818589517_2818589565(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589519, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym818_2818589628 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2818589633 = [mnewString(0)];
    fmtRes_2818589633[0].push.apply(fmtRes_2818589633[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589633, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym818_2818589628 || [],fmtRes_2818589633[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589602;

}

function setSearchQueryScript_2818589636_2818589658(self_2818589659, query_2818589660) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym825_2818589661 = getTextDocumentEditor_2818583231(self_2818589659);
      if (isNone_2818583592(rHEX60gensym825_2818589661)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818589641(get_2818583612(rHEX60gensym825_2818589661), query_2818589660);
  };

  
}

function setSearchQueryApi_2818589688(HEX3Atmp_2818589638) {
  var result_2818589689 = null;

    result_2818589689 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2818589636_2818589658(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589638, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589638, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym830_2818589700 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2818589705 = [mnewString(0)];
    fmtRes_2818589705[0].push.apply(fmtRes_2818589705[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589705, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym830_2818589700 || [],fmtRes_2818589705[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589689;

}

function setSearchQueryFromMoveScript_2818589728_2818589738(self_2818589739, move_2818589740, count_2818589741) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym835_2818589742 = getTextDocumentEditor_2818583231(self_2818589739);
      if (isNone_2818583592(rHEX60gensym835_2818589742)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818589733(get_2818583612(rHEX60gensym835_2818589742), move_2818589740, count_2818589741);
  };

  
}

function setSearchQueryFromMoveApi_2818589770(HEX3Atmp_2818589730) {
      var Temporary5;

  var result_2818589771 = null;

    result_2818589771 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589730))) {
      Temporary5 = jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2818589730, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818589728_2818589738(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818589730, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589730, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym840_2818589787 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2818589792 = [mnewString(0)];
    fmtRes_2818589792[0].push.apply(fmtRes_2818589792[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589792, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym840_2818589787 || [],fmtRes_2818589792[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589771;

}

function gotoDefinitionScript_2818590123_2818590130(self_2818590131) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym862_2818590132 = getTextDocumentEditor_2818583231(self_2818590131);
      if (isNone_2818583592(rHEX60gensym862_2818590132)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818590128(get_2818583612(rHEX60gensym862_2818590132));
  };

  
}

function gotoDefinitionApi_2818590158(HEX3Atmp_2818590125) {
  var result_2818590159 = null;

    result_2818590159 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2818590123_2818590130(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590125, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym867_2818590165 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2818590170 = [mnewString(0)];
    fmtRes_2818590170[0].push.apply(fmtRes_2818590170[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590170, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym867_2818590165 || [],fmtRes_2818590170[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590159;

}

function getCompletionsScript_2818590187_2818590194(self_2818590195) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym871_2818590196 = getTextDocumentEditor_2818583231(self_2818590195);
      if (isNone_2818583592(rHEX60gensym871_2818590196)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818590192(get_2818583612(rHEX60gensym871_2818590196));
  };

  
}

function getCompletionsApi_2818590222(HEX3Atmp_2818590189) {
  var result_2818590223 = null;

    result_2818590223 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2818590187_2818590194(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590189, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym876_2818590229 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818590234 = [mnewString(0)];
    fmtRes_2818590234[0].push.apply(fmtRes_2818590234[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590234, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym876_2818590229 || [],fmtRes_2818590234[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590223;

}

function hideCompletionsScript_2818590237_2818590244(self_2818590245) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym880_2818590246 = getTextDocumentEditor_2818583231(self_2818590245);
      if (isNone_2818583592(rHEX60gensym880_2818590246)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818590242(get_2818583612(rHEX60gensym880_2818590246));
  };

  
}

function hideCompletionsApi_2818590272(HEX3Atmp_2818590239) {
  var result_2818590273 = null;

    result_2818590273 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2818590237_2818590244(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590239, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym885_2818590279 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818590284 = [mnewString(0)];
    fmtRes_2818590284[0].push.apply(fmtRes_2818590284[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590284, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym885_2818590279 || [],fmtRes_2818590284[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590273;

}

function selectPrevCompletionScript_2818590287_2818590308(self_2818590309) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym888_2818590310 = getTextDocumentEditor_2818583231(self_2818590309);
      if (isNone_2818583592(rHEX60gensym888_2818590310)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818590292(get_2818583612(rHEX60gensym888_2818590310));
  };

  
}

function selectPrevCompletionApi_2818590336(HEX3Atmp_2818590289) {
  var result_2818590337 = null;

    result_2818590337 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2818590287_2818590308(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590289, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_2818590343 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590348 = [mnewString(0)];
    fmtRes_2818590348[0].push.apply(fmtRes_2818590348[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590348, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_2818590343 || [],fmtRes_2818590348[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590337;

}

function selectNextCompletionScript_2818590351_2818590372(self_2818590373) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym897_2818590374 = getTextDocumentEditor_2818583231(self_2818590373);
      if (isNone_2818583592(rHEX60gensym897_2818590374)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818590356(get_2818583612(rHEX60gensym897_2818590374));
  };

  
}

function selectNextCompletionApi_2818590400(HEX3Atmp_2818590353) {
  var result_2818590401 = null;

    result_2818590401 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2818590351_2818590372(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590353, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym902_2818590407 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590412 = [mnewString(0)];
    fmtRes_2818590412[0].push.apply(fmtRes_2818590412[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590412, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym902_2818590407 || [],fmtRes_2818590412[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590401;

}

function applySelectedCompletionScript_2818590415_2818590564(self_2818590565) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym906_2818590566 = getTextDocumentEditor_2818583231(self_2818590565);
      if (isNone_2818583592(rHEX60gensym906_2818590566)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818590420(get_2818583612(rHEX60gensym906_2818590566));
  };

  
}

function applySelectedCompletionApi_2818590592(HEX3Atmp_2818590417) {
  var result_2818590593 = null;

    result_2818590593 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2818590415_2818590564(jsonTo_2818583646(HEX5BHEX5D_1627393116(HEX3Atmp_2818590417, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym911_2818590599 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590604 = [mnewString(0)];
    fmtRes_2818590604[0].push.apply(fmtRes_2818590604[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590604, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym911_2818590599 || [],fmtRes_2818590604[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590593;

}

function dispatch_2818590631(command_2818590630, arg_2818590629) {
    var Temporary1;

  var result_2818590636 = ({val: null});

    switch (toJSStr(command_2818590630)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590637(setModeApi_2818583644(arg_2818590629));
      break;
    case "mode":
      Temporary1 = some_2818590637(modeApi_2818583806(arg_2818590629));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590637(getContextWithModeApi_2818583866(arg_2818590629));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818590637(updateTargetColumnApi_2818583928(arg_2818590629));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818590637(invertSelectionApi_2818584042(arg_2818590629));
      break;
    case "insert":
      Temporary1 = some_2818590637(insertApi_2818584123(arg_2818590629));
      break;
    case "delete":
      Temporary1 = some_2818590637(deleteApi_2818584618(arg_2818590629));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818590637(selectPrevApi_2818584867(arg_2818590629));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818590637(selectNextApi_2818585040(arg_2818590629));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818590637(selectInsideApi_2818585104(arg_2818590629));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818590637(selectInsideCurrentApi_2818585167(arg_2818590629));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818590637(selectLineApi_2818585220(arg_2818590629));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818590637(selectLineCurrentApi_2818585275(arg_2818590629));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818590637(selectParentTsApi_2818585340(arg_2818590629));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818590637(selectParentCurrentTsApi_2818585408(arg_2818590629));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818590637(insertTextApi_2818585465(arg_2818590629));
      break;
    case "undo":
      Temporary1 = some_2818590637(undoApi_2818585581(arg_2818590629));
      break;
    case "redo":
      Temporary1 = some_2818590637(redoApi_2818585661(arg_2818590629));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818590637(scrollTextApi_2818585722(arg_2818590629));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818590637(duplicateLastSelectionApi_2818585877(arg_2818590629));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818590637(addCursorBelowApi_2818585947(arg_2818590629));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818590637(addCursorAboveApi_2818586013(arg_2818590629));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818590637(getPrevFindResultApi_2818586323(arg_2818590629));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818590637(getNextFindResultApi_2818586552(arg_2818590629));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818590637(addNextFindResultToSelectionApi_2818586634(arg_2818590629));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818590637(addPrevFindResultToSelectionApi_2818586692(arg_2818590629));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818590637(setAllFindResultToSelectionApi_2818587036(arg_2818590629));
      break;
    case "clearSelections":
    case "clear-selections":
      Temporary1 = some_2818590637(clearSelectionsApi_2818587107(arg_2818590629));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818590637(moveCursorColumnApi_2818587184(arg_2818590629));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818590637(moveCursorLineApi_2818587274(arg_2818590629));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818590637(moveCursorHomeApi_2818587345(arg_2818590629));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818590637(moveCursorEndApi_2818587413(arg_2818590629));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818590637(moveCursorToApi_2818587491(arg_2818590629));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818590637(moveCursorBeforeApi_2818587574(arg_2818590629));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818590637(moveCursorNextFindResultApi_2818587647(arg_2818590629));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818590637(moveCursorPrevFindResultApi_2818587713(arg_2818590629));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818590637(scrollToCursorApi_2818587776(arg_2818590629));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818590637(reloadTreesitterApi_2818587831(arg_2818590629));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818590637(deleteLeftApi_2818587895(arg_2818590629));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818590637(deleteRightApi_2818587959(arg_2818590629));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818590637(getCommandCountApi_2818588018(arg_2818590629));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818590637(setCommandCountApi_2818588075(arg_2818590629));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818590637(setCommandCountRestoreApi_2818588133(arg_2818590629));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818590637(updateCommandCountApi_2818588191(arg_2818590629));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818590637(setFlagApi_2818588252(arg_2818590629));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818590637(getFlagApi_2818588318(arg_2818590629));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818590637(runActionApi_2818588395(arg_2818590629));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818590637(findWordBoundaryApi_2818588490(arg_2818590629));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818590637(getSelectionForMoveApi_2818588655(arg_2818590629));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818590637(setMoveApi_2818588987(arg_2818590629));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818590637(deleteMoveApi_2818589127(arg_2818590629));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818590637(selectMoveApi_2818589256(arg_2818590629));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818590637(changeMoveApi_2818589360(arg_2818590629));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818590637(moveLastApi_2818589474(arg_2818590629));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818590637(moveFirstApi_2818589601(arg_2818590629));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818590637(setSearchQueryApi_2818589688(arg_2818590629));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818590637(setSearchQueryFromMoveApi_2818589770(arg_2818590629));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818590637(gotoDefinitionApi_2818590158(arg_2818590629));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818590637(getCompletionsApi_2818590222(arg_2818590629));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818590637(hideCompletionsApi_2818590272(arg_2818590629));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818590637(selectPrevCompletionApi_2818590336(arg_2818590629));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818590637(selectNextCompletionApi_2818590400(arg_2818590629));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818590637(applySelectedCompletionApi_2818590592(arg_2818590629));
      break;
    default: 
      Temporary1 = none_2818590836();
      break;
    }
    result_2818590636 = nimCopy(result_2818590636, Temporary1, NTI2818584229);

  return result_2818590636;

}

function isNone_2818590921(self_2818590923) {
  var result_2818590924 = false;

    result_2818590924 = (self_2818590923.val == null);

  return result_2818590924;

}

function handleActionInternal_2818572647(self_2818572648, action_2818572649, args_2818572650) {
    var Temporary3;

  var result_2818590856 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2818572648.editor, self_2818572648, action_2818572649, args_2818572650) == 3)) {
    self_2818572648.commandCount = subInt(self_2818572648.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572648.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848854(self_2818572648.editor, self_2818572648, action_2818572649, args_2818572650) == 3))) {
          break Label1;
          }
          
          self_2818572648.commandCount = subInt(self_2818572648.commandCount, 1);
        }
    };
    self_2818572648.commandCount = self_2818572648.commandCountRestore;
    self_2818572648.commandCountRestore = 0;
    result_2818590856 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572650;
    if (ConstSet320[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818590875(Temporary3, "elems", toJson_2818583335({id: self_2818572648.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818590904(dispatch_2818590631(action_2818572649, args_2818572650))) {
    self_2818572648.commandCount = subInt(self_2818572648.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572648.commandCount)) break Label5;
          if (isNone_2818590921(dispatch_2818590631(action_2818572649, args_2818572650))) {
          break Label4;
          }
          
          self_2818572648.commandCount = subInt(self_2818572648.commandCount, 1);
        }
    };
    self_2818572648.commandCount = self_2818572648.commandCountRestore;
    self_2818572648.commandCountRestore = 0;
    result_2818590856 = 3;
    break BeforeRet;
    }
    
    result_2818590856 = 1;
    break BeforeRet;
  };

  return result_2818590856;

}

function handleAction_2818572643(self_2818572644, action_2818572645, arg_2818572646) {
  var result_2818590938 = 0;

  BeforeRet: {
    var args_2818590939 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818590940 = null;
      var colontmp__536871945 = null;
      colontmp__536871945 = newStringStream_1660945417(arg_2818572646);
      var p_536871946 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871946[0], colontmp__536871945, [], false);
      try {
      var _ = getTok_1694499270(p_536871946[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871946[0].tok == 1))) break Label5;
            a_2818590940 = parseJson_1627395211(p_536871946[0], false, false, 0);
            add_1627390190(args_2818590939, a_2818590940);
          }
      };
      } finally {
      close_1694498967(p_536871946[0]);
      }
    };
    result_2818590938 = handleActionInternal_2818572647(self_2818572644, action_2818572645, args_2818590939);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818590945 = [mnewString(0)];
    fmtRes_2818590945[0].push.apply(fmtRes_2818590945[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818590945, 0, action_2818572645, []);
    fmtRes_2818590945[0].push.apply(fmtRes_2818590945[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818590945, 0, arg_2818572646, []);
    fmtRes_2818590945[0].push.apply(fmtRes_2818590945[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818590945[0], NTI33554449)]);
    result_2818590938 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818590938;

}

function hasKey_1291847815(t_1291847818, key_1291847819) {
  var result_1291847820 = false;

    var hc_1291847821 = [0];
    result_1291847820 = (0 <= rawGet_1291847822(t_1291847818, key_1291847819, hc_1291847821, 0));

  return result_1291847820;

}

function contains_1291847809(t_1291847812, key_1291847813) {
  var result_1291847814 = false;

  BeforeRet: {
    result_1291847814 = hasKey_1291847815(t_1291847812, key_1291847813);
    break BeforeRet;
  };

  return result_1291847814;

}

function HEX5BHEX5D_1291848114(t_1291848117, key_1291848118) {
  var result_1291848119 = null;
  var result_1291848119_Idx = 0;

    var hcHEX60gensym22_1291848120 = [0];
    var indexHEX60gensym22_1291848127 = rawGet_1291847822(t_1291848117, key_1291848118, hcHEX60gensym22_1291848120, 0);
    if ((0 <= indexHEX60gensym22_1291848127)) {
    result_1291848119 = t_1291848117.data[chckIndx(indexHEX60gensym22_1291848127, 0, (t_1291848117.data).length - 1)]; result_1291848119_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848118);
    }
    

  return [result_1291848119, result_1291848119_Idx];

}

function invokeCallback_1291847762(self_1291847763, context_1291847764, args_1291847765) {
    var Temporary1;

  var result_1291847766 = false;

  BeforeRet: {
    if (!(contains_1291847809(self_1291847763.callbacks, context_1291847764))) {
    result_1291847766 = false;
    break BeforeRet;
    }
    
    var id_1291848184 = (Temporary1 = HEX5BHEX5D_1291848114(self_1291847763.callbacks, context_1291847764), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847766 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848195 = [mnewString(0)];
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2701131945(fmtRes_1291848195, 0, id_1291848184, []);
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848195, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848195[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847766 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847766;

}

function handleInput_2818572651(self_2818572652, input_2818572653) {
  var result_2818590949 = 0;

  BeforeRet: {
    if (invokeCallback_1291847762(self_2818572652.editor, getContextWithMode_2818582956(self_2818572652, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572653))) {
    result_2818590949 = 3;
    break BeforeRet;
    }
    
    insertText_2818585431(self_2818572652, input_2818572653);
    result_2818590949 = 3;
    break BeforeRet;
  };

  return result_2818590949;

}

function toJson_2952801199(self_2952801200, opt_2952801201) {
  var result_2952801202 = null;

    result_2952801202 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2952801202, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2952801202, [105,100], newJInt_1627390040(self_2952801200.id));

  return result_2952801202;

}

function none_2952801122() {
  var result_2952801128 = ({val: null});

  return result_2952801128;

}

function some_2952801162(val_2952801164) {
  var result_2952801165 = ({val: null});

    if (!(!((val_2952801164 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2952801165.val = val_2952801164;

  return result_2952801165;

}

function getAstDocumentEditor_2952801112(wrapper_2952801113) {
      var Temporary1;

  var result_2952801118 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2952801118 = nimCopy(result_2952801118, none_2952801122(), NTI2952797000);
    break BeforeRet;
    }
    
      var oHEX60gensym528_2952801131 = getEditorForId_1291850661(gEditor, wrapper_2952801113.id);
      if (!isSome_2818583255(oHEX60gensym528_2952801131)) Temporary1 = false; else {        var editor_2952801154 = get_2818583275(oHEX60gensym528_2952801131);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2952801154.m_type, NTI2952791527)) {
    result_2952801118 = nimCopy(result_2952801118, some_2952801162(editor_2952801154), NTI2952797000);
    break BeforeRet;
    }
    
    }
    
    result_2952801118 = nimCopy(result_2952801118, none_2952801122(), NTI2952797000);
    break BeforeRet;
  };

  return result_2952801118;

}

function isNone_2952801230(self_2952801232) {
  var result_2952801233 = false;

    result_2952801233 = (self_2952801232.val == null);

  return result_2952801233;

}

function get_2952801250(self_2952801252) {
  var result_2952801253 = null;

    if (isNone_2952801230(self_2952801252)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952801253 = self_2952801252["val"];

  return result_2952801253;

}

function moveCursorScript_2952801212_2952801222(self_2952801223, direction_2952801224) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym533_2952801225 = getAstDocumentEditor_2952801112(self_2952801223);
      if (isNone_2952801230(rHEX60gensym533_2952801225)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2952801217(get_2952801250(rHEX60gensym533_2952801225), direction_2952801224);
  };

  
}

function fromJsonHook_2952801203(t_2952801204, jsonNode_2952801205) {
    t_2952801204.id = jsonTo_2818583342(HEX5BHEX5D_1627393037(jsonNode_2952801205, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2952801283(a_2952801285, b_2952801286, opt_2952801287) {
    if (!(!(HEX3DHEX3D_1627392026(b_2952801286, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2952801286}));
    }
    
    fromJsonHook_2952801203(a_2952801285, b_2952801286);

  
}

function jsonTo_2952801277(b_2952801279, opt_2952801281) {
  var result_2952801282 = [({id: 0})];

    fromJson_2952801283(result_2952801282[0], b_2952801279, opt_2952801281);

  return result_2952801282[0];

}

function moveCursorApi_2952801275(HEX3Atmp_2952801214) {
  var result_2952801276 = null;

    result_2952801276 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2952801212_2952801222(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801214, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583342(HEX5BHEX5D_1627393116(HEX3Atmp_2952801214, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym538_2952801299 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2952801304 = [mnewString(0)];
    fmtRes_2952801304[0].push.apply(fmtRes_2952801304[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801304, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym538_2952801299 || [],fmtRes_2952801304[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801276;

}

function moveCursorUpScript_2952801370_2952801389(self_2952801390) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym545_2952801391 = getAstDocumentEditor_2952801112(self_2952801390);
      if (isNone_2952801230(rHEX60gensym545_2952801391)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2952801375(get_2952801250(rHEX60gensym545_2952801391));
  };

  
}

function moveCursorUpApi_2952801417(HEX3Atmp_2952801372) {
  var result_2952801418 = null;

    result_2952801418 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2952801370_2952801389(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801372, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym550_2952801424 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2952801429 = [mnewString(0)];
    fmtRes_2952801429[0].push.apply(fmtRes_2952801429[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801429, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym550_2952801424 || [],fmtRes_2952801429[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801418;

}

function moveCursorDownScript_2952801432_2952801439(self_2952801440) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2952801441 = getAstDocumentEditor_2952801112(self_2952801440);
      if (isNone_2952801230(rHEX60gensym556_2952801441)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2952801437(get_2952801250(rHEX60gensym556_2952801441));
  };

  
}

function moveCursorDownApi_2952801467(HEX3Atmp_2952801434) {
  var result_2952801468 = null;

    result_2952801468 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2952801432_2952801439(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801434, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym561_2952801474 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2952801479 = [mnewString(0)];
    fmtRes_2952801479[0].push.apply(fmtRes_2952801479[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801479, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym561_2952801474 || [],fmtRes_2952801479[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801468;

}

function moveCursorNextScript_2952801482_2952801496(self_2952801497) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym565_2952801498 = getAstDocumentEditor_2952801112(self_2952801497);
      if (isNone_2952801230(rHEX60gensym565_2952801498)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2952801487(get_2952801250(rHEX60gensym565_2952801498));
  };

  
}

function moveCursorNextApi_2952801524(HEX3Atmp_2952801484) {
  var result_2952801525 = null;

    result_2952801525 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2952801482_2952801496(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801484, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym570_2952801531 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2952801536 = [mnewString(0)];
    fmtRes_2952801536[0].push.apply(fmtRes_2952801536[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801536, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym570_2952801531 || [],fmtRes_2952801536[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801525;

}

function moveCursorPrevScript_2952801550_2952801563(self_2952801564) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym574_2952801565 = getAstDocumentEditor_2952801112(self_2952801564);
      if (isNone_2952801230(rHEX60gensym574_2952801565)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2952801555(get_2952801250(rHEX60gensym574_2952801565));
  };

  
}

function moveCursorPrevApi_2952801591(HEX3Atmp_2952801552) {
  var result_2952801592 = null;

    result_2952801592 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2952801550_2952801563(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801552, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym579_2952801598 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2952801603 = [mnewString(0)];
    fmtRes_2952801603[0].push.apply(fmtRes_2952801603[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801603, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym579_2952801598 || [],fmtRes_2952801603[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801592;

}

function moveCursorNextLineScript_2952801616_2952801649(self_2952801650) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym583_2952801651 = getAstDocumentEditor_2952801112(self_2952801650);
      if (isNone_2952801230(rHEX60gensym583_2952801651)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2952801621(get_2952801250(rHEX60gensym583_2952801651));
  };

  
}

function moveCursorNextLineApi_2952801677(HEX3Atmp_2952801618) {
  var result_2952801678 = null;

    result_2952801678 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2952801616_2952801649(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801618, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym588_2952801684 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2952801689 = [mnewString(0)];
    fmtRes_2952801689[0].push.apply(fmtRes_2952801689[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801689, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym588_2952801684 || [],fmtRes_2952801689[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801678;

}

function moveCursorPrevLineScript_2952801701_2952801734(self_2952801735) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2952801736 = getAstDocumentEditor_2952801112(self_2952801735);
      if (isNone_2952801230(rHEX60gensym592_2952801736)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2952801706(get_2952801250(rHEX60gensym592_2952801736));
  };

  
}

function moveCursorPrevLineApi_2952801762(HEX3Atmp_2952801703) {
  var result_2952801763 = null;

    result_2952801763 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2952801701_2952801734(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801703, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_2952801769 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2952801774 = [mnewString(0)];
    fmtRes_2952801774[0].push.apply(fmtRes_2952801774[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801774, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_2952801769 || [],fmtRes_2952801774[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801763;

}

function selectContainingScript_2952801787_2952801951(self_2952801952, container_2952801953) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym602_2952801954 = getAstDocumentEditor_2952801112(self_2952801952);
      if (isNone_2952801230(rHEX60gensym602_2952801954)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2952801792(get_2952801250(rHEX60gensym602_2952801954), container_2952801953);
  };

  
}

function selectContainingApi_2952801981(HEX3Atmp_2952801789) {
  var result_2952801982 = null;

    result_2952801982 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2952801787_2952801951(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952801789, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952801789, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym607_2952801993 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2952801998 = [mnewString(0)];
    fmtRes_2952801998[0].push.apply(fmtRes_2952801998[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801998, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym607_2952801993 || [],fmtRes_2952801998[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801982;

}

function deleteSelectedScript_2952802001_2952802011(self_2952802012) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym616_2952802013 = getAstDocumentEditor_2952801112(self_2952802012);
      if (isNone_2952801230(rHEX60gensym616_2952802013)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2952802006(get_2952801250(rHEX60gensym616_2952802013));
  };

  
}

function deleteSelectedApi_2952802039(HEX3Atmp_2952802003) {
  var result_2952802040 = null;

    result_2952802040 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2952802001_2952802011(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802003, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2952802046 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2952802051 = [mnewString(0)];
    fmtRes_2952802051[0].push.apply(fmtRes_2952802051[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802051, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2952802046 || [],fmtRes_2952802051[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802040;

}

function copySelectedScript_2952802117_2952802127(self_2952802128) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym624_2952802129 = getAstDocumentEditor_2952801112(self_2952802128);
      if (isNone_2952801230(rHEX60gensym624_2952802129)) {
      break BeforeRet;
      }
      
    };
    copySelected_2952802122(get_2952801250(rHEX60gensym624_2952802129));
  };

  
}

function copySelectedApi_2952802155(HEX3Atmp_2952802119) {
  var result_2952802156 = null;

    result_2952802156 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2952802117_2952802127(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802119, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym629_2952802162 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2952802167 = [mnewString(0)];
    fmtRes_2952802167[0].push.apply(fmtRes_2952802167[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802167, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym629_2952802162 || [],fmtRes_2952802167[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802156;

}

function finishEditScript_2952802185_2952802235(self_2952802236, apply_2952802237) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym633_2952802238 = getAstDocumentEditor_2952801112(self_2952802236);
      if (isNone_2952801230(rHEX60gensym633_2952802238)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2952797950(get_2952801250(rHEX60gensym633_2952802238), apply_2952802237);
  };

  
}

function finishEditApi_2952802265(HEX3Atmp_2952802187) {
  var result_2952802266 = null;

    result_2952802266 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2952802185_2952802235(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802187, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584384(HEX5BHEX5D_1627393116(HEX3Atmp_2952802187, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym638_2952802277 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2952802282 = [mnewString(0)];
    fmtRes_2952802282[0].push.apply(fmtRes_2952802282[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802282, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym638_2952802277 || [],fmtRes_2952802282[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802266;

}

function undoScript2_2952802325_2952802358(self_2952802359) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym644_2952802360 = getAstDocumentEditor_2952801112(self_2952802359);
      if (isNone_2952801230(rHEX60gensym644_2952802360)) {
      break BeforeRet;
      }
      
    };
    undo_2952802330(get_2952801250(rHEX60gensym644_2952802360));
  };

  
}

function undoApi2_2952802386(HEX3Atmp_2952802327) {
  var result_2952802387 = null;

    result_2952802387 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2952802325_2952802358(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802327, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym649_2952802393 = [117,110,100,111];
    var fmtRes_2952802398 = [mnewString(0)];
    fmtRes_2952802398[0].push.apply(fmtRes_2952802398[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802398, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym649_2952802393 || [],fmtRes_2952802398[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802387;

}

function redoScript2_2952802402_2952802435(self_2952802436) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2952802437 = getAstDocumentEditor_2952801112(self_2952802436);
      if (isNone_2952801230(rHEX60gensym653_2952802437)) {
      break BeforeRet;
      }
      
    };
    redo_2952802407(get_2952801250(rHEX60gensym653_2952802437));
  };

  
}

function redoApi2_2952802463(HEX3Atmp_2952802404) {
  var result_2952802464 = null;

    result_2952802464 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2952802402_2952802435(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802404, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym658_2952802470 = [114,101,100,111];
    var fmtRes_2952802475 = [mnewString(0)];
    fmtRes_2952802475[0].push.apply(fmtRes_2952802475[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802475, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym658_2952802470 || [],fmtRes_2952802475[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802464;

}

function insertAfterSmartScript_2952802478_2952802603(self_2952802604, nodeTemplate_2952802605) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym663_2952802606 = getAstDocumentEditor_2952801112(self_2952802604);
      if (isNone_2952801230(rHEX60gensym663_2952802606)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2952802483(get_2952801250(rHEX60gensym663_2952802606), nodeTemplate_2952802605);
  };

  
}

function insertAfterSmartApi_2952802633(HEX3Atmp_2952802480) {
  var result_2952802634 = null;

    result_2952802634 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2952802478_2952802603(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802480, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802480, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym668_2952802645 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2952802650 = [mnewString(0)];
    fmtRes_2952802650[0].push.apply(fmtRes_2952802650[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802650, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym668_2952802645 || [],fmtRes_2952802650[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802634;

}

function insertAfterScript_2952802833_2952802926(self_2952802927, nodeTemplate_2952802928) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym676_2952802929 = getAstDocumentEditor_2952801112(self_2952802927);
      if (isNone_2952801230(rHEX60gensym676_2952802929)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2952802838(get_2952801250(rHEX60gensym676_2952802929), nodeTemplate_2952802928);
  };

  
}

function insertAfterApi_2952802956(HEX3Atmp_2952802835) {
  var result_2952802957 = null;

    result_2952802957 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2952802833_2952802926(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802835, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802835, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym681_2952802968 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2952802973 = [mnewString(0)];
    fmtRes_2952802973[0].push.apply(fmtRes_2952802973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym681_2952802968 || [],fmtRes_2952802973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802957;

}

function insertBeforeScript_2952802988_2952803080(self_2952803081, nodeTemplate_2952803082) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym688_2952803083 = getAstDocumentEditor_2952801112(self_2952803081);
      if (isNone_2952801230(rHEX60gensym688_2952803083)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2952802993(get_2952801250(rHEX60gensym688_2952803083), nodeTemplate_2952803082);
  };

  
}

function insertBeforeApi_2952803110(HEX3Atmp_2952802990) {
  var result_2952803111 = null;

    result_2952803111 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2952802988_2952803080(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952802990, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802990, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym693_2952803122 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2952803127 = [mnewString(0)];
    fmtRes_2952803127[0].push.apply(fmtRes_2952803127[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803127, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym693_2952803122 || [],fmtRes_2952803127[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803111;

}

function insertChildScript_2952803142_2952803233(self_2952803234, nodeTemplate_2952803235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym700_2952803236 = getAstDocumentEditor_2952801112(self_2952803234);
      if (isNone_2952801230(rHEX60gensym700_2952803236)) {
      break BeforeRet;
      }
      
    };
    insertChild_2952803147(get_2952801250(rHEX60gensym700_2952803236), nodeTemplate_2952803235);
  };

  
}

function insertChildApi_2952803263(HEX3Atmp_2952803144) {
  var result_2952803264 = null;

    result_2952803264 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2952803142_2952803233(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803144, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803144, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym705_2952803275 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2952803280 = [mnewString(0)];
    fmtRes_2952803280[0].push.apply(fmtRes_2952803280[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803280, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym705_2952803275 || [],fmtRes_2952803280[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803264;

}

function replaceScript_2952803295_2952803340(self_2952803341, nodeTemplate_2952803342) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym712_2952803343 = getAstDocumentEditor_2952801112(self_2952803341);
      if (isNone_2952801230(rHEX60gensym712_2952803343)) {
      break BeforeRet;
      }
      
    };
    replace_2952803300(get_2952801250(rHEX60gensym712_2952803343), nodeTemplate_2952803342);
  };

  
}

function replaceApi_2952803370(HEX3Atmp_2952803297) {
  var result_2952803371 = null;

    result_2952803371 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2952803295_2952803340(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803297, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803297, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym717_2952803382 = [114,101,112,108,97,99,101];
    var fmtRes_2952803387 = [mnewString(0)];
    fmtRes_2952803387[0].push.apply(fmtRes_2952803387[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803387, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym717_2952803382 || [],fmtRes_2952803387[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803371;

}

function replaceEmptyScript_2952803402_2952803451(self_2952803452, nodeTemplate_2952803453) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym722_2952803454 = getAstDocumentEditor_2952801112(self_2952803452);
      if (isNone_2952801230(rHEX60gensym722_2952803454)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2952803407(get_2952801250(rHEX60gensym722_2952803454), nodeTemplate_2952803453);
  };

  
}

function replaceEmptyApi_2952803481(HEX3Atmp_2952803404) {
  var result_2952803482 = null;

    result_2952803482 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2952803402_2952803451(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803404, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803404, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym727_2952803493 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2952803498 = [mnewString(0)];
    fmtRes_2952803498[0].push.apply(fmtRes_2952803498[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803498, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym727_2952803493 || [],fmtRes_2952803498[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803482;

}

function replaceParentScript_2952803513_2952803530(self_2952803531) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym731_2952803532 = getAstDocumentEditor_2952801112(self_2952803531);
      if (isNone_2952801230(rHEX60gensym731_2952803532)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2952803518(get_2952801250(rHEX60gensym731_2952803532));
  };

  
}

function replaceParentApi_2952803558(HEX3Atmp_2952803515) {
  var result_2952803559 = null;

    result_2952803559 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2952803513_2952803530(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803515, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym736_2952803565 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2952803570 = [mnewString(0)];
    fmtRes_2952803570[0].push.apply(fmtRes_2952803570[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803570, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym736_2952803565 || [],fmtRes_2952803570[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803559;

}

function wrapScript_2952803573_2952803642(self_2952803643, nodeTemplate_2952803644) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym740_2952803645 = getAstDocumentEditor_2952801112(self_2952803643);
      if (isNone_2952801230(rHEX60gensym740_2952803645)) {
      break BeforeRet;
      }
      
    };
    wrap_2952803578(get_2952801250(rHEX60gensym740_2952803645), nodeTemplate_2952803644);
  };

  
}

function wrapApi_2952803672(HEX3Atmp_2952803575) {
  var result_2952803673 = null;

    result_2952803673 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2952803573_2952803642(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803575, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803575, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym745_2952803684 = [119,114,97,112];
    var fmtRes_2952803689 = [mnewString(0)];
    fmtRes_2952803689[0].push.apply(fmtRes_2952803689[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803689, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym745_2952803684 || [],fmtRes_2952803689[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803673;

}

function editPrevEmptyScript_2952803716_2952803729(self_2952803730) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym749_2952803731 = getAstDocumentEditor_2952801112(self_2952803730);
      if (isNone_2952801230(rHEX60gensym749_2952803731)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2952803721(get_2952801250(rHEX60gensym749_2952803731));
  };

  
}

function editPrevEmptyApi_2952803757(HEX3Atmp_2952803718) {
  var result_2952803758 = null;

    result_2952803758 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2952803716_2952803729(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803718, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym754_2952803764 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2952803769 = [mnewString(0)];
    fmtRes_2952803769[0].push.apply(fmtRes_2952803769[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803769, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym754_2952803764 || [],fmtRes_2952803769[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803758;

}

function editNextEmptyScript_2952803779_2952803800(self_2952803801) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym758_2952803802 = getAstDocumentEditor_2952801112(self_2952803801);
      if (isNone_2952801230(rHEX60gensym758_2952803802)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2952803784(get_2952801250(rHEX60gensym758_2952803802));
  };

  
}

function editNextEmptyApi_2952803828(HEX3Atmp_2952803781) {
  var result_2952803829 = null;

    result_2952803829 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2952803779_2952803800(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803781, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym763_2952803835 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2952803840 = [mnewString(0)];
    fmtRes_2952803840[0].push.apply(fmtRes_2952803840[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803840, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym763_2952803835 || [],fmtRes_2952803840[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803829;

}

function renameScript_2952803856_2952803863(self_2952803864) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym767_2952803865 = getAstDocumentEditor_2952801112(self_2952803864);
      if (isNone_2952801230(rHEX60gensym767_2952803865)) {
      break BeforeRet;
      }
      
    };
    rename_2952803861(get_2952801250(rHEX60gensym767_2952803865));
  };

  
}

function renameApi_2952803891(HEX3Atmp_2952803858) {
  var result_2952803892 = null;

    result_2952803892 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2952803856_2952803863(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803858, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym772_2952803898 = [114,101,110,97,109,101];
    var fmtRes_2952803903 = [mnewString(0)];
    fmtRes_2952803903[0].push.apply(fmtRes_2952803903[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803903, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym772_2952803898 || [],fmtRes_2952803903[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803892;

}

function selectPrevCompletionScript2_2952803906_2952803924(self_2952803925) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym775_2952803926 = getAstDocumentEditor_2952801112(self_2952803925);
      if (isNone_2952801230(rHEX60gensym775_2952803926)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2952803911(get_2952801250(rHEX60gensym775_2952803926));
  };

  
}

function selectPrevCompletionApi2_2952803952(HEX3Atmp_2952803908) {
  var result_2952803953 = null;

    result_2952803953 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2952803906_2952803924(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803908, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym780_2952803959 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952803964 = [mnewString(0)];
    fmtRes_2952803964[0].push.apply(fmtRes_2952803964[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803964, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym780_2952803959 || [],fmtRes_2952803964[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803953;

}

function selectNextCompletionScript2_2952803967_2952803985(editor_2952803986) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym784_2952803987 = getAstDocumentEditor_2952801112(editor_2952803986);
      if (isNone_2952801230(rHEX60gensym784_2952803987)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2952803972(get_2952801250(rHEX60gensym784_2952803987));
  };

  
}

function selectNextCompletionApi2_2952804013(HEX3Atmp_2952803969) {
  var result_2952804014 = null;

    result_2952804014 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2952803967_2952803985(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952803969, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym789_2952804020 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804025 = [mnewString(0)];
    fmtRes_2952804025[0].push.apply(fmtRes_2952804025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym789_2952804020 || [],fmtRes_2952804025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804014;

}

function applySelectedCompletionScript2_2952804028_2952804148(editor_2952804149) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym793_2952804150 = getAstDocumentEditor_2952801112(editor_2952804149);
      if (isNone_2952801230(rHEX60gensym793_2952804150)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2952804033(get_2952801250(rHEX60gensym793_2952804150));
  };

  
}

function applySelectedCompletionApi2_2952804176(HEX3Atmp_2952804030) {
  var result_2952804177 = null;

    result_2952804177 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2952804028_2952804148(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804030, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym798_2952804183 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804188 = [mnewString(0)];
    fmtRes_2952804188[0].push.apply(fmtRes_2952804188[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804188, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym798_2952804183 || [],fmtRes_2952804188[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804177;

}

function cancelAndNextCompletionScript_2952804239_2952804246(self_2952804247) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym808_2952804248 = getAstDocumentEditor_2952801112(self_2952804247);
      if (isNone_2952801230(rHEX60gensym808_2952804248)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2952804244(get_2952801250(rHEX60gensym808_2952804248));
  };

  
}

function cancelAndNextCompletionApi_2952804274(HEX3Atmp_2952804241) {
  var result_2952804275 = null;

    result_2952804275 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2952804239_2952804246(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804241, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym813_2952804281 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804286 = [mnewString(0)];
    fmtRes_2952804286[0].push.apply(fmtRes_2952804286[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804286, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym813_2952804281 || [],fmtRes_2952804286[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804275;

}

function cancelAndPrevCompletionScript_2952804289_2952804296(self_2952804297) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym816_2952804298 = getAstDocumentEditor_2952801112(self_2952804297);
      if (isNone_2952801230(rHEX60gensym816_2952804298)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2952804294(get_2952801250(rHEX60gensym816_2952804298));
  };

  
}

function cancelAndPrevCompletionApi_2952804324(HEX3Atmp_2952804291) {
  var result_2952804325 = null;

    result_2952804325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2952804289_2952804296(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804291, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym821_2952804331 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804336 = [mnewString(0)];
    fmtRes_2952804336[0].push.apply(fmtRes_2952804336[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804336, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym821_2952804331 || [],fmtRes_2952804336[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804325;

}

function cancelAndDeleteScript_2952804339_2952804349(self_2952804350) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym824_2952804351 = getAstDocumentEditor_2952801112(self_2952804350);
      if (isNone_2952801230(rHEX60gensym824_2952804351)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2952804344(get_2952801250(rHEX60gensym824_2952804351));
  };

  
}

function cancelAndDeleteApi_2952804377(HEX3Atmp_2952804341) {
  var result_2952804378 = null;

    result_2952804378 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2952804339_2952804349(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804341, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym829_2952804384 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2952804389 = [mnewString(0)];
    fmtRes_2952804389[0].push.apply(fmtRes_2952804389[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804389, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym829_2952804384 || [],fmtRes_2952804389[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804378;

}

function moveNodeToPrevSpaceScript_2952804392_2952804503(self_2952804504) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym832_2952804505 = getAstDocumentEditor_2952801112(self_2952804504);
      if (isNone_2952801230(rHEX60gensym832_2952804505)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2952804397(get_2952801250(rHEX60gensym832_2952804505));
  };

  
}

function moveNodeToPrevSpaceApi_2952804531(HEX3Atmp_2952804394) {
  var result_2952804532 = null;

    result_2952804532 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2952804392_2952804503(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804394, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym837_2952804538 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2952804543 = [mnewString(0)];
    fmtRes_2952804543[0].push.apply(fmtRes_2952804543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym837_2952804538 || [],fmtRes_2952804543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804532;

}

function moveNodeToNextSpaceScript_2952804554_2952804666(self_2952804667) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym845_2952804668 = getAstDocumentEditor_2952801112(self_2952804667);
      if (isNone_2952801230(rHEX60gensym845_2952804668)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2952804559(get_2952801250(rHEX60gensym845_2952804668));
  };

  
}

function moveNodeToNextSpaceApi_2952804694(HEX3Atmp_2952804556) {
  var result_2952804695 = null;

    result_2952804695 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2952804554_2952804666(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804556, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym850_2952804701 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2952804706 = [mnewString(0)];
    fmtRes_2952804706[0].push.apply(fmtRes_2952804706[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804706, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym850_2952804701 || [],fmtRes_2952804706[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804695;

}

function selectPrevScript2_2952804720_2952804727(self_2952804728) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym857_2952804729 = getAstDocumentEditor_2952801112(self_2952804728);
      if (isNone_2952801230(rHEX60gensym857_2952804729)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2952804725(get_2952801250(rHEX60gensym857_2952804729));
  };

  
}

function selectPrevApi2_2952804755(HEX3Atmp_2952804722) {
  var result_2952804756 = null;

    result_2952804756 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2952804720_2952804727(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804722, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym862_2952804762 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2952804767 = [mnewString(0)];
    fmtRes_2952804767[0].push.apply(fmtRes_2952804767[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804767, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym862_2952804762 || [],fmtRes_2952804767[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804756;

}

function selectNextScript2_2952804771_2952804778(self_2952804779) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym865_2952804780 = getAstDocumentEditor_2952801112(self_2952804779);
      if (isNone_2952801230(rHEX60gensym865_2952804780)) {
      break BeforeRet;
      }
      
    };
    selectNext_2952804776(get_2952801250(rHEX60gensym865_2952804780));
  };

  
}

function selectNextApi2_2952804806(HEX3Atmp_2952804773) {
  var result_2952804807 = null;

    result_2952804807 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2952804771_2952804778(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804773, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_2952804813 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2952804818 = [mnewString(0)];
    fmtRes_2952804818[0].push.apply(fmtRes_2952804818[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804818, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_2952804813 || [],fmtRes_2952804818[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804807;

}

function gotoScript_2952804822_2952805609(self_2952805610, where_2952805611) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym874_2952805612 = getAstDocumentEditor_2952801112(self_2952805610);
      if (isNone_2952801230(rHEX60gensym874_2952805612)) {
      break BeforeRet;
      }
      
    };
    goto_2952804827(get_2952801250(rHEX60gensym874_2952805612), where_2952805611);
  };

  
}

function gotoApi_2952805639(HEX3Atmp_2952804824) {
  var result_2952805640 = null;

    result_2952805640 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2952804822_2952805609(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952804824, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952804824, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_2952805651 = [103,111,116,111];
    var fmtRes_2952805656 = [mnewString(0)];
    fmtRes_2952805656[0].push.apply(fmtRes_2952805656[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952805656, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_2952805651 || [],fmtRes_2952805656[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952805640;

}

function runSelectedFunctionScript_2952805821_2952806047(self_2952806048) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym900_2952806049 = getAstDocumentEditor_2952801112(self_2952806048);
      if (isNone_2952801230(rHEX60gensym900_2952806049)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2952805826(get_2952801250(rHEX60gensym900_2952806049));
  };

  
}

function runSelectedFunctionApi_2952806075(HEX3Atmp_2952805823) {
  var result_2952806076 = null;

    result_2952806076 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2952805821_2952806047(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952805823, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_2952806082 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2952806087 = [mnewString(0)];
    fmtRes_2952806087[0].push.apply(fmtRes_2952806087[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806087, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_2952806082 || [],fmtRes_2952806087[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806076;

}

function toggleOptionScript_2952806099_2952806107(self_2952806108, name_2952806109) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym923_2952806110 = getAstDocumentEditor_2952801112(self_2952806108);
      if (isNone_2952801230(rHEX60gensym923_2952806110)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2952806104(get_2952801250(rHEX60gensym923_2952806110), name_2952806109);
  };

  
}

function toggleOptionApi_2952806137(HEX3Atmp_2952806101) {
  var result_2952806138 = null;

    result_2952806138 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2952806099_2952806107(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806101, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806101, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym928_2952806149 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2952806154 = [mnewString(0)];
    fmtRes_2952806154[0].push.apply(fmtRes_2952806154[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806154, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym928_2952806149 || [],fmtRes_2952806154[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806138;

}

function runLastCommandScript_2952806161_2952806169(self_2952806170, which_2952806171) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym932_2952806172 = getAstDocumentEditor_2952801112(self_2952806170);
      if (isNone_2952801230(rHEX60gensym932_2952806172)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2952806166(get_2952801250(rHEX60gensym932_2952806172), which_2952806171);
  };

  
}

function runLastCommandApi_2952806199(HEX3Atmp_2952806163) {
  var result_2952806200 = null;

    result_2952806200 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2952806161_2952806169(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806163, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806163, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym937_2952806211 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2952806216 = [mnewString(0)];
    fmtRes_2952806216[0].push.apply(fmtRes_2952806216[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806216, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym937_2952806211 || [],fmtRes_2952806216[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806200;

}

function selectCenterNodeScript_2952806219_2952806483(self_2952806484) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym940_2952806485 = getAstDocumentEditor_2952801112(self_2952806484);
      if (isNone_2952801230(rHEX60gensym940_2952806485)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2952806224(get_2952801250(rHEX60gensym940_2952806485));
  };

  
}

function selectCenterNodeApi_2952806511(HEX3Atmp_2952806221) {
  var result_2952806512 = null;

    result_2952806512 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2952806219_2952806483(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806221, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym945_2952806518 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2952806523 = [mnewString(0)];
    fmtRes_2952806523[0].push.apply(fmtRes_2952806523[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806523, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym945_2952806518 || [],fmtRes_2952806523[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806512;

}

function scrollScript_2952806555_2952806567(self_2952806568, amount_2952806569) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym957_2952806570 = getAstDocumentEditor_2952801112(self_2952806568);
      if (isNone_2952801230(rHEX60gensym957_2952806570)) {
      break BeforeRet;
      }
      
    };
    scroll_2952806560(get_2952801250(rHEX60gensym957_2952806570), amount_2952806569);
  };

  
}

function scrollApi_2952806597(HEX3Atmp_2952806557) {
  var result_2952806598 = null;

    result_2952806598 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2952806555_2952806567(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806557, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585729(HEX5BHEX5D_1627393116(HEX3Atmp_2952806557, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym962_2952806609 = [115,99,114,111,108,108];
    var fmtRes_2952806614 = [mnewString(0)];
    fmtRes_2952806614[0].push.apply(fmtRes_2952806614[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806614, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym962_2952806609 || [],fmtRes_2952806614[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806598;

}

function scrollOutputScript_2952806617_2952806636(self_2952806637, arg_2952806638) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym966_2952806639 = getAstDocumentEditor_2952801112(self_2952806637);
      if (isNone_2952801230(rHEX60gensym966_2952806639)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2952806622(get_2952801250(rHEX60gensym966_2952806639), arg_2952806638);
  };

  
}

function scrollOutputApi_2952806666(HEX3Atmp_2952806619) {
  var result_2952806667 = null;

    result_2952806667 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2952806617_2952806636(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806619, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806619, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym971_2952806678 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2952806683 = [mnewString(0)];
    fmtRes_2952806683[0].push.apply(fmtRes_2952806683[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806683, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym971_2952806678 || [],fmtRes_2952806683[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806667;

}

function dumpContextScript_2952806686_2952806693(self_2952806694) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym974_2952806695 = getAstDocumentEditor_2952801112(self_2952806694);
      if (isNone_2952801230(rHEX60gensym974_2952806695)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2952806691(get_2952801250(rHEX60gensym974_2952806695));
  };

  
}

function dumpContextApi_2952806721(HEX3Atmp_2952806688) {
  var result_2952806722 = null;

    result_2952806722 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2952806686_2952806693(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806688, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym979_2952806728 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2952806733 = [mnewString(0)];
    fmtRes_2952806733[0].push.apply(fmtRes_2952806733[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806733, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym979_2952806728 || [],fmtRes_2952806733[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806722;

}

function setModeScript2_2952806880_2952806920(self_2952806921, mode_2952806922) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym983_2952806923 = getAstDocumentEditor_2952801112(self_2952806921);
      if (isNone_2952801230(rHEX60gensym983_2952806923)) {
      break BeforeRet;
      }
      
    };
    setMode_2952806885(get_2952801250(rHEX60gensym983_2952806923), mode_2952806922);
  };

  
}

function setModeApi2_2952806950(HEX3Atmp_2952806882) {
  var result_2952806951 = null;

    result_2952806951 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2952806880_2952806920(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806882, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806882, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym988_2952806962 = [115,101,116,77,111,100,101];
    var fmtRes_2952806967 = [mnewString(0)];
    fmtRes_2952806967[0].push.apply(fmtRes_2952806967[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806967, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym988_2952806962 || [],fmtRes_2952806967[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806951;

}

function modeScript2_2952806971_2952806979(self_2952806980) {
  var result_2952806981 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym994_2952806982 = getAstDocumentEditor_2952801112(self_2952806980);
      if (isNone_2952801230(rHEX60gensym994_2952806982)) {
      break BeforeRet;
      }
      
    };
    result_2952806981 = nimCopy(null, mode_2952806976(get_2952801250(rHEX60gensym994_2952806982)), NTI33554449);
  };

  return result_2952806981;

}

function modeApi2_2952807009(HEX3Atmp_2952806973) {
  var result_2952807010 = null;

  BeforeRet: {
    result_2952807010 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2952807010 = toJson_1811939932(modeScript2_2952806971_2952806979(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952806973, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1000_2952807020 = [109,111,100,101];
    var fmtRes_2952807025 = [mnewString(0)];
    fmtRes_2952807025[0].push.apply(fmtRes_2952807025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952807025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1000_2952807020 || [],fmtRes_2952807025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2952807010;

}

function getContextWithModeScript2_2952807028_2952807037(self_2952807038, context_2952807039) {
  var result_2952807040 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1004_2952807041 = getAstDocumentEditor_2952801112(self_2952807038);
      if (isNone_2952801230(rHEX60gensym1004_2952807041)) {
      break BeforeRet;
      }
      
    };
    result_2952807040 = nimCopy(null, getContextWithMode_2952807033(get_2952801250(rHEX60gensym1004_2952807041), context_2952807039), NTI33554449);
  };

  return result_2952807040;

}

function getContextWithModeApi2_2952807069(HEX3Atmp_2952807030) {
  var result_2952807070 = null;

  BeforeRet: {
    result_2952807070 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2952807070 = toJson_1811939932(getContextWithModeScript2_2952807028_2952807037(jsonTo_2952801277(HEX5BHEX5D_1627393116(HEX3Atmp_2952807030, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952807030, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1010_2952807085 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2952807090 = [mnewString(0)];
    fmtRes_2952807090[0].push.apply(fmtRes_2952807090[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952807090, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1010_2952807085 || [],fmtRes_2952807090[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2952807070;

}

function dispatch_2952807095(command_2952807094, arg_2952807093) {
    var Temporary1;

  var result_2952807097 = ({val: null});

    switch (toJSStr(command_2952807094)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818590637(moveCursorApi_2952801275(arg_2952807093));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818590637(moveCursorUpApi_2952801417(arg_2952807093));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818590637(moveCursorDownApi_2952801467(arg_2952807093));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818590637(moveCursorNextApi_2952801524(arg_2952807093));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818590637(moveCursorPrevApi_2952801591(arg_2952807093));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818590637(moveCursorNextLineApi_2952801677(arg_2952807093));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818590637(moveCursorPrevLineApi_2952801762(arg_2952807093));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818590637(selectContainingApi_2952801981(arg_2952807093));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818590637(deleteSelectedApi_2952802039(arg_2952807093));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818590637(copySelectedApi_2952802155(arg_2952807093));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818590637(finishEditApi_2952802265(arg_2952807093));
      break;
    case "undo":
      Temporary1 = some_2818590637(undoApi2_2952802386(arg_2952807093));
      break;
    case "redo":
      Temporary1 = some_2818590637(redoApi2_2952802463(arg_2952807093));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818590637(insertAfterSmartApi_2952802633(arg_2952807093));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818590637(insertAfterApi_2952802956(arg_2952807093));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818590637(insertBeforeApi_2952803110(arg_2952807093));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818590637(insertChildApi_2952803263(arg_2952807093));
      break;
    case "replace":
      Temporary1 = some_2818590637(replaceApi_2952803370(arg_2952807093));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818590637(replaceEmptyApi_2952803481(arg_2952807093));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818590637(replaceParentApi_2952803558(arg_2952807093));
      break;
    case "wrap":
      Temporary1 = some_2818590637(wrapApi_2952803672(arg_2952807093));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818590637(editPrevEmptyApi_2952803757(arg_2952807093));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818590637(editNextEmptyApi_2952803828(arg_2952807093));
      break;
    case "rename":
      Temporary1 = some_2818590637(renameApi_2952803891(arg_2952807093));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818590637(selectPrevCompletionApi2_2952803952(arg_2952807093));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818590637(selectNextCompletionApi2_2952804013(arg_2952807093));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818590637(applySelectedCompletionApi2_2952804176(arg_2952807093));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818590637(cancelAndNextCompletionApi_2952804274(arg_2952807093));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818590637(cancelAndPrevCompletionApi_2952804324(arg_2952807093));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818590637(cancelAndDeleteApi_2952804377(arg_2952807093));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818590637(moveNodeToPrevSpaceApi_2952804531(arg_2952807093));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818590637(moveNodeToNextSpaceApi_2952804694(arg_2952807093));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818590637(selectPrevApi2_2952804755(arg_2952807093));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818590637(selectNextApi2_2952804806(arg_2952807093));
      break;
    case "goto":
      Temporary1 = some_2818590637(gotoApi_2952805639(arg_2952807093));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818590637(runSelectedFunctionApi_2952806075(arg_2952807093));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818590637(toggleOptionApi_2952806137(arg_2952807093));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818590637(runLastCommandApi_2952806199(arg_2952807093));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818590637(selectCenterNodeApi_2952806511(arg_2952807093));
      break;
    case "scroll":
      Temporary1 = some_2818590637(scrollApi_2952806597(arg_2952807093));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818590637(scrollOutputApi_2952806666(arg_2952807093));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818590637(dumpContextApi_2952806721(arg_2952807093));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590637(setModeApi2_2952806950(arg_2952807093));
      break;
    case "mode":
      Temporary1 = some_2818590637(modeApi2_2952807009(arg_2952807093));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590637(getContextWithModeApi2_2952807069(arg_2952807093));
      break;
    default: 
      Temporary1 = none_2818590836();
      break;
    }
    result_2952807097 = nimCopy(result_2952807097, Temporary1, NTI2818584229);

  return result_2952807097;

}

function handleAction_2952806156(self_2952806157, action_2952806158, arg_2952806159) {
  var result_2952807243 = 0;

  BeforeRet: {
    var args_2952807244 = newJArray_1627390082();
    add_1627390190(args_2952807244, toJson_2952801199({id: self_2952806157.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2952807245 = null;
      var colontmp__536872155 = null;
      colontmp__536872155 = newStringStream_1660945417(arg_2952806159);
      var p_536872156 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872156[0], colontmp__536872155, [], false);
      try {
      var _ = getTok_1694499270(p_536872156[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872156[0].tok == 1))) break Label4;
            a_2952807245 = parseJson_1627395211(p_536872156[0], false, false, 0);
            add_1627390190(args_2952807244, a_2952807245);
          }
      };
      } finally {
      close_1694498967(p_536872156[0]);
      }
    };
    var newLastCommand_2952807246 = {Field0: nimCopy(null, action_2952806158, NTI33554449), Field1: nimCopy(null, arg_2952806159, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2952806157.editor, self_2952806157, action_2952806158, args_2952807244) == 3)) {
    result_2952807243 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818590904(dispatch_2952807095(action_2952806158, args_2952807244))) {
    result_2952807243 = 3;
    break BeforeRet;
    }
    
    result_2952807243 = 1;
    break BeforeRet;
    } finally {
    self_2952806157.lastCommand = nimCopy(self_2952806157.lastCommand, newLastCommand_2952807246, NTI2952791550);
    }
  };

  return result_2952807243;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872274 = 0;
      colontmp__536872274 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872275 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872275 <= colontmp__536872274)) break Label3;
            i_855638867 = res_536872275;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872275 = addInt(res_536872275, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872278 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872279 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872280 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872278, NTI1191182360), Field1: colontmp__536872279, Field2: colontmp__536872280}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872281 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872281["Field0"];
    var m_1191182547 = colontmp__536872281["Field1"];
    var d_1191182548 = colontmp__536872281["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872277 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872277["Field0"];
    var m_1191183687 = colontmp__536872277["Field1"];
    var y_1191183688 = colontmp__536872277["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872266 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872266 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872266, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872266 = addInt(i_536872266, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet321[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872271 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872271 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872271, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872271 = addInt(i_536872271, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2365587483(self_2365587484) {
  var result_2365587485 = false;

    result_2365587485 = false;

  return result_2365587485;

}

function isReadOnly_2248146999(self_2248147000) {
  var result_2248147001 = false;

    result_2248147001 = true;

  return result_2248147001;

}

function isReadOnly_2231369744(self_2231369745) {
  var result_2231369746 = false;

    result_2231369746 = false;

  return result_2231369746;

}

function isReadOnly_2181038094(self_2181038095) {
  var result_2181038096 = false;

    result_2181038096 = true;

  return result_2181038096;

}

function isReadOnly_2181038097(self_2181038095) {
  var result_2181038098 = false;

  BeforeRet: {
    chckNilDisp(self_2181038095);
    if (isObj(self_2181038095.m_type, NTI2365587461)) {
    result_2181038098 = isReadOnly_2365587483(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2248146948)) {
    result_2181038098 = isReadOnly_2248146999(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2231369732)) {
    result_2181038098 = isReadOnly_2231369744(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2181038088)) {
    result_2181038098 = isReadOnly_2181038094(self_2181038095);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038098;

}

function settings_2365587486(self_2365587487) {
  var result_2365587488 = null;

    result_2365587488 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2365587488, [98,97,115,101,85,114,108], newJString_1627389994(self_2365587487.baseUrl));

  return result_2365587488;

}

function settings_2248147002(self_2248147003) {
  var result_2248147004 = null;

    result_2248147004 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [98,97,115,101,85,114,108], newJString_1627389994(self_2248147003.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [117,115,101,114], newJString_1627389994(self_2248147003.user));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2248147003.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2248147003.branchOrHash));

  return result_2248147004;

}

function settings_2231369737(self_2231369738) {
  var result_2231369739 = null;

    result_2231369739 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2231369739, [112,97,116,104], newJString_1627389994(self_2231369738.path));

  return result_2231369739;

}

function settings_2181038099(self_2181038100) {
  var result_2181038101 = null;

  return result_2181038101;

}

function settings_2181038102(self_2181038100) {
  var result_2181038103 = null;

  BeforeRet: {
    chckNilDisp(self_2181038100);
    if (isObj(self_2181038100.m_type, NTI2365587461)) {
    result_2181038103 = settings_2365587486(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2248146948)) {
    result_2181038103 = settings_2248147002(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2231369732)) {
    result_2181038103 = settings_2231369737(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2181038088)) {
    result_2181038103 = settings_2181038099(self_2181038100);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038103;

}

function clear_2365587531(t_2365587534) {
    Label1: {
      var i_2365587587 = 0;
      var colontmp__536872283 = 0;
      colontmp__536872283 = (t_2365587534.data).length;
      var i_536872284 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872284 < colontmp__536872283)) break Label3;
            i_2365587587 = i_536872284;
            t_2365587534.data[chckIndx(i_2365587587, 0, (t_2365587534.data).length - 1)].Field0 = 0;
            t_2365587534.data[chckIndx(i_2365587587, 0, (t_2365587534.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2365587534.data[chckIndx(i_2365587587, 0, (t_2365587534.data).length - 1)].Field2 = nimCopy(t_2365587534.data[chckIndx(i_2365587587, 0, (t_2365587534.data).length - 1)].Field2, ({done: false, listing: ({files: [], folders: []})}), NTI2365587459);
            i_536872284 = addInt(i_536872284, 1);
          }
      };
    };
    t_2365587534.counter = 0;

  
}

function clearDirectoryCache_2365587489(self_2365587490) {
    clear_2365587531(self_2365587490.cachedDirectoryListings);

  
}

function clear_2248147047(t_2248147050) {
    Label1: {
      var i_2248147103 = 0;
      var colontmp__536872287 = 0;
      colontmp__536872287 = (t_2248147050.data).length;
      var i_536872288 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872288 < colontmp__536872287)) break Label3;
            i_2248147103 = i_536872288;
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field0 = 0;
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field2 = nimCopy(t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field2, ({files: [], folders: []}), NTI2181038085);
            i_536872288 = addInt(i_536872288, 1);
          }
      };
    };
    t_2248147050.counter = 0;

  
}

function clearDirectoryCache_2248147005(self_2248147006) {
    clear_2248147047(self_2248147006.cachedDirectoryListings);

  
}

function clearDirectoryCache_2181038104(self_2181038105) {
  
}

function clearDirectoryCache_2181038106(self_2181038105) {
    chckNilDisp(self_2181038105);
    if (isObj(self_2181038105.m_type, NTI2365587461)) {
    clearDirectoryCache_2365587489(self_2181038105);
    }
    else {
    if (isObj(self_2181038105.m_type, NTI2248146948)) {
    clearDirectoryCache_2248147005(self_2181038105);
    }
    else {
    if (isObj(self_2181038105.m_type, NTI2181038088)) {
    clearDirectoryCache_2181038104(self_2181038105);
    }
    }}

  
}
async function httpGet_2315255824(url_2315255825, authToken_2315255839) {
  var result_2315255841 = null;

  BeforeRet: {
    var cstr_2315255881 = (await getAsyncJs(toJSStr(url_2315255825), toJSStr(get_2315255863(authToken_2315255839, []))));
    result_2315255841 = cstrToNimstr(cstr_2315255881);
    break BeforeRet;
  };

  return result_2315255841;

}
async function loadFile_2365587950(self_2365587951, relativePath_2365587952) {
    var Temporary1;

  var result_2365587954 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2365587952, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2365587952, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2365587952;
    }
    
    var relativePath_2365587982 = nimCopy(null, Temporary1, NTI33554449);
    var url_2365587983 = (self_2365587951.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2365587982 || []);
    var fmtRes_2365587988 = [mnewString(0)];
    fmtRes_2365587988[0].push.apply(fmtRes_2365587988[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2365587988, 0, url_2365587983, []);
    fmtRes_2365587988[0].push.apply(fmtRes_2365587988[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2365587988[0], NTI33554449)]);
    result_2365587954 = (await httpGet_2315255824(url_2365587983, none_2315255831()));
    break BeforeRet;
  };

  return result_2365587954;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2348810309(t_2348810312, key_2348810313) {
  var result_2348810314 = false;

  BeforeRet: {
    result_2348810314 = hasKey_1795162450(t_2348810312, key_2348810313);
    break BeforeRet;
  };

  return result_2348810314;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2348810263(self_2348810264, name_2348810265) {
    var Temporary1;

  var result_2348810266 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2348810265)) !== null)) {
    result_2348810266 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2348810265))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2348810309(cachedAppFiles_2348810262[0], name_2348810265))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2348810262[0], name_2348810265, cstrToNimstr(loadFileSync(toJSStr(name_2348810265))));
    }
    
    result_2348810266 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2348810262[0], name_2348810265), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2348810266;

}

function loadApplicationFile_2332033038(self_2332033039, name_2332033040) {
  var result_2332033041 = [];

  return result_2332033041;

}

function loadApplicationFile_2332033042(self_2332033039, name_2332033040) {
  var result_2332033043 = [];

  BeforeRet: {
    chckNilDisp(self_2332033039);
    if (isObj(self_2332033039.m_type, NTI2348810244)) {
    result_2332033043 = loadApplicationFile_2348810263(self_2332033039, name_2332033040);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033039.m_type, NTI2332033028)) {
    result_2332033043 = loadApplicationFile_2332033038(self_2332033039, name_2332033040);
    break BeforeRet;
    }
    }
  };

  return result_2332033043;

}

function getAccessToken_2248146974() {
  var result_2248146976 = ({val: [], has: false});

  BeforeRet: {
    var token_2248146977 = loadApplicationFile_2332033042(fs_2332033077, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2248146977).length)) {
    result_2248146976 = nimCopy(result_2248146976, some_2248146978(token_2248146977), NTI2315255829);
    break BeforeRet;
    }
    
    result_2248146976 = nimCopy(result_2248146976, none_2315255831(), NTI2315255829);
    break BeforeRet;
  };

  return result_2248146976;

}

function decode_2281701871(s_2281701872) {
    
function decodeSize_2281701874(size_2281701875) {
      var result_2281701876 = 0;

      BeforeRet: {
        result_2281701876 = addInt(divInt(mulInt(size_2281701875, 3), 4), 6);
        break BeforeRet;
      };

      return result_2281701876;

    }
    var Temporary1;

  var result_2281701873 = [];

  BeforeRet: {
    if (((s_2281701872).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2281701873.length < (Temporary1 = chckRange(decodeSize_2281701874((s_2281701872).length), 0, 2147483647), Temporary1)) { for (var i = result_2281701873.length; i < Temporary1; ++i) result_2281701873.push(0); }
         else {result_2281701873.length = Temporary1; };
    var inputIndex_2281701881 = 0;
    var outputIndex_2281701882 = 0;
    var inputLen_2281701883 = (s_2281701872).length;
    var inputEnds_2281701884 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet322[s_2281701872[chckIndx(subInt(inputLen_2281701883, 1), 0, (s_2281701872).length - 1)]] != undefined)) break Label3;
          inputLen_2281701883 = subInt(inputLen_2281701883, 1);
        }
    };
    inputEnds_2281701884 = subInt(inputLen_2281701883, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2281701881 <= inputEnds_2281701884)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet323[s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]] != undefined)) break Label7;
                inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
              }
          };
          var a_2281701906 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((a_2281701906 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var b_2281701919 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((b_2281701919 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var c_2281701932 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((c_2281701932 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var d_2281701945 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((d_2281701945 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281701906 << 2) | (b_2281701919 >> 4)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((b_2281701919 << 4) | (c_2281701932 >> 2)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((c_2281701932 << 6) | (d_2281701945 >> 0)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
        }
    };
    var leftLen_2281701994 = absInt(modInt(subInt(inputIndex_2281701881, inputLen_2281701883), 4));
    if ((leftLen_2281701994 == 2)) {
    var a_2281701998 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((a_2281701998 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var b_2281702011 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((b_2281702011 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281701998 << 2) | (b_2281702011 >> 4)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    }
    else {
    if ((leftLen_2281701994 == 3)) {
    var a_2281702037 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((a_2281702037 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var b_2281702050 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((b_2281702050 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var c_2281702063 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((c_2281702063 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281702037 << 2) | (b_2281702050 >> 4)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((b_2281702050 << 4) | (c_2281702063 >> 2)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    }
    }
    if (result_2281701873.length < chckRange(outputIndex_2281701882, 0, 2147483647)) { for (var i = result_2281701873.length; i < chckRange(outputIndex_2281701882, 0, 2147483647); ++i) result_2281701873.push(0); }
         else {result_2281701873.length = chckRange(outputIndex_2281701882, 0, 2147483647); };
  };

  return result_2281701873;

}
async function loadFile_2248147443(self_2248147444, relativePath_2248147445) {
    var Temporary1;

  var result_2248147447 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2248147445, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2248147445, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2248147445;
    }
    
    var relativePath_2248147475 = nimCopy(null, Temporary1, NTI33554449);
    var url_2248147476 = (self_2248147444.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2248147475 || [],[63,114,101,102,61] || [],self_2248147444.branchOrHash || []);
    var fmtRes_2248147481 = [mnewString(0)];
    fmtRes_2248147481[0].push.apply(fmtRes_2248147481[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2248147481, 0, url_2248147476, []);
    fmtRes_2248147481[0].push.apply(fmtRes_2248147481[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2248147481[0], NTI33554449)]);
    var token_2248147482 = getAccessToken_2248146974();
    var response_2248147487 = (await httpGet_2315255824(url_2248147476, token_2248147482));
++excHandler;
    try {
    var jsn_2248147488 = parseJson_1627395313(response_2248147487);
    if (hasKey_1627393154(jsn_2248147488, [99,111,110,116,101,110,116])) {
    var contentBase64_2248147489 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2248147488, [99,111,110,116,101,110,116]), []);
    var content_2248147490 = decode_2281701871(contentBase64_2248147489);
    result_2248147447 = content_2248147490;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2248147498 = [mnewString(0)];
    fmtRes_2248147498[0].push.apply(fmtRes_2248147498[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2248147498, 0, response_2248147487, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248147498[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2248147447 = [];
    break BeforeRet;
  };

  return result_2248147447;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2231369740(self_2231369741, relativePath_2231369742) {
  var result_2231369743 = [];

    result_2231369743 = nimCopy(null, HEX2F_1426063446(self_2231369741.path, relativePath_2231369742), NTI33554449);

  return result_2231369743;

}
async function loadFile_2231369768(self_2231369769, relativePath_2231369770) {
  var result_2231369772 = null;

  BeforeRet: {
    result_2231369772 = readFile_503316918(getAbsolutePath_2231369740(self_2231369769, relativePath_2231369770));
    break BeforeRet;
  };

  return result_2231369772;

}

function loadFile_2181038107(self_2181038108, relativePath_2181038109) {
  var result_2181038112 = null;

  return result_2181038112;

}

function loadFile_2181038113(self_2181038108, relativePath_2181038109) {
  var result_2181038114 = null;

  BeforeRet: {
    chckNilDisp(self_2181038108);
    if (isObj(self_2181038108.m_type, NTI2365587461)) {
    result_2181038114 = loadFile_2365587950(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2248146948)) {
    result_2181038114 = loadFile_2248147443(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2231369732)) {
    result_2181038114 = loadFile_2231369768(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2181038088)) {
    result_2181038114 = loadFile_2181038107(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038114;

}
async function httpPost_2315255895(url_2315255896, content_2315255897, authToken_2315255906) {
  var result_2315255908 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2315255896), toJSStr(content_2315255897), toJSStr(get_2315255863(authToken_2315255906, []))));
    result_2315255908 = undefined;
    break BeforeRet;
  };

  return result_2315255908;

}
async function saveFile_2365587997(self_2365587998, relativePath_2365587999, content_2365588000) {
    var Temporary1;

  var result_2365588002 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2365587999, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2365587999, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2365587999;
    }
    
    var relativePath_2365588026 = nimCopy(null, Temporary1, NTI33554449);
    var url_2365588027 = (self_2365587998.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2365588026 || []);
    var fmtRes_2365588032 = [mnewString(0)];
    fmtRes_2365588032[0].push.apply(fmtRes_2365588032[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2365588032, 0, url_2365588027, []);
    fmtRes_2365588032[0].push.apply(fmtRes_2365588032[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2365588032[0], NTI33554449)]);
    (await httpPost_2315255895(url_2365588027, content_2365588000, none_2315255831()));
    result_2365588002 = undefined;
    break BeforeRet;
  };

  return result_2365588002;

}
async function saveFile_2248147503(self_2248147504, relativePath_2248147505, content_2248147506) {
  var result_2248147508 = null;

  BeforeRet: {
    result_2248147508 = undefined;
    break BeforeRet;
  };

  return result_2248147508;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2231369795(self_2231369796, relativePath_2231369797, content_2231369798) {
  var result_2231369800 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2231369740(self_2231369796, relativePath_2231369797), content_2231369798);
    result_2231369800 = undefined;
    break BeforeRet;
  };

  return result_2231369800;

}

function saveFile_2181038115(self_2181038116, relativePath_2181038117, content_2181038118) {
  var result_2181038120 = null;

  return result_2181038120;

}

function saveFile_2181038121(self_2181038116, relativePath_2181038117, content_2181038118) {
  var result_2181038122 = null;

  BeforeRet: {
    chckNilDisp(self_2181038116);
    if (isObj(self_2181038116.m_type, NTI2365587461)) {
    result_2181038122 = saveFile_2365587997(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2248146948)) {
    result_2181038122 = saveFile_2248147503(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2231369732)) {
    result_2181038122 = saveFile_2231369795(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2181038088)) {
    result_2181038122 = saveFile_2181038115(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038122;

}

function rawGet_2365588134(t_2365588137, key_2365588138, hc_2365588139, hc_2365588139_Idx) {
  var result_2365588140 = 0;

  BeforeRet: {
    hc_2365588139[hc_2365588139_Idx] = hash_1325400491(key_2365588138);
    if ((hc_2365588139[hc_2365588139_Idx] == 0)) {
    hc_2365588139[hc_2365588139_Idx] = 314159265;
    }
    
    if (((t_2365588137.data).length == 0)) {
    result_2365588140 = -1;
    break BeforeRet;
    }
    
    var h_2365588191 = (hc_2365588139[hc_2365588139_Idx] & (t_2365588137.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2365588137.data[chckIndx(h_2365588191, 0, (t_2365588137.data).length - 1)].Field0)) break Label2;
          if (((t_2365588137.data[chckIndx(h_2365588191, 0, (t_2365588137.data).length - 1)].Field0 == hc_2365588139[hc_2365588139_Idx]) && eqStrings(t_2365588137.data[chckIndx(h_2365588191, 0, (t_2365588137.data).length - 1)].Field1, key_2365588138))) {
          result_2365588140 = h_2365588191;
          break BeforeRet;
          }
          
          h_2365588191 = nextTry_1308622883(h_2365588191, (t_2365588137.data).length - 1);
        }
    };
    result_2365588140 = subInt(-1, h_2365588191);
  };

  return result_2365588140;

}

function hasKey_2365588127(t_2365588130, key_2365588131) {
  var result_2365588132 = false;

    var hc_2365588133 = [0];
    result_2365588132 = (0 <= rawGet_2365588134(t_2365588130, key_2365588131, hc_2365588133, 0));

  return result_2365588132;

}

function contains_2365588121(t_2365588124, key_2365588125) {
  var result_2365588126 = false;

  BeforeRet: {
    result_2365588126 = hasKey_2365588127(t_2365588124, key_2365588125);
    break BeforeRet;
  };

  return result_2365588126;

}

function HEX5BHEX5D_2365588425(t_2365588428, key_2365588429) {
  var result_2365588430 = null;

    var hcHEX60gensym22_2365588431 = [0];
    var indexHEX60gensym22_2365588438 = rawGet_2365588134(t_2365588428, key_2365588429, hcHEX60gensym22_2365588431, 0);
    if ((0 <= indexHEX60gensym22_2365588438)) {
    result_2365588430 = t_2365588428.data[chckIndx(indexHEX60gensym22_2365588438, 0, (t_2365588428.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2365588429);
    }
    

  return result_2365588430;

}

function mustRehash_2365588829(t_2365588831) {
  var result_2365588832 = false;

    if (!((t_2365588831.counter < (t_2365588831.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2365588832 = ((mulInt((t_2365588831.data).length, 2) < mulInt(t_2365588831.counter, 3)) || (subInt((t_2365588831.data).length, t_2365588831.counter) < 4));

  return result_2365588832;

}

function rawInsert_2365589278(t_2365589282, data_2365589283, data_2365589283_Idx, key_2365589284, val_2365589285, hc_2365589286, h_2365589287) {
    data_2365589283[data_2365589283_Idx][chckIndx(h_2365589287, 0, (data_2365589283[data_2365589283_Idx]).length - 1)].Field1 = nimCopy(null, key_2365589284, NTI33554449);
    data_2365589283[data_2365589283_Idx][chckIndx(h_2365589287, 0, (data_2365589283[data_2365589283_Idx]).length - 1)].Field2 = nimCopy(data_2365589283[data_2365589283_Idx][chckIndx(h_2365589287, 0, (data_2365589283[data_2365589283_Idx]).length - 1)].Field2, val_2365589285, NTI2365587459);
    data_2365589283[data_2365589283_Idx][chckIndx(h_2365589287, 0, (data_2365589283[data_2365589283_Idx]).length - 1)].Field0 = hc_2365589286;

  
}

function enlarge_2365588984(t_2365588987) {
    var n_2365588990 = [];
    n_2365588990 = new Array(chckRange(mulInt((t_2365588987.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2365588987.data).length, 2), 0, 2147483647) ; ++i) { n_2365588990[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    var Temporary1 = t_2365588987.data; t_2365588987.data = n_2365588990; n_2365588990 = Temporary1;    Label2: {
      var i_2365589054 = 0;
      var colontmp__536872298 = 0;
      colontmp__536872298 = (n_2365588990).length - 1;
      var res_536872299 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872299 <= colontmp__536872298)) break Label4;
            i_2365589054 = res_536872299;
            var eh_2365589108 = n_2365588990[chckIndx(i_2365589054, 0, (n_2365588990).length - 1)].Field0;
            if (isFilled_1308622880(eh_2365589108)) {
            var j_2365589112 = (eh_2365589108 & (t_2365588987.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2365588987.data[chckIndx(j_2365589112, 0, (t_2365588987.data).length - 1)].Field0)) break Label6;
                  j_2365589112 = nextTry_1308622883(j_2365589112, (t_2365588987.data).length - 1);
                }
            };
            rawInsert_2365589278(t_2365588987, t_2365588987, "data", n_2365588990[chckIndx(i_2365589054, 0, (n_2365588990).length - 1)].Field1, n_2365588990[chckIndx(i_2365589054, 0, (n_2365588990).length - 1)].Field2, eh_2365589108, j_2365589112);
            }
            
            res_536872299 = addInt(res_536872299, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2365589447(t_2365589450, key_2365589451, hc_2365589452) {
  var result_2365589453 = 0;

  BeforeRet: {
    if (((t_2365589450.data).length == 0)) {
    result_2365589453 = -1;
    break BeforeRet;
    }
    
    var h_2365589504 = (hc_2365589452 & (t_2365589450.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2365589450.data[chckIndx(h_2365589504, 0, (t_2365589450.data).length - 1)].Field0)) break Label2;
          if (((t_2365589450.data[chckIndx(h_2365589504, 0, (t_2365589450.data).length - 1)].Field0 == hc_2365589452) && eqStrings(t_2365589450.data[chckIndx(h_2365589504, 0, (t_2365589450.data).length - 1)].Field1, key_2365589451))) {
          result_2365589453 = h_2365589504;
          break BeforeRet;
          }
          
          h_2365589504 = nextTry_1308622883(h_2365589504, (t_2365589450.data).length - 1);
        }
    };
    result_2365589453 = subInt(-1, h_2365589504);
  };

  return result_2365589453;

}

function HEX5BHEX5DHEX3D_2365588656(t_2365588659, key_2365588660, val_2365588661) {
    if (((t_2365588659.data).length == 0)) {
    var correctSizeHEX60gensym25_2365588710 = slotsNeeded_1308622891(32);
    t_2365588659.counter = 0;
    t_2365588659.data = new Array(chckRange(correctSizeHEX60gensym25_2365588710, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2365588710, 0, 2147483647) ; ++i) { t_2365588659.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    }
    
    var hc_2365588715 = [0];
    var index_2365588722 = rawGet_2365588134(t_2365588659, key_2365588660, hc_2365588715, 0);
    if ((0 <= index_2365588722)) {
    t_2365588659.data[chckIndx(index_2365588722, 0, (t_2365588659.data).length - 1)].Field2 = nimCopy(t_2365588659.data[chckIndx(index_2365588722, 0, (t_2365588659.data).length - 1)].Field2, val_2365588661, NTI2365587459);
    }
    else {
      if (((t_2365588659.data).length == 0)) {
      var correctSizeHEX60gensym28_2365588824 = slotsNeeded_1308622891(32);
      t_2365588659.counter = 0;
      t_2365588659.data = new Array(chckRange(correctSizeHEX60gensym28_2365588824, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2365588824, 0, 2147483647) ; ++i) { t_2365588659.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }      }
      
      if (mustRehash_2365588829(t_2365588659)) {
      enlarge_2365588984(t_2365588659);
      index_2365588722 = rawGetKnownHC_2365589447(t_2365588659, key_2365588660, hc_2365588715[0]);
      }
      
      index_2365588722 = subInt(-1, index_2365588722);
      rawInsert_2365589278(t_2365588659, t_2365588659, "data", key_2365588660, val_2365588661, hc_2365588715[0], index_2365588722);
      t_2365588659.counter = addInt(t_2365588659.counter, 1);
    }
    

  
}

function parseDirectoryListing_2365588037(self_2365588038, basePath_2365588039, jsn_2365588040) {
        var Temporary3;
        var Temporary8;

  var result_2365588041 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2365588040, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2365588040, [102,105,108,101,115]).kind == 6))) {
    var files_2365588046 = HEX5BHEX5D_1627393037(jsn_2365588040, [102,105,108,101,115]);
    Label1: {
      var item_2365588047 = null;
      if (!((files_2365588046.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2365588046.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872304 = null;
        var colontmp__536872305 = [];
        var Temporary3 = files_2365588046;
        if (ConstSet324[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872305 = Temporary3.elems;
        var i_536872306 = 0;
        var L_536872307 = (colontmp__536872305).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872306 < L_536872307)) break Label5;
              i_536872304 = colontmp__536872305[chckIndx(i_536872306, 0, (colontmp__536872305).length - 1)];
              item_2365588047 = i_536872304;
              result_2365588041.files.push(getStr_1627390106(item_2365588047, []));;
              i_536872306 = addInt(i_536872306, 1);
              if (!(((colontmp__536872305).length == L_536872307))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2365588040, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2365588040, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2365588056 = HEX5BHEX5D_1627393037(jsn_2365588040, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2365588057 = null;
      if (!((folders_2365588056.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2365588056.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872311 = null;
        var colontmp__536872312 = [];
        var Temporary8 = folders_2365588056;
        if (ConstSet325[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872312 = Temporary8.elems;
        var i_536872313 = 0;
        var L_536872314 = (colontmp__536872312).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872313 < L_536872314)) break Label10;
              i_536872311 = colontmp__536872312[chckIndx(i_536872313, 0, (colontmp__536872312).length - 1)];
              item_2365588057 = i_536872311;
              result_2365588041.folders.push(getStr_1627390106(item_2365588057, []));;
              i_536872313 = addInt(i_536872313, 1);
              if (!(((colontmp__536872312).length == L_536872314))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2365588041;

}
async function getDirectoryListing_2365588065(self_2365588066, relativePath_2365588067) {
    var Temporary3;

  var result_2365588069 = null;

  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(contains_2365588121(self_2365588066.cachedDirectoryListings, relativePath_2365588067) && !(HEX5BHEX5D_2365588425(self_2365588066.cachedDirectoryListings, relativePath_2365588067).done))) break Label2;
          (await (new Promise(resolve => setTimeout(resolve, 2))));
        }
    };
    if (contains_2365588121(self_2365588066.cachedDirectoryListings, relativePath_2365588067)) {
    result_2365588069 = HEX5BHEX5D_2365588425(self_2365588066.cachedDirectoryListings, relativePath_2365588067).listing;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2365588656(self_2365588066.cachedDirectoryListings, relativePath_2365588067, {done: false, listing: ({files: [], folders: []})});
    if ((((relativePath_2365588067).length == 0) || eqStrings(relativePath_2365588067, [46]))) {
    Temporary3 = (self_2365588066.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary3 = (self_2365588066.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2365588067 || []);
    }
    
    var url_2365589685 = nimCopy(null, Temporary3, NTI33554449);
    var response_2365589690 = (await httpGet_2315255824(url_2365589685, none_2315255831()));
++excHandler;
    try {
    var jsn_2365589691 = parseJson_1627395313(response_2365589690);
    var listing_2365589692 = parseDirectoryListing_2365588037(self_2365588066, relativePath_2365588067, jsn_2365589691);
    HEX5BHEX5DHEX3D_2365588656(self_2365588066.cachedDirectoryListings, relativePath_2365588067, {done: true, listing: nimCopy(null, listing_2365589692, NTI2181038085)});
    result_2365588069 = listing_2365589692;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2365589746 = [mnewString(0)];
    fmtRes_2365589746[0].push.apply(fmtRes_2365589746[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2365589746, 0, response_2365589690, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2365589746[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (contains_2365588121(self_2365588066.cachedDirectoryListings, relativePath_2365588067)) {
    HEX5BHEX5D_2365588425(self_2365588066.cachedDirectoryListings, relativePath_2365588067).done = true;
    result_2365588069 = HEX5BHEX5D_2365588425(self_2365588066.cachedDirectoryListings, relativePath_2365588067).listing;
    break BeforeRet;
    }
    
    result_2365588069 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2365588069;

}

function rawGet_2248147659(t_2248147662, key_2248147663, hc_2248147664, hc_2248147664_Idx) {
  var result_2248147665 = 0;

  BeforeRet: {
    hc_2248147664[hc_2248147664_Idx] = hash_1325400491(key_2248147663);
    if ((hc_2248147664[hc_2248147664_Idx] == 0)) {
    hc_2248147664[hc_2248147664_Idx] = 314159265;
    }
    
    if (((t_2248147662.data).length == 0)) {
    result_2248147665 = -1;
    break BeforeRet;
    }
    
    var h_2248147716 = (hc_2248147664[hc_2248147664_Idx] & (t_2248147662.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field0)) break Label2;
          if (((t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field0 == hc_2248147664[hc_2248147664_Idx]) && eqStrings(t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field1, key_2248147663))) {
          result_2248147665 = h_2248147716;
          break BeforeRet;
          }
          
          h_2248147716 = nextTry_1308622883(h_2248147716, (t_2248147662.data).length - 1);
        }
    };
    result_2248147665 = subInt(-1, h_2248147716);
  };

  return result_2248147665;

}

function hasKey_2248147652(t_2248147655, key_2248147656) {
  var result_2248147657 = false;

    var hc_2248147658 = [0];
    result_2248147657 = (0 <= rawGet_2248147659(t_2248147655, key_2248147656, hc_2248147658, 0));

  return result_2248147657;

}

function contains_2248147646(t_2248147649, key_2248147650) {
  var result_2248147651 = false;

  BeforeRet: {
    result_2248147651 = hasKey_2248147652(t_2248147649, key_2248147650);
    break BeforeRet;
  };

  return result_2248147651;

}

function HEX5BHEX5D_2248147950(t_2248147953, key_2248147954) {
  var result_2248147955 = null;

    var hcHEX60gensym22_2248147956 = [0];
    var indexHEX60gensym22_2248147963 = rawGet_2248147659(t_2248147953, key_2248147954, hcHEX60gensym22_2248147956, 0);
    if ((0 <= indexHEX60gensym22_2248147963)) {
    result_2248147955 = t_2248147953.data[chckIndx(indexHEX60gensym22_2248147963, 0, (t_2248147953.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2248147954);
    }
    

  return result_2248147955;

}

function parseDirectoryListing_2248147514(self_2248147515, basePath_2248147516, jsn_2248147517) {
        var Temporary3;

  var result_2248147518 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2248147517, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2248147517, [116,114,101,101]).kind == 6))) {
    var tree_2248147523 = HEX5BHEX5D_1627393037(jsn_2248147517, [116,114,101,101]);
    Label1: {
      var item_2248147524 = null;
      if (!((tree_2248147523.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2248147523.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872320 = null;
        var colontmp__536872321 = [];
        var Temporary3 = tree_2248147523;
        if (ConstSet326[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872321 = Temporary3.elems;
        var i_536872322 = 0;
        var L_536872323 = (colontmp__536872321).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872322 < L_536872323)) break Label5;
              i_536872320 = colontmp__536872321[chckIndx(i_536872322, 0, (colontmp__536872321).length - 1)];
              item_2248147524 = i_536872320;
              Label6: {
                if (!((item_2248147524.kind == 5))) {
                break Label6;
                }
                
                var path_2248147529 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [112,97,116,104]), []);
                var typ_2248147530 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [116,121,112,101]), []);
                var url_2248147531 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [117,114,108]), []);
                var sha_2248147532 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2248147515.pathToSha, HEX2F_1426063446(basePath_2248147516, path_2248147529), sha_2248147532);
                switch (toJSStr(typ_2248147530)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2248147529, NTI33554449);
                  result_2248147518.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2248147529, NTI33554449);
                  result_2248147518.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872322 = addInt(i_536872322, 1);
              if (!(((colontmp__536872321).length == L_536872323))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2248147518;

}

function mustRehash_2248148372(t_2248148374) {
  var result_2248148375 = false;

    if (!((t_2248148374.counter < (t_2248148374.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2248148375 = ((mulInt((t_2248148374.data).length, 2) < mulInt(t_2248148374.counter, 3)) || (subInt((t_2248148374.data).length, t_2248148374.counter) < 4));

  return result_2248148375;

}

function rawInsert_2248148821(t_2248148825, data_2248148826, data_2248148826_Idx, key_2248148827, val_2248148828, hc_2248148829, h_2248148830) {
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field1 = nimCopy(null, key_2248148827, NTI33554449);
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field2 = nimCopy(data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field2, val_2248148828, NTI2181038085);
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field0 = hc_2248148829;

  
}

function enlarge_2248148527(t_2248148530) {
    var n_2248148533 = [];
    n_2248148533 = new Array(chckRange(mulInt((t_2248148530.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2248148530.data).length, 2), 0, 2147483647) ; ++i) { n_2248148533[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2248148530.data; t_2248148530.data = n_2248148533; n_2248148533 = Temporary1;    Label2: {
      var i_2248148597 = 0;
      var colontmp__536872327 = 0;
      colontmp__536872327 = (n_2248148533).length - 1;
      var res_536872328 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872328 <= colontmp__536872327)) break Label4;
            i_2248148597 = res_536872328;
            var eh_2248148651 = n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field0;
            if (isFilled_1308622880(eh_2248148651)) {
            var j_2248148655 = (eh_2248148651 & (t_2248148530.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2248148530.data[chckIndx(j_2248148655, 0, (t_2248148530.data).length - 1)].Field0)) break Label6;
                  j_2248148655 = nextTry_1308622883(j_2248148655, (t_2248148530.data).length - 1);
                }
            };
            rawInsert_2248148821(t_2248148530, t_2248148530, "data", n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field1, n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field2, eh_2248148651, j_2248148655);
            }
            
            res_536872328 = addInt(res_536872328, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2248148990(t_2248148993, key_2248148994, hc_2248148995) {
  var result_2248148996 = 0;

  BeforeRet: {
    if (((t_2248148993.data).length == 0)) {
    result_2248148996 = -1;
    break BeforeRet;
    }
    
    var h_2248149047 = (hc_2248148995 & (t_2248148993.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field0)) break Label2;
          if (((t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field0 == hc_2248148995) && eqStrings(t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field1, key_2248148994))) {
          result_2248148996 = h_2248149047;
          break BeforeRet;
          }
          
          h_2248149047 = nextTry_1308622883(h_2248149047, (t_2248148993.data).length - 1);
        }
    };
    result_2248148996 = subInt(-1, h_2248149047);
  };

  return result_2248148996;

}

function HEX5BHEX5DHEX3D_2248148199(t_2248148202, key_2248148203, val_2248148204) {
    if (((t_2248148202.data).length == 0)) {
    var correctSizeHEX60gensym22_2248148253 = slotsNeeded_1308622891(32);
    t_2248148202.counter = 0;
    t_2248148202.data = new Array(chckRange(correctSizeHEX60gensym22_2248148253, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2248148253, 0, 2147483647) ; ++i) { t_2248148202.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2248148258 = [0];
    var index_2248148265 = rawGet_2248147659(t_2248148202, key_2248148203, hc_2248148258, 0);
    if ((0 <= index_2248148265)) {
    t_2248148202.data[chckIndx(index_2248148265, 0, (t_2248148202.data).length - 1)].Field2 = nimCopy(t_2248148202.data[chckIndx(index_2248148265, 0, (t_2248148202.data).length - 1)].Field2, val_2248148204, NTI2181038085);
    }
    else {
      if (((t_2248148202.data).length == 0)) {
      var correctSizeHEX60gensym25_2248148367 = slotsNeeded_1308622891(32);
      t_2248148202.counter = 0;
      t_2248148202.data = new Array(chckRange(correctSizeHEX60gensym25_2248148367, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2248148367, 0, 2147483647) ; ++i) { t_2248148202.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2248148372(t_2248148202)) {
      enlarge_2248148527(t_2248148202);
      index_2248148265 = rawGetKnownHC_2248148990(t_2248148202, key_2248148203, hc_2248148258[0]);
      }
      
      index_2248148265 = subInt(-1, index_2248148265);
      rawInsert_2248148821(t_2248148202, t_2248148202, "data", key_2248148203, val_2248148204, hc_2248148258[0], index_2248148265);
      t_2248148202.counter = addInt(t_2248148202.counter, 1);
    }
    

  
}
async function getDirectoryListing_2248147590(self_2248147591, relativePath_2248147592) {
    var Temporary1;
    var Temporary2;

  var result_2248147594 = null;

  BeforeRet: {
    if (contains_2248147646(self_2248147591.cachedDirectoryListings, relativePath_2248147592)) {
    result_2248147594 = HEX5BHEX5D_2248147950(self_2248147591.cachedDirectoryListings, relativePath_2248147592);
    break BeforeRet;
    }
    
    var fmtRes_2248148036 = [mnewString(0)];
    fmtRes_2248148036[0].push.apply(fmtRes_2248148036[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2248148036, 0, self_2248147591.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2248148036[0], NTI33554449)]);
    var token_2248148037 = getAccessToken_2248146974();
    if ((((relativePath_2248147592).length == 0) || eqStrings(relativePath_2248147592, [46]))) {
    Temporary1 = (self_2248147591.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2248147591.branchOrHash || []);
    }
    else {
    if (contains_2348810309(self_2248147591.pathToSha, relativePath_2248147592)) {
    Temporary1 = (self_2248147591.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2248147591.pathToSha, relativePath_2248147592), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2248148147 = [mnewString(0)];
      fmtRes_2248148147[0].push.apply(fmtRes_2248148147[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2248148147, 0, relativePath_2248147592, []);
      fmtRes_2248148147[0].push.apply(fmtRes_2248148147[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248148147[0], NTI33554449)]);
      result_2248147594 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2248148151 = nimCopy(null, Temporary1, NTI33554449);
    var response_2248148156 = (await httpGet_2315255824(url_2248148151, token_2248148037));
++excHandler;
    try {
    var jsn_2248148157 = parseJson_1627395313(response_2248148156);
    var listing_2248148158 = parseDirectoryListing_2248147514(self_2248147591, relativePath_2248147592, jsn_2248148157);
    HEX5BHEX5DHEX3D_2248148199(self_2248147591.cachedDirectoryListings, relativePath_2248147592, listing_2248148158);
    result_2248147594 = listing_2248148158;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2248149235 = [mnewString(0)];
    fmtRes_2248149235[0].push.apply(fmtRes_2248149235[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2248149235, 0, response_2248148156, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248149235[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2248147594 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2248147594;

}
async function getDirectoryListing_2231369818(self_2231369819, relativePath_2231369820) {
  var result_2231369822 = null;

  return result_2231369822;

}

function getDirectoryListing_2181038123(self_2181038124, relativePath_2181038125) {
  var result_2181038128 = null;

  return result_2181038128;

}

function getDirectoryListing_2181038129(self_2181038124, relativePath_2181038125) {
  var result_2181038130 = null;

  BeforeRet: {
    chckNilDisp(self_2181038124);
    if (isObj(self_2181038124.m_type, NTI2365587461)) {
    result_2181038130 = getDirectoryListing_2365588065(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2248146948)) {
    result_2181038130 = getDirectoryListing_2248147590(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2231369732)) {
    result_2181038130 = getDirectoryListing_2231369818(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2181038088)) {
    result_2181038130 = getDirectoryListing_2181038123(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038130;

}

function loadFile_2348810248(self_2348810249, path_2348810250) {
  var result_2348810251 = [];

  BeforeRet: {
    result_2348810251 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2348810250))), NTI33554449);
    break BeforeRet;
  };

  return result_2348810251;

}

function loadFile_2332033027(self_2332033028, path_2332033029) {
  var result_2332033030 = [];

  return result_2332033030;

}

function loadFile_2332033031(self_2332033028, path_2332033029) {
  var result_2332033032 = [];

  BeforeRet: {
    chckNilDisp(self_2332033028);
    if (isObj(self_2332033028.m_type, NTI2348810244)) {
    result_2332033032 = loadFile_2348810248(self_2332033028, path_2332033029);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033028.m_type, NTI2332033028)) {
    result_2332033032 = loadFile_2332033027(self_2332033028, path_2332033029);
    break BeforeRet;
    }
    }
  };

  return result_2332033032;

}

function saveFile_2348810252(self_2348810253, path_2348810254, content_2348810255) {
  
}

function saveFile_2332033033(self_2332033034, path_2332033035, content_2332033036) {
  
}

function saveFile_2332033037(self_2332033034, path_2332033035, content_2332033036) {
    chckNilDisp(self_2332033034);
    if (isObj(self_2332033034.m_type, NTI2348810244)) {
    saveFile_2348810252(self_2332033034, path_2332033035, content_2332033036);
    }
    else {
    if (isObj(self_2332033034.m_type, NTI2332033028)) {
    saveFile_2332033033(self_2332033034, path_2332033035, content_2332033036);
    }
    }

  
}

function saveApplicationFile_2348810424(self_2348810425, name_2348810426, content_2348810427) {
    window.localStorage.setItem(toJSStr(name_2348810426), toJSStr(content_2348810427));

  
}

function saveApplicationFile_2332033044(self_2332033045, name_2332033046, content_2332033047) {
  
}

function saveApplicationFile_2332033048(self_2332033045, name_2332033046, content_2332033047) {
    chckNilDisp(self_2332033045);
    if (isObj(self_2332033045.m_type, NTI2348810244)) {
    saveApplicationFile_2348810424(self_2332033045, name_2332033046, content_2332033047);
    }
    else {
    if (isObj(self_2332033045.m_type, NTI2332033028)) {
    saveApplicationFile_2332033044(self_2332033045, name_2332033046, content_2332033047);
    }
    }

  
}
async function updateWorkspaceName_2365587925(self_2365587926) {
  var result_2365587928 = null;

  BeforeRet: {
    var url_2365587934 = (self_2365587926.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2365587939 = (await httpGet_2315255824(url_2365587934, none_2315255831()));
    var fmtRes_2365587944 = [mnewString(0)];
    fmtRes_2365587944[0].push.apply(fmtRes_2365587944[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2365587944, 0, self_2365587926.baseUrl, []);
    fmtRes_2365587944[0].push.apply(fmtRes_2365587944[0], [47]);;
    formatValue_721420459(fmtRes_2365587944, 0, localFolder_2365587939, []);
    self_2365587926.name = nimCopy(null, fmtRes_2365587944[0], NTI33554449);
    result_2365587928 = undefined;
    break BeforeRet;
  };

  return result_2365587928;

}
async function updateWorkspaceName_2365587945(self_2365587926) {
  var result_2365587946 = null;

  BeforeRet: {
    result_2365587946 = updateWorkspaceName_2365587925(self_2365587926);
    break BeforeRet;
  };

  return result_2365587946;

}

function HEX24_2952794220(document_2952794221) {
  var result_2952794222 = [];

  BeforeRet: {
    result_2952794222 = nimCopy(null, document_2952794221.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2952794222;

}

function HEX24_2818578783(document_2818578784) {
  var result_2818578785 = [];

  BeforeRet: {
    result_2818578785 = nimCopy(null, document_2818578784.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818578785;

}

function HEX24_2164260875(document_2164260876) {
  var result_2164260877 = [];

  BeforeRet: {
    result_2164260877 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2164260877;

}

function HEX24_2164260878(document_2164260876) {
  var result_2164260879 = [];

  BeforeRet: {
    chckNilDisp(document_2164260876);
    if (isObj(document_2164260876.m_type, NTI2952791498)) {
    result_2164260879 = HEX24_2952794220(document_2164260876);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260876.m_type, NTI2818572427)) {
    result_2164260879 = HEX24_2818578783(document_2164260876);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260876.m_type, NTI2164260868)) {
    result_2164260879 = HEX24_2164260875(document_2164260876);
    break BeforeRet;
    }
    }}
  };

  return result_2164260879;

}

function toJson_2986346683(kind_2986346684, opt_2986346685) {
  var result_2986346686 = null;

  BeforeRet: {
    result_2986346686 = newJString_1627389994(reprEnum(kind_2986346684, NTI2986344451));
    break BeforeRet;
  };

  return result_2986346686;

}

function toJson_2046820620(id_2046820621, opt_2046820622) {
  var result_2046820623 = null;

  BeforeRet: {
    result_2046820623 = newJString_1627389994(HEX24_2046820589(id_2046820621));
    break BeforeRet;
  };

  return result_2046820623;

}

function join_2986346725(a_2986346727, sep_2986346728) {
  var result_2986346729 = [];

    result_2986346729 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2986346744 = 0;
      var x_2986346745 = 0;
      var i_536872337 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872337 < (a_2986346727).length)) break Label3;
            i_2986346744 = i_536872337;
            x_2986346745 = a_2986346727[chckIndx(i_536872337, 0, (a_2986346727).length - 1)];
            if ((0 < i_2986346744)) {
            result_2986346729.push.apply(result_2986346729, sep_2986346728);;
            }
            
            result_2986346729.push.apply(result_2986346729, HEX24_369098760(x_2986346745));;
            i_536872337 = addInt(i_536872337, 1);
          }
      };
    };

  return result_2986346729;

}

function toJson_2986346717(node_2986346718, opt_2986346719) {
  var result_2986346720 = null;

    result_2986346720 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [107,105,110,100], toJson_2986346683(node_2986346718.kind, opt_2986346719));
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [105,100], toJson_2046820620(node_2986346718.id, opt_2986346719));
    if (!(HEX3DHEX3D_2046820592(node_2986346718.reff, null_2046820612))) {
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [114,101,102,102], toJson_2046820620(node_2986346718.reff, opt_2986346719));
    }
    
    if ((0 < (node_2986346718.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [116,101,120,116], toJson_1811939932(node_2986346718.text, opt_2986346719));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [112,97,116,104], newJString_1627389994(join_2986346725(path_2986346403(node_2986346718), [44,32])));
    if ((0 < len_2986344536(node_2986346718))) {
    var children_2986346746 = newJArray_1627390082();
    Label1: {
      var child_2986346750 = null;
      var i_536872332 = 0;
      var L_536872333 = (node_2986346718.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872332 < L_536872333)) break Label3;
            child_2986346750 = node_2986346718.children[chckIndx(i_536872332, 0, (node_2986346718.children).length - 1)];
            add_1627390190(children_2986346746, toJson_2986346717(child_2986346750, opt_2986346719));
            i_536872332 = addInt(i_536872332, 1);
            if (!(((node_2986346718.children).length == L_536872333))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [99,104,105,108,100,114,101,110], children_2986346746);
    }
    

  return result_2986346720;

}

function get_2818578818(self_2818578820) {
  var result_2818578821 = null;

    if (isNone_2818578826(self_2818578820)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578821 = self_2818578820["val"];

  return result_2818578821;

}

function serializeHtml_3187672156(self_3187672157, theme_3187672158) {
  var result_3187672159 = [];

  BeforeRet: {
    var title_3187672160 = nimCopy(null, nossplitFile(self_3187672157.filename).Field1, NTI33554449);
    var body_3187672161 = [];
    var diagnosticsCss_3187672162 = [];
    var fmtRes_3187672167 = [mnewString(0)];
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3187672167, 0, diagnosticsCss_3187672162, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3187672167, 0, body_3187672161, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3187672159 = nimCopy(null, fmtRes_3187672167[0], NTI33554449);
    break BeforeRet;
  };

  return result_3187672159;

}

function saveHtml_2952794246(self_2952794247) {
    var pathParts_2952794248 = nossplitFile(self_2952794247.filename);
    var htmlPath_2952794249 = HEX2F_1426063446(pathParts_2952794248.Field0, (pathParts_2952794248.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2952794250 = serializeHtml_3187672156(self_2952794247, gEditor.theme);
    saveFile_2332033037(fs_2332033077, htmlPath_2952794249, html_2952794250);

  
}

function save_2952794251(self_2952794252, filename_2952794253, app_2952794254) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2952794253).length)) {
    Temporary1 = filename_2952794253;
    }
    else {
    Temporary1 = self_2952794252.filename;
    }
    
    self_2952794252.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2952794252.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2952794260 = [mnewString(0)];
    fmtRes_2952794260[0].push.apply(fmtRes_2952794260[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794260, 0, self_2952794252.filename, []);
    fmtRes_2952794260[0].push.apply(fmtRes_2952794260[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794260[0], NTI33554449)]);
    var serialized_2952794261 = toJson_2986346717(self_2952794252.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym59_2952794264 = nimCopy(null, self_2952794252.workspace, NTI2164260874);
      if (!isSome_2818578798(oHEX60gensym59_2952794264)) Temporary2 = false; else {        var ws_2952794287 = get_2818578818(oHEX60gensym59_2952794264);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2181038121(ws_2952794287, self_2952794252.filename, pretty_1627394477(serialized_2952794261, 2));
    }
    else {
    if (self_2952794252.appFile) {
    saveApplicationFile_2332033048(fs_2332033077, self_2952794252.filename, pretty_1627394477(serialized_2952794261, 2));
    }
    else {
    saveFile_2332033037(fs_2332033077, self_2952794252.filename, pretty_1627394477(serialized_2952794261, 2));
    }
    }
    saveHtml_2952794246(self_2952794252);

  
}

function save_2818578786(self_2818578787, filename_2818578788, app_2818578789) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818578788).length)) {
    Temporary1 = filename_2818578788;
    }
    else {
    Temporary1 = self_2818578787.filename;
    }
    
    self_2818578787.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818578787.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818578787.appFile = app_2818578789;
      var oHEX60gensym103_2818578793 = nimCopy(null, self_2818578787.workspace, NTI2164260874);
      if (!isSome_2818578798(oHEX60gensym103_2818578793)) Temporary2 = false; else {        var ws_2818578844 = get_2818578818(oHEX60gensym103_2818578793);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2181038121(ws_2818578844, self_2818578787.filename, contentString_2818573986(self_2818578787));
    }
    else {
    if (self_2818578787.appFile) {
    saveApplicationFile_2332033048(fs_2332033077, self_2818578787.filename, contentString_2818573986(self_2818578787));
    }
    else {
    saveFile_2332033037(fs_2332033077, self_2818578787.filename, contentString_2818573986(self_2818578787));
    }
    }

  
}

function save_2164260880(self_2164260881, filename_2164260882, app_2164260883) {
  
}

function save_2164260884(self_2164260881, filename_2164260882, app_2164260883) {
    chckNilDisp(self_2164260881);
    if (isObj(self_2164260881.m_type, NTI2952791498)) {
    save_2952794251(self_2164260881, filename_2164260882, app_2164260883);
    }
    else {
    if (isObj(self_2164260881.m_type, NTI2818572427)) {
    save_2818578786(self_2164260881, filename_2164260882, app_2164260883);
    }
    else {
    if (isObj(self_2164260881.m_type, NTI2164260868)) {
    save_2164260880(self_2164260881, filename_2164260882, app_2164260883);
    }
    }}

  
}

function parseEnum_2986346693(s_2986346695, default_2986346696) {
    var Temporary1;

  var result_2986346697 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2986346695))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_2986346696;
      break;
    }
    result_2986346697 = Temporary1;

  return result_2986346697;

}

function fromJsonHook_2986346690(t_2986346691, t_2986346691_Idx, jsonNode_2986346692) {
    var Temporary1;

    var Temporary1 = jsonNode_2986346692;
    if (ConstSet327[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_2986346691[t_2986346691_Idx] = parseEnum_2986346693(Temporary1.str, 0);

  
}

function fromJson_2986346761(a_2986346763, a_2986346763_Idx, b_2986346764, opt_2986346765) {
    if (!(!(HEX3DHEX3D_1627392026(b_2986346764, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_2986346764}));
    }
    
    fromJsonHook_2986346690(a_2986346763, a_2986346763_Idx, b_2986346764);

  
}

function jsonTo_2986346755(b_2986346757, opt_2986346759) {
  var result_2986346760 = [0];

    fromJson_2986346761(result_2986346760, 0, b_2986346757, opt_2986346759);

  return result_2986346760[0];

}

function fromJsonHook_2046820613(id_2046820614, json_2046820615) {
    var Temporary1;

    if ((json_2046820615.kind == 4)) {
    var Temporary1 = json_2046820615;
    if (ConstSet328[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820614 = nimCopy(id_2046820614, parseId_2046820606(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820614 = nimCopy(id_2046820614, null_2046820612, NTI2046820355);
    }
    

  
}

function fromJson_2986346778(a_2986346780, b_2986346781, opt_2986346782) {
    if (!(!(HEX3DHEX3D_1627392026(b_2986346781, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_2986346781}));
    }
    
    fromJsonHook_2046820613(a_2986346780, b_2986346781);

  
}

function jsonTo_2986346772(b_2986346774, opt_2986346776) {
  var result_2986346777 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_2986346778(result_2986346777[0], b_2986346774, opt_2986346776);

  return result_2986346777[0];

}

function jsonToAstNode_2986346751(json_2986346752, opt_2986346753) {
        var Temporary3;

  var result_2986346754 = null;

    result_2986346754 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_2986346754.kind = jsonTo_2986346755(HEX5BHEX5D_1627393037(json_2986346752, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_2986346754.id = nimCopy(result_2986346754.id, jsonTo_2986346772(HEX5BHEX5D_1627393037(json_2986346752, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_2986346752, [114,101,102,102])) {
    result_2986346754.reff = nimCopy(result_2986346754.reff, jsonTo_2986346772(HEX5BHEX5D_1627393037(json_2986346752, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_2986346752, [116,101,120,116])) {
    result_2986346754.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2986346752, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2986346752, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_2986346799 = null;
      var colontmp__536872340 = null;
      colontmp__536872340 = HEX5BHEX5D_1627393037(json_2986346752, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872340.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872340.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872342 = null;
        var colontmp__536872343 = [];
        var Temporary3 = colontmp__536872340;
        if (ConstSet329[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872343 = Temporary3.elems;
        var i_536872344 = 0;
        var L_536872345 = (colontmp__536872343).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872344 < L_536872345)) break Label5;
              i_536872342 = colontmp__536872343[chckIndx(i_536872344, 0, (colontmp__536872343).length - 1)];
              child_2986346799 = i_536872342;
              add_2986344486(result_2986346754, jsonToAstNode_2986346751(child_2986346799, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872344 = addInt(i_536872344, 1);
              if (!(((colontmp__536872343).length == L_536872345))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2986346754;

}

function clear_3003235180(t_3003235183) {
    Label1: {
      var i_3003235269 = 0;
      var colontmp__536872348 = 0;
      colontmp__536872348 = (t_3003235183.data).length;
      var i_536872349 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872349 < colontmp__536872348)) break Label3;
            i_3003235269 = i_536872349;
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field0 = 0;
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field1 = nimCopy(t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field2 = null;
            i_536872349 = addInt(i_536872349, 1);
          }
      };
    };
    t_3003235183.counter = 0;

  
}

function clear_3003235098(cache_3003235101) {
    cache_3003235101.list = nimCopy(cache_3003235101.list, initDoublyLinkedList_3019901154(), NTI3019898950);
    clear_3003235180(cache_3003235101.table);

  
}

function clear_3003235992(t_3003235995) {
    Label1: {
      var i_3003236081 = 0;
      var colontmp__536872352 = 0;
      colontmp__536872352 = (t_3003235995.data).length;
      var i_536872353 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872353 < colontmp__536872352)) break Label3;
            i_3003236081 = i_536872353;
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field0 = 0;
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field1 = nimCopy(t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field2 = null;
            i_536872353 = addInt(i_536872353, 1);
          }
      };
    };
    t_3003235995.counter = 0;

  
}

function clear_3003235910(cache_3003235913) {
    cache_3003235913.list = nimCopy(cache_3003235913.list, initDoublyLinkedList_3019901226(), NTI3019899029);
    clear_3003235992(cache_3003235913.table);

  
}

function clear_3003236726(t_3003236729) {
    Label1: {
      var i_3003236815 = 0;
      var colontmp__536872356 = 0;
      colontmp__536872356 = (t_3003236729.data).length;
      var i_536872357 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872357 < colontmp__536872356)) break Label3;
            i_3003236815 = i_536872357;
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field0 = 0;
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field1 = nimCopy(t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field2 = null;
            i_536872357 = addInt(i_536872357, 1);
          }
      };
    };
    t_3003236729.counter = 0;

  
}

function clear_3003236644(cache_3003236647) {
    cache_3003236647.list = nimCopy(cache_3003236647.list, initDoublyLinkedList_3019901294(), NTI3019899096);
    clear_3003236726(cache_3003236647.table);

  
}

function clear_3003237460(t_3003237463) {
    Label1: {
      var i_3003237549 = 0;
      var colontmp__536872360 = 0;
      colontmp__536872360 = (t_3003237463.data).length;
      var i_536872361 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872361 < colontmp__536872360)) break Label3;
            i_3003237549 = i_536872361;
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field0 = 0;
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field1 = nimCopy(t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field2 = null;
            i_536872361 = addInt(i_536872361, 1);
          }
      };
    };
    t_3003237463.counter = 0;

  
}

function clear_3003237378(cache_3003237381) {
    cache_3003237381.list = nimCopy(cache_3003237381.list, initDoublyLinkedList_3003173910(), NTI3003121744);
    clear_3003237460(cache_3003237381.table);

  
}

function clear_3003238194(t_3003238197) {
    Label1: {
      var i_3003238283 = 0;
      var colontmp__536872364 = 0;
      colontmp__536872364 = (t_3003238197.data).length;
      var i_536872365 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872365 < colontmp__536872364)) break Label3;
            i_3003238283 = i_536872365;
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field0 = 0;
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field1 = nimCopy(t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field2 = null;
            i_536872365 = addInt(i_536872365, 1);
          }
      };
    };
    t_3003238197.counter = 0;

  
}

function clear_3003238112(cache_3003238115) {
    cache_3003238115.list = nimCopy(cache_3003238115.list, initDoublyLinkedList_3003174106(), NTI3003121881);
    clear_3003238194(cache_3003238115.table);

  
}

function clear_3003238928(t_3003238931) {
    Label1: {
      var i_3003239017 = 0;
      var colontmp__536872368 = 0;
      colontmp__536872368 = (t_3003238931.data).length;
      var i_536872369 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872369 < colontmp__536872368)) break Label3;
            i_3003239017 = i_536872369;
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field0 = 0;
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field1 = nimCopy(t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field2 = null;
            i_536872369 = addInt(i_536872369, 1);
          }
      };
    };
    t_3003238931.counter = 0;

  
}

function clear_3003238846(cache_3003238849) {
    cache_3003238849.list = nimCopy(cache_3003238849.list, initDoublyLinkedList_3003174008(), NTI3003121817);
    clear_3003238928(cache_3003238849.table);

  
}

function clear_3003239662(t_3003239665) {
    Label1: {
      var i_3003239751 = 0;
      var colontmp__536872372 = 0;
      colontmp__536872372 = (t_3003239665.data).length;
      var i_536872373 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872373 < colontmp__536872372)) break Label3;
            i_3003239751 = i_536872373;
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field0 = 0;
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field1 = nimCopy(t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field2 = null;
            i_536872373 = addInt(i_536872373, 1);
          }
      };
    };
    t_3003239665.counter = 0;

  
}

function clear_3003239580(cache_3003239583) {
    cache_3003239583.list = nimCopy(cache_3003239583.list, initDoublyLinkedList_3003174204(), NTI3003121945);
    clear_3003239662(cache_3003239583.table);

  
}

function clear_3003240396(t_3003240399) {
    Label1: {
      var i_3003240485 = 0;
      var colontmp__536872376 = 0;
      colontmp__536872376 = (t_3003240399.data).length;
      var i_536872377 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872377 < colontmp__536872376)) break Label3;
            i_3003240485 = i_536872377;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field0 = 0;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field1 = null;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field2 = null;
            i_536872377 = addInt(i_536872377, 1);
          }
      };
    };
    t_3003240399.counter = 0;

  
}

function clear_3003240314(cache_3003240317) {
    cache_3003240317.list = nimCopy(cache_3003240317.list, initDoublyLinkedList_3003130454(), NTI3003122047);
    clear_3003240396(cache_3003240317.table);

  
}

function clear_3003241130(t_3003241133) {
    Label1: {
      var i_3003241219 = 0;
      var colontmp__536872380 = 0;
      colontmp__536872380 = (t_3003241133.data).length;
      var i_536872381 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872381 < colontmp__536872380)) break Label3;
            i_3003241219 = i_536872381;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field0 = 0;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field1 = null;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field2 = null;
            i_536872381 = addInt(i_536872381, 1);
          }
      };
    };
    t_3003241133.counter = 0;

  
}

function clear_3003241048(cache_3003241051) {
    cache_3003241051.list = nimCopy(cache_3003241051.list, initDoublyLinkedList_3003134765(), NTI3003122122);
    clear_3003241130(cache_3003241051.table);

  
}

function clear_3003241864(t_3003241867) {
    Label1: {
      var i_3003241953 = 0;
      var colontmp__536872384 = 0;
      colontmp__536872384 = (t_3003241867.data).length;
      var i_536872385 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872385 < colontmp__536872384)) break Label3;
            i_3003241953 = i_536872385;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field0 = 0;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field1 = null;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field2 = null;
            i_536872385 = addInt(i_536872385, 1);
          }
      };
    };
    t_3003241867.counter = 0;

  
}

function clear_3003241782(cache_3003241785) {
    cache_3003241785.list = nimCopy(cache_3003241785.list, initDoublyLinkedList_3003151329(), NTI3003122332);
    clear_3003241864(cache_3003241785.table);

  
}

function clear_3003242598(t_3003242601) {
    Label1: {
      var i_3003242687 = 0;
      var colontmp__536872388 = 0;
      colontmp__536872388 = (t_3003242601.data).length;
      var i_536872389 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872389 < colontmp__536872388)) break Label3;
            i_3003242687 = i_536872389;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field0 = 0;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field1 = null;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field2 = null;
            i_536872389 = addInt(i_536872389, 1);
          }
      };
    };
    t_3003242601.counter = 0;

  
}

function clear_3003242516(cache_3003242519) {
    cache_3003242519.list = nimCopy(cache_3003242519.list, initDoublyLinkedList_3003155632(), NTI3003122407);
    clear_3003242598(cache_3003242519.table);

  
}

function clear_3003243332(t_3003243335) {
    Label1: {
      var i_3003243421 = 0;
      var colontmp__536872392 = 0;
      colontmp__536872392 = (t_3003243335.data).length;
      var i_536872393 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872393 < colontmp__536872392)) break Label3;
            i_3003243421 = i_536872393;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field0 = 0;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field1 = null;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field2 = null;
            i_536872393 = addInt(i_536872393, 1);
          }
      };
    };
    t_3003243335.counter = 0;

  
}

function clear_3003243250(cache_3003243253) {
    cache_3003243253.list = nimCopy(cache_3003243253.list, initDoublyLinkedList_3003139068(), NTI3003122193);
    clear_3003243332(cache_3003243253.table);

  
}

function clear_3003244066(t_3003244069) {
    Label1: {
      var i_3003244155 = 0;
      var colontmp__536872396 = 0;
      colontmp__536872396 = (t_3003244069.data).length;
      var i_536872397 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872397 < colontmp__536872396)) break Label3;
            i_3003244155 = i_536872397;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field0 = 0;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field1 = null;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field2 = null;
            i_536872397 = addInt(i_536872397, 1);
          }
      };
    };
    t_3003244069.counter = 0;

  
}

function clear_3003243984(cache_3003243987) {
    cache_3003243987.list = nimCopy(cache_3003243987.list, initDoublyLinkedList_3003143372(), NTI3003122266);
    clear_3003244066(cache_3003243987.table);

  
}

function clear_3003244800(t_3003244803) {
    Label1: {
      var i_3003244889 = 0;
      var colontmp__536872400 = 0;
      colontmp__536872400 = (t_3003244803.data).length;
      var i_536872401 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872401 < colontmp__536872400)) break Label3;
            i_3003244889 = i_536872401;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field0 = 0;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field1 = null;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field2 = null;
            i_536872401 = addInt(i_536872401, 1);
          }
      };
    };
    t_3003244803.counter = 0;

  
}

function clear_3003244718(cache_3003244721) {
    cache_3003244721.list = nimCopy(cache_3003244721.list, initDoublyLinkedList_3003163611(), NTI3003122473);
    clear_3003244800(cache_3003244721.table);

  
}

function clear_3003245534(t_3003245537) {
    Label1: {
      var i_3003245623 = 0;
      var colontmp__536872404 = 0;
      colontmp__536872404 = (t_3003245537.data).length;
      var i_536872405 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872405 < colontmp__536872404)) break Label3;
            i_3003245623 = i_536872405;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field0 = 0;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field1 = null;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field2 = null;
            i_536872405 = addInt(i_536872405, 1);
          }
      };
    };
    t_3003245537.counter = 0;

  
}

function clear_3003245452(cache_3003245455) {
    cache_3003245455.list = nimCopy(cache_3003245455.list, initDoublyLinkedList_3003171590(), NTI3003122548);
    clear_3003245534(cache_3003245455.table);

  
}

function deleteAllNodesAndSymbols_3003235018(ctx_3003235019) {
    ctx_3003235019.depGraph.revision = addInt(ctx_3003235019.depGraph.revision, 1);
    clear_3003235098(ctx_3003235019.depGraph.changed);
    clear_3003235098(ctx_3003235019.depGraph.verified);
    clear_3003235910(ctx_3003235019.depGraph.fingerprints);
    clear_3003236644(ctx_3003235019.depGraph.dependencies);
    clear_3003237378(ctx_3003235019.itemsAstNode);
    clear_3003238112(ctx_3003235019.itemsSymbol);
    clear_3003238846(ctx_3003235019.itemsNodeLayoutInput);
    clear_3003239580(ctx_3003235019.itemsFunctionExecutionContext);
    clear_3003240314(ctx_3003235019.queryCacheType);
    clear_3003241048(ctx_3003235019.queryCacheValue);
    clear_3003241782(ctx_3003235019.queryCacheSymbolType);
    clear_3003242516(ctx_3003235019.queryCacheSymbolValue);
    clear_3003243250(ctx_3003235019.queryCacheSymbol);
    clear_3003243984(ctx_3003235019.queryCacheSymbols);
    clear_3003244718(ctx_3003235019.queryCacheFunctionExecution);
    clear_3003245452(ctx_3003235019.queryCacheNodeLayout);

  
}
async function loadAsync_2952794289(self_2952794290) {
      var Temporary2;

  var result_2952794292 = null;

  BeforeRet: {
    var fmtRes_2952794302 = [mnewString(0)];
    fmtRes_2952794302[0].push.apply(fmtRes_2952794302[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794302, 0, self_2952794290.filename, []);
    fmtRes_2952794302[0].push.apply(fmtRes_2952794302[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794302[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2952794303 = [];
      var oHEX60gensym66_2952794306 = nimCopy(null, self_2952794290.workspace, NTI2164260874);
      if (!isSome_2818578798(oHEX60gensym66_2952794306)) Temporary2 = false; else {        var ws_2952794329 = get_2818578818(oHEX60gensym66_2952794306);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2952794303 = nimCopy(null, (await loadFile_2181038113(ws_2952794329, self_2952794290.filename)), NTI33554449);
    }
    else {
    if (self_2952794290.appFile) {
    jsonText_2952794303 = nimCopy(null, loadApplicationFile_2332033042(fs_2332033077, self_2952794290.filename), NTI33554449);
    }
    else {
      jsonText_2952794303 = nimCopy(null, loadFile_2332033031(fs_2332033077, self_2952794290.filename), NTI33554449);
    }
    }
    var json_2952794334 = parseJson_1627395313(jsonText_2952794303);
    var newAst_2952794335 = jsonToAstNode_2986346751(json_2952794334, {allowExtraKeys: false, allowMissingKeys: false});
    deleteAllNodesAndSymbols_3003235018(ctx_2952790071);
    self_2952794290.rootNode = newAst_2952794335;
    insertNode_3003233870(ctx_2952790071, self_2952794290.rootNode);
    if (self_2952794290.undoOps.length < 0) { for (var i = self_2952794290.undoOps.length ; i < 0 ; ++i) self_2952794290.undoOps.push(null); }
               else { self_2952794290.undoOps.length = 0; };
    if (self_2952794290.redoOps.length < 0) { for (var i = self_2952794290.redoOps.length ; i < 0 ; ++i) self_2952794290.redoOps.push(null); }
               else { self_2952794290.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2952794348 = [mnewString(0)];
    fmtRes_2952794348[0].push.apply(fmtRes_2952794348[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794348, 0, self_2952794290.filename, []);
    fmtRes_2952794348[0].push.apply(fmtRes_2952794348[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952794348[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2952794246(self_2952794290);
    result_2952794292 = undefined;
    break BeforeRet;
  };

  return result_2952794292;

}

function load_2952794349(self_2952794350, filename_2952794351) {
    var Temporary1;

    if ((0 < (filename_2952794351).length)) {
    Temporary1 = filename_2952794351;
    }
    else {
    Temporary1 = self_2952794350.filename;
    }
    
    var filename_2952794352 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2952794352).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2952794350.filename = nimCopy(null, filename_2952794352, NTI33554449);
    var _ = loadAsync_2952794289(self_2952794350);

  
}
async function loadAsync_2818578855(self_2818578856, ws_2818578857) {
  var result_2818578859 = null;

  BeforeRet: {
    contentHEX3D_2818573846(self_2818578856, (await loadFile_2181038113(ws_2818578857, self_2818578856.filename)));
    result_2818578859 = undefined;
    break BeforeRet;
  };

  return result_2818578859;

}

function load_2818578869(self_2818578870, filename_2818578871) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818578871).length)) {
    Temporary1 = filename_2818578871;
    }
    else {
    Temporary1 = self_2818578870.filename;
    }
    
    var filename_2818578872 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818578872).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818578870.filename = nimCopy(null, filename_2818578872, NTI33554449);
      var oHEX60gensym112_2818578876 = nimCopy(null, self_2818578870.workspace, NTI2164260874);
      if (!isSome_2818578798(oHEX60gensym112_2818578876)) Temporary2 = false; else {        var ws_2818578899 = get_2818578818(oHEX60gensym112_2818578876);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2818578855(self_2818578870, ws_2818578899);
    }
    else {
    if (self_2818578870.appFile) {
    contentHEX3D_2818573846(self_2818578870, loadApplicationFile_2332033042(fs_2332033077, self_2818578870.filename));
    }
    else {
    contentHEX3D_2818573846(self_2818578870, loadFile_2332033031(fs_2332033077, self_2818578870.filename));
    }
    }

  
}

function load_2164260885(self_2164260886, filename_2164260887) {
  
}

function load_2164260888(self_2164260886, filename_2164260887) {
    chckNilDisp(self_2164260886);
    if (isObj(self_2164260886.m_type, NTI2952791498)) {
    load_2952794349(self_2164260886, filename_2164260887);
    }
    else {
    if (isObj(self_2164260886.m_type, NTI2818572427)) {
    load_2818578869(self_2164260886, filename_2164260887);
    }
    else {
    if (isObj(self_2164260886.m_type, NTI2164260868)) {
    load_2164260885(self_2164260886, filename_2164260887);
    }
    }}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872424 = 0;
      var L_536872425 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872424 < L_536872425)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872424, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872424 = addInt(i_536872424, 1);
            if (!(((a_2919239717).length == L_536872425))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function del_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    var xl_2919239737 = subInt((x_2919239732[x_2919239732_Idx]).length, 1);
    x_2919239732[x_2919239732_Idx][chckIndx(i_2919239733, 0, (x_2919239732[x_2919239732_Idx]).length - 1)] = x_2919239732[x_2919239732_Idx][chckIndx(xl_2919239737, 0, (x_2919239732[x_2919239732_Idx]).length - 1)];
    if (x_2919239732[x_2919239732_Idx].length < chckRange(xl_2919239737, 0, 2147483647)) { for (var i = x_2919239732[x_2919239732_Idx].length ; i < chckRange(xl_2919239737, 0, 2147483647) ; ++i) x_2919239732[x_2919239732_Idx].push(0); }
               else { x_2919239732[x_2919239732_Idx].length = chckRange(xl_2919239737, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872412 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872414 = 0;
        var colontmp__536872415 = 0;
        colontmp__536872415 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872416 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872416 <= colontmp__536872415)) break Label4;
              h_536872414 = res_536872416;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872414, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872419 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872414, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872414, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872419["Field0"];
              list_2919239713 = colontmp__536872419["Field1"][0]; list_2919239713_Idx = colontmp__536872419["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              del_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872412))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872416 = addInt(res_536872416, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818578705(self_2818578706) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818578706.tsParser == null))) {
    deinit_2885681592(self_2818578706.tsParser);
    self_2818578706.tsParser = null;
    }
    
    if (isSome_2818578714(self_2818578706.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818578734(self_2818578706.languageServer), Temporary1)[0][Temporary1[1]], self_2818578706.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818578734(self_2818578706.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818578706.languageServer = nimCopy(self_2818578706.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818578781(self_2818578782) {
    destroy_2818578705(self_2818578782.document);

  
}

function shutdown_2382364788(self_2382364789) {
  
}

function shutdown_2382364790(self_2382364789) {
    chckNilDisp(self_2382364789);
    if (isObj(self_2382364789.m_type, NTI2818572510)) {
    shutdown_2818578781(self_2382364789);
    }
    else {
    if (isObj(self_2382364789.m_type, NTI2382364676)) {
    shutdown_2382364788(self_2382364789);
    }
    }

  
}

function canEdit_2952797958(self_2952797959, document_2952797960) {
  var result_2952797961 = false;

  BeforeRet: {
    if (isObj(document_2952797960.m_type, NTI2952791498)) {
    result_2952797961 = true;
    break BeforeRet;
    }
    else {
      result_2952797961 = false;
      break BeforeRet;
    }
    
  };

  return result_2952797961;

}

function canEdit_2818579822(self_2818579823, document_2818579824) {
  var result_2818579825 = false;

  BeforeRet: {
    if (isObj(document_2818579824.m_type, NTI2818572427)) {
    result_2818579825 = true;
    break BeforeRet;
    }
    else {
      result_2818579825 = false;
      break BeforeRet;
    }
    
  };

  return result_2818579825;

}

function canEdit_2382364791(self_2382364792, document_2382364793) {
  var result_2382364794 = false;

  BeforeRet: {
    result_2382364794 = false;
    break BeforeRet;
  };

  return result_2382364794;

}

function canEdit_2382364795(self_2382364792, document_2382364793) {
  var result_2382364796 = false;

  BeforeRet: {
    chckNilDisp(self_2382364792);
    if (isObj(self_2382364792.m_type, NTI2952791527)) {
    result_2382364796 = canEdit_2952797958(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364792.m_type, NTI2818572510)) {
    result_2382364796 = canEdit_2818579822(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364792.m_type, NTI2382364676)) {
    result_2382364796 = canEdit_2382364791(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    }}
  };

  return result_2382364796;

}

function addQuoted_2952797474(s_2952797476, s_2952797476_Idx, x_2952797477) {
    s_2952797476[s_2952797476_Idx].push.apply(s_2952797476[s_2952797476_Idx], HEX24_2986346455(x_2952797477));;

  
}

function HEX24_2952797463(self_2952797465) {
  var result_2952797466 = [[]];

    if (isSome_2986346330(self_2952797465)) {
    result_2952797466[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2952797474(result_2952797466, 0, self_2952797465.val);
    result_2952797466[0].push.apply(result_2952797466[0], [41]);;
    }
    else {
      result_2952797466[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2952797466[0];

}

function formatValue_2952797396(result_2952797398, result_2952797398_Idx, value_2952797399, specifier_2952797400) {
    formatValue_721420459(result_2952797398, result_2952797398_Idx, HEX24_2952797463(value_2952797399), specifier_2952797400);

  
}

function handleNodeInserted_2952797382(self_2952797383, doc_2952797384, node_2952797385) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2952797390 = [mnewString(0)];
    fmtRes_2952797390[0].push.apply(fmtRes_2952797390[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952797390, 0, node_2952797385, []);
    fmtRes_2952797390[0].push.apply(fmtRes_2952797390[0], [44,32]);;
    formatValue_2952797396(fmtRes_2952797390, 0, self_2952797383.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797390[0], NTI33554449)]);
      var oHEX60gensym110_2952797486 = nimCopy(null, self_2952797383.deletedNode, NTI2986344567);
      if (!isSome_2986346330(oHEX60gensym110_2952797486)) Temporary2 = false; else {        var deletedNode_2952797509 = get_2986346350(oHEX60gensym110_2952797486);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2952797509 == node_2952797385);      }    if (Temporary1) {
    self_2952797383.deletedNode = nimCopy(self_2952797383.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952797385)), NTI2986344567);
    var fmtRes_2952797521 = mnewString(0);
    fmtRes_2952797521.push.apply(fmtRes_2952797521, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797521, NTI33554449)]);
    }
    

  
}

function createWithDocument_2952807507(self_2952807508, document_2952807509) {
    
function HEX3Aanonymous_2952807512(doc_2952807513, node_2952807514) {
        handleNodeInserted_2952797382(editor_2952807511, doc_2952807513, node_2952807514);

      
    }

  var result_2952807510 = null;

  BeforeRet: {
    var editor_2952807511 = {eventHandler: null, document: document_2952807509, textDocument: null, textEditor: null, m_type: NTI2952791527, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2952807511 = createWithPrototype(editor_ast_prototype, editor_2952807511);
    init_2382364705(editor_2952807511);
    editor_2952807511.document.onNodeInserted.push(HEX3Aanonymous_2952807512);;
    editor_2952807511.selectedCompletion = 0;
    editor_2952807511.completions = nimCopy(null, [], NTI3170893842);
    if ((len_2986344536(editor_2952807511.document.rootNode) == 0)) {
    var paramA_2952807524 = newId_2046820569();
    var paramB_2952807525 = newId_2046820569();
    var resultId_2952807526 = newId_2046820569();
    Label1: {
      var tmpHEX60gensym1064_2952807531 = null;
      Label2: {
        var res_2952807537 = null;
        res_2952807537 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2952807537.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2952807537.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2952807540 = null;
            res_2952807540 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952807540.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2952807542 = null;
                res_2952807542 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807542.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2952807544 = null;
                    res_2952807544 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807544.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807544.id = nimCopy(res_2952807544.id, paramA_2952807524, NTI2046820355);
                    res_2952807544.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2952807548 = null;
                        res_2952807548 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807548.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807548.reff = nimCopy(res_2952807548.reff, IdInt_2969567244, NTI2046820355);
                      };
                      add_2986344486(res_2952807544, res_2952807548);
                      Label16: {
                        var res_2952807551 = null;
                        res_2952807551 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807551.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807544, res_2952807551);
                    };
                  };
                  add_2986344486(res_2952807542, res_2952807544);
                  Label18: {
                    var res_2952807553 = null;
                    res_2952807553 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807553.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807553.id = nimCopy(res_2952807553.id, paramB_2952807525, NTI2046820355);
                    res_2952807553.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2952807557 = null;
                        res_2952807557 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807557.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807557.reff = nimCopy(res_2952807557.reff, IdInt_2969567244, NTI2046820355);
                      };
                      add_2986344486(res_2952807553, res_2952807557);
                      Label23: {
                        var res_2952807560 = null;
                        res_2952807560 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807560.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807553, res_2952807560);
                    };
                  };
                  add_2986344486(res_2952807542, res_2952807553);
                };
              };
              add_2986344486(res_2952807540, res_2952807542);
              Label25: {
                var res_2952807562 = null;
                res_2952807562 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807562.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2952807562.reff = nimCopy(res_2952807562.reff, IdInt_2969567244, NTI2046820355);
              };
              add_2986344486(res_2952807540, res_2952807562);
              Label27: {
                var res_2952807565 = null;
                res_2952807565 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807565.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2952807567 = null;
                    res_2952807567 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807567.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807567.id = nimCopy(res_2952807567.id, resultId_2952807526, NTI2046820355);
                    res_2952807567.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2952807571 = null;
                        res_2952807571 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807571.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807567, res_2952807571);
                      Label35: {
                        var res_2952807573 = null;
                        res_2952807573 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807573.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2952807575 = null;
                            res_2952807575 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807575.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807575.reff = nimCopy(res_2952807575.reff, IdAdd_2969567235, NTI2046820355);
                          };
                          add_2986344486(res_2952807573, res_2952807575);
                          Label40: {
                            var res_2952807578 = null;
                            res_2952807578 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807578.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807578.reff = nimCopy(res_2952807578.reff, paramA_2952807524, NTI2046820355);
                          };
                          add_2986344486(res_2952807573, res_2952807578);
                          Label42: {
                            var res_2952807581 = null;
                            res_2952807581 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807581.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807581.reff = nimCopy(res_2952807581.reff, paramB_2952807525, NTI2046820355);
                          };
                          add_2986344486(res_2952807573, res_2952807581);
                        };
                      };
                      add_2986344486(res_2952807567, res_2952807573);
                    };
                  };
                  add_2986344486(res_2952807565, res_2952807567);
                  Label44: {
                    var res_2952807584 = null;
                    res_2952807584 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807584.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807584.reff = nimCopy(res_2952807584.reff, resultId_2952807526, NTI2046820355);
                  };
                  add_2986344486(res_2952807565, res_2952807584);
                };
              };
              add_2986344486(res_2952807540, res_2952807565);
            };
          };
        };
        add_2986344486(res_2952807537, res_2952807540);
      };
    };
    add_2986344486(editor_2952807511.document.rootNode, res_2952807537);
    var addId_2952807748 = nimCopy(null, last_2986344706(editor_2952807511.document.rootNode).id, NTI2046820355);
    Label46: {
      var tmpHEX60gensym1119_2952807753 = null;
      Label47: {
        var res_2952807759 = null;
        res_2952807759 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2952807759.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2952807759.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2952807762 = null;
            res_2952807762 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952807762.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2952807764 = null;
                res_2952807764 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807764.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952807762, res_2952807764);
              Label55: {
                var res_2952807766 = null;
                res_2952807766 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807766.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2952807766.reff = nimCopy(res_2952807766.reff, IdVoid_2969567246, NTI2046820355);
              };
              add_2986344486(res_2952807762, res_2952807766);
              Label57: {
                var res_2952807769 = null;
                res_2952807769 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807769.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2952807771 = null;
                    res_2952807771 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807771.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2952807773 = null;
                        res_2952807773 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807773.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807773.reff = nimCopy(res_2952807773.reff, addId_2952807748, NTI2046820355);
                      };
                      add_2986344486(res_2952807771, res_2952807773);
                      Label65: {
                        var res_2952807776 = null;
                        res_2952807776 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807776.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807776.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2986344486(res_2952807771, res_2952807776);
                      Label67: {
                        var res_2952807779 = null;
                        res_2952807779 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807779.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807779.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2986344486(res_2952807771, res_2952807779);
                    };
                  };
                };
                add_2986344486(res_2952807769, res_2952807771);
              };
              add_2986344486(res_2952807762, res_2952807769);
            };
          };
        };
        add_2986344486(res_2952807759, res_2952807762);
      };
    };
    add_2986344486(editor_2952807511.document.rootNode, res_2952807759);
    }
    
    Label69: {
      var c_2952807865 = null;
      var i_536872469 = 0;
      var L_536872470 = (editor_2952807511.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872469 < L_536872470)) break Label71;
            c_2952807865 = editor_2952807511.document.rootNode.children[chckIndx(i_536872469, 0, (editor_2952807511.document.rootNode.children).length - 1)];
            handleNodeInserted_2952794676(editor_2952807511.document, c_2952807865);
            i_536872469 = addInt(i_536872469, 1);
            if (!(((editor_2952807511.document.rootNode.children).length == L_536872470))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3003233870(ctx_2952790071, editor_2952807511.document.rootNode);
    nodeHEX3D_2952793820(editor_2952807511, HEX5BHEX5D_2986344532(editor_2952807511.document.rootNode, 0));
    result_2952807510 = editor_2952807511;
    break BeforeRet;
  };

  return result_2952807510;

}

function createWithDocument_2818591110(self_2818591111, document_2818591112) {
    
function HEX3Aanonymous_2818591133(__2818591134) {
        handleTextDocumentTextChanged_2818591016(editor_2818591114);

      
    }

  var result_2818591113 = null;

  BeforeRet: {
    var editor_2818591114 = createTextEditorInstance_2818591018();
    editor_2818591114.document = document_2818591112;
    init_2382364705(editor_2818591114);
    if (((editor_2818591114.document.lines).length == 0)) {
    editor_2818591114.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818591082(editor_2818591114.document.textChanged, HEX3Aanonymous_2818591133);
    result_2818591113 = editor_2818591114;
    break BeforeRet;
  };

  return result_2818591113;

}

function createWithDocument_2382364797(self_2382364798, document_2382364799) {
  var result_2382364800 = null;

  BeforeRet: {
    result_2382364800 = null;
    break BeforeRet;
  };

  return result_2382364800;

}

function createWithDocument_2382364810(self_2382364798, document_2382364799) {
  var result_2382364811 = null;

  BeforeRet: {
    chckNilDisp(self_2382364798);
    if (isObj(self_2382364798.m_type, NTI2952791527)) {
    result_2382364811 = createWithDocument_2952807507(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364798.m_type, NTI2818572510)) {
    result_2382364811 = createWithDocument_2818591110(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364798.m_type, NTI2382364676)) {
    result_2382364811 = createWithDocument_2382364797(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    }}
  };

  return result_2382364811;

}

function getEventHandlers_2952797969(self_2952797970) {
  var result_2952797971 = [[]];

    result_2952797971[0].push(self_2952797970.eventHandler);;
    if (!((self_2952797970.modeEventHandler == null))) {
    result_2952797971[0].push(self_2952797970.modeEventHandler);;
    }
    
    if (!((self_2952797970.textEditor == null))) {
    add_2952797987(result_2952797971, 0, getEventHandlers_2382364828(self_2952797970.textEditor));
    result_2952797971[0].push(self_2952797970.textEditEventHandler);;
    }
    

  return result_2952797971[0];

}

function getEventHandlers_2818579833(self_2818579834) {
  var result_2818579835 = [];

    result_2818579835 = nimCopy(null, [self_2818579834.eventHandler], NTI2432696334);
    if (!((self_2818579834.modeEventHandler == null))) {
    result_2818579835.push(self_2818579834.modeEventHandler);;
    }
    
    if (self_2818579834.showCompletions) {
    result_2818579835.push(self_2818579834.completionEventHandler);;
    }
    

  return result_2818579835;

}

function getEventHandlers_2432696325(self_2432696326) {
  var result_2432696327 = [];

  BeforeRet: {
    result_2432696327 = nimCopy(null, [self_2432696326.eventHandler], NTI2432696334);
    break BeforeRet;
  };

  return result_2432696327;

}

function getEventHandlers_2382364812(self_2382364813) {
  var result_2382364814 = [];

  BeforeRet: {
    result_2382364814 = nimCopy(null, [], NTI2382364755);
    break BeforeRet;
  };

  return result_2382364814;

}

function getEventHandlers_2382364828(self_2382364813) {
  var result_2382364829 = [];

  BeforeRet: {
    chckNilDisp(self_2382364813);
    if (isObj(self_2382364813.m_type, NTI2952791527)) {
    result_2382364829 = getEventHandlers_2952797969(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2818572510)) {
    result_2382364829 = getEventHandlers_2818579833(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2432696324)) {
    result_2382364829 = getEventHandlers_2432696325(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2382364676)) {
    result_2382364829 = getEventHandlers_2382364812(self_2382364813);
    break BeforeRet;
    }
    }}}
  };

  return result_2382364829;

}

function reset_2952798084(obj_2952798086, obj_2952798086_Idx) {
    obj_2952798086[obj_2952798086_Idx] = null;

  
}

function clear_2952798077(deq_2952798079) {
    Label1: {
      var el_2952798083 = null;
      var el_2952798083_Idx = 0;
      var i_536872480 = deq_2952798079.head;
      Label2: {
        var c_536872482 = 0;
        var i_536872483 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872483 < deq_2952798079.count)) break Label4;
              c_536872482 = i_536872483;
              el_2952798083 = deq_2952798079.data; el_2952798083_Idx = chckIndx(i_536872480, 0, (deq_2952798079.data).length - 1);
              reset_2952798084(el_2952798083, el_2952798083_Idx);
              i_536872480 = (addInt(i_536872480, 1) & deq_2952798079.mask);
              i_536872483 = addInt(i_536872483, 1);
            }
        };
      };
    };
    deq_2952798079.count = 0;
    deq_2952798079.tail = deq_2952798079.head;

  
}

function handleDocumentChanged_2952798014(self_2952798015) {
    var fmtRes_2952798020 = mnewString(0);
    fmtRes_2952798020.push.apply(fmtRes_2952798020, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952798020, NTI33554449)]);
    clear_2952798077(self_2952798015.selectionHistory);
    clear_2952798077(self_2952798015.selectionFuture);
    finishEdit_2952797950(self_2952798015, false);
    Label1: {
      var symbol_2952798154 = null;
      var L_536872473 = len_3003233372(ctx_2952790071.globalScope);
      Label2: {
        var h_536872475 = 0;
        var colontmp__536872476 = 0;
        colontmp__536872476 = (ctx_2952790071.globalScope.data).length - 1;
        var res_536872477 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872477 <= colontmp__536872476)) break Label4;
              h_536872475 = res_536872477;
              if (isFilled_1308622880(ctx_2952790071.globalScope.data[chckIndx(h_536872475, 0, (ctx_2952790071.globalScope.data).length - 1)].Field0)) {
              symbol_2952798154 = ctx_2952790071.globalScope.data[chckIndx(h_536872475, 0, (ctx_2952790071.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3003191823(ctx_2952790071, symbol_2952798154);
              if (!((len_3003233372(ctx_2952790071.globalScope) == L_536872473))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872477 = addInt(res_536872477, 1);
            }
        };
      };
    };
    nodeHEX3D_2952793820(self_2952798015, HEX5BHEX5D_2986344532(self_2952798015.document.rootNode, 0));

  
}

function handleDocumentChanged_2818582850(self_2818582851) {
    selectionHEX3D_2818572799(self_2818582851, {Field0: clampCursor_2818572696(self_2818582851, selection_2818572793(self_2818582851).Field0), Field1: clampCursor_2818572696(self_2818582851, selection_2818572793(self_2818582851).Field1)});
    updateSearchResults_2818579851(self_2818582851);

  
}

function handleDocumentChanged_2382364830(self_2382364831) {
  
}

function handleDocumentChanged_2382364832(self_2382364831) {
    chckNilDisp(self_2382364831);
    if (isObj(self_2382364831.m_type, NTI2952791527)) {
    handleDocumentChanged_2952798014(self_2382364831);
    }
    else {
    if (isObj(self_2382364831.m_type, NTI2818572510)) {
    handleDocumentChanged_2818582850(self_2382364831);
    }
    else {
    if (isObj(self_2382364831.m_type, NTI2382364676)) {
    handleDocumentChanged_2382364830(self_2382364831);
    }
    }}

  
}

function del_1291847224(t_1291847227, key_1291847228) {
    var hc_1291847229 = [0];
    var i_1291847236 = rawGet_1291845908(t_1291847227, key_1291847228, hc_1291847229, 0);
    var mskHEX60gensym36_1291847240 = (t_1291847227.data).length - 1;
    if ((0 <= i_1291847236)) {
    t_1291847227.counter = subInt(t_1291847227.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847247 = i_1291847236;
            var rHEX60gensym36_1291847248 = jHEX60gensym36_1291847247;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field1 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847236 = (addInt(i_1291847236, 1) & mskHEX60gensym36_1291847240);
                  if (isEmpty_1308622877(t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847248 = (t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 & mskHEX60gensym36_1291847240);
                  if (!(((((rHEX60gensym36_1291847248 <= i_1291847236) && (jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248)) || ((jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248) && (i_1291847236 < jHEX60gensym36_1291847247))) || ((i_1291847236 < jHEX60gensym36_1291847247) && (rHEX60gensym36_1291847248 <= i_1291847236))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)] = nimCopy(t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)], t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847134(event_1291847136, arg_1291847137) {
    Label1: {
      var h_1291847160 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872489 = 0;
      var L_536872490 = (event_1291847136.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872489 < L_536872490)) break Label3;
            h_1291847160 = event_1291847136.handlers[chckIndx(i_536872489, 0, (event_1291847136.handlers).length - 1)];
            h_1291847160.Field1(arg_1291847137);
            i_536872489 = addInt(i_536872489, 1);
            if (!(((event_1291847136.handlers).length == L_536872490))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847181(self_1291847182, editor_1291847183) {
    del_1291847224(self_1291847182.editors, editor_1291847183.id);
    invoke_1291847134(self_1291847182.onEditorDeregistered, editor_1291847183);

  
}

function unregister_2952807949(self_2952807950) {
    finishEdit_2952797950(self_2952807950, false);
    unregisterEditor_1291847181(self_2952807950.editor, self_2952807950);

  
}

function unregister_2818591498(self_2818591499) {
    unregisterEditor_1291847181(self_2818591499.editor, self_2818591499);

  
}

function unregister_2382364833(self_2382364834) {
  
}

function unregister_2382364835(self_2382364834) {
    chckNilDisp(self_2382364834);
    if (isObj(self_2382364834.m_type, NTI2952791527)) {
    unregister_2952807949(self_2382364834);
    }
    else {
    if (isObj(self_2382364834.m_type, NTI2818572510)) {
    unregister_2818591498(self_2382364834);
    }
    else {
    if (isObj(self_2382364834.m_type, NTI2382364676)) {
    unregister_2382364833(self_2382364834);
    }
    }}

  
}

function getItemAtPixelPosition_2952807262(self_2952807263, posWindow_2952807264) {
  var result_2952807266 = ({val: 0, has: false});

  BeforeRet: {
    result_2952807266 = nimCopy(result_2952807266, none_2986344626(), NTI1191183280);
    Label1: {
      var index_2952807277 = 0;
      var rect_2952807278 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872494 = 0;
      var L_536872495 = (self_2952807263.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872494 < L_536872495)) break Label3;
            index_2952807277 = self_2952807263.lastItems[chckIndx(i_536872494, 0, (self_2952807263.lastItems).length - 1)]["Field0"];
            rect_2952807278 = self_2952807263.lastItems[chckIndx(i_536872494, 0, (self_2952807263.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_2952807278, posWindow_2952807264) && (0 <= index_2952807277)) && (index_2952807277 <= (self_2952807263.completions).length - 1))) {
            result_2952807266 = nimCopy(result_2952807266, some_1191184367(index_2952807277), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872494 = addInt(i_536872494, 1);
            if (!(((self_2952807263.lastItems).length == L_536872495))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952807266;

}

function getOption_2818583200(editor_2818583202, path_2818583203, default_2818583204) {
  var result_2818583210 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583202 == null)) {
      result_2818583210 = default_2818583204;
      break BeforeRet;
      }
      
      var nodeHEX60gensym168_2818583223 = HEX7BHEX7D_1627393316(editor_2818583202.options, nsuSplitString(path_2818583203, [46], -1));
      if ((nodeHEX60gensym168_2818583223 == null)) {
      result_2818583210 = default_2818583204;
      break BeforeRet;
      }
      
    };
    result_2818583210 = getFloat_1627390140(nodeHEX60gensym168_2818583223, default_2818583204);
    break BeforeRet;
  };

  return result_2818583210;

}

function handleScroll_2952807285(self_2952807286, scroll_2952807287, mousePosWindow_2952807288) {
    if (isSome_1191185117(getItemAtPixelPosition_2952807262(self_2952807286, mousePosWindow_2952807288))) {
    self_2952807286.selectedCompletion = clamp_1660945119(subInt(self_2952807286.selectedCompletion, ((scroll_2952807287.y) | 0)), 0, (self_2952807286.completions).length - 1);
    }
    else {
    HEX2BHEX3D_855640304(self_2952807286, "scrollOffset", (scroll_2952807287.y * getOption_2818583200(self_2952807286.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2818583196(self_2818583197, scroll_2818583198, mousePosWindow_2818583199) {
    HEX2BHEX3D_855640304(self_2818583197, "scrollOffset", (scroll_2818583198.y * getOption_2818583200(self_2818583197.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    markDirty_2382364710(self_2818583197);

  
}

function handleScroll_2382364836(self_2382364837, scroll_2382364838, mousePosWindow_2382364839) {
  
}

function handleScroll_2382364840(self_2382364837, scroll_2382364838, mousePosWindow_2382364839) {
    chckNilDisp(self_2382364837);
    if (isObj(self_2382364837.m_type, NTI2952791527)) {
    handleScroll_2952807285(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    else {
    if (isObj(self_2382364837.m_type, NTI2818572510)) {
    handleScroll_2818583196(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    else {
    if (isObj(self_2382364837.m_type, NTI2382364676)) {
    handleScroll_2382364836(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    }}

  
}

function HEX2D_2113929748(aHEX60gensym73_2113929750, bHEX60gensym73_2113929751) {
  var result_2113929752 = ({x: 0.0, y: 0.0});

    result_2113929752 = nimCopy(result_2113929752, {x: (aHEX60gensym73_2113929750.x - bHEX60gensym73_2113929751.x), y: (aHEX60gensym73_2113929750.y - bHEX60gensym73_2113929751.y)}, NTI2130706720);

  return result_2113929752;

}

function getNodeAtPixelPosition_2952800818(self_2952800819, posContent_2952800820) {
                      var Temporary8;

  var result_2952800822 = ({val: null});

  BeforeRet: {
    result_2952800822 = nimCopy(result_2952800822, none_2986344655(), NTI2986344567);
    Label1: {
      var layout_2952800850 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2952800851 = ({x: 0.0, y: 0.0});
      var i_536872508 = 0;
      var L_536872509 = (self_2952800819.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872508 < L_536872509)) break Label3;
            layout_2952800850 = self_2952800819.lastLayouts[chckIndx(i_536872508, 0, (self_2952800819.lastLayouts).length - 1)]["Field0"];
            offset_2952800851 = self_2952800819.lastLayouts[chckIndx(i_536872508, 0, (self_2952800819.lastLayouts).length - 1)]["Field1"];
            var bounds_2952800861 = HEX2B_2097152155(bounds_3087009959(layout_2952800850), offset_2952800851);
            var smallestRange_2952800862 = ({parent: null, first: 0, last: 0});
            if (contains_2097152182(bounds_2952800861, posContent_2952800820)) {
            Label4: {
              var __2952800863 = 0;
              var child_2952800864 = null;
              var n_536872500 = layout_2952800850.node;
              var idx_536872501 = -1;
              var i_536872502 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872501 == -1)) {
                    var colontmp__536872505 = nimCopy(null, {Field0: i_536872502, Field1: n_536872500}, NTI2986345785);
                    __2952800863 = colontmp__536872505["Field0"];
                    child_2952800864 = colontmp__536872505["Field1"];
                    if (contains_2952792774(layout_2952800850.nodeToVisualNode, child_2952800864.id)) {
                    var visualNode_2952801010 = HEX5BHEX5D_2952793679(layout_2952800850.nodeToVisualNode, child_2952800864.id);
                    var bounds_2952801020 = HEX2B_2097152155(absoluteBounds_3087009572(visualNode_2952801010), vec2_2130707293(0.0, offset_2952800851.y));
                    if (contains_2097152182(bounds_2952801020, posContent_2952800820)) {
                    if (((((smallestRange_2952800862.parent == null) || (smallestRange_2952800862.parent.depth < visualNode_2952801010.parent.depth)) || ((visualNode_2952801010.parent.depth == smallestRange_2952800862.parent.depth) && (smallestRange_2952800862.parent.indent < visualNode_2952801010.parent.indent))) || ((visualNode_2952801010.parent.depth == smallestRange_2952800862.parent.depth) && (subInt(visualNode_2952801010.last, visualNode_2952801010.first) < subInt(smallestRange_2952800862.last, smallestRange_2952800862.first))))) {
                    smallestRange_2952800862 = nimCopy(smallestRange_2952800862, visualNode_2952801010, NTI3087007774);
                    result_2952800822 = nimCopy(result_2952800822, some_2986344674(child_2952800864), NTI2986344567);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872501, 1) < len_2986344536(n_536872500))) {
                    n_536872500 = HEX5BHEX5D_2986344532(n_536872500, addInt(idx_536872501, 1));
                    idx_536872501 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872506 = next_2986344641(n_536872500);
                      if (!isSome_2986346330(oHEX60gensym74_536872506)) Temporary8 = false; else {                        var ne_536872507 = get_2986346350(oHEX60gensym74_536872506);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872500 = ne_536872507;
                    idx_536872501 = -1;
                    }
                    else {
                    if ((!((n_536872500.parent == null)) && !((n_536872500.parent == layout_2952800850.node)))) {
                    idx_536872501 = index_2986344556(n_536872500);
                    n_536872500 = n_536872500.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872502 = addInt(i_536872502, 1);
                    }
                  }
              };
            };
            if (isNone_2986346358(result_2952800822)) {
            result_2952800822 = nimCopy(result_2952800822, some_2986344674(layout_2952800850.node), NTI2986344567);
            }
            
            break BeforeRet;
            }
            
            i_536872508 = addInt(i_536872508, 1);
            if (!(((self_2952800819.lastLayouts).length == L_536872509))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952800822;

}

function handleMousePress_2952807317(self_2952807318, button_2952807319, mousePosWindow_2952807320) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2952807365 = HEX2D_2113929748(mousePosWindow_2952807320, xy_2113929248(self_2952807318.lastBounds));
    if ((button_2952807319 == 0)) {
      var oHEX60gensym1060_2952807372 = getItemAtPixelPosition_2952807262(self_2952807318, mousePosWindow_2952807320);
      if (!isSome_1191185117(oHEX60gensym1060_2952807372)) Temporary1 = false; else {        var index_2952807395 = get_1191185211(oHEX60gensym1060_2952807372);
        Temporary1 = true;      }    if (Temporary1) {
    self_2952807318.selectedCompletion = index_2952807395;
    applySelectedCompletion_2952804033(self_2952807318);
    }
    else {
      if (!!(isEditing_2952797524(self_2952807318))) Temporary2 = false; else {        var oHEX60gensym1061_2952807398 = getNodeAtPixelPosition_2952800818(self_2952807318, mousePosContent_2952807365);
        if (!isSome_2986346330(oHEX60gensym1061_2952807398)) Temporary3 = false; else {          var n_2952807421 = get_2986346350(oHEX60gensym1061_2952807398);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2952793820(self_2952807318, n_2952807421);
    }
    }
    }
    

  
}

function updateFontSettings_3321888851(self_3321888852) {
    var newFontSize_3321889936 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3321888852.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3321889936 == self_3321888852.mFontSize))) {
    self_3321888852.mFontSize = newFontSize_3321889936;
    var d_3321889937 = document.createElement("div");
    d_3321889937.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3321889937.innerHTML = toJSStr(nsuRepeatStr([35], 100));
    self_3321888852.content.appendChild(d_3321889937);
    self_3321888852.mLineHeight = d_3321889937.clientHeight;
    self_3321888852.mCharWidth = (d_3321889937.clientWidth / 100.0);
    self_3321888852.content.removeChild(d_3321889937);
    self_3321888852.redrawEverything = true;
    }
    

  
}

function charWidth_3321889971(self_3321889972) {
  var result_3321889973 = 0.0;

    updateFontSettings_3321888851(self_3321889972);
    result_3321889973 = self_3321889972.mCharWidth;

  return result_3321889973;

}

function charWidth_2768240796(self_2768240797) {
  var result_2768240798 = 0.0;

  return result_2768240798;

}

function charWidth_2768240799(self_2768240797) {
  var result_2768240800 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240797);
    if (isObj(self_2768240797.m_type, NTI3321888779)) {
    result_2768240800 = charWidth_3321889971(self_2768240797);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240797.m_type, NTI2768240644)) {
    result_2768240800 = charWidth_2768240796(self_2768240797);
    break BeforeRet;
    }
    }
  };

  return result_2768240800;

}

function isThickCursor_2818582959(self_2818582960) {
  var result_2818582961 = false;

  BeforeRet: {
    result_2818582961 = getOption_2818582962(self_2818582960.editor, getContextWithMode_2818582956(self_2818582960, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818582961;

}

function HEX2DHEX3D_2818591287(x_2818591289, x_2818591289_Idx, y_2818591290) {
    x_2818591289[x_2818591289_Idx] = (x_2818591289[x_2818591289_Idx] - y_2818591290);

  
}

function some_2818591301(val_2818591303) {
  var result_2818591308 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818591308.has = true;
    result_2818591308.val = nimCopy(result_2818591308.val, val_2818591303, NTI2818584754);

  return result_2818591308;

}

function none_2818591314() {
  var result_2818591321 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818591321;

}

function getCursorAtPixelPos_2818591163(self_2818591164, mousePosWindow_2818591165) {
  var result_2818591171 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818591212 = HEX2D_2113929748(mousePosWindow_2818591165, xy_2113929248(self_2818591164.lastContentBounds));
    Label1: {
      var li_2818591246 = 0;
      var line_2818591247 = null;
      var i_536872518 = 0;
      var L_536872519 = (self_2818591164.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872518 < L_536872519)) break Label3;
            li_2818591246 = i_536872518;
            line_2818591247 = self_2818591164.lastRenderedLines[chckIndx(i_536872518, 0, (self_2818591164.lastRenderedLines).length - 1)];
            var startOffset_2818591248 = 0;
            Label4: {
              var i_2818591281 = 0;
              var part_2818591282 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872514 = 0;
              var L_536872515 = (line_2818591247.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872514 < L_536872515)) break Label6;
                    i_2818591281 = i_536872514;
                    part_2818591282 = nimCopy(part_2818591282, line_2818591247.parts[chckIndx(i_536872514, 0, (line_2818591247.parts).length - 1)], NTI2818572422);
                    if ((contains_2097152182(part_2818591282.bounds, mousePosContent_2818591212) || ((((i_2818591281 == (line_2818591247.parts).length - 1) && (part_2818591282.bounds.y <= mousePosContent_2818591212.y)) && (mousePosContent_2818591212.y <= (part_2818591282.bounds.y + part_2818591282.bounds.h))) && (part_2818591282.bounds.x <= mousePosContent_2818591212.x)))) {
                    var offsetFromLeft_2818591286 = [((mousePosContent_2818591212.x - part_2818591282.bounds.x) / charWidth_2768240799(self_2818591164.editor.platform))];
                    if (isThickCursor_2818582959(self_2818591164)) {
                    HEX2DHEX3D_2818591287(offsetFromLeft_2818591286, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818591286, 0, 0.5);
                    }
                    
                    var index_2818591300 = clamp_1660945119(((offsetFromLeft_2818591286[0]) | 0), 0, (part_2818591282.text).length);
                    result_2818591171 = nimCopy(result_2818591171, some_2818591301({Field0: line_2818591247.index, Field1: addInt(startOffset_2818591248, index_2818591300)}), NTI2818584679);
                    break BeforeRet;
                    }
                    
                    startOffset_2818591248 = addInt(startOffset_2818591248, (part_2818591282.text).length);
                    i_536872514 = addInt(i_536872514, 1);
                    if (!(((line_2818591247.parts).length == L_536872515))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872518 = addInt(i_536872518, 1);
            if (!(((self_2818591164.lastRenderedLines).length == L_536872519))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818591171 = nimCopy(result_2818591171, none_2818591314(), NTI2818584679);
    break BeforeRet;
  };

  return result_2818591171;

}

function isSome_2818591356(self_2818591358) {
  var result_2818591359 = false;

    result_2818591359 = self_2818591358.has;

  return result_2818591359;

}

function isNone_2818591381(self_2818591383) {
  var result_2818591384 = false;

    result_2818591384 = !(self_2818591383.has);

  return result_2818591384;

}

function get_2818591373(self_2818591375) {
  var result_2818591376 = {Field0: 0, Field1: 0};

    if (isNone_2818591381(self_2818591375)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818591376 = self_2818591375.val;

  return result_2818591376;

}

function handleMousePress_2818591340(self_2818591341, button_2818591342, mousePosWindow_2818591343) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2818591342 == 0)) Temporary1 = false; else {        var oHEX60gensym1024_2818591351 = getCursorAtPixelPos_2818591163(self_2818591341, mousePosWindow_2818591343);
        if (!isSome_2818591356(oHEX60gensym1024_2818591351)) Temporary2 = false; else {          var cursor_2818591396 = nimCopy(null, get_2818591373(oHEX60gensym1024_2818591351), NTI2415919113);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572799(self_2818591341, toSelection_2415919597(cursor_2818591396));
    }
    
      if (!(button_2818591342 == 3)) Temporary3 = false; else {        var oHEX60gensym1026_2818591403 = getCursorAtPixelPos_2818591163(self_2818591341, mousePosWindow_2818591343);
        if (!isSome_2818591356(oHEX60gensym1026_2818591403)) Temporary4 = false; else {          var cursor_2818591426 = nimCopy(null, get_2818591373(oHEX60gensym1026_2818591403), NTI2415919113);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818585060(self_2818591341, cursor_2818591426);
    }
    
      if (!(button_2818591342 == 4)) Temporary5 = false; else {        var oHEX60gensym1027_2818591433 = getCursorAtPixelPos_2818591163(self_2818591341, mousePosWindow_2818591343);
        if (!isSome_2818591356(oHEX60gensym1027_2818591433)) Temporary6 = false; else {          var cursor_2818591456 = nimCopy(null, get_2818591373(oHEX60gensym1027_2818591433), NTI2415919113);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585187(self_2818591341, cursor_2818591456.Field0);
    }
    

  
}

function handleMousePress_2382364841(self_2382364842, button_2382364843, mousePosWindow_2382364844) {
  
}

function handleMousePress_2382364845(self_2382364842, button_2382364843, mousePosWindow_2382364844) {
    chckNilDisp(self_2382364842);
    if (isObj(self_2382364842.m_type, NTI2952791527)) {
    handleMousePress_2952807317(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    else {
    if (isObj(self_2382364842.m_type, NTI2818572510)) {
    handleMousePress_2818591340(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    else {
    if (isObj(self_2382364842.m_type, NTI2382364676)) {
    handleMousePress_2382364841(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    }}

  
}

function handleMouseRelease_2952807422(self_2952807423, button_2952807424, mousePosWindow_2952807425) {
  
}

function handleMouseRelease_2818591457(self_2818591458, button_2818591459, mousePosWindow_2818591460) {
  
}

function handleMouseRelease_2382364846(self_2382364847, button_2382364848, mousePosWindow_2382364849) {
  
}

function handleMouseRelease_2382364850(self_2382364847, button_2382364848, mousePosWindow_2382364849) {
    chckNilDisp(self_2382364847);
    if (isObj(self_2382364847.m_type, NTI2952791527)) {
    handleMouseRelease_2952807422(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    else {
    if (isObj(self_2382364847.m_type, NTI2818572510)) {
    handleMouseRelease_2818591457(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    else {
    if (isObj(self_2382364847.m_type, NTI2382364676)) {
    handleMouseRelease_2382364846(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    }}

  
}

function handleMouseMove_2952807426(self_2952807427, mousePosWindow_2952807428, mousePosDelta_2952807429, modifiers_2952807430, buttons_2952807431) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2952807431[0] != undefined)) {
    var mousePosContent_2952807480 = HEX2D_2113929748(mousePosWindow_2952807428, xy_2113929248(self_2952807427.lastBounds));
      if (!!(isEditing_2952797524(self_2952807427))) Temporary1 = false; else {        var oHEX60gensym1063_2952807483 = getNodeAtPixelPosition_2952800818(self_2952807427, mousePosContent_2952807480);
        if (!isSome_2986346330(oHEX60gensym1063_2952807483)) Temporary2 = false; else {          var n_2952807506 = get_2986346350(oHEX60gensym1063_2952807483);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2952793820(self_2952807427, n_2952807506);
    }
    
    }
    

  
}

function handleMouseMove_2818591461(self_2818591462, mousePosWindow_2818591463, mousePosDelta_2818591464, modifiers_2818591465, buttons_2818591466) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2818591466[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1029_2818591474 = getCursorAtPixelPos_2818591163(self_2818591462, mousePosWindow_2818591463);
        if (!isSome_2818591356(oHEX60gensym1029_2818591474)) Temporary2 = false; else {          var cursor_2818591497 = nimCopy(null, get_2818591373(oHEX60gensym1029_2818591474), NTI2415919113);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572799(self_2818591462, toSelection_2415919600(cursor_2818591497, selection_2818572793(self_2818591462), 3));
    }
    

  
}

function handleMouseMove_2382364851(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856) {
  
}

function handleMouseMove_2382364857(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856) {
    chckNilDisp(self_2382364852);
    if (isObj(self_2382364852.m_type, NTI2952791527)) {
    handleMouseMove_2952807426(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    else {
    if (isObj(self_2382364852.m_type, NTI2818572510)) {
    handleMouseMove_2818591461(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    else {
    if (isObj(self_2382364852.m_type, NTI2382364676)) {
    handleMouseMove_2382364851(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    }}

  
}

function HEX26_3170894198(x_3170894200, y_3170894201) {
  var result_3170894202 = [];

    result_3170894202 = new Array(chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647) ; ++i) { result_3170894202[i] = null; }    Label1: {
      var i_3170894220 = 0;
      var colontmp__536872522 = 0;
      colontmp__536872522 = subInt((x_3170894200).length, 1);
      var res_536872523 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872523 <= colontmp__536872522)) break Label3;
            i_3170894220 = res_536872523;
            result_3170894202[chckIndx(i_3170894220, 0, (result_3170894202).length - 1)] = x_3170894200[chckIndx(i_3170894220, 0, (x_3170894200).length - 1)];
            res_536872523 = addInt(res_536872523, 1);
          }
      };
    };
    Label4: {
      var i_3170894228 = 0;
      var colontmp__536872526 = 0;
      colontmp__536872526 = subInt((y_3170894201).length, 1);
      var res_536872527 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872527 <= colontmp__536872526)) break Label6;
            i_3170894228 = res_536872527;
            result_3170894202[chckIndx(addInt(i_3170894228, (x_3170894200).length), 0, (result_3170894202).length - 1)] = y_3170894201[chckIndx(i_3170894228, 0, (y_3170894201).length - 1)];
            res_536872527 = addInt(res_536872527, 1);
          }
      };
    };

  return result_3170894202;

}

function getEventHandlers_3221225732(self_3221225733) {
  var result_3221225734 = [];

  BeforeRet: {
    result_3221225734 = nimCopy(null, HEX26_3170894198(getEventHandlers_2382364828(self_3221225733.textEditor), [self_3221225733.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3221225734;

}

function getEventHandlers_3170894191(self_3170894192) {
  var result_3170894193 = [];

  BeforeRet: {
    result_3170894193 = nimCopy(null, HEX26_3170894198(getEventHandlers_2382364828(self_3170894192.textEditor), [self_3170894192.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3170894193;

}

function getEventHandlers_2449473588(self_2449473589) {
  var result_2449473590 = [];

  BeforeRet: {
    result_2449473590 = nimCopy(null, [self_2449473589.eventHandler], NTI2432696334);
    break BeforeRet;
  };

  return result_2449473590;

}

function getEventHandlers_2449473595(self_2449473589) {
  var result_2449473596 = [];

  BeforeRet: {
    chckNilDisp(self_2449473589);
    if (isObj(self_2449473589.m_type, NTI3221225494)) {
    result_2449473596 = getEventHandlers_3221225732(self_2449473589);
    break BeforeRet;
    }
    else {
    if (isObj(self_2449473589.m_type, NTI3170893828)) {
    result_2449473596 = getEventHandlers_3170894191(self_2449473589);
    break BeforeRet;
    }
    else {
    if (isObj(self_2449473589.m_type, NTI2449473540)) {
    result_2449473596 = getEventHandlers_2449473588(self_2449473589);
    break BeforeRet;
    }
    }}
  };

  return result_2449473596;

}

function handleScroll_3221226184(self_3221226185, scroll_3221226186, mousePosWindow_3221226187) {
    self_3221226185.selected = clamp_1660945119(subInt(self_3221226185.selected, ((scroll_3221226186.y) | 0)), 0, subInt((self_3221226185.completions).length, 1));

  
}

function handleScroll_3170894268(self_3170894269, scroll_3170894270, mousePosWindow_3170894271) {
    self_3170894269.selected = clamp_1660945119(subInt(self_3170894269.selected, ((scroll_3170894270.y) | 0)), 0, subInt((self_3170894269.completions).length, 1));

  
}

function handleScroll_2449473597(self_2449473598, scroll_2449473599, mousePosWindow_2449473600) {
  
}

function handleScroll_2449473601(self_2449473598, scroll_2449473599, mousePosWindow_2449473600) {
    chckNilDisp(self_2449473598);
    if (isObj(self_2449473598.m_type, NTI3221225494)) {
    handleScroll_3221226184(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    else {
    if (isObj(self_2449473598.m_type, NTI3170893828)) {
    handleScroll_3170894268(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    else {
    if (isObj(self_2449473598.m_type, NTI2449473540)) {
    handleScroll_2449473597(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    }}

  
}

function none_3221225686() {
  var result_3221225692 = ({val: null});

  return result_3221225692;

}

function some_3221225701(val_3221225703) {
  var result_3221225704 = ({val: null});

    if (!(!((val_3221225703 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225704.val = val_3221225703;

  return result_3221225704;

}

function getItemAtPixelPosition_3221225678(self_3221225679, posWindow_3221225680) {
  var result_3221225685 = ({val: null});

  BeforeRet: {
    result_3221225685 = nimCopy(result_3221225685, none_3221225686(), NTI3221225617);
    Label1: {
      var index_3221225696 = 0;
      var rect_3221225697 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872530 = 0;
      var L_536872531 = (self_3221225679.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872530 < L_536872531)) break Label3;
            index_3221225696 = self_3221225679.lastItems[chckIndx(i_536872530, 0, (self_3221225679.lastItems).length - 1)]["Field0"];
            rect_3221225697 = self_3221225679.lastItems[chckIndx(i_536872530, 0, (self_3221225679.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_3221225697, posWindow_3221225680) && (0 <= index_3221225696)) && (index_3221225696 <= (self_3221225679.completions).length - 1))) {
            result_3221225685 = nimCopy(result_3221225685, some_3221225701(self_3221225679.completions[chckIndx(index_3221225696, 0, (self_3221225679.completions).length - 1)]), NTI3221225617);
            break BeforeRet;
            }
            
            i_536872530 = addInt(i_536872530, 1);
            if (!(((self_3221225679.lastItems).length == L_536872531))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3221225685;

}

function isSome_3221226211(self_3221226213) {
  var result_3221226214 = false;

    result_3221226214 = !((self_3221226213.val == null));

  return result_3221226214;

}

function isNone_3221226239(self_3221226241) {
  var result_3221226242 = false;

    result_3221226242 = (self_3221226241.val == null);

  return result_3221226242;

}

function get_3221226231(self_3221226233) {
  var result_3221226234 = null;

    if (isNone_3221226239(self_3221226233)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226234 = self_3221226233["val"];

  return result_3221226234;

}

function handleMousePress_3221226196(self_3221226197, button_3221226198, mousePosWindow_3221226199) {
      var Temporary1;

    if ((button_3221226198 == 0)) {
      var oHEX60gensym65_3221226206 = getItemAtPixelPosition_3221225678(self_3221226197, mousePosWindow_3221226199);
      if (!isSome_3221226211(oHEX60gensym65_3221226206)) Temporary1 = false; else {        var item_3221226257 = get_3221226231(oHEX60gensym65_3221226206);
        Temporary1 = true;      }    if (Temporary1) {
    self_3221226197.handleItemConfirmed(item_3221226257);
    popPopup_1291849115(self_3221226197.editor, self_3221226197);
    }
    
    }
    

  
}

function none_3170894096() {
  var result_3170894103 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3170894103;

}

function some_3170894131(val_3170894133) {
  var result_3170894134 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3170894134.has = true;
    result_3170894134.val = nimCopy(result_3170894134.val, val_3170894133, NTI2952791524);

  return result_3170894134;

}

function getItemAtPixelPosition_3170894087(self_3170894088, posWindow_3170894089) {
  var result_3170894095 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3170894095 = nimCopy(result_3170894095, none_3170894096(), NTI3170893968);
    Label1: {
      var index_3170894126 = 0;
      var rect_3170894127 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872534 = 0;
      var L_536872535 = (self_3170894088.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872534 < L_536872535)) break Label3;
            index_3170894126 = self_3170894088.lastItems[chckIndx(i_536872534, 0, (self_3170894088.lastItems).length - 1)]["Field0"];
            rect_3170894127 = self_3170894088.lastItems[chckIndx(i_536872534, 0, (self_3170894088.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_3170894127, posWindow_3170894089) && (0 <= index_3170894126)) && (index_3170894126 <= (self_3170894088.completions).length - 1))) {
            result_3170894095 = nimCopy(result_3170894095, some_3170894131(self_3170894088.completions[chckIndx(index_3170894126, 0, (self_3170894088.completions).length - 1)]), NTI3170893968);
            break BeforeRet;
            }
            
            i_536872534 = addInt(i_536872534, 1);
            if (!(((self_3170894088.lastItems).length == L_536872535))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3170894095;

}

function isSome_3170894295(self_3170894297) {
  var result_3170894298 = false;

    result_3170894298 = self_3170894297.has;

  return result_3170894298;

}

function isNone_3170894320(self_3170894322) {
  var result_3170894323 = false;

    result_3170894323 = !(self_3170894322.has);

  return result_3170894323;

}

function get_3170894312(self_3170894314) {
  var result_3170894315 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3170894320(self_3170894314)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3170894315 = self_3170894314.val;

  return result_3170894315;

}

function handleMousePress_3170894280(self_3170894281, button_3170894282, mousePosWindow_3170894283) {
      var Temporary1;
    var Temporary2;

    if ((button_3170894282 == 0)) {
      var oHEX60gensym7_3170894290 = getItemAtPixelPosition_3170894087(self_3170894281, mousePosWindow_3170894283);
      if (!isSome_3170894295(oHEX60gensym7_3170894290)) Temporary1 = false; else {        var item_3170894335 = nimCopy(null, get_3170894312(oHEX60gensym7_3170894290), NTI2952791524);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3170894335;
    if (ConstSet330[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952791523)); }
    self_3170894281.handleSymbolSelected(Temporary2.id);
    popPopup_1291849115(self_3170894281.editor, self_3170894281);
    }
    
    }
    

  
}

function handleMousePress_2449473602(self_2449473603, button_2449473604, mousePosWindow_2449473605) {
  
}

function handleMousePress_2449473606(self_2449473603, button_2449473604, mousePosWindow_2449473605) {
    chckNilDisp(self_2449473603);
    if (isObj(self_2449473603.m_type, NTI3221225494)) {
    handleMousePress_3221226196(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    else {
    if (isObj(self_2449473603.m_type, NTI3170893828)) {
    handleMousePress_3170894280(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    else {
    if (isObj(self_2449473603.m_type, NTI2449473540)) {
    handleMousePress_2449473602(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    }}

  
}

function handleMouseRelease_3221226260(self_3221226261, button_3221226262, mousePosWindow_3221226263) {
  
}

function handleMouseRelease_3170894338(self_3170894339, button_3170894340, mousePosWindow_3170894341) {
  
}

function handleMouseRelease_2449473607(self_2449473608, button_2449473609, mousePosWindow_2449473610) {
  
}

function handleMouseRelease_2449473611(self_2449473608, button_2449473609, mousePosWindow_2449473610) {
    chckNilDisp(self_2449473608);
    if (isObj(self_2449473608.m_type, NTI3221225494)) {
    handleMouseRelease_3221226260(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    else {
    if (isObj(self_2449473608.m_type, NTI3170893828)) {
    handleMouseRelease_3170894338(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    else {
    if (isObj(self_2449473608.m_type, NTI2449473540)) {
    handleMouseRelease_2449473607(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    }}

  
}

function handleMouseMove_3221226264(self_3221226265, mousePosWindow_3221226266, mousePosDelta_3221226267, modifiers_3221226268, buttons_3221226269) {
  
}

function handleMouseMove_3170894342(self_3170894343, mousePosWindow_3170894344, mousePosDelta_3170894345, modifiers_3170894346, buttons_3170894347) {
  
}

function handleMouseMove_2449473612(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617) {
  
}

function handleMouseMove_2449473618(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617) {
    chckNilDisp(self_2449473613);
    if (isObj(self_2449473613.m_type, NTI3221225494)) {
    handleMouseMove_3221226264(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    else {
    if (isObj(self_2449473613.m_type, NTI3170893828)) {
    handleMouseMove_3170894342(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    else {
    if (isObj(self_2449473613.m_type, NTI2449473540)) {
    handleMouseMove_2449473612(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    }}

  
}
async function initAsync_2801795119(self_2801795120) {
  var result_2801795122 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2801795133 = loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795134 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795133 || []);
    rawEcho(contentStrict_2801795134);
    var allowEval_2801795135 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2801795135) {
    var _ = (await loadScriptContent(toJSStr(config_2801795133)));
    }
    else {
      var fmtRes_2801795144 = mnewString(0);
      fmtRes_2801795144.push.apply(fmtRes_2801795144, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795144, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2801795122 = undefined;
    break BeforeRet;
  };

  return result_2801795122;

}

function init_2801795167(self_2801795168, path_2801795169) {
    var _ = initAsync_2801795119(self_2801795168);

  
}

function init_2751463435(self_2751463436, path_2751463437) {
  
}

function init_2751463438(self_2751463436, path_2751463437) {
    chckNilDisp(self_2751463436);
    if (isObj(self_2751463436.m_type, NTI2801795076)) {
    init_2801795167(self_2751463436, path_2751463437);
    }
    else {
    if (isObj(self_2751463436.m_type, NTI2751463428)) {
    init_2751463435(self_2751463436, path_2751463437);
    }
    }

  
}

function reload_2801795170(self_2801795171) {
  
}

function reload_2751463439(self_2751463440) {
  
}

function reload_2751463441(self_2751463440) {
    chckNilDisp(self_2751463440);
    if (isObj(self_2751463440.m_type, NTI2801795076)) {
    reload_2801795170(self_2751463440);
    }
    else {
    if (isObj(self_2751463440.m_type, NTI2751463428)) {
    reload_2751463439(self_2751463440);
    }
    }

  
}

function handleUnknownPopupAction_2801795172(self_2801795173, popup_2801795174, action_2801795175, arg_2801795176) {
  var result_2801795177 = false;

    var action_2801795178 = toJSStr(action_2801795175);
    var arg_2801795179 = toJSStr(HEX24_1627394481(arg_2801795176));
    return window.handleUnknownPopupAction(popup_2801795174, action_2801795178,  JSON.parse(arg_2801795179));

  return result_2801795177;

}

function handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463447 = false;

  return result_2751463447;

}

function handleUnknownPopupAction_2751463448(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463449 = false;

  BeforeRet: {
    chckNilDisp(self_2751463443);
    if (isObj(self_2751463443.m_type, NTI2801795076)) {
    result_2751463449 = handleUnknownPopupAction_2801795172(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463443.m_type, NTI2751463428)) {
    result_2751463449 = handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    }
  };

  return result_2751463449;

}

function handleUnknownDocumentEditorAction_2801795180(self_2801795181, editor_2801795182, action_2801795183, arg_2801795184) {
  var result_2801795185 = false;

    var action_2801795186 = toJSStr(action_2801795183);
    var arg_2801795187 = toJSStr(HEX24_1627394481(arg_2801795184));
    return window.handleUnknownDocumentEditorAction(editor_2801795182, action_2801795186, JSON.parse(arg_2801795187));

  return result_2801795185;

}

function handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463455 = false;

  return result_2751463455;

}

function handleUnknownDocumentEditorAction_2751463456(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463457 = false;

  BeforeRet: {
    chckNilDisp(self_2751463451);
    if (isObj(self_2751463451.m_type, NTI2801795076)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2801795180(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463451.m_type, NTI2751463428)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    }
  };

  return result_2751463457;

}

function handleGlobalAction_2801795188(self_2801795189, action_2801795190, arg_2801795191) {
  var result_2801795192 = false;

    var action_2801795193 = toJSStr(action_2801795190);
    var arg_2801795194 = toJSStr(HEX24_1627394481(arg_2801795191));
    return window.handleGlobalAction(action_2801795193, JSON.parse(arg_2801795194));

  return result_2801795192;

}

function handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463462 = false;

  return result_2751463462;

}

function handleGlobalAction_2751463463(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463464 = false;

  BeforeRet: {
    chckNilDisp(self_2751463459);
    if (isObj(self_2751463459.m_type, NTI2801795076)) {
    result_2751463464 = handleGlobalAction_2801795188(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463459.m_type, NTI2751463428)) {
    result_2751463464 = handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    }
  };

  return result_2751463464;

}

function calculateBounds_2785018185(self_2785018186, container_2785018187) {
  var result_2785018188 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2785018189 = ((container_2785018187.x + (self_2785018186.anchor.Field0.x * container_2785018187.w)) + self_2785018186.left);
    var top_2785018190 = ((container_2785018187.y + (self_2785018186.anchor.Field0.y * container_2785018187.h)) + self_2785018186.top);
    var right_2785018191 = ((container_2785018187.x + (self_2785018186.anchor.Field1.x * container_2785018187.w)) + self_2785018186.right);
    var bottom_2785018192 = ((container_2785018187.y + (self_2785018186.anchor.Field1.y * container_2785018187.h)) + self_2785018186.bottom);
    var px_2785018193 = (self_2785018186.pivot.x * (right_2785018191 - left_2785018189));
    var py_2785018194 = (self_2785018186.pivot.y * (bottom_2785018192 - top_2785018190));
    result_2785018188.x = (left_2785018189 - px_2785018193);
    result_2785018188.y = (top_2785018190 - py_2785018194);
    result_2785018188.w = (right_2785018191 - left_2785018189);
    result_2785018188.h = (bottom_2785018192 - top_2785018190);

  return result_2785018188;

}

function addQuoted_2785018254(s_2785018256, s_2785018256_Idx, x_2785018257) {
    s_2785018256[s_2785018256_Idx].push.apply(s_2785018256[s_2785018256_Idx], HEX24_2130707356(x_2785018257));;

  
}

function HEX24_2785018222(x_2785018224) {
  var result_2785018225 = [[]];

    result_2785018225[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym11_2785018236 = 0;
    if ((0 < countHEX60gensym11_2785018236)) {
    result_2785018225[0].push.apply(result_2785018225[0], [44,32]);;
    }
    
    result_2785018225[0].push.apply(result_2785018225[0], [109,105,110]);;
    result_2785018225[0].push.apply(result_2785018225[0], [58,32]);;
    countHEX60gensym11_2785018236 += 1;
    addQuoted_2785018254(result_2785018225, 0, x_2785018224["Field0"]);
    if ((0 < countHEX60gensym11_2785018236)) {
    result_2785018225[0].push.apply(result_2785018225[0], [44,32]);;
    }
    
    result_2785018225[0].push.apply(result_2785018225[0], [109,97,120]);;
    result_2785018225[0].push.apply(result_2785018225[0], [58,32]);;
    countHEX60gensym11_2785018236 += 1;
    addQuoted_2785018254(result_2785018225, 0, x_2785018224["Field1"]);
    result_2785018225[0].push.apply(result_2785018225[0], [41]);;

  return result_2785018225[0];

}

function formatValue_2785018217(result_2785018219, result_2785018219_Idx, value_2785018220, specifier_2785018221) {
    formatValue_721420459(result_2785018219, result_2785018219_Idx, HEX24_2785018222(value_2785018220), specifier_2785018221);

  
}

function layoutWidget_2785018195(self_2785018196, container_2785018197, frameIndex_2785018198, options_2785018199) {
    var newBounds_2785018200 = calculateBounds_2785018185(self_2785018196, container_2785018197);
    if (self_2785018196.logLayout) {
    var fmtRes_2785018206 = [mnewString(0)];
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2785018207(fmtRes_2785018206, 0, container_2785018197, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018206, 0, frameIndex_2785018198, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018206, 0, self_2785018196.anchor, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018206, 0, self_2785018196.pivot, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.left, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.top, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.right, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [44]);;
    formatValue_2785018295(fmtRes_2785018206, 0, self_2785018196.bottom, []);
    fmtRes_2785018206[0].push.apply(fmtRes_2785018206[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018206, 0, newBounds_2785018200, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018206[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018200, self_2785018196.lastBounds))) {
    var fmtRes_2785018381 = [mnewString(0)];
    fmtRes_2785018381[0].push.apply(fmtRes_2785018381[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018381, 0, self_2785018196.lastBounds, []);
    fmtRes_2785018381[0].push.apply(fmtRes_2785018381[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018381, 0, newBounds_2785018200, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018381[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018200, self_2785018196.lastBounds))) {
    self_2785018196.lastBounds = nimCopy(self_2785018196.lastBounds, newBounds_2785018200, NTI2113929221);
    self_2785018196.lastBoundsChange = frameIndex_2785018198;
    }
    
    if (((frameIndex_2785018198 <= self_2785018196.lastHierarchyChange) || (frameIndex_2785018198 <= self_2785018196.lastBoundsChange))) {
    Label1: {
      var c_2785018399 = null;
      var i_536872538 = 0;
      var L_536872539 = (self_2785018196.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872538 < L_536872539)) break Label3;
            c_2785018399 = self_2785018196.children[chckIndx(i_536872538, 0, (self_2785018196.children).length - 1)];
            layoutWidget_2785018180(c_2785018399, newBounds_2785018200, frameIndex_2785018198, options_2785018199);
            i_536872538 = addInt(i_536872538, 1);
            if (!(((self_2785018196.children).length == L_536872539))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2785017911(self_2785017912) {
  var result_2785017913 = 0.0;

    result_2785017913 = (self_2785017912.bottom - self_2785017912.top);

  return result_2785017913;

}

function layoutWidget_2785018632(self_2785018633, container_2785018634, frameIndex_2785018635, options_2785018636) {
    var newBounds_2785018637 = calculateBounds_2785018185(self_2785018633, container_2785018634);
    if (self_2785018633.logLayout) {
    var fmtRes_2785018643 = [mnewString(0)];
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2785018207(fmtRes_2785018643, 0, container_2785018634, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018643, 0, frameIndex_2785018635, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018643, 0, self_2785018633.anchor, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018643, 0, self_2785018633.pivot, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.left, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.top, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.right, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [44]);;
    formatValue_2785018295(fmtRes_2785018643, 0, self_2785018633.bottom, []);
    fmtRes_2785018643[0].push.apply(fmtRes_2785018643[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018643, 0, newBounds_2785018637, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018643[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018637, self_2785018633.lastBounds))) {
    var fmtRes_2785018698 = [mnewString(0)];
    fmtRes_2785018698[0].push.apply(fmtRes_2785018698[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018698, 0, self_2785018633.lastBounds, []);
    fmtRes_2785018698[0].push.apply(fmtRes_2785018698[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018698, 0, newBounds_2785018637, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018698[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018637, self_2785018633.lastBounds))) {
    self_2785018633.lastBounds = nimCopy(self_2785018633.lastBounds, newBounds_2785018637, NTI2113929221);
    self_2785018633.lastBoundsChange = frameIndex_2785018635;
    }
    
    if (((frameIndex_2785018635 <= self_2785018633.lastHierarchyChange) || (frameIndex_2785018635 <= self_2785018633.lastBoundsChange))) {
    var lastY_2785018713 = 0.0;
    Label1: {
      var c_2785018717 = null;
      var i_536872542 = 0;
      var L_536872543 = (self_2785018633.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872542 < L_536872543)) break Label3;
            c_2785018717 = self_2785018633.children[chckIndx(i_536872542, 0, (self_2785018633.children).length - 1)];
            var height_2785018718 = height_2785017911(c_2785018717);
            c_2785018717.top = lastY_2785018713;
            c_2785018717.bottom = (lastY_2785018713 + height_2785018718);
            layoutWidget_2785018180(c_2785018717, newBounds_2785018637, frameIndex_2785018635, options_2785018636);
            lastY_2785018713 = ((c_2785018717.lastBounds.y + c_2785018717.lastBounds.h) - newBounds_2785018637.y);
            i_536872542 = addInt(i_536872542, 1);
            if (!(((self_2785018633.children).length == L_536872543))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2785018533() {
  var result_2785018540 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2785018540;

}

function isSome_2785018553(self_2785018555) {
  var result_2785018556 = false;

    result_2785018556 = self_2785018555.has;

  return result_2785018556;

}

function isNone_2785018578(self_2785018580) {
  var result_2785018581 = false;

    result_2785018581 = !(self_2785018580.has);

  return result_2785018581;

}

function get_2785018570(self_2785018572) {
  var result_2785018573 = null;

  BeforeRet: {
    if (isNone_2785018578(self_2785018572)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785018573 = self_2785018572.val;
    break BeforeRet;
  };

  return result_2785018573;

}

function some_2785018615(val_2785018617) {
  var result_2785018618 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2785018618.has = true;
    result_2785018618.val = nimCopy(result_2785018618.val, val_2785018617, NTI2113929221);

  return result_2785018618;

}

function layoutWidget_2785018400(self_2785018401, container_2785018402, frameIndex_2785018403, options_2785018404) {
            var Temporary10;

    var newBounds_2785018405 = calculateBounds_2785018185(self_2785018401, container_2785018402);
    if (self_2785018401.logLayout) {
    var fmtRes_2785018411 = [mnewString(0)];
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2785018207(fmtRes_2785018411, 0, container_2785018402, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018411, 0, frameIndex_2785018403, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018411, 0, self_2785018401.anchor, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018411, 0, self_2785018401.pivot, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.left, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.top, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.right, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [44]);;
    formatValue_2785018295(fmtRes_2785018411, 0, self_2785018401.bottom, []);
    fmtRes_2785018411[0].push.apply(fmtRes_2785018411[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018411, 0, newBounds_2785018405, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018411[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018405, self_2785018401.lastBounds))) {
    var fmtRes_2785018466 = [mnewString(0)];
    fmtRes_2785018466[0].push.apply(fmtRes_2785018466[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018466, 0, self_2785018401.lastBounds, []);
    fmtRes_2785018466[0].push.apply(fmtRes_2785018466[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018466, 0, newBounds_2785018405, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018466[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018405, self_2785018401.lastBounds))) {
    self_2785018401.lastBounds = nimCopy(self_2785018401.lastBounds, newBounds_2785018405, NTI2113929221);
    self_2785018401.lastBoundsChange = frameIndex_2785018403;
    }
    
    if (((frameIndex_2785018403 <= self_2785018401.lastHierarchyChange) || (frameIndex_2785018403 <= self_2785018401.lastBoundsChange))) {
    Label1: {
      var i_2785018513 = 0;
      var c_2785018514 = null;
      var i_536872551 = 0;
      var L_536872552 = (self_2785018401.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872551 < L_536872552)) break Label3;
            i_2785018513 = i_536872551;
            c_2785018514 = self_2785018401.children[chckIndx(i_536872551, 0, (self_2785018401.children).length - 1)];
            var oldBounds_2785018515 = nimCopy(null, c_2785018514.lastBounds, NTI2113929221);
            layoutWidget_2785018180(c_2785018514, newBounds_2785018405, frameIndex_2785018403, options_2785018404);
            var newBounds_2785018516 = nimCopy(null, c_2785018514.lastBounds, NTI2113929221);
            if ((!(HEX3DHEX3D_2785018366(oldBounds_2785018515, newBounds_2785018516)) && !(contains_2097152186(newBounds_2785018516, oldBounds_2785018515)))) {
            var invalidationRect_2785018521 = nimCopy(null, oldBounds_2785018515, NTI2113929221);
            Label4: {
              var k_2785018527 = 0;
              var colontmp__536872547 = 0;
              colontmp__536872547 = subInt(i_2785018513, 1);
              var res_536872548 = colontmp__536872547;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872548)) break Label6;
                    k_2785018527 = res_536872548;
                    invalidate_2785018087(self_2785018401.children[chckIndx(k_2785018527, 0, (self_2785018401.children).length - 1)], frameIndex_2785018403, invalidationRect_2785018521);
                    if (contains_2097152186(self_2785018401.children[chckIndx(k_2785018527, 0, (self_2785018401.children).length - 1)].lastBounds, invalidationRect_2785018521)) {
                    break Label4;
                    }
                    
                    res_536872548 = subInt(res_536872548, 1);
                  }
              };
            };
            }
            
            i_536872551 = addInt(i_536872551, 1);
            if (!(((self_2785018401.children).length == L_536872552))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2785018541 = [none_2785018533()];
    Label7: {
      var i_2785018547 = 0;
      var c_2785018548 = null;
      var i_536872555 = 0;
      var L_536872556 = (self_2785018401.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872555 < L_536872556)) break Label9;
            i_2785018547 = i_536872555;
            c_2785018548 = self_2785018401.children[chckIndx(i_536872555, 0, (self_2785018401.children).length - 1)];
            if (isSome_2785018553(invalidationRect_2785018541[0])) {
            invalidate_2785018087(c_2785018548, frameIndex_2785018403, get_2785018570(invalidationRect_2785018541[0]));
            }
            
            if (isSome_2785018553(invalidationRect_2785018541[0])) {
            Temporary10 = some_2785018615(or_2113929296(get_2785018570(invalidationRect_2785018541[0]), c_2785018548.lastBounds));
            }
            else {
            Temporary10 = some_2785018615(c_2785018548.lastBounds);
            }
            
            invalidationRect_2785018541[0] = nimCopy(invalidationRect_2785018541[0], Temporary10, NTI2785018260);
            i_536872555 = addInt(i_536872555, 1);
            if (!(((self_2785018401.children).length == L_536872556))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2785018806(self_2785018807, container_2785018808, frameIndex_2785018809, options_2785018810) {
    var newBounds_2785018811 = calculateBounds_2785018185(self_2785018807, container_2785018808);
    if (self_2785018807.sizeToContent) {
    var size_2785018812 = options_2785018810.getTextBounds(self_2785018807.text);
    var incX_2785018813 = max_33555642((size_2785018812.x - newBounds_2785018811.w), 0.0);
    var incY_2785018814 = max_33555642((size_2785018812.y - newBounds_2785018811.h), 0.0);
    newBounds_2785018811.w = size_2785018812.x;
    newBounds_2785018811.h = size_2785018812.y;
    HEX2DHEX3D_2634022922(newBounds_2785018811, "x", (incX_2785018813 * self_2785018807.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2785018811, "y", (incY_2785018814 * self_2785018807.pivot.y));
    }
    
    if (self_2785018807.logLayout) {
    var fmtRes_2785018828 = [mnewString(0)];
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2785018828, 0, self_2785018807.text, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [39,44,32]);;
    formatValue_2785018207(fmtRes_2785018828, 0, container_2785018808, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018828, 0, frameIndex_2785018809, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018828, 0, self_2785018807.anchor, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018828, 0, self_2785018807.pivot, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.left, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.top, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.right, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [44]);;
    formatValue_2785018295(fmtRes_2785018828, 0, self_2785018807.bottom, []);
    fmtRes_2785018828[0].push.apply(fmtRes_2785018828[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018828, 0, newBounds_2785018811, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018828[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018811, self_2785018807.lastBounds))) {
    var fmtRes_2785018883 = [mnewString(0)];
    fmtRes_2785018883[0].push.apply(fmtRes_2785018883[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018883, 0, self_2785018807.lastBounds, []);
    fmtRes_2785018883[0].push.apply(fmtRes_2785018883[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018883, 0, newBounds_2785018811, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018883[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018811, self_2785018807.lastBounds))) {
    self_2785018807.lastBounds = nimCopy(self_2785018807.lastBounds, newBounds_2785018811, NTI2113929221);
    self_2785018807.lastBoundsChange = frameIndex_2785018809;
    }
    

  
}

function width_2785017908(self_2785017909) {
  var result_2785017910 = 0.0;

    result_2785017910 = (self_2785017909.right - self_2785017909.left);

  return result_2785017910;

}

function layoutWidget_2785018719(self_2785018720, container_2785018721, frameIndex_2785018722, options_2785018723) {
    var newBounds_2785018724 = calculateBounds_2785018185(self_2785018720, container_2785018721);
    if (self_2785018720.logLayout) {
    var fmtRes_2785018730 = [mnewString(0)];
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2785018207(fmtRes_2785018730, 0, container_2785018721, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018730, 0, frameIndex_2785018722, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018217(fmtRes_2785018730, 0, self_2785018720.anchor, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018284(fmtRes_2785018730, 0, self_2785018720.pivot, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.left, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.top, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44,32]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.right, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [44]);;
    formatValue_2785018295(fmtRes_2785018730, 0, self_2785018720.bottom, []);
    fmtRes_2785018730[0].push.apply(fmtRes_2785018730[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018730, 0, newBounds_2785018724, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018730[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018724, self_2785018720.lastBounds))) {
    var fmtRes_2785018785 = [mnewString(0)];
    fmtRes_2785018785[0].push.apply(fmtRes_2785018785[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018207(fmtRes_2785018785, 0, self_2785018720.lastBounds, []);
    fmtRes_2785018785[0].push.apply(fmtRes_2785018785[0], [32,45,62,32]);;
    formatValue_2785018207(fmtRes_2785018785, 0, newBounds_2785018724, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018785[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018366(newBounds_2785018724, self_2785018720.lastBounds))) {
    self_2785018720.lastBounds = nimCopy(self_2785018720.lastBounds, newBounds_2785018724, NTI2113929221);
    self_2785018720.lastBoundsChange = frameIndex_2785018722;
    }
    
    if (((frameIndex_2785018722 <= self_2785018720.lastHierarchyChange) || (frameIndex_2785018722 <= self_2785018720.lastBoundsChange))) {
    var lastX_2785018800 = 0.0;
    Label1: {
      var c_2785018804 = null;
      var i_536872559 = 0;
      var L_536872560 = (self_2785018720.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872559 < L_536872560)) break Label3;
            c_2785018804 = self_2785018720.children[chckIndx(i_536872559, 0, (self_2785018720.children).length - 1)];
            var width_2785018805 = width_2785017908(c_2785018804);
            c_2785018804.left = lastX_2785018800;
            c_2785018804.right = (lastX_2785018800 + width_2785018805);
            layoutWidget_2785018180(c_2785018804, newBounds_2785018724, frameIndex_2785018722, options_2785018723);
            lastX_2785018800 = ((c_2785018804.lastBounds.x + c_2785018804.lastBounds.w) - newBounds_2785018724.x);
            i_536872559 = addInt(i_536872559, 1);
            if (!(((self_2785018720.children).length == L_536872560))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2785018175(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179) {
  
}

function layoutWidget_2785018180(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179) {
    chckNilDisp(self_2785018176);
    if (isObj(self_2785018176.m_type, NTI2785017868)) {
    layoutWidget_2785018195(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017872)) {
    layoutWidget_2785018632(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017870)) {
    layoutWidget_2785018400(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017876)) {
    layoutWidget_2785018806(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017874)) {
    layoutWidget_2785018719(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    else {
    if (isObj(self_2785018176.m_type, NTI2785017866)) {
    layoutWidget_2785018175(self_2785018176, bounds_2785018177, frameIndex_2785018178, options_2785018179);
    }
    }}}}}

  
}

function invoke_3321889013(event_3321889015, arg_3321889016) {
    Label1: {
      var h_3321889039 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872564 = 0;
      var L_536872565 = (event_3321889015.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872564 < L_536872565)) break Label3;
            h_3321889039 = event_3321889015.handlers[chckIndx(i_536872564, 0, (event_3321889015.handlers).length - 1)];
            h_3321889039.Field1(arg_3321889016);
            i_536872564 = addInt(i_536872564, 1);
            if (!(((event_3321889015.handlers).length == L_536872565))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3321889877(self_3321889878, redrawEverything_3321889879) {
    self_3321889878.redrawEverything = (self_3321889878.redrawEverything || redrawEverything_3321889879);
    invoke_3321889013(self_3321889878.onResized, redrawEverything_3321889879);

  
}

function requestRender_2768240743(self_2768240744, redrawEverything_2768240745) {
  
}

function requestRender_2768240746(self_2768240744, redrawEverything_2768240745) {
    chckNilDisp(self_2768240744);
    if (isObj(self_2768240744.m_type, NTI3321888779)) {
    requestRender_3321889877(self_2768240744, redrawEverything_2768240745);
    }
    else {
    if (isObj(self_2768240744.m_type, NTI2768240644)) {
    requestRender_2768240743(self_2768240744, redrawEverything_2768240745);
    }
    }

  
}

function size_3321889908(self_3321889909) {
  var result_3321889910 = ({x: 0.0, y: 0.0});

    result_3321889910 = nimCopy(result_3321889910, vec2_2130707293(self_3321889909.content.clientWidth, self_3321889909.content.clientHeight), NTI2130706720);

  return result_3321889910;

}

function size_2768240757(self_2768240758) {
  var result_2768240759 = ({x: 0.0, y: 0.0});

  return result_2768240759;

}

function size_2768240760(self_2768240758) {
  var result_2768240761 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240758);
    if (isObj(self_2768240758.m_type, NTI3321888779)) {
    result_2768240761 = nimCopy(result_2768240761, size_3321889908(self_2768240758), NTI2130706720);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240758.m_type, NTI2768240644)) {
    result_2768240761 = nimCopy(result_2768240761, size_2768240757(self_2768240758), NTI2130706720);
    break BeforeRet;
    }
    }
  };

  return result_2768240761;

}

function createOrReplaceElement_3321890072(element_3321890073, element_3321890073_Idx, name_3321890074, nameUpper_3321890075) {
    if ((element_3321890073[element_3321890073_Idx] == null)) {
    element_3321890073[element_3321890073_Idx] = document.createElement(name_3321890074);
    element_3321890073[element_3321890073_Idx].className = "widget";
    }
    else {
    if (!((element_3321890073[element_3321890073_Idx].nodeName == nameUpper_3321890075))) {
    var dif_3321890079 = document.createElement(name_3321890074);
    element_3321890073[element_3321890073_Idx].replaceWith(dif_3321890079);
    element_3321890073[element_3321890073_Idx] = dif_3321890079;
    element_3321890073[element_3321890073_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2097152159(a_2097152160, b_2097152161) {
  var result_2097152162 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152162.x = (a_2097152160.x - b_2097152161.x);
    result_2097152162.y = (a_2097152160.y - b_2097152161.y);
    result_2097152162.w = a_2097152160.w;
    result_2097152162.h = a_2097152160.h;

  return result_2097152162;

}

function myToHtmlHex_3321890083(c_3321890084) {
  var result_3321890085 = null;

    const hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];let result = '#';
    var r_3321890086 = (((c_3321890084.r * 255.0)) | 0);
    var g_3321890087 = (((c_3321890084.g * 255.0)) | 0);
    var b_3321890088 = (((c_3321890084.b * 255.0)) | 0);
    var cr1_3321890089 = (r_3321890086 & 15);
    var cr2_3321890094 = ((r_3321890086 >> 4) & 15);
    var cg1_3321890095 = (g_3321890087 & 15);
    var cg2_3321890100 = ((g_3321890087 >> 4) & 15);
    var cb1_3321890101 = (b_3321890088 & 15);
    var cb2_3321890106 = ((b_3321890088 >> 4) & 15);
    result += hexChars[cr2_3321890094];
    result += hexChars[cr1_3321890089];
    result += hexChars[cg2_3321890100];
    result += hexChars[cg1_3321890095];
    result += hexChars[cb2_3321890106];
    result += hexChars[cb1_3321890101];
    result_3321890085 = result;

  return result_3321890085;

}

function getTextStyle_3321890248(x_3321890249, y_3321890250, width_3321890251, height_3321890252, color_3321890253, backgroundColor_3321890254) {
  var result_3321890255 = null;

    result_3321890255 = `left: ${x_3321890249}px; top: ${y_3321890250}px; width: ${width_3321890251}px; height: ${height_3321890252}px; overflow: visible; color: ${color_3321890253}; ${backgroundColor_3321890254}`

  return result_3321890255;

}

function pop_3321890047(s_3321890049, s_3321890049_Idx) {
  var result_3321890050 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3321890054 = subInt((s_3321890049[s_3321890049_Idx]).length, 1);
    result_3321890050 = nimCopy(result_3321890050, s_3321890049[s_3321890049_Idx][chckIndx(L_3321890054, 0, (s_3321890049[s_3321890049_Idx]).length - 1)], NTI2113929221);
    if (s_3321890049[s_3321890049_Idx].length < chckRange(L_3321890054, 0, 2147483647)) { for (var i = s_3321890049[s_3321890049_Idx].length ; i < chckRange(L_3321890054, 0, 2147483647) ; ++i) s_3321890049[s_3321890049_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3321890049[s_3321890049_Idx].length = chckRange(L_3321890054, 0, 2147483647); };

  return result_3321890050;

}

function renderWidget_3321890256(self_3321890257, renderer_3321890258, element_3321890259, element_3321890259_Idx, forceRedraw_3321890260, frameIndex_3321890261, buffer_3321890262, buffer_3321890262_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3321890292() {
        element_3321890259[element_3321890259_Idx].setAttribute("style", getTextStyle_3321890248(((relBounds_3321890275.x) | 0), ((relBounds_3321890275.y) | 0), ((relBounds_3321890275.w) | 0), ((relBounds_3321890275.h) | 0), color_3321890283, backgroundColor_3321890291));
        if (updateText_3321890285) {
        element_3321890259[element_3321890259_Idx].innerText = text_3321890284;
        element_3321890259[element_3321890259_Idx].setAttribute("data-text", text_3321890284);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3321890257.lastHierarchyChange < frameIndex_3321890261) && (self_3321890257.lastBoundsChange < frameIndex_3321890261)) && (self_3321890257.lastInvalidation < frameIndex_3321890261)) && !(forceRedraw_3321890260))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3321890072(element_3321890259, element_3321890259_Idx, "span", "SPAN");
    var relBounds_3321890275 = HEX2D_2097152159(self_3321890257.lastBounds, xy_2113929248(renderer_3321890258.boundsStack[chckIndx((renderer_3321890258.boundsStack).length - 1, 0, (renderer_3321890258.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3321890257.lastBounds, NTI2113929221);
    renderer_3321890258.boundsStack.push(Temporary1);;
    try {
    var color_3321890283 = myToHtmlHex_3321890083(self_3321890257.foregroundColor);
    var text_3321890284 = toJSStr(self_3321890257.text);
    var updateText_3321890285 = !((element_3321890259[element_3321890259_Idx].getAttribute("data-text") == text_3321890284));
    if (self_3321890257.fillBackground) {
    var fmtRes_3321890290 = [mnewString(0)];
    fmtRes_3321890290[0].push.apply(fmtRes_3321890290[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3321890290, 0, myToHtmlHex_3321890083(self_3321890257.backgroundColor));
    fmtRes_3321890290[0].push.apply(fmtRes_3321890290[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3321890290[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3321890291 = Temporary3;
    renderer_3321890258.domUpdates.push(HEX3Aanonymous_3321890292);;
    self_3321890257.lastRenderedText = nimCopy(null, self_3321890257.text, NTI33554449);
    } finally {
    var _ = pop_3321890047(renderer_3321890258, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3321890080(element_3321890081, element_3321890081_Idx, bounds_3321890082) {
    element_3321890081[element_3321890081_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3321890082.x) | 0)));
    element_3321890081[element_3321890081_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3321890082.y) | 0)));
    element_3321890081[element_3321890081_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3321890082.w) | 0)));
    element_3321890081[element_3321890081_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3321890082.h) | 0)));

  
}

function renderWidget_3321890200(self_3321890201, renderer_3321890202, element_3321890203, element_3321890203_Idx, forceRedraw_3321890204, frameIndex_3321890205, buffer_3321890206, buffer_3321890206_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3321890201.lastHierarchyChange < frameIndex_3321890205) && (self_3321890201.lastBoundsChange < frameIndex_3321890205)) && (self_3321890201.lastInvalidation < frameIndex_3321890205)) && !(forceRedraw_3321890204))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3321890072(element_3321890203, element_3321890203_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3321890201.children).length < (element_3321890203[element_3321890203_Idx].children).length)) break Label2;
          element_3321890203[element_3321890203_Idx].removeChild(element_3321890203[element_3321890203_Idx].lastChild);
        }
    };
    var relBounds_3321890225 = HEX2D_2097152159(self_3321890201.lastBounds, xy_2113929248(renderer_3321890202.boundsStack[chckIndx((renderer_3321890202.boundsStack).length - 1, 0, (renderer_3321890202.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3321890201.lastBounds, NTI2113929221);
    renderer_3321890202.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3321890080(element_3321890203, element_3321890203_Idx, relBounds_3321890225);
    var existingCount_3321890236 = (element_3321890203[element_3321890203_Idx].children).length;
    Label5: {
      var i_3321890242 = 0;
      var c_3321890243 = null;
      var i_536872569 = 0;
      var L_536872570 = (self_3321890201.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872569 < L_536872570)) break Label7;
            i_3321890242 = i_536872569;
            c_3321890243 = self_3321890201.children[chckIndx(i_536872569, 0, (self_3321890201.children).length - 1)];
            if ((i_3321890242 < existingCount_3321890236)) {
            Temporary8 = element_3321890203[element_3321890203_Idx].children[chckIndx(i_3321890242, 0, (element_3321890203[element_3321890203_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3321890244 = [Temporary8];
            renderWidget_3321889989(c_3321890243, renderer_3321890202, childElement_3321890244, 0, (forceRedraw_3321890204 || self_3321890201.fillBackground), frameIndex_3321890205, buffer_3321890206, buffer_3321890206_Idx);
            if (((existingCount_3321890236 <= i_3321890242) && !((childElement_3321890244[0] == null)))) {
            element_3321890203[element_3321890203_Idx].appendChild(childElement_3321890244[0]);
            }
            
            i_536872569 = addInt(i_536872569, 1);
            if (!(((self_3321890201.children).length == L_536872570))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3321890047(renderer_3321890202, "boundsStack");
    }
  };

  
}

function renderWidget_3321890107(self_3321890108, renderer_3321890109, element_3321890110, element_3321890110_Idx, forceRedraw_3321890111, frameIndex_3321890112, buffer_3321890113, buffer_3321890113_Idx) {
    var Temporary5;
    
function HEX3Aanonymous_3321890146() {
        element_3321890110[element_3321890110_Idx].className = "widget";
        var fmtRes_3321890151 = [mnewString(0)];
        fmtRes_3321890151[0].push.apply(fmtRes_3321890151[0], [108,101,102,116,58,32]);;
        formatValue_2701131945(fmtRes_3321890151, 0, ((relBounds_3321890132.x) | 0), []);
        fmtRes_3321890151[0].push.apply(fmtRes_3321890151[0], [112,120,59,32,116,111,112,58,32]);;
        formatValue_2701131945(fmtRes_3321890151, 0, ((relBounds_3321890132.y) | 0), []);
        fmtRes_3321890151[0].push.apply(fmtRes_3321890151[0], [112,120,59,32,119,105,100,116,104,58,32]);;
        formatValue_2701131945(fmtRes_3321890151, 0, ((relBounds_3321890132.w) | 0), []);
        fmtRes_3321890151[0].push.apply(fmtRes_3321890151[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
        formatValue_2701131945(fmtRes_3321890151, 0, ((relBounds_3321890132.h) | 0), []);
        fmtRes_3321890151[0].push.apply(fmtRes_3321890151[0], [112,120,59,32]);;
        formatValue_721420459(fmtRes_3321890151, 0, backgroundColor_3321890145, []);
        element_3321890110[element_3321890110_Idx].setAttribute("style", toJSStr(fmtRes_3321890151[0]));

      
    }
            var Temporary9;

  BeforeRet: {
    if (((((self_3321890108.lastHierarchyChange < frameIndex_3321890112) && (self_3321890108.lastBoundsChange < frameIndex_3321890112)) && (self_3321890108.lastInvalidation < frameIndex_3321890112)) && !(forceRedraw_3321890111))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3321890072(element_3321890110, element_3321890110_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3321890108.children).length < (element_3321890110[element_3321890110_Idx].children).length)) break Label2;
          element_3321890110[element_3321890110_Idx].removeChild(element_3321890110[element_3321890110_Idx].lastChild);
        }
    };
    var relBounds_3321890132 = HEX2D_2097152159(self_3321890108.lastBounds, xy_2113929248(renderer_3321890109.boundsStack[chckIndx((renderer_3321890109.boundsStack).length - 1, 0, (renderer_3321890109.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3321890108.lastBounds, NTI2113929221);
    renderer_3321890109.boundsStack.push(Temporary3);;
    try {
    if (self_3321890108.fillBackground) {
    var fmtRes_3321890144 = [mnewString(0)];
    fmtRes_3321890144[0].push.apply(fmtRes_3321890144[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3321890144, 0, myToHtmlHex_3321890083(self_3321890108.backgroundColor));
    fmtRes_3321890144[0].push.apply(fmtRes_3321890144[0], [59]);;
    Temporary5 = fmtRes_3321890144[0];
    }
    else {
    Temporary5 = [];
    }
    
    var backgroundColor_3321890145 = nimCopy(null, Temporary5, NTI33554449);
    renderer_3321890109.domUpdates.push(HEX3Aanonymous_3321890146);;
    var existingCount_3321890179 = (element_3321890110[element_3321890110_Idx].children).length;
    Label6: {
      var i_3321890185 = 0;
      var c_3321890186 = null;
      var i_536872574 = 0;
      var L_536872575 = (self_3321890108.children).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872574 < L_536872575)) break Label8;
            i_3321890185 = i_536872574;
            c_3321890186 = self_3321890108.children[chckIndx(i_536872574, 0, (self_3321890108.children).length - 1)];
            if ((i_3321890185 < existingCount_3321890179)) {
            Temporary9 = element_3321890110[element_3321890110_Idx].children[chckIndx(i_3321890185, 0, (element_3321890110[element_3321890110_Idx].children).length - 1)];
            }
            else {
            Temporary9 = null;
            }
            
            var childElement_3321890187 = [Temporary9];
            renderWidget_3321889989(c_3321890186, renderer_3321890109, childElement_3321890187, 0, (forceRedraw_3321890111 || self_3321890108.fillBackground), frameIndex_3321890112, buffer_3321890113, buffer_3321890113_Idx);
            if (((existingCount_3321890179 <= i_3321890185) && !((childElement_3321890187[0] == null)))) {
            element_3321890110[element_3321890110_Idx].appendChild(childElement_3321890187[0]);
            }
            
            i_536872574 = addInt(i_536872574, 1);
            if (!(((self_3321890108.children).length == L_536872575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3321890047(renderer_3321890109, "boundsStack");
    }
  };

  
}

function renderWidget_3321889982(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx) {
  
}

function renderWidget_3321889989(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx) {
    chckNilDisp(self_3321889983);
    if (isObj(self_3321889983.m_type, NTI2785017876)) {
    renderWidget_3321890256(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx);
    }
    else {
    if (isObj(self_3321889983.m_type, NTI2785017870)) {
    renderWidget_3321890200(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx);
    }
    else {
    if (isObj(self_3321889983.m_type, NTI2785017868)) {
    renderWidget_3321890107(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx);
    }
    else {
    if (isObj(self_3321889983.m_type, NTI2785017866)) {
    renderWidget_3321889982(self_3321889983, renderer_3321889984, element_3321889985, element_3321889985_Idx, forceRedraw_3321889986, frameIndex_3321889987, buffer_3321889988, buffer_3321889988_Idx);
    }
    }}}

  
}

function applyDomUpdates_3321889990(self_3321889991) {
    Label1: {
      var update_3321890014 = null;
      var i_536872579 = 0;
      var L_536872580 = (self_3321889991.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872579 < L_536872580)) break Label3;
            update_3321890014 = self_3321889991.domUpdates[chckIndx(i_536872579, 0, (self_3321889991.domUpdates).length - 1)];
            update_3321890014();
            i_536872579 = addInt(i_536872579, 1);
            if (!(((self_3321889991.domUpdates).length == L_536872580))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3321889991.domUpdates.length < 0) { for (var i = self_3321889991.domUpdates.length ; i < 0 ; ++i) self_3321889991.domUpdates.push(null); }
               else { self_3321889991.domUpdates.length = 0; };

  
}

function render_3321890039(self_3321890040, widget_3321890041, frameIndex_3321890042) {
    var Temporary2;

    self_3321890040.boundsStack.push(rect_2113929240(vec2_2130707254(), size_2768240760(self_3321890040)));;
    try {
    var buffer_3321890059 = [[]];
    if ((0 < (self_3321890040.content.children).length)) {
    Temporary2 = self_3321890040.content.children[chckIndx(0, 0, (self_3321890040.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3321890064 = [Temporary2];
    var wasNil_3321890068 = (element_3321890064[0] == null);
    renderWidget_3321889989(widget_3321890041, self_3321890040, element_3321890064, 0, self_3321890040.redrawEverything, frameIndex_3321890042, buffer_3321890059, 0);
    applyDomUpdates_3321889990(self_3321890040);
    if ((!((element_3321890064[0] == null)) && wasNil_3321890068)) {
    self_3321890040.content.appendChild(element_3321890064[0]);
    }
    
    self_3321890040.redrawEverything = false;
    } finally {
    var _ = pop_3321890047(self_3321890040, "boundsStack");
    }

  
}

function render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750) {
  
}

function render_2768240751(self_2768240748, widget_2768240749, frameIndex_2768240750) {
    chckNilDisp(self_2768240748);
    if (isObj(self_2768240748.m_type, NTI3321888779)) {
    render_3321890039(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    else {
    if (isObj(self_2768240748.m_type, NTI2768240644)) {
    render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    }

  
}

function sizeChanged_2768240752(self_2768240753) {
  var result_2768240754 = false;

  return result_2768240754;

}

function sizeChanged_2768240755(self_2768240753) {
  var result_2768240756 = false;

  BeforeRet: {
    result_2768240756 = sizeChanged_2768240752(self_2768240753);
    break BeforeRet;
  };

  return result_2768240756;

}

function initDoublyLinkedList_3321888923() {
  var result_3321888925 = ({head: null, tail: null});

  return result_3321888925;

}

function initTable_3321888929(initialSize_3321888932) {
  var result_3321888933 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3321888935 = slotsNeeded_1308622891(chckRange(initialSize_3321888932, 0, 2147483647));
    result_3321888933.counter = 0;
    result_3321888933.data = new Array(chckRange(correctSizeHEX60gensym3_3321888935, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3321888935, 0, 2147483647) ; ++i) { result_3321888933.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3321888933;

}

function newLruCache_3321888913(capacity_3321888916, recordRemovedKeys_3321888917) {
  var result_3321888918 = null;

    result_3321888918 = {capacity: capacity_3321888916, list: initDoublyLinkedList_3321888923(), table: initTable_3321888929(correctSize_3036676117(capacity_3321888916)), recordRemovedKeys: recordRemovedKeys_3321888917, removedKeys: ({data: [], counter: 0})};

  return result_3321888918;

}

function getModifiers_3321888853(self_3321888854) {
  var result_3321888855 = {};

    if (self_3321888854.altKey) {
    result_3321888855[2] = true;
    }
    
    if (self_3321888854.shiftKey) {
    result_3321888855[1] = true;
    }
    
    if (self_3321888854.ctrlKey) {
    result_3321888855[0] = true;
    }
    

  return result_3321888855;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3321888847(key_3321888848, code_3321888849, keyCode_3321888850) {
  var result_3321889978 = 0;

    switch (key_3321888848) {
    case "Enter":
      result_3321889978 = -1;
      break;
    case "Escape":
      result_3321889978 = -2;
      break;
    case "Backspace":
      result_3321889978 = -3;
      break;
    case " ":
      result_3321889978 = -4;
      break;
    case "Delete":
      result_3321889978 = -5;
      break;
    case "Tab":
      result_3321889978 = -6;
      break;
    case "ArrowLeft":
      result_3321889978 = -7;
      break;
    case "ArrowRight":
      result_3321889978 = -8;
      break;
    case "ArrowUp":
      result_3321889978 = -9;
      break;
    case "ArrowDown":
      result_3321889978 = -10;
      break;
    case "Home":
      result_3321889978 = -11;
      break;
    case "End":
      result_3321889978 = -12;
      break;
    case "PageUp":
      result_3321889978 = -13;
      break;
    case "PageDown":
      result_3321889978 = -14;
      break;
    default: 
      if (      keyCode_3321888850 >= 112 && keyCode_3321888850 <= 123      ){        result_3321889978 = addInt(-20, subInt(keyCode_3321888850, 112));
        }
      else{
        if ((((key_3321888848) == null ? 0 : (key_3321888848).length) == 1)) {
        result_3321889978 = runeAt_788536179(cstrToNimstr(key_3321888848), 0);
        }
        
        }
      break;
    }

  return result_3321889978;

}

function invoke_3321889097(event_3321889099, arg_3321889100) {
    Label1: {
      var h_3321889123 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872589 = 0;
      var L_536872590 = (event_3321889099.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872589 < L_536872590)) break Label3;
            h_3321889123 = event_3321889099.handlers[chckIndx(i_536872589, 0, (event_3321889099.handlers).length - 1)];
            h_3321889123.Field1(arg_3321889100);
            i_536872589 = addInt(i_536872589, 1);
            if (!(((event_3321889099.handlers).length == L_536872590))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3321888868(self_3321888869) {
  var result_3321888870 = {};

    if (self_3321888869.altKey) {
    result_3321888870[2] = true;
    }
    
    if (self_3321888869.shiftKey) {
    result_3321888870[1] = true;
    }
    
    if (self_3321888869.ctrlKey) {
    result_3321888870[0] = true;
    }
    

  return result_3321888870;

}

function invoke_3321889440(event_3321889442, arg_3321889443) {
    Label1: {
      var h_3321889466 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872594 = 0;
      var L_536872595 = (event_3321889442.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872594 < L_536872595)) break Label3;
            h_3321889466 = event_3321889442.handlers[chckIndx(i_536872594, 0, (event_3321889442.handlers).length - 1)];
            h_3321889466.Field1(arg_3321889443);
            i_536872594 = addInt(i_536872594, 1);
            if (!(((event_3321889442.handlers).length == L_536872595))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3321889277(aHEX60gensym74_3321889279, bHEX60gensym74_3321889280) {
  var result_3321889281 = ({x: 0.0, y: 0.0});

    result_3321889281 = nimCopy(result_3321889281, {x: (aHEX60gensym74_3321889279.x * bHEX60gensym74_3321889280), y: (aHEX60gensym74_3321889279.y * bHEX60gensym74_3321889280)}, NTI2130706720);

  return result_3321889281;

}

function getMouseButton_3321888899(event_3321888900) {
    var Temporary1;

  var result_3321888901 = 0;

    if (    event_3321888900.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3321888900.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3321888900.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3321888901 = Temporary1;

  return result_3321888901;

}

function invoke_3321889536(event_3321889538, arg_3321889539) {
    Label1: {
      var h_3321889562 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872599 = 0;
      var L_536872600 = (event_3321889538.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872599 < L_536872600)) break Label3;
            h_3321889562 = event_3321889538.handlers[chckIndx(i_536872599, 0, (event_3321889538.handlers).length - 1)];
            h_3321889562.Field1(arg_3321889539);
            i_536872599 = addInt(i_536872599, 1);
            if (!(((event_3321889538.handlers).length == L_536872600))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3321889610(event_3321889612, arg_3321889613) {
    Label1: {
      var h_3321889636 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872604 = 0;
      var L_536872605 = (event_3321889612.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872604 < L_536872605)) break Label3;
            h_3321889636 = event_3321889612.handlers[chckIndx(i_536872604, 0, (event_3321889612.handlers).length - 1)];
            h_3321889636.Field1(arg_3321889613);
            i_536872604 = addInt(i_536872604, 1);
            if (!(((event_3321889612.handlers).length == L_536872605))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3321888883(event_3321888884) {
  var result_3321888885 = {};

    var buttons_3321888886 = event_3321888884.buttons;
    if (!(((buttons_3321888886 & 1) == 0))) {
    result_3321888885[0] = true;
    }
    
    if (!(((buttons_3321888886 & 2) == 0))) {
    result_3321888885[2] = true;
    }
    
    if (!(((buttons_3321888886 & 4) == 0))) {
    result_3321888885[1] = true;
    }
    

  return result_3321888885;

}

function invoke_3321889767(event_3321889769, arg_3321889770) {
    Label1: {
      var h_3321889793 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872609 = 0;
      var L_536872610 = (event_3321889769.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872609 < L_536872610)) break Label3;
            h_3321889793 = event_3321889769.handlers[chckIndx(i_536872609, 0, (event_3321889769.handlers).length - 1)];
            h_3321889793.Field1(arg_3321889770);
            i_536872609 = addInt(i_536872609, 1);
            if (!(((event_3321889769.handlers).length == L_536872610))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function init_3321888911(self_3321888912) {
    
function HEX3Aanonymous_3321888976(text_3321888977) {
      var result_3321888978 = ({x: 0.0, y: 0.0});

        result_3321888978.x = ((text_3321888977).length * self_3321888912.mCharWidth);
        result_3321888978.y = totalLineHeight_2768240810(self_3321888912);

      return result_3321888978;

    }
    
function HEX3Aanonymous_3321888988(e_3321888989) {
        var oldEvent_3321888990 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321888989;
        try {
        invoke_3321889013(self_3321888912.onResized, true);
        } finally {
        self_3321888912.currentEvent = oldEvent_3321888990;
        }

      
    }
    
function HEX3Aanonymous_3321889069(e_3321889070) {
        var oldEvent_3321889071 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889070;
        try {
        var ke_3321889072 = e_3321889070;
        var modifiers_3321889073 = getModifiers_3321888853(ke_3321889072);
        var input_3321889074 = toInput_3321888847(ke_3321889072.key, ke_3321889072.code, ke_3321889072.keyCode);
        invoke_3321889097(self_3321888912.onKeyPress, {Field0: input_3321889074, Field1: nimCopy(null, modifiers_3321889073, NTI2013265950)});
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889071;
        }

      
    }
    
function HEX3Aanonymous_3321889153(e_3321889154) {
        var oldEvent_3321889155 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889154;
        try {
        var we_3321889156 = e_3321889154;
        var modifiers_3321889157 = getModifiers_3321888868(we_3321889156);
        invoke_3321889440(self_3321888912.onScroll, {Field0: vec2_2130707293(we_3321889156.clientX, we_3321889156.clientY), Field1: HEX2A_3321889277(vec2_2130707293(we_3321889156.deltaX, -(we_3321889156.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3321889157, NTI2013265950)});
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889155;
        }

      
    }
    
function HEX3Aanonymous_3321889505(e_3321889506) {
        var oldEvent_3321889507 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889506;
        try {
        var me_3321889508 = e_3321889506;
        var modifiers_3321889509 = getModifiers_3321888868(me_3321889508);
        var mouseButton_3321889510 = getMouseButton_3321888899(me_3321889508);
        var currentTargetRect_3321889511 = me_3321889508.currentTarget.getBoundingClientRect();
        var x_3321889512 = (me_3321889508.pageX - currentTargetRect_3321889511.x);
        var y_3321889513 = (me_3321889508.pageY - currentTargetRect_3321889511.y);
        invoke_3321889536(self_3321888912.onMousePress, {Field0: mouseButton_3321889510, Field1: nimCopy(null, modifiers_3321889509, NTI2013265950), Field2: vec2_2130707293(x_3321889512, y_3321889513)});
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889507;
        }

      
    }
    
function HEX3Aanonymous_3321889583(e_3321889584) {
        var oldEvent_3321889585 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889584;
        try {
        var me_3321889586 = e_3321889584;
        var modifiers_3321889587 = getModifiers_3321888868(me_3321889586);
        invoke_3321889610(self_3321888912.onMouseMove, {Field0: vec2_2130707293(me_3321889586.clientX, me_3321889586.clientY), Field1: vec2_2130707293(me_3321889586.movementX, me_3321889586.movementY), Field2: nimCopy(null, modifiers_3321889587, NTI2013265950), Field3: getMouseButtons_3321888883(me_3321889586)});
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889585;
        }

      
    }
    
function HEX3Aanonymous_3321889669(e_3321889670) {
        var oldEvent_3321889671 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889670;
        try {
        var de_3321889672 = e_3321889670;
        de_3321889672.preventDefault();
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889671;
        }

      
    }
    
function HEX3Aanonymous_3321889682(e_3321889683) {
                
function HEX3Aanonymous_3321889730(f_3321889731) {
                    
function HEX3Aanonymous_3321889743(e_3321889744) {
                        invoke_3321889767(self_3321888912.onDropFile, {Field0: cstrToNimstr(f_3321889731.name), Field1: cstrToNimstr((fileReader_3321889733.result || ''))});

                      
                    }

                    var fileReader_3321889733 = new FileReader();
                    fileReader_3321889733.readAsText(f_3321889731, "UTF-8");
                    fileReader_3321889733.onload = HEX3Aanonymous_3321889743;

                  
                }

        var oldEvent_3321889684 = self_3321888912.currentEvent;
        self_3321888912.currentEvent = e_3321889683;
        try {
        var de_3321889685 = e_3321889683;
        de_3321889685.preventDefault();
        console.log(de_3321889685.dataTransfer);;
        Label2: {
          var f_3321889711 = null;
          var i_536872584 = 0;
          var L_536872585 = (de_3321889685.dataTransfer.files).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872584 < L_536872585)) break Label4;
                f_3321889711 = de_3321889685.dataTransfer.files[chckIndx(i_536872584, 0, (de_3321889685.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3321889730(f_3321889711);
                i_536872584 = addInt(i_536872584, 1);
                if (!(((de_3321889685.dataTransfer.files).length == L_536872585))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        } finally {
        self_3321888912.currentEvent = oldEvent_3321889684;
        }

      
    }

    self_3321888912.mFontSize = 18.0;
    self_3321888912.mLineHeight = 20.0;
    self_3321888912.mLineDistance = 2.0;
    self_3321888912.mCharWidth = 18.0;
    self_3321888912.escapedText = newLruCache_3321888913(1000, false);
    self_3321888912.layoutOptions.getTextBounds = HEX3Aanonymous_3321888976;
    window.addEventListener("resize", HEX3Aanonymous_3321888988, false);
    self_3321888912.content = document.getElementById("view");
    self_3321888912.content.addEventListener("keydown", HEX3Aanonymous_3321889069, false);
    self_3321888912.content.addEventListener("wheel", HEX3Aanonymous_3321889153, {passive: true, capture: false, once: false});
    self_3321888912.content.addEventListener("mousedown", HEX3Aanonymous_3321889505, false);
    self_3321888912.content.addEventListener("mousemove", HEX3Aanonymous_3321889583, false);
    self_3321888912.content.addEventListener("dragover", HEX3Aanonymous_3321889669, false);
    self_3321888912.content.addEventListener("drop", HEX3Aanonymous_3321889682, false);
    updateFontSettings_3321888851(self_3321888912);
    self_3321888912.content.focus();

  
}

function init_2768240762(self_2768240763) {
  
}

function init_2768240764(self_2768240763) {
    chckNilDisp(self_2768240763);
    if (isObj(self_2768240763.m_type, NTI3321888779)) {
    init_3321888911(self_2768240763);
    }
    else {
    if (isObj(self_2768240763.m_type, NTI2768240644)) {
    init_2768240762(self_2768240763);
    }
    }

  
}

function deinit_3321889906(self_3321889907) {
  
}

function deinit_2768240765(self_2768240766) {
  
}

function deinit_2768240767(self_2768240766) {
    chckNilDisp(self_2768240766);
    if (isObj(self_2768240766.m_type, NTI3321888779)) {
    deinit_3321889906(self_2768240766);
    }
    else {
    if (isObj(self_2768240766.m_type, NTI2768240644)) {
    deinit_2768240765(self_2768240766);
    }
    }

  
}

function processEvents_3321889979(self_3321889980) {
  var result_3321889981 = 0;

    result_3321889981 = 0;

  return result_3321889981;

}

function processEvents_2768240768(self_2768240769) {
  var result_2768240770 = 0;

  return result_2768240770;

}

function processEvents_2768240771(self_2768240769) {
  var result_2768240772 = 0;

  BeforeRet: {
    chckNilDisp(self_2768240769);
    if (isObj(self_2768240769.m_type, NTI3321888779)) {
    result_2768240772 = processEvents_3321889979(self_2768240769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240769.m_type, NTI2768240644)) {
    result_2768240772 = processEvents_2768240768(self_2768240769);
    break BeforeRet;
    }
    }
  };

  return result_2768240772;

}

function fontSizeHEX3D_3321889956(self_3321889957, fontSize_3321889958) {
    self_3321889957.content.style.fontSize = toJSStr(HEX24_33557336(fontSize_3321889958));
    updateFontSettings_3321888851(self_3321889957);

  
}

function fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775) {
  
}

function fontSizeHEX3D_2768240776(self_2768240774, fontSize_2768240775) {
    chckNilDisp(self_2768240774);
    if (isObj(self_2768240774.m_type, NTI3321888779)) {
    fontSizeHEX3D_3321889956(self_2768240774, fontSize_2768240775);
    }
    else {
    if (isObj(self_2768240774.m_type, NTI2768240644)) {
    fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775);
    }
    }

  
}

function lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779) {
  
}

function lineDistanceHEX3D_2768240780(self_2768240778, lineDistance_2768240779) {
    lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779);

  
}

function fontSize_3321889962(self_3321889963) {
  var result_3321889964 = 0.0;

    updateFontSettings_3321888851(self_3321889963);
    result_3321889964 = self_3321889963.mFontSize;

  return result_3321889964;

}

function fontSize_2768240781(self_2768240782) {
  var result_2768240783 = 0.0;

  return result_2768240783;

}

function fontSize_2768240784(self_2768240782) {
  var result_2768240785 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240782);
    if (isObj(self_2768240782.m_type, NTI3321888779)) {
    result_2768240785 = fontSize_3321889962(self_2768240782);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240782.m_type, NTI2768240644)) {
    result_2768240785 = fontSize_2768240781(self_2768240782);
    break BeforeRet;
    }
    }
  };

  return result_2768240785;

}

function lineDistance_3321889965(self_3321889966) {
  var result_3321889967 = 0.0;

    updateFontSettings_3321888851(self_3321889966);
    result_3321889967 = self_3321889966.mLineDistance;

  return result_3321889967;

}

function lineDistance_2768240786(self_2768240787) {
  var result_2768240788 = 0.0;

  return result_2768240788;

}

function lineDistance_2768240789(self_2768240787) {
  var result_2768240790 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240787);
    if (isObj(self_2768240787.m_type, NTI3321888779)) {
    result_2768240790 = lineDistance_3321889965(self_2768240787);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240787.m_type, NTI2768240644)) {
    result_2768240790 = lineDistance_2768240786(self_2768240787);
    break BeforeRet;
    }
    }
  };

  return result_2768240790;

}

function lineHeight_3321889968(self_3321889969) {
  var result_3321889970 = 0.0;

    updateFontSettings_3321888851(self_3321889969);
    result_3321889970 = self_3321889969.mLineHeight;

  return result_3321889970;

}

function lineHeight_2768240791(self_2768240792) {
  var result_2768240793 = 0.0;

  return result_2768240793;

}

function lineHeight_2768240794(self_2768240792) {
  var result_2768240795 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240792);
    if (isObj(self_2768240792.m_type, NTI3321888779)) {
    result_2768240795 = lineHeight_3321889968(self_2768240792);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240792.m_type, NTI2768240644)) {
    result_2768240795 = lineHeight_2768240791(self_2768240792);
    break BeforeRet;
    }
    }
  };

  return result_2768240795;

}

function measureText_2768240801(self_2768240802, text_2768240803) {
  var result_2768240804 = ({x: 0.0, y: 0.0});

  return result_2768240804;

}

function measureText_2768240805(self_2768240802, text_2768240803) {
  var result_2768240806 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_2768240806 = nimCopy(result_2768240806, measureText_2768240801(self_2768240802, text_2768240803), NTI2130706720);
    break BeforeRet;
  };

  return result_2768240806;

}

function preventDefault_3321889911(self_3321889912) {
  BeforeRet: {
    if ((self_3321889912.currentEvent == null)) {
    break BeforeRet;
    }
    
    self_3321889912.currentEvent.preventDefault();
  };

  
}

function preventDefault_2768240807(self_2768240808) {
  
}

function preventDefault_2768240809(self_2768240808) {
    chckNilDisp(self_2768240808);
    if (isObj(self_2768240808.m_type, NTI3321888779)) {
    preventDefault_3321889911(self_2768240808);
    }
    else {
    if (isObj(self_2768240808.m_type, NTI2768240644)) {
    preventDefault_2768240807(self_2768240808);
    }
    }

  
}

function mustRehash_1291846256(t_1291846258) {
  var result_1291846259 = false;

    if (!((t_1291846258.counter < (t_1291846258.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846259 = ((mulInt((t_1291846258.data).length, 2) < mulInt(t_1291846258.counter, 3)) || (subInt((t_1291846258.data).length, t_1291846258.counter) < 4));

  return result_1291846259;

}

function rawInsert_1291846705(t_1291846709, data_1291846710, data_1291846710_Idx, key_1291846711, val_1291846712, hc_1291846713, h_1291846714) {
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field1 = key_1291846711;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field2 = val_1291846712;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field0 = hc_1291846713;

  
}

function enlarge_1291846411(t_1291846414) {
    var n_1291846417 = [];
    n_1291846417 = new Array(chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647) ; ++i) { n_1291846417[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846414.data; t_1291846414.data = n_1291846417; n_1291846417 = Temporary1;    Label2: {
      var i_1291846481 = 0;
      var colontmp__536872616 = 0;
      colontmp__536872616 = (n_1291846417).length - 1;
      var res_536872617 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872617 <= colontmp__536872616)) break Label4;
            i_1291846481 = res_536872617;
            var eh_1291846535 = n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846535)) {
            var j_1291846539 = (eh_1291846535 & (t_1291846414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846414.data[chckIndx(j_1291846539, 0, (t_1291846414.data).length - 1)].Field0)) break Label6;
                  j_1291846539 = nextTry_1308622883(j_1291846539, (t_1291846414.data).length - 1);
                }
            };
            rawInsert_1291846705(t_1291846414, t_1291846414, "data", n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field1, n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field2, eh_1291846535, j_1291846539);
            }
            
            res_536872617 = addInt(res_536872617, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846874(t_1291846877, key_1291846878, hc_1291846879) {
  var result_1291846880 = 0;

  BeforeRet: {
    if (((t_1291846877.data).length == 0)) {
    result_1291846880 = -1;
    break BeforeRet;
    }
    
    var h_1291846931 = (hc_1291846879 & (t_1291846877.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0)) break Label2;
          if (((t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0 == hc_1291846879) && (t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field1 == key_1291846878))) {
          result_1291846880 = h_1291846931;
          break BeforeRet;
          }
          
          h_1291846931 = nextTry_1308622883(h_1291846931, (t_1291846877.data).length - 1);
        }
    };
    result_1291846880 = subInt(-1, h_1291846931);
  };

  return result_1291846880;

}

function HEX5BHEX5DHEX3D_1291845847(t_1291845850, key_1291845851, val_1291845852) {
    if (((t_1291845850.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845902 = slotsNeeded_1308622891(32);
    t_1291845850.counter = 0;
    t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845907 = [0];
    var index_1291846149 = rawGet_1291845908(t_1291845850, key_1291845851, hc_1291845907, 0);
    if ((0 <= index_1291846149)) {
    t_1291845850.data[chckIndx(index_1291846149, 0, (t_1291845850.data).length - 1)].Field2 = val_1291845852;
    }
    else {
      if (((t_1291845850.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846251 = slotsNeeded_1308622891(32);
      t_1291845850.counter = 0;
      t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846256(t_1291845850)) {
      enlarge_1291846411(t_1291845850);
      index_1291846149 = rawGetKnownHC_1291846874(t_1291845850, key_1291845851, hc_1291845907[0]);
      }
      
      index_1291846149 = subInt(-1, index_1291846149);
      rawInsert_1291846705(t_1291845850, t_1291845850, "data", key_1291845851, val_1291845852, hc_1291845907[0], index_1291846149);
      t_1291845850.counter = addInt(t_1291845850.counter, 1);
    }
    

  
}

function registerEditor_1291845804(self_1291845805, editor_1291845806) {
    HEX5BHEX5DHEX3D_1291845847(self_1291845805.editors, editor_1291845806.id, editor_1291845806);
    invoke_1291847134(self_1291845805.onEditorRegistered, editor_1291845806);

  
}

function handleInput_2952807258(self_2952807259, input_2952807260) {
  var result_2952807261 = 0;

  BeforeRet: {
    result_2952807261 = 1;
    break BeforeRet;
  };

  return result_2952807261;

}

function injectDependencies_2952807884(self_2952807885, ed_2952807886) {
      
function HEX3Aanonymous_2952807906(actionHEX60gensym1147HEX60gensym1148_2952807907, argHEX60gensym1147HEX60gensym1148_2952807908) {
        var result_2952807909 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1147_2952807894.config.handleActions) {
          var action_2952807910 = nimCopy(null, actionHEX60gensym1147HEX60gensym1148_2952807907, NTI33554449);
          var arg_2952807911 = nimCopy(null, argHEX60gensym1147HEX60gensym1148_2952807908, NTI33554449);
          var responseHEX60gensym1147HEX60gensym1148_2952807912 = handleAction_2952806156(self_2952807885, action_2952807910, arg_2952807911);
          if (handlerHEX60gensym1147_2952807894.config.consumeAllActions) {
          result_2952807909 = 3;
          break BeforeRet;
          }
          
          result_2952807909 = responseHEX60gensym1147HEX60gensym1148_2952807912;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1147_2952807894.config.consumeAllActions) {
          result_2952807909 = 3;
          break BeforeRet;
          }
          else {
            result_2952807909 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2952807909;

      }
      
function HEX3Aanonymous_2952807914(inputHEX60gensym1147HEX60gensym1149_2952807915) {
        var result_2952807916 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1147_2952807894.config.handleInputs) {
          var input_2952807917 = nimCopy(null, inputHEX60gensym1147HEX60gensym1149_2952807915, NTI33554449);
          result_2952807916 = handleInput_2952807258(self_2952807885, input_2952807917);
          break BeforeRet;
          }
          else {
            result_2952807916 = 1;
            break BeforeRet;
          }
          
        };

        return result_2952807916;

      }
      
function HEX3Aanonymous_2952807937(actionHEX60gensym1150HEX60gensym1151_2952807938, argHEX60gensym1150HEX60gensym1151_2952807939) {
        var result_2952807940 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1150_2952807925.config.handleActions) {
          var action_2952807941 = nimCopy(null, actionHEX60gensym1150HEX60gensym1151_2952807938, NTI33554449);
          var arg_2952807942 = nimCopy(null, argHEX60gensym1150HEX60gensym1151_2952807939, NTI33554449);
          var responseHEX60gensym1150HEX60gensym1151_2952807943 = handleAction_2952806156(self_2952807885, action_2952807941, arg_2952807942);
          if (handlerHEX60gensym1150_2952807925.config.consumeAllActions) {
          result_2952807940 = 3;
          break BeforeRet;
          }
          
          result_2952807940 = responseHEX60gensym1150HEX60gensym1151_2952807943;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1150_2952807925.config.consumeAllActions) {
          result_2952807940 = 3;
          break BeforeRet;
          }
          else {
            result_2952807940 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2952807940;

      }
      
function HEX3Aanonymous_2952807945(inputHEX60gensym1150HEX60gensym1152_2952807946) {
        var result_2952807947 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1150_2952807925.config.handleInputs) {
          var input_2952807948 = nimCopy(null, inputHEX60gensym1150HEX60gensym1152_2952807946, NTI33554449);
          result_2952807947 = 1;
          break BeforeRet;
          }
          else {
            result_2952807947 = 1;
            break BeforeRet;
          }
          
        };

        return result_2952807947;

      }

    self_2952807885.editor = ed_2952807886;
    registerEditor_1291845804(self_2952807885.editor, self_2952807885);
    Label1: {
      var handlerHEX60gensym1147_2952807894 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1147_2952807894.config = getEventHandlerConfig_1291849162(ed_2952807886, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1147_2952807894.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(ed_2952807886, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1147_2952807894.handleAction = HEX3Aanonymous_2952807906;
      handlerHEX60gensym1147_2952807894.handleInput = HEX3Aanonymous_2952807914;
    };
    self_2952807885.eventHandler = handlerHEX60gensym1147_2952807894;
    Label2: {
      var handlerHEX60gensym1150_2952807925 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1150_2952807925.config = getEventHandlerConfig_1291849162(ed_2952807886, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1150_2952807925.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(ed_2952807886, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1150_2952807925.handleAction = HEX3Aanonymous_2952807937;
      handlerHEX60gensym1150_2952807925.handleInput = HEX3Aanonymous_2952807945;
    };
    self_2952807885.textEditEventHandler = handlerHEX60gensym1150_2952807925;

  
}

function injectDependencies_2818590950(self_2818590951, ed_2818590952) {
      
function HEX3Aanonymous_2818590973(actionHEX60gensym1011HEX60gensym1012_2818590974, argHEX60gensym1011HEX60gensym1012_2818590975) {
        var result_2818590976 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1011_2818590961.config.handleActions) {
          var action_2818590977 = nimCopy(null, actionHEX60gensym1011HEX60gensym1012_2818590974, NTI33554449);
          var arg_2818590978 = nimCopy(null, argHEX60gensym1011HEX60gensym1012_2818590975, NTI33554449);
          var responseHEX60gensym1011HEX60gensym1012_2818590979 = handleAction_2818572643(self_2818590951, action_2818590977, arg_2818590978);
          if (handlerHEX60gensym1011_2818590961.config.consumeAllActions) {
          result_2818590976 = 3;
          break BeforeRet;
          }
          
          result_2818590976 = responseHEX60gensym1011HEX60gensym1012_2818590979;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1011_2818590961.config.consumeAllActions) {
          result_2818590976 = 3;
          break BeforeRet;
          }
          else {
            result_2818590976 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818590976;

      }
      
function HEX3Aanonymous_2818590981(inputHEX60gensym1011HEX60gensym1013_2818590982) {
        var result_2818590983 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1011_2818590961.config.handleInputs) {
          var input_2818590984 = nimCopy(null, inputHEX60gensym1011HEX60gensym1013_2818590982, NTI33554449);
          result_2818590983 = handleInput_2818572651(self_2818590951, input_2818590984);
          break BeforeRet;
          }
          else {
            result_2818590983 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818590983;

      }
      
function HEX3Aanonymous_2818591004(actionHEX60gensym1014HEX60gensym1015_2818591005, argHEX60gensym1014HEX60gensym1015_2818591006) {
        var result_2818591007 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1014_2818590992.config.handleActions) {
          var action_2818591008 = nimCopy(null, actionHEX60gensym1014HEX60gensym1015_2818591005, NTI33554449);
          var arg_2818591009 = nimCopy(null, argHEX60gensym1014HEX60gensym1015_2818591006, NTI33554449);
          var responseHEX60gensym1014HEX60gensym1015_2818591010 = handleAction_2818572643(self_2818590951, action_2818591008, arg_2818591009);
          if (handlerHEX60gensym1014_2818590992.config.consumeAllActions) {
          result_2818591007 = 3;
          break BeforeRet;
          }
          
          result_2818591007 = responseHEX60gensym1014HEX60gensym1015_2818591010;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1014_2818590992.config.consumeAllActions) {
          result_2818591007 = 3;
          break BeforeRet;
          }
          else {
            result_2818591007 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818591007;

      }
      
function HEX3Aanonymous_2818591012(inputHEX60gensym1014HEX60gensym1016_2818591013) {
        var result_2818591014 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1014_2818590992.config.handleInputs) {
          var input_2818591015 = nimCopy(null, inputHEX60gensym1014HEX60gensym1016_2818591013, NTI33554449);
          result_2818591014 = handleInput_2818572651(self_2818590951, input_2818591015);
          break BeforeRet;
          }
          else {
            result_2818591014 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818591014;

      }

    self_2818590951.editor = ed_2818590952;
    registerEditor_1291845804(self_2818590951.editor, self_2818590951);
    var config_2818590953 = getEventHandlerConfig_1291849162(ed_2818590952, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym1011_2818590961 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1011_2818590961.config = config_2818590953;
      handlerHEX60gensym1011_2818590961.dfaInternal = buildDFA_2080374847(config_2818590953);
      handlerHEX60gensym1011_2818590961.handleAction = HEX3Aanonymous_2818590973;
      handlerHEX60gensym1011_2818590961.handleInput = HEX3Aanonymous_2818590981;
    };
    self_2818590951.eventHandler = handlerHEX60gensym1011_2818590961;
    Label2: {
      var handlerHEX60gensym1014_2818590992 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1014_2818590992.config = getEventHandlerConfig_1291849162(ed_2818590952, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1014_2818590992.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849162(ed_2818590952, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1014_2818590992.handleAction = HEX3Aanonymous_2818591004;
      handlerHEX60gensym1014_2818590992.handleInput = HEX3Aanonymous_2818591012;
    };
    self_2818590951.completionEventHandler = handlerHEX60gensym1014_2818590992;

  
}

function injectDependencies_1291847758(self_1291847759, ed_1291847760) {
  
}

function injectDependencies_1291847761(self_1291847759, ed_1291847760) {
    chckNilDisp(self_1291847759);
    if (isObj(self_1291847759.m_type, NTI2952791527)) {
    injectDependencies_2952807884(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2818572510)) {
    injectDependencies_2818590950(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2382364676)) {
    injectDependencies_1291847758(self_1291847759, ed_1291847760);
    }
    }}

  
}

function getOrDefault_1291848310(t_1291848313, key_1291848314, default_1291848315) {
    var Temporary1;

  var result_1291848316 = 0.0;

    var hcHEX60gensym20_1291848319 = [0];
    var indexHEX60gensym20_1291848559 = rawGet_1291848320(t_1291848313, key_1291848314, hcHEX60gensym20_1291848319, 0);
    if ((0 <= indexHEX60gensym20_1291848559)) {
    Temporary1 = t_1291848313.data[chckIndx(indexHEX60gensym20_1291848559, 0, (t_1291848313.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848315;
    }
    
    result_1291848316 = Temporary1;

  return result_1291848316;

}

function value_2097152050(m_2097152051) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2097152052 = 0.0;

  BeforeRet: {
    switch (m_2097152051.kind) {
    case 0:
      var Temporary1 = m_2097152051;
      if (ConstSet331[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2097152003)); }
      result_2097152052 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2097152051;
      if (ConstSet332[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2097152003)); }
      result_2097152052 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2097152051;
      if (ConstSet333[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2097152003)); }
      result_2097152052 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2097152052;

}

function apply_2097152075(m_2097152076, a_2097152077, b_2097152078) {
  var result_2097152079 = 0.0;

  BeforeRet: {
    switch (m_2097152076.kind) {
    case 0:
      var v_2097152090 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + v_2097152090);
      break BeforeRet;
      break;
    case 1:
      var v_2097152091 = value_2097152050(m_2097152076);
      result_2097152079 = v_2097152091;
      break BeforeRet;
      break;
    case 2:
      var v_2097152092 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + (v_2097152092 * (b_2097152078 - a_2097152077)));
      break BeforeRet;
      break;
    }
  };

  return result_2097152079;

}

function splitV_2097152105(r_2097152106, x_2097152107) {
  var result_2097152110 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152110.Field0 = nimCopy(result_2097152110.Field0, r_2097152106, NTI2113929221);
    result_2097152110.Field1 = nimCopy(result_2097152110.Field1, r_2097152106, NTI2113929221);
    result_2097152110.Field0.w = (apply_2097152075(x_2097152107, r_2097152106.x, (r_2097152106.x + r_2097152106.w)) - r_2097152106.x);
    result_2097152110.Field1.x = (result_2097152110.Field0.x + result_2097152110.Field0.w);
    result_2097152110.Field1.w = (result_2097152110.Field1.w - result_2097152110.Field0.w);

  return result_2097152110;

}

function percent_2097152047(value_2097152048) {
  var result_2097152049 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2097152049 = nimCopy(result_2097152049, {kind: 2, per: value_2097152048, rel: 0.0, abs: 0.0}, NTI2097152004);
    break BeforeRet;
  };

  return result_2097152049;

}

function splitH_2097152093(r_2097152094, y_2097152095) {
  var result_2097152098 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152098.Field0 = nimCopy(result_2097152098.Field0, r_2097152094, NTI2113929221);
    result_2097152098.Field1 = nimCopy(result_2097152098.Field1, r_2097152094, NTI2113929221);
    result_2097152098.Field0.h = (apply_2097152075(y_2097152095, r_2097152094.y, (r_2097152094.y + r_2097152094.h)) - r_2097152094.y);
    result_2097152098.Field1.y = (result_2097152098.Field0.y + result_2097152098.Field0.h);
    result_2097152098.Field1.h = (result_2097152098.Field1.h - result_2097152098.Field0.h);

  return result_2097152098;

}

function layoutViews_1291848745(layout_1291848746, props_1291848747, bounds_1291848748, views_1291848749) {
            var Temporary4;
            var Temporary5;

  var result_1291848750 = [];

    var mainSplit_1291848823 = getOrDefault_1291848310(props_1291848747.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848750 = nimCopy(null, [], NTI1291847200);
    var rect_1291848828 = nimCopy(null, bounds_1291848748, NTI2113929221);
    Label1: {
      var i_1291848833 = 0;
      var i_536872623 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872623 < views_1291848749)) break Label3;
            i_1291848833 = i_536872623;
            if (((i_1291848833 == 0) && (1 < views_1291848749))) {
            Temporary4 = mainSplit_1291848823;
            }
            else {
            if ((i_1291848833 == subInt(views_1291848749, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848834 = Temporary4;
            if ((modInt(i_1291848833, 2) == 0)) {
            Temporary5 = splitV_2097152105(rect_1291848828, percent_2097152047(ratio_1291848834));
            }
            else {
            Temporary5 = splitH_2097152093(rect_1291848828, percent_2097152047(ratio_1291848834));
            }
            
            var colontmp__536872625 = nimCopy(null, Temporary5, NTI2097152063);
            var view_rect_1291848835 = nimCopy(null, colontmp__536872625["Field0"], NTI2113929221);
            var remaining_1291848836 = nimCopy(null, colontmp__536872625["Field1"], NTI2113929221);
            rect_1291848828 = nimCopy(rect_1291848828, remaining_1291848836, NTI2113929221);
            var Temporary6 = nimCopy(null, view_rect_1291848835, NTI2113929221);
            result_1291848750.push(Temporary6);;
            i_536872623 = addInt(i_536872623, 1);
          }
      };
    };

  return result_1291848750;

}

function layoutViews_1291848649(layout_1291848650, props_1291848651, bounds_1291848652, views_1291848653) {
            var Temporary4;

  var result_1291848654 = [];

    var mainSplit_1291848727 = getOrDefault_1291848310(props_1291848651.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848654 = nimCopy(null, [], NTI1291847200);
    var rect_1291848732 = nimCopy(null, bounds_1291848652, NTI2113929221);
    Label1: {
      var i_1291848737 = 0;
      var i_536872627 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872627 < views_1291848653)) break Label3;
            i_1291848737 = i_536872627;
            if (((i_1291848737 == 0) && (1 < views_1291848653))) {
            Temporary4 = mainSplit_1291848727;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848653, i_1291848737));
            }
            
            var ratio_1291848738 = Temporary4;
            var colontmp__536872629 = splitH_2097152093(rect_1291848732, percent_2097152047(ratio_1291848738));
            var view_rect_1291848739 = nimCopy(null, colontmp__536872629["Field0"], NTI2113929221);
            var remaining_1291848740 = nimCopy(null, colontmp__536872629["Field1"], NTI2113929221);
            rect_1291848732 = nimCopy(rect_1291848732, remaining_1291848740, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1291848739, NTI2113929221);
            result_1291848654.push(Temporary5);;
            i_536872627 = addInt(i_536872627, 1);
          }
      };
    };

  return result_1291848654;

}

function layoutViews_1291848238(layout_1291848239, props_1291848240, bounds_1291848241, views_1291848242) {
            var Temporary4;

  var result_1291848243 = [];

    var mainSplit_1291848613 = getOrDefault_1291848310(props_1291848240.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848243 = nimCopy(null, [], NTI1291847200);
    var rect_1291848618 = nimCopy(null, bounds_1291848241, NTI2113929221);
    Label1: {
      var i_1291848623 = 0;
      var i_536872631 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872631 < views_1291848242)) break Label3;
            i_1291848623 = i_536872631;
            if (((i_1291848623 == 0) && (1 < views_1291848242))) {
            Temporary4 = mainSplit_1291848613;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848242, i_1291848623));
            }
            
            var ratio_1291848624 = Temporary4;
            var colontmp__536872633 = splitV_2097152105(rect_1291848618, percent_2097152047(ratio_1291848624));
            var view_rect_1291848625 = nimCopy(null, colontmp__536872633["Field0"], NTI2113929221);
            var remaining_1291848626 = nimCopy(null, colontmp__536872633["Field1"], NTI2113929221);
            rect_1291848618 = nimCopy(rect_1291848618, remaining_1291848626, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1291848625, NTI2113929221);
            result_1291848243.push(Temporary5);;
            i_536872631 = addInt(i_536872631, 1);
          }
      };
    };

  return result_1291848243;

}

function layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848213 = [];

  BeforeRet: {
    result_1291848213 = nimCopy(null, [nimCopy(null, bounds_1291848211, NTI2113929221)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848213;

}

function layoutViews_1291848236(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848237 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848209);
    if (isObj(layout_1291848209.m_type, NTI1291845645)) {
    result_1291848237 = layoutViews_1291848745(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845644)) {
    result_1291848237 = layoutViews_1291848649(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845643)) {
    result_1291848237 = layoutViews_1291848238(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845642)) {
    result_1291848237 = layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848237;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850989(self_1291850990, other_1291850991) {
  var result_1291850992 = false;

  BeforeRet: {
    var other_1291850993 = other_1291850991;
    result_1291850992 = (!(eqStrings(self_1291850990.name, other_1291850993.name)) || !(eqStrings(self_1291850990.path, other_1291850993.path)));
    break BeforeRet;
  };

  return result_1291850992;

}

function changed_1291850975(self_1291850976, other_1291850977) {
  var result_1291850978 = false;

  BeforeRet: {
    var other_1291850979 = other_1291850977;
    result_1291850978 = !(eqStrings(self_1291850976.path, other_1291850979.path));
    break BeforeRet;
  };

  return result_1291850978;

}

function changed_3221225540(self_3221225541, other_3221225542) {
  var result_3221225543 = false;

  return result_3221225543;

}

function changed_3221225544(self_3221225541, other_3221225542) {
  var result_3221225545 = false;

  BeforeRet: {
    chckNilDisp(self_3221225541);
    if (isObj(self_3221225541.m_type, NTI1291848505)) {
    result_3221225545 = changed_1291850989(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225541.m_type, NTI1291848507)) {
    result_3221225545 = changed_1291850975(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225541.m_type, NTI3221225480)) {
    result_3221225545 = changed_3221225540(self_3221225541, other_3221225542);
    break BeforeRet;
    }
    }}
  };

  return result_3221225545;

}

function active_2382364785(self_2382364786) {
  var result_2382364787 = false;

    result_2382364787 = self_2382364786.active;

  return result_2382364787;

}

function updateBackgroundColor_2785017934(self_2785017935, color_2785017936, frameIndex_2785017937) {
    if (!(HEX3DHEX3D_2785017924(self_2785017935.backgroundColor, color_2785017936))) {
    self_2785017935.lastHierarchyChange = nimMax(self_2785017935.lastHierarchyChange, frameIndex_2785017937);
    }
    
    self_2785017935.backgroundColor = nimCopy(self_2785017935.backgroundColor, color_2785017936, NTI2550136835);

  
}

function HEX24_2415919428(selection_2415919429) {
  var result_2415919430 = [];

  BeforeRet: {
    result_2415919430 = nimCopy(null, (HEX24_2415919425(selection_2415919429.Field0) || []).concat([45] || [],HEX24_2415919425(selection_2415919429.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2415919430;

}

function formatValue_2818572413(result_2818572415, result_2818572415_Idx, value_2818572416, specifier_2818572417) {
    formatValue_721420459(result_2818572415, result_2818572415_Idx, HEX24_2415919428(value_2818572416), specifier_2818572417);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function changed_2785018181(self_2785018182, frameIndex_2785018183) {
  var result_2785018184 = false;

    result_2785018184 = (((frameIndex_2785018183 <= self_2785018182.lastBoundsChange) || (frameIndex_2785018183 <= self_2785018182.lastHierarchyChange)) || (frameIndex_2785018183 <= self_2785018182.lastInvalidation));

  return result_2785018184;

}

function dirty_2382364707(self_2382364708) {
  var result_2382364709 = false;

    result_2382364709 = self_2382364708.mDirty;

  return result_2382364709;

}

function resetDirty_2382364780(self_2382364781) {
    self_2382364781.mDirty = false;

  
}

function clamp_3288334725(val_3288334727, bounds_3288334728) {
  var result_3288334729 = 0;

    if (!((bounds_3288334728.a <= bounds_3288334728.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2415919425({Field0: bounds_3288334728.a, Field1: bounds_3288334728.b}) || []));
    }
    
    result_3288334729 = clamp_1660945119(val_3288334727, bounds_3288334728.a, bounds_3288334728.b);

  return result_3288334729;

}

function initTable_3288334759(initialSize_3288334762) {
  var result_3288334763 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3288334765 = slotsNeeded_1308622891(chckRange(initialSize_3288334762, 0, 2147483647));
    result_3288334763.counter = 0;
    result_3288334763.data = new Array(chckRange(correctSizeHEX60gensym10_3288334765, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3288334765, 0, 2147483647) ; ++i) { result_3288334763.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3288334763;

}

function mgetOrPut_3288334811(t_3288334814, key_3288334815, val_3288334816) {
  var result_3288334817 = null;
  var result_3288334817_Idx = 0;

    if (((t_3288334814.data).length == 0)) {
    var correctSizeHEX60gensym13_3288334866 = slotsNeeded_1308622891(32);
    t_3288334814.counter = 0;
    t_3288334814.data = new Array(chckRange(correctSizeHEX60gensym13_3288334866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3288334866, 0, 2147483647) ; ++i) { t_3288334814.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3288334871 = [0];
    var index_3288334878 = rawGet_2818580606(t_3288334814, key_3288334815, hc_3288334871, 0);
    if ((index_3288334878 < 0)) {
    if (((t_3288334814.data).length == 0)) {
    var correctSizeHEX60gensym16_3288334927 = slotsNeeded_1308622891(32);
    t_3288334814.counter = 0;
    t_3288334814.data = new Array(chckRange(correctSizeHEX60gensym16_3288334927, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3288334927, 0, 2147483647) ; ++i) { t_3288334814.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818581044(t_3288334814)) {
    enlarge_2818581214(t_3288334814);
    index_3288334878 = rawGetKnownHC_2818581822(t_3288334814, key_3288334815, hc_3288334871[0]);
    }
    
    index_3288334878 = subInt(-1, index_3288334878);
    rawInsert_2818581593(t_3288334814, t_3288334814, "data", key_3288334815, val_3288334816, hc_3288334871[0], index_3288334878);
    t_3288334814.counter = addInt(t_3288334814.counter, 1);
    }
    
    result_3288334817 = t_3288334814.data[chckIndx(index_3288334878, 0, (t_3288334814.data).length - 1)]; result_3288334817_Idx = "Field2";

  return [result_3288334817, result_3288334817_Idx];

}

function isSome_3288335098(self_3288335100) {
  var result_3288335101 = false;

    result_3288335101 = self_3288335100.has;

  return result_3288335101;

}

function get_3288335089(self_3288335091, otherwise_3288335092) {
    var Temporary1;

  var result_3288335093 = 0;

    if (isSome_3288335098(self_3288335091)) {
    Temporary1 = self_3288335091.val;
    }
    else {
    Temporary1 = otherwise_3288335092;
    }
    
    result_3288335093 = Temporary1;

  return result_3288335093;

}

function parseEnum_3288335064(s_3288335066, default_3288335067) {
    var Temporary1;

  var result_3288335068 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3288335066))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3288335067;
      break;
    }
    result_3288335068 = Temporary1;

  return result_3288335068;

}

function getOption_3288335038(editor_3288335040, path_3288335041, default_3288335042) {
  var result_3288335048 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3288335040 == null)) {
      result_3288335048 = default_3288335042;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3288335060 = HEX7BHEX7D_1627393316(editor_3288335040.options, nsuSplitString(path_3288335041, [46], -1));
      if ((nodeHEX60gensym18_3288335060 == null)) {
      result_3288335048 = default_3288335042;
      break BeforeRet;
      }
      
    };
    result_3288335048 = parseEnum_3288335064(getStr_1627390106(nodeHEX60gensym18_3288335060, []), default_3288335042);
    break BeforeRet;
  };

  return result_3288335048;

}

function color_3288335139(theme_3288335141, names_3288335142, default_3288335143) {
  var result_3288335144 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3288335148 = [];
      var i_536872663 = 0;
      var L_536872664 = (names_3288335142).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872663 < L_536872664)) break Label3;
            name_3288335148 = names_3288335142[chckIndx(i_536872663, 0, (names_3288335142).length - 1)];
            if (contains_3187671619(theme_3288335141.colors, name_3288335148)) {
            result_3288335144 = nimCopy(result_3288335144, HEX5BHEX5D_3187671709(theme_3288335141.colors, name_3288335148), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872663 = addInt(i_536872663, 1);
            if (!(((names_3288335142).length == L_536872664))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3288335144 = nimCopy(result_3288335144, color_2634022945(default_3288335143), NTI2550136835);
    break BeforeRet;
  };

  return result_3288335144;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3288335259(theme_3288335261, names_3288335262, default_3288335263) {
  var result_3288335264 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3288335268 = [];
      var i_536872667 = 0;
      var L_536872668 = (names_3288335262).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872667 < L_536872668)) break Label3;
            name_3288335268 = names_3288335262[chckIndx(i_536872667, 0, (names_3288335262).length - 1)];
            if (contains_3187671619(theme_3288335261.colors, name_3288335268)) {
            result_3288335264 = nimCopy(result_3288335264, HEX5BHEX5D_3187671709(theme_3288335261.colors, name_3288335268), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872667 = addInt(i_536872667, 1);
            if (!(((names_3288335262).length == L_536872668))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3288335264 = nimCopy(result_3288335264, color_2634022963(default_3288335263), NTI2550136835);
    break BeforeRet;
  };

  return result_3288335264;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function rawGet_2818574303(t_2818574306, key_2818574307, hc_2818574308, hc_2818574308_Idx) {
  var result_2818574309 = 0;

  BeforeRet: {
    hc_2818574308[hc_2818574308_Idx] = hash_1325400236(key_2818574307);
    if ((hc_2818574308[hc_2818574308_Idx] == 0)) {
    hc_2818574308[hc_2818574308_Idx] = 314159265;
    }
    
    if (((t_2818574306.data).length == 0)) {
    result_2818574309 = -1;
    break BeforeRet;
    }
    
    var h_2818574368 = (hc_2818574308[hc_2818574308_Idx] & (t_2818574306.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574306.data[chckIndx(h_2818574368, 0, (t_2818574306.data).length - 1)].Field0)) break Label2;
          if (((t_2818574306.data[chckIndx(h_2818574368, 0, (t_2818574306.data).length - 1)].Field0 == hc_2818574308[hc_2818574308_Idx]) && (t_2818574306.data[chckIndx(h_2818574368, 0, (t_2818574306.data).length - 1)].Field1 == key_2818574307))) {
          result_2818574309 = h_2818574368;
          break BeforeRet;
          }
          
          h_2818574368 = nextTry_1308622883(h_2818574368, (t_2818574306.data).length - 1);
        }
    };
    result_2818574309 = subInt(-1, h_2818574368);
  };

  return result_2818574309;

}

function hasKey_2818574296(t_2818574299, key_2818574300) {
  var result_2818574301 = false;

    var hc_2818574302 = [0];
    result_2818574301 = (0 <= rawGet_2818574303(t_2818574299, key_2818574300, hc_2818574302, 0));

  return result_2818574301;

}

function contains_2818574290(t_2818574293, key_2818574294) {
  var result_2818574295 = false;

  BeforeRet: {
    result_2818574295 = hasKey_2818574296(t_2818574293, key_2818574294);
    break BeforeRet;
  };

  return result_2818574295;

}

function HEX5BHEX5D_2818574682(t_2818574685, key_2818574686) {
  var result_2818574687 = null;
  var result_2818574687_Idx = 0;

    var hcHEX60gensym22_2818574688 = [0];
    var indexHEX60gensym22_2818574695 = rawGet_2818574303(t_2818574685, key_2818574686, hcHEX60gensym22_2818574688, 0);
    if ((0 <= indexHEX60gensym22_2818574695)) {
    result_2818574687 = t_2818574685.data[chckIndx(indexHEX60gensym22_2818574695, 0, (t_2818574685.data).length - 1)]; result_2818574687_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818574686);
    }
    

  return [result_2818574687, result_2818574687_Idx];

}

function initTable_2818574786(initialSize_2818574789) {
  var result_2818574795 = ({data: [], counter: 0});

    var correctSizeHEX60gensym42_2818574797 = slotsNeeded_1308622891(chckRange(initialSize_2818574789, 0, 2147483647));
    result_2818574795.counter = 0;
    result_2818574795.data = new Array(chckRange(correctSizeHEX60gensym42_2818574797, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2818574797, 0, 2147483647) ; ++i) { result_2818574795.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818574795;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818574978(t_2818574981, key_2818574982, hc_2818574983, hc_2818574983_Idx) {
  var result_2818574984 = 0;

  BeforeRet: {
    hc_2818574983[hc_2818574983_Idx] = hash_1325400491(key_2818574982);
    if ((hc_2818574983[hc_2818574983_Idx] == 0)) {
    hc_2818574983[hc_2818574983_Idx] = 314159265;
    }
    
    if (((t_2818574981.data).length == 0)) {
    result_2818574984 = -1;
    break BeforeRet;
    }
    
    var h_2818575041 = (hc_2818574983[hc_2818574983_Idx] & (t_2818574981.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574981.data[chckIndx(h_2818575041, 0, (t_2818574981.data).length - 1)].Field0)) break Label2;
          if (((t_2818574981.data[chckIndx(h_2818575041, 0, (t_2818574981.data).length - 1)].Field0 == hc_2818574983[hc_2818574983_Idx]) && eqStrings(t_2818574981.data[chckIndx(h_2818575041, 0, (t_2818574981.data).length - 1)].Field1, key_2818574982))) {
          result_2818574984 = h_2818575041;
          break BeforeRet;
          }
          
          h_2818575041 = nextTry_1308622883(h_2818575041, (t_2818574981.data).length - 1);
        }
    };
    result_2818574984 = subInt(-1, h_2818575041);
  };

  return result_2818574984;

}

function hasKey_2818574971(t_2818574974, key_2818574975) {
  var result_2818574976 = false;

    var hc_2818574977 = [0];
    result_2818574976 = (0 <= rawGet_2818574978(t_2818574974, key_2818574975, hc_2818574977, 0));

  return result_2818574976;

}

function contains_2818574965(t_2818574968, key_2818574969) {
  var result_2818574970 = false;

  BeforeRet: {
    result_2818574970 = hasKey_2818574971(t_2818574968, key_2818574969);
    break BeforeRet;
  };

  return result_2818574970;

}

function HEX5BHEX5D_2818575346(t_2818575349, key_2818575350) {
  var result_2818575351 = null;

    var hcHEX60gensym22_2818575352 = [0];
    var indexHEX60gensym22_2818575359 = rawGet_2818574978(t_2818575349, key_2818575350, hcHEX60gensym22_2818575352, 0);
    if ((0 <= indexHEX60gensym22_2818575359)) {
    result_2818575351 = t_2818575349.data[chckIndx(indexHEX60gensym22_2818575359, 0, (t_2818575349.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818575350);
    }
    

  return result_2818575351;

}

function mustRehash_2818575699(t_2818575701) {
  var result_2818575702 = false;

    if (!((t_2818575701.counter < (t_2818575701.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575702 = ((mulInt((t_2818575701.data).length, 2) < mulInt(t_2818575701.counter, 3)) || (subInt((t_2818575701.data).length, t_2818575701.counter) < 4));

  return result_2818575702;

}

function rawInsert_2818576248(t_2818576252, data_2818576253, data_2818576253_Idx, key_2818576254, val_2818576255, hc_2818576256, h_2818576257) {
    data_2818576253[data_2818576253_Idx][chckIndx(h_2818576257, 0, (data_2818576253[data_2818576253_Idx]).length - 1)].Field1 = nimCopy(null, key_2818576254, NTI33554449);
    data_2818576253[data_2818576253_Idx][chckIndx(h_2818576257, 0, (data_2818576253[data_2818576253_Idx]).length - 1)].Field2 = nimCopy(data_2818576253[data_2818576253_Idx][chckIndx(h_2818576257, 0, (data_2818576253[data_2818576253_Idx]).length - 1)].Field2, val_2818576255, NTI2852126723);
    data_2818576253[data_2818576253_Idx][chckIndx(h_2818576257, 0, (data_2818576253[data_2818576253_Idx]).length - 1)].Field0 = hc_2818576256;

  
}

function enlarge_2818575869(t_2818575872) {
    var n_2818575875 = [];
    n_2818575875 = new Array(chckRange(mulInt((t_2818575872.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818575872.data).length, 2), 0, 2147483647) ; ++i) { n_2818575875[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818575872.data; t_2818575872.data = n_2818575875; n_2818575875 = Temporary1;    Label2: {
      var i_2818575944 = 0;
      var colontmp__536872698 = 0;
      colontmp__536872698 = (n_2818575875).length - 1;
      var res_536872699 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872699 <= colontmp__536872698)) break Label4;
            i_2818575944 = res_536872699;
            var eh_2818576018 = n_2818575875[chckIndx(i_2818575944, 0, (n_2818575875).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818576018)) {
            var j_2818576022 = (eh_2818576018 & (t_2818575872.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818575872.data[chckIndx(j_2818576022, 0, (t_2818575872.data).length - 1)].Field0)) break Label6;
                  j_2818576022 = nextTry_1308622883(j_2818576022, (t_2818575872.data).length - 1);
                }
            };
            rawInsert_2818576248(t_2818575872, t_2818575872, "data", n_2818575875[chckIndx(i_2818575944, 0, (n_2818575875).length - 1)].Field1, n_2818575875[chckIndx(i_2818575944, 0, (n_2818575875).length - 1)].Field2, eh_2818576018, j_2818576022);
            }
            
            res_536872699 = addInt(res_536872699, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576477(t_2818576480, key_2818576481, hc_2818576482) {
  var result_2818576483 = 0;

  BeforeRet: {
    if (((t_2818576480.data).length == 0)) {
    result_2818576483 = -1;
    break BeforeRet;
    }
    
    var h_2818576539 = (hc_2818576482 & (t_2818576480.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576480.data[chckIndx(h_2818576539, 0, (t_2818576480.data).length - 1)].Field0)) break Label2;
          if (((t_2818576480.data[chckIndx(h_2818576539, 0, (t_2818576480.data).length - 1)].Field0 == hc_2818576482) && eqStrings(t_2818576480.data[chckIndx(h_2818576539, 0, (t_2818576480.data).length - 1)].Field1, key_2818576481))) {
          result_2818576483 = h_2818576539;
          break BeforeRet;
          }
          
          h_2818576539 = nextTry_1308622883(h_2818576539, (t_2818576480.data).length - 1);
        }
    };
    result_2818576483 = subInt(-1, h_2818576539);
  };

  return result_2818576483;

}

function HEX5BHEX5DHEX3D_2818575496(t_2818575499, key_2818575500, val_2818575501) {
    if (((t_2818575499.data).length == 0)) {
    var correctSizeHEX60gensym56_2818575555 = slotsNeeded_1308622891(32);
    t_2818575499.counter = 0;
    t_2818575499.data = new Array(chckRange(correctSizeHEX60gensym56_2818575555, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2818575555, 0, 2147483647) ; ++i) { t_2818575499.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818575560 = [0];
    var index_2818575567 = rawGet_2818574978(t_2818575499, key_2818575500, hc_2818575560, 0);
    if ((0 <= index_2818575567)) {
    t_2818575499.data[chckIndx(index_2818575567, 0, (t_2818575499.data).length - 1)].Field2 = nimCopy(t_2818575499.data[chckIndx(index_2818575567, 0, (t_2818575499.data).length - 1)].Field2, val_2818575501, NTI2852126723);
    }
    else {
      if (((t_2818575499.data).length == 0)) {
      var correctSizeHEX60gensym59_2818575694 = slotsNeeded_1308622891(32);
      t_2818575499.counter = 0;
      t_2818575499.data = new Array(chckRange(correctSizeHEX60gensym59_2818575694, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_2818575694, 0, 2147483647) ; ++i) { t_2818575499.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818575699(t_2818575499)) {
      enlarge_2818575869(t_2818575499);
      index_2818575567 = rawGetKnownHC_2818576477(t_2818575499, key_2818575500, hc_2818575560[0]);
      }
      
      index_2818575567 = subInt(-1, index_2818575567);
      rawInsert_2818576248(t_2818575499, t_2818575499, "data", key_2818575500, val_2818575501, hc_2818575560[0], index_2818575567);
      t_2818575499.counter = addInt(t_2818575499.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818576989(result_2818576991, result_2818576991_Idx, value_2818576992, specifier_2818576993) {
    formatValue_721420459(result_2818576991, result_2818576991_Idx, HEX24_2885681319(value_2818576992), specifier_2818576993);

  
}

function insert_2818574177(x_2818574179, x_2818574179_Idx, item_2818574180, i_2818574181) {
    var it_2818574201 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574179[x_2818574179_Idx] = x_2818574179[x_2818574179_Idx] || []; x_2818574179[x_2818574179_Idx].splice(i_2818574181, 0, it_2818574201);
    x_2818574179[x_2818574179_Idx][chckIndx(i_2818574181, 0, (x_2818574179[x_2818574179_Idx]).length - 1)] = nimCopy(x_2818574179[x_2818574179_Idx][chckIndx(i_2818574181, 0, (x_2818574179[x_2818574179_Idx]).length - 1)], item_2818574180, NTI2818572422);

  
}

function splitAt_2818574115(line_2818574116, line_2818574116_Idx, index_2818574117) {
    var index_2818574118 = index_2818574117;
    var i_2818574119 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574119 < (line_2818574116[line_2818574116_Idx].parts).length) && ((line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)].text).length <= index_2818574118))) break Label2;
          index_2818574118 = subInt(index_2818574118, (line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)].text).length);
          i_2818574119 = addInt(i_2818574119, 1);
        }
    };
    if ((((i_2818574119 < (line_2818574116[line_2818574116_Idx].parts).length) && !((index_2818574118 == 0))) && !((index_2818574118 == (line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574134 = nimCopy(null, line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)], NTI2818572422);
    line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574116[line_2818574116_Idx].parts[chckIndx(i_2818574119, 0, (line_2818574116[line_2818574116_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574118, 1))), NTI33554449);
    copy_2818574134.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574134.text, HEX2EHEX2E_1040187488(index_2818574118, 1)), NTI33554449);
    insert_2818574177(line_2818574116[line_2818574116_Idx], "parts", copy_2818574134, chckRange(addInt(i_2818574119, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574211(line_2818574212, line_2818574212_Idx, first_2818574213, last_2818574214, scope_2818574215, priority_2818574216) {
    var index_2818574217 = 0;
    Label1: {
      var i_2818574225 = 0;
      var colontmp__536872705 = 0;
      colontmp__536872705 = (line_2818574212[line_2818574212_Idx].parts).length - 1;
      var res_536872706 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872706 <= colontmp__536872705)) break Label3;
            i_2818574225 = res_536872706;
            if ((((first_2818574213 <= index_2818574217) && (addInt(index_2818574217, (line_2818574212[line_2818574212_Idx].parts[chckIndx(i_2818574225, 0, (line_2818574212[line_2818574212_Idx].parts).length - 1)].text).length) <= last_2818574214)) && (priority_2818574216 < line_2818574212[line_2818574212_Idx].parts[chckIndx(i_2818574225, 0, (line_2818574212[line_2818574212_Idx].parts).length - 1)].priority))) {
            line_2818574212[line_2818574212_Idx].parts[chckIndx(i_2818574225, 0, (line_2818574212[line_2818574212_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574215, NTI33554449);
            line_2818574212[line_2818574212_Idx].parts[chckIndx(i_2818574225, 0, (line_2818574212[line_2818574212_Idx].parts).length - 1)].priority = priority_2818574216;
            }
            
            index_2818574217 = addInt(index_2818574217, (line_2818574212[line_2818574212_Idx].parts[chckIndx(i_2818574225, 0, (line_2818574212[line_2818574212_Idx].parts).length - 1)].text).length);
            res_536872706 = addInt(res_536872706, 1);
          }
      };
    };

  
}

function mustRehash_2818577255(t_2818577257) {
  var result_2818577258 = false;

    if (!((t_2818577257.counter < (t_2818577257.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577258 = ((mulInt((t_2818577257.data).length, 2) < mulInt(t_2818577257.counter, 3)) || (subInt((t_2818577257.data).length, t_2818577257.counter) < 4));

  return result_2818577258;

}

function rawInsert_2818577804(t_2818577808, data_2818577809, data_2818577809_Idx, key_2818577810, val_2818577811, hc_2818577812, h_2818577813) {
    data_2818577809[data_2818577809_Idx][chckIndx(h_2818577813, 0, (data_2818577809[data_2818577809_Idx]).length - 1)].Field1 = key_2818577810;
    data_2818577809[data_2818577809_Idx][chckIndx(h_2818577813, 0, (data_2818577809[data_2818577809_Idx]).length - 1)].Field2 = val_2818577811;
    data_2818577809[data_2818577809_Idx][chckIndx(h_2818577813, 0, (data_2818577809[data_2818577809_Idx]).length - 1)].Field0 = hc_2818577812;

  
}

function enlarge_2818577425(t_2818577428) {
    var n_2818577431 = [];
    n_2818577431 = new Array(chckRange(mulInt((t_2818577428.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577428.data).length, 2), 0, 2147483647) ; ++i) { n_2818577431[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818577428.data; t_2818577428.data = n_2818577431; n_2818577431 = Temporary1;    Label2: {
      var i_2818577500 = 0;
      var colontmp__536872710 = 0;
      colontmp__536872710 = (n_2818577431).length - 1;
      var res_536872711 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872711 <= colontmp__536872710)) break Label4;
            i_2818577500 = res_536872711;
            var eh_2818577574 = n_2818577431[chckIndx(i_2818577500, 0, (n_2818577431).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577574)) {
            var j_2818577578 = (eh_2818577574 & (t_2818577428.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577428.data[chckIndx(j_2818577578, 0, (t_2818577428.data).length - 1)].Field0)) break Label6;
                  j_2818577578 = nextTry_1308622883(j_2818577578, (t_2818577428.data).length - 1);
                }
            };
            rawInsert_2818577804(t_2818577428, t_2818577428, "data", n_2818577431[chckIndx(i_2818577500, 0, (n_2818577431).length - 1)].Field1, n_2818577431[chckIndx(i_2818577500, 0, (n_2818577431).length - 1)].Field2, eh_2818577574, j_2818577578);
            }
            
            res_536872711 = addInt(res_536872711, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578033(t_2818578036, key_2818578037, hc_2818578038) {
  var result_2818578039 = 0;

  BeforeRet: {
    if (((t_2818578036.data).length == 0)) {
    result_2818578039 = -1;
    break BeforeRet;
    }
    
    var h_2818578095 = (hc_2818578038 & (t_2818578036.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578036.data[chckIndx(h_2818578095, 0, (t_2818578036.data).length - 1)].Field0)) break Label2;
          if (((t_2818578036.data[chckIndx(h_2818578095, 0, (t_2818578036.data).length - 1)].Field0 == hc_2818578038) && (t_2818578036.data[chckIndx(h_2818578095, 0, (t_2818578036.data).length - 1)].Field1 == key_2818578037))) {
          result_2818578039 = h_2818578095;
          break BeforeRet;
          }
          
          h_2818578095 = nextTry_1308622883(h_2818578095, (t_2818578036.data).length - 1);
        }
    };
    result_2818578039 = subInt(-1, h_2818578095);
  };

  return result_2818578039;

}

function HEX5BHEX5DHEX3D_2818577052(t_2818577055, key_2818577056, val_2818577057) {
    if (((t_2818577055.data).length == 0)) {
    var correctSizeHEX60gensym73_2818577111 = slotsNeeded_1308622891(32);
    t_2818577055.counter = 0;
    t_2818577055.data = new Array(chckRange(correctSizeHEX60gensym73_2818577111, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym73_2818577111, 0, 2147483647) ; ++i) { t_2818577055.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818577116 = [0];
    var index_2818577123 = rawGet_2818574303(t_2818577055, key_2818577056, hc_2818577116, 0);
    if ((0 <= index_2818577123)) {
    t_2818577055.data[chckIndx(index_2818577123, 0, (t_2818577055.data).length - 1)].Field2 = val_2818577057;
    }
    else {
      if (((t_2818577055.data).length == 0)) {
      var correctSizeHEX60gensym76_2818577250 = slotsNeeded_1308622891(32);
      t_2818577055.counter = 0;
      t_2818577055.data = new Array(chckRange(correctSizeHEX60gensym76_2818577250, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym76_2818577250, 0, 2147483647) ; ++i) { t_2818577055.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818577255(t_2818577055)) {
      enlarge_2818577425(t_2818577055);
      index_2818577123 = rawGetKnownHC_2818578033(t_2818577055, key_2818577056, hc_2818577116[0]);
      }
      
      index_2818577123 = subInt(-1, index_2818577123);
      rawInsert_2818577804(t_2818577055, t_2818577055, "data", key_2818577056, val_2818577057, hc_2818577116[0], index_2818577123);
      t_2818577055.counter = addInt(t_2818577055.counter, 1);
    }
    

  
}

function getStyledText_2818574239(self_2818574240, i_2818574241) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574242 = [null];

  BeforeRet: {
    if (contains_2818574290(self_2818574240.styledTextCache, i_2818574241)) {
    result_2818574242[0] = (Temporary1 = HEX5BHEX5D_2818574682(self_2818574240.styledTextCache, i_2818574241), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574781 = nimCopy(null, self_2818574240.lines[chckIndx(i_2818574241, 0, (self_2818574240.lines).length - 1)], NTI33554449);
      result_2818574242[0] = {index: i_2818574241, parts: [{text: nimCopy(null, line_2818574781, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      var regexes_2818574811 = [initTable_2818574786(32)];
      if ((((self_2818574240.tsParser == null) || (self_2818574240.highlightQuery == null)) || (self_2818574240.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818574843 = null;
        var colontmp__536872689 = [];
        colontmp__536872689 = matches_2885681272(self_2818574240.highlightQuery, self_2818574240.currentTree.rootNode, {Field0: {Field0: i_2818574241, Field1: 0}, Field1: {Field0: i_2818574241, Field1: (line_2818574781).length}});
        var i_536872691 = 0;
        var L_536872692 = (colontmp__536872689).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872691 < L_536872692)) break Label4;
              match_2818574843 = colontmp__536872689[chckIndx(i_536872691, 0, (colontmp__536872689).length - 1)];
              var predicates_2818574844 = self_2818574240.highlightQuery.predicatesForPattern(match_2818574843.pattern);
              Label5: {
                var capture_2818574867 = null;
                var colontmp__536872684 = [];
                colontmp__536872684 = match_2818574843.captures;
                var i_536872686 = 0;
                var L_536872687 = (colontmp__536872684).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536872686 < L_536872687)) break Label7;
                      capture_2818574867 = colontmp__536872684[chckIndx(i_536872686, 0, (colontmp__536872684).length - 1)];
                      Label8: {
                        var scope_2818574868 = capture_2818574867.name;
                        var node_2818574869 = capture_2818574867.node;
                        var matches_2818574870 = true;
                        Label9: {
                          var predicate_2818574893 = null;
                          var i_536872681 = 0;
                          var L_536872682 = (predicates_2818574844).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536872681 < L_536872682)) break Label11;
                                predicate_2818574893 = predicates_2818574844[chckIndx(i_536872681, 0, (predicates_2818574844).length - 1)];
                                if (!(matches_2818574870)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818574916 = null;
                                  var colontmp__536872675 = [];
                                  colontmp__536872675 = predicate_2818574893.operands;
                                  var i_536872677 = 0;
                                  var L_536872678 = (colontmp__536872675).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872677 < L_536872678)) break Label14;
                                        operand_2818574916 = colontmp__536872675[chckIndx(i_536872677, 0, (colontmp__536872675).length - 1)];
                                        var value_2818574917 = cstrToNimstr(operand_2818574916.type);
                                        if (!((operand_2818574916.name == scope_2818574868))) {
                                        matches_2818574870 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818574893.operator))) {
                                        case "match?":
                                          if (contains_2818574965(regexes_2818574811[0], value_2818574917)) {
                                          Temporary15 = HEX5BHEX5D_2818575346(regexes_2818574811[0], value_2818574917);
                                          }
                                          else {
                                            var regex_2818575445 = re_2852126779(value_2818574917);
                                            HEX5BHEX5DHEX3D_2818575496(regexes_2818574811[0], value_2818574917, regex_2818575445);
                                          Temporary15 = regex_2818575445;
                                          }
                                          
                                          var regex_2818576780 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818576781 = contentString_2818573989(self_2818574240, getRange_2885681336(node_2818574869));
                                          if (!((matchLen_2852126756(nodeText_2818576781, regex_2818576780, 0) == (nodeText_2818576781).length))) {
                                          matches_2818574870 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818574965(regexes_2818574811[0], value_2818574917)) {
                                          Temporary16 = HEX5BHEX5D_2818575346(regexes_2818574811[0], value_2818574917);
                                          }
                                          else {
                                            var regex_2818576912 = re_2852126779(value_2818574917);
                                            HEX5BHEX5DHEX3D_2818575496(regexes_2818574811[0], value_2818574917, regex_2818576912);
                                          Temporary16 = regex_2818576912;
                                          }
                                          
                                          var regex_2818576969 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818576970 = contentString_2818573989(self_2818574240, getRange_2885681336(node_2818574869));
                                          if ((matchLen_2852126756(nodeText_2818576970, regex_2818576969, 0) == (nodeText_2818576970).length)) {
                                          matches_2818574870 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818576971 = contentString_2818573989(self_2818574240, getRange_2885681336(node_2818574869));
                                          if (!(eqStrings(nodeText_2818576971, value_2818574917))) {
                                          matches_2818574870 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818576972 = contentString_2818573989(self_2818574240, getRange_2885681336(node_2818574869));
                                          if (eqStrings(nodeText_2818576972, value_2818574917)) {
                                          matches_2818574870 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818576977 = [mnewString(0)];
                                          fmtRes_2818576977[0].push.apply(fmtRes_2818576977[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818576977, 0, predicate_2818574893.operator);
                                          fmtRes_2818576977[0].push.apply(fmtRes_2818576977[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818576977[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872677 = addInt(i_536872677, 1);
                                        if (!(((colontmp__536872675).length == L_536872678))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848874(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818576978 = contentString_2818573989(self_2818574240, getRange_2885681336(node_2818574869));
                                var fmtRes_2818576983 = [mnewString(0)];
                                formatValue_2701131945(fmtRes_2818576983, 0, match_2818574843.pattern, []);
                                fmtRes_2818576983[0].push.apply(fmtRes_2818576983[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818576983, 0, nodeText_2818576978, []);
                                fmtRes_2818576983[0].push.apply(fmtRes_2818576983[0], [39,32]);;
                                formatValue_2818576989(fmtRes_2818576983, 0, node_2818574869, []);
                                fmtRes_2818576983[0].push.apply(fmtRes_2818576983[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2818576994(fmtRes_2818576983, 0, matches_2818574870, []);
                                fmtRes_2818576983[0].push.apply(fmtRes_2818576983[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818576983[0], NTI33554449)]);
                                }
                                
                                i_536872681 = addInt(i_536872681, 1);
                                if (!(((predicates_2818574844).length == L_536872682))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818574870)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818576999 = getRange_2885681336(node_2818574869);
                        if ((nodeRange_2818576999.Field0.Field0 == i_2818574241)) {
                        splitAt_2818574115(result_2818574242, 0, nodeRange_2818576999.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818576999.Field1.Field0 == i_2818574241)) {
                        splitAt_2818574115(result_2818574242, 0, nodeRange_2818576999.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818576999.Field0.Field0 < i_2818574241)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818576999.Field0.Field0 == i_2818574241)) {
                        Temporary17 = nodeRange_2818576999.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574781).length;
                        }
                        }
                        var first_2818577000 = Temporary17;
                        if ((nodeRange_2818576999.Field1.Field0 < i_2818574241)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818576999.Field1.Field0 == i_2818574241)) {
                        Temporary18 = nodeRange_2818576999.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574781).length;
                        }
                        }
                        var last_2818577001 = Temporary18;
                        overrideStyle_2818574211(result_2818574242, 0, first_2818577000, last_2818577001, cstrToNimstr(scope_2818574868), match_2818574843.pattern);
                      };
                      i_536872686 = addInt(i_536872686, 1);
                      if (!(((colontmp__536872684).length == L_536872687))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536872691 = addInt(i_536872691, 1);
              if (!(((colontmp__536872689).length == L_536872692))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      HEX5BHEX5DHEX3D_2818577052(self_2818574240.styledTextCache, i_2818574241, result_2818574242[0]);
    }
    
  };

  return result_2818574242[0];

}

function getOrDefault_3288335451(t_3288335454, key_3288335455, default_3288335456) {
    var Temporary1;

  var result_3288335457 = [];

    var hcHEX60gensym22_3288335460 = [0];
    var indexHEX60gensym22_3288335467 = rawGet_2818580606(t_3288335454, key_3288335455, hcHEX60gensym22_3288335460, 0);
    if ((0 <= indexHEX60gensym22_3288335467)) {
    Temporary1 = t_3288335454.data[chckIndx(indexHEX60gensym22_3288335467, 0, (t_3288335454.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3288335456;
    }
    
    result_3288335457 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3288335457;

}

function map_3288335552(s_3288335555, op_3288335557) {
  var result_3288335558 = [];

    result_3288335558 = new Array(chckRange((s_3288335555).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3288335555).length, 0, 2147483647) ; ++i) { result_3288335558[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3288335573 = 0;
      var colontmp__536872715 = 0;
      colontmp__536872715 = (s_3288335555).length;
      var i_536872716 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872716 < colontmp__536872715)) break Label3;
            i_3288335573 = i_536872716;
            result_3288335558[chckIndx(i_3288335573, 0, (result_3288335558).length - 1)] = nimCopy(result_3288335558[chckIndx(i_3288335573, 0, (result_3288335558).length - 1)], op_3288335557(s_3288335555[chckIndx(i_3288335573, 0, (s_3288335555).length - 1)]), NTI3288334340);
            i_536872716 = addInt(i_536872716, 1);
          }
      };
    };

  return result_3288335558;

}

function clampToLine_3288334353(selection_3288334354, line_3288334355, lineLength_3288334356) {
    var Temporary1;
    var Temporary2;

  var result_3288334359 = {Field0: 0, Field1: 0};

    if ((selection_3288334354.Field0.Field0 < line_3288334355)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3288334354.Field0.Field0 == line_3288334355)) {
    Temporary1 = selection_3288334354.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3288334356;
    }
    }
    result_3288334359.Field0 = Temporary1;
    if ((selection_3288334354.Field1.Field0 < line_3288334355)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3288334354.Field1.Field0 == line_3288334355)) {
    Temporary2 = selection_3288334354.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3288334356;
    }
    }
    result_3288334359.Field1 = Temporary2;

  return result_3288334359;

}

function len_2818574067(line_2818574068) {
  var result_2818574069 = 0;

    result_2818574069 = 0;
    Label1: {
      var p_2818574092 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872720 = 0;
      var L_536872721 = (line_2818574068.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872720 < L_536872721)) break Label3;
            p_2818574092 = line_2818574068.parts[chckIndx(i_536872720, 0, (line_2818574068.parts).length - 1)];
            result_2818574069 = addInt(result_2818574069, (p_2818574092.text).length);
            i_536872720 = addInt(i_536872720, 1);
            if (!(((line_2818574068.parts).length == L_536872721))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574069;

}

function createPartWidget_3288334420(text_3288334421, startOffset_3288334422, width_3288334423, color_3288334424, frameIndex_3288334425) {
  var result_3288334426 = null;

    result_3288334426 = ({m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3288334426.text = text_3288334421.slice(0);
    result_3288334426.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 1}};
    result_3288334426.left = startOffset_3288334422;
    result_3288334426.right = startOffset_3288334422 + width_3288334423;
    result_3288334426.frameIndex = frameIndex_3288334425;
    result_3288334426.foregroundColor = color_3288334424;

  return result_3288334426;

}

function contains_2415919483(selection_2415919484, cursor_2415919485) {
  var result_2415919486 = false;

    result_2415919486 = (HEX3CHEX3D_2415919447(selection_2415919484.Field0, cursor_2415919485) && HEX3CHEX3D_2415919447(cursor_2415919485, selection_2415919484.Field1));

  return result_2415919486;

}

function renderTextHighlight_3288334360(panel_3288334361, app_3288334362, startOffset_3288334363, endOffset_3288334364, line_3288334365, startIndex_3288334366, selection_3288334367, selectionClamped_3288334370, part_3288334371, color_3288334372) {
  BeforeRet: {
    var startOffset_3288334373 = Math.floor(startOffset_3288334363);
    var endOffset_3288334374 = Math.ceil(endOffset_3288334364);
    var left_3288334375 = 0.0;
    var right_3288334376 = 0.0;
    if ((((startIndex_3288334366 < selectionClamped_3288334370.Field1) && (selectionClamped_3288334370.Field0 < addInt(startIndex_3288334366, (part_3288334371.text).length))) && (0 < (part_3288334371.text).length))) {
    left_3288334375 = (startOffset_3288334373 + ((nimMax(0, subInt(selectionClamped_3288334370.Field0, startIndex_3288334366)) / ((part_3288334371.text).length - 0.0)) * (endOffset_3288334374 - startOffset_3288334373)));
    right_3288334376 = (startOffset_3288334373 + ((nimMin((part_3288334371.text).length, subInt(selectionClamped_3288334370.Field1, startIndex_3288334366)) / ((part_3288334371.text).length - 0.0)) * (endOffset_3288334374 - startOffset_3288334373)));
    }
    else {
    if (((((part_3288334371.text).length == 0) && contains_2415919483(selection_3288334367, {Field0: line_3288334365, Field1: startIndex_3288334366})) && !(isEmpty_2415919476(selection_3288334367)))) {
    left_3288334375 = startOffset_3288334373;
    right_3288334376 = Math.ceil((startOffset_3288334373 + (charWidth_2768240799(app_3288334362.platform) * 0.5)));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3288334361.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2785017867), left: left_3288334375, right: right_3288334376, fillBackground: true, backgroundColor: nimCopy(null, color_3288334372, NTI2550136835), lastHierarchyChange: panel_3288334361.lastHierarchyChange, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3288334399(panel_3288334400, app_3288334401, startOffset_3288334402, endOffset_3288334403, line_3288334404, startIndex_3288334405, selections_3288334406, selectionClamped_3288334409, part_3288334410, color_3288334411) {
    Label1: {
      var i_3288334419 = 0;
      var colontmp__536872724 = 0;
      colontmp__536872724 = (selections_3288334406).length;
      var i_536872725 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872725 < colontmp__536872724)) break Label3;
            i_3288334419 = i_536872725;
            renderTextHighlight_3288334360(panel_3288334400, app_3288334401, startOffset_3288334402, endOffset_3288334403, line_3288334404, startIndex_3288334405, selections_3288334406[chckIndx(i_3288334419, 0, (selections_3288334406).length - 1)], selectionClamped_3288334409[chckIndx(i_3288334419, 0, (selectionClamped_3288334409).length - 1)], part_3288334410, color_3288334411);
            i_536872725 = addInt(i_536872725, 1);
          }
      };
    };

  
}

function isSome_3187671898(self_3187671900) {
  var result_3187671901 = false;

    result_3187671901 = self_3187671900.has;

  return result_3187671901;

}

function get_3288335845(self_3288335847, otherwise_3288335848) {
    var Temporary1;

  var result_3288335849 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3187671898(self_3288335847)) {
    Temporary1 = self_3288335847.val;
    }
    else {
    Temporary1 = otherwise_3288335848;
    }
    
    result_3288335849 = nimCopy(result_3288335849, Temporary1, NTI2550136835);

  return result_3288335849;

}

function getCascading_2516582604(table_2516582606, key_2516582607, default_2516582608) {
  var result_2516582609 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2516582652(table_2516582606, key_2516582607)) {
    result_2516582609 = nimCopy(result_2516582609, HEX5BHEX5D_2516582957(table_2516582606, key_2516582607), NTI2516582404);
    break BeforeRet;
    }
    
    var index_2516583036 = nsuRFindStr(key_2516582607, [46], 0, -1);
    if (!((index_2516583036 == -1))) {
    result_2516582609 = nimCopy(result_2516582609, getCascading_2516582604(table_2516582606, HEX5BHEX5D_855639291(key_2516582607, HEX2EHEX2E_805306418(0, subInt(index_2516583036, 1))), default_2516582608), NTI2516582404);
    break BeforeRet;
    }
    
    result_2516582609 = nimCopy(result_2516582609, default_2516582608, NTI2516582404);
    break BeforeRet;
  };

  return result_2516582609;

}

function tokenColor_3288335817(theme_3288335819, name_3288335820, default_3288335821) {
  var result_3288335822 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3288335822 = nimCopy(result_3288335822, get_3288335845(getCascading_2516582604(theme_3288335819.tokenColors, name_3288335820, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3288335821)), NTI2550136835);
    break BeforeRet;
  };

  return result_3288335822;

}

function updateWidget_3288334439(self_3288334440, app_3288334441, widget_3288334442, frameIndex_3288334443) {
    var Temporary1;
    
function HEX3Aanonymous_3288334643(wf_3288334654) {
      var result_3288334657 = [];

        result_3288334657 = nimCopy(null, ([32,45,32] || []).concat(wf_3288334654.name || []), NTI33554449);

      return result_3288334657;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary17;
    var Temporary19;
    var Temporary20;
    var Temporary21;
              
function renderLine_3288335375(i_3288335376, down_3288335377) {
                  
function HEX3Aanonymous_3288335521(s_3288335529) {
                    var result_3288335532 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3288335532 = nimCopy(result_3288335532, normalized_2415919470(s_3288335529), NTI2415919115);

                    return result_3288335532;

                  }
                  
function HEX3Aanonymous_3288335541(s_3288335548) {
                    var result_3288335551 = {Field0: 0, Field1: 0};

                      result_3288335551 = nimCopy(result_3288335551, clampToLine_3288334353(s_3288335548, i_3288335376, len_2818574067(styledText_3288335380)), NTI3288334340);

                    return result_3288335551;

                  }
                  
function HEX3Aanonymous_3288335660(s_3288335668) {
                    var result_3288335671 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3288335671 = nimCopy(result_3288335671, normalized_2415919470(s_3288335668), NTI2415919115);

                    return result_3288335671;

                  }
                  
function HEX3Aanonymous_3288335680(s_3288335687) {
                    var result_3288335690 = {Field0: 0, Field1: 0};

                      result_3288335690 = nimCopy(result_3288335690, clampToLine_3288334353(s_3288335687, i_3288335376, len_2818574067(styledText_3288335380)), NTI3288334340);

                    return result_3288335690;

                  }
                                  var Temporary7;
                          var Temporary8;

                var result_3288335378 = false;

                BeforeRet: {
                  var top_3288335379 = ((subInt(i_3288335376, self_3288334440.previousBaseIndex) * totalLineHeight_3288334445) + self_3288334440.scrollOffset);
                  if ((contentPanel_3288334608.lastBounds.h <= top_3288335379)) {
                  result_3288335378 = !(down_3288335377);
                  break BeforeRet;
                  }
                  
                  if (((top_3288335379 + totalLineHeight_3288334445) <= 0.0)) {
                  result_3288335378 = down_3288335377;
                  break BeforeRet;
                  }
                  
                  var styledText_3288335380 = getStyledText_2818574239(self_3288334440.document, i_3288335376);
                  var selectionsNormalizedOnLine_3288335540 = map_2818572723(getOrDefault_3288335451(selectionsPerLine_3288334770[0], i_3288335376, []), HEX3Aanonymous_3288335521);
                  var selectionsClampedOnLine_3288335583 = map_3288335552(selectionsNormalizedOnLine_3288335540, HEX3Aanonymous_3288335541);
                  var highlightsNormalizedOnLine_3288335679 = map_2818572723(getOrDefault_3288335451(highlightsPerLine_3288335025, i_3288335376, []), HEX3Aanonymous_3288335660);
                  var highlightsClampedOnLine_3288335697 = map_3288335552(highlightsNormalizedOnLine_3288335679, HEX3Aanonymous_3288335680);
                  var lineWidget_3288335698 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2785017867), left: 1.0, right: -1.0, top: top_3288335379, bottom: (top_3288335379 + totalLineHeight_3288334445), lastHierarchyChange: frameIndex_3288334443, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  if ((!((lineNumbers_3288335103 == 0)) && (cursorLine_3288335106 == i_3288335376))) {
                  var partWidget_3288335703 = createPartWidget_3288334420(HEX24_369098760(i_3288335376), 0.0, lineNumberBounds_3288335113.x, textColor_3288334604, frameIndex_3288334443);
                  lineWidget_3288335698.children.push(partWidget_3288335703);;
                  }
                  else {
                    switch (lineNumbers_3288335103) {
                    case 1:
                      var text_3288335708 = HEX24_369098760(i_3288335376);
                      var x_3288335709 = max_33555646(0.0, (lineNumberBounds_3288335113.x - ((text_3288335708).length * charWidth_3288334446)));
                      var partWidget_3288335710 = createPartWidget_3288334420(text_3288335708, x_3288335709, lineNumberBounds_3288335113.x, textColor_3288334604, frameIndex_3288334443);
                      lineWidget_3288335698.children.push(partWidget_3288335710);;
                      break;
                    case 2:
                      var text_3288335715 = HEX24_369098760(absInt(subInt(i_3288335376, cursorLine_3288335106)));
                      var x_3288335716 = max_33555646(0.0, (lineNumberBounds_3288335113.x - ((text_3288335715).length * charWidth_3288334446)));
                      var partWidget_3288335717 = createPartWidget_3288334420(text_3288335715, x_3288335716, lineNumberBounds_3288335113.x, textColor_3288334604, frameIndex_3288334443);
                      lineWidget_3288335698.children.push(partWidget_3288335717);;
                      break;
                    default: 
                      break;
                    }
                  }
                  
                  var startOffset_3288335722 = [(lineNumberBounds_3288335113.x + lineNumberPadding_3288335107)];
                  var startIndex_3288335723 = 0;
                  Label1: {
                    var partIndex_3288335729 = 0;
                    var part_3288335730 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536872652 = 0;
                    var L_536872653 = (styledText_3288335380.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536872652 < L_536872653)) break Label3;
                          partIndex_3288335729 = i_536872652;
                          part_3288335730 = nimCopy(part_3288335730, styledText_3288335380.parts[chckIndx(i_536872652, 0, (styledText_3288335380.parts).length - 1)], NTI2818572422);
                          var width_3288335731 = ((part_3288335730.text).length * charWidth_3288334446);
                          renderTextHighlight_3288334399(lineWidget_3288335698, app_3288334441, startOffset_3288335722[0], (startOffset_3288335722[0] + width_3288335731), i_3288335376, startIndex_3288335723, selectionsNormalizedOnLine_3288335540, selectionsClampedOnLine_3288335583, part_3288335730, selectionColor_3288335134);
                          renderTextHighlight_3288334399(lineWidget_3288335698, app_3288334441, startOffset_3288335722[0], (startOffset_3288335722[0] + width_3288335731), i_3288335376, startIndex_3288335723, highlightsNormalizedOnLine_3288335679, highlightsClampedOnLine_3288335697, part_3288335730, highlightColor_3288335254);
                          Label4: {
                            var selection_3288335811 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536872648 = [];
                            colontmp__536872648 = getOrDefault_3288335451(selectionsPerLine_3288334770[0], i_3288335376, []);
                            var i_536872649 = 0;
                            var L_536872650 = (colontmp__536872648).length;
                            Label5: {
                                Label6: while (true) {
                                if (!(i_536872649 < L_536872650)) break Label6;
                                  selection_3288335811 = colontmp__536872648[chckIndx(i_536872649, 0, (colontmp__536872648).length - 1)];
                                  if ((((selection_3288335811.Field1.Field0 == i_3288335376) && (startIndex_3288335723 <= selection_3288335811.Field1.Field1)) && (selection_3288335811.Field1.Field1 <= addInt(startIndex_3288335723, (part_3288335730.text).length)))) {
                                  if (((part_3288335730.text).length == 0)) {
                                  Temporary7 = 0.0;
                                  }
                                  else {
                                  Temporary7 = ((subInt(selection_3288335811.Field1.Field1, startIndex_3288335723) / (part_3288335730.text).length) * width_3288335731);
                                  }
                                  
                                  var offsetFromPartStart_3288335812 = Temporary7;
                                  lineWidget_3288335698.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2785017867), left: (startOffset_3288335722[0] + offsetFromPartStart_3288335812), right: ((startOffset_3288335722[0] + offsetFromPartStart_3288335812) + (cursorWidth_3288335128 * charWidth_3288334446)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3288335374, NTI2550136835), lastHierarchyChange: frameIndex_3288334443, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536872649 = addInt(i_536872649, 1);
                                  if (!(((colontmp__536872648).length == L_536872650))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3288335730.scope).length == 0)) {
                          Temporary8 = textColor_3288334604;
                          }
                          else {
                          Temporary8 = tokenColor_3288335817(app_3288334441.theme, part_3288335730.scope, rgb_2550136919(255, 200, 200));
                          }
                          
                          var color_3288335857 = nimCopy(null, Temporary8, NTI2550136835);
                          var partWidget_3288335858 = createPartWidget_3288334420(part_3288335730.text, startOffset_3288335722[0], width_3288335731, color_3288335857, frameIndex_3288334443);
                          styledText_3288335380.parts[chckIndx(partIndex_3288335729, 0, (styledText_3288335380.parts).length - 1)].bounds.x = partWidget_3288335858.left;
                          styledText_3288335380.parts[chckIndx(partIndex_3288335729, 0, (styledText_3288335380.parts).length - 1)].bounds.y = lineWidget_3288335698.top;
                          styledText_3288335380.parts[chckIndx(partIndex_3288335729, 0, (styledText_3288335380.parts).length - 1)].bounds.w = (partWidget_3288335858.right - partWidget_3288335858.left);
                          styledText_3288335380.parts[chckIndx(partIndex_3288335729, 0, (styledText_3288335380.parts).length - 1)].bounds.h = (lineWidget_3288335698.bottom - lineWidget_3288335698.top);
                          HEX2BHEX3D_855640304(startOffset_3288335722, 0, width_3288335731);
                          startIndex_3288335723 = addInt(startIndex_3288335723, (part_3288335730.text).length);
                          lineWidget_3288335698.children.push(partWidget_3288335858);;
                          i_536872652 = addInt(i_536872652, 1);
                          if (!(((styledText_3288335380.parts).length == L_536872653))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  self_3288334440.lastRenderedLines.push(styledText_3288335380);;
                  contentPanel_3288334608.children.push(lineWidget_3288335698);;
                  result_3288335378 = true;
                  break BeforeRet;
                };

                return result_3288335378;

              }

  BeforeRet: {
    var lineHeight_3288334444 = lineHeight_2768240794(app_3288334441.platform);
    var totalLineHeight_3288334445 = totalLineHeight_2768240810(app_3288334441.platform);
    var charWidth_3288334446 = charWidth_2768240799(app_3288334441.platform);
    var textColor_3288334604 = color_3288334447(app_3288334441.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3288334605 = null;
    var headerPart1Text_3288334606 = null;
    var headerPart2Text_3288334607 = null;
    var contentPanel_3288334608 = null;
    if (((widget_3288334442.children).length == 0)) {
    headerPanel_3288334605 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3288334445, lastHierarchyChange: frameIndex_3288334443, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3288334442.children.push(headerPanel_3288334605);;
    headerPart1Text_3288334606 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3288334443, foregroundColor: nimCopy(null, textColor_3288334604, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3288334605.children.push(headerPart1Text_3288334606);;
    headerPart2Text_3288334607 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707293(1.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), pivot: vec2_2130707293(1.0, 0.0), lastHierarchyChange: frameIndex_3288334443, foregroundColor: nimCopy(null, textColor_3288334604, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3288334605.children.push(headerPart2Text_3288334607);;
    contentPanel_3288334608 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3288334445, lastHierarchyChange: frameIndex_3288334443, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3288334608.maskContent = true;
    widget_3288334442.children.push(contentPanel_3288334608);;
    layoutWidget_2785018180(headerPanel_3288334605, widget_3288334442.lastBounds, frameIndex_3288334443, app_3288334441.platform.layoutOptions);
    layoutWidget_2785018180(contentPanel_3288334608, widget_3288334442.lastBounds, frameIndex_3288334443, app_3288334441.platform.layoutOptions);
    }
    else {
      headerPanel_3288334605 = widget_3288334442.children[chckIndx(0, 0, (widget_3288334442.children).length - 1)];
      headerPart1Text_3288334606 = headerPanel_3288334605.children[chckIndx(0, 0, (headerPanel_3288334605.children).length - 1)];
      headerPart2Text_3288334607 = headerPanel_3288334605.children[chckIndx(1, 0, (headerPanel_3288334605.children).length - 1)];
      contentPanel_3288334608 = widget_3288334442.children[chckIndx(1, 0, (widget_3288334442.children).length - 1)];
    }
    
    if (self_3288334440.renderHeader) {
    headerPanel_3288334605.bottom = totalLineHeight_3288334445;
    contentPanel_3288334608.top = totalLineHeight_3288334445;
    if (active_2382364785(self_3288334440)) {
    Temporary1 = color_3288334447(app_3288334441.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3288334447(app_3288334441.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3288334638 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785017934(headerPanel_3288334605, color_3288334638, frameIndex_3288334443);
    var workspaceName_3288334681 = get_2315255863(map_1291854418(self_3288334440.document.workspace, HEX3Aanonymous_3288334643), []);
    if (((self_3288334440.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3288334440.currentMode;
    }
    
    var mode_3288334682 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3288334687 = [mnewString(0)];
    fmtRes_3288334687[0].push.apply(fmtRes_3288334687[0], [32]);;
    formatValue_721420459(fmtRes_3288334687, 0, mode_3288334682, []);
    fmtRes_3288334687[0].push.apply(fmtRes_3288334687[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3288334687, 0, self_3288334440.document.filename, []);
    fmtRes_3288334687[0].push.apply(fmtRes_3288334687[0], [32]);;
    formatValue_721420459(fmtRes_3288334687, 0, workspaceName_3288334681, []);
    fmtRes_3288334687[0].push.apply(fmtRes_3288334687[0], [32]);;
    headerPart1Text_3288334606.text = nimCopy(null, fmtRes_3288334687[0], NTI33554449);
    var fmtRes_3288334692 = [mnewString(0)];
    fmtRes_3288334692[0].push.apply(fmtRes_3288334692[0], [32]);;
    formatValue_2818572413(fmtRes_3288334692, 0, selection_2818572793(self_3288334440), []);
    fmtRes_3288334692[0].push.apply(fmtRes_3288334692[0], [32,45,32]);;
    formatValue_2701131945(fmtRes_3288334692, 0, self_3288334440.id, []);
    fmtRes_3288334692[0].push.apply(fmtRes_3288334692[0], [32]);;
    headerPart2Text_3288334607.text = nimCopy(null, fmtRes_3288334692[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785017942(headerPanel_3288334605, frameIndex_3288334443);
    }
    else {
      headerPanel_3288334605.bottom = 0.0;
      contentPanel_3288334608.top = 0.0;
    }
    
    self_3288334440.lastContentBounds = nimCopy(self_3288334440.lastContentBounds, contentPanel_3288334608.lastBounds, NTI2113929221);
    widget_3288334442.lastHierarchyChange = nimMax(widget_3288334442.lastHierarchyChange, headerPanel_3288334605.lastHierarchyChange);
    if (active_2382364785(self_3288334440)) {
    Temporary3 = color_3288334447(app_3288334441.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3288334447(app_3288334441.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785017934(contentPanel_3288334608, Temporary3, frameIndex_3288334443);
      if (changed_2785018181(contentPanel_3288334608, frameIndex_3288334443)) Temporary5 = true; else {        Temporary5 = dirty_2382364707(self_3288334440);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3288334441.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2382364780(self_3288334440);
    if (contentPanel_3288334608.children.length < 0) { for (var i = contentPanel_3288334608.children.length ; i < 0 ; ++i) contentPanel_3288334608.children.push(null); }
               else { contentPanel_3288334608.children.length = 0; };
    Label6: {
      self_3288334440.previousBaseIndex = clamp_3288334725(self_3288334440.previousBaseIndex, HEX2EHEX2E_805306418(0, (self_3288334440.document.lines).length));
      Label7: {
          Label8: while (true) {
          if (!((self_3288334440.scrollOffset < 0.0) && (addInt(self_3288334440.previousBaseIndex, 1) < (self_3288334440.document.lines).length))) break Label8;
            if ((contentPanel_3288334608.lastBounds.h <= (self_3288334440.scrollOffset + totalLineHeight_3288334445))) {
            break Label7;
            }
            
            self_3288334440.previousBaseIndex = addInt(self_3288334440.previousBaseIndex, 1);
            HEX2BHEX3D_855640304(self_3288334440, "scrollOffset", totalLineHeight_3288334445);
          }
      };
      Label9: {
          Label10: while (true) {
          if (!((contentPanel_3288334608.lastBounds.h < self_3288334440.scrollOffset) && (0 < self_3288334440.previousBaseIndex))) break Label10;
            if (((self_3288334440.scrollOffset - lineHeight_3288334444) <= 0.0)) {
            break Label9;
            }
            
            self_3288334440.previousBaseIndex = subInt(self_3288334440.previousBaseIndex, 1);
            HEX2DHEX3D_2818591287(self_3288334440, "scrollOffset", totalLineHeight_3288334445);
          }
      };
    };
    var selectionsPerLine_3288334770 = [initTable_3288334759(32)];
    Label11: {
      var s_3288334774 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872641 = [];
      colontmp__536872641 = selections_2818572790(self_3288334440);
      var i_536872642 = 0;
      var L_536872643 = (colontmp__536872641).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872642 < L_536872643)) break Label13;
            s_3288334774 = colontmp__536872641[chckIndx(i_536872642, 0, (colontmp__536872641).length - 1)];
            var sn_3288334775 = normalized_2415919470(s_3288334774);
            Label14: {
              var line_3288334780 = 0;
              var res_536872639 = sn_3288334775.Field0.Field0;
              Label15: {
                  Label16: while (true) {
                  if (!(res_536872639 <= sn_3288334775.Field1.Field0)) break Label16;
                    line_3288334780 = res_536872639;
                    var Temporary18 = nimCopy(null, s_3288334774, NTI2415919115);
                    (Temporary17 = mgetOrPut_3288334811(selectionsPerLine_3288334770[0], line_3288334780, []), Temporary17)[0][Temporary17[1]].push(Temporary18);;
                    res_536872639 = addInt(res_536872639, 1);
                  }
              };
            };
            i_536872642 = addInt(i_536872642, 1);
            if (!(((colontmp__536872641).length == L_536872643))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3288335025 = nimCopy(null, self_3288334440.searchResults, NTI2818572541);
    var lineNumbers_3288335103 = get_3288335089(self_3288334440.lineNumbers, getOption_3288335038(app_3288334441, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3288335103) {
    case 1:
      Temporary19 = addInt(self_3288334440.previousBaseIndex, ((((contentPanel_3288334608.lastBounds.h - self_3288334440.scrollOffset) / totalLineHeight_3288334445)) | 0));
      break;
    case 2:
      Temporary19 = 99;
      break;
    default: 
      Temporary19 = 0;
      break;
    }
    var maxLineNumber_3288335104 = Temporary19;
    var maxLineNumberLen_3288335105 = addInt((HEX24_369098760(maxLineNumber_3288335104)).length, 1);
    var cursorLine_3288335106 = selection_2818572793(self_3288334440).Field1.Field0;
    var lineNumberPadding_3288335107 = charWidth_3288334446;
    if (!((lineNumbers_3288335103 == 0))) {
    Temporary20 = vec2_2130707293((maxLineNumberLen_3288335105 * charWidth_3288334446), 0.0);
    }
    else {
    Temporary20 = vec2_2130707254();
    }
    
    var lineNumberBounds_3288335113 = nimCopy(null, Temporary20, NTI2130706720);
    if (self_3288334440.lastRenderedLines.length < 0) { for (var i = self_3288334440.lastRenderedLines.length ; i < 0 ; ++i) self_3288334440.lastRenderedLines.push(null); }
               else { self_3288334440.lastRenderedLines.length = 0; };
    var isWide_3288335127 = getOption_2818582962(app_3288334441, getContextWithMode_2818582956(self_3288334440, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3288335127) {
    Temporary21 = 1.0;
    }
    else {
    Temporary21 = 0.2;
    }
    
    var cursorWidth_3288335128 = Temporary21;
    var selectionColor_3288335134 = color_3288334447(app_3288334441.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3288335254 = color_3288335139(app_3288334441.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3288335374 = color_3288335259(app_3288334441.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    Label22: {
      var i_3288335895 = 0;
      var colontmp__536872655 = 0;
      colontmp__536872655 = (self_3288334440.document.lines).length - 1;
      var res_536872656 = self_3288334440.previousBaseIndex;
      Label23: {
          Label24: while (true) {
          if (!(res_536872656 <= colontmp__536872655)) break Label24;
            i_3288335895 = res_536872656;
            if (!(renderLine_3288335375(i_3288335895, true))) {
            break Label22;
            }
            
            res_536872656 = addInt(res_536872656, 1);
          }
      };
    };
    Label25: {
      var k_3288335900 = 0;
      var res_536872659 = 1;
      Label26: {
          Label27: while (true) {
          if (!(res_536872659 <= self_3288334440.previousBaseIndex)) break Label27;
            k_3288335900 = res_536872659;
            var i_3288335901 = subInt(self_3288334440.previousBaseIndex, k_3288335900);
            if (!(renderLine_3288335375(i_3288335901, false))) {
            break Label25;
            }
            
            res_536872659 = addInt(res_536872659, 1);
          }
      };
    };
    contentPanel_3288334608.lastHierarchyChange = frameIndex_3288334443;
    widget_3288334442.lastHierarchyChange = nimMax(widget_3288334442.lastHierarchyChange, contentPanel_3288334608.lastHierarchyChange);
    self_3288334440.lastContentBounds = nimCopy(self_3288334440.lastContentBounds, contentPanel_3288334608.lastBounds, NTI2113929221);
  };

  
}

function updateWidget_3271557125(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129) {
  
}

function updateWidget_3271557130(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129) {
    chckNilDisp(self_3271557126);
    if (isObj(self_3271557126.m_type, NTI2818572510)) {
    updateWidget_3288334439(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129);
    }
    else {
    if (isObj(self_3271557126.m_type, NTI2382364676)) {
    updateWidget_3271557125(self_3271557126, app_3271557127, widget_3271557128, frameIndex_3271557129);
    }
    }

  
}

function dirty_2449473554(self_2449473555) {
  var result_2449473556 = false;

    result_2449473556 = self_2449473555.mDirty;

  return result_2449473556;

}

function resetDirty_2449473584(self_2449473585) {
    self_2449473585.mDirty = false;

  
}

function pop_3305111680(s_3305111682, s_3305111682_Idx) {
  var result_3305111683 = null;

    var L_3305111687 = subInt((s_3305111682[s_3305111682_Idx]).length, 1);
    result_3305111683 = s_3305111682[s_3305111682_Idx][chckIndx(L_3305111687, 0, (s_3305111682[s_3305111682_Idx]).length - 1)];
    if (s_3305111682[s_3305111682_Idx].length < chckRange(L_3305111687, 0, 2147483647)) { for (var i = s_3305111682[s_3305111682_Idx].length ; i < chckRange(L_3305111687, 0, 2147483647) ; ++i) s_3305111682[s_3305111682_Idx].push(null); }
               else { s_3305111682[s_3305111682_Idx].length = chckRange(L_3305111687, 0, 2147483647); };

  return result_3305111683;

}

function updateWidget_3305111595(self_3305111596, app_3305111597, widget_3305111598, frameIndex_3305111599) {
    var Temporary1;

    var textColor_3305111605 = color_3288334447(app_3305111597.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3305111598.children).length == 0)) {
    var text_3305111609 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3305111599, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3305111598.children.push(text_3305111609);;
    Temporary1 = text_3305111609;
    }
    else {
    Temporary1 = widget_3305111598.children[chckIndx(0, 0, (widget_3305111598.children).length - 1)];
    }
    
    var text_3305111614 = Temporary1;
    text_3305111614.text = nimCopy(null, self_3305111596.path, NTI33554449);
    updateForegroundColor_2785017920(text_3305111614, textColor_3305111605, frameIndex_3305111599);
    updateLastHierarchyChangeFromChildren_2785017942(text_3305111614, -1);

  
}

function updateWidget_3305111575(self_3305111576, app_3305111577, widget_3305111578, frameIndex_3305111579) {
    var Temporary1;

    var textColor_3305111585 = color_3288334447(app_3305111577.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3305111578.children).length == 0)) {
    var text_3305111589 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3305111579, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3305111578.children.push(text_3305111589);;
    Temporary1 = text_3305111589;
    }
    else {
    Temporary1 = widget_3305111578.children[chckIndx(0, 0, (widget_3305111578.children).length - 1)];
    }
    
    var text_3305111594 = Temporary1;
    text_3305111594.text = nimCopy(null, self_3305111576.path, NTI33554449);
    updateForegroundColor_2785017920(text_3305111594, textColor_3305111585, frameIndex_3305111579);
    updateLastHierarchyChangeFromChildren_2785017942(text_3305111594, -1);

  
}

function updateWidget_3305111569(self_3305111570, app_3305111571, widget_3305111572, frameIndex_3305111573) {
  
}

function updateWidget_3305111574(self_3305111570, app_3305111571, widget_3305111572, frameIndex_3305111573) {
    chckNilDisp(self_3305111570);
    if (isObj(self_3305111570.m_type, NTI1291848505)) {
    updateWidget_3305111595(self_3305111570, app_3305111571, widget_3305111572, frameIndex_3305111573);
    }
    else {
    if (isObj(self_3305111570.m_type, NTI1291848507)) {
    updateWidget_3305111575(self_3305111570, app_3305111571, widget_3305111572, frameIndex_3305111573);
    }
    else {
    if (isObj(self_3305111570.m_type, NTI3221225480)) {
    updateWidget_3305111569(self_3305111570, app_3305111571, widget_3305111572, frameIndex_3305111573);
    }
    }}

  
}

function updateWidget_3305111615(self_3305111616, app_3305111617, widget_3305111618, frameIndex_3305111619) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3305111620 = lineHeight_2768240794(app_3305111617.platform);
    var totalLineHeight_3305111621 = totalLineHeight_2768240810(app_3305111617.platform);
    var charWidth_3305111622 = charWidth_2768240799(app_3305111617.platform);
    var textColor_3305111628 = color_3288334447(app_3305111617.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3305111629 = null;
    var contentPanel_3305111630 = null;
    if (((widget_3305111618.children).length == 0)) {
    headerPanel_3305111629 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3305111621, lastHierarchyChange: frameIndex_3305111619, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3305111618.children.push(headerPanel_3305111629);;
    contentPanel_3305111630 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3305111621, lastHierarchyChange: frameIndex_3305111619, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3305111630.maskContent = true;
    widget_3305111618.children.push(contentPanel_3305111630);;
    layoutWidget_2785018180(headerPanel_3305111629, widget_3305111618.lastBounds, frameIndex_3305111619, app_3305111617.platform.layoutOptions);
    layoutWidget_2785018180(contentPanel_3305111630, widget_3305111618.lastBounds, frameIndex_3305111619, app_3305111617.platform.layoutOptions);
    }
    else {
      headerPanel_3305111629 = widget_3305111618.children[chckIndx(0, 0, (widget_3305111618.children).length - 1)];
      contentPanel_3305111630 = widget_3305111618.children[chckIndx(1, 0, (widget_3305111618.children).length - 1)];
    }
    
    updateWidget_3271557130(self_3305111616.textEditor, app_3305111617, headerPanel_3305111629, frameIndex_3305111619);
    updateLastHierarchyChangeFromChildren_2785017942(headerPanel_3305111629, frameIndex_3305111619);
    widget_3305111618.lastHierarchyChange = nimMax(widget_3305111618.lastHierarchyChange, headerPanel_3305111629.lastHierarchyChange);
    updateBackgroundColor_2785017934(contentPanel_3305111630, color_3288334447(app_3305111617.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3305111619);
    self_3305111616.lastContentBounds = nimCopy(self_3305111616.lastContentBounds, contentPanel_3305111630.lastBounds, NTI2113929221);
    var fmtRes_3305111652 = [mnewString(0)];
    formatValue_2785018207(fmtRes_3305111652, 0, self_3305111616.lastContentBounds, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3305111652[0], NTI33554449)]);
      if (changed_2785018181(contentPanel_3305111630, frameIndex_3305111619)) Temporary2 = true; else {        Temporary2 = dirty_2449473554(self_3305111616);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3305111617.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2449473584(self_3305111616);
    var maxLineCount_3305111658 = ((Math.floor((widget_3305111618.lastBounds.h / totalLineHeight_3305111621))) | 0);
    var targetNumRenderedItems_3305111662 = nimMin(maxLineCount_3305111658, (self_3305111616.completions).length);
    var lastRenderedIndex_3305111666 = nimMin(subInt(addInt(self_3305111616.scrollOffset, targetNumRenderedItems_3305111662), 1), (self_3305111616.completions).length - 1);
    if ((self_3305111616.selected < self_3305111616.scrollOffset)) {
    self_3305111616.scrollOffset = self_3305111616.selected;
    lastRenderedIndex_3305111666 = nimMin(subInt(addInt(self_3305111616.scrollOffset, targetNumRenderedItems_3305111662), 1), (self_3305111616.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3305111666 < self_3305111616.selected)) {
    self_3305111616.scrollOffset = nimMax(addInt(subInt(self_3305111616.selected, targetNumRenderedItems_3305111662), 1), 0);
    lastRenderedIndex_3305111666 = nimMin(subInt(addInt(self_3305111616.scrollOffset, targetNumRenderedItems_3305111662), 1), (self_3305111616.completions).length - 1);
    }
    
    var numRenderedItems_3305111673 = nimMax(addInt(subInt(lastRenderedIndex_3305111666, self_3305111616.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3305111673 < (contentPanel_3305111630.children).length)) break Label4;
          var _ = pop_3305111680(contentPanel_3305111630, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3305111630.children).length < numRenderedItems_3305111673)) break Label6;
          contentPanel_3305111630.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3305111704 = color_3288334447(app_3305111617.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3305111705 = 0.0;
    var widgetIndex_3305111706 = 0;
    Label7: {
      var completionIndex_3305111711 = 0;
      var res_536872730 = self_3305111616.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872730 <= lastRenderedIndex_3305111666)) break Label9;
            completionIndex_3305111711 = res_536872730;
            try {
            var lineWidget_3305111717 = contentPanel_3305111630.children[chckIndx(widgetIndex_3305111706, 0, (contentPanel_3305111630.children).length - 1)];
            lineWidget_3305111717.top = top_3305111705;
            lineWidget_3305111717.bottom = (top_3305111705 + totalLineHeight_3305111621);
            lineWidget_3305111717.lastHierarchyChange = frameIndex_3305111619;
            if ((completionIndex_3305111711 == self_3305111616.selected)) {
            lineWidget_3305111717.fillBackground = true;
            updateBackgroundColor_2785017934(lineWidget_3305111717, selectionColor_3305111704, frameIndex_3305111619);
            }
            else {
              lineWidget_3305111717.fillBackground = false;
              updateBackgroundColor_2785017934(lineWidget_3305111717, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3305111619);
            }
            
            updateWidget_3305111574(self_3305111616.completions[chckIndx(completionIndex_3305111711, 0, (self_3305111616.completions).length - 1)], app_3305111617, lineWidget_3305111717, frameIndex_3305111619);
            top_3305111705 = lineWidget_3305111717.bottom;
            res_536872730 = addInt(res_536872730, 1);
            } finally {
            widgetIndex_3305111706 = addInt(widgetIndex_3305111706, 1);
            }
          }
      };
    };
    contentPanel_3305111630.lastHierarchyChange = frameIndex_3305111619;
    widget_3305111618.lastHierarchyChange = nimMax(widget_3305111618.lastHierarchyChange, contentPanel_3305111630.lastHierarchyChange);
  };

  
}

function updateWidget_3271557131(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135) {
  
}

function updateWidget_3271557136(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135) {
    chckNilDisp(self_3271557132);
    if (isObj(self_3271557132.m_type, NTI3221225494)) {
    updateWidget_3305111615(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135);
    }
    else {
    if (isObj(self_3271557132.m_type, NTI2449473540)) {
    updateWidget_3271557131(self_3271557132, app_3271557133, widget_3271557134, frameIndex_3271557135);
    }
    }

  
}
