/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3321888772 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305112105 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305112121 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305112120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221226150 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582848 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007841 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007838 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706495 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018298 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671275 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448264 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448263 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448262 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448261 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818586210 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818586256 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919187 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250756 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969568640 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969574376 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017876 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017875 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017874 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017872 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017871 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017870 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516584388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582915 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850591 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849420 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2466250766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068448 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3355443293 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3355443292 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443270 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3355443278 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443275 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3355443287 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443249 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443246 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3355443260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443237 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443236 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3355443226 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3355443225 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443224 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3355443218 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3355443212 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3355443211 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291855851 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291855858 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855857 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855856 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291855864 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568656 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017869 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848319 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854534 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848508 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848506 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929938 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568634 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568636 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2969568633 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568628 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568612 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2281701394 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701391 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2281701388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2281701380 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592522 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141891 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2399141901 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2399141893 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969578269 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007897 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969577305 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818585760 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671047 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671304 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3187671067 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3187671074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671071 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671069 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671066 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671065 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671064 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3187671048 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3187671043 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671063 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3187671062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969569466 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121804 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572566 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473551 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582423 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582453 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582450 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582405 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2113929231 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2113929230 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929228 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2415919108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815299 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2751463428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2751463427 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2214592519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2214592515 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2113929221 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554447 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI2785017877 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240742 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240741 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240735 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919122 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2415919121 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919120 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240721 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240704 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240698 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240684 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240659 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2768240658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2449473553 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2214592520 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592516 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815306 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815300 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2969572489 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969572484 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969571582 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568637 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568638 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448274 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003123002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568481 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969568484 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969568482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969572190 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007811 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969568663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969569217 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898994 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898974 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339604 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137341025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340922 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137340550 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3137340486 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339575 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2164261152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017867 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017866 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007844 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087009002 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019900729 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154117637 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019931331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008732 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008719 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008716 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019909216 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019930420 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008194 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676328 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898897 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898884 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008909 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019907400 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008055 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121671 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3036676235 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI3036676200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898919 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676206 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019898900 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898888 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3036676203 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3036676201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3036676204 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899118 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818585704 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818585703 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584215 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2147483653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583494 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810261 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578557 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576685 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473666 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473675 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473595 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576075 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818579318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576430 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818576104 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572629 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572640 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572694 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473555 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2449473547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473545 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2113929251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554435, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2382364676 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2382364676.node = NNI2382364676;
var NNI2365587460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587460.node = NNI2365587460;
NTI2365587460.base = NTI33555171;
NTI2382364676.base = NTI2365587460;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2113929251 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929251.node = NNI2113929251;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2449473545 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2449473545.node = NNI2449473545;
var NNI2449473547 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2449473547.node = NNI2449473547;
NTI2449473555.base = NTI2449473547;
NTI2818572694.base = NTI2449473555;
NTI2818572821.base = NTI2449473547;
NTI2818572640.base = NTI2449473547;
NTI2818572629.base = NTI2449473547;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2449473547;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2449473547, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2449473545, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818576104.base = NTI2818572292;
NTI2818576430.base = NTI2449473547;
NTI2818579318.base = NTI2449473547;
NTI2818576075.base = NTI2449473547;
NTI2818579834.base = NTI2449473547;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2449473595.base = NTI2449473547;
NTI2449473675.base = NTI2449473547;
NTI2449473666.base = NTI2449473547;
NTI2818576685.base = NTI2449473547;
var NNI2818576690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576685, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576690.node = NNI2818576690;
NTI2818576615.base = NTI2449473547;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2449473547;
var NNI2818578483 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578483.node = NNI2818578483;
var NNI2818578525 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578525.node = NNI2818578525;
var NNI2818578557 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2449473545, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818578557.node = NNI2818578557;
var NNI2348810261 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2348810261.node = NNI2348810261;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572615.base = NTI2449473547;
NTI2818583494.base = NTI2449473547;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2449473545, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2147483653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2147483653.node = NNI2147483653;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818584215.base = NTI2919235630;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI2818585704 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818585704.node = NNI2818585704;
var NNI2818585703 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818585704, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473545, name: "Field1", sons: null}]};
NTI2818585703.node = NNI2818585703;
var NNI3036676201 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3036676201.node = NNI3036676201;
var NNI3036676204 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3036676201, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676203, name: "Field1", sons: null}]};
NTI3036676204.node = NNI3036676204;
NTI3019898908.base = NTI3036676204;
NTI3019899118.base = NTI3019898908;
NTI3003122753.base = NTI33554435;
var NNI3019898883 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3019898883.node = NNI3019898883;
NTI3019898888.base = NTI3019898883;
var NNI3019898900 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898888, name: "Field2", sons: null}]};
NTI3019898900.node = NNI3019898900;
var NNI3036676206 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3036676206, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3036676206, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3036676206, name: "Green", len: 0, sons: null}}};
NTI3036676206.node = NNI3036676206;
var NNI3019898919 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}]};
NTI3019898919.node = NNI3019898919;
NTI3036676200.base = NTI33554439;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
NTI3036676235.base = NTI3036676204;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI3003121667 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121667, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121667, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121667, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3003121667, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3003121667, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3003121667, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3003121667, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI3003121667, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI3003121667, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI3003121667, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI3003121667, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI3003121667, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI3003121667, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI3003121667, name: "Assignment", len: 0, sons: null}}};
NTI3003121667.node = NNI3003121667;
NTI3003121671.base = NTI3003121668;
var NNI3003121670 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI3003121667, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3003121671, name: "children", sons: null}]};
NTI3003121670.node = NNI3003121670;
NTI3003121668.base = NTI3003121670;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]}]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008055.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3019907400 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3019907400.node = NNI3019907400;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mHash", len: 0, typ: NTI1325400067, name: "mHash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008909 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008909.node = NNI3087008909;
NTI3019898985.base = NTI2046820355;
NTI3019898897.base = NTI3019898900;
var NNI3019898894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898897, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898894.node = NNI3019898894;
var NNI3019898884 = {kind: 1, offset: "queries", len: 0, typ: NTI3019898894, name: "queries", sons: null};
NTI3019898884.node = NNI3019898884;
var NNI3019898997 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3036676204, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898985, name: "Field2", sons: null}]};
NTI3019898997.node = NNI3019898997;
NTI3087008200.base = NTI33554439;
NTI3036676328.base = NTI33554439;
NTI3087008194.base = NTI33554439;
NTI3019930420.base = NTI3087007751;
var NNI3019909216 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3019909216.node = NNI3019909216;
NTI2013268507.base = NTI33554439;
NTI3087008384.base = NTI33554439;
NTI3087008654.base = NTI33554439;
var NNI3087008719 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008719.node = NNI3087008719;
NTI3087008716.base = NTI3087008719;
var NNI3087008713 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008716, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008713.node = NNI3087008713;
var NNI3003121783 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121783.node = NNI3003121783;
var NNI3087008732 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008732.node = NNI3087008732;
var NNI3019931331 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3019931331.node = NNI3019931331;
NTI3154117637.base = NTI3087007751;
NTI3019900729.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2516582403 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2516582403, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2516582403, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2516582403, name: "Bold", len: 0, sons: null}}};
NTI2516582403.node = NNI2516582403;
NTI3087007783.base = NTI2516582403;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI2164261152 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2164261152.node = NNI2164261152;
var NNI2785017867 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2164261152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2785017867.node = NNI2785017867;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
var NNI2785017866 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2785017867, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2164261152, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2147483653, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2785017866.node = NNI2785017866;
NTI2785017866.base = NTI33555171;
NTI2785017859.base = NTI2785017866;
var NNI3087007778 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mhash", len: 0, typ: NTI1325400067, name: "mhash", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2147483653, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007844, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}, 
{kind: 1, offset: "widgetTemplate", len: 0, typ: NTI2785017859, name: "widgetTemplate", sons: null}, 
{kind: 1, offset: "cloneWidget", len: 0, typ: NTI33554466, name: "cloneWidget", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
NTI3087009002.base = NTI3087007773;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
NTI3137339575.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3137340486.base = NTI33554449;
NTI3137340550.base = NTI2516582403;
NTI3137340452.base = NTI33554449;
var NNI3137340922 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137340922.node = NNI3137340922;
var NNI3137341025 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3137340452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3137341025.node = NNI3137341025;
NTI3137339604.base = NTI33554449;
NTI3019900968.base = NTI33554439;
var NNI3019898980 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898884, name: "Field2", sons: null}]};
NTI3019898980.node = NNI3019898980;
NTI3019898977.base = NTI3019898980;
var NNI3019898974 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898977, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898974.node = NNI3019898974;
NTI3019898994.base = NTI3019898997;
var NNI3019898991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3019898994, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3019898991.node = NNI3019898991;
NTI2969569217.base = NTI3003121668;
var NNI3087007825 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007825.node = NNI3087007825;
NTI3087007822.base = NTI3087007825;
var NNI3087007819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007822, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007819.node = NNI3087007819;
var NNI3087007811 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007819, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}]};
NTI3087007811.node = NNI3087007811;
NTI3087007775.base = NTI3087007811;
var NNI2969568663 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2164261152, name: "Field1", sons: null}]};
NTI2969568663.node = NNI2969568663;
var NNI2969568481 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568481, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568481, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969568481, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969568481, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969568481, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2969568481.node = NNI2969568481;
var NNI2969568484 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2969568481, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3003121668, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI3003121668, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2969568484.node = NNI2969568484;
NTI2969568482.base = NTI2969568484;
NTI2969572190.base = NTI2969568482;
var NNI2969568631 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI2969568631.node = NNI2969568631;
var NNI3003123002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI3003123002.node = NNI3003123002;
NTI2818572428.base = NTI33554449;
var NNI2969568637 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2969568637, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969568637, name: "AstCompletion", len: 0, sons: null}}};
NTI2969568637.node = NNI2969568637;
var NNI2969568638 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2969568637, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI3003121667, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2969568638.node = NNI2969568638;
NTI3204448274.base = NTI2969568638;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2969571582.base = NTI2969568638;
var NNI2969572484 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121668, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2969572484.node = NNI2969572484;
var NNI2969572489 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969572484, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2969572489.node = NNI2969572489;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2214592520 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2214592520.node = NNI2214592520;
NTI2214592520.base = NTI33555171;
NTI2214592516.base = NTI2214592520;
var NNI2197815306 = {kind: 1, offset: "val", len: 0, typ: NTI2214592516, name: "val", sons: null};
NTI2197815306.node = NNI2197815306;
var NNI2197815300 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2197815306, name: "workspace", sons: null}]};
NTI2197815300.node = NNI2197815300;
NTI2197815300.base = NTI33555171;
NTI2818572427.base = NTI2197815300;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2449473553 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473553, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473553, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473553, name: "browser", len: 0, sons: null}}};
NTI2449473553.node = NNI2449473553;
var NNI2768240658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240659, name: "Field1", sons: null}]};
NTI2768240658.node = NNI2768240658;
NTI2768240657.base = NTI2768240658;
var NNI2768240651 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240657, name: "handlers", sons: null};
NTI2768240651.node = NNI2768240651;
var NNI2768240683 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240684, name: "Field1", sons: null}]};
NTI2768240683.node = NNI2768240683;
NTI2768240682.base = NTI2768240683;
var NNI2768240676 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240682, name: "handlers", sons: null};
NTI2768240676.node = NNI2768240676;
var NNI2768240705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240706, name: "Field1", sons: null}]};
NTI2768240705.node = NNI2768240705;
NTI2768240704.base = NTI2768240705;
var NNI2768240698 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240704, name: "handlers", sons: null};
NTI2768240698.node = NNI2768240698;
var NNI2768240722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240723, name: "Field1", sons: null}]};
NTI2768240722.node = NNI2768240722;
NTI2768240721.base = NTI2768240722;
var NNI2768240715 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240721, name: "handlers", sons: null};
NTI2768240715.node = NNI2768240715;
var NNI2415919121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919122, name: "Field1", sons: null}]};
NTI2415919121.node = NNI2415919121;
NTI2415919120.base = NTI2415919121;
var NNI2415919114 = {kind: 1, offset: "handlers", len: 0, typ: NTI2415919120, name: "handlers", sons: null};
NTI2415919114.node = NNI2415919114;
var NNI2768240742 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240743, name: "Field1", sons: null}]};
NTI2768240742.node = NNI2768240742;
NTI2768240741.base = NTI2768240742;
var NNI2768240735 = {kind: 1, offset: "handlers", len: 0, typ: NTI2768240741, name: "handlers", sons: null};
NTI2768240735.node = NNI2768240735;
var NNI2785017865 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2785017877, name: "getTextBounds", sons: null};
NTI2785017865.node = NNI2785017865;
var NNI2768240644 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2768240651, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2768240651, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2768240651, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2768240676, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2768240676, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2768240698, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2768240715, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2415919114, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2768240735, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2785017865, name: "layoutOptions", sons: null}]};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2113929222 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2113929222.node = NNI2113929222;
NTI2113929221.base = NTI2113929222;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2113929221, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2214592519.base = NTI2214592516;
var NNI2214592518 = {kind: 1, offset: "folders", len: 0, typ: NTI2214592519, name: "folders", sons: null};
NTI2214592518.node = NNI2214592518;
NTI2214592515.base = NTI2214592518;
var NNI2751463428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2751463428.node = NNI2751463428;
NTI2751463428.base = NTI33555171;
NTI2751463427.base = NTI2751463428;
NTI2197815299.base = NTI2197815300;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2113929229 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2113929221, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2113929230, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2113929231, name: "handleInput", sons: null}]};
NTI2113929229.node = NNI2113929229;
NTI2113929228.base = NTI2113929229;
var NNI2415919108 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2415919108.node = NNI2415919108;
NTI2415919108.base = NTI33555171;
NTI2415919107.base = NTI2415919108;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2197815299, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2415919107, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2516582438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2516582438.node = NNI2516582438;
NTI2516582435.base = NTI2516582438;
var NNI2516582432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582435, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582432.node = NNI2516582432;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582423.base = NTI2516582403;
var NNI2516582404 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2516582412, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2516582412, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2516582423, name: "fontStyle", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI2516582453 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2516582404, name: "Field2", sons: null}]};
NTI2516582453.node = NNI2516582453;
NTI2516582450.base = NTI2516582453;
var NNI2516582447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2516582450, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2516582447.node = NNI2516582447;
var NNI2516582424 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2516582432, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2516582447, name: "tokenColors", sons: null}]};
NTI2516582424.node = NNI2516582424;
NTI2516582405.base = NTI2516582424;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2449473539, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2415919107, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2483027972 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2449473539, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2415919114, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2483027972.node = NNI2483027972;
NTI2483027972.base = NTI33555171;
NTI2483027971.base = NTI2483027972;
NTI1291845718.base = NTI2483027971;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2415919107;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2449473553, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2768240643, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI33554447, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI33554447, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI33554447, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2785017859, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2214592515, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2751463427, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2516582405, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2415919107, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2113929228, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2113929228, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2449473555;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2449473551 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2449473551, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2449473551, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2449473551, name: "relative", len: 0, sons: null}}};
NTI2449473551.node = NNI2449473551;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473551, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572567 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2818572567.node = NNI2818572567;
NTI2818572566.base = NTI2818572567;
var NNI2818572510 = {kind: 2, len: 29, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2449473555, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2113929228, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "disableScrolling", len: 0, typ: NTI33554466, name: "disableScrolling", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "disableCompletions", len: 0, typ: NTI33554466, name: "disableCompletions", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "lastCompletionWidgets", len: 0, typ: NTI2818572566, name: "lastCompletionWidgets", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2415919108;
var NNI3003121804 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121804.node = NNI3003121804;
var NNI2969569466 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121668, name: "Field1", sons: null}]};
NTI2969569466.node = NNI2969569466;
NTI2818572509.base = NTI2818572510;
var NNI3187671048 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3187671048.node = NNI3187671048;
NTI3187671048.base = NTI33555171;
NTI3187671043.base = NTI3187671048;
NTI3187671063.base = NTI3187671043;
var NNI3187671068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3187671068.node = NNI3187671068;
NTI3187671067.base = NTI3187671068;
var NNI2499805188 = {kind: 1, offset: "canceled", len: 0, typ: NTI33554466, name: "canceled", sons: null};
NTI2499805188.node = NNI2499805188;
NTI2499805187.base = NTI2499805188;
var NNI3187671062 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3187671063, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3187671064, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3187671065, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3187671066, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3187671069, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3187671071, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3187671074, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3187671067, name: "lastItems", sons: null}, 
{kind: 1, offset: "cancellationToken", len: 0, typ: NTI2499805187, name: "cancellationToken", sons: null}]};
NTI3187671062.node = NNI3187671062;
NTI3187671062.base = NTI2483027972;
NTI3187671080.base = NTI3187671043;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
NTI3187671047.base = NTI3187671062;
var NNI3187671304 = {kind: 1, offset: "val", len: 0, typ: NTI3187671047, name: "val", sons: null};
NTI3187671304.node = NNI3187671304;
var NNI1291848451 = {kind: 1, offset: "val", len: 0, typ: NTI2483027971, name: "val", sons: null};
NTI1291848451.node = NNI1291848451;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2818585760 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818585760.node = NNI2818585760;
NTI1979711564.base = NTI33554449;
var NNI2969577305 = {kind: 1, offset: "completion", len: 0, typ: NTI2969568638, name: "completion", sons: null};
NTI2969577305.node = NNI2969577305;
NTI2969577305.base = NTI3187671048;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3087007968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007968.node = NNI3087007968;
var NNI3087007897 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007897.node = NNI3087007897;
var NNI2969578269 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2969578269.node = NNI2969578269;
var NNI2264924164 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI2214592520;
NTI2214592521.base = NTI33554449;
NTI2214592522.base = NTI33554449;
var NNI2214592517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2214592521, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2214592522, name: "folders", sons: null}]};
NTI2214592517.node = NNI2214592517;
var NNI2399141891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "done", len: 0, typ: NTI33554466, name: "done", sons: null}, 
{kind: 1, offset: "listing", len: 0, typ: NTI2214592517, name: "listing", sons: null}]};
NTI2399141891.node = NNI2399141891;
var NNI2399141907 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2399141891, name: "Field2", sons: null}]};
NTI2399141907.node = NNI2399141907;
NTI2399141904.base = NTI2399141907;
var NNI2399141901 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2399141904, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2399141901.node = NNI2399141901;
var NNI2399141893 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2399141901, name: "cachedDirectoryListings", sons: null}]};
NTI2399141893.node = NNI2399141893;
NTI2399141893.base = NTI2214592520;
var NNI2281701394 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2214592517, name: "Field2", sons: null}]};
NTI2281701394.node = NNI2281701394;
NTI2281701391.base = NTI2281701394;
var NNI2281701388 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2281701391, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2281701388.node = NNI2281701388;
var NNI2281701380 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2281701388, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2281701380.node = NNI2281701380;
NTI2281701380.base = NTI2214592520;
NTI2969568628.base = NTI2969568631;
var NNI2969568625 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568628, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2969568625.node = NNI2969568625;
NTI2969568633.base = NTI2969568636;
NTI2969568634.base = NTI2969568482;
NTI2969568635.base = NTI2969568482;
var NNI2969568612 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008713, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI3003121668, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2969568625, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2969568633, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2969568634, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2969568635, name: "redoOps", sons: null}]};
NTI2969568612.node = NNI2969568612;
NTI2969568612.base = NTI2197815300;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2113929938 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2113929938.node = NNI2113929938;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848506.node = NNI1291848506;
NTI1291848506.base = NTI3187671048;
var NNI1291848508 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2197815306, name: "workspaceFolder", sons: null}]};
NTI1291848508.node = NNI1291848508;
NTI1291848508.base = NTI3187671048;
NTI1291854534.base = NTI2449473539;
var NNI1291848319 = {kind: 1, offset: "val", len: 0, typ: NTI2415919107, name: "val", sons: null};
NTI1291848319.node = NNI1291848319;
NTI2969568611.base = NTI2969568612;
NTI2969568649.base = NTI3003121668;
var NNI2969568647 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2969568649, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2969568647.node = NNI2969568647;
NTI2785017869.base = NTI2785017859;
var NNI2785017868 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2785017869, name: "children", sons: null}]};
NTI2785017868.node = NNI2785017868;
NTI2785017868.base = NTI2785017866;
NTI2785017860.base = NTI2785017868;
NTI2969568656.base = NTI2969568638;
var NNI2969568658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI2969568658.node = NNI2969568658;
NTI2969568657.base = NTI2969568658;
NTI2969568662.base = NTI2969568663;
var NNI2969568664 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568664.node = NNI2969568664;
var NNI2969568665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568665.node = NNI2969568665;
var NNI2969568666 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568666.node = NNI2969568666;
var NNI2969568667 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2969568667.node = NNI2969568667;
var NNI2969568641 = {kind: 2, len: 31, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI3003121668, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2969568647, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2969568647, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI3003121783, name: "deletedNode", sons: null}, 
{kind: 1, offset: "lastRootNode", len: 0, typ: NTI3003121668, name: "lastRootNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI3003121668, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2113929228, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "textEditorWidget", len: 0, typ: NTI2785017860, name: "textEditorWidget", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2113929228, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2969568656, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2969568657, name: "lastItems", sons: null}, 
{kind: 1, offset: "completionsBaseIndex", len: 0, typ: NTI33554435, name: "completionsBaseIndex", sons: null}, 
{kind: 1, offset: "completionsScrollOffset", len: 0, typ: NTI33554445, name: "completionsScrollOffset", sons: null}, 
{kind: 1, offset: "scrollToCompletion", len: 0, typ: NTI1191183280, name: "scrollToCompletion", sons: null}, 
{kind: 1, offset: "lastCompletionsWidget", len: 0, typ: NTI2785017859, name: "lastCompletionsWidget", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2147483653, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2969568662, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2969568664, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2969568665, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2969568666, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2969568667, name: "lastCommand", sons: null}]};
NTI2969568641.node = NNI2969568641;
NTI2969568641.base = NTI2415919108;
var NNI1291855857 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855857.node = NNI1291855857;
var NNI1291855858 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291855858.node = NNI1291855858;
var NNI1291855856 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291855857, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291855858, name: "Field1", sons: null}]};
NTI1291855856.node = NNI1291855856;
NTI1291855864.base = NTI1291855856;
NTI1291855851.base = NTI2449473547;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3355443212.base = NTI2147483653;
var NNI3355443225 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3355443226, name: "Field1", sons: null}]};
NTI3355443225.node = NNI3355443225;
NTI3355443224.base = NTI3355443225;
var NNI3355443218 = {kind: 1, offset: "handlers", len: 0, typ: NTI3355443224, name: "handlers", sons: null};
NTI3355443218.node = NNI3355443218;
var NNI3355443242 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3355443242.node = NNI3355443242;
var NNI3355443249 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3355443246, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3355443246, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3355443242, name: "value", sons: null}]};
NTI3355443249.node = NNI3355443249;
NTI3355443246.base = NTI3355443249;
var NNI3355443260 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3355443246, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3355443246, name: "tail", sons: null}]};
NTI3355443260.node = NNI3355443260;
NTI3355443270.base = NTI3355443249;
var NNI3355443278 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3355443270, name: "Field2", sons: null}]};
NTI3355443278.node = NNI3355443278;
NTI3355443275.base = NTI3355443278;
var NNI3355443287 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3355443275, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3355443287.node = NNI3355443287;
var NNI2818584226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2818584226.node = NNI2818584226;
NTI2818584223.base = NTI2818584226;
var NNI2818584220 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818584223, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818584220.node = NNI2818584220;
var NNI3355443237 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3355443260, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3355443287, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI2818584220, name: "removedKeys", sons: null}]};
NTI3355443237.node = NNI3355443237;
NTI3355443236.base = NTI3355443237;
NTI3355443292.base = NTI3355443293;
var NNI1275068561 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1275068432, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1275068432, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1275068561.node = NNI1275068561;
NTI1275068561.base = NTI33555171;
NTI1275068448.base = NTI1275068561;
var NNI3355443211 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3355443212, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3355443218, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3355443236, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3355443292, name: "domUpdates", sons: null}, 
{kind: 1, offset: "currentEvent", len: 0, typ: NTI1275068448, name: "currentEvent", sons: null}]};
NTI3355443211.node = NNI3355443211;
NTI3355443211.base = NTI2768240644;
NTI2466250766.base = NTI2113929228;
NTI1291849420.base = NTI2415919108;
NTI1291849426.base = NTI1291849420;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850591 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850591.node = NNI1291850591;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2751463428;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2516582915.base = NTI2516582403;
var NNI2516584388 = {kind: 1, offset: "val", len: 0, typ: NTI2516582405, name: "val", sons: null};
NTI2516584388.node = NNI2516584388;
NTI2785017871.base = NTI2785017859;
var NNI2785017870 = {kind: 1, offset: "children", len: 0, typ: NTI2785017871, name: "children", sons: null};
NTI2785017870.node = NNI2785017870;
NTI2785017870.base = NTI2785017866;
NTI2785017873.base = NTI2785017859;
var NNI2785017872 = {kind: 1, offset: "children", len: 0, typ: NTI2785017873, name: "children", sons: null};
NTI2785017872.node = NNI2785017872;
NTI2785017872.base = NTI2785017866;
NTI2785017875.base = NTI2785017859;
var NNI2785017874 = {kind: 1, offset: "children", len: 0, typ: NTI2785017875, name: "children", sons: null};
NTI2785017874.node = NNI2785017874;
NTI2785017874.base = NTI2785017866;
var NNI2785017876 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2516582404, name: "style", sons: null}]};
NTI2785017876.node = NNI2785017876;
NTI2785017876.base = NTI2785017866;
var NNI2818578635 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578635.node = NNI2818578635;
NTI2969568640.base = NTI2969568641;
var NNI2969574376 = {kind: 1, offset: "val", len: 0, typ: NTI2969568640, name: "val", sons: null};
NTI2969574376.node = NNI2969574376;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2466250756 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2466250756.node = NNI2466250756;
NTI2466250756.base = NTI2415919108;
NTI2415919187.base = NTI2113929228;
var NNI2818586256 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818586256.node = NNI2818586256;
var NNI2818586210 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2449473545, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818586210.node = NNI2818586210;
NTI3204448261.base = NTI2969568638;
var NNI3204448264 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI3204448264.node = NNI3204448264;
NTI3204448263.base = NTI3204448264;
var NNI3204448260 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2969568611, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3204448261, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3204448262, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2147483653, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3204448263, name: "lastItems", sons: null}]};
NTI3204448260.node = NNI3204448260;
NTI3204448260.base = NTI2483027972;
NTI3187671275.base = NTI2113929228;
var NNI3204448400 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2969568638, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3204448400.node = NNI3204448400;
var NNI3187671186 = {kind: 1, offset: "val", len: 0, typ: NTI3187671043, name: "val", sons: null};
NTI3187671186.node = NNI3187671186;
var NNI2785018298 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2147483653, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785018298.node = NNI2785018298;
NTI1291847200.base = NTI2147483653;
var NNI2130706435 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2130706435, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2130706435, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2130706435, name: "Percent", len: 0, sons: null}}};
NTI2130706435.node = NNI2130706435;
var NNI2130706436 = {kind: 3, offset: "kind", len: 3, typ: NTI2130706435, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2130706436.node = NNI2130706436;
var NNI2130706495 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2147483653, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483653, name: "Field1", sons: null}]};
NTI2130706495.node = NNI2130706495;
NTI1291846989.base = NTI2147483653;
var NNI3087007841 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007841.node = NNI3087007841;
NTI3087007838.base = NTI3087007841;
var NNI3087007835 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007838, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007835.node = NNI3087007835;
NTI2516582848.base = NTI2516582403;
var NNI3221226150 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007774, name: "Field1", sons: null}]};
NTI3221226150.node = NNI3221226150;
NTI3305112121.base = NTI33554449;
var NNI3305112120 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI3305112121, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI33554449, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI33554449, name: "Field5", sons: null}]};
NTI3305112120.node = NNI3305112120;
var NNI3305112105 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2785017859, name: "Field1", sons: null}]};
NTI3305112105.node = NNI3305112105;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3321888772 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3321888772.node = NNI3321888772;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet59 = setConstr([65, 90], [97, 122]);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_3003123684 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet60 = setConstr([48, 57]);
var ConstSet61 = setConstr([48, 57]);
var ConstSet62 = setConstr(4);
var ConstSet63 = setConstr(4);
var ConstSet64 = setConstr(5);
var ConstSet65 = setConstr(2);
var ConstSet66 = setConstr(3);
var ConstSet67 = setConstr(5);
var ConstSet68 = setConstr(6);
var ConstSet69 = setConstr(6);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(4);
var ConstSet74 = setConstr(4);
var ConstSet75 = setConstr(5);
var ConstSet76 = setConstr(5);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(4);
var ConstSet85 = setConstr(4);
var ConstSet86 = setConstr(6);
var ConstSet87 = setConstr(6);
var ConstSet88 = setConstr(0);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(0);
var ConstSet92 = setConstr(4);
var ConstSet93 = setConstr(4);
var ConstSet94 = setConstr(5);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(3);
var ConstSet98 = setConstr(2);
var ConstSet99 = setConstr(5);
var ConstSet100 = setConstr(4);
var ConstSet101 = setConstr(4);
var ConstSet102 = setConstr(5);
var ConstSet103 = setConstr(6);
var ConstSet104 = setConstr(3);
var ConstSet105 = setConstr(3);
var ConstSet106 = setConstr(2);
var ConstSet107 = setConstr(2);
var ConstSet108 = setConstr(4);
var ConstSet109 = setConstr(4);
var ConstSet110 = setConstr(5);
var ConstSet111 = setConstr(5);
var ConstSet112 = setConstr(6);
var ConstSet113 = setConstr(6);
var ConstSet114 = setConstr(5);
var ConstSet115 = setConstr(5);
var ConstSet116 = setConstr(3);
var ConstSet117 = setConstr(2);
var ConstSet118 = setConstr(5);
var ConstSet119 = setConstr(5);
var ConstSet120 = setConstr(6);
var ConstSet121 = setConstr(0);
var ConstSet122 = setConstr(1);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(4);
var ConstSet127 = setConstr(0);
var ConstSet128 = setConstr(1);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(3);
var ConstSet132 = setConstr(3);
var ConstSet133 = setConstr(4);
var ConstSet134 = setConstr(5);
var ConstSet135 = setConstr(4);
var ConstSet136 = setConstr(10, 9, 7);
var ConstSet137 = setConstr(8);
var ConstSet138 = setConstr(1);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(0);
var ConstSet141 = setConstr(0);
var ConstSet142 = setConstr(0);
var ConstSet143 = setConstr();
var ConstSet144 = setConstr(0);
var ConstSet145 = setConstr(0);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(2);
var ConstSet148 = setConstr(1);
var ConstSet149 = setConstr();
var ConstSet150 = setConstr(1);
var ConstSet151 = setConstr(1);
var ConstSet152 = setConstr(1);
var ConstSet153 = setConstr(3);
var ConstSet154 = setConstr(3);
var ConstSet155 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet156 = setConstr(2);
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(0);
var ConstSet161 = setConstr(0);
var ConstSet162 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet163 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet164 = setConstr([48, 57]);
var ConstSet165 = setConstr([48, 57]);
var ConstSet166 = setConstr(101, 69);
var ConstSet167 = setConstr([48, 57]);
var ConstSet168 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet162[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet163[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet164[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet165[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet166[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet167[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet168[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet169 = setConstr(0);
var ConstSet170 = setConstr(0);
var ConstSet171 = setConstr(0);
var ConstSet172 = setConstr(0);
var ConstSet173 = setConstr(1);
var ConstSet174 = setConstr(4);
var ConstSet175 = setConstr(4);
var ConstSet176 = setConstr(4);
var ConstSet177 = setConstr(4);
var ConstSet178 = setConstr(1);
var ConstSet179 = setConstr(4);
var ConstSet180 = setConstr(0);
var ConstSet181 = setConstr(13, 10);
var ConstSet182 = setConstr(0);
var ConstSet183 = setConstr(1);
var ConstSet184 = setConstr(13, 10);
var ConstSet185 = setConstr([48, 57]);
var ConstSet186 = setConstr([48, 57]);
var ConstSet187 = setConstr(69, 101);
var ConstSet188 = setConstr(43, 45);
var ConstSet189 = setConstr([48, 57]);
var ConstSet190 = setConstr(46, 101, 69);
var ConstSet191 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet192 = setConstr([97, 122], [65, 90], 95);
var ConstSet193 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet194 = setConstr(4);
var ConstSet195 = setConstr([48, 57]);
var ConstSet196 = setConstr(0, 125);
var ConstSet197 = setConstr([48, 57]);
var ConstSet198 = setConstr([65, 90]);
var ConstSet199 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet200 = setConstr(6);
var ConstSet201 = setConstr(4);
var ConstSet202 = setConstr(4);
var ConstSet203 = setConstr(2);
var ConstSet204 = setConstr(2);
var ConstSet205 = setConstr(3);
var ConstSet206 = setConstr(3);
var ConstSet207 = setConstr(1);
var ConstSet208 = setConstr(1);
var ConstSet209 = setConstr(6);
var ConstSet210 = setConstr(6);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(5);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(6);
var ConstSet217 = setConstr(5);
var ConstSet218 = setConstr(6);
var ConstSet219 = setConstr(5);
var ConstSet220 = setConstr(4);
var ConstSet221 = setConstr(4);
var ConstSet222 = setConstr(2);
var ConstSet223 = setConstr(3);
var ConstSet224 = setConstr(1);
var ConstSet225 = setConstr(2);
var ConstSet226 = setConstr(2);
var ConstSet227 = setConstr(2);
var ConstSet228 = setConstr(6);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet229 = setConstr(0);
var ConstSet230 = setConstr(0);
var ConstSet231 = setConstr(46, 44);
var ConstSet232 = setConstr([65, 90]);
var ConstSet233 = setConstr([97, 122]);
var ConstSet234 = setConstr(4);
var ConstSet235 = setConstr(13, 10);
    var names_1291854604 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet236 = setConstr(4);
var ConstSet237 = setConstr(2);
var ConstSet238 = setConstr(3);
var ConstSet239 = setConstr(1);
var ConstSet240 = setConstr(5);
var ConstSet241 = setConstr(5);
var ConstSet242 = setConstr(6);
var ConstSet243 = setConstr(6);
    var names_1291854738 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet244 = setConstr(4);
var ConstSet245 = setConstr(2);
var ConstSet246 = setConstr(3);
var ConstSet247 = setConstr(1);
var ConstSet248 = setConstr(5);
var ConstSet249 = setConstr(6);
var ConstSet250 = setConstr(5);
var ConstSet251 = setConstr(5);
var ConstSet252 = setConstr(2);
var ConstSet253 = setConstr(3);
var ConstSet254 = setConstr(1);
var ConstSet255 = setConstr(6);
var ConstSet256 = setConstr(6);
var ConstSet257 = setConstr(6);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(47, 47);
var ConstSet263 = setConstr(47, 47);
var ConstSet264 = setConstr(47, 47);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(47, 47);
var ConstSet271 = setConstr(2, 3);
var ConstSet272 = setConstr(2);
var ConstSet273 = setConstr(0);
var ConstSet274 = setConstr(1);
var ConstSet275 = setConstr(1);
var ConstSet276 = setConstr();
var ConstSet277 = setConstr();
var ConstSet278 = setConstr();
var ConstSet279 = setConstr();
var ConstSet280 = setConstr();
var ConstSet281 = setConstr(120, 88);
var ConstSet282 = setConstr(0);
    var names_1291854223 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet283 = setConstr(1);
var ConstSet284 = setConstr(1);
var ConstSet285 = setConstr(1);
var ConstSet286 = setConstr(4, 0);
var ConstSet287 = setConstr(4, 0);
var ConstSet288 = setConstr(4);
var ConstSet289 = setConstr(4);
var ConstSet290 = setConstr(4);
var ConstSet291 = setConstr(2, 3);
var ConstSet292 = setConstr(2, 3);
var ConstSet293 = setConstr(3);
var ConstSet294 = setConstr(2);
var ConstSet295 = setConstr(6);
var ConstSet296 = setConstr(4);
var ConstSet297 = setConstr(4);
var ConstSet298 = setConstr(2, 3);
var ConstSet299 = setConstr(2, 3);
var ConstSet300 = setConstr(3);
var ConstSet301 = setConstr(2);
var ConstSet302 = setConstr(2);
var ConstSet303 = setConstr(6);
var ConstSet304 = setConstr(5);
var ConstSet305 = setConstr(4);
var ConstSet306 = setConstr(6);
var ConstSet307 = setConstr(4);
var ConstSet308 = setConstr(6);
var ConstSet309 = setConstr(4);
var ConstSet310 = setConstr();
var ConstSet311 = setConstr(4);
var ConstSet312 = setConstr(6);
var ConstSet313 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet314 = setConstr([65, 90]);
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet315 = setConstr(10, 13, 32, 61);
var ConstSet316 = setConstr(10, 13, 32);
          var decodeTable_2315256293 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet317 = setConstr(6);
var ConstSet318 = setConstr(6);
var ConstSet319 = setConstr(6);
var ConstSet320 = setConstr(4);
var ConstSet321 = setConstr(4);
var ConstSet322 = setConstr(6);
var ConstSet323 = setConstr(0);
var ConstSet324 = setConstr(0);
var ConstSet325 = setConstr(1);
var ConstSet326 = setConstr(2);
var ConstSet327 = setConstr(0);
var ConstSet328 = setConstr();
var ConstSet329 = setConstr(0);
var ConstSet330 = setConstr(0);
var ConstSet331 = setConstr(0);
var ConstSet332 = setConstr(0);
var ConstSet333 = setConstr(1);
var ConstSet334 = setConstr(1);
var ConstSet335 = setConstr(0);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function toCString(oid_2046820500) {
            var Temporary4;

  var result_2046820501 = null;

    Label1: {
      var i_2046820510 = 0;
      var i_2046820523 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820523 < 12)) break Label3;
            i_2046820510 = i_2046820523;
            if ((i_2046820510 < 4)) {
            Temporary4 = oid_2046820500.time;
            }
            else {
            if ((i_2046820510 < 8)) {
            Temporary4 = oid_2046820500.fuzz;
            }
            else {
            Temporary4 = oid_2046820500.count;
            }
            }
            var value_2046820511 = Temporary4;
            var byteOffset_2046820512 = modInt(i_2046820510, 4);
            var b_2046820517 = (value_2046820511 >> mulInt(byteOffset_2046820512, 8));
            result_2046820501 += "0123456789abcdef"[((((b_2046820517 & 240) >> 4)) | 0)];;
            result_2046820501 += "0123456789abcdef"[(((b_2046820517 & 15)) | 0)];;
            i_2046820523 = addInt(i_2046820523, 1);
          }
      };
    };

  return result_2046820501;

}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820547 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820547 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820547;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820547 = addInt(i_2046820547, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820541 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820541 <= 1)) break Label3;
            i_2063597633 = res_2046820541;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820539 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820539 < 64)) break Label6;
                    b_2063597638 = i_2046820539;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820539 = addInt(i_2046820539, 1);
                  }
              };
            };
            res_2046820541 = addInt(res_2046820541, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820525 = Date.now();
var seed_2046820526 = [initRand_2063597797(t_2046820525)];
var incr_2046820531 = [rand_2063597668(seed_2046820526[0], 2147483647)];
var fuzz_2046820536 = rand_2063597668(seed_2046820526[0], 2147483647);

function HEX24_2046820478(oid_2046820479) {
            var Temporary4;

  var result_2046820480 = [];

    if (result_2046820480.length < 24) { for (var i = result_2046820480.length; i < 24; ++i) result_2046820480.push(0); }
         else {result_2046820480.length = 24; };
    Label1: {
      var i_2046820486 = 0;
      var i_2046820624 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2046820624 < 12)) break Label3;
            i_2046820486 = i_2046820624;
            if ((i_2046820486 < 4)) {
            Temporary4 = oid_2046820479.time;
            }
            else {
            if ((i_2046820486 < 8)) {
            Temporary4 = oid_2046820479.fuzz;
            }
            else {
            Temporary4 = oid_2046820479.count;
            }
            }
            var value_2046820487 = Temporary4;
            var byteOffset_2046820488 = modInt(i_2046820486, 4);
            var b_2046820493 = (value_2046820487 >> mulInt(byteOffset_2046820488, 8));
            result_2046820480[chckIndx(mulInt(2, i_2046820486), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820493 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820480[chckIndx(addInt(mulInt(2, i_2046820486), 1), 0, (result_2046820480).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820493 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2046820624 = addInt(i_2046820624, 1);
          }
      };
    };

  return result_2046820480;

}

function idToString(id_2046820621) {
  var result_2046820622 = null;

  BeforeRet: {
    result_2046820622 = toJSStr(HEX24_2046820478(id_2046820621));
    break BeforeRet;
  };

  return result_2046820622;

}

function idNone_2046820633() {
  var result_2046820634 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820634 = nimCopy(result_2046820634, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820634;

}
var null_2046820646 = idNone_2046820633();
var cb64_2315255812 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2315255813 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2382364694 = [initTable_1795162117(32)];

function new_2365587482() {
  var result_2365587485 = null;

  BeforeRet: {
    var r_2365587487 = null;
    r_2365587487 = ({m_type: NTI2382364676});
    result_2365587485 = r_2365587487;
    break BeforeRet;
  };

  return result_2365587485;

}
var fs_2365587509 = new_2365587482();
var nextEditorId_2449473850 = [0];
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2684355216 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2684355216 < L_855639328)) break Label3;
            i_855639333 = i_2684355216;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2684355216 = addInt(i_2684355216, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818584402 = 0;
      colontmp__2818584402 = subInt(count_855639134, 1);
      var res_2818584403 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584403 <= colontmp__2818584402)) break Label3;
            i_855639140 = res_2818584403;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818584403 = addInt(res_2818584403, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849221(t_1291849224, key_1291849225, hc_1291849226, hc_1291849226_Idx) {
  var result_1291849227 = 0;

  BeforeRet: {
    hc_1291849226[hc_1291849226_Idx] = hash_1325400491(key_1291849225);
    if ((hc_1291849226[hc_1291849226_Idx] == 0)) {
    hc_1291849226[hc_1291849226_Idx] = 314159265;
    }
    
    if (((t_1291849224.data).length == 0)) {
    result_1291849227 = -1;
    break BeforeRet;
    }
    
    var h_1291849279 = (hc_1291849226[hc_1291849226_Idx] & (t_1291849224.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0)) break Label2;
          if (((t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field0 == hc_1291849226[hc_1291849226_Idx]) && eqStrings(t_1291849224.data[chckIndx(h_1291849279, 0, (t_1291849224.data).length - 1)].Field1, key_1291849225))) {
          result_1291849227 = h_1291849279;
          break BeforeRet;
          }
          
          h_1291849279 = nextTry_1308622883(h_1291849279, (t_1291849224.data).length - 1);
        }
    };
    result_1291849227 = subInt(-1, h_1291849279);
  };

  return result_1291849227;

}

function hasKey_1291849214(t_1291849217, key_1291849218) {
  var result_1291849219 = false;

    var hc_1291849220 = [0];
    result_1291849219 = (0 <= rawGet_1291849221(t_1291849217, key_1291849218, hc_1291849220, 0));

  return result_1291849219;

}

function contains_1291849208(t_1291849211, key_1291849212) {
  var result_1291849213 = false;

  BeforeRet: {
    result_1291849213 = hasKey_1291849214(t_1291849211, key_1291849212);
    break BeforeRet;
  };

  return result_1291849213;

}

function mustRehash_1291849673(t_1291849675) {
  var result_1291849676 = false;

    if (!((t_1291849675.counter < (t_1291849675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849676 = ((mulInt((t_1291849675.data).length, 2) < mulInt(t_1291849675.counter, 3)) || (subInt((t_1291849675.data).length, t_1291849675.counter) < 4));

  return result_1291849676;

}

function rawInsert_1291850122(t_1291850126, data_1291850127, data_1291850127_Idx, key_1291850128, val_1291850129, hc_1291850130, h_1291850131) {
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850128, NTI33554449);
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field2 = val_1291850129;
    data_1291850127[data_1291850127_Idx][chckIndx(h_1291850131, 0, (data_1291850127[data_1291850127_Idx]).length - 1)].Field0 = hc_1291850130;

  
}

function enlarge_1291849828(t_1291849831) {
    var n_1291849834 = [];
    n_1291849834 = new Array(chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849831.data).length, 2), 0, 2147483647) ; ++i) { n_1291849834[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849831.data; t_1291849831.data = n_1291849834; n_1291849834 = Temporary1;    Label2: {
      var i_1291849898 = 0;
      var colontmp__2818584411 = 0;
      colontmp__2818584411 = (n_1291849834).length - 1;
      var res_2818584413 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584413 <= colontmp__2818584411)) break Label4;
            i_1291849898 = res_2818584413;
            var eh_1291849952 = n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849952)) {
            var j_1291849956 = (eh_1291849952 & (t_1291849831.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849831.data[chckIndx(j_1291849956, 0, (t_1291849831.data).length - 1)].Field0)) break Label6;
                  j_1291849956 = nextTry_1308622883(j_1291849956, (t_1291849831.data).length - 1);
                }
            };
            rawInsert_1291850122(t_1291849831, t_1291849831, "data", n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field1, n_1291849834[chckIndx(i_1291849898, 0, (n_1291849834).length - 1)].Field2, eh_1291849952, j_1291849956);
            }
            
            res_2818584413 = addInt(res_2818584413, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850291(t_1291850294, key_1291850295, hc_1291850296) {
  var result_1291850297 = 0;

  BeforeRet: {
    if (((t_1291850294.data).length == 0)) {
    result_1291850297 = -1;
    break BeforeRet;
    }
    
    var h_1291850348 = (hc_1291850296 & (t_1291850294.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0)) break Label2;
          if (((t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field0 == hc_1291850296) && eqStrings(t_1291850294.data[chckIndx(h_1291850348, 0, (t_1291850294.data).length - 1)].Field1, key_1291850295))) {
          result_1291850297 = h_1291850348;
          break BeforeRet;
          }
          
          h_1291850348 = nextTry_1308622883(h_1291850348, (t_1291850294.data).length - 1);
        }
    };
    result_1291850297 = subInt(-1, h_1291850348);
  };

  return result_1291850297;

}

function HEX5BHEX5DHEX3D_1291849500(t_1291849503, key_1291849504, val_1291849505) {
    if (((t_1291849503.data).length == 0)) {
    var correctSizeHEX60gensym36_1291849554 = slotsNeeded_1308622891(32);
    t_1291849503.counter = 0;
    t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1291849554, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849559 = [0];
    var index_1291849566 = rawGet_1291849221(t_1291849503, key_1291849504, hc_1291849559, 0);
    if ((0 <= index_1291849566)) {
    t_1291849503.data[chckIndx(index_1291849566, 0, (t_1291849503.data).length - 1)].Field2 = val_1291849505;
    }
    else {
      if (((t_1291849503.data).length == 0)) {
      var correctSizeHEX60gensym39_1291849668 = slotsNeeded_1308622891(32);
      t_1291849503.counter = 0;
      t_1291849503.data = new Array(chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1291849668, 0, 2147483647) ; ++i) { t_1291849503.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849673(t_1291849503)) {
      enlarge_1291849828(t_1291849503);
      index_1291849566 = rawGetKnownHC_1291850291(t_1291849503, key_1291849504, hc_1291849559[0]);
      }
      
      index_1291849566 = subInt(-1, index_1291849566);
      rawInsert_1291850122(t_1291849503, t_1291849503, "data", key_1291849504, val_1291849505, hc_1291849559[0], index_1291849566);
      t_1291849503.counter = addInt(t_1291849503.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2113929255(context_2113929256) {
  var result_2113929257 = null;

    result_2113929257 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2113929257.handleActions = true;
    result_2113929257.handleInputs = false;
    result_2113929257.context = nimCopy(null, context_2113929256, NTI33554449);

  return result_2113929257;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850582(t_1291850585, key_1291850586) {
  var result_1291850587 = null;
  var result_1291850587_Idx = 0;

    var hcHEX60gensym22_1291850588 = [0];
    var indexHEX60gensym22_1291850595 = rawGet_1291849221(t_1291850585, key_1291850586, hcHEX60gensym22_1291850588, 0);
    if ((0 <= indexHEX60gensym22_1291850595)) {
    result_1291850587 = t_1291850585.data[chckIndx(indexHEX60gensym22_1291850595, 0, (t_1291850585.data).length - 1)]; result_1291850587_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850586);
    }
    

  return [result_1291850587, result_1291850587_Idx];

}

function getEventHandlerConfig_1291849162(self_1291849163, context_1291849164) {
    var Temporary1;

  var result_1291849165 = null;

  BeforeRet: {
    if (!(contains_1291849208(self_1291849163.eventHandlerConfigs, context_1291849164))) {
    HEX5BHEX5DHEX3D_1291849500(self_1291849163.eventHandlerConfigs, context_1291849164, newEventHandlerConfig_2113929255(context_1291849164));
    }
    
    result_1291849165 = (Temporary1 = HEX5BHEX5D_1291850582(self_1291849163.eventHandlerConfigs, context_1291849164), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849165;

}

function getModeConfig_2818584034(self_2818584035, mode_2818584036) {
  var result_2818584037 = null;

  BeforeRet: {
    result_2818584037 = getEventHandlerConfig_1291849162(self_2818584035.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818584036 || []));
    break BeforeRet;
  };

  return result_2818584037;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818584443 = 0;
      var result_2818584444 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584443 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818584444 = chckRange(s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 2))) {
            result_2818584444 = chckRange((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 2);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 3))) {
            result_2818584444 = chckRange(((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 3);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 4))) {
            result_2818584444 = chckRange((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 4);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 5))) {
            result_2818584444 = chckRange(((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 5);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818584443 <= subInt((s_788533333).length, 6))) {
            result_2818584444 = chckRange((((((((s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818584443, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818584443, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818584443, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818584443, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818584443, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818584443 = addInt(i_2818584443, 6);
            }
            else {
              result_2818584444 = 65533;
              i_2818584443 = addInt(i_2818584443, 1);
            }
            
            }
            else {
              result_2818584444 = chckRange(s_788533333[chckIndx(i_2818584443, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818584443 = addInt(i_2818584443, 1);
            }
            }}}}}
            r_788533347 = result_2818584444;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818584450 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584450 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818584450, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818584450, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818584450 = addInt(i_2818584450, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818584453 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584453 <= 3)) break Label3;
            if ((x_2013267026[i_2818584453] != undefined)) {
            value_2013267035 = i_2818584453;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818584453 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818584457 = 0;
      colontmp__2818584457 = (n_2013268694).length - 1;
      var res_2818584458 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584458 <= colontmp__2818584457)) break Label4;
            i_2013268758 = res_2818584458;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818584458 = addInt(res_2818584458, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818584463 = 0;
      colontmp__2818584463 = (n_2013267558).length - 1;
      var res_2818584464 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584464 <= colontmp__2818584463)) break Label4;
            i_2013267622 = res_2818584464;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818584464 = addInt(res_2818584464, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818584438 = 0;
      colontmp__2818584438 = (input_2013269802).length;
      var i_2818584439 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584439 < colontmp__2818584438)) break Label3;
            i_2013269829 = i_2818584439;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818584435 = 0;
                  var L_2818584436 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818584435 < L_2818584436)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818584435, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818584435 = addInt(i_2818584435, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818584436))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818584439 = addInt(i_2818584439, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818584429 = 0;
      var L_2818584430 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584429 < L_2818584430)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818584429, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818584429 = addInt(i_2818584429, 1);
            if (!(((commands_2013269906).length == L_2818584430))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2113929330(t_2113929333) {
  var result_2113929334 = 0;

    result_2113929334 = t_2113929333.counter;

  return result_2113929334;

}

function buildDFA_2113929279(config_2113929280) {
  var result_2113929281 = null;

  BeforeRet: {
    var resultHEX60gensym2_2113929561 = [];
    Label1: {
      var xHEX60gensym2_2113929562 = {Field0: [], Field1: []};
      var L_2818584421 = len_2113929330(config_2113929280.commands);
      Label2: {
        var h_2818584423 = 0;
        var colontmp__2818584424 = 0;
        colontmp__2818584424 = (config_2113929280.commands.data).length - 1;
        var res_2818584425 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818584425 <= colontmp__2818584424)) break Label4;
              h_2818584423 = res_2818584425;
              if (isFilled_1308622880(config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2113929562 = nimCopy(xHEX60gensym2_2113929562, {Field0: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2113929280.commands.data[chckIndx(h_2818584423, 0, (config_2113929280.commands.data).length - 1)].Field2, NTI33554449)}, NTI2113929251);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2113929562, NTI2113929251);
              resultHEX60gensym2_2113929561.push(Temporary5);;
              if (!((len_2113929330(config_2113929280.commands) == L_2818584421))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818584425 = addInt(res_2818584425, 1);
            }
        };
      };
    };
    result_2113929281 = buildDFA_2013269905(resultHEX60gensym2_2113929561);
    break BeforeRet;
  };

  return result_2113929281;

}

function invoke_2415919167(event_2415919169) {
    Label1: {
      var h_2415919192 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584470 = 0;
      var L_2818584471 = (event_2415919169.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584470 < L_2818584471)) break Label3;
            h_2415919192 = event_2415919169.handlers[chckIndx(i_2818584470, 0, (event_2415919169.handlers).length - 1)];
            h_2415919192.Field1();
            i_2818584470 = addInt(i_2818584470, 1);
            if (!(((event_2415919169.handlers).length == L_2818584471))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2415919143(self_2415919144) {
    if (!(self_2415919144.mDirty)) {
    invoke_2415919167(self_2415919144.onMarkedDirty);
    }
    
    self_2415919144.mDirty = true;

  
}

function setMode_2818584223(self_2818584224, mode_2818584225) {
        
function HEX3Aanonymous_2818584251(actionHEX60gensym189HEX60gensym190_2818584252, argHEX60gensym189HEX60gensym190_2818584253) {
          var result_2818584254 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584239.config.handleActions) {
            var action_2818584255 = nimCopy(null, actionHEX60gensym189HEX60gensym190_2818584252, NTI33554449);
            var arg_2818584256 = nimCopy(null, argHEX60gensym189HEX60gensym190_2818584253, NTI33554449);
            var responseHEX60gensym189HEX60gensym190_2818584257 = handleAction_2818572655(self_2818584224, action_2818584255, arg_2818584256);
            if (handlerHEX60gensym189_2818584239.config.consumeAllActions) {
            result_2818584254 = 3;
            break BeforeRet;
            }
            
            result_2818584254 = responseHEX60gensym189HEX60gensym190_2818584257;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym189_2818584239.config.consumeAllActions) {
            result_2818584254 = 3;
            break BeforeRet;
            }
            else {
              result_2818584254 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818584254;

        }
        
function HEX3Aanonymous_2818584259(inputHEX60gensym189HEX60gensym191_2818584260) {
          var result_2818584261 = 0;

          BeforeRet: {
            if (handlerHEX60gensym189_2818584239.config.handleInputs) {
            var input_2818584262 = nimCopy(null, inputHEX60gensym189HEX60gensym191_2818584260, NTI33554449);
            result_2818584261 = handleInput_2818572663(self_2818584224, input_2818584262);
            break BeforeRet;
            }
            else {
              result_2818584261 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818584261;

        }

  BeforeRet: {
    if (eqStrings(mode_2818584225, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818584230 = [mnewString(0)];
    fmtRes_2818584230[0].push.apply(fmtRes_2818584230[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818584230, 0, mode_2818584225, []);
    fmtRes_2818584230[0].push.apply(fmtRes_2818584230[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818584230[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818584225).length == 0)) {
    self_2818584224.modeEventHandler = null;
    }
    else {
      var config_2818584231 = getModeConfig_2818584034(self_2818584224, mode_2818584225);
      Label1: {
        var handlerHEX60gensym189_2818584239 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym189_2818584239.config = config_2818584231;
        handlerHEX60gensym189_2818584239.dfaInternal = buildDFA_2113929279(config_2818584231);
        handlerHEX60gensym189_2818584239.handleAction = HEX3Aanonymous_2818584251;
        handlerHEX60gensym189_2818584239.handleInput = HEX3Aanonymous_2818584259;
      };
      self_2818584224.modeEventHandler = handlerHEX60gensym189_2818584239;
    }
    
    self_2818584224.currentMode = nimCopy(null, mode_2818584225, NTI33554449);
    markDirty_2415919143(self_2818584224);
  };

  
}

function setModeJsWrapper_2818584184(self_2818584348, mode_2818584349) {
    setMode_2818584223(self_2818584348, mode_2818584349);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818584184(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818584479(self_2818584480) {
  var result_2818584481 = [];

  BeforeRet: {
    result_2818584481 = nimCopy(null, self_2818584480.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818584481;

}

function modeJsWrapper_2818584475(self_2818584510) {
  var result_2818584511 = [];

    result_2818584511 = nimCopy(null, mode_2818584479(self_2818584510), NTI33554449);

  return result_2818584511;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818584475(this));};

function getContextWithMode_2818583609(self_2818583610, context_2818583611) {
  var result_2818584539 = [];

  BeforeRet: {
    result_2818584539 = nimCopy(null, (context_2818583611 || []).concat([46] || [],self_2818583610.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818584539;

}

function getContextWithModeJsWrapper_2818584532(self_2818584569, context_2818584570) {
  var result_2818584571 = [];

    result_2818584571 = nimCopy(null, getContextWithMode_2818583609(self_2818584569, context_2818584570), NTI33554449);

  return result_2818584571;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818584532(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818583669(s_2818583671, default_2818583672) {
    var Temporary1;

  var result_2818583673 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583671))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818583672;
      break;
    }
    result_2818583673 = Temporary1;

  return result_2818583673;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818584700 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584700 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818584700, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818584700 = addInt(i_2818584700, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2684355097 = 0;
      colontmp__2684355097 = subInt(L_33557827, 1);
      var res_2684355098 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355098 <= colontmp__2684355097)) break Label3;
            i_33557832 = res_2684355098;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2684355098 = addInt(res_2684355098, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818584706 = 0;
      var splitsHEX60gensym40_2818584707 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818584706 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818584709 = lastHEX60gensym40_2818584706;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818584706 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818584706, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818584706 = addInt(lastHEX60gensym40_2818584706, 1);
                }
            };
            if ((splitsHEX60gensym40_2818584707 == 0)) {
            lastHEX60gensym40_2818584706 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818584709, subInt(lastHEX60gensym40_2818584706, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818584707 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818584707 = subInt(splitsHEX60gensym40_2818584707, 1);
            lastHEX60gensym40_2818584706 = addInt(lastHEX60gensym40_2818584706, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818583643(editor_2818583645, path_2818583646, default_2818583647) {
  var result_2818583653 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583645 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2818583665 = HEX7BHEX7D_1627393316(editor_2818583645.options, nsuSplitString(path_2818583646, [46], -1));
      if ((nodeHEX60gensym166_2818583665 == null)) {
      result_2818583653 = default_2818583647;
      break BeforeRet;
      }
      
    };
    result_2818583653 = parseEnum_2818583669(getStr_1627390106(nodeHEX60gensym166_2818583665, []), default_2818583647);
    break BeforeRet;
  };

  return result_2818583653;

}

function selection_2818572805(self_2818572806) {
  var result_2818572807 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572807 = nimCopy(result_2818572807, self_2818572806.selectionsInternal[chckIndx((self_2818572806.selectionsInternal).length - 1, 0, (self_2818572806.selectionsInternal).length - 1)], NTI2449473547);

  return result_2818572807;

}

function getCursor_2818583639(self_2818583640, cursor_2818583641) {
  var result_2818583642 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818583641) {
    case 0:
      var configCursor_2818583703 = getOption_2818583643(self_2818583640.editor, getContextWithMode_2818583609(self_2818583640, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818583642 = nimCopy(result_2818583642, getCursor_2818583639(self_2818583640, configCursor_2818583703), NTI2449473545);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field1, NTI2449473545);
      break BeforeRet;
      break;
    case 2:
      result_2818583642 = nimCopy(result_2818583642, selection_2818572805(self_2818583640).Field0, NTI2449473545);
      break BeforeRet;
      break;
    }
  };

  return result_2818583642;

}

function updateTargetColumn_2818584601(self_2818584602, cursor_2818584603) {
    self_2818584602.targetColumn = getCursor_2818583639(self_2818584602, cursor_2818584603).Field1;

  
}

function updateTargetColumnJsWrapper_2818584597(self_2818584632, cursor_2818584633) {
    updateTargetColumn_2818584601(self_2818584632, cursor_2818584633);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818584597(this, cursor_));};

function HEX3DHEX3D_2449473609(x_2449473611, y_2449473612) {
  var result_2449473613 = false;

  BeforeRet: {
    if (!((x_2449473611["Field0"] == y_2449473612["Field0"]))) {
    result_2449473613 = false;
    break BeforeRet;
    }
    
    if (!((x_2449473611["Field1"] == y_2449473612["Field1"]))) {
    result_2449473613 = false;
    break BeforeRet;
    }
    
    result_2449473613 = true;
    break BeforeRet;
  };

  return result_2449473613;

}

function HEX3DHEX3D_2449473599(x_2449473601, y_2449473602) {
  var result_2449473603 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2449473609(x_2449473601["Field0"], y_2449473602["Field0"]))) {
    result_2449473603 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2449473609(x_2449473601["Field1"], y_2449473602["Field1"]))) {
    result_2449473603 = false;
    break BeforeRet;
    }
    
    result_2449473603 = true;
    break BeforeRet;
  };

  return result_2449473603;

}

function newSeq_2818572845(len_2818572847) {
  var result_2818572848 = [];

    result_2818572848 = new Array(len_2818572847); for (var i = 0 ; i < len_2818572847 ; ++i) { result_2818572848[i] = []; }
  return result_2818572848;

}

function expandIfNeeded_2818572835(deq_2818572837) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572837.mask == 0)) {
    var correctSizeHEX60gensym9_2818572839 = nextPowerOfTwo_872415437(4);
    deq_2818572837.mask = subInt(correctSizeHEX60gensym9_2818572839, 1);
    deq_2818572837.data = new Array(chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572839, 0, 2147483647) ; ++i) { deq_2818572837.data[i] = []; }    }
    
    var cap_2818572844 = addInt(deq_2818572837.mask, 1);
    if ((cap_2818572844 <= deq_2818572837.count)) {
    var n_2818572862 = newSeq_2818572845(chckRange(mulInt(cap_2818572844, 2), 0, 2147483647));
    var i_2818572863 = 0;
    Label1: {
      var x_2818572873 = null;
      var x_2818572873_Idx = 0;
      var i_2818584766 = deq_2818572837.head;
      Label2: {
        var c_2818584768 = 0;
        var i_2818584769 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818584769 < deq_2818572837.count)) break Label4;
              c_2818584768 = i_2818584769;
              x_2818572873 = deq_2818572837.data; x_2818572873_Idx = chckIndx(i_2818584766, 0, (deq_2818572837.data).length - 1);
              Temporary5 = x_2818572873[x_2818572873_Idx];
              x_2818572873[x_2818572873_Idx] = genericReset(x_2818572873[x_2818572873_Idx], NTI2449473555);
              n_2818572862[chckIndx(i_2818572863, 0, (n_2818572862).length - 1)] = nimCopy(null, Temporary5, NTI2449473555);
              i_2818572863 = addInt(i_2818572863, 1);
              i_2818584766 = (addInt(i_2818584766, 1) & deq_2818572837.mask);
              i_2818584769 = addInt(i_2818584769, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572862;
    n_2818572862 = genericReset(n_2818572862, NTI2818572694);
    deq_2818572837.data = nimCopy(null, Temporary6, NTI2818572694);
    deq_2818572837.mask = subInt(mulInt(cap_2818572844, 2), 1);
    deq_2818572837.tail = deq_2818572837.count;
    deq_2818572837.head = 0;
    }
    

  
}

function addLast_2818572826(deq_2818572828, item_2818572829) {
    expandIfNeeded_2818572835(deq_2818572828);
    deq_2818572828.count = addInt(deq_2818572828.count, 1);
    deq_2818572828.data[chckIndx(deq_2818572828.tail, 0, (deq_2818572828.data).length - 1)] = nimCopy(null, item_2818572829, NTI2449473555);
    deq_2818572828.tail = (addInt(deq_2818572828.tail, 1) & deq_2818572828.mask);

  
}

function len_2818572976(deq_2818572978) {
  var result_2818572979 = 0;

    result_2818572979 = deq_2818572978.count;

  return result_2818572979;

}

function popFirst_2818573048(deq_2818573050) {
    var Temporary1;

  var result_2818573051 = [];

    if ((deq_2818573050.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573050.count = subInt(deq_2818573050.count, 1);
    Temporary1 = deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)];
    deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)] = genericReset(deq_2818573050.data[chckIndx(deq_2818573050.head, 0, (deq_2818573050.data).length - 1)], NTI2449473555);
    result_2818573051 = nimCopy(null, Temporary1, NTI2449473555);
    deq_2818573050.head = (addInt(deq_2818573050.head, 1) & deq_2818573050.mask);

  return result_2818573051;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572673(self_2818572674, line_2818572675) {
  var result_2818572676 = 0;

  BeforeRet: {
    if ((line_2818572675 < (self_2818572674.lines).length)) {
    result_2818572676 = (self_2818572674.lines[chckIndx(line_2818572675, 0, (self_2818572674.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572676 = 0;
    break BeforeRet;
  };

  return result_2818572676;

}

function clampCursor_2818572687(self_2818572688, cursor_2818572689) {
  var result_2818572690 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572691 = nimCopy(null, cursor_2818572689, NTI2449473545);
    if (((self_2818572688.lines).length == 0)) {
    var colontmp__2818584773 = 0;
    var colontmp__2818584774 = 0;
    result_2818572690 = nimCopy(result_2818572690, {Field0: colontmp__2818584773, Field1: colontmp__2818584774}, NTI2449473545);
    break BeforeRet;
    }
    
    cursor_2818572691.Field0 = clamp_1660945119(cursor_2818572691.Field0, 0, subInt((self_2818572688.lines).length, 1));
    cursor_2818572691.Field1 = clamp_1660945119(cursor_2818572691.Field1, 0, lineLength_2818572673(self_2818572688, cursor_2818572691.Field0));
    result_2818572690 = nimCopy(result_2818572690, cursor_2818572691, NTI2449473545);
    break BeforeRet;
  };

  return result_2818572690;

}

function clampSelection_2818572712(self_2818572713, selection_2818572714) {
  var result_2818572715 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584771 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field0);
    var colontmp__2818584772 = clampCursor_2818572687(self_2818572713, selection_2818572714.Field1);
    result_2818572715 = nimCopy(result_2818572715, {Field0: nimCopy(null, colontmp__2818584771, NTI2449473545), Field1: nimCopy(null, colontmp__2818584772, NTI2449473545)}, NTI2449473547);

  return result_2818572715;

}

function clampSelection_2818572716(self_2818572717, selection_2818572718) {
  var result_2818572719 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572719 = nimCopy(result_2818572719, clampSelection_2818572712(self_2818572717.document, selection_2818572718), NTI2449473547);

  return result_2818572719;

}

function selectionHEX3D_2818572811(self_2818572812, selection_2818572813) {
  BeforeRet: {
    if ((((self_2818572812.selectionsInternal).length == 1) && HEX3DHEX3D_2449473599(self_2818572812.selectionsInternal[chckIndx(0, 0, (self_2818572812.selectionsInternal).length - 1)], selection_2818572813))) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818572812.selectionHistory, self_2818572812.selectionsInternal);
    if ((100 < len_2818572976(self_2818572812.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818572812.selectionHistory);
    }
    
    self_2818572812.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572716(self_2818572812, selection_2818572813), NTI2449473547)], NTI2818572821);
    markDirty_2415919143(self_2818572812);
  };

  
}

function invertSelection_2818584718(self_2818584719) {
    selectionHEX3D_2818572811(self_2818584719, {Field0: nimCopy(null, selection_2818572805(self_2818584719).Field1, NTI2449473545), Field1: nimCopy(null, selection_2818572805(self_2818584719).Field0, NTI2449473545)});

  
}

function invertSelectionJsWrapper_2818584714(self_2818584747) {
    invertSelection_2818584718(self_2818584747);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818584714(this));};

function any_2449473969(s_2449473971, pred_2449473973) {
  var result_2449473974 = false;

  BeforeRet: {
    Label1: {
      var i_2449473987 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585220 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585220 < (s_2449473971).length)) break Label3;
            i_2449473987 = s_2449473971[chckIndx(i_2818585220, 0, (s_2449473971).length - 1)];
            if (pred_2449473973(i_2449473987)) {
            result_2449473974 = true;
            break BeforeRet;
            }
            
            i_2818585220 = addInt(i_2818585220, 1);
          }
      };
    };
    result_2449473974 = false;
  };

  return result_2449473974;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2449473879(x_2449473881, y_2449473882) {
  var result_2449473883 = false;

  BeforeRet: {
    var c_2449473893 = cmp_33557727(x_2449473881["Field0"], y_2449473882["Field0"]);
    if ((c_2449473893 < 0)) {
    result_2449473883 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473893)) {
    result_2449473883 = false;
    break BeforeRet;
    }
    
    var c_2449473898 = cmp_33557727(x_2449473881["Field1"], y_2449473882["Field1"]);
    if ((c_2449473898 < 0)) {
    result_2449473883 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473898)) {
    result_2449473883 = false;
    break BeforeRet;
    }
    
    result_2449473883 = true;
    break BeforeRet;
  };

  return result_2449473883;

}

function contains_2449473927(selection_2449473928, other_2449473929) {
  var result_2449473930 = false;

    result_2449473930 = (HEX3CHEX3D_2449473879(selection_2449473928.Field0, other_2449473929.Field0) && HEX3CHEX3D_2449473879(other_2449473929.Field1, selection_2449473928.Field1));

  return result_2449473930;

}

function contains_2449474006(self_2449474007, other_2449474008) {
    other_2449474008 = nimCopy(null, other_2449474008, NTI2449473547);
    
function HEX3Aanonymous_2449474010(s_2449474013) {
      var result_2449474016 = false;

        result_2449474016 = contains_2449473927(s_2449474013, other_2449474008);

      return result_2449474016;

    }

  var result_2449474009 = false;

    result_2449474009 = any_2449473969(self_2449474007, HEX3Aanonymous_2449474010);

  return result_2449474009;

}

function deduplicate_2818572757(s_2818572759, isSorted_2818572760) {
  var result_2818572761 = [];

    result_2818572761 = nimCopy(null, [], NTI2818572640);
    if ((0 < (s_2818572759).length)) {
    if (isSorted_2818572760) {
    var prev_2818572769 = nimCopy(null, s_2818572759[chckIndx(0, 0, (s_2818572759).length - 1)], NTI2449473547);
    var Temporary1 = nimCopy(null, prev_2818572769, NTI2449473547);
    result_2818572761.push(Temporary1);;
    Label2: {
      var i_2818572781 = 0;
      var colontmp__2818585212 = 0;
      colontmp__2818585212 = (s_2818572759).length - 1;
      var res_2818585213 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818585213 <= colontmp__2818585212)) break Label4;
            i_2818572781 = res_2818585213;
            if (!(HEX3DHEX3D_2449473599(s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], prev_2818572769))) {
            prev_2818572769 = nimCopy(prev_2818572769, s_2818572759[chckIndx(i_2818572781, 0, (s_2818572759).length - 1)], NTI2449473547);
            var Temporary5 = nimCopy(null, prev_2818572769, NTI2449473547);
            result_2818572761.push(Temporary5);;
            }
            
            res_2818585213 = addInt(res_2818585213, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572793 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818585217 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818585217 < (s_2818572759).length)) break Label8;
              itm_2818572793 = s_2818572759[chckIndx(i_2818585217, 0, (s_2818572759).length - 1)];
              if (!(contains_2449474006(result_2818572761, itm_2818572793))) {
              var Temporary9 = nimCopy(null, itm_2818572793, NTI2449473547);
              result_2818572761.push(Temporary9);;
              }
              
              i_2818585217 = addInt(i_2818585217, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572761;

}

function map_2818572735(s_2818572738, op_2818572740) {
  var result_2818572741 = [];

    result_2818572741 = new Array(chckRange((s_2818572738).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572738).length, 0, 2147483647) ; ++i) { result_2818572741[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572756 = 0;
      var colontmp__2818585223 = 0;
      colontmp__2818585223 = (s_2818572738).length;
      var i_2818585224 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585224 < colontmp__2818585223)) break Label3;
            i_2818572756 = i_2818585224;
            result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)] = nimCopy(result_2818572741[chckIndx(i_2818572756, 0, (result_2818572741).length - 1)], op_2818572740(s_2818572738[chckIndx(i_2818572756, 0, (s_2818572738).length - 1)]), NTI2449473547);
            i_2818585224 = addInt(i_2818585224, 1);
          }
      };
    };

  return result_2818572741;

}

function clampAndMergeSelections_2818572720(self_2818572721, selections_2818572722) {
    
function HEX3Aanonymous_2818572724(s_2818572731) {
      var result_2818572734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572734 = nimCopy(result_2818572734, clampSelection_2818572712(self_2818572721, s_2818572731), NTI2449473547);

      return result_2818572734;

    }

  var result_2818572723 = [];

    result_2818572723 = nimCopy(null, deduplicate_2818572757(map_2818572735(selections_2818572722, HEX3Aanonymous_2818572724), false), NTI2818572629);

  return result_2818572723;

}

function HEX40_2818579363(a_2818579365) {
  var result_2818579366 = [];

    result_2818579366 = new Array(chckRange((a_2818579365).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818579365).length, 0, 2147483647) ; ++i) { result_2818579366[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818579381 = 0;
      var colontmp__2818585227 = 0;
      colontmp__2818585227 = subInt((a_2818579365).length, 1);
      var res_2818585228 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585228 <= colontmp__2818585227)) break Label3;
            i_2818579381 = res_2818585228;
            result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)] = nimCopy(result_2818579366[chckIndx(i_2818579381, 0, (result_2818579366).length - 1)], a_2818579365[chckIndx(i_2818579381, 0, (a_2818579365).length - 1)], NTI2449473547);
            res_2818585228 = addInt(res_2818585228, 1);
          }
      };
    };

  return result_2818579366;

}

function byteOffset_2818579343(self_2818579344, cursor_2818579345) {
  var result_2818579346 = 0;

    result_2818579346 = cursor_2818579345.Field1;
    Label1: {
      var i_2818579351 = 0;
      var i_2818585231 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585231 < cursor_2818579345.Field0)) break Label3;
            i_2818579351 = i_2818585231;
            result_2818579346 = addInt(result_2818579346, addInt((self_2818579344.lines[chckIndx(i_2818579351, 0, (self_2818579344.lines).length - 1)]).length, 1));
            i_2818585231 = addInt(i_2818585231, 1);
          }
      };
    };

  return result_2818579346;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818584212 = 0;
      colontmp__2818584212 = start_855639700;
      var res_2818584213 = colontmp__2818584212;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584213 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818584213;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818584213 = addInt(res_2818584213, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818585234 = 0;
      colontmp__2818585234 = subInt(m_855639633, 1);
      var i_2818585235 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585235 < colontmp__2818585234)) break Label3;
            i_855639653 = i_2818585235;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818585235 = addInt(i_2818585235, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579918(x_2818579920, x_2818579920_Idx, item_2818579921, i_2818579922) {
    var it_2818579942 = [];
    x_2818579920[x_2818579920_Idx] = x_2818579920[x_2818579920_Idx] || []; x_2818579920[x_2818579920_Idx].splice(i_2818579922, 0, it_2818579942);
    x_2818579920[x_2818579920_Idx][chckIndx(i_2818579922, 0, (x_2818579920[x_2818579920_Idx]).length - 1)] = nimCopy(null, item_2818579921, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2449474029(cursor_2449474030) {
  var result_2449474031 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585244 = nimCopy(null, cursor_2449474030, NTI2449473545);
    var colontmp__2818585245 = nimCopy(null, cursor_2449474030, NTI2449473545);
    result_2449474031 = nimCopy(result_2449474031, {Field0: nimCopy(null, colontmp__2818585244, NTI2449473545), Field1: nimCopy(null, colontmp__2818585245, NTI2449473545)}, NTI2449473547);

  return result_2449474031;

}

function add_2449474053(cursor_2449474054, selection_2449474055) {
  var result_2449474056 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(cursor_2449474054, selection_2449474055.Field0)) {
    result_2449474056 = nimCopy(result_2449474056, cursor_2449474054, NTI2449473545);
    break BeforeRet;
    }
    
    if ((selection_2449474055.Field0.Field0 == selection_2449474055.Field1.Field0)) {
    if ((cursor_2449474054.Field0 == selection_2449474055.Field0.Field0)) {
    var colontmp__2818585248 = cursor_2449474054.Field0;
    var colontmp__2818585249 = addInt(cursor_2449474054.Field1, subInt(selection_2449474055.Field1.Field1, selection_2449474055.Field0.Field1));
    result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585248, Field1: colontmp__2818585249}, NTI2449473545);
    break BeforeRet;
    }
    else {
      result_2449474056 = nimCopy(result_2449474056, cursor_2449474054, NTI2449473545);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2449474054.Field0 == selection_2449474055.Field0.Field0)) {
    var colontmp__2818585250 = selection_2449474055.Field1.Field0;
    var colontmp__2818585251 = addInt(selection_2449474055.Field1.Field1, subInt(cursor_2449474054.Field1, selection_2449474055.Field0.Field1));
    result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585250, Field1: colontmp__2818585251}, NTI2449473545);
    break BeforeRet;
    }
    else {
      var colontmp__2818585252 = addInt(cursor_2449474054.Field0, subInt(selection_2449474055.Field1.Field0, selection_2449474055.Field0.Field0));
      var colontmp__2818585253 = cursor_2449474054.Field1;
      result_2449474056 = nimCopy(result_2449474056, {Field0: colontmp__2818585252, Field1: colontmp__2818585253}, NTI2449473545);
      break BeforeRet;
    }
    }
  };

  return result_2449474056;

}

function add_2449474061(self_2449474062, other_2449474063) {
  var result_2449474064 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585246 = add_2449474053(self_2449474062.Field0, other_2449474063);
    var colontmp__2818585247 = add_2449474053(self_2449474062.Field1, other_2449474063);
    result_2449474064 = nimCopy(result_2449474064, {Field0: nimCopy(null, colontmp__2818585246, NTI2449473545), Field1: nimCopy(null, colontmp__2818585247, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474064;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818585255 = 0;
      colontmp__2818585255 = (a_855639591).length - 1;
      var res_2818585256 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585256 <= colontmp__2818585255)) break Label3;
            i_855639608 = res_2818585256;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818585256 = addInt(res_2818585256, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818585259 = 0;
      colontmp__2818585259 = (a_855639591).length - 1;
      var res_2818585260 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585260 <= colontmp__2818585259)) break Label6;
            i_855639621 = res_2818585260;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818585260 = addInt(res_2818585260, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818579537(val_2818579539) {
  var result_2818579540 = ({val: null});

    if (!(!((val_2818579539 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818579540.val = val_2818579539;

  return result_2818579540;

}

function invoke_2818580009(event_2818580011, arg_2818580012) {
    Label1: {
      var h_2818580035 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585264 = 0;
      var L_2818585265 = (event_2818580011.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585264 < L_2818585265)) break Label3;
            h_2818580035 = event_2818580011.handlers[chckIndx(i_2818585264, 0, (event_2818580011.handlers).length - 1)];
            h_2818580035.Field1(arg_2818580012);
            i_2818585264 = addInt(i_2818585264, 1);
            if (!(((event_2818580011.handlers).length == L_2818585265))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573292(event_2818573294, arg_2818573295) {
    Label1: {
      var h_2818573318 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585269 = 0;
      var L_2818585270 = (event_2818573294.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585269 < L_2818585270)) break Label3;
            h_2818573318 = event_2818573294.handlers[chckIndx(i_2818585269, 0, (event_2818573294.handlers).length - 1)];
            h_2818573318.Field1(arg_2818573295);
            i_2818585269 = addInt(i_2818585269, 1);
            if (!(((event_2818573294.handlers).length == L_2818585270))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573395(t_2818573398) {
    Label1: {
      var i_2818573467 = 0;
      var colontmp__2818585273 = 0;
      colontmp__2818585273 = (t_2818573398.data).length;
      var i_2818585274 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585274 < colontmp__2818585273)) break Label3;
            i_2818573467 = i_2818585274;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field0 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field1 = 0;
            t_2818573398.data[chckIndx(i_2818573467, 0, (t_2818573398.data).length - 1)].Field2 = null;
            i_2818585274 = addInt(i_2818585274, 1);
          }
      };
    };
    t_2818573398.counter = 0;

  
}

function notifyTextChanged_2818573268(self_2818573269) {
    invoke_2818573292(self_2818573269.textChanged, self_2818573269);
    clear_2818573395(self_2818573269.styledTextCache);

  
}

function insert_2818579853(self_2818579854, selections_2818579855, oldSelection_2818579856, text_2818579857, notify_2818579858, record_2818579859, autoIndent_2818579860) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579861 = [];

    var newEmptyLines_2818579862 = [];
    result_2818579861 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579854, selections_2818579855), NTI2449473555);
    var undoOp_2818579870 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579856), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579876 = 0;
      var selection_2818579877 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585208 = 0;
      var L_2818585209 = (result_2818579861).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585208 < L_2818585209)) break Label3;
            i_2818579876 = i_2818585208;
            selection_2818579877 = nimCopy(selection_2818579877, result_2818579861[chckIndx(i_2818585208, 0, (result_2818579861).length - 1)], NTI2449473547);
            var oldCursor_2818579878 = nimCopy(null, selection_2818579877.Field1, NTI2449473545);
            var cursor_2818579879 = nimCopy(null, selection_2818579877.Field1, NTI2449473545);
            var startByte_2818579880 = byteOffset_2818579343(self_2818579854, cursor_2818579879);
            var lineCounter_2818579881 = 0;
            if (self_2818579854.singleLine) {
            var text_2818579882 = nsuReplaceStr(text_2818579857, [10], [32]);
            if (((self_2818579854.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579882, NTI33554449);
            self_2818579854.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579854.lines, chckIndx(0, 0, (self_2818579854.lines).length - 1), text_2818579882, chckRange(cursor_2818579879.Field1, 0, 2147483647));
            }
            
            cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (text_2818579882).length);
            }
            else {
              Label5: {
                var line_2818579894 = [];
                var first_2818585197 = 0;
                var last_2818585198 = 0;
                var eolpos_2818585199 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818585198 < (text_2818579857).length) && !((ConstSet23[text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)]] != undefined)))) break Label9;
                            last_2818585198 = addInt(last_2818585198, 1);
                          }
                      };
                      eolpos_2818585199 = last_2818585198;
                      if ((last_2818585198 < (text_2818579857).length)) {
                      if ((text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 10)) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      }
                      else {
                      if ((text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 13)) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      if (((last_2818585198 < (text_2818579857).length) && (text_2818579857[chckIndx(last_2818585198, 0, (text_2818579857).length - 1)] == 10))) {
                      last_2818585198 = addInt(last_2818585198, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818585198, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818585199, 1);
                      }
                      
                      line_2818579894 = substr_33557821(text_2818579857, first_2818585197, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579881)) {
                      insert_2818579918(self_2818579854, "lines", HEX5BHEX5D_855639319(self_2818579854.lines[chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579879.Field1, 1)), chckRange(addInt(cursor_2818579879.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579862.push(addInt(cursor_2818579879.Field0, 1));;
                      if ((cursor_2818579879.Field1 < lineLength_2818572673(self_2818579854, cursor_2818579879.Field0))) {
                      delete_855639365(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579879.Field1, subInt(lineLength_2818572673(self_2818579854, cursor_2818579879.Field0), 1)));
                      }
                      
                      var colontmp__2818585193 = addInt(cursor_2818579879.Field0, 1);
                      var colontmp__2818585194 = 0;
                      cursor_2818579879 = nimCopy(cursor_2818579879, {Field0: colontmp__2818585193, Field1: colontmp__2818585194}, NTI2449473545);
                      }
                      
                      if ((0 < (line_2818579894).length)) {
                      insert_33557745(self_2818579854.lines, chckIndx(cursor_2818579879.Field0, 0, (self_2818579854.lines).length - 1), line_2818579894, chckRange(cursor_2818579879.Field1, 0, 2147483647));
                      cursor_2818579879.Field1 = addInt(cursor_2818579879.Field1, (line_2818579894).length);
                      }
                      
                      if ((eolpos_2818585199 == last_2818585198)) {
                      break Label6;
                      }
                      
                      first_2818585197 = last_2818585198;
                      } finally {
                      lineCounter_2818579881 = addInt(lineCounter_2818579881, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(i_2818579876, 0, (result_2818579861).length - 1)], toSelection_2449474029(cursor_2818579879), NTI2449473547);
            Label12: {
              var k_2818579969 = 0;
              var colontmp__2818585203 = 0;
              var colontmp__2818585204 = 0;
              colontmp__2818585203 = addInt(i_2818579876, 1);
              colontmp__2818585204 = (result_2818579861).length - 1;
              var res_2818585205 = colontmp__2818585203;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818585205 <= colontmp__2818585204)) break Label14;
                    k_2818579969 = res_2818585205;
                    result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)] = nimCopy(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], add_2449474061(result_2818579861[chckIndx(k_2818579969, 0, (result_2818579861).length - 1)], {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473545), Field1: nimCopy(null, cursor_2818579879, NTI2449473545)}), NTI2449473547);
                    res_2818585205 = addInt(res_2818585205, 1);
                  }
              };
            };
            if (!((self_2818579854.tsParser == null))) {
            var edit_2818579973 = {startIndex: startByte_2818579880, oldEndIndex: startByte_2818579880, newEndIndex: addInt(startByte_2818579880, (text_2818579857).length), startPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579878.Field0, column: oldCursor_2818579878.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579879.Field0, column: cursor_2818579879.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579854.currentTree.edit(edit_2818579973);
            var strValue_2818579974 = nsuJoinSep(self_2818579854.lines, [10]);
            self_2818579854.currentTree = parseString_2885681211(self_2818579854.tsParser, strValue_2818579974, some_2818579537(self_2818579854.currentTree));
            }
            
            self_2818579854.version = addInt(self_2818579854.version, 1);
            if (record_2818579859) {
            var Temporary15 = undoOp_2818579870;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579878, NTI2449473545), Field1: nimCopy(null, cursor_2818579879, NTI2449473545)}, NTI2449473547), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579858) {
            invoke_2818580009(self_2818579854.textInserted, {Field0: self_2818579854, Field1: nimCopy(null, oldCursor_2818579878, NTI2449473545), Field2: nimCopy(null, text_2818579857, NTI33554449)});
            }
            
            i_2818585208 = addInt(i_2818585208, 1);
            if (!(((result_2818579861).length == L_2818585209))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579858) {
    notifyTextChanged_2818573268(self_2818579854);
    }
    
      if (!record_2818579859) Temporary16 = false; else {        var Temporary17 = undoOp_2818579870;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579854.undoOps.push(undoOp_2818579870);;
    self_2818579854.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579861;

}

function selections_2818572802(self_2818572803) {
  var result_2818572804 = [];

    result_2818572804 = nimCopy(null, self_2818572803.selectionsInternal, NTI2449473555);

  return result_2818572804;

}

function insert_2818584781(self_2818584782, selections_2818584783, text_2818584784, notify_2818584785, record_2818584786, autoIndent_2818584787) {
  var result_2818584788 = [];

  BeforeRet: {
    result_2818584788 = nimCopy(null, insert_2818579853(self_2818584782.document, selections_2818584783, selections_2818572802(self_2818584782), text_2818584784, notify_2818584785, record_2818584786, autoIndent_2818584787), NTI2818576430);
    break BeforeRet;
  };

  return result_2818584788;

}

function insertJsWrapper_2818584777(self_2818584822, selections_2818584823, text_2818584824, notify_2818584825, record_2818584826, autoIndent_2818584827) {
  var result_2818584828 = [];

    result_2818584828 = nimCopy(null, insert_2818584781(self_2818584822, selections_2818584823, text_2818584824, notify_2818584825, record_2818584826, autoIndent_2818584827), NTI2818579318);

  return result_2818584828;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818584777(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2449473908(selection_2449473909) {
  var result_2449473910 = false;

    result_2449473910 = HEX3DHEX3D_2449473609(selection_2449473909.Field0, selection_2449473909.Field1);

  return result_2449473910;

}

function HEX3E_2449473867(a_2449473868, b_2449473869) {
  var result_2449473870 = false;

  BeforeRet: {
    if ((b_2449473869.Field0 < a_2449473868.Field0)) {
    result_2449473870 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473868.Field0 == b_2449473869.Field0) && (b_2449473869.Field1 < a_2449473868.Field1))) {
    result_2449473870 = true;
    break BeforeRet;
    }
    else {
      result_2449473870 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473870;

}

function isBackwards_2449473899(selection_2449473900) {
  var result_2449473901 = false;

  BeforeRet: {
    result_2449473901 = HEX3E_2449473867(selection_2449473900.Field0, selection_2449473900.Field1);
    break BeforeRet;
  };

  return result_2449473901;

}

function normalized_2449473902(selection_2449473903) {
  var result_2449473904 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2449473899(selection_2449473903)) {
    var colontmp__2818585367 = nimCopy(null, selection_2449473903.Field1, NTI2449473545);
    var colontmp__2818585368 = nimCopy(null, selection_2449473903.Field0, NTI2449473545);
    result_2449473904 = nimCopy(result_2449473904, {Field0: nimCopy(null, colontmp__2818585367, NTI2449473545), Field1: nimCopy(null, colontmp__2818585368, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    }
    else {
      result_2449473904 = nimCopy(result_2449473904, selection_2449473903, NTI2449473547);
      break BeforeRet;
    }
    
  };

  return result_2449473904;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818585375 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585375 < L_855639300)) break Label3;
            i_855639305 = i_2818585375;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818585375 = addInt(i_2818585375, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818574091(self_2818574092, selection_2818574093) {
  var result_2818574094 = [];

  BeforeRet: {
    var colontmp__2818585373 = normalized_2449473902(selection_2818574093);
    var first_2818574095 = nimCopy(null, colontmp__2818585373["Field0"], NTI2449473545);
    var last_2818574096 = nimCopy(null, colontmp__2818585373["Field1"], NTI2449473545);
    if ((first_2818574095.Field0 == last_2818574096.Field0)) {
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(first_2818574095.Field1, subInt(last_2818574096.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818574094 = nimCopy(null, HEX5BHEX5D_855639319(self_2818574092.lines[chckIndx(first_2818574095.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818574095.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574143 = 0;
      var colontmp__2818585370 = 0;
      colontmp__2818585370 = addInt(first_2818574095.Field0, 1);
      var i_2818585371 = colontmp__2818585370;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585371 < last_2818574096.Field0)) break Label3;
            i_2818574143 = i_2818585371;
            result_2818574094.push.apply(result_2818574094, [10]);;
            result_2818574094.push.apply(result_2818574094, self_2818574092.lines[chckIndx(i_2818574143, 0, (self_2818574092.lines).length - 1)]);;
            i_2818585371 = addInt(i_2818585371, 1);
          }
      };
    };
    result_2818574094.push.apply(result_2818574094, [10]);;
    result_2818574094.push.apply(result_2818574094, HEX5BHEX5D_855639291(self_2818574092.lines[chckIndx(last_2818574096.Field0, 0, (self_2818574092.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818574096.Field1, 1))));;
  };

  return result_2818574094;

}

function delete_2818579472(s_2818579474, s_2818579474_Idx, slice_2818579475) {
    if (!((((slice_2818579475.a < (s_2818579474[s_2818579474_Idx]).length) && (0 <= slice_2818579475.a)) && (slice_2818579475.b < (s_2818579474[s_2818579474_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818579475, NTI805306392), Field1: (s_2818579474[s_2818579474_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818579475.a <= slice_2818579475.b)) {
    var n_2818579522 = addInt(subInt(slice_2818579475.b, slice_2818579475.a), 1);
    var first_2818579523 = slice_2818579475.a;
    s_2818579474[s_2818579474_Idx].splice(first_2818579523, n_2818579522);
    }
    

  
}

function subtract_2449474037(cursor_2449474038, selection_2449474039) {
  var result_2449474040 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(cursor_2449474038, selection_2449474039.Field0)) {
    result_2449474040 = nimCopy(result_2449474040, cursor_2449474038, NTI2449473545);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2449473879(cursor_2449474038, selection_2449474039.Field1)) {
    result_2449474040 = nimCopy(result_2449474040, selection_2449474039.Field0, NTI2449473545);
    break BeforeRet;
    }
    
    if ((cursor_2449474038.Field0 == selection_2449474039.Field1.Field0)) {
    if ((selection_2449474039.Field0.Field0 == selection_2449474039.Field1.Field0)) {
    var colontmp__2818585381 = cursor_2449474038.Field0;
    var colontmp__2818585382 = subInt(cursor_2449474038.Field1, subInt(selection_2449474039.Field1.Field1, selection_2449474039.Field0.Field1));
    result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585381, Field1: colontmp__2818585382}, NTI2449473545);
    break BeforeRet;
    }
    else {
      var colontmp__2818585383 = selection_2449474039.Field0.Field0;
      var colontmp__2818585384 = addInt(selection_2449474039.Field0.Field1, subInt(cursor_2449474038.Field1, selection_2449474039.Field1.Field1));
      result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585383, Field1: colontmp__2818585384}, NTI2449473545);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818585385 = subInt(cursor_2449474038.Field0, subInt(selection_2449474039.Field1.Field0, selection_2449474039.Field0.Field0));
    var colontmp__2818585386 = cursor_2449474038.Field1;
    result_2449474040 = nimCopy(result_2449474040, {Field0: colontmp__2818585385, Field1: colontmp__2818585386}, NTI2449473545);
    break BeforeRet;
  };

  return result_2449474040;

}

function subtract_2449474049(self_2449474050, other_2449474051) {
  var result_2449474052 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818585379 = subtract_2449474037(self_2449474050.Field0, other_2449474051);
    var colontmp__2818585380 = subtract_2449474037(self_2449474050.Field1, other_2449474051);
    result_2449474052 = nimCopy(result_2449474052, {Field0: nimCopy(null, colontmp__2818585379, NTI2449473545), Field1: nimCopy(null, colontmp__2818585380, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474052;

}

function invoke_2818579581(event_2818579583, arg_2818579584) {
    Label1: {
      var h_2818579607 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818585389 = 0;
      var L_2818585390 = (event_2818579583.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585389 < L_2818585390)) break Label3;
            h_2818579607 = event_2818579583.handlers[chckIndx(i_2818585389, 0, (event_2818579583.handlers).length - 1)];
            h_2818579607.Field1(arg_2818579584);
            i_2818585389 = addInt(i_2818585389, 1);
            if (!(((event_2818579583.handlers).length == L_2818585390))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818579356(self_2818579357, selections_2818579358, oldSelection_2818579359, notify_2818579360, record_2818579361) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818579362 = [];

    result_2818579362 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818579357, selections_2818579358), NTI2449473555);
    var undoOp_2818579386 = {kind: 2, children: [], oldSelection: HEX40_2818579363(oldSelection_2818579359), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579419 = 0;
      var selection_2818579420 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818585364 = 0;
      var L_2818585365 = (result_2818579362).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818585364 < L_2818585365)) break Label3;
            i_2818579419 = i_2818585364;
            selection_2818579420 = nimCopy(selection_2818579420, result_2818579362[chckIndx(i_2818585364, 0, (result_2818579362).length - 1)], NTI2449473547);
            Label4: {
              if (isEmpty_2449473908(selection_2818579420)) {
              break Label4;
              }
              
              var selection_2818579421 = normalized_2449473902(selection_2818579420);
              var startByte_2818579422 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field0);
              var endByte_2818579423 = byteOffset_2818579343(self_2818579357, selection_2818579421.Field1);
              var deletedText_2818579424 = contentString_2818574091(self_2818579357, selection_2818579421);
              var colontmp__2818585377 = normalized_2449473902(selection_2818579421);
              var first_2818579425 = nimCopy(null, colontmp__2818585377["Field0"], NTI2449473545);
              var last_2818579426 = nimCopy(null, colontmp__2818585377["Field1"], NTI2449473545);
              if ((first_2818579425.Field0 == last_2818579426.Field0)) {
              delete_855639365(self_2818579357.lines, chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(last_2818579426.Field1, 1)));
              }
              else {
                if ((first_2818579425.Field1 < lineLength_2818572673(self_2818579357, first_2818579425.Field0))) {
                delete_855639365(self_2818579357.lines, chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1), HEX2EHEX2E_805306418(first_2818579425.Field1, subInt(lineLength_2818572673(self_2818579357, first_2818579425.Field0), 1)));
                }
                
                self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)].push.apply(self_2818579357.lines[chckIndx(first_2818579425.Field0, 0, (self_2818579357.lines).length - 1)], HEX5BHEX5D_855639319(self_2818579357.lines[chckIndx(last_2818579426.Field0, 0, (self_2818579357.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818579426.Field1, 1)));;
                delete_2818579472(self_2818579357, "lines", HEX2EHEX2E_805306418(addInt(first_2818579425.Field0, 1), last_2818579426.Field0));
              }
              
              result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(i_2818579419, 0, (result_2818579362).length - 1)], toSelection_2449474029(selection_2818579421.Field0), NTI2449473547);
              Label5: {
                var k_2818579531 = 0;
                var colontmp__2818585360 = 0;
                var colontmp__2818585361 = 0;
                colontmp__2818585360 = addInt(i_2818579419, 1);
                colontmp__2818585361 = (result_2818579362).length - 1;
                var res_2818585362 = colontmp__2818585360;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818585362 <= colontmp__2818585361)) break Label7;
                      k_2818579531 = res_2818585362;
                      result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)] = nimCopy(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], subtract_2449474049(result_2818579362[chckIndx(k_2818579531, 0, (result_2818579362).length - 1)], selection_2818579421), NTI2449473547);
                      res_2818585362 = addInt(res_2818585362, 1);
                    }
                };
              };
              if (!((self_2818579357.tsParser == null))) {
              var edit_2818579535 = {startIndex: startByte_2818579422, oldEndIndex: endByte_2818579423, newEndIndex: startByte_2818579422, startPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818579421.Field1.Field0, column: selection_2818579421.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818579421.Field0.Field0, column: selection_2818579421.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818579357.currentTree.edit(edit_2818579535);
              var strValue_2818579536 = nsuJoinSep(self_2818579357.lines, [10]);
              self_2818579357.currentTree = parseString_2885681211(self_2818579357.tsParser, strValue_2818579536, some_2818579537(self_2818579357.currentTree));
              }
              
              self_2818579357.version = addInt(self_2818579357.version, 1);
              if (record_2818579361) {
              var Temporary8 = undoOp_2818579386;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818579421.Field0, NTI2449473545), text: nimCopy(null, deletedText_2818579424, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818579360) {
              invoke_2818579581(self_2818579357.textDeleted, {Field0: self_2818579357, Field1: nimCopy(null, selection_2818579421, NTI2449473547)});
              }
              
            };
            i_2818585364 = addInt(i_2818585364, 1);
            if (!(((result_2818579362).length == L_2818585365))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579360) {
    notifyTextChanged_2818573268(self_2818579357);
    }
    
      if (!record_2818579361) Temporary9 = false; else {        var Temporary10 = undoOp_2818579386;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818579357.undoOps.push(undoOp_2818579386);;
    self_2818579357.redoOps = nimCopy(null, [], NTI2818576104);
    }
    

  return result_2818579362;

}

function delete_2818585282(self_2818585283, selections_2818585284, notify_2818585285, record_2818585286) {
  var result_2818585287 = [];

  BeforeRet: {
    result_2818585287 = nimCopy(null, delete_2818579356(self_2818585283.document, selections_2818585284, selections_2818572802(self_2818585283), notify_2818585285, record_2818585286), NTI2818576075);
    break BeforeRet;
  };

  return result_2818585287;

}

function deleteJsWrapper_2818585278(self_2818585319, selections_2818585320, notify_2818585321, record_2818585322) {
  var result_2818585323 = [];

    result_2818585323 = nimCopy(null, delete_2818585282(self_2818585319, selections_2818585320, notify_2818585321, record_2818585322), NTI2818579834);

  return result_2818585323;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818585278(this, selections_, notify_, record_));};

function popLast_2818585531(deq_2818585533) {
    var Temporary1;

  var result_2818585534 = [];

    if ((deq_2818585533.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818585533.count = subInt(deq_2818585533.count, 1);
    deq_2818585533.tail = (subInt(deq_2818585533.tail, 1) & deq_2818585533.mask);
    Temporary1 = deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)];
    deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)] = genericReset(deq_2818585533.data[chckIndx(deq_2818585533.tail, 0, (deq_2818585533.data).length - 1)], NTI2449473555);
    result_2818585534 = nimCopy(null, Temporary1, NTI2449473555);

  return result_2818585534;

}

function addFirst_2818585550(deq_2818585552, item_2818585553) {
    expandIfNeeded_2818572835(deq_2818585552);
    deq_2818585552.count = addInt(deq_2818585552.count, 1);
    deq_2818585552.head = (subInt(deq_2818585552.head, 1) & deq_2818585552.mask);
    deq_2818585552.data[chckIndx(deq_2818585552.head, 0, (deq_2818585552.data).length - 1)] = nimCopy(null, item_2818585553, NTI2449473555);

  
}

function totalLineHeight_2768240810(self_2768240811) {
  var result_2768240812 = 0.0;

    result_2768240812 = (lineHeight_2768240794(self_2768240811) + lineDistance_2768240789(self_2768240811));

  return result_2768240812;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818583576(editor_2818583578, path_2818583579, default_2818583580) {
  var result_2818583586 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583578 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2818583599 = HEX7BHEX7D_1627393316(editor_2818583578.options, nsuSplitString(path_2818583579, [46], -1));
      if ((nodeHEX60gensym163_2818583599 == null)) {
      result_2818583586 = default_2818583580;
      break BeforeRet;
      }
      
    };
    result_2818583586 = getFloat_1627390140(nodeHEX60gensym163_2818583599, default_2818583580);
    break BeforeRet;
  };

  return result_2818583586;

}

function scrollToCursor_2818583568(self_2818583569, cursor_2818583570, keepVerticalOffset_2818583571) {
  BeforeRet: {
    if (self_2818583569.disableScrolling) {
    break BeforeRet;
    }
    
    var targetLine_2818583572 = cursor_2818583570.Field0;
    var totalLineHeight_2818583573 = totalLineHeight_2768240810(self_2818583569.editor.platform);
    if (keepVerticalOffset_2818583571) {
    var currentLineY_2818583574 = ((subInt(selection_2818572805(self_2818583569).Field1.Field0, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
    self_2818583569.previousBaseIndex = targetLine_2818583572;
    self_2818583569.scrollOffset = currentLineY_2818583574;
    }
    else {
      var targetLineY_2818583575 = ((subInt(targetLine_2818583572, self_2818583569.previousBaseIndex) * totalLineHeight_2818583573) + self_2818583569.scrollOffset);
      var margin_2818583608 = clamp_2634023065(getOption_2818583576(self_2818583569.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818583569.lastContentBounds.h * 0.5) - (totalLineHeight_2818583573 * 0.5)));
      if ((targetLineY_2818583575 < margin_2818583608)) {
      self_2818583569.scrollOffset = margin_2818583608;
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      else {
      if (((self_2818583569.lastContentBounds.h - margin_2818583608) < (targetLineY_2818583575 + totalLineHeight_2818583573))) {
      self_2818583569.scrollOffset = ((self_2818583569.lastContentBounds.h - margin_2818583608) - totalLineHeight_2818583573);
      self_2818583569.previousBaseIndex = targetLine_2818583572;
      }
      }
    }
    
    markDirty_2415919143(self_2818583569);
  };

  
}

function selectPrev_2818585398(self_2818585399) {
    if ((0 < len_2818572976(self_2818585399.selectionHistory))) {
    var selection_2818585544 = popLast_2818585531(self_2818585399.selectionHistory);
    addFirst_2818585550(self_2818585399.selectionHistory, selections_2818572802(self_2818585399));
    self_2818585399.selectionsInternal = nimCopy(null, selection_2818585544, NTI2449473555);
    }
    
    scrollToCursor_2818583568(self_2818585399, selection_2818572805(self_2818585399).Field1, false);

  
}

function selectPrevJsWrapper_2818585394(self_2818585594) {
    selectPrev_2818585398(self_2818585594);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818585394(this));};

function selectNext_2818585616(self_2818585617) {
    if ((0 < len_2818572976(self_2818585617.selectionHistory))) {
    var selection_2818585752 = popFirst_2818573048(self_2818585617.selectionHistory);
    addLast_2818572826(self_2818585617.selectionHistory, selections_2818572802(self_2818585617));
    self_2818585617.selectionsInternal = nimCopy(null, selection_2818585752, NTI2449473555);
    }
    
    scrollToCursor_2818583568(self_2818585617, selection_2818572805(self_2818585617).Field1, false);

  
}

function selectNextJsWrapper_2818585612(self_2818585789) {
    selectNext_2818585616(self_2818585789);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818585612(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818585810(self_2818585811, cursor_2818585812) {
    var regex_2818585813 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818585814 = cursor_2818585812.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818585814) && (matchLen_2852126756(self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)], regex_2818585813, subInt(first_2818585814, 1)) == 1))) break Label2;
          first_2818585814 = subInt(first_2818585814, 1);
        }
    };
    var last_2818585819 = cursor_2818585812.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818585819 < (self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818585811.document.lines[chckIndx(cursor_2818585812.Field0, 0, (self_2818585811.document.lines).length - 1)], regex_2818585813, last_2818585819) == 1))) break Label4;
          last_2818585819 = addInt(last_2818585819, 1);
        }
    };
    selectionHEX3D_2818572811(self_2818585811, {Field0: {Field0: cursor_2818585812.Field0, Field1: first_2818585814}, Field1: {Field0: cursor_2818585812.Field0, Field1: last_2818585819}});

  
}

function selectInsideJsWrapper_2818585806(self_2818585852, cursor_2818585853) {
    selectInside_2818585810(self_2818585852, cursor_2818585853);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818585806(this, cursor_));};

function selectInsideCurrent_2818585887(self_2818585888) {
    selectInside_2818585810(self_2818585888, selection_2818572805(self_2818585888).Field1);

  
}

function selectInsideCurrentJsWrapper_2818585883(self_2818585916) {
    selectInsideCurrent_2818585887(self_2818585916);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818585883(this));};

function lineLength_2818572680(self_2818572681, line_2818572682) {
  var result_2818572683 = 0;

  BeforeRet: {
    if ((line_2818572682 < (self_2818572681.document.lines).length)) {
    result_2818572683 = (self_2818572681.document.lines[chckIndx(line_2818572682, 0, (self_2818572681.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572683 = 0;
    break BeforeRet;
  };

  return result_2818572683;

}

function selectLine_2818585937(self_2818585938, line_2818585939) {
    selectionHEX3D_2818572811(self_2818585938, {Field0: {Field0: line_2818585939, Field1: 0}, Field1: {Field0: line_2818585939, Field1: lineLength_2818572680(self_2818585938, line_2818585939)}});

  
}

function selectLineJsWrapper_2818585933(self_2818585968, line_2818585969) {
    selectLine_2818585937(self_2818585968, line_2818585969);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585933(this, line_));};

function selectLineCurrent_2818585995(self_2818585996) {
    selectLine_2818585937(self_2818585996, selection_2818572805(self_2818585996).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585991(self_2818586024) {
    selectLineCurrent_2818585995(self_2818586024);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585991(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818586118 = point_2885681331.row;
    var colontmp__2818586119 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818586118, Field1: colontmp__2818586119}, NTI2449473545);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818586120 = point_2885681335.row;
    var colontmp__2818586121 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818586120, Field1: colontmp__2818586121}, NTI2449473545);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818586116 = startPoint_2885681328(node_2885681337);
    var colontmp__2818586117 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818586116, NTI2449473545), Field1: nimCopy(null, colontmp__2818586117, NTI2449473545)}, NTI2449473547);

  return result_2885681338;

}

function selectParentTs_2818586045(self_2818586046, selection_2818586047) {
  BeforeRet: {
    if ((self_2818586046.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818586051 = descendantForRange_2885681405(self_2818586046.document.currentTree.rootNode, selection_2818586047);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2449473599(getRange_2885681336(node_2818586051), selection_2818586047) && !((node_2818586051 == self_2818586046.document.currentTree.rootNode)))) break Label2;
          node_2818586051 = node_2818586051.parent;
        }
    };
    selectionHEX3D_2818572811(self_2818586046, getRange_2885681336(node_2818586051));
  };

  
}

function selectParentTsJsWrapper_2818586041(self_2818586088, selection_2818586089) {
    selectParentTs_2818586045(self_2818586088, selection_2818586089);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818586041(this, selection_));};

function selectParentCurrentTs_2818586128(self_2818586129) {
    selectParentTs_2818586045(self_2818586129, selection_2818572805(self_2818586129));

  
}

function selectParentCurrentTsJsWrapper_2818586124(self_2818586157) {
    selectParentCurrentTs_2818586128(self_2818586157);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818586124(this));};

function newSeq_2449473682(len_2449473684) {
  var result_2449473685 = [];

    result_2449473685 = new Array(len_2449473684); for (var i = 0 ; i < len_2449473684 ; ++i) { result_2449473685[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2449473685;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2449473711(a_2449473713, b_2449473714, lo_2449473715, m_2449473716, hi_2449473717, cmp_2449473720, order_2449473721) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2449473720(a_2449473713[chckIndx(m_2449473716, 0, (a_2449473713).length - 1)], a_2449473713[chckIndx(addInt(m_2449473716, 1), 0, (a_2449473713).length - 1)]), order_2449473721) <= 0)) {
    break BeforeRet;
    }
    
    var j_2449473722 = lo_2449473715;
    if (!((j_2449473722 <= m_2449473716))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2449473728 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2449473722 <= m_2449473716)) break Label2;
          b_2449473714[chckIndx(bb_2449473728, 0, (b_2449473714).length - 1)] = nimCopy(b_2449473714[chckIndx(bb_2449473728, 0, (b_2449473714).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)], NTI2449473547);
          bb_2449473728 = addInt(bb_2449473728, 1);
          j_2449473722 = addInt(j_2449473722, 1);
        }
    };
    var i_2449473739 = 0;
    var k_2449473740 = lo_2449473715;
    Label3: {
        Label4: while (true) {
        if (!((k_2449473740 < j_2449473722) && (j_2449473722 <= hi_2449473717))) break Label4;
          if ((HEX2A_1023410184(cmp_2449473720(b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)]), order_2449473721) <= 0)) {
          a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], NTI2449473547);
          i_2449473739 = addInt(i_2449473739, 1);
          }
          else {
            a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], a_2449473713[chckIndx(j_2449473722, 0, (a_2449473713).length - 1)], NTI2449473547);
            j_2449473722 = addInt(j_2449473722, 1);
          }
          
          k_2449473740 = addInt(k_2449473740, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2449473740 < j_2449473722)) break Label6;
          a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)] = nimCopy(a_2449473713[chckIndx(k_2449473740, 0, (a_2449473713).length - 1)], b_2449473714[chckIndx(i_2449473739, 0, (b_2449473714).length - 1)], NTI2449473547);
          k_2449473740 = addInt(k_2449473740, 1);
          i_2449473739 = addInt(i_2449473739, 1);
        }
    };
  };

  
}

function sort_2449473670(a_2449473672, cmp_2449473675, order_2449473676) {
    var n_2449473681 = (a_2449473672).length;
    var b_2449473708 = newSeq_2449473682(chckRange(divInt(n_2449473681, 2), 0, 2147483647));
    var s_2449473709 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2449473709 < n_2449473681)) break Label2;
          var m_2449473710 = subInt(subInt(n_2449473681, 1), s_2449473709);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2449473710)) break Label4;
                mergeAlt_2449473711(a_2449473672, b_2449473708, nimMax(addInt(subInt(m_2449473710, s_2449473709), 1), 0), m_2449473710, addInt(m_2449473710, s_2449473709), cmp_2449473675, order_2449473676);
                m_2449473710 = subInt(m_2449473710, mulInt(s_2449473709, 2));
              }
          };
          s_2449473709 = mulInt(s_2449473709, 2);
        }
    };

  
}

function sorted_2449473812(a_2449473814, cmp_2449473817, order_2449473818) {
  var result_2449473819 = [];

    result_2449473819 = nimCopy(null, newSeq_2449473682(chckRange((a_2449473814).length, 0, 2147483647)), NTI2449473595);
    Label1: {
      var i_2449473833 = 0;
      var colontmp__2818586235 = 0;
      colontmp__2818586235 = (a_2449473814).length - 1;
      var res_2818586236 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586236 <= colontmp__2818586235)) break Label3;
            i_2449473833 = res_2818586236;
            result_2449473819[chckIndx(i_2449473833, 0, (result_2449473819).length - 1)] = nimCopy(result_2449473819[chckIndx(i_2449473833, 0, (result_2449473819).length - 1)], a_2449473814[chckIndx(i_2449473833, 0, (a_2449473814).length - 1)], NTI2449473547);
            res_2818586236 = addInt(res_2818586236, 1);
          }
      };
    };
    sort_2449473670(result_2449473819, cmp_2449473817, order_2449473818);

  return result_2449473819;

}

function HEX3C_2449473642(x_2449473644, y_2449473645) {
  var result_2449473646 = false;

  BeforeRet: {
    var c_2449473656 = cmp_33557727(x_2449473644["Field0"], y_2449473645["Field0"]);
    if ((c_2449473656 < 0)) {
    result_2449473646 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473656)) {
    result_2449473646 = false;
    break BeforeRet;
    }
    
    var c_2449473661 = cmp_33557727(x_2449473644["Field1"], y_2449473645["Field1"]);
    if ((c_2449473661 < 0)) {
    result_2449473646 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473661)) {
    result_2449473646 = false;
    break BeforeRet;
    }
    
    result_2449473646 = false;
    break BeforeRet;
  };

  return result_2449473646;

}

function cmp_2449473633(x_2449473635, y_2449473636) {
  var result_2449473637 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473609(x_2449473635, y_2449473636)) {
    result_2449473637 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473642(x_2449473635, y_2449473636)) {
    result_2449473637 = -1;
    break BeforeRet;
    }
    
    result_2449473637 = 1;
    break BeforeRet;
  };

  return result_2449473637;

}

function HEX3C_2449473623(x_2449473625, y_2449473626) {
  var result_2449473627 = false;

  BeforeRet: {
    var c_2449473662 = cmp_2449473633(x_2449473625["Field0"], y_2449473626["Field0"]);
    if ((c_2449473662 < 0)) {
    result_2449473627 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473662)) {
    result_2449473627 = false;
    break BeforeRet;
    }
    
    var c_2449473667 = cmp_2449473633(x_2449473625["Field1"], y_2449473626["Field1"]);
    if ((c_2449473667 < 0)) {
    result_2449473627 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2449473667)) {
    result_2449473627 = false;
    break BeforeRet;
    }
    
    result_2449473627 = false;
    break BeforeRet;
  };

  return result_2449473627;

}

function cmp_2449473594(x_2449473596, y_2449473597) {
  var result_2449473598 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2449473599(x_2449473596, y_2449473597)) {
    result_2449473598 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2449473623(x_2449473596, y_2449473597)) {
    result_2449473598 = -1;
    break BeforeRet;
    }
    
    result_2449473598 = 1;
    break BeforeRet;
  };

  return result_2449473598;

}

function sorted_2449473801(a_2449473803, order_2449473804) {
  var result_2449473805 = [];

    result_2449473805 = nimCopy(null, sorted_2449473812(a_2449473803, cmp_2449473594, order_2449473804), NTI2449473675);

  return result_2449473805;

}

function normalized_2449473798(self_2449473799) {
  var result_2449473800 = [];

  BeforeRet: {
    result_2449473800 = nimCopy(null, sorted_2449473801(self_2449473799, 1), NTI2449473666);
    break BeforeRet;
  };

  return result_2449473800;

}

function HEX3DHEX3D_2818573086(x_2818573088, y_2818573089) {
  var result_2818573090 = false;

  BeforeRet: {
    var sameObject_2818573097 = false;
    sameObject_2818573097 = x_2818573088 === y_2818573089
    if (sameObject_2818573097) {
    result_2818573090 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573088).length == (y_2818573089).length))) {
    result_2818573090 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573111 = 0;
      var colontmp__2818586244 = 0;
      colontmp__2818586244 = subInt((x_2818573088).length, 1);
      var res_2818586245 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586245 <= colontmp__2818586244)) break Label3;
            i_2818573111 = res_2818586245;
            if (!(HEX3DHEX3D_2449473599(x_2818573088[chckIndx(i_2818573111, 0, (x_2818573088).length - 1)], y_2818573089[chckIndx(i_2818573111, 0, (y_2818573089).length - 1)]))) {
            result_2818573090 = false;
            break BeforeRet;
            }
            
            res_2818586245 = addInt(res_2818586245, 1);
          }
      };
    };
    result_2818573090 = true;
    break BeforeRet;
  };

  return result_2818573090;

}

function clampAndMergeSelections_2818572798(self_2818572799, selections_2818572800) {
  var result_2818572801 = [];

    result_2818572801 = nimCopy(null, clampAndMergeSelections_2818572720(self_2818572799.document, selections_2818572800), NTI2449473555);

  return result_2818572801;

}

function selectionsHEX3D_2818573083(self_2818573084, selections_2818573085) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573086(self_2818573084.selectionsInternal, selections_2818573085)) {
    break BeforeRet;
    }
    
    addLast_2818572826(self_2818573084.selectionHistory, self_2818573084.selectionsInternal);
    if ((100 < len_2818572976(self_2818573084.selectionHistory))) {
    var _ = popFirst_2818573048(self_2818573084.selectionHistory);
    }
    
    self_2818573084.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572798(self_2818573084, selections_2818573085), NTI2449473555);
    if (((self_2818573084.selectionsInternal).length == 0)) {
    self_2818573084.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2449474029({Field0: 0, Field1: 0}), NTI2449473547)], NTI2818572821);
    }
    
    markDirty_2415919143(self_2818573084);
  };

  
}

function edit_2818580070(self_2818580071, selections_2818580072, oldSelection_2818580073, text_2818580074, notify_2818580075) {
    
function HEX3Aanonymous_2818580077(s_2818580085) {
      var result_2818580088 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818580088 = nimCopy(result_2818580088, normalized_2449473902(s_2818580085), NTI2449473547);

      return result_2818580088;

    }

  var result_2818580076 = [];

    var selections_2818580096 = map_2818572735(selections_2818580072, HEX3Aanonymous_2818580077);
    result_2818580076 = nimCopy(null, delete_2818579356(self_2818580071, selections_2818580096, oldSelection_2818580073, false, true), NTI2818576075);
    result_2818580076 = nimCopy(null, insert_2818579853(self_2818580071, result_2818580076, oldSelection_2818580073, text_2818580074, true, true, true), NTI2818576430);

  return result_2818580076;

}

function insertText_2818586181(self_2818586182, text_2818586183) {
  BeforeRet: {
    if ((self_2818586182.document.singleLine && eqStrings(text_2818586183, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818586184 = normalized_2449473798(selections_2818572802(self_2818586182));
    selectionsHEX3D_2818573083(self_2818586182, edit_2818580070(self_2818586182.document, selections_2818572802(self_2818586182), selections_2818572802(self_2818586182), text_2818586183, true));
    updateTargetColumn_2818584601(self_2818586182, 3);
    if ((!(self_2818586182.disableCompletions) && (eqStrings(text_2818586183, [46]) || eqStrings(text_2818586183, [44])))) {
    self_2818586182.showCompletions = true;
    var _ = getCompletionsAsync_2818586172(self_2818586182);
    }
    else {
    if (self_2818586182.showCompletions) {
    var _ = getCompletionsAsync_2818586172(self_2818586182);
    }
    }
  };

  
}

function insertTextJsWrapper_2818586177(self_2818586213, text_2818586214) {
    insertText_2818586181(self_2818586213, text_2818586214);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818586177(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818580165() {
  var result_2818580172 = ({val: [], has: false});

  return result_2818580172;

}

function pop_2818580176(s_2818580178, s_2818580178_Idx) {
  var result_2818580179 = null;

    var L_2818580183 = subInt((s_2818580178[s_2818580178_Idx]).length, 1);
    result_2818580179 = s_2818580178[s_2818580178_Idx][chckIndx(L_2818580183, 0, (s_2818580178[s_2818580178_Idx]).length - 1)];
    if (s_2818580178[s_2818580178_Idx].length < chckRange(L_2818580183, 0, 2147483647)) { for (var i = s_2818580178[s_2818580178_Idx].length ; i < chckRange(L_2818580183, 0, 2147483647) ; ++i) s_2818580178[s_2818580178_Idx].push(null); }
               else { s_2818580178[s_2818580178_Idx].length = chckRange(L_2818580183, 0, 2147483647); };

  return result_2818580179;

}

function some_2818580189(val_2818580191) {
  var result_2818580192 = ({val: [], has: false});

    result_2818580192.has = true;
    result_2818580192.val = nimCopy(null, val_2818580191, NTI2818576615);

  return result_2818580192;

}

function doUndo_2818580106(document_2818580107, op_2818580108, oldSelection_2818580109, useOldSelection_2818580110, redoOps_2818580111, redoOps_2818580111_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818580112 = [];

    switch (op_2818580108.kind) {
    case 0:
      var Temporary1 = op_2818580108;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580113 = contentString_2818574091(document_2818580107, Temporary1.selection);
      var Temporary2 = op_2818580108;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580112 = nimCopy(null, delete_2818579356(document_2818580107, [nimCopy(null, Temporary2.selection, NTI2449473547)], op_2818580108.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580108;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473545), text: nimCopy(null, text_2818580113, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580108;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580108;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818580121 = insert_2818579853(document_2818580107, [nimCopy(null, toSelection_2449474029(Temporary4.cursor), NTI2449473547)], op_2818580108.oldSelection, Temporary5.text, true, false, false);
      result_2818580112 = nimCopy(null, selections_2818580121, NTI2818576430);
      var Temporary6 = op_2818580108;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818580111[redoOps_2818580111_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2449473545), Field1: nimCopy(null, selections_2818580121[chckIndx(0, 0, (selections_2818580121).length - 1)].Field1, NTI2449473545)}, NTI2449473547), oldSelection: HEX40_2818579363(oldSelection_2818580109), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
      var redoOp_2818580132 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580109), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818580141 = 0;
        var colontmp__2818586346 = 0;
        var Temporary8 = op_2818580108;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818586346 = (Temporary8.children).length - 1;
        var res_2818586347 = colontmp__2818586346;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818586347)) break Label10;
              i_2818580141 = res_2818586347;
              var Temporary11 = op_2818580108;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818580132;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818580106(document_2818580107, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818580141, 0, (Temporary12).length - 1)], oldSelection_2818580109, useOldSelection_2818580110, Temporary13, "children");
              res_2818586347 = subInt(res_2818586347, 1);
            }
        };
      };
      redoOps_2818580111[redoOps_2818580111_Idx].push(redoOp_2818580132);;
      break;
    }
    if (useOldSelection_2818580110) {
    result_2818580112 = nimCopy(null, op_2818580108.oldSelection, NTI2818572295);
    }
    

  return result_2818580112;

}

function undo_2818580155(document_2818580156, oldSelection_2818580157, useOldSelection_2818580158) {
  var result_2818580164 = ({val: [], has: false});

  BeforeRet: {
    result_2818580164 = nimCopy(result_2818580164, none_2818580165(), NTI2818576690);
    if (((document_2818580156.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580188 = pop_2818580176(document_2818580156, "undoOps");
    result_2818580164 = nimCopy(result_2818580164, some_2818580189(doUndo_2818580106(document_2818580156, op_2818580188, oldSelection_2818580157, useOldSelection_2818580158, document_2818580156, "redoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580164;

}

function isSome_2818586262(self_2818586264) {
  var result_2818586265 = false;

    result_2818586265 = self_2818586264.has;

  return result_2818586265;

}

function isNone_2818586287(self_2818586289) {
  var result_2818586290 = false;

    result_2818586290 = !(self_2818586289.has);

  return result_2818586290;

}

function get_2818586279(self_2818586281) {
  var result_2818586282 = [];

    if (isNone_2818586287(self_2818586281)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818586282 = self_2818586281["val"];

  return result_2818586282;

}

function undo_2818586253(self_2818586254) {
      var Temporary1;

      var oHEX60gensym378_2818586257 = undo_2818580155(self_2818586254.document, selections_2818572802(self_2818586254), true);
      if (!isSome_2818586262(oHEX60gensym378_2818586257)) Temporary1 = false; else {        var selections_2818586302 = nimCopy(null, get_2818586279(oHEX60gensym378_2818586257), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586254, selections_2818586302);
    }
    

  
}

function undoJsWrapper_2818586249(self_2818586330) {
    undo_2818586253(self_2818586330);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818586249(this));};

function doRedo_2818580203(document_2818580204, op_2818580205, oldSelection_2818580206, useOldSelection_2818580207, undoOps_2818580208, undoOps_2818580208_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818580209 = [];

    switch (op_2818580205.kind) {
    case 0:
      var Temporary1 = op_2818580205;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818580210 = contentString_2818574091(document_2818580204, Temporary1.selection);
      var Temporary2 = op_2818580205;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, delete_2818579356(document_2818580204, [nimCopy(null, Temporary2.selection, NTI2449473547)], op_2818580205.oldSelection, true, false), NTI2818576075);
      var Temporary3 = op_2818580205;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2449473545), text: nimCopy(null, text_2818580210, NTI33554449), oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818580205;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818580205;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818580205;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818580209 = nimCopy(null, insert_2818579853(document_2818580204, [nimCopy(null, toSelection_2449474029(Temporary4.cursor), NTI2449473547)], [nimCopy(null, toSelection_2449474029(Temporary5.cursor), NTI2449473547)], Temporary6.text, true, false, false), NTI2818576430);
      var Temporary7 = op_2818580205;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818580208[undoOps_2818580208_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2449473545), Field1: nimCopy(null, result_2818580209[chckIndx(0, 0, (result_2818580209).length - 1)].Field1, NTI2449473545)}, NTI2449473547), oldSelection: HEX40_2818579363(oldSelection_2818580206), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
      var undoOp_2818580228 = {kind: 2, oldSelection: HEX40_2818579363(oldSelection_2818580206), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818580237 = 0;
        var colontmp__2818586426 = 0;
        var Temporary9 = op_2818580205;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818586426 = (Temporary9.children).length - 1;
        var res_2818586427 = colontmp__2818586426;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818586427)) break Label11;
              i_2818580237 = res_2818586427;
              var Temporary12 = op_2818580205;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818580228;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818580203(document_2818580204, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818580237, 0, (Temporary13).length - 1)], oldSelection_2818580206, useOldSelection_2818580207, Temporary14, "children");
              res_2818586427 = subInt(res_2818586427, 1);
            }
        };
      };
      undoOps_2818580208[undoOps_2818580208_Idx].push(undoOp_2818580228);;
      break;
    }
    if (useOldSelection_2818580207) {
    result_2818580209 = nimCopy(null, op_2818580205.oldSelection, NTI2818572295);
    }
    

  return result_2818580209;

}

function redo_2818580242(document_2818580243, oldSelection_2818580244, useOldSelection_2818580245) {
  var result_2818580247 = ({val: [], has: false});

  BeforeRet: {
    result_2818580247 = nimCopy(result_2818580247, none_2818580165(), NTI2818576690);
    if (((document_2818580243.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818580261 = pop_2818580176(document_2818580243, "redoOps");
    result_2818580247 = nimCopy(result_2818580247, some_2818580189(doRedo_2818580203(document_2818580243, op_2818580261, oldSelection_2818580244, useOldSelection_2818580245, document_2818580243, "undoOps")), NTI2818576690);
    break BeforeRet;
  };

  return result_2818580247;

}

function redo_2818586355(self_2818586356) {
      var Temporary1;

      var oHEX60gensym388_2818586359 = redo_2818580242(self_2818586356.document, selections_2818572802(self_2818586356), true);
      if (!isSome_2818586262(oHEX60gensym388_2818586359)) Temporary1 = false; else {        var selections_2818586382 = nimCopy(null, get_2818586279(oHEX60gensym388_2818586359), NTI2818576685);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573083(self_2818586356, selections_2818586382);
    }
    

  
}

function redoJsWrapper_2818586351(self_2818586410) {
    redo_2818586355(self_2818586410);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818586351(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818586435(self_2818586436, amount_2818586437) {
  BeforeRet: {
    if (self_2818586436.disableScrolling) {
    break BeforeRet;
    }
    
    HEX2BHEX3D_855640304(self_2818586436, "scrollOffset", amount_2818586437);
    markDirty_2415919143(self_2818586436);
  };

  
}

function scrollTextJsWrapper_2818586431(self_2818586470, amount_2818586471) {
    scrollText_2818586435(self_2818586470, amount_2818586471);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818586431(this, amount_));};

function clampCursor_2818572708(self_2818572709, cursor_2818572710) {
  var result_2818572711 = {Field0: 0, Field1: 0};

    result_2818572711 = nimCopy(result_2818572711, clampCursor_2818572687(self_2818572709.document, cursor_2818572710), NTI2449473545);

  return result_2818572711;

}

function doMoveCursorColumn_2818583517(self_2818583518, cursor_2818583519, offset_2818583520) {
  var result_2818583521 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583522 = nimCopy(null, cursor_2818583519, NTI2449473545);
    var column_2818583523 = addInt(cursor_2818583522.Field1, offset_2818583520);
    if ((column_2818583523 < 0)) {
    if ((0 < cursor_2818583522.Field0)) {
    cursor_2818583522.Field0 = subInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    else {
      cursor_2818583522.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572680(self_2818583518, cursor_2818583522.Field0) < column_2818583523)) {
    if ((cursor_2818583522.Field0 < subInt((self_2818583518.document.lines).length, 1))) {
    cursor_2818583522.Field0 = addInt(cursor_2818583522.Field0, 1);
    cursor_2818583522.Field1 = 0;
    }
    else {
      cursor_2818583522.Field1 = lineLength_2818572680(self_2818583518, cursor_2818583522.Field0);
    }
    
    }
    else {
      cursor_2818583522.Field1 = column_2818583523;
    }
    }
    result_2818583521 = nimCopy(result_2818583521, clampCursor_2818572708(self_2818583518, cursor_2818583522), NTI2449473545);
    break BeforeRet;
  };

  return result_2818583521;

}

function HEX26_2818586565(x_2818586567, y_2818586568) {
  var result_2818586569 = [];

    result_2818586569 = new Array(chckRange(addInt((x_2818586567).length, (y_2818586568).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818586567).length, (y_2818586568).length), 0, 2147483647) ; ++i) { result_2818586569[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818586587 = 0;
      var colontmp__2818586642 = 0;
      colontmp__2818586642 = subInt((x_2818586567).length, 1);
      var res_2818586643 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586643 <= colontmp__2818586642)) break Label3;
            i_2818586587 = res_2818586643;
            result_2818586569[chckIndx(i_2818586587, 0, (result_2818586569).length - 1)] = nimCopy(result_2818586569[chckIndx(i_2818586587, 0, (result_2818586569).length - 1)], x_2818586567[chckIndx(i_2818586587, 0, (x_2818586567).length - 1)], NTI2449473547);
            res_2818586643 = addInt(res_2818586643, 1);
          }
      };
    };
    Label4: {
      var i_2818586595 = 0;
      var colontmp__2818586646 = 0;
      colontmp__2818586646 = subInt((y_2818586568).length, 1);
      var res_2818586647 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818586647 <= colontmp__2818586646)) break Label6;
            i_2818586595 = res_2818586647;
            result_2818586569[chckIndx(addInt(i_2818586595, (x_2818586567).length), 0, (result_2818586569).length - 1)] = nimCopy(result_2818586569[chckIndx(addInt(i_2818586595, (x_2818586567).length), 0, (result_2818586569).length - 1)], y_2818586568[chckIndx(i_2818586595, 0, (y_2818586568).length - 1)], NTI2449473547);
            res_2818586647 = addInt(res_2818586647, 1);
          }
      };
    };

  return result_2818586569;

}

function duplicateLastSelection_2818586555(self_2818586556) {
    var Temporary1;

    var newSelection_2818586560 = toSelection_2449474029(doMoveCursorColumn_2818583517(self_2818586556, (Temporary1 = selections_2818572802(self_2818586556), Temporary1)[chckIndx((selections_2818572802(self_2818586556)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573083(self_2818586556, HEX26_2818586565(selections_2818572802(self_2818586556), [nimCopy(null, newSelection_2818586560, NTI2449473547)]));

  
}

function duplicateLastSelectionJsWrapper_2818586551(self_2818586626) {
    duplicateLastSelection_2818586555(self_2818586626);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818586551(this));};

function doMoveCursorLine_2818583527(self_2818583528, cursor_2818583529, offset_2818583530) {
  var result_2818583531 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818583532 = nimCopy(null, cursor_2818583529, NTI2449473545);
    var line_2818583533 = addInt(cursor_2818583532.Field0, offset_2818583530);
    if ((line_2818583533 < 0)) {
    var colontmp__2818586711 = 0;
    var colontmp__2818586712 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586711, Field1: colontmp__2818586712}, NTI2449473545);
    }
    else {
    if (((self_2818583528.document.lines).length <= line_2818583533)) {
    var colontmp__2818586713 = subInt((self_2818583528.document.lines).length, 1);
    var colontmp__2818586714 = cursor_2818583532.Field1;
    cursor_2818583532 = nimCopy(cursor_2818583532, {Field0: colontmp__2818586713, Field1: colontmp__2818586714}, NTI2449473545);
    }
    else {
      cursor_2818583532.Field0 = line_2818583533;
      cursor_2818583532.Field1 = self_2818583528.targetColumn;
    }
    }
    result_2818583531 = nimCopy(result_2818583531, clampCursor_2818572708(self_2818583528, cursor_2818583532), NTI2449473545);
    break BeforeRet;
  };

  return result_2818583531;

}

function addCursorBelow_2818586655(self_2818586656) {
    var Temporary1;

    var newCursor_2818586660 = toSelection_2449474029(doMoveCursorLine_2818583527(self_2818586656, (Temporary1 = selections_2818572802(self_2818586656), Temporary1)[chckIndx((selections_2818572802(self_2818586656)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2449474006(selections_2818572802(self_2818586656), newCursor_2818586660))) {
    selectionsHEX3D_2818573083(self_2818586656, HEX26_2818586565(selections_2818572802(self_2818586656), [nimCopy(null, newCursor_2818586660, NTI2449473547)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818586651(self_2818586696) {
    addCursorBelow_2818586655(self_2818586696);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818586651(this));};

function addCursorAbove_2818586721(self_2818586722) {
    var Temporary1;

    var newCursor_2818586726 = toSelection_2449474029(doMoveCursorLine_2818583527(self_2818586722, (Temporary1 = selections_2818572802(self_2818586722), Temporary1)[chckIndx((selections_2818572802(self_2818586722)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2449474006(selections_2818572802(self_2818586722), newCursor_2818586726))) {
    selectionsHEX3D_2818573083(self_2818586722, HEX26_2818586565(selections_2818572802(self_2818586722), [nimCopy(null, newCursor_2818586726, NTI2449473547)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818586717(self_2818586762) {
    addCursorAbove_2818586721(self_2818586762);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818586717(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818581106(t_2818581109, key_2818581110, hc_2818581111, hc_2818581111_Idx) {
  var result_2818581112 = 0;

  BeforeRet: {
    hc_2818581111[hc_2818581111_Idx] = hash_1325400236(key_2818581110);
    if ((hc_2818581111[hc_2818581111_Idx] == 0)) {
    hc_2818581111[hc_2818581111_Idx] = 314159265;
    }
    
    if (((t_2818581109.data).length == 0)) {
    result_2818581112 = -1;
    break BeforeRet;
    }
    
    var h_2818581182 = (hc_2818581111[hc_2818581111_Idx] & (t_2818581109.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0)) break Label2;
          if (((t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field0 == hc_2818581111[hc_2818581111_Idx]) && (t_2818581109.data[chckIndx(h_2818581182, 0, (t_2818581109.data).length - 1)].Field1 == key_2818581110))) {
          result_2818581112 = h_2818581182;
          break BeforeRet;
          }
          
          h_2818581182 = nextTry_1308622883(h_2818581182, (t_2818581109.data).length - 1);
        }
    };
    result_2818581112 = subInt(-1, h_2818581182);
  };

  return result_2818581112;

}

function hasKey_2818586859(t_2818586862, key_2818586863) {
  var result_2818586864 = false;

    var hc_2818586865 = [0];
    result_2818586864 = (0 <= rawGet_2818581106(t_2818586862, key_2818586863, hc_2818586865, 0));

  return result_2818586864;

}

function contains_2818586853(t_2818586856, key_2818586857) {
  var result_2818586858 = false;

  BeforeRet: {
    result_2818586858 = hasKey_2818586859(t_2818586856, key_2818586857);
    break BeforeRet;
  };

  return result_2818586858;

}

function raiseKeyError_1291850850(key_1291850852) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850852) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586949(t_2818586952, key_2818586953) {
  var result_2818586954 = null;
  var result_2818586954_Idx = 0;

    var hcHEX60gensym22_2818586955 = [0];
    var indexHEX60gensym22_2818586962 = rawGet_2818581106(t_2818586952, key_2818586953, hcHEX60gensym22_2818586955, 0);
    if ((0 <= indexHEX60gensym22_2818586962)) {
    result_2818586954 = t_2818586952.data[chckIndx(indexHEX60gensym22_2818586962, 0, (t_2818586952.data).length - 1)]; result_2818586954_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818586953);
    }
    

  return [result_2818586954, result_2818586954_Idx];

}

function HEX3C_2449473863(a_2449473864, b_2449473865) {
  var result_2449473866 = false;

  BeforeRet: {
    if ((a_2449473864.Field0 < b_2449473865.Field0)) {
    result_2449473866 = true;
    break BeforeRet;
    }
    else {
    if (((a_2449473864.Field0 == b_2449473865.Field0) && (a_2449473864.Field1 < b_2449473865.Field1))) {
    result_2449473866 = true;
    break BeforeRet;
    }
    else {
      result_2449473866 = false;
      break BeforeRet;
    }
    }
  };

  return result_2449473866;

}

function getPrevFindResult_2818583550(self_2818583551, cursor_2818583552, offset_2818583553) {
            var Temporary4;

  var result_2818586787 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586788 = 0;
    Label1: {
      var line_2818586794 = 0;
      var res_2818587125 = cursor_2818583552.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818587125)) break Label3;
            line_2818586794 = res_2818587125;
            if (contains_2818586853(self_2818583551.searchResults, line_2818586794)) {
            var selections_2818587043 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586949(self_2818583551.searchResults, line_2818586794), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818587052 = 0;
              var colontmp__2818587122 = 0;
              colontmp__2818587122 = (selections_2818587043).length - 1;
              var res_2818587123 = colontmp__2818587122;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818587123)) break Label7;
                    k_2818587052 = res_2818587123;
                    if (HEX3C_2449473863(selections_2818587043[chckIndx(k_2818587052, 0, (selections_2818587043).length - 1)].Field1, cursor_2818583552)) {
                    if ((i_2818586788 == offset_2818583553)) {
                    result_2818586787 = nimCopy(result_2818586787, selections_2818587043[chckIndx(k_2818587052, 0, (selections_2818587043).length - 1)], NTI2449473547);
                    break BeforeRet;
                    }
                    
                    i_2818586788 = addInt(i_2818586788, 1);
                    }
                    
                    res_2818587123 = subInt(res_2818587123, 1);
                  }
              };
            };
            }
            
            res_2818587125 = subInt(res_2818587125, 1);
          }
      };
    };
    result_2818586787 = nimCopy(result_2818586787, toSelection_2449474029(cursor_2818583552), NTI2449473547);
    break BeforeRet;
  };

  return result_2818586787;

}

function getPrevFindResultJsWrapper_2818586779(self_2818587088, cursor_2818587089, offset_2818587090) {
  var result_2818587091 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587091 = nimCopy(result_2818587091, getPrevFindResult_2818583550(self_2818587088, cursor_2818587089, offset_2818587090), NTI2449473547);

  return result_2818587091;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818586779(this, cursor_, offset_));};

function getNextFindResult_2818583554(self_2818583555, cursor_2818583556, offset_2818583557) {
              var Temporary5;

  var result_2818587138 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818587139 = 0;
    Label1: {
      var line_2818587147 = 0;
      var colontmp__2818587371 = 0;
      colontmp__2818587371 = (self_2818583555.document.lines).length - 1;
      var res_2818587372 = cursor_2818583556.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818587372 <= colontmp__2818587371)) break Label3;
            line_2818587147 = res_2818587372;
            if (contains_2818586853(self_2818583555.searchResults, line_2818587147)) {
            Label4: {
              var selection_2818587296 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818587366 = [];
              colontmp__2818587366 = (Temporary5 = HEX5BHEX5D_2818586949(self_2818583555.searchResults, line_2818587147), Temporary5)[0][Temporary5[1]];
              var i_2818587368 = 0;
              var L_2818587369 = (colontmp__2818587366).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818587368 < L_2818587369)) break Label7;
                    selection_2818587296 = colontmp__2818587366[chckIndx(i_2818587368, 0, (colontmp__2818587366).length - 1)];
                    if (HEX3C_2449473863(cursor_2818583556, selection_2818587296.Field0)) {
                    if ((i_2818587139 == offset_2818583557)) {
                    result_2818587138 = nimCopy(result_2818587138, selection_2818587296, NTI2449473547);
                    break BeforeRet;
                    }
                    
                    i_2818587139 = addInt(i_2818587139, 1);
                    }
                    
                    i_2818587368 = addInt(i_2818587368, 1);
                    if (!(((colontmp__2818587366).length == L_2818587369))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818587372 = addInt(res_2818587372, 1);
          }
      };
    };
    result_2818587138 = nimCopy(result_2818587138, toSelection_2449474029(cursor_2818583556), NTI2449473547);
    break BeforeRet;
  };

  return result_2818587138;

}

function getNextFindResultJsWrapper_2818587130(self_2818587332, cursor_2818587333, offset_2818587334) {
  var result_2818587335 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818587335 = nimCopy(result_2818587335, getNextFindResult_2818583554(self_2818587332, cursor_2818587333, offset_2818587334), NTI2449473547);

  return result_2818587335;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818587130(this, cursor_, offset_));};

function addNextFindResultToSelection_2818587380(self_2818587381) {
    selectionsHEX3D_2818573083(self_2818587381, HEX26_2818586565(selections_2818572802(self_2818587381), [nimCopy(null, getNextFindResult_2818583554(self_2818587381, selection_2818572805(self_2818587381).Field1, 0), NTI2449473547)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818587376(self_2818587417) {
    addNextFindResultToSelection_2818587380(self_2818587417);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818587376(this));};

function addPrevFindResultToSelection_2818587438(self_2818587439) {
    selectionsHEX3D_2818573083(self_2818587439, HEX26_2818586565(selections_2818572802(self_2818587439), [nimCopy(null, getPrevFindResult_2818583550(self_2818587439, selection_2818572805(self_2818587439).Field0, 0), NTI2449473547)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818587434(self_2818587475) {
    addPrevFindResultToSelection_2818587438(self_2818587475);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818587434(this));};

function len_2818587567(t_2818587570) {
  var result_2818587571 = 0;

    result_2818587571 = t_2818587570.counter;

  return result_2818587571;

}

function setAllFindResultToSelection_2818587496(self_2818587497) {
    var selections_2818587502 = [];
    Label1: {
      var searchResults_2818587804 = [];
      var L_2818587873 = len_2818587567(self_2818587497.searchResults);
      Label2: {
        var h_2818587875 = 0;
        var colontmp__2818587876 = 0;
        colontmp__2818587876 = (self_2818587497.searchResults.data).length - 1;
        var res_2818587877 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818587877 <= colontmp__2818587876)) break Label4;
              h_2818587875 = res_2818587877;
              if (isFilled_1308622880(self_2818587497.searchResults.data[chckIndx(h_2818587875, 0, (self_2818587497.searchResults.data).length - 1)].Field0)) {
              searchResults_2818587804 = self_2818587497.searchResults.data[chckIndx(h_2818587875, 0, (self_2818587497.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818587808 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818587866 = 0;
                var L_2818587867 = (searchResults_2818587804).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818587866 < L_2818587867)) break Label7;
                      s_2818587808 = searchResults_2818587804[chckIndx(i_2818587866, 0, (searchResults_2818587804).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818587808, NTI2449473547);
                      selections_2818587502.push(Temporary8);;
                      i_2818587866 = addInt(i_2818587866, 1);
                      if (!(((searchResults_2818587804).length == L_2818587867))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818587567(self_2818587497.searchResults) == L_2818587873))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818587877 = addInt(res_2818587877, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573083(self_2818587497, selections_2818587502);

  
}

function setAllFindResultToSelectionJsWrapper_2818587492(self_2818587849) {
    setAllFindResultToSelection_2818587496(self_2818587849);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818587492(this));};

function clearSelections_2818587885(self_2818587886) {
    if ((1 < (selections_2818572802(self_2818587886)).length)) {
    selectionHEX3D_2818572811(self_2818587886, selection_2818572805(self_2818587886));
    }
    else {
    selectionHEX3D_2818572811(self_2818587886, toSelection_2449474029(selection_2818572805(self_2818587886).Field1));
    }
    

  
}

function clearSelectionsJsWrapper_2818587881(self_2818587920) {
    clearSelections_2818587885(self_2818587920);

  
}
editor_text_prototype.clearSelections = function() { return (clearSelectionsJsWrapper_2818587881(this));};

function map_2818583759(s_2818583762, op_2818583764) {
  var result_2818583765 = [];

    result_2818583765 = new Array(chckRange((s_2818583762).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818583762).length, 0, 2147483647) ; ++i) { result_2818583765[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818583780 = 0;
      var colontmp__2818588040 = 0;
      colontmp__2818588040 = (s_2818583762).length;
      var i_2818588041 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588041 < colontmp__2818588040)) break Label3;
            i_2818583780 = i_2818588041;
            result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)] = nimCopy(result_2818583765[chckIndx(i_2818583780, 0, (result_2818583765).length - 1)], op_2818583764(s_2818583762[chckIndx(i_2818583780, 0, (s_2818583762).length - 1)]), NTI2818578483);
            i_2818588041 = addInt(i_2818588041, 1);
          }
      };
    };

  return result_2818583765;

}

function moveCursor_2818583704(self_2818583705, cursor_2818583706, movement_2818583711, offset_2818583712, all_2818583713) {
      
function HEX3Aanonymous_2818583724(s_2818583731) {
        var result_2818583734 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818583734 = nimCopy(result_2818583734, toSelection_2449474029(movement_2818583711(self_2818583705, s_2818583731.Field1, offset_2818583712)), NTI2449473547);

        return result_2818583734;

      }
      
function HEX3Aanonymous_2818583748(s_2818583755) {
        var result_2818583758 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588027 = movement_2818583711(self_2818583705, s_2818583755.Field0, offset_2818583712);
          var colontmp__2818588028 = nimCopy(null, s_2818583755.Field1, NTI2449473545);
          result_2818583758 = nimCopy(result_2818583758, {Field0: nimCopy(null, colontmp__2818588027, NTI2449473545), Field1: nimCopy(null, colontmp__2818588028, NTI2449473545)}, NTI2818578483);

        return result_2818583758;

      }
      
function HEX3Aanonymous_2818583791(s_2818583798) {
        var result_2818583801 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588031 = nimCopy(null, s_2818583798.Field0, NTI2449473545);
          var colontmp__2818588032 = movement_2818583711(self_2818583705, s_2818583798.Field1, offset_2818583712);
          result_2818583801 = nimCopy(result_2818583801, {Field0: nimCopy(null, colontmp__2818588031, NTI2449473545), Field1: nimCopy(null, colontmp__2818588032, NTI2449473545)}, NTI2818578525);

        return result_2818583801;

      }
      
function HEX3Aanonymous_2818583818(s_2818583825) {
        var result_2818583828 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818588035 = nimCopy(null, s_2818583825.Field1, NTI2449473545);
          var colontmp__2818588036 = movement_2818583711(self_2818583705, s_2818583825.Field1, offset_2818583712);
          result_2818583828 = nimCopy(result_2818583828, {Field0: nimCopy(null, colontmp__2818588035, NTI2449473545), Field1: nimCopy(null, colontmp__2818588036, NTI2449473545)}, NTI2818578557);

        return result_2818583828;

      }

    switch (cursor_2818583706) {
    case 0:
      var configCursor_2818583723 = getOption_2818583643(self_2818583705.editor, getContextWithMode_2818583609(self_2818583705, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818583704(self_2818583705, configCursor_2818583723, movement_2818583711, offset_2818583712, all_2818583713);
      break;
    case 1:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818572735(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583724));
      }
      else {
        var selections_2818583741 = selections_2818572802(self_2818583705);
        selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)] = nimCopy(selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)], toSelection_2449474029(movement_2818583711(self_2818583705, selections_2818583741[chckIndx((selections_2818583741).length - 1, 0, (selections_2818583741).length - 1)].Field1, offset_2818583712)), NTI2449473547);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583741);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 2:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583748));
      }
      else {
        var selections_2818583781 = selections_2818572802(self_2818583705);
        var colontmp__2818588029 = movement_2818583711(self_2818583705, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field0, offset_2818583712);
        var colontmp__2818588030 = nimCopy(null, selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)].Field1, NTI2449473545);
        selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)] = nimCopy(selections_2818583781[chckIndx((selections_2818583781).length - 1, 0, (selections_2818583781).length - 1)], {Field0: nimCopy(null, colontmp__2818588029, NTI2449473545), Field1: nimCopy(null, colontmp__2818588030, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583781);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field0, false);
      break;
    case 3:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583791));
      }
      else {
        var selections_2818583808 = selections_2818572802(self_2818583705);
        var colontmp__2818588033 = nimCopy(null, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field0, NTI2449473545);
        var colontmp__2818588034 = movement_2818583711(self_2818583705, selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)].Field1, offset_2818583712);
        selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)] = nimCopy(selections_2818583808[chckIndx((selections_2818583808).length - 1, 0, (selections_2818583808).length - 1)], {Field0: nimCopy(null, colontmp__2818588033, NTI2449473545), Field1: nimCopy(null, colontmp__2818588034, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583808);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    case 4:
      if (all_2818583713) {
      selectionsHEX3D_2818573083(self_2818583705, map_2818583759(selections_2818572802(self_2818583705), HEX3Aanonymous_2818583818));
      }
      else {
        var selections_2818583835 = selections_2818572802(self_2818583705);
        var colontmp__2818588037 = nimCopy(null, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, NTI2449473545);
        var colontmp__2818588038 = movement_2818583711(self_2818583705, selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)].Field1, offset_2818583712);
        selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)] = nimCopy(selections_2818583835[chckIndx((selections_2818583835).length - 1, 0, (selections_2818583835).length - 1)], {Field0: nimCopy(null, colontmp__2818588037, NTI2449473545), Field1: nimCopy(null, colontmp__2818588038, NTI2449473545)}, NTI2449473547);
        selectionsHEX3D_2818573083(self_2818583705, selections_2818583835);
      }
      
      scrollToCursor_2818583568(self_2818583705, selection_2818572805(self_2818583705).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818587941(self_2818587942, distance_2818587943, cursor_2818587944, all_2818587945) {
    moveCursor_2818583704(self_2818587942, cursor_2818587944, doMoveCursorColumn_2818583517, distance_2818587943, all_2818587945);
    updateTargetColumn_2818584601(self_2818587942, cursor_2818587944);

  
}

function moveCursorColumnJsWrapper_2818587937(self_2818587994, distance_2818587995, cursor_2818587996, all_2818587997) {
    moveCursorColumn_2818587941(self_2818587994, distance_2818587995, cursor_2818587996, all_2818587997);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818587937(this, distance_, cursor_, all_));};

function moveCursorLine_2818588049(self_2818588050, distance_2818588051, cursor_2818588052, all_2818588053) {
    moveCursor_2818583704(self_2818588050, cursor_2818588052, doMoveCursorLine_2818583527, distance_2818588051, all_2818588053);

  
}

function moveCursorLineJsWrapper_2818588045(self_2818588084, distance_2818588085, cursor_2818588086, all_2818588087) {
    moveCursorLine_2818588049(self_2818588084, distance_2818588085, cursor_2818588086, all_2818588087);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818588045(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818583540(self_2818583541, cursor_2818583542, offset_2818583543) {
  var result_2818583544 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588183 = cursor_2818583542.Field0;
    var colontmp__2818588184 = 0;
    result_2818583544 = nimCopy(result_2818583544, {Field0: colontmp__2818588183, Field1: colontmp__2818588184}, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583544;

}

function moveCursorHome_2818588123(self_2818588124, cursor_2818588125, all_2818588126) {
    moveCursor_2818583704(self_2818588124, cursor_2818588125, doMoveCursorHome_2818583540, 0, all_2818588126);
    updateTargetColumn_2818584601(self_2818588124, cursor_2818588125);

  
}

function moveCursorHomeJsWrapper_2818588119(self_2818588156, cursor_2818588157, all_2818588158) {
    moveCursorHome_2818588123(self_2818588156, cursor_2818588157, all_2818588158);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818588119(this, cursor_, all_));};

function doMoveCursorEnd_2818583545(self_2818583546, cursor_2818583547, offset_2818583548) {
  var result_2818583549 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818588251 = cursor_2818583547.Field0;
    var colontmp__2818588252 = lineLength_2818572673(self_2818583546.document, cursor_2818583547.Field0);
    result_2818583549 = nimCopy(result_2818583549, {Field0: colontmp__2818588251, Field1: colontmp__2818588252}, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583549;

}

function moveCursorEnd_2818588191(self_2818588192, cursor_2818588193, all_2818588194) {
    moveCursor_2818583704(self_2818588192, cursor_2818588193, doMoveCursorEnd_2818583545, 0, all_2818588194);
    updateTargetColumn_2818584601(self_2818588192, cursor_2818588193);

  
}

function moveCursorEndJsWrapper_2818588187(self_2818588224, cursor_2818588225, all_2818588226) {
    moveCursorEnd_2818588191(self_2818588224, cursor_2818588225, all_2818588226);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818588187(this, cursor_, all_));};

function getLine_2818572666(self_2818572667, line_2818572668) {
  var result_2818572669 = [];

  BeforeRet: {
    if ((line_2818572668 < (self_2818572667.lines).length)) {
    result_2818572669 = nimCopy(null, self_2818572667.lines[chckIndx(line_2818572668, 0, (self_2818572667.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572669 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572669;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818588259(self_2818588260, str_2818588261, cursor_2818588262, all_2818588263) {
    str_2818588261 = nimCopy(null, str_2818588261, NTI33554449);
    
function doMoveCursorTo_2818588264(self_2818588265, cursor_2818588266, offset_2818588267) {
      var result_2818588268 = {Field0: 0, Field1: 0};

        var line_2818588269 = getLine_2818572666(self_2818588265.document, cursor_2818588266.Field0);
        result_2818588268 = nimCopy(result_2818588268, cursor_2818588266, NTI2449473545);
        var index_2818588270 = nsuFindStr(line_2818588269, str_2818588261, chckRange(addInt(cursor_2818588266.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818588270)) {
        var colontmp__2818588334 = cursor_2818588266.Field0;
        var colontmp__2818588335 = index_2818588270;
        result_2818588268 = nimCopy(result_2818588268, {Field0: colontmp__2818588334, Field1: colontmp__2818588335}, NTI2449473545);
        }
        

      return result_2818588268;

    }

    moveCursor_2818583704(self_2818588260, cursor_2818588262, doMoveCursorTo_2818588264, 0, all_2818588263);
    updateTargetColumn_2818584601(self_2818588260, cursor_2818588262);

  
}

function moveCursorToJsWrapper_2818588255(self_2818588301, str_2818588302, cursor_2818588303, all_2818588304) {
    moveCursorTo_2818588259(self_2818588301, str_2818588302, cursor_2818588303, all_2818588304);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818588255(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818588342(self_2818588343, str_2818588344, cursor_2818588345, all_2818588346) {
    str_2818588344 = nimCopy(null, str_2818588344, NTI33554449);
    
function doMoveCursorBefore_2818588347(self_2818588348, cursor_2818588349, offset_2818588350) {
      var result_2818588351 = {Field0: 0, Field1: 0};

        var line_2818588352 = getLine_2818572666(self_2818588348.document, cursor_2818588349.Field0);
        result_2818588351 = nimCopy(result_2818588351, cursor_2818588349, NTI2449473545);
        var index_2818588353 = nsuFindStr(line_2818588352, str_2818588344, chckRange(cursor_2818588349.Field1, 0, 2147483647), -1);
        if ((0 < index_2818588353)) {
        var colontmp__2818588417 = cursor_2818588349.Field0;
        var colontmp__2818588418 = subInt(index_2818588353, 1);
        result_2818588351 = nimCopy(result_2818588351, {Field0: colontmp__2818588417, Field1: colontmp__2818588418}, NTI2449473545);
        }
        

      return result_2818588351;

    }

    moveCursor_2818583704(self_2818588343, cursor_2818588345, doMoveCursorBefore_2818588347, 0, all_2818588346);
    updateTargetColumn_2818584601(self_2818588343, cursor_2818588345);

  
}

function moveCursorBeforeJsWrapper_2818588338(self_2818588384, str_2818588385, cursor_2818588386, all_2818588387) {
    moveCursorBefore_2818588342(self_2818588384, str_2818588385, cursor_2818588386, all_2818588387);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818588338(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818583563(self_2818583564, cursor_2818583565, offset_2818583566) {
  var result_2818583567 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583567 = nimCopy(result_2818583567, getNextFindResult_2818583554(self_2818583564, cursor_2818583565, offset_2818583566).Field0, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583567;

}

function moveCursorNextFindResult_2818588425(self_2818588426, cursor_2818588427, all_2818588428) {
    moveCursor_2818583704(self_2818588426, cursor_2818588427, doMoveCursorNextFindResult_2818583563, 0, all_2818588428);
    updateTargetColumn_2818584601(self_2818588426, cursor_2818588427);

  
}

function moveCursorNextFindResultJsWrapper_2818588421(self_2818588458, cursor_2818588459, all_2818588460) {
    moveCursorNextFindResult_2818588425(self_2818588458, cursor_2818588459, all_2818588460);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818588421(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818583558(self_2818583559, cursor_2818583560, offset_2818583561) {
  var result_2818583562 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818583562 = nimCopy(result_2818583562, getPrevFindResult_2818583550(self_2818583559, cursor_2818583560, offset_2818583561).Field0, NTI2449473545);
    break BeforeRet;
  };

  return result_2818583562;

}

function moveCursorPrevFindResult_2818588491(self_2818588492, cursor_2818588493, all_2818588494) {
    moveCursor_2818583704(self_2818588492, cursor_2818588493, doMoveCursorPrevFindResult_2818583558, 0, all_2818588494);
    updateTargetColumn_2818584601(self_2818588492, cursor_2818588493);

  
}

function moveCursorPrevFindResultJsWrapper_2818588487(self_2818588524, cursor_2818588525, all_2818588526) {
    moveCursorPrevFindResult_2818588491(self_2818588524, cursor_2818588525, all_2818588526);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818588487(this, cursor_, all_));};

function scrollToCursor_2818584038(self_2818584039, cursor_2818584040) {
    scrollToCursor_2818583568(self_2818584039, getCursor_2818583639(self_2818584039, cursor_2818584040), false);

  
}

function scrollToCursorJsWrapper_2818588553(self_2818588588, cursor_2818588589) {
    scrollToCursor_2818584038(self_2818588588, cursor_2818588589);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818588553(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818588660 = 0;
      colontmp__2818588660 = subInt((path_1426063614).length, 1);
      var res_2818588661 = colontmp__2818588660;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818588661)) break Label3;
            i_1426063627 = res_2818588661;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818588661 = subInt(res_2818588661, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2348810263() {
  var result_2348810270 = ({val: [], has: false});

  return result_2348810270;

}

function some_2281701410(val_2281701412) {
  var result_2281701413 = ({val: [], has: false});

    result_2281701413.has = true;
    result_2281701413.val = nimCopy(null, val_2281701412, NTI33554449);

  return result_2281701413;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2348810263(), NTI2348810261);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2281701410(languageId_2902458407), NTI2348810261);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2348810304(self_2348810306) {
  var result_2348810307 = false;

    result_2348810307 = self_2348810306.has;

  return result_2348810307;

}

function isNone_2818578915(self_2818578917) {
  var result_2818578918 = false;

    result_2818578918 = !(self_2818578917.has);

  return result_2818578918;

}

function get_2818578907(self_2818578909) {
  var result_2818578910 = [];

    if (isNone_2818578915(self_2818578909)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578910 = self_2818578909["val"];

  return result_2818578910;

}

function getOption_2818578923(editor_2818578925, path_2818578926, default_2818578927) {
  var result_2818578933 = null;

  BeforeRet: {
    if ((editor_2818578925 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    var node_2818578945 = HEX7BHEX7D_1627393316(editor_2818578925.options, nsuSplitString(path_2818578926, [46], -1));
    if ((node_2818578945 == null)) {
    result_2818578933 = default_2818578927;
    break BeforeRet;
    }
    
    result_2818578933 = node_2818578945;
    break BeforeRet;
  };

  return result_2818578933;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578959(self_2818578961) {
  var result_2818578962 = false;

    result_2818578962 = (self_2818578961.val == null);

  return result_2818578962;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578992(self_2818578994) {
  var result_2818578995 = null;
  var result_2818578995_Idx = 0;

  BeforeRet: {
    if (isNone_2818578959(self_2818578994)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578995 = self_2818578994; result_2818578995_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578995, result_2818578995_Idx];

}

function contentString_2818574088(document_2818574089) {
  var result_2818574090 = [];

  BeforeRet: {
    result_2818574090 = nimCopy(null, nsuJoinSep(document_2818574089.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818574090;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578870(self_2818578871) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578873 = null;

  BeforeRet: {
    if (!((self_2818578871.tsParser == null))) {
    deinit_2885681592(self_2818578871.tsParser);
    self_2818578871.tsParser = null;
    }
    
    if (!((self_2818578871.highlightQuery == null))) {
    deinit_2885681594(self_2818578871.highlightQuery);
    self_2818578871.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578887 = getLanguageForFile_2902458372(self_2818578871.filename);
      if (!isSome_2348810304(oHEX60gensym88_2818578887)) Temporary2 = false; else {        var languageId_2818578921 = nimCopy(null, get_2818578907(oHEX60gensym88_2818578887), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578921;
    }
    else {
      result_2818578873 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578922 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578949 = getOption_2818578923(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578922 || []), newJObject_1627390051());
    var language_2818578954 = [(await loadLanguage_2885681535(languageId_2818578922, config_2818578949))];
    if (isNone_2818578959(language_2818578954[0])) {
    var fmtRes_2818578971 = [mnewString(0)];
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578971, 0, languageId_2818578922, []);
    fmtRes_2818578971[0].push.apply(fmtRes_2818578971[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578971[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser = createTsParser_2885681581();
    if ((self_2818578871.tsParser == null)) {
    var fmtRes_2818578979 = [mnewString(0)];
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578979, 0, languageId_2818578922, []);
    fmtRes_2818578979[0].push.apply(fmtRes_2818578979[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578979[0], NTI33554449)]);
    result_2818578873 = undefined;
    break BeforeRet;
    }
    
    self_2818578871.tsParser.setLanguage((Temporary3 = get_2818578992(language_2818578954[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578871.tsLanguage = (Temporary4 = get_2818578992(language_2818578954[0]), Temporary4)[0][Temporary4[1]];
    self_2818578871.currentTree = parseString_2885681211(self_2818578871.tsParser, contentString_2818574088(self_2818578871), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818579032 = [mnewString(0)];
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818579032, 0, languageId_2818578922, []);
    fmtRes_2818579032[0].push.apply(fmtRes_2818579032[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818579033 = loadFile_2365587463(fs_2365587509, fmtRes_2818579032[0]);
    self_2818578871.highlightQuery = (Temporary6 = get_2818578992(language_2818578954[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818579033));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818579053 = [mnewString(0)];
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818579053, 0, languageId_2818578922, []);
    fmtRes_2818579053[0].push.apply(fmtRes_2818579053[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818579053[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573268(self_2818578871);
    requestRender_2768240746(gEditor.platform, false);
    result_2818578873 = undefined;
    break BeforeRet;
  };

  return result_2818578873;

}

function reloadTreesitter_2818588615(self_2818588616) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578870(self_2818588616.document);

  
}

function reloadTreesitterJsWrapper_2818588611(self_2818588644) {
    reloadTreesitter_2818588615(self_2818588644);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818588611(this));};

function deleteLeft_2818588671(self_2818588672) {
    var selections_2818588673 = selections_2818572802(self_2818588672);
    Label1: {
      var i_2818588679 = 0;
      var selection_2818588680 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588726 = 0;
      var L_2818588727 = (selections_2818588673).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588726 < L_2818588727)) break Label3;
            i_2818588679 = i_2818588726;
            selection_2818588680 = nimCopy(selection_2818588680, selections_2818588673[chckIndx(i_2818588726, 0, (selections_2818588673).length - 1)], NTI2449473547);
            if (isEmpty_2449473908(selection_2818588680)) {
            var colontmp__2818588724 = doMoveCursorColumn_2818583517(self_2818588672, selection_2818588680.Field0, -1);
            var colontmp__2818588725 = nimCopy(null, selection_2818588680.Field0, NTI2449473545);
            selections_2818588673[chckIndx(i_2818588679, 0, (selections_2818588673).length - 1)] = nimCopy(selections_2818588673[chckIndx(i_2818588679, 0, (selections_2818588673).length - 1)], {Field0: nimCopy(null, colontmp__2818588724, NTI2449473545), Field1: nimCopy(null, colontmp__2818588725, NTI2449473545)}, NTI2449473547);
            }
            
            i_2818588726 = addInt(i_2818588726, 1);
            if (!(((selections_2818588673).length == L_2818588727))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588672, delete_2818579356(self_2818588672.document, selections_2818588673, selections_2818572802(self_2818588672), true, true));
    updateTargetColumn_2818584601(self_2818588672, 3);

  
}

function deleteLeftJsWrapper_2818588667(self_2818588708) {
    deleteLeft_2818588671(self_2818588708);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818588667(this));};

function deleteRight_2818588735(self_2818588736) {
    var selections_2818588737 = selections_2818572802(self_2818588736);
    Label1: {
      var i_2818588743 = 0;
      var selection_2818588744 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818588790 = 0;
      var L_2818588791 = (selections_2818588737).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588790 < L_2818588791)) break Label3;
            i_2818588743 = i_2818588790;
            selection_2818588744 = nimCopy(selection_2818588744, selections_2818588737[chckIndx(i_2818588790, 0, (selections_2818588737).length - 1)], NTI2449473547);
            if (isEmpty_2449473908(selection_2818588744)) {
            var colontmp__2818588788 = nimCopy(null, selection_2818588744.Field0, NTI2449473545);
            var colontmp__2818588789 = doMoveCursorColumn_2818583517(self_2818588736, selection_2818588744.Field0, 1);
            selections_2818588737[chckIndx(i_2818588743, 0, (selections_2818588737).length - 1)] = nimCopy(selections_2818588737[chckIndx(i_2818588743, 0, (selections_2818588737).length - 1)], {Field0: nimCopy(null, colontmp__2818588788, NTI2449473545), Field1: nimCopy(null, colontmp__2818588789, NTI2449473545)}, NTI2449473547);
            }
            
            i_2818588790 = addInt(i_2818588790, 1);
            if (!(((selections_2818588737).length == L_2818588791))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573083(self_2818588736, delete_2818579356(self_2818588736.document, selections_2818588737, selections_2818572802(self_2818588736), true, true));
    updateTargetColumn_2818584601(self_2818588736, 3);

  
}

function deleteRightJsWrapper_2818588731(self_2818588772) {
    deleteRight_2818588735(self_2818588772);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818588731(this));};

function getCommandCount_2818588799(self_2818588800) {
  var result_2818588801 = 0;

  BeforeRet: {
    result_2818588801 = self_2818588800.commandCount;
    break BeforeRet;
  };

  return result_2818588801;

}

function getCommandCountJsWrapper_2818588795(self_2818588830) {
  var result_2818588831 = 0;

    result_2818588831 = getCommandCount_2818588799(self_2818588830);

  return result_2818588831;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818588795(this));};

function setCommandCount_2818588856(self_2818588857, count_2818588858) {
    self_2818588857.commandCount = count_2818588858;

  
}

function setCommandCountJsWrapper_2818588852(self_2818588887, count_2818588888) {
    setCommandCount_2818588856(self_2818588887, count_2818588888);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818588852(this, count_));};

function setCommandCountRestore_2818588914(self_2818588915, count_2818588916) {
    self_2818588915.commandCountRestore = count_2818588916;

  
}

function setCommandCountRestoreJsWrapper_2818588910(self_2818588945, count_2818588946) {
    setCommandCountRestore_2818588914(self_2818588945, count_2818588946);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818588910(this, count_));};

function updateCommandCount_2818588972(self_2818588973, digit_2818588974) {
    self_2818588973.commandCount = addInt(mulInt(self_2818588973.commandCount, 10), digit_2818588974);

  
}

function updateCommandCountJsWrapper_2818588968(self_2818589003, digit_2818589004) {
    updateCommandCount_2818588972(self_2818589003, digit_2818589004);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818588968(this, digit_));};

function setFlag_2818589030(self_2818589031, name_2818589032, value_2818589033) {
    setFlag_1291848951(self_2818589031.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589032 || []), value_2818589033);
    markDirty_2415919143(self_2818589031);

  
}

function setFlagJsWrapper_2818589026(self_2818589063, name_2818589064, value_2818589065) {
    setFlag_2818589030(self_2818589063, name_2818589064, value_2818589065);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818589026(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818589096(self_2818589097, name_2818589098) {
  var result_2818589099 = false;

  BeforeRet: {
    result_2818589099 = getFlag_1291848874(self_2818589097.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818589098 || []), false);
    break BeforeRet;
  };

  return result_2818589099;

}

function getFlagJsWrapper_2818589092(self_2818589129, name_2818589130) {
  var result_2818589131 = false;

    result_2818589131 = getFlag_2818589096(self_2818589129, name_2818589130);

  return result_2818589131;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818589092(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818589166(self_2818589167, action_2818589168, args_2818589169) {
  var result_2818589170 = false;

  BeforeRet: {
    result_2818589170 = (handleActionInternal_2818572659(self_2818589167, action_2818589168, args_2818589169) == 3);
    break BeforeRet;
  };

  return result_2818589170;

}

function runActionJsWrapper_2818589162(self_2818589205, action_2818589206, args_2818589207) {
  var result_2818589208 = false;

    result_2818589208 = runAction_2818589166(self_2818589205, action_2818589206, args_2818589207);

  return result_2818589208;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818589162(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818589232(c_2818589233) {
  var result_2818589234 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818589233) || (c_2818589233 == 95))) {
    result_2818589234 = 0;
    break BeforeRet;
    }
    
    if (((c_2818589233 == 32) || (c_2818589233 == 9))) {
    result_2818589234 = 1;
    break BeforeRet;
    }
    
    result_2818589234 = 2;
    break BeforeRet;
  };

  return result_2818589234;

}

function findWordBoundary_2818589241(self_2818589242, cursor_2818589243) {
  var result_2818589244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818589245 = getLine_2818572666(self_2818589242.document, cursor_2818589243.Field0);
    result_2818589244 = nimCopy(result_2818589244, toSelection_2449474029(cursor_2818589243), NTI2449473547);
    if ((result_2818589244.Field0.Field1 == (line_2818589245).length)) {
    result_2818589244.Field0.Field1 = subInt(result_2818589244.Field0.Field1, 1);
    result_2818589244.Field1.Field1 = subInt(result_2818589244.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818589244.Field0.Field1) && (result_2818589244.Field0.Field1 < (line_2818589245).length))) break Label2;
          var leftCategory_2818589256 = charCategory_2818589232(line_2818589245[chckIndx(subInt(result_2818589244.Field0.Field1, 1), 0, (line_2818589245).length - 1)]);
          var rightCategory_2818589257 = charCategory_2818589232(line_2818589245[chckIndx(result_2818589244.Field0.Field1, 0, (line_2818589245).length - 1)]);
          if (!((leftCategory_2818589256 == rightCategory_2818589257))) {
          break Label1;
          }
          
          result_2818589244.Field0.Field1 = subInt(result_2818589244.Field0.Field1, 1);
        }
    };
    if ((result_2818589244.Field1.Field1 < (line_2818589245).length)) {
    result_2818589244.Field1.Field1 = addInt(result_2818589244.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818589244.Field1.Field1) && (result_2818589244.Field1.Field1 < (line_2818589245).length))) break Label4;
          var leftCategory_2818589266 = charCategory_2818589232(line_2818589245[chckIndx(subInt(result_2818589244.Field1.Field1, 1), 0, (line_2818589245).length - 1)]);
          var rightCategory_2818589267 = charCategory_2818589232(line_2818589245[chckIndx(result_2818589244.Field1.Field1, 0, (line_2818589245).length - 1)]);
          if (!((leftCategory_2818589266 == rightCategory_2818589267))) {
          break Label3;
          }
          
          result_2818589244.Field1.Field1 = addInt(result_2818589244.Field1.Field1, 1);
        }
    };

  return result_2818589244;

}

function findWordBoundaryJsWrapper_2818589237(self_2818589301, cursor_2818589302) {
  var result_2818589303 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589303 = nimCopy(result_2818589303, findWordBoundary_2818589241(self_2818589301, cursor_2818589302), NTI2449473547);

  return result_2818589303;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818589237(this, cursor_));};

function min_2449473871(a_2449473872, b_2449473873) {
  var result_2449473874 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2449473863(a_2449473872, b_2449473873)) {
    result_2449473874 = nimCopy(result_2449473874, a_2449473872, NTI2449473545);
    break BeforeRet;
    }
    
    result_2449473874 = nimCopy(result_2449473874, b_2449473873, NTI2449473545);
    break BeforeRet;
  };

  return result_2449473874;

}

function max_2449473875(a_2449473876, b_2449473877) {
  var result_2449473878 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2449473879(b_2449473877, a_2449473876)) {
    result_2449473878 = nimCopy(result_2449473878, a_2449473876, NTI2449473545);
    break BeforeRet;
    }
    
    result_2449473878 = nimCopy(result_2449473878, b_2449473877, NTI2449473545);
    break BeforeRet;
  };

  return result_2449473878;

}

function or_2449474023(a_2449474024, b_2449474025) {
  var result_2449474026 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2449474027 = normalized_2449473902(a_2449474024);
    var bn_2449474028 = normalized_2449473902(b_2449474025);
    var colontmp__2818589545 = min_2449473871(an_2449474027.Field0, bn_2449474028.Field0);
    var colontmp__2818589546 = max_2449473875(an_2449474027.Field1, bn_2449474028.Field1);
    result_2449474026 = nimCopy(result_2449474026, {Field0: nimCopy(null, colontmp__2818589545, NTI2449473545), Field1: nimCopy(null, colontmp__2818589546, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
  };

  return result_2449474026;

}

function reverse_2449473905(selection_2449473906) {
  var result_2449473907 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818589547 = nimCopy(null, selection_2449473906.Field1, NTI2449473545);
    var colontmp__2818589548 = nimCopy(null, selection_2449473906.Field0, NTI2449473545);
    result_2449473907 = nimCopy(result_2449473907, {Field0: nimCopy(null, colontmp__2818589547, NTI2449473545), Field1: nimCopy(null, colontmp__2818589548, NTI2449473545)}, NTI2449473547);

  return result_2449473907;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818589335(self_2818589336, cursor_2818589337, move_2818589338, count_2818589339) {
  var result_2818589340 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818589338)) {
    case "word":
      result_2818589340 = nimCopy(result_2818589340, findWordBoundary_2818589241(self_2818589336, cursor_2818589337), NTI2449473547);
      Label1: {
        var __2818589345 = 0;
        var i_2818589503 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818589503 < count_2818589339)) break Label3;
              __2818589345 = i_2818589503;
              result_2818589340 = nimCopy(result_2818589340, or_2449474023(or_2449474023(result_2818589340, findWordBoundary_2818589241(self_2818589336, result_2818589340.Field1)), findWordBoundary_2818589241(self_2818589336, result_2818589340.Field0)), NTI2449473547);
              i_2818589503 = addInt(i_2818589503, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818589346 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, findWordBoundary_2818589241(self_2818589336, cursor_2818589337), NTI2449473547);
      if (((cursor_2818589337.Field1 == 0) && (0 < cursor_2818589337.Field0))) {
      var colontmp__2818589505 = subInt(cursor_2818589337.Field0, 1);
      var colontmp__2818589506 = (getLine_2818572666(self_2818589336.document, subInt(cursor_2818589337.Field0, 1))).length;
      result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589505, Field1: colontmp__2818589506}, NTI2449473545);
      }
      
      if (((cursor_2818589337.Field1 == (line_2818589346).length) && (cursor_2818589337.Field0 < subInt((self_2818589336.document.lines).length, 1)))) {
      var colontmp__2818589507 = addInt(cursor_2818589337.Field0, 1);
      var colontmp__2818589508 = 0;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589507, Field1: colontmp__2818589508}, NTI2449473545);
      }
      
      Label4: {
        var __2818589354 = 0;
        var i_2818589514 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818589514 < count_2818589339)) break Label6;
              __2818589354 = i_2818589514;
              result_2818589340 = nimCopy(result_2818589340, or_2449474023(or_2449474023(result_2818589340, findWordBoundary_2818589241(self_2818589336, result_2818589340.Field1)), findWordBoundary_2818589241(self_2818589336, result_2818589340.Field0)), NTI2449473547);
              var line_2818589355 = getLine_2818572666(self_2818589336.document, result_2818589340.Field1.Field0);
              if (((result_2818589340.Field0.Field1 == 0) && (0 < result_2818589340.Field0.Field0))) {
              var colontmp__2818589510 = subInt(result_2818589340.Field0.Field0, 1);
              var colontmp__2818589511 = (getLine_2818572666(self_2818589336.document, subInt(result_2818589340.Field0.Field0, 1))).length;
              result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589510, Field1: colontmp__2818589511}, NTI2449473545);
              }
              
              if (((result_2818589340.Field1.Field1 == (line_2818589355).length) && (result_2818589340.Field1.Field0 < subInt((self_2818589336.document.lines).length, 1)))) {
              var colontmp__2818589512 = addInt(result_2818589340.Field1.Field0, 1);
              var colontmp__2818589513 = 0;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589512, Field1: colontmp__2818589513}, NTI2449473545);
              }
              
              i_2818589514 = addInt(i_2818589514, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818589340 = nimCopy(result_2818589340, reverse_2449473905(getSelectionForMove_2818589335(self_2818589336, {Field0: cursor_2818589337.Field0, Field1: nimMax(0, subInt(cursor_2818589337.Field1, 1))}, [119,111,114,100], count_2818589339)), NTI2449473547);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818589340 = nimCopy(result_2818589340, reverse_2449473905(getSelectionForMove_2818589335(self_2818589336, {Field0: cursor_2818589337.Field0, Field1: nimMax(0, subInt(cursor_2818589337.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818589339)), NTI2449473547);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818589516 = {Field0: cursor_2818589337.Field0, Field1: 0};
      var colontmp__2818589517 = {Field0: cursor_2818589337.Field0, Field1: (getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0)).length};
      result_2818589340 = nimCopy(result_2818589340, {Field0: nimCopy(null, colontmp__2818589516, NTI2449473545), Field1: nimCopy(null, colontmp__2818589517, NTI2449473545)}, NTI2449473547);
      break;
    case "line-next":
      var colontmp__2818589518 = {Field0: cursor_2818589337.Field0, Field1: 0};
      var colontmp__2818589519 = {Field0: cursor_2818589337.Field0, Field1: (getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0)).length};
      result_2818589340 = nimCopy(result_2818589340, {Field0: nimCopy(null, colontmp__2818589518, NTI2449473545), Field1: nimCopy(null, colontmp__2818589519, NTI2449473545)}, NTI2449473547);
      if ((addInt(result_2818589340.Field1.Field0, 1) < (self_2818589336.document.lines).length)) {
      var colontmp__2818589520 = addInt(result_2818589340.Field1.Field0, 1);
      var colontmp__2818589521 = 0;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589520, Field1: colontmp__2818589521}, NTI2449473545);
      }
      
      Label7: {
        var __2818589366 = 0;
        var i_2818589525 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818589525 < count_2818589339)) break Label9;
              __2818589366 = i_2818589525;
              result_2818589340 = nimCopy(result_2818589340, or_2449474023(result_2818589340, {Field0: {Field0: result_2818589340.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818589340.Field1.Field0, Field1: (getLine_2818572666(self_2818589336.document, result_2818589340.Field1.Field0)).length}}), NTI2449473547);
              if ((addInt(result_2818589340.Field1.Field0, 1) < (self_2818589336.document.lines).length)) {
              var colontmp__2818589523 = addInt(result_2818589340.Field1.Field0, 1);
              var colontmp__2818589524 = 0;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589523, Field1: colontmp__2818589524}, NTI2449473545);
              }
              
              i_2818589525 = addInt(i_2818589525, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818589527 = 0;
      var colontmp__2818589528 = 0;
      result_2818589340.Field0 = nimCopy(result_2818589340.Field0, {Field0: colontmp__2818589527, Field1: colontmp__2818589528}, NTI2449473545);
      var line_2818589373 = subInt((self_2818589336.document.lines).length, 1);
      var colontmp__2818589529 = line_2818589373;
      var colontmp__2818589530 = (getLine_2818572666(self_2818589336.document, line_2818589373)).length;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589529, Field1: colontmp__2818589530}, NTI2449473545);
      break;
    case "prev-find-result":
      result_2818589340 = nimCopy(result_2818589340, getPrevFindResult_2818583550(self_2818589336, cursor_2818589337, count_2818589339), NTI2449473547);
      break;
    case "next-find-result":
      result_2818589340 = nimCopy(result_2818589340, getNextFindResult_2818583554(self_2818589336, cursor_2818589337, count_2818589339), NTI2449473547);
      break;
    default: 
      if (nsuStartsWith(move_2818589338, [109,111,118,101,45,116,111,32])) {
      var str_2818589392 = HEX5BHEX5D_855639319(move_2818589338, HEX2EHEX2E_1040187488(8, 1));
      var line_2818589393 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, toSelection_2449474029(cursor_2818589337), NTI2449473547);
      var index_2818589394 = nsuFindStr(line_2818589393, str_2818589392, chckRange(cursor_2818589337.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818589394)) {
      var colontmp__2818589531 = cursor_2818589337.Field0;
      var colontmp__2818589532 = addInt(index_2818589394, 1);
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589531, Field1: colontmp__2818589532}, NTI2449473545);
      }
      
      Label10: {
        var __2818589399 = 0;
        var i_2818589536 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818589536 < count_2818589339)) break Label12;
              __2818589399 = i_2818589536;
              var index_2818589400 = nsuFindStr(line_2818589393, str_2818589392, chckRange(result_2818589340.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818589400)) {
              var colontmp__2818589534 = result_2818589340.Field1.Field0;
              var colontmp__2818589535 = addInt(index_2818589400, 1);
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589534, Field1: colontmp__2818589535}, NTI2449473545);
              }
              
              i_2818589536 = addInt(i_2818589536, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818589338, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818589419 = HEX5BHEX5D_855639319(move_2818589338, HEX2EHEX2E_1040187488(12, 1));
      var line_2818589420 = getLine_2818572666(self_2818589336.document, cursor_2818589337.Field0);
      result_2818589340 = nimCopy(result_2818589340, toSelection_2449474029(cursor_2818589337), NTI2449473547);
      var index_2818589421 = nsuFindStr(line_2818589420, str_2818589419, chckRange(addInt(cursor_2818589337.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818589421)) {
      var colontmp__2818589538 = cursor_2818589337.Field0;
      var colontmp__2818589539 = index_2818589421;
      result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589538, Field1: colontmp__2818589539}, NTI2449473545);
      }
      
      Label13: {
        var __2818589426 = 0;
        var i_2818589543 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818589543 < count_2818589339)) break Label15;
              __2818589426 = i_2818589543;
              var index_2818589427 = nsuFindStr(line_2818589420, str_2818589419, chckRange(addInt(result_2818589340.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818589427)) {
              var colontmp__2818589541 = result_2818589340.Field1.Field0;
              var colontmp__2818589542 = index_2818589427;
              result_2818589340.Field1 = nimCopy(result_2818589340.Field1, {Field0: colontmp__2818589541, Field1: colontmp__2818589542}, NTI2449473545);
              }
              
              i_2818589543 = addInt(i_2818589543, 1);
            }
        };
      };
      }
      else {
        result_2818589340 = nimCopy(result_2818589340, toSelection_2449474029(cursor_2818589337), NTI2449473547);
        var fmtRes_2818589432 = [mnewString(0)];
        fmtRes_2818589432[0].push.apply(fmtRes_2818589432[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818589432, 0, move_2818589338, []);
        fmtRes_2818589432[0].push.apply(fmtRes_2818589432[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818589432[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818589340;

}

function getSelectionForMoveJsWrapper_2818589331(self_2818589464, cursor_2818589465, move_2818589466, count_2818589467) {
  var result_2818589468 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818589468 = nimCopy(result_2818589468, getSelectionForMove_2818589335(self_2818589464, cursor_2818589465, move_2818589466, count_2818589467), NTI2449473547);

  return result_2818589468;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818589331(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818589613(s_2818589617, x_2818589618) {
  var result_2818589619 = [];

    var a_2818589621 = x_2818589618.a;
    var L_2818589626 = addInt(subInt(subInt((s_2818589617).length, x_2818589618.b), a_2818589621), 1);
    result_2818589619 = new Array(chckRange(L_2818589626, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818589626, 0, 2147483647) ; ++i) { result_2818589619[i] = []; }    Label1: {
      var i_2818589635 = 0;
      var i_2818589853 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589853 < L_2818589626)) break Label3;
            i_2818589635 = i_2818589853;
            result_2818589619[chckIndx(i_2818589635, 0, (result_2818589619).length - 1)] = nimCopy(null, s_2818589617[chckIndx(addInt(i_2818589635, a_2818589621), 0, (s_2818589617).length - 1)], NTI33554449);
            i_2818589853 = addInt(i_2818589853, 1);
          }
      };
    };

  return result_2818589619;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2701132581(s_2701132583, i_2701132584) {
  var result_2701132585 = [];

    result_2701132585 = nimCopy(null, s_2701132583[chckIndx(subInt((s_2701132583).length, i_2701132584), 0, (s_2701132583).length - 1)], NTI33554449);

  return result_2701132585;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818589583(editor_2818589585, path_2818589586, value_2818589587) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589585 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym738_2818589602 = nsuSplitString(path_2818589586, [46], -1);
      var nodeHEX60gensym738_2818589603 = editor_2818589585.options;
      Label2: {
        var keyHEX60gensym738_2818589639 = [];
        var colontmp__2818589848 = [];
        colontmp__2818589848 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym738_2818589602, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589849 = 0;
        var L_2818589850 = (colontmp__2818589848).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589849 < L_2818589850)) break Label4;
              keyHEX60gensym738_2818589639 = colontmp__2818589848[chckIndx(i_2818589849, 0, (colontmp__2818589848).length - 1)];
              if (!((nodeHEX60gensym738_2818589603.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639, newJObject_1627390051());
              }
              
              nodeHEX60gensym738_2818589603 = HEX5BHEX5D_1627393037(nodeHEX60gensym738_2818589603, keyHEX60gensym738_2818589639);
              i_2818589849 = addInt(i_2818589849, 1);
              if (!(((colontmp__2818589848).length == L_2818589850))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym738_2818589603 == null) || !((nodeHEX60gensym738_2818589603.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym738_2818589603, HEX5BHEX5D_2701132581(pathItemsHEX60gensym738_2818589602, 1), newJInt_1627390040(value_2818589587));
    };
    requestRender_2768240746(editor_2818589585.platform, true);
  };

  
}

function getOption_2818589655(editor_2818589657, path_2818589658, default_2818589659) {
  var result_2818589664 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818589657 == null)) {
      result_2818589664 = nimCopy(null, default_2818589659, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym743_2818589677 = HEX7BHEX7D_1627393316(editor_2818589657.options, nsuSplitString(path_2818589658, [46], -1));
      if ((nodeHEX60gensym743_2818589677 == null)) {
      result_2818589664 = nimCopy(null, default_2818589659, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818589664 = nimCopy(null, getStr_1627390106(nodeHEX60gensym743_2818589677, default_2818589659), NTI33554449);
    break BeforeRet;
  };

  return result_2818589664;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818589681(editor_2818589683, path_2818589684, default_2818589685) {
  var result_2818589690 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818589683 == null)) {
      result_2818589690 = default_2818589685;
      break BeforeRet;
      }
      
      var nodeHEX60gensym744_2818589702 = HEX7BHEX7D_1627393316(editor_2818589683.options, nsuSplitString(path_2818589684, [46], -1));
      if ((nodeHEX60gensym744_2818589702 == null)) {
      result_2818589690 = default_2818589685;
      break BeforeRet;
      }
      
    };
    result_2818589690 = getInt_1627390118(nodeHEX60gensym744_2818589702, default_2818589685);
    break BeforeRet;
  };

  return result_2818589690;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818589715(editor_2818589717, path_2818589718, value_2818589719) {
  BeforeRet: {
    Label1: {
      if ((editor_2818589717 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym745_2818589735 = nsuSplitString(path_2818589718, [46], -1);
      var nodeHEX60gensym745_2818589736 = editor_2818589717.options;
      Label2: {
        var keyHEX60gensym745_2818589755 = [];
        var colontmp__2818589862 = [];
        colontmp__2818589862 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym745_2818589735, HEX2EHEX2E_1040187488(0, 2));
        var i_2818589863 = 0;
        var L_2818589864 = (colontmp__2818589862).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818589863 < L_2818589864)) break Label4;
              keyHEX60gensym745_2818589755 = colontmp__2818589862[chckIndx(i_2818589863, 0, (colontmp__2818589862).length - 1)];
              if (!((nodeHEX60gensym745_2818589736.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755, newJObject_1627390051());
              }
              
              nodeHEX60gensym745_2818589736 = HEX5BHEX5D_1627393037(nodeHEX60gensym745_2818589736, keyHEX60gensym745_2818589755);
              i_2818589863 = addInt(i_2818589863, 1);
              if (!(((colontmp__2818589862).length == L_2818589864))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym745_2818589736 == null) || !((nodeHEX60gensym745_2818589736.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym745_2818589736, HEX5BHEX5D_2701132581(pathItemsHEX60gensym745_2818589735, 1), newJString_1627389994(value_2818589719));
    };
    requestRender_2768240746(editor_2818589717.platform, true);
  };

  
}

function setMove_2818589580(self_2818589581, args_2818589582) {
    setOption_2818589583(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818588799(self_2818589581));
    setMode_2818584223(self_2818589581, getOption_2818589655(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818588856(self_2818589581, getOption_2818589681(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818589166(self_2818589581, getOption_2818589655(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818589582);
    setOption_2818589715(self_2818589581.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818589576(self_2818589799, args_2818589800) {
    setMove_2818589580(self_2818589799, args_2818589800);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818589576(this, args_));};

function deleteMove_2818589872(self_2818589873, move_2818589874, which_2818589875, all_2818589876) {
    move_2818589874 = nimCopy(null, move_2818589874, NTI33554449);
    
function HEX3Aanonymous_2818589888(s_2818589895) {
        var Temporary1;

      var result_2818589898 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589887) {
        Temporary1 = getSelectionForMove_2818589335(self_2818589873, s_2818589895.Field1, move_2818589874, count_2818589886);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589895.Field1, NTI2449473545), Field1: nimCopy(null, getSelectionForMove_2818589335(self_2818589873, s_2818589895.Field1, move_2818589874, count_2818589886).Field1, NTI2449473545)};
        }
        
        result_2818589898 = nimCopy(result_2818589898, Temporary1, NTI2449473547);

      return result_2818589898;

    }

    var count_2818589886 = getOption_2818589681(self_2818589873.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589887 = getFlag_2818589096(self_2818589873, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589905 = map_2818572735(selections_2818572802(self_2818589873), HEX3Aanonymous_2818589888);
    selectionsHEX3D_2818573083(self_2818589873, delete_2818579356(self_2818589873.document, selections_2818589905, selections_2818572802(self_2818589873), true, true));
    scrollToCursor_2818584038(self_2818589873, 3);
    updateTargetColumn_2818584601(self_2818589873, 3);

  
}

function deleteMoveJsWrapper_2818589868(self_2818589937, move_2818589938, which_2818589939, all_2818589940) {
    deleteMove_2818589872(self_2818589937, move_2818589938, which_2818589939, all_2818589940);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818589868(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818589999(self_2818590001, all_2818590002, p_2818590004) {
    
function HEX3Aanonymous_2818590006(s_2818590013) {
      var result_2818590016 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818590016 = nimCopy(result_2818590016, p_2818590004(s_2818590013), NTI2449473547);

      return result_2818590016;

    }

  var result_2818590005 = [];

    if (all_2818590002) {
    result_2818590005 = nimCopy(null, map_2818572735(self_2818590001, HEX3Aanonymous_2818590006), NTI2818572615);
    }
    else {
      result_2818590005 = nimCopy(null, self_2818590001, NTI2818583494);
      if ((0 < (result_2818590005).length)) {
      result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)] = nimCopy(result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)], p_2818590004(result_2818590005[chckIndx((result_2818590005).length - 1, 0, (result_2818590005).length - 1)]), NTI2449473547);
      }
      
    }
    

  return result_2818590005;

}

function selectMove_2818589976(self_2818589977, move_2818589978, which_2818589979, all_2818589980) {
    move_2818589978 = nimCopy(null, move_2818589978, NTI33554449);
    
function HEX3Aanonymous_2818589991(s_2818589994) {
      var result_2818589997 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818589997 = nimCopy(result_2818589997, getSelectionForMove_2818589335(self_2818589977, s_2818589994.Field1, move_2818589978, count_2818589990), NTI2449473547);

      return result_2818589997;

    }

    var count_2818589990 = getOption_2818589681(self_2818589977.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573083(self_2818589977, mapAllOrLast_2818589999(selections_2818572802(self_2818589977), all_2818589980, HEX3Aanonymous_2818589991));
    scrollToCursor_2818584038(self_2818589977, 3);
    updateTargetColumn_2818584601(self_2818589977, 3);

  
}

function selectMoveJsWrapper_2818589972(self_2818590066, move_2818590067, which_2818590068, all_2818590069) {
    selectMove_2818589976(self_2818590066, move_2818590067, which_2818590068, all_2818590069);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818589972(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818590105(self_2818590106, move_2818590107, which_2818590108, all_2818590109) {
    move_2818590107 = nimCopy(null, move_2818590107, NTI33554449);
    
function HEX3Aanonymous_2818590121(s_2818590128) {
        var Temporary1;

      var result_2818590131 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818590120) {
        Temporary1 = getSelectionForMove_2818589335(self_2818590106, s_2818590128.Field1, move_2818590107, count_2818590119);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818590128.Field1, NTI2449473545), Field1: nimCopy(null, getSelectionForMove_2818589335(self_2818590106, s_2818590128.Field1, move_2818590107, count_2818590119).Field1, NTI2449473545)};
        }
        
        result_2818590131 = nimCopy(result_2818590131, Temporary1, NTI2449473547);

      return result_2818590131;

    }

    var count_2818590119 = getOption_2818589681(self_2818590106.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818590120 = getFlag_2818589096(self_2818590106, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818590138 = map_2818572735(selections_2818572802(self_2818590106), HEX3Aanonymous_2818590121);
    selectionsHEX3D_2818573083(self_2818590106, delete_2818579356(self_2818590106.document, selections_2818590138, selections_2818572802(self_2818590106), true, true));
    scrollToCursor_2818584038(self_2818590106, 3);
    updateTargetColumn_2818584601(self_2818590106, 3);

  
}

function changeMoveJsWrapper_2818590101(self_2818590170, move_2818590171, which_2818590172, all_2818590173) {
    changeMove_2818590105(self_2818590170, move_2818590171, which_2818590172, all_2818590173);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818590101(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2449474032(cursor_2449474033, default_2449474034, which_2449474035) {
  var result_2449474036 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2449474035) {
    case 0:
      result_2449474036 = nimCopy(result_2449474036, default_2449474034, NTI2449473547);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818590322 = nimCopy(null, cursor_2449474033, NTI2449473545);
      var colontmp__2818590323 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590322, NTI2449473545), Field1: nimCopy(null, colontmp__2818590323, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818590324 = nimCopy(null, cursor_2449474033, NTI2449473545);
      var colontmp__2818590325 = nimCopy(null, default_2449474034.Field1, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590324, NTI2449473545), Field1: nimCopy(null, colontmp__2818590325, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818590326 = nimCopy(null, default_2449474034.Field0, NTI2449473545);
      var colontmp__2818590327 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590326, NTI2449473545), Field1: nimCopy(null, colontmp__2818590327, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818590328 = nimCopy(null, default_2449474034.Field1, NTI2449473545);
      var colontmp__2818590329 = nimCopy(null, cursor_2449474033, NTI2449473545);
      result_2449474036 = nimCopy(result_2449474036, {Field0: nimCopy(null, colontmp__2818590328, NTI2449473545), Field1: nimCopy(null, colontmp__2818590329, NTI2449473545)}, NTI2449473547);
      break BeforeRet;
      break;
    }
  };

  return result_2449474036;

}

function cursor_2818589560(self_2818589561, selection_2818589562, which_2818589563) {
  var result_2818589564 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818589563) {
    case 0:
      result_2818589564 = nimCopy(result_2818589564, cursor_2818589560(self_2818589561, selection_2818589562, getOption_2818583643(self_2818589561.editor, getContextWithMode_2818583609(self_2818589561, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473545);
      break BeforeRet;
      break;
    case 1:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field1, NTI2449473545);
      break BeforeRet;
      break;
    case 2:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field0, NTI2449473545);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818589564 = nimCopy(result_2818589564, selection_2818589562.Field1, NTI2449473545);
      break BeforeRet;
      break;
    }
  };

  return result_2818589564;

}

function moveLast_2818590209(self_2818590210, move_2818590211, which_2818590212, all_2818590213, count_2818590214) {
      move_2818590211 = nimCopy(null, move_2818590211, NTI33554449);
      
function HEX3Aanonymous_2818590215(s_2818590218) {
        var result_2818590221 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590221 = nimCopy(result_2818590221, toSelection_2449474032(getSelectionForMove_2818589335(self_2818590210, cursor_2818589560(self_2818590210, s_2818590218, which_2818590212), move_2818590211, count_2818590214).Field1, s_2818590218, getOption_2818583643(self_2818590210.editor, getContextWithMode_2818583609(self_2818590210, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473547);

        return result_2818590221;

      }
      
function HEX3Aanonymous_2818590238(s_2818590241) {
        var result_2818590244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590244 = nimCopy(result_2818590244, toSelection_2449474032(getSelectionForMove_2818589335(self_2818590210, cursor_2818589560(self_2818590210, s_2818590241, which_2818590212), move_2818590211, count_2818590214).Field1, s_2818590241, which_2818590212), NTI2449473547);

        return result_2818590244;

      }

    switch (which_2818590212) {
    case 0:
      selectionsHEX3D_2818573083(self_2818590210, mapAllOrLast_2818589999(selections_2818572802(self_2818590210), all_2818590213, HEX3Aanonymous_2818590215));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818590210, mapAllOrLast_2818589999(selections_2818572802(self_2818590210), all_2818590213, HEX3Aanonymous_2818590238));
      break;
    }
    scrollToCursor_2818584038(self_2818590210, which_2818590212);
    updateTargetColumn_2818584601(self_2818590210, which_2818590212);

  
}

function moveLastJsWrapper_2818590205(self_2818590283, move_2818590284, which_2818590285, all_2818590286, count_2818590287) {
    moveLast_2818590209(self_2818590283, move_2818590284, which_2818590285, all_2818590286, count_2818590287);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818590205(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818590336(self_2818590337, move_2818590338, which_2818590339, all_2818590340, count_2818590341) {
      move_2818590338 = nimCopy(null, move_2818590338, NTI33554449);
      
function HEX3Aanonymous_2818590342(s_2818590345) {
        var result_2818590348 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590348 = nimCopy(result_2818590348, toSelection_2449474032(getSelectionForMove_2818589335(self_2818590337, cursor_2818589560(self_2818590337, s_2818590345, which_2818590339), move_2818590338, count_2818590341).Field0, s_2818590345, getOption_2818583643(self_2818590337.editor, getContextWithMode_2818583609(self_2818590337, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2449473547);

        return result_2818590348;

      }
      
function HEX3Aanonymous_2818590365(s_2818590368) {
        var result_2818590371 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818590371 = nimCopy(result_2818590371, toSelection_2449474032(getSelectionForMove_2818589335(self_2818590337, cursor_2818589560(self_2818590337, s_2818590368, which_2818590339), move_2818590338, count_2818590341).Field0, s_2818590368, which_2818590339), NTI2449473547);

        return result_2818590371;

      }

    switch (which_2818590339) {
    case 0:
      selectionsHEX3D_2818573083(self_2818590337, mapAllOrLast_2818589999(selections_2818572802(self_2818590337), all_2818590340, HEX3Aanonymous_2818590342));
      break;
    default: 
      selectionsHEX3D_2818573083(self_2818590337, mapAllOrLast_2818589999(selections_2818572802(self_2818590337), all_2818590340, HEX3Aanonymous_2818590365));
      break;
    }
    scrollToCursor_2818584038(self_2818590337, which_2818590339);
    updateTargetColumn_2818584601(self_2818590337, which_2818590339);

  
}

function moveFirstJsWrapper_2818590332(self_2818590410, move_2818590411, which_2818590412, all_2818590413, count_2818590414) {
    moveFirst_2818590336(self_2818590410, move_2818590411, which_2818590412, all_2818590413, count_2818590414);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818590332(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818590458(val_2818590460) {
  var result_2818590461 = ({val: ({impl: null}), has: false});

    result_2818590461.has = true;
    result_2818590461.val = nimCopy(result_2818590461.val, val_2818590460, NTI2852126723);

  return result_2818590461;

}

function isNone_2818580300(self_2818580302) {
  var result_2818580303 = false;

    result_2818580303 = !(self_2818580302.has);

  return result_2818580303;

}

function clear_2818580361(t_2818580364) {
    Label1: {
      var i_2818580433 = 0;
      var colontmp__2818590528 = 0;
      colontmp__2818590528 = (t_2818580364.data).length;
      var i_2818590529 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590529 < colontmp__2818590528)) break Label3;
            i_2818580433 = i_2818590529;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field0 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field1 = 0;
            t_2818580364.data[chckIndx(i_2818580433, 0, (t_2818580364.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818590529 = addInt(i_2818590529, 1);
          }
      };
    };
    t_2818580364.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818590531 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818590532 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818590531, Field1: colontmp__2818590532}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580957(self_2818580959) {
  var result_2818580960 = null;

  BeforeRet: {
    if (isNone_2818580300(self_2818580959)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580960 = self_2818580959.val;
    break BeforeRet;
  };

  return result_2818580960;

}

function mustRehash_2818581582(t_2818581584) {
  var result_2818581585 = false;

    if (!((t_2818581584.counter < (t_2818581584.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818581585 = ((mulInt((t_2818581584.data).length, 2) < mulInt(t_2818581584.counter, 3)) || (subInt((t_2818581584.data).length, t_2818581584.counter) < 4));

  return result_2818581585;

}

function rawInsert_2818582191(t_2818582195, data_2818582196, data_2818582196_Idx, key_2818582197, val_2818582198, hc_2818582199, h_2818582200) {
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field1 = key_2818582197;
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field2 = nimCopy(null, val_2818582198, NTI2818572535);
    data_2818582196[data_2818582196_Idx][chckIndx(h_2818582200, 0, (data_2818582196[data_2818582196_Idx]).length - 1)].Field0 = hc_2818582199;

  
}

function enlarge_2818581785(t_2818581788) {
    var n_2818581791 = [];
    n_2818581791 = new Array(chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581788.data).length, 2), 0, 2147483647) ; ++i) { n_2818581791[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581788.data; t_2818581788.data = n_2818581791; n_2818581791 = Temporary1;    Label2: {
      var i_2818581871 = 0;
      var colontmp__2818590535 = 0;
      colontmp__2818590535 = (n_2818581791).length - 1;
      var res_2818590536 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818590536 <= colontmp__2818590535)) break Label4;
            i_2818581871 = res_2818590536;
            var eh_2818581949 = n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581949)) {
            var j_2818581953 = (eh_2818581949 & (t_2818581788.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581788.data[chckIndx(j_2818581953, 0, (t_2818581788.data).length - 1)].Field0)) break Label6;
                  j_2818581953 = nextTry_1308622883(j_2818581953, (t_2818581788.data).length - 1);
                }
            };
            rawInsert_2818582191(t_2818581788, t_2818581788, "data", n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field1, n_2818581791[chckIndx(i_2818581871, 0, (n_2818581791).length - 1)].Field2, eh_2818581949, j_2818581953);
            }
            
            res_2818590536 = addInt(res_2818590536, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818582432(t_2818582435, key_2818582436, hc_2818582437) {
  var result_2818582438 = 0;

  BeforeRet: {
    if (((t_2818582435.data).length == 0)) {
    result_2818582438 = -1;
    break BeforeRet;
    }
    
    var h_2818582505 = (hc_2818582437 & (t_2818582435.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0)) break Label2;
          if (((t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field0 == hc_2818582437) && (t_2818582435.data[chckIndx(h_2818582505, 0, (t_2818582435.data).length - 1)].Field1 == key_2818582436))) {
          result_2818582438 = h_2818582505;
          break BeforeRet;
          }
          
          h_2818582505 = nextTry_1308622883(h_2818582505, (t_2818582435.data).length - 1);
        }
    };
    result_2818582438 = subInt(-1, h_2818582505);
  };

  return result_2818582438;

}

function HEX5BHEX5DHEX3D_2818581030(t_2818581033, key_2818581034, val_2818581035) {
    if (((t_2818581033.data).length == 0)) {
    var correctSizeHEX60gensym147_2818581100 = slotsNeeded_1308622891(32);
    t_2818581033.counter = 0;
    t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2818581100, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818581105 = [0];
    var index_2818581435 = rawGet_2818581106(t_2818581033, key_2818581034, hc_2818581105, 0);
    if ((0 <= index_2818581435)) {
    t_2818581033.data[chckIndx(index_2818581435, 0, (t_2818581033.data).length - 1)].Field2 = nimCopy(null, val_2818581035, NTI2818572535);
    }
    else {
      if (((t_2818581033.data).length == 0)) {
      var correctSizeHEX60gensym152_2818581577 = slotsNeeded_1308622891(32);
      t_2818581033.counter = 0;
      t_2818581033.data = new Array(chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2818581577, 0, 2147483647) ; ++i) { t_2818581033.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818581582(t_2818581033)) {
      enlarge_2818581785(t_2818581033);
      index_2818581435 = rawGetKnownHC_2818582432(t_2818581033, key_2818581034, hc_2818581105[0]);
      }
      
      index_2818581435 = subInt(-1, index_2818581435);
      rawInsert_2818582191(t_2818581033, t_2818581033, "data", key_2818581034, val_2818581035, hc_2818581105[0], index_2818581435);
      t_2818581033.counter = addInt(t_2818581033.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582798(t_2818582801, key_2818582802) {
    var hc_2818582803 = [0];
    var i_2818582810 = rawGet_2818581106(t_2818582801, key_2818582802, hc_2818582803, 0);
    var mskHEX60gensym36_2818582814 = (t_2818582801.data).length - 1;
    if ((0 <= i_2818582810)) {
    t_2818582801.counter = subInt(t_2818582801.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582821 = i_2818582810;
            var rHEX60gensym36_2818582822 = jHEX60gensym36_2818582821;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field1 = 0;
            t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582810 = (addInt(i_2818582810, 1) & mskHEX60gensym36_2818582814);
                  if (isEmpty_1308622877(t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582822 = (t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)].Field0 & mskHEX60gensym36_2818582814);
                  if (!(((((rHEX60gensym36_2818582822 <= i_2818582810) && (jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822)) || ((jHEX60gensym36_2818582821 < rHEX60gensym36_2818582822) && (i_2818582810 < jHEX60gensym36_2818582821))) || ((i_2818582810 < jHEX60gensym36_2818582821) && (rHEX60gensym36_2818582822 <= i_2818582810))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)] = nimCopy(t_2818582801.data[chckIndx(jHEX60gensym36_2818582821, 0, (t_2818582801.data).length - 1)], t_2818582801.data[chckIndx(i_2818582810, 0, (t_2818582801.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818580294(self_2818580295) {
  BeforeRet: {
    if (isNone_2818580300(self_2818580295.searchRegex)) {
    clear_2818580361(self_2818580295.searchResults);
    markDirty_2415919143(self_2818580295);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580937 = 0;
      var line_2818580938 = [];
      var i_2818590524 = 0;
      var L_2818590525 = (self_2818580295.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590524 < L_2818590525)) break Label3;
            i_2818580937 = i_2818590524;
            line_2818580938 = self_2818580295.document.lines[chckIndx(i_2818590524, 0, (self_2818580295.document.lines).length - 1)];
            var selections_2818580943 = [];
            var start_2818580944 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580944 < (line_2818580938).length)) break Label5;
                  var bounds_2818580969 = findBounds_2852126727(line_2818580938, get_2818580957(self_2818580295.searchRegex), start_2818580944);
                  if ((bounds_2818580969.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580943.push({Field0: {Field0: i_2818580937, Field1: bounds_2818580969.Field0}, Field1: {Field0: i_2818580937, Field1: addInt(bounds_2818580969.Field1, 1)}});;
                  start_2818580944 = nimMax(addInt(bounds_2818580969.Field1, 1), addInt(start_2818580944, 1));
                }
            };
            if ((0 < (selections_2818580943).length)) {
            HEX5BHEX5DHEX3D_2818581030(self_2818580295.searchResults, i_2818580937, selections_2818580943);
            }
            else {
            del_2818582798(self_2818580295.searchResults, i_2818580937);
            }
            
            i_2818590524 = addInt(i_2818590524, 1);
            if (!(((self_2818580295.document.lines).length == L_2818590525))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2415919143(self_2818580295);
  };

  
}

function setSearchQuery_2818590455(self_2818590456, query_2818590457) {
    self_2818590456.searchQuery = nimCopy(null, query_2818590457, NTI33554449);
    self_2818590456.searchRegex = nimCopy(self_2818590456.searchRegex, some_2818590458(re_2852126779(query_2818590457)), NTI2818572524);
    updateSearchResults_2818580294(self_2818590456);

  
}

function setSearchQueryJsWrapper_2818590451(self_2818590500, query_2818590501) {
    setSearchQuery_2818590455(self_2818590500, query_2818590501);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818590451(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818590547(self_2818590548, move_2818590549, count_2818590550) {
    var selection_2818590551 = getSelectionForMove_2818589335(self_2818590548, selection_2818572805(self_2818590548).Field1, move_2818590549, count_2818590550);
    selectionHEX3D_2818572811(self_2818590548, selection_2818590551);
    setSearchQuery_2818590455(self_2818590548, contentString_2818574091(self_2818590548.document, selection_2818590551));

  
}

function setSearchQueryFromMoveJsWrapper_2818590543(self_2818590581, move_2818590582, count_2818590583) {
    setSearchQueryFromMove_2818590547(self_2818590581, move_2818590582, count_2818590583);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818590543(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818579157(self_2818579159) {
  var result_2818579160 = false;

    result_2818579160 = !((self_2818579159.val == null));

  return result_2818579160;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818579064(self_2818579065, filename_2818579066) {
  var result_2818579068 = null;

  BeforeRet: {
    result_2818579068 = undefined;
    break BeforeRet;
  };

  return result_2818579068;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818593117 = 0;
      colontmp__2818593117 = (n_2919236913).length - 1;
      var res_2818593118 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593118 <= colontmp__2818593117)) break Label4;
            i_2919236977 = res_2818593118;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818593118 = addInt(res_2818593118, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818593124 = 0;
      colontmp__2818593124 = (n_2919238113).length - 1;
      var res_2818593125 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593125 <= colontmp__2818593124)) break Label4;
            i_2919238177 = res_2818593125;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818593125 = addInt(res_2818593125, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818579185(self_2818579187) {
  var result_2818579188 = false;

    result_2818579188 = (self_2818579187.val == null);

  return result_2818579188;

}

function get_2818579177(self_2818579179) {
  var result_2818579180 = null;
  var result_2818579180_Idx = 0;

  BeforeRet: {
    if (isNone_2818579185(self_2818579179)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579180 = self_2818579179; result_2818579180_Idx = "val";
    break BeforeRet;
  };

  return [result_2818579180, result_2818579180_Idx];

}
async function getLanguageServer_2818590611(self_2818590612) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818590685(targetFilename_2818590686) {
        var result_2818590688 = null;

        BeforeRet: {
          (await saveTempFile_2818579064(self_2818590612.document, targetFilename_2818590686));
          result_2818590688 = undefined;
          break BeforeRet;
        };

        return result_2818590688;

      }
      var Temporary3;

  var result_2818590615 = null;

  BeforeRet: {
      var oHEX60gensym848_2818590627 = getLanguageForFile_2902458372(self_2818590612.document.filename);
      if (!isSome_2348810304(oHEX60gensym848_2818590627)) Temporary2 = false; else {        var languageId_2818590650 = nimCopy(null, get_2818578907(oHEX60gensym848_2818590627), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818590650;
    }
    else {
      result_2818590615 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818590661 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818579157(self_2818590612.document.languageServer)) {
    result_2818590615 = self_2818590612.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818590612.document.languageServer = nimCopy(self_2818590612.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818590661, self_2818590612.document.filename)), NTI2818572486);
      if (isSome_2818579157(self_2818590612.document.languageServer)) {
      var callback_2818590699 = HEX3Aanonymous_2818590685;
      self_2818590612.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818579177(self_2818590612.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818590612.document.filename, callback_2818590699);
      }
      
      result_2818590615 = self_2818590612.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818590615;

}

function get_2818590760(self_2818590762) {
  var result_2818590763 = null;

    if (isNone_2818579185(self_2818590762)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590763 = self_2818590762["val"];

  return result_2818590763;

}

function isSome_2818590790(self_2818590792) {
  var result_2818590793 = false;

    result_2818590793 = self_2818590792.has;

  return result_2818590793;

}

function isNone_2818590815(self_2818590817) {
  var result_2818590818 = false;

    result_2818590818 = !(self_2818590817.has);

  return result_2818590818;

}

function get_2818590807(self_2818590809) {
  var result_2818590810 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818590815(self_2818590809)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818590810 = self_2818590809.val;

  return result_2818590810;

}
async function gotoDefinitionAsync_2818590720(self_2818590721) {
  var result_2818590723 = null;

  BeforeRet: {
    var languageServer_2818590733 = (await getLanguageServer_2818590611(self_2818590721));
    if (isNone_2818579185(languageServer_2818590733)) {
    result_2818590723 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818579157(languageServer_2818590733)) {
    var definition_2818590785 = (await getDefinition_2919235651(get_2818590760(languageServer_2818590733), self_2818590721.document.filename, selection_2818572805(self_2818590721).Field1));
    if (isSome_2818590790(definition_2818590785)) {
    selectionHEX3D_2818572811(self_2818590721, toSelection_2449474029(get_2818590807(definition_2818590785).location));
    scrollToCursor_2818584038(self_2818590721, 0);
    }
    
    }
    
    result_2818590723 = undefined;
    break BeforeRet;
  };

  return result_2818590723;

}

function gotoDefinition_2818593070(self_2818593071) {
    var _ = gotoDefinitionAsync_2818590720(self_2818593071);

  
}

function gotoDefinitionJsWrapper_2818593066(self_2818593099) {
    gotoDefinition_2818593070(self_2818593099);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818593066(this));};

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function init_2818590863(s_2818590865, initialSize_2818590866) {
    var correctSizeHEX60gensym859_2818590868 = slotsNeeded_1828716594(chckRange(initialSize_2818590866, 0, 2147483647));
    s_2818590865.counter = 0;
    s_2818590865.data = new Array(chckRange(correctSizeHEX60gensym859_2818590868, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym859_2818590868, 0, 2147483647) ; ++i) { s_2818590865.data[i] = {Field0: 0, Field1: []}; }
  
}

function initHashSet_2818590851(initialSize_2818590853) {
  var result_2818590858 = [({data: [], counter: 0})];

    init_2818590863(result_2818590858[0], initialSize_2818590853);

  return result_2818590858[0];

}

function allCharsInSet_855639569(s_855639570, theSet_855639571) {
  var result_855639572 = false;

  BeforeRet: {
    Label1: {
      var c_855639573 = 0;
      var i_2818593205 = 0;
      var L_2818593206 = (s_855639570).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593205 < L_2818593206)) break Label3;
            c_855639573 = s_855639570[chckIndx(i_2818593205, 0, (s_855639570).length - 1)];
            if (!((theSet_855639571[c_855639573] != undefined))) {
            result_855639572 = false;
            break BeforeRet;
            }
            
            i_2818593205 = addInt(i_2818593205, 1);
            if (!(((s_855639570).length == L_2818593206))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_855639572 = true;
    break BeforeRet;
  };

  return result_855639572;

}

function nsuIsEmptyOrWhitespace(s_855640546) {
  var result_855640547 = false;

    result_855640547 = allCharsInSet_855639569(s_855640546, ConstSet58);

  return result_855640547;

}

function nsuIsAlphaAsciiChar(c_855638054) {
  var result_855638055 = false;

  BeforeRet: {
    result_855638055 = (ConstSet59[c_855638054] != undefined);
    break BeforeRet;
  };

  return result_855638055;

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_2818591075(t_2818591078, key_2818591079, hc_2818591080, hc_2818591080_Idx) {
  var result_2818591081 = 0;

  BeforeRet: {
    hc_2818591080[hc_2818591080_Idx] = hash_1325400491(key_2818591079);
    if ((hc_2818591080[hc_2818591080_Idx] == 0)) {
    hc_2818591080[hc_2818591080_Idx] = 314159265;
    }
    
    if (((t_2818591078.data).length == 0)) {
    result_2818591081 = -1;
    break BeforeRet;
    }
    
    var h_2818591148 = (hc_2818591080[hc_2818591080_Idx] & (t_2818591078.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field0)) break Label2;
          if (((t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field0 == hc_2818591080[hc_2818591080_Idx]) && eqStrings(t_2818591078.data[chckIndx(h_2818591148, 0, (t_2818591078.data).length - 1)].Field1, key_2818591079))) {
          result_2818591081 = h_2818591148;
          break BeforeRet;
          }
          
          h_2818591148 = nextTry_1828716586(h_2818591148, (t_2818591078.data).length - 1);
        }
    };
    result_2818591081 = subInt(-1, h_2818591148);
  };

  return result_2818591081;

}

function mustRehash_2818591393(t_2818591395) {
  var result_2818591396 = false;

    if (!((t_2818591395.counter < (t_2818591395.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818591396 = ((mulInt((t_2818591395.data).length, 2) < mulInt(t_2818591395.counter, 3)) || (subInt((t_2818591395.data).length, t_2818591395.counter) < 4));

  return result_2818591396;

}

function rawGetKnownHC_2818591918(t_2818591921, key_2818591922, hc_2818591923) {
  var result_2818591924 = 0;

  BeforeRet: {
    if (((t_2818591921.data).length == 0)) {
    result_2818591924 = -1;
    break BeforeRet;
    }
    
    var h_2818591991 = (hc_2818591923 & (t_2818591921.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field0)) break Label2;
          if (((t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field0 == hc_2818591923) && eqStrings(t_2818591921.data[chckIndx(h_2818591991, 0, (t_2818591921.data).length - 1)].Field1, key_2818591922))) {
          result_2818591924 = h_2818591991;
          break BeforeRet;
          }
          
          h_2818591991 = nextTry_1828716586(h_2818591991, (t_2818591921.data).length - 1);
        }
    };
    result_2818591924 = subInt(-1, h_2818591991);
  };

  return result_2818591924;

}

function rawInsert_2818592385(s_2818592387, data_2818592388, data_2818592388_Idx, key_2818592389, hc_2818592390, h_2818592391) {
    if (((data_2818592388[data_2818592388_Idx]).length == 0)) {
    var correctSizeHEX60gensym874_2818592456 = slotsNeeded_1828716594(64);
    s_2818592387.counter = 0;
    s_2818592387.data = new Array(chckRange(correctSizeHEX60gensym874_2818592456, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym874_2818592456, 0, 2147483647) ; ++i) { s_2818592387.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_2818592388[data_2818592388_Idx][chckIndx(h_2818592391, 0, (data_2818592388[data_2818592388_Idx]).length - 1)].Field1 = nimCopy(null, key_2818592389, NTI33554449);
    data_2818592388[data_2818592388_Idx][chckIndx(h_2818592391, 0, (data_2818592388[data_2818592388_Idx]).length - 1)].Field0 = hc_2818592390;

  
}

function enlarge_2818591602(s_2818591604) {
    var n_2818591606 = [];
    n_2818591606 = new Array(chckRange(mulInt((s_2818591604.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2818591604.data).length, 2), 0, 2147483647) ; ++i) { n_2818591606[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_2818591604.data; s_2818591604.data = n_2818591606; n_2818591606 = Temporary1;    Label2: {
      var i_2818591686 = 0;
      var colontmp__2818593210 = 0;
      colontmp__2818593210 = (n_2818591606).length - 1;
      var res_2818593211 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818593211 <= colontmp__2818593210)) break Label4;
            i_2818591686 = res_2818593211;
            if (isFilled_1828716583(n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0)) {
            var j_2818592226 = subInt(-1, rawGetKnownHC_2818591918(s_2818591604, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field1, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0));
            rawInsert_2818592385(s_2818591604, s_2818591604, "data", n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field1, n_2818591606[chckIndx(i_2818591686, 0, (n_2818591606).length - 1)].Field0, j_2818592226);
            }
            
            res_2818593211 = addInt(res_2818593211, 1);
          }
      };
    };

  
}

function incl_2818590983(s_2818590985, key_2818590986) {
    if (((s_2818590985.data).length == 0)) {
    var correctSizeHEX60gensym865_2818591052 = slotsNeeded_1828716594(64);
    s_2818590985.counter = 0;
    s_2818590985.data = new Array(chckRange(correctSizeHEX60gensym865_2818591052, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym865_2818591052, 0, 2147483647) ; ++i) { s_2818590985.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_2818591067 = [0];
    var index_2818591392 = rawGet_2818591075(s_2818590985, key_2818590986, hc_2818591067, 0);
    if ((index_2818591392 < 0)) {
    if (mustRehash_2818591393(s_2818590985)) {
    enlarge_2818591602(s_2818590985);
    index_2818591392 = rawGetKnownHC_2818591918(s_2818590985, key_2818590986, hc_2818591067[0]);
    }
    
    rawInsert_2818592385(s_2818590985, s_2818590985, "data", key_2818590986, hc_2818591067[0], subInt(-1, index_2818591392));
    s_2818590985.counter = addInt(s_2818590985.counter, 1);
    }
    

  
}

function len_2818592717(s_2818592719) {
  var result_2818592720 = 0;

    result_2818592720 = s_2818592719.counter;

  return result_2818592720;

}

function getCompletionsFromContent_2818590848(self_2818590849) {
  var result_2818590850 = [];

    var s_2818590892 = [initHashSet_2818590851(64)];
    Label1: {
      var li_2818590926 = 0;
      var line_2818590927 = null;
      var i_2818593190 = 0;
      var L_2818593191 = (self_2818590849.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593190 < L_2818593191)) break Label3;
            li_2818590926 = i_2818593190;
            line_2818590927 = self_2818590849.lastRenderedLines[chckIndx(i_2818593190, 0, (self_2818590849.lastRenderedLines).length - 1)];
            Label4: {
              var i_2818590960 = 0;
              var part_2818590961 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_2818593186 = 0;
              var L_2818593187 = (line_2818590927.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2818593186 < L_2818593187)) break Label6;
                    i_2818590960 = i_2818593186;
                    part_2818590961 = nimCopy(part_2818590961, line_2818590927.parts[chckIndx(i_2818593186, 0, (line_2818590927.parts).length - 1)], NTI2818572422);
                    Label7: {
                      if (((50 < (part_2818590961.text).length) || nsuIsEmptyOrWhitespace(part_2818590961.text))) {
                      break Label7;
                      }
                      
                      var use_2818590962 = false;
                      Label8: {
                        var c_2818590963 = 0;
                        var i_2818593182 = 0;
                        var L_2818593183 = (part_2818590961.text).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_2818593182 < L_2818593183)) break Label10;
                              c_2818590963 = part_2818590961.text[chckIndx(i_2818593182, 0, (part_2818590961.text).length - 1)];
                              if (((((nsuIsAlphaAsciiChar(c_2818590963) || (c_2818590963 == 95)) || (c_2818590963 == 64)) || (c_2818590963 == 36)) || (c_2818590963 == 35))) {
                              use_2818590962 = true;
                              break Label8;
                              }
                              
                              i_2818593182 = addInt(i_2818593182, 1);
                              if (!(((part_2818590961.text).length == L_2818593183))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(use_2818590962)) {
                      break Label7;
                      }
                      
                      incl_2818590983(s_2818590892[0], part_2818590961.text);
                    };
                    i_2818593186 = addInt(i_2818593186, 1);
                    if (!(((line_2818590927.parts).length == L_2818593187))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_2818593190 = addInt(i_2818593190, 1);
            if (!(((self_2818590849.lastRenderedLines).length == L_2818593191))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var text_2818592952 = [];
      var length_2818593198 = len_2818592717(s_2818590892[0]);
      Label12: {
        var h_2818593200 = 0;
        var colontmp__2818593201 = 0;
        colontmp__2818593201 = (s_2818590892[0].data).length - 1;
        var res_2818593202 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_2818593202 <= colontmp__2818593201)) break Label14;
              h_2818593200 = res_2818593202;
              if (isFilled_1828716583(s_2818590892[0].data[chckIndx(h_2818593200, 0, (s_2818590892[0].data).length - 1)].Field0)) {
              text_2818592952 = s_2818590892[0].data[chckIndx(h_2818593200, 0, (s_2818590892[0].data).length - 1)].Field1;
              result_2818590850.push({name: nimCopy(null, text_2818592952, NTI33554449), scope: [100,111,99,117,109,101,110,116], location: {Field0: 0, Field1: 0}, filename: [], kind: 0, typ: [], doc: []});;
              if (!((len_2818592717(s_2818590892[0]) == length_2818593198))) {
              failedAssertImpl_268435515(makeNimstrLit("sets.nim(269, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              res_2818593202 = addInt(res_2818593202, 1);
            }
        };
      };
    };

  return result_2818590850;

}
async function getCompletionsAsync_2818586172(self_2818586173) {
  var result_2818592988 = null;

  BeforeRet: {
    if (self_2818586173.disableCompletions) {
    result_2818592988 = undefined;
    break BeforeRet;
    }
    
    var languageServer_2818592998 = (await getLanguageServer_2818590611(self_2818586173));
    if (isSome_2818579157(languageServer_2818592998)) {
    self_2818586173.completions = nimCopy(null, (await getCompletions_2919235661(get_2818590760(languageServer_2818592998), self_2818586173.document.languageId, self_2818586173.document.filename, selection_2818572805(self_2818586173).Field1)), NTI2919235662);
    }
    else {
      self_2818586173.completions = nimCopy(null, getCompletionsFromContent_2818590848(self_2818586173), NTI2818584215);
    }
    
    self_2818586173.selectedCompletion = clamp_1660945119(self_2818586173.selectedCompletion, 0, (self_2818586173.completions).length - 1);
    if (((self_2818586173.completions).length == 0)) {
    self_2818586173.showCompletions = false;
    }
    else {
      self_2818586173.showCompletions = true;
    }
    
    markDirty_2415919143(self_2818586173);
    result_2818592988 = undefined;
    break BeforeRet;
  };

  return result_2818592988;

}

function getCompletions_2818593134(self_2818593135) {
    var _ = getCompletionsAsync_2818586172(self_2818593135);

  
}

function getCompletionsJsWrapper_2818593130(self_2818593163) {
    getCompletions_2818593134(self_2818593163);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818593130(this));};

function hideCompletions_2818593220(self_2818593221) {
    self_2818593221.showCompletions = false;
    markDirty_2415919143(self_2818593221);

  
}

function hideCompletionsJsWrapper_2818593216(self_2818593249) {
    hideCompletions_2818593220(self_2818593249);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818593216(this));};

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function selectPrevCompletion_2818593270(self_2818593271) {
    if ((0 < (self_2818593271.completions).length)) {
    self_2818593271.selectedCompletion = clamp_1660945119(subInt(self_2818593271.selectedCompletion, 1), 0, subInt((self_2818593271.completions).length, 1));
    }
    else {
      self_2818593271.selectedCompletion = 0;
    }
    
    self_2818593271.scrollToCompletion = nimCopy(self_2818593271.scrollToCompletion, some_1191184367(self_2818593271.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593271);

  
}

function selectPrevCompletionJsWrapper_2818593266(self_2818593316) {
    selectPrevCompletion_2818593270(self_2818593316);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818593266(this));};

function selectNextCompletion_2818593337(self_2818593338) {
    if ((0 < (self_2818593338.completions).length)) {
    self_2818593338.selectedCompletion = clamp_1660945119(addInt(self_2818593338.selectedCompletion, 1), 0, subInt((self_2818593338.completions).length, 1));
    }
    else {
      self_2818593338.selectedCompletion = 0;
    }
    
    self_2818593338.scrollToCompletion = nimCopy(self_2818593338.scrollToCompletion, some_1191184367(self_2818593338.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2818593338);

  
}

function selectNextCompletionJsWrapper_2818593333(self_2818593383) {
    selectNextCompletion_2818593337(self_2818593383);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818593333(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818593583 = 0;
      var L_2818593584 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818593583 < L_2818593584)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818593583, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818593583 = addInt(i_2818593583, 1);
            if (!(((x_1593835575).length == L_2818593584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2449473857(cursor_2449473858) {
  var result_2449473859 = [];

  BeforeRet: {
    result_2449473859 = nimCopy(null, (HEX24_369098760(cursor_2449473858.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2449473858.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473859;

}

function addQuoted_2818593470(s_2818593472, s_2818593472_Idx, x_2818593473) {
    s_2818593472[s_2818593472_Idx].push.apply(s_2818593472[s_2818593472_Idx], HEX24_2449473857(x_2818593473));;

  
}

function addQuoted_2818593499(s_2818593501, s_2818593501_Idx, x_2818593502) {
    s_2818593501[s_2818593501_Idx].push.apply(s_2818593501[s_2818593501_Idx], reprEnum(x_2818593502, NTI2919235627));;

  
}

function HEX24_2818593420(x_2818593422) {
  var result_2818593423 = [[]];

    result_2818593423[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym934_2818593434 = 0;
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [110,97,109,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.name);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [115,99,111,112,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.scope);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [108,111,99,97,116,105,111,110]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_2818593470(result_2818593423, 0, x_2818593422.location);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [102,105,108,101,110,97,109,101]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.filename);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [107,105,110,100]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_2818593499(result_2818593423, 0, x_2818593422.kind);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [116,121,112]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.typ);
    if ((0 < countHEX60gensym934_2818593434)) {
    result_2818593423[0].push.apply(result_2818593423[0], [44,32]);;
    }
    
    result_2818593423[0].push.apply(result_2818593423[0], [100,111,99]);;
    result_2818593423[0].push.apply(result_2818593423[0], [58,32]);;
    countHEX60gensym934_2818593434 += 1;
    addQuoted_1593835572(result_2818593423, 0, x_2818593422.doc);
    result_2818593423[0].push.apply(result_2818593423[0], [41]);;

  return result_2818593423[0];

}

function formatValue_2818593415(result_2818593417, result_2818593417_Idx, value_2818593418, specifier_2818593419) {
    formatValue_721420459(result_2818593417, result_2818593417_Idx, HEX24_2818593420(value_2818593418), specifier_2818593419);

  
}

function applySelectedCompletion_2818593404(self_2818593405) {
  BeforeRet: {
    if (!(self_2818593405.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818593405.completions).length - 1 < self_2818593405.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818593409 = nimCopy(null, self_2818593405.completions[chckIndx(self_2818593405.selectedCompletion, 0, (self_2818593405.completions).length - 1)], NTI2919235630);
    var fmtRes_2818593414 = [mnewString(0)];
    fmtRes_2818593414[0].push.apply(fmtRes_2818593414[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818593415(fmtRes_2818593414, 0, com_2818593409, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818593414[0], NTI33554449)]);
    var cursor_2818593532 = nimCopy(null, selection_2818572805(self_2818593405).Field1, NTI2449473545);
    if ((cursor_2818593532.Field1 == 0)) {
    selectionsHEX3D_2818573083(self_2818593405, insert_2818579853(self_2818593405.document, [nimCopy(null, toSelection_2449474029(cursor_2818593532), NTI2449473547)], selections_2818572802(self_2818593405), com_2818593409.name, true, true, false));
    }
    else {
      var line_2818593533 = getLine_2818572666(self_2818593405.document, cursor_2818593532.Field0);
      var column_2818593534 = cursor_2818593532.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818593534)) break Label2;
            switch (line_2818593533[chckIndx(subInt(column_2818593534, 1), 0, (line_2818593533).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818593534 = subInt(column_2818593534, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573083(self_2818593405, edit_2818580070(self_2818593405.document, [nimCopy(null, {Field0: {Field0: cursor_2818593532.Field0, Field1: column_2818593534}, Field1: nimCopy(null, cursor_2818593532, NTI2449473545)}, NTI2818585703)], selections_2818572802(self_2818593405), com_2818593409.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818593400(self_2818593566) {
    applySelectedCompletion_2818593404(self_2818593566);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818593400(this));};

function handleHexChar_2046820364(c_2046820365) {
  var result_2046820366 = 0;

    switch (c_2046820365) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820366 = subInt(c_2046820365, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820366 = addInt(subInt(c_2046820365, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820366 = addInt(subInt(c_2046820365, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820366;

}

function hexbyte_2046820410(hex_2046820411) {
  var result_2046820412 = 0;

    result_2046820412 = handleHexChar_2046820364(hex_2046820411);

  return result_2046820412;

}

function hash_2046820393(x_2046820395) {
  var result_2046820396 = 0;

    result_2046820396 = hashWangYi1_1325400244(x_2046820395);

  return result_2046820396;

}

function hash_2046820389(oid_2046820390) {
  var result_2046820391 = 0;

    var h_2046820392 = 0;
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.time));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.fuzz));
    h_2046820392 = HEX21HEX26_1325400067(h_2046820392, hash_2046820393(oid_2046820390.count));
    result_2046820391 = HEX21HEX24_1325400082(h_2046820392);

  return result_2046820391;

}

function parseOid_2046820433(str_2046820434) {
  var result_2046820435 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820434).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820435.time = 0;
    Label1: {
      var i_2046820440 = 0;
      var i_2986344551 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2986344551 < 4)) break Label3;
            i_2046820440 = i_2986344551;
            var hexValue_2046820445 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, i_2046820440), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, i_2046820440), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.time = (result_2046820435.time | (hexValue_2046820445 << mulInt(i_2046820440, 8)));
            i_2986344551 = addInt(i_2986344551, 1);
          }
      };
    };
    result_2046820435.fuzz = 0;
    Label4: {
      var i_2046820454 = 0;
      var i_2986344554 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2986344554 < 4)) break Label6;
            i_2046820454 = i_2986344554;
            var hexValue_2046820459 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820454, 4)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820454, 4)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.fuzz = (result_2046820435.fuzz | (hexValue_2046820459 << mulInt(i_2046820454, 8)));
            i_2986344554 = addInt(i_2986344554, 1);
          }
      };
    };
    result_2046820435.count = 0;
    Label7: {
      var i_2046820468 = 0;
      var i_2986344557 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2986344557 < 4)) break Label9;
            i_2046820468 = i_2986344557;
            var hexValue_2046820473 = ((hexbyte_2046820410(str_2046820434[chckIndx(mulInt(2, addInt(i_2046820468, 8)), 0, (str_2046820434).length - 1)]) << 4) | hexbyte_2046820410(str_2046820434[chckIndx(addInt(mulInt(2, addInt(i_2046820468, 8)), 1), 0, (str_2046820434).length - 1)]));
            result_2046820435.count = (result_2046820435.count | (hexValue_2046820473 << mulInt(i_2046820468, 8)));
            i_2986344557 = addInt(i_2986344557, 1);
          }
      };
    };
    result_2046820435.padding = hash_2046820389(result_2046820435);
  };

  return result_2046820435;

}

function parseId_2046820640(s_2046820641) {
  var result_2046820642 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820641).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820641, [39]);
    result_2046820642 = nimCopy(result_2046820642, idNone_2046820633(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820642 = nimCopy(result_2046820642, parseOid_2046820433(s_2046820641), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820642;

}
var IdPrint_2986344450 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2986344451 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2986344452 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2986344453 = parseId_2046820640([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2986344454 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2986344455 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2986344456 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2986344457 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2986344458 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2986344459 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2986344460 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2986344461 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2986344462 = parseId_2046820640([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2986344463 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2986344464 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2986344465 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2986344466 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2986344467 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2986344468 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2986344469 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2986344470 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2986344471 = parseId_2046820640([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2986344472 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2986344473 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2986344474 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2986344475 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2986344476 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2986344477 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2986344478 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2986344479 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2986344480 = parseId_2046820640([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2986344481 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2986344482 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2986344483 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2986344484 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2986344485 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2986344486 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2986344487 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2986344488 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2986344489 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2986344490 = parseId_2046820640([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2986344491 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2986344492 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2986344493 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2986344494 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2986344495 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2986344496 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2986344497 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2986344498 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2986344499 = parseId_2046820640([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2986344500 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2986344501 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2986344502 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2986344503 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2986344504 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2986344505 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2986344506 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2986344507 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2986344508 = parseId_2046820640([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2986344509 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2986344510 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2986344511 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2986344512 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2986344513 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2986344514 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2986344515 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2986344516 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2986344517 = parseId_2046820640([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2986344518 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2986344519 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2986344520 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2986344521 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2986344522 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2986344523 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2986344524 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2986344525 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2986344526 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2986344527 = parseId_2046820640([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2986344528 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2986344529 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2986344530 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2986344531 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2986344532 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2986344533 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2986344534 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2986344535 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2986344536 = parseId_2046820640([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2986344537 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2986344538 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2986344539 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2986344540 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2986344541 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2986344542 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2986344543 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2986344544 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2986344545 = parseId_2046820640([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2986344546 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2986344547 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2986344548 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2986344549 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);

function getIdAstNodeJs(node_3003123792) {
  var result_3003123793 = null;

    return toCString(node_3003123792.id);

  return result_3003123793;

}
var currentIndent_3036676112 = [0];

function getIdItemIdJs(item_3036676280) {
  var result_3036676281 = null;

    return '' + toCString(item_3036676280.Field0) + item_3036676280.Field1;

  return result_3036676281;

}

function getIdDependencyJs(dep_3036676283) {
  var result_3036676284 = null;

    return getIdItemIdJs(dep_3036676283.Field0) + dep_3036676283.Field1;

  return result_3036676284;

}
var dependencyGlobalRevision_3036676217 = parseId_2046820640([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);

function getIdFunctionExecutionContextJs(fec_3087010823) {
  var result_3087010824 = null;

    return toCString(fec_3087010823.id);

  return result_3087010824;

}

function getIdSymbolJs(sym_3087010826) {
  var result_3087010827 = null;

    return toCString(sym_3087010826.id);

  return result_3087010827;

}

function getIdNodeLayoutInputJs(input_3087010829) {
  var result_3087010830 = null;

    return toCString(input_3087010829.id);

  return result_3087010830;

}
var config_3137339605 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function pop_1291849132(s_1291849134, s_1291849134_Idx) {
  var result_1291849135 = null;

    var L_1291849139 = subInt((s_1291849134[s_1291849134_Idx]).length, 1);
    result_1291849135 = s_1291849134[s_1291849134_Idx][chckIndx(L_1291849139, 0, (s_1291849134[s_1291849134_Idx]).length - 1)];
    if (s_1291849134[s_1291849134_Idx].length < chckRange(L_1291849139, 0, 2147483647)) { for (var i = s_1291849134[s_1291849134_Idx].length ; i < chckRange(L_1291849139, 0, 2147483647) ; ++i) s_1291849134[s_1291849134_Idx].push(null); }
               else { s_1291849134[s_1291849134_Idx].length = chckRange(L_1291849139, 0, 2147483647); };

  return result_1291849135;

}

function popPopup_1291849115(self_1291849116, popup_1291849117) {
    if (((0 < (self_1291849116.popups).length) && (self_1291849116.popups[chckIndx((self_1291849116.popups).length - 1, 0, (self_1291849116.popups).length - 1)] == popup_1291849117))) {
    var _ = pop_1291849132(self_1291849116, "popups");
    }
    
    requestRender_2768240746(self_1291849116.platform, false);

  
}

function markDirty_2483027989(self_2483027990) {
    if (!(self_2483027990.mDirty)) {
    invoke_2415919167(self_2483027990.onMarkedDirty);
    }
    
    self_2483027990.mDirty = true;

  
}

function accept_3187671507(self_3187671508) {
    if ((!((self_3187671508.handleItemConfirmed == null)) && (self_3187671508.selected < (self_3187671508.completions).length))) {
    self_3187671508.handleItemConfirmed(self_3187671508.completions[chckIndx(self_3187671508.selected, 0, (self_3187671508.completions).length - 1)]);
    }
    
    popPopup_1291849115(self_3187671508.editor, self_3187671508);
    markDirty_2483027989(self_3187671508);

  
}

function acceptJsWrapper_3187671503(self_3187671567) {
    accept_3187671507(self_3187671567);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3187671503(this));};

function cancel_3187671609(self_3187671610) {
    if (!((self_3187671610.handleCanceled == null))) {
    self_3187671610.handleCanceled();
    }
    
    popPopup_1291849115(self_3187671610.editor, self_3187671610);
    markDirty_2483027989(self_3187671610);

  
}

function cancelJsWrapper_3187671605(self_3187671644) {
    cancel_3187671609(self_3187671644);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3187671605(this));};

function prev_3187671665(self_3187671666) {
    var Temporary1;

    if (((self_3187671666.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3187671666.selected, (self_3187671666.completions).length), 1), (self_3187671666.completions).length);
    }
    
    self_3187671666.selected = Temporary1;
    if (((0 < (self_3187671666.completions).length) && !((self_3187671666.handleItemSelected == null)))) {
    self_3187671666.handleItemSelected(self_3187671666.completions[chckIndx(self_3187671666.selected, 0, (self_3187671666.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671666);

  
}

function prevJsWrapper_3187671661(self_3187671712) {
    prev_3187671665(self_3187671712);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3187671661(this));};

function next_3187671733(self_3187671734) {
    var Temporary1;

    if (((self_3187671734.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3187671734.selected, 1), (self_3187671734.completions).length);
    }
    
    self_3187671734.selected = Temporary1;
    if (((0 < (self_3187671734.completions).length) && !((self_3187671734.handleItemSelected == null)))) {
    self_3187671734.handleItemSelected(self_3187671734.completions[chckIndx(self_3187671734.selected, 0, (self_3187671734.completions).length - 1)]);
    }
    
    markDirty_2483027989(self_3187671734);

  
}

function nextJsWrapper_3187671729(self_3187671777) {
    next_3187671733(self_3187671777);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3187671729(this));};

function rawGet_3036676563(t_3036676566, key_3036676567, hc_3036676568, hc_3036676568_Idx) {
  var result_3036676569 = 0;

  BeforeRet: {
    hc_3036676568[hc_3036676568_Idx] = hash_1325400236(key_3036676567);
    if ((hc_3036676568[hc_3036676568_Idx] == 0)) {
    hc_3036676568[hc_3036676568_Idx] = 314159265;
    }
    
    if (((t_3036676566.data).length == 0)) {
    result_3036676569 = -1;
    break BeforeRet;
    }
    
    var h_3036676657 = (hc_3036676568[hc_3036676568_Idx] & (t_3036676566.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0)) break Label2;
          if (((t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field0 == hc_3036676568[hc_3036676568_Idx]) && (t_3036676566.data[chckIndx(h_3036676657, 0, (t_3036676566.data).length - 1)].Field1 == key_3036676567))) {
          result_3036676569 = h_3036676657;
          break BeforeRet;
          }
          
          h_3036676657 = nextTry_1308622883(h_3036676657, (t_3036676566.data).length - 1);
        }
    };
    result_3036676569 = subInt(-1, h_3036676657);
  };

  return result_3036676569;

}

function mustRehash_3036677087(t_3036677089) {
  var result_3036677090 = false;

    if (!((t_3036677089.counter < (t_3036677089.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036677090 = ((mulInt((t_3036677089.data).length, 2) < mulInt(t_3036677089.counter, 3)) || (subInt((t_3036677089.data).length, t_3036677089.counter) < 4));

  return result_3036677090;

}

function rawInsert_3036677780(t_3036677784, data_3036677785, data_3036677785_Idx, key_3036677786, val_3036677787, hc_3036677788, h_3036677789) {
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field1 = key_3036677786;
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field2 = nimCopy(null, val_3036677787, NTI33554449);
    data_3036677785[data_3036677785_Idx][chckIndx(h_3036677789, 0, (data_3036677785[data_3036677785_Idx]).length - 1)].Field0 = hc_3036677788;

  
}

function enlarge_3036677344(t_3036677347) {
    var n_3036677350 = [];
    n_3036677350 = new Array(chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036677347.data).length, 2), 0, 2147483647) ; ++i) { n_3036677350[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3036677347.data; t_3036677347.data = n_3036677350; n_3036677350 = Temporary1;    Label2: {
      var i_3036677448 = 0;
      var colontmp__2969567311 = 0;
      colontmp__2969567311 = (n_3036677350).length - 1;
      var res_2969567312 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567312 <= colontmp__2969567311)) break Label4;
            i_3036677448 = res_2969567312;
            var eh_3036677529 = n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036677529)) {
            var j_3036677533 = (eh_3036677529 & (t_3036677347.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036677347.data[chckIndx(j_3036677533, 0, (t_3036677347.data).length - 1)].Field0)) break Label6;
                  j_3036677533 = nextTry_1308622883(j_3036677533, (t_3036677347.data).length - 1);
                }
            };
            rawInsert_3036677780(t_3036677347, t_3036677347, "data", n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field1, n_3036677350[chckIndx(i_3036677448, 0, (n_3036677350).length - 1)].Field2, eh_3036677529, j_3036677533);
            }
            
            res_2969567312 = addInt(res_2969567312, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036678030(t_3036678033, key_3036678034, hc_3036678035) {
  var result_3036678036 = 0;

  BeforeRet: {
    if (((t_3036678033.data).length == 0)) {
    result_3036678036 = -1;
    break BeforeRet;
    }
    
    var h_3036678121 = (hc_3036678035 & (t_3036678033.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0)) break Label2;
          if (((t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field0 == hc_3036678035) && (t_3036678033.data[chckIndx(h_3036678121, 0, (t_3036678033.data).length - 1)].Field1 == key_3036678034))) {
          result_3036678036 = h_3036678121;
          break BeforeRet;
          }
          
          h_3036678121 = nextTry_1308622883(h_3036678121, (t_3036678033.data).length - 1);
        }
    };
    result_3036678036 = subInt(-1, h_3036678121);
  };

  return result_3036678036;

}

function HEX5BHEX5DHEX3D_3036676468(t_3036676471, key_3036676472, val_3036676473) {
    if (((t_3036676471.data).length == 0)) {
    var correctSizeHEX60gensym3_3036676557 = slotsNeeded_1308622891(32);
    t_3036676471.counter = 0;
    t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3036676557, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3036676562 = [0];
    var index_3036676919 = rawGet_3036676563(t_3036676471, key_3036676472, hc_3036676562, 0);
    if ((0 <= index_3036676919)) {
    t_3036676471.data[chckIndx(index_3036676919, 0, (t_3036676471.data).length - 1)].Field2 = nimCopy(null, val_3036676473, NTI33554449);
    }
    else {
      if (((t_3036676471.data).length == 0)) {
      var correctSizeHEX60gensym8_3036677082 = slotsNeeded_1308622891(32);
      t_3036676471.counter = 0;
      t_3036676471.data = new Array(chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3036677082, 0, 2147483647) ; ++i) { t_3036676471.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3036677087(t_3036676471)) {
      enlarge_3036677344(t_3036676471);
      index_3036676919 = rawGetKnownHC_3036678030(t_3036676471, key_3036676472, hc_3036676562[0]);
      }
      
      index_3036676919 = subInt(-1, index_3036676919);
      rawInsert_3036677780(t_3036676471, t_3036676471, "data", key_3036676472, val_3036676473, hc_3036676562[0], index_3036676919);
      t_3036676471.counter = addInt(t_3036676471.counter, 1);
    }
    

  
}

function newDependencyGraph_3036676400() {
  var result_3036676401 = null;

    result_3036676401 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3036676401.revision = 0;
    HEX5BHEX5DHEX3D_3036676468(result_3036676401.queryNames, -1, []);
    result_3036676401.verified = (new Map());
    result_3036676401.changed = (new Map());
    result_3036676401.fingerprints = (new Map());
    result_3036676401.dependencies = (new Map());

  return result_3036676401;

}

function mapKeyJs_3019899588(key_3019899590) {
  var result_3019899591 = null;

    let temp = key_3019899590;
    let newId = getIdItemIdJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899591;

}

function contains_3019899577(t_3019899580, key_3019899581) {
  var result_3019899582 = false;

    result_3019899582 = t_3019899580.has(mapKeyJs_3019899588(key_3019899581));

  return result_3019899582;

}

function HEX24_2046820617(id_2046820618) {
  var result_2046820619 = [];

  BeforeRet: {
    result_2046820619 = nimCopy(null, HEX24_2046820478(id_2046820618), NTI33554449);
    break BeforeRet;
  };

  return result_2046820619;

}

function formatValue_3036676344(result_3036676346, result_3036676346_Idx, value_3036676347, specifier_3036676348) {
    formatValue_721420459(result_3036676346, result_3036676346_Idx, HEX24_2046820617(value_3036676347), specifier_3036676348);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2701131953(n_2701131955, radix_2701131956, spec_2701131957) {
    var Temporary1;

  var result_2701131958 = [];

    var n_2701131961 = n_2701131955;
    var negative_2701131962 = (n_2701131961 < 0);
    if (negative_2701131962) {
    Temporary1 = ((~(n_2701131961) + 1) );
    }
    else {
    Temporary1 = n_2701131961;
    }
    
    var v_2701131963 = Temporary1;
    var xx_2701131964 = [];
    if (spec_2701131957.alternateForm) {
    switch (spec_2701131957.typ) {
    case 88:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2701131964 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2701131964 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2701131964 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2701131963 == 0)) {
    result_2701131958 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2701131963)) break Label3;
            var d_2701131965 = (v_2701131963 % radix_2701131956);
            v_2701131963 = Math.trunc(((v_2701131963 / radix_2701131956) ));
            result_2701131958.push.apply(result_2701131958, mkDigit_721420293(chckRange(d_2701131965, -2147483648, 2147483647), spec_2701131957.typ));;
          }
      };
      Label4: {
        var idx_2701131970 = 0;
        var colontmp__2969567317 = 0;
        colontmp__2969567317 = divInt((result_2701131958).length, 2);
        var i_2969567318 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567318 < colontmp__2969567317)) break Label6;
              idx_2701131970 = i_2969567318;
              var Temporary7 = result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(idx_2701131970, 0, (result_2701131958).length - 1)] = result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)]; result_2701131958[chckIndx(subInt(subInt((result_2701131958).length, idx_2701131970), 1), 0, (result_2701131958).length - 1)] = Temporary7;              i_2969567318 = addInt(i_2969567318, 1);
            }
        };
      };
    }
    
    if (spec_2701131957.padWithZero) {
    var sign_2701131975 = (negative_2701131962 || !((spec_2701131957.sign == 45)));
    var toFill_2701131979 = subInt(subInt(subInt(spec_2701131957.minimumWidth, (result_2701131958).length), (xx_2701131964).length), (sign_2701131975 ? 1 : 0));
    if ((0 < toFill_2701131979)) {
    result_2701131958 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2701131979, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
    }
    
    }
    
    if (negative_2701131962) {
    result_2701131958 = nimCopy(null, ([45] || []).concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
    if (!((spec_2701131957.sign == 45))) {
    result_2701131958 = nimCopy(null, [spec_2701131957.sign].concat(xx_2701131964 || [],result_2701131958 || []), NTI33554449);
    }
    else {
      result_2701131958 = nimCopy(null, (xx_2701131964 || []).concat(result_2701131958 || []), NTI33554449);
    }
    }
    if ((spec_2701131957.align == 60)) {
    Label8: {
      var i_2701131984 = 0;
      var colontmp__2969567321 = 0;
      colontmp__2969567321 = (result_2701131958).length;
      var i_2969567322 = colontmp__2969567321;
      Label9: {
          Label10: while (true) {
          if (!(i_2969567322 < spec_2701131957.minimumWidth)) break Label10;
            i_2701131984 = i_2969567322;
            addChar(result_2701131958, spec_2701131957.fill);;
            i_2969567322 = addInt(i_2969567322, 1);
          }
      };
    };
    }
    else {
      var toFill_2701131985 = subInt(spec_2701131957.minimumWidth, (result_2701131958).length);
      if ((spec_2701131957.align == 94)) {
      var half_2701131986 = divInt(toFill_2701131985, 2);
      result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(half_2701131986, 0, 2147483647)) || []).concat(result_2701131958 || [],nsuRepeatChar(spec_2701131957.fill, chckRange(subInt(toFill_2701131985, half_2701131986), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2701131985)) {
        result_2701131958 = nimCopy(null, (nsuRepeatChar(spec_2701131957.fill, chckRange(toFill_2701131985, 0, 2147483647)) || []).concat(result_2701131958 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2701131958;

}

function formatValue_2701131945(result_2701131947, result_2701131947_Idx, value_2701131948, specifier_2701131949) {
  BeforeRet: {
    if (((specifier_2701131949).length == 0)) {
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], HEX24_369098760(value_2701131948));;
    break BeforeRet;
    }
    
    var spec_2701131950 = parseStandardFormatSpecifier_721420346(specifier_2701131949, 0, false);
    var radix_2701131951 = 10;
    switch (spec_2701131950.typ) {
    case 120:
    case 88:
      radix_2701131951 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2701131951 = 2;
      break;
    case 111:
      radix_2701131951 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2701131950.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2701131947[result_2701131947_Idx].push.apply(result_2701131947[result_2701131947_Idx], formatInt_2701131953(value_2701131948, radix_2701131951, spec_2701131950));;
  };

  
}

function HEX24_3036676336(item_3036676337) {
  var result_3036676338 = [];

  BeforeRet: {
    var fmtRes_3036676343 = [mnewString(0)];
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [40]);;
    formatValue_3036676344(fmtRes_3036676343, 0, item_3036676337.Field0, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [44,32]);;
    formatValue_2701131945(fmtRes_3036676343, 0, item_3036676337.Field1, []);
    fmtRes_3036676343[0].push.apply(fmtRes_3036676343[0], [41]);;
    result_3036676338 = nimCopy(null, fmtRes_3036676343[0], NTI33554449);
    break BeforeRet;
  };

  return result_3036676338;

}

function HEX5BHEX5D_3019899687(t_3019899690, key_3019899691) {
  var result_3019899692 = null;

    result_3019899692 = t_3019899690.get(mapKeyJs_3019899588(key_3019899691));

  return result_3019899692;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2969567352 = 0;
      colontmp__2969567352 = n_855639143;
      var res_2969567353 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567353 <= colontmp__2969567352)) break Label3;
            i_855639149 = res_2969567353;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2969567353 = addInt(res_2969567353, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3036676113(s_3036676114, n_3036676115) {
  var result_3036676116 = [];

    result_3036676116 = nimCopy(null, nsuRepeatStr(s_3036676114, n_3036676115), NTI33554449);

  return result_3036676116;

}

function symbolName_3003123674(a_3003123676) {
  var result_3003123677 = [];

    result_3003123677 = nimCopy(null, names_3003123684[chckIndx(subInt(a_3003123676, 0), 0, (names_3003123684).length - 1)], NTI33554449);

  return result_3003123677;

}

function HEX3DHEX3D_2046820385(oid1_2046820386, oid2_2046820387) {
  var result_2046820388 = false;

    result_2046820388 = (((oid1_2046820386.time == oid2_2046820387.time) && (oid1_2046820386.fuzz == oid2_2046820387.fuzz)) && (oid1_2046820386.count == oid2_2046820387.count));

  return result_2046820388;

}

function HEX3DHEX3D_2046820626(idA_2046820627, idB_2046820628) {
  var result_2046820629 = false;

  BeforeRet: {
    result_2046820629 = HEX3DHEX3D_2046820385(idA_2046820627, idB_2046820628);
    break BeforeRet;
  };

  return result_2046820629;

}

function len_3003121752(node_3003121753) {
  var result_3003121754 = 0;

  BeforeRet: {
    result_3003121754 = (node_3003121753.children).length;
    break BeforeRet;
  };

  return result_3003121754;

}

function collectionToString_3003123772(x_3003123774, prefix_3003123775, separator_3003123776, suffix_3003123777) {
  var result_3003123778 = [[]];

    result_3003123778[0] = nimCopy(null, prefix_3003123775, NTI33554449);
    var firstElement_3003123779 = true;
    Label1: {
      var value_3003123783 = 0;
      var i_2969567357 = 0;
      var L_2969567358 = (x_3003123774).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567357 < L_2969567358)) break Label3;
            value_3003123783 = x_3003123774[i_2969567357];
            if (firstElement_3003123779) {
            firstElement_3003123779 = false;
            }
            else {
            result_3003123778[0].push.apply(result_3003123778[0], separator_3003123776);;
            }
            
            addQuoted_855639425(result_3003123778, 0, value_3003123783);
            i_2969567357 += 1;
            if (!(((x_3003123774).length == L_2969567358))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003123778[0].push.apply(result_3003123778[0], suffix_3003123777);;

  return result_3003123778[0];

}

function HEX24_3003123768(x_3003123770) {
  var result_3003123771 = [];

    result_3003123771 = nimCopy(null, collectionToString_3003123772(x_3003123770, [64,91], [44,32], [93]), NTI33554449);

  return result_3003123771;

}

function find_3003121779(a_3003121782, item_3003121783) {
  var result_3003121784 = 0;

  BeforeRet: {
    result_3003121784 = 0;
    Label1: {
      var i_3003121806 = null;
      var i_2969567362 = 0;
      var L_2969567363 = (a_3003121782).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567362 < L_2969567363)) break Label3;
            i_3003121806 = a_3003121782[chckIndx(i_2969567362, 0, (a_3003121782).length - 1)];
            if ((i_3003121806 == item_3003121783)) {
            break BeforeRet;
            }
            
            result_3003121784 = addInt(result_3003121784, 1);
            i_2969567362 = addInt(i_2969567362, 1);
            if (!(((a_3003121782).length == L_2969567363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003121784 = -1;
  };

  return result_3003121784;

}

function index_3003121772(node_3003121773) {
  var result_3003121774 = 0;

  BeforeRet: {
    if ((node_3003121773.parent == null)) {
    result_3003121774 = -1;
    break BeforeRet;
    }
    
    result_3003121774 = find_3003121779(node_3003121773.parent.children, node_3003121773);
    break BeforeRet;
  };

  return result_3003121774;

}

function reverse_3003123641(a_3003123643, first_3003123644, last_3003123645) {
    var x_3003123646 = first_3003123644;
    var y_3003123647 = last_3003123645;
    Label1: {
        Label2: while (true) {
        if (!(x_3003123646 < y_3003123647)) break Label2;
          var Temporary3 = a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(x_3003123646, 0, (a_3003123643).length - 1)] = a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)]; a_3003123643[chckIndx(y_3003123647, 0, (a_3003123643).length - 1)] = Temporary3;          y_3003123647 = subInt(y_3003123647, 1);
          x_3003123646 = addInt(x_3003123646, 1);
        }
    };

  
}

function reverse_3003123635(a_3003123637) {
    reverse_3003123641(a_3003123637, 0, chckRange(nimMax(0, (a_3003123637).length - 1), 0, 2147483647));

  
}

function path_3003123619(node_3003123620) {
  var result_3003123621 = [];

    result_3003123621 = nimCopy(null, [], NTI3003122753);
    var node_3003123626 = node_3003123620;
    Label1: {
        Label2: while (true) {
        if (!!((node_3003123626.parent == null))) break Label2;
          result_3003123621.push(index_3003121772(node_3003123626));;
          node_3003123626 = node_3003123626.parent;
        }
    };
    reverse_3003123635(result_3003123621);

  return result_3003123621;

}

function HEX24_3003123671(node_3003123672) {
  var result_3003123673 = [];

    result_3003123673 = nimCopy(null, (symbolName_3003123674(node_3003123672.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820626(node_3003123672.id, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_2046820617(node_3003123672.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820626(node_3003123672.reff, idNone_2046820633()))) {
    result_3003123673.push.apply(result_3003123673, ([114,101,102,102,58,32] || []).concat(HEX24_2046820617(node_3003123672.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_3003123672.text).length)) {
    result_3003123673.push.apply(result_3003123673, ([39] || []).concat(node_3003123672.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_3003121752(node_3003123672))) {
    result_3003123673.push.apply(result_3003123673, (HEX24_369098760(len_3003121752(node_3003123672)) || []).concat([44,32] || []));;
    }
    
    result_3003123673.push.apply(result_3003123673, HEX24_3003123768(path_3003123619(node_3003123672)));;
    result_3003123673.push.apply(result_3003123673, [41]);;

  return result_3003123673;

}

function getTypeKey_3019913206(ctxHEX60gensym95_3019913207, itemIdHEX60gensym95_3019913208) {
  var result_3019913209 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567366 = nimCopy(null, itemIdHEX60gensym95_3019913208, NTI3036676201);
    var colontmp__2969567367 = 0;
    result_3019913209 = nimCopy(result_3019913209, {Field0: nimCopy(null, colontmp__2969567366, NTI3036676201), Field1: colontmp__2969567367}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019913209;

}

function bigEndian32_2046820550(b_2046820551) {
  var result_2046820552 = 0;

    result_2046820552 = (((((b_2046820551 & 255) << 24) | ((b_2046820551 & 65280) << 8)) | ((b_2046820551 & 16711680) >> 8)) | (b_2046820551 >> 24));

  return result_2046820552;

}

function genOid_2046820580() {
  var result_2046820581 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820584 = Date.now();
    var iHEX60gensym1_2046820585 = 0;
    incr_2046820531[0] = addInt(incr_2046820531[0], 1);
    iHEX60gensym1_2046820585 = ((incr_2046820531[0]) | 0);
    result_2046820581.time = bigEndian32_2046820550(timeHEX60gensym1_2046820584);
    result_2046820581.fuzz = fuzz_2046820536;
    result_2046820581.count = bigEndian32_2046820550(iHEX60gensym1_2046820585);
    result_2046820581.padding = hash_2046820389(result_2046820581);

  return result_2046820581;

}

function newId_2046820597() {
  var result_2046820598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820598 = nimCopy(result_2046820598, genOid_2046820580(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820598;

}

function getItem_3019906357(selfHEX60gensym80_3019906358) {
  var result_3019906359 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)) {
    selfHEX60gensym80_3019906358.id = nimCopy(selfHEX60gensym80_3019906358.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym80_3019906358.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,48,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567368 = nimCopy(null, selfHEX60gensym80_3019906358.id, NTI2046820355);
    var colontmp__2969567369 = 0;
    result_3019906359 = nimCopy(result_3019906359, {Field0: nimCopy(null, colontmp__2969567368, NTI2046820355), Field1: colontmp__2969567369}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906359;

}

function hash_2046820630(id_2046820631) {
  var result_2046820632 = 0;

  BeforeRet: {
    result_2046820632 = id_2046820631.padding;
    break BeforeRet;
  };

  return result_2046820632;

}

function hash_3019908340(x_3019908342) {
  var result_3019908343 = 0;

    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_2046820630(x_3019908342["Field0"]));
    result_3019908343 = HEX21HEX26_1325400067(result_3019908343, hash_1325400236(x_3019908342["Field1"]));
    result_3019908343 = HEX21HEX24_1325400082(result_3019908343);

  return result_3019908343;

}

function hash_3019908332(x_3019908334) {
  var result_3019908335 = 0;

    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_3019908340(x_3019908334["Field0"]));
    result_3019908335 = HEX21HEX26_1325400067(result_3019908335, hash_1325400236(x_3019908334["Field1"]));
    result_3019908335 = HEX21HEX24_1325400082(result_3019908335);

  return result_3019908335;

}

function HEX3DHEX3D_3019908690(x_3019908692, y_3019908693) {
  var result_3019908694 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820626(x_3019908692["Field0"], y_3019908693["Field0"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908692["Field1"] == y_3019908693["Field1"]))) {
    result_3019908694 = false;
    break BeforeRet;
    }
    
    result_3019908694 = true;
    break BeforeRet;
  };

  return result_3019908694;

}

function HEX3DHEX3D_3019908680(x_3019908682, y_3019908683) {
  var result_3019908684 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019908690(x_3019908682["Field0"], y_3019908683["Field0"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    if (!((x_3019908682["Field1"] == y_3019908683["Field1"]))) {
    result_3019908684 = false;
    break BeforeRet;
    }
    
    result_3019908684 = true;
    break BeforeRet;
  };

  return result_3019908684;

}

function rawGet_3019940162(t_3019940165, key_3019940166, hc_3019940167, hc_3019940167_Idx) {
  var result_3019940168 = 0;

  BeforeRet: {
    hc_3019940167[hc_3019940167_Idx] = hash_3019908332(key_3019940166);
    if ((hc_3019940167[hc_3019940167_Idx] == 0)) {
    hc_3019940167[hc_3019940167_Idx] = 314159265;
    }
    
    if (((t_3019940165.data).length == 0)) {
    result_3019940168 = -1;
    break BeforeRet;
    }
    
    var h_3019940257 = (hc_3019940167[hc_3019940167_Idx] & (t_3019940165.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0)) break Label2;
          if (((t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field0 == hc_3019940167[hc_3019940167_Idx]) && HEX3DHEX3D_3019908680(t_3019940165.data[chckIndx(h_3019940257, 0, (t_3019940165.data).length - 1)].Field1, key_3019940166))) {
          result_3019940168 = h_3019940257;
          break BeforeRet;
          }
          
          h_3019940257 = nextTry_1308622883(h_3019940257, (t_3019940165.data).length - 1);
        }
    };
    result_3019940168 = subInt(-1, h_3019940257);
  };

  return result_3019940168;

}

function hasKey_3019940155(t_3019940158, key_3019940159) {
  var result_3019940160 = false;

    var hc_3019940161 = [0];
    result_3019940160 = (0 <= rawGet_3019940162(t_3019940158, key_3019940159, hc_3019940161, 0));

  return result_3019940160;

}

function contains_3019940149(t_3019940152, key_3019940153) {
  var result_3019940154 = false;

  BeforeRet: {
    result_3019940154 = hasKey_3019940155(t_3019940152, key_3019940153);
    break BeforeRet;
  };

  return result_3019940154;

}

function addQuoted_3019911830(s_3019911832, s_3019911832_Idx, x_3019911833) {
    s_3019911832[s_3019911832_Idx].push.apply(s_3019911832[s_3019911832_Idx], HEX24_3036676336(x_3019911833));;

  
}

function HEX24_3019911804(x_3019911806) {
  var result_3019911807 = [[]];

    result_3019911807[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym236_3019911818 = 0;
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [105,116,101,109]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_3019911830(result_3019911807, 0, x_3019911806["Field0"]);
    if ((0 < countHEX60gensym236_3019911818)) {
    result_3019911807[0].push.apply(result_3019911807[0], [44,32]);;
    }
    
    result_3019911807[0].push.apply(result_3019911807[0], [117,112,100,97,116,101]);;
    result_3019911807[0].push.apply(result_3019911807[0], [58,32]);;
    countHEX60gensym236_3019911818 += 1;
    addQuoted_855639425(result_3019911807, 0, x_3019911806["Field1"]);
    result_3019911807[0].push.apply(result_3019911807[0], [41]);;

  return result_3019911807[0];

}

function raiseKeyError_3019940688(key_3019940690) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019911804(key_3019940690) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940594(t_3019940597, key_3019940598) {
  var result_3019940599 = null;
  var result_3019940599_Idx = 0;

    var hcHEX60gensym22_3019940600 = [0];
    var indexHEX60gensym22_3019940607 = rawGet_3019940162(t_3019940597, key_3019940598, hcHEX60gensym22_3019940600, 0);
    if ((0 <= indexHEX60gensym22_3019940607)) {
    result_3019940599 = t_3019940597.data[chckIndx(indexHEX60gensym22_3019940607, 0, (t_3019940597.data).length - 1)]; result_3019940599_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019940598);
    }
    

  return [result_3019940599, result_3019940599_Idx];

}

function rawGet_3019941324(t_3019941327, key_3019941328, hc_3019941329, hc_3019941329_Idx) {
  var result_3019941330 = 0;

  BeforeRet: {
    hc_3019941329[hc_3019941329_Idx] = hash_3019908332(key_3019941328);
    if ((hc_3019941329[hc_3019941329_Idx] == 0)) {
    hc_3019941329[hc_3019941329_Idx] = 314159265;
    }
    
    if (((t_3019941327.data).length == 0)) {
    result_3019941330 = -1;
    break BeforeRet;
    }
    
    var h_3019941419 = (hc_3019941329[hc_3019941329_Idx] & (t_3019941327.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0)) break Label2;
          if (((t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field0 == hc_3019941329[hc_3019941329_Idx]) && HEX3DHEX3D_3019908680(t_3019941327.data[chckIndx(h_3019941419, 0, (t_3019941327.data).length - 1)].Field1, key_3019941328))) {
          result_3019941330 = h_3019941419;
          break BeforeRet;
          }
          
          h_3019941419 = nextTry_1308622883(h_3019941419, (t_3019941327.data).length - 1);
        }
    };
    result_3019941330 = subInt(-1, h_3019941419);
  };

  return result_3019941330;

}

function del_3019941318(t_3019941321, key_3019941322) {
    var hc_3019941323 = [0];
    var i_3019941685 = rawGet_3019941324(t_3019941321, key_3019941322, hc_3019941323, 0);
    var mskHEX60gensym36_3019941689 = (t_3019941321.data).length - 1;
    if ((0 <= i_3019941685)) {
    t_3019941321.counter = subInt(t_3019941321.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019941696 = i_3019941685;
            var rHEX60gensym36_3019941697 = jHEX60gensym36_3019941696;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 = 0;
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1 = nimCopy(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898888);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019941685 = (addInt(i_3019941685, 1) & mskHEX60gensym36_3019941689);
                  if (isEmpty_1308622877(t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019941697 = (t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)].Field0 & mskHEX60gensym36_3019941689);
                  if (!(((((rHEX60gensym36_3019941697 <= i_3019941685) && (jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697)) || ((jHEX60gensym36_3019941696 < rHEX60gensym36_3019941697) && (i_3019941685 < jHEX60gensym36_3019941696))) || ((i_3019941685 < jHEX60gensym36_3019941696) && (rHEX60gensym36_3019941697 <= i_3019941685))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)] = nimCopy(t_3019941321.data[chckIndx(jHEX60gensym36_3019941696, 0, (t_3019941321.data).length - 1)], t_3019941321.data[chckIndx(i_3019941685, 0, (t_3019941321.data).length - 1)], NTI3019898900);
          }
      };
    };
    }
    

  
}

function rawGet_3019940817(t_3019940820, key_3019940821, hc_3019940822, hc_3019940822_Idx) {
  var result_3019940823 = 0;

  BeforeRet: {
    hc_3019940822[hc_3019940822_Idx] = hash_2046820630(key_3019940821);
    if ((hc_3019940822[hc_3019940822_Idx] == 0)) {
    hc_3019940822[hc_3019940822_Idx] = 314159265;
    }
    
    if (((t_3019940820.data).length == 0)) {
    result_3019940823 = -1;
    break BeforeRet;
    }
    
    var h_3019940909 = (hc_3019940822[hc_3019940822_Idx] & (t_3019940820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0)) break Label2;
          if (((t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field0 == hc_3019940822[hc_3019940822_Idx]) && HEX3DHEX3D_2046820626(t_3019940820.data[chckIndx(h_3019940909, 0, (t_3019940820.data).length - 1)].Field1, key_3019940821))) {
          result_3019940823 = h_3019940909;
          break BeforeRet;
          }
          
          h_3019940909 = nextTry_1308622883(h_3019940909, (t_3019940820.data).length - 1);
        }
    };
    result_3019940823 = subInt(-1, h_3019940909);
  };

  return result_3019940823;

}

function raiseKeyError_3003123480(key_3003123482) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820617(key_3003123482) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3019940810(t_3019940813, key_3019940814) {
  var result_3019940815 = null;

    var hcHEX60gensym22_3019940816 = [0];
    var indexHEX60gensym22_3019941162 = rawGet_3019940817(t_3019940813, key_3019940814, hcHEX60gensym22_3019940816, 0);
    if ((0 <= indexHEX60gensym22_3019941162)) {
    result_3019940815 = t_3019940813.data[chckIndx(indexHEX60gensym22_3019941162, 0, (t_3019940813.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3019940814);
    }
    

  return result_3019940815;

}

function voidType_3087008167() {
  var result_3087008168 = null;

    result_3087008168 = {kind: 1, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008168;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet60[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet61[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008169() {
  var result_3087008170 = null;

    result_3087008170 = {kind: 3, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008170;

}

function errorType_3087008131() {
  var result_3087008132 = null;

    result_3087008132 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008132;

}

function stringType_3087008171() {
  var result_3087008172 = null;

    result_3087008172 = {kind: 2, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008172;

}

function HEX5BHEX5D_3003121748(node_3003121749, index_3003121750) {
  var result_3003121751 = null;

  BeforeRet: {
    result_3003121751 = node_3003121749.children[chckIndx(index_3003121750, 0, (node_3003121749.children).length - 1)];
    break BeforeRet;
  };

  return result_3003121751;

}

function recordDependency_3019906144(ctxHEX60gensym77_3019906145, itemHEX60gensym77_3019906146, updateHEX60gensym77_3019906147) {
    if ((0 < (ctxHEX60gensym77_3019906145.dependencyStack).length)) {
    ctxHEX60gensym77_3019906145.dependencyStack[chckIndx((ctxHEX60gensym77_3019906145.dependencyStack).length - 1, 0, (ctxHEX60gensym77_3019906145.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym77_3019906146, NTI3036676201), Field1: updateHEX60gensym77_3019906147});;
    }
    

  
}

function mapKeyJs_3036678533(key_3036678535) {
  var result_3036678536 = null;

    let temp = key_3036678535;
    let newId = getIdDependencyJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3036678536;

}

function getOrDefault_3036678520(t_3036678523, key_3036678524, default_3036678525) {
  var result_3036678526 = 0;

    result_3036678526 = orDefaultJs((t_3036678523).get(mapKeyJs_3036678533(key_3036678524)), (default_3036678525));

  return result_3036678526;

}

function nodeColor_3036678426(graph_3036678427, key_3036678428, parentVerified_3036678429) {
  var result_3036678430 = 0;

  BeforeRet: {
    if ((key_3036678428.Field1 == -1)) {
    var inputChangedRevision_3036678547 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((parentVerified_3036678429 < inputChangedRevision_3036678547)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    else {
      result_3036678430 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3036678643 = getOrDefault_3036678520(graph_3036678427.verified, key_3036678428, 0);
    if (!((verified_3036678643 == graph_3036678427.revision))) {
    result_3036678430 = 0;
    break BeforeRet;
    }
    
    var changed_3036678739 = getOrDefault_3036678520(graph_3036678427.changed, key_3036678428, graph_3036678427.revision);
    if ((changed_3036678739 == graph_3036678427.revision)) {
    result_3036678430 = 1;
    break BeforeRet;
    }
    
    result_3036678430 = 2;
    break BeforeRet;
  };

  return result_3036678430;

}

function mapKeyJs_3019899778(key_3019899780) {
  var result_3019899781 = null;

    let temp = key_3019899780;
    let newId = getIdAstNodeJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019899781;

}

function contains_3019913294(t_3019913297, key_3019913298) {
  var result_3019913299 = false;

    result_3019913299 = t_3019913297.has(mapKeyJs_3019899778(key_3019913298));

  return result_3019913299;

}

function HEX5BHEX5D_3019908139(t_3019908142, key_3019908143) {
  var result_3019908144 = null;
  var result_3019908144_Idx = 0;

    var hcHEX60gensym22_3019908145 = [0];
    var indexHEX60gensym22_3019908152 = rawGet_3036676563(t_3019908142, key_3019908143, hcHEX60gensym22_3019908145, 0);
    if ((0 <= indexHEX60gensym22_3019908152)) {
    result_3019908144 = t_3019908142.data[chckIndx(indexHEX60gensym22_3019908152, 0, (t_3019908142.data).length - 1)]; result_3019908144_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019908143);
    }
    

  return [result_3019908144, result_3019908144_Idx];

}

function rawGet_3019908325(t_3019908328, key_3019908329, hc_3019908330, hc_3019908330_Idx) {
  var result_3019908331 = 0;

  BeforeRet: {
    hc_3019908330[hc_3019908330_Idx] = hash_3019908332(key_3019908329);
    if ((hc_3019908330[hc_3019908330_Idx] == 0)) {
    hc_3019908330[hc_3019908330_Idx] = 314159265;
    }
    
    if (((t_3019908328.data).length == 0)) {
    result_3019908331 = -1;
    break BeforeRet;
    }
    
    var h_3019908439 = (hc_3019908330[hc_3019908330_Idx] & (t_3019908328.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0)) break Label2;
          if (((t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field0 == hc_3019908330[hc_3019908330_Idx]) && HEX3DHEX3D_3019908680(t_3019908328.data[chckIndx(h_3019908439, 0, (t_3019908328.data).length - 1)].Field1, key_3019908329))) {
          result_3019908331 = h_3019908439;
          break BeforeRet;
          }
          
          h_3019908439 = nextTry_1828716586(h_3019908439, (t_3019908328.data).length - 1);
        }
    };
    result_3019908331 = subInt(-1, h_3019908439);
  };

  return result_3019908331;

}

function contains_3019908312(s_3019908314, key_3019908315) {
  var result_3019908316 = false;

    var hc_3019908317 = [0];
    var index_3019908721 = rawGet_3019908325(s_3019908314, key_3019908315, hc_3019908317, 0);
    result_3019908316 = (0 <= index_3019908721);

  return result_3019908316;

}

function mustRehash_3019908857(t_3019908859) {
  var result_3019908860 = false;

    if (!((t_3019908859.counter < (t_3019908859.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019908860 = ((mulInt((t_3019908859.data).length, 2) < mulInt(t_3019908859.counter, 3)) || (subInt((t_3019908859.data).length, t_3019908859.counter) < 4));

  return result_3019908860;

}

function rawGetKnownHC_3019909463(t_3019909466, key_3019909467, hc_3019909468) {
  var result_3019909469 = 0;

  BeforeRet: {
    if (((t_3019909466.data).length == 0)) {
    result_3019909469 = -1;
    break BeforeRet;
    }
    
    var h_3019909554 = (hc_3019909468 & (t_3019909466.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0)) break Label2;
          if (((t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field0 == hc_3019909468) && HEX3DHEX3D_3019908680(t_3019909466.data[chckIndx(h_3019909554, 0, (t_3019909466.data).length - 1)].Field1, key_3019909467))) {
          result_3019909469 = h_3019909554;
          break BeforeRet;
          }
          
          h_3019909554 = nextTry_1828716586(h_3019909554, (t_3019909466.data).length - 1);
        }
    };
    result_3019909469 = subInt(-1, h_3019909554);
  };

  return result_3019909469;

}

function rawInsert_3019909967(s_3019909969, data_3019909970, data_3019909970_Idx, key_3019909971, hc_3019909972, h_3019909973) {
    if (((data_3019909970[data_3019909970_Idx]).length == 0)) {
    var correctSizeHEX60gensym222_3019910056 = slotsNeeded_1828716594(64);
    s_3019909969.counter = 0;
    s_3019909969.data = new Array(chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym222_3019910056, 0, 2147483647) ; ++i) { s_3019909969.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1 = nimCopy(data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field1, key_3019909971, NTI3036676204);
    data_3019909970[data_3019909970_Idx][chckIndx(h_3019909973, 0, (data_3019909970[data_3019909970_Idx]).length - 1)].Field0 = hc_3019909972;

  
}

function enlarge_3019909120(s_3019909122) {
    var n_3019909124 = [];
    n_3019909124 = new Array(chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019909122.data).length, 2), 0, 2147483647) ; ++i) { n_3019909124[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019909122.data; s_3019909122.data = n_3019909124; n_3019909124 = Temporary1;    Label2: {
      var i_3019909222 = 0;
      var colontmp__2969567383 = 0;
      colontmp__2969567383 = (n_3019909124).length - 1;
      var res_2969567384 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567384 <= colontmp__2969567383)) break Label4;
            i_3019909222 = res_2969567384;
            if (isFilled_1828716583(n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0)) {
            var j_3019909802 = subInt(-1, rawGetKnownHC_3019909463(s_3019909122, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0));
            rawInsert_3019909967(s_3019909122, s_3019909122, "data", n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field1, n_3019909124[chckIndx(i_3019909222, 0, (n_3019909124).length - 1)].Field0, j_3019909802);
            }
            
            res_2969567384 = addInt(res_2969567384, 1);
          }
      };
    };

  
}

function incl_3019908741(s_3019908743, key_3019908744) {
    if (((s_3019908743.data).length == 0)) {
    var correctSizeHEX60gensym215_3019908827 = slotsNeeded_1828716594(64);
    s_3019908743.counter = 0;
    s_3019908743.data = new Array(chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym215_3019908827, 0, 2147483647) ; ++i) { s_3019908743.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019908842 = [0];
    var index_3019908856 = rawGet_3019908325(s_3019908743, key_3019908744, hc_3019908842, 0);
    if ((index_3019908856 < 0)) {
    if (mustRehash_3019908857(s_3019908743)) {
    enlarge_3019909120(s_3019908743);
    index_3019908856 = rawGetKnownHC_3019909463(s_3019908743, key_3019908744, hc_3019908842[0]);
    }
    
    rawInsert_3019909967(s_3019908743, s_3019908743, "data", key_3019908744, hc_3019908842[0], subInt(-1, index_3019908856));
    s_3019908743.counter = addInt(s_3019908743.counter, 1);
    }
    

  
}

function getOrDefault_3019910448(t_3019910451, key_3019910452) {
  var result_3019910453 = [];

    var hcHEX60gensym223_3019910456 = [0];
    var indexHEX60gensym223_3019910463 = rawGet_3036676563(t_3019910451, key_3019910452, hcHEX60gensym223_3019910456, 0);
    if ((0 <= indexHEX60gensym223_3019910463)) {
    result_3019910453 = nimCopy(null, t_3019910451.data[chckIndx(indexHEX60gensym223_3019910463, 0, (t_3019910451.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3019910453;

}

function rawGet_3019902960(t_3019902963, key_3019902964, hc_3019902965, hc_3019902965_Idx) {
  var result_3019902966 = 0;

  BeforeRet: {
    hc_3019902965[hc_3019902965_Idx] = hash_1325400236(key_3019902964);
    if ((hc_3019902965[hc_3019902965_Idx] == 0)) {
    hc_3019902965[hc_3019902965_Idx] = 314159265;
    }
    
    if (((t_3019902963.data).length == 0)) {
    result_3019902966 = -1;
    break BeforeRet;
    }
    
    var h_3019903054 = (hc_3019902965[hc_3019902965_Idx] & (t_3019902963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0)) break Label2;
          if (((t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field0 == hc_3019902965[hc_3019902965_Idx]) && (t_3019902963.data[chckIndx(h_3019903054, 0, (t_3019902963.data).length - 1)].Field1 == key_3019902964))) {
          result_3019902966 = h_3019903054;
          break BeforeRet;
          }
          
          h_3019903054 = nextTry_1308622883(h_3019903054, (t_3019902963.data).length - 1);
        }
    };
    result_3019902966 = subInt(-1, h_3019903054);
  };

  return result_3019902966;

}

function hasKey_3019910626(t_3019910629, key_3019910630) {
  var result_3019910631 = false;

    var hc_3019910632 = [0];
    result_3019910631 = (0 <= rawGet_3019902960(t_3019910629, key_3019910630, hc_3019910632, 0));

  return result_3019910631;

}

function contains_3019910620(t_3019910623, key_3019910624) {
  var result_3019910625 = false;

  BeforeRet: {
    result_3019910625 = hasKey_3019910626(t_3019910623, key_3019910624);
    break BeforeRet;
  };

  return result_3019910625;

}

function HEX5BHEX5D_3019910719(t_3019910722, key_3019910723) {
  var result_3019910724 = null;
  var result_3019910724_Idx = 0;

    var hcHEX60gensym22_3019910725 = [0];
    var indexHEX60gensym22_3019910732 = rawGet_3019902960(t_3019910722, key_3019910723, hcHEX60gensym22_3019910725, 0);
    if ((0 <= indexHEX60gensym22_3019910732)) {
    result_3019910724 = t_3019910722.data[chckIndx(indexHEX60gensym22_3019910732, 0, (t_3019910722.data).length - 1)]; result_3019910724_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3019910723);
    }
    

  return [result_3019910724, result_3019910724_Idx];

}

function HEX5BHEX5DHEX3D_3036679291(t_3036679294, key_3036679295, val_3036679296) {
    t_3036679294.set(mapKeyJs_3036678533(key_3036679295), val_3036679296);

  
}

function HEX5BHEX5DHEX3D_3036679511(t_3036679514, key_3036679515, val_3036679516) {
    t_3036679514.set(mapKeyJs_3036678533(key_3036679515), val_3036679516);

  
}

function markRed_3036679306(graph_3036679307, key_3036679308, fingerprint_3036679309) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.verified, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679291(graph_3036679307.changed, key_3036679308, graph_3036679307.revision);
    HEX5BHEX5DHEX3D_3036679511(graph_3036679307.fingerprints, key_3036679308, fingerprint_3036679309);

  
}

function HEX5BHEX5DHEX3D_3036678949(t_3036678952, key_3036678953, val_3036678954) {
    t_3036678952.set(mapKeyJs_3036678533(key_3036678953), val_3036678954);

  
}

function clearEdges_3036678879(graph_3036678880, key_3036678881) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678880.dependencies, key_3036678881, []);

  
}

function setDependencies_3036678964(graph_3036678965, key_3036678966, deps_3036678967) {
    HEX5BHEX5DHEX3D_3036678949(graph_3036678965.dependencies, key_3036678966, deps_3036678967);

  
}

function pop_3019910865(s_3019910867, s_3019910867_Idx) {
  var result_3019910868 = [];

    var L_3019910872 = subInt((s_3019910867[s_3019910867_Idx]).length, 1);
    result_3019910868 = nimCopy(null, s_3019910867[s_3019910867_Idx][chckIndx(L_3019910872, 0, (s_3019910867[s_3019910867_Idx]).length - 1)], NTI3019898908);
    if (s_3019910867[s_3019910867_Idx].length < chckRange(L_3019910872, 0, 2147483647)) { for (var i = s_3019910867[s_3019910867_Idx].length ; i < chckRange(L_3019910872, 0, 2147483647) ; ++i) s_3019910867[s_3019910867_Idx].push([]); }
               else { s_3019910867[s_3019910867_Idx].length = chckRange(L_3019910872, 0, 2147483647); };

  return result_3019910868;

}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019910907(s_3019910909, key_3019910910) {
          var Temporary5;

  var result_3019910911 = false;

  BeforeRet: {
    var hc_3019910912 = [0];
    var i_3019910919 = rawGet_3019908325(s_3019910909, key_3019910910, hc_3019910912, 0);
    var msk_3019910923 = (s_3019910909.data).length - 1;
    result_3019910911 = true;
    if ((0 <= i_3019910919)) {
    result_3019910911 = false;
    s_3019910909.counter = subInt(s_3019910909.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019910929 = i_3019910919;
          var r_3019910930 = j_3019910929;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 = 0;
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1 = nimCopy(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019910919 = (addInt(i_3019910919, 1) & msk_3019910923);
                if (isEmpty_1828716580(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019910930 = (s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)].Field0 & msk_3019910923);
                if (!(((((r_3019910930 <= i_3019910919) && (j_3019910929 < r_3019910930)) || ((j_3019910929 < r_3019910930) && (i_3019910919 < j_3019910929))) || ((i_3019910919 < j_3019910929) && (r_3019910930 <= i_3019910919))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)];
          s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)] = genericReset(s_3019910909.data[chckIndx(i_3019910919, 0, (s_3019910909.data).length - 1)], NTI3019898919);
          s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)] = nimCopy(s_3019910909.data[chckIndx(j_3019910929, 0, (s_3019910909.data).length - 1)], Temporary5, NTI3019898919);
        }
    };
    }
    
  };

  return result_3019910911;

}

function excl_3019910892(s_3019910894, key_3019910895) {
    var _ = exclImpl_3019910907(s_3019910894, key_3019910895);

  
}

function pop_3019911495(s_3019911497, s_3019911497_Idx) {
  var result_3019911498 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3019911502 = subInt((s_3019911497[s_3019911497_Idx]).length, 1);
    result_3019911498 = nimCopy(result_3019911498, s_3019911497[s_3019911497_Idx][chckIndx(L_3019911502, 0, (s_3019911497[s_3019911497_Idx]).length - 1)], NTI3036676204);
    if (s_3019911497[s_3019911497_Idx].length < chckRange(L_3019911502, 0, 2147483647)) { for (var i = s_3019911497[s_3019911497_Idx].length ; i < chckRange(L_3019911502, 0, 2147483647) ; ++i) s_3019911497[s_3019911497_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3019911497[s_3019911497_Idx].length = chckRange(L_3019911502, 0, 2147483647); };

  return result_3019911498;

}

function contains_3036679117(t_3036679120, key_3036679121) {
  var result_3036679122 = false;

    result_3036679122 = t_3036679120.has(mapKeyJs_3036678533(key_3036679121));

  return result_3036679122;

}

function HEX5BHEX5D_3036679211(t_3036679214, key_3036679215) {
  var result_3036679216 = [];

    result_3036679216 = nimCopy(null, t_3036679214.get(mapKeyJs_3036678533(key_3036679215)), NTI3036676200);

  return result_3036679216;

}

function fingerprint_3036679037(graph_3036679038, key_3036679039) {
  var result_3036679040 = [];

  BeforeRet: {
    if (contains_3036679117(graph_3036679038.fingerprints, key_3036679039)) {
    result_3036679040 = nimCopy(null, HEX5BHEX5D_3036679211(graph_3036679038.fingerprints, key_3036679039), NTI3036676200);
    break BeforeRet;
    }
    
  };

  return result_3036679040;

}

function HEX3DHEX3D_3019911508(x_3019911510, y_3019911511) {
  var result_3019911512 = false;

  BeforeRet: {
    var sameObject_3019911519 = false;
    sameObject_3019911519 = x_3019911510 === y_3019911511
    if (sameObject_3019911519) {
    result_3019911512 = true;
    break BeforeRet;
    }
    
    if (!(((x_3019911510).length == (y_3019911511).length))) {
    result_3019911512 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3019911533 = 0;
      var colontmp__2969567391 = 0;
      colontmp__2969567391 = subInt((x_3019911510).length, 1);
      var res_2969567392 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567392 <= colontmp__2969567391)) break Label3;
            i_3019911533 = res_2969567392;
            if (!((x_3019911510[chckIndx(i_3019911533, 0, (x_3019911510).length - 1)] == y_3019911511[chckIndx(i_3019911533, 0, (y_3019911511).length - 1)]))) {
            result_3019911512 = false;
            break BeforeRet;
            }
            
            res_2969567392 = addInt(res_2969567392, 1);
          }
      };
    };
    result_3019911512 = true;
    break BeforeRet;
  };

  return result_3019911512;

}

function markGreen_3036679225(graph_3036679226, key_3036679227) {
    HEX5BHEX5DHEX3D_3036679291(graph_3036679226.verified, key_3036679227, graph_3036679226.revision);

  
}

function force_3019908046(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary3)[0][Temporary3[1]], HEX24_3036676336(keyHEX60gensym93_3019908048.Field0));
    }
    
    if (contains_3019908312(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048)) {
    incl_3019908741(ctxHEX60gensym93_3019908047.recursiveQueries, keyHEX60gensym93_3019908048);
    var itemHEX60gensym93_3019910260 = nimCopy(null, keyHEX60gensym93_3019908048.Field0, NTI3036676201);
    var queryHEX60gensym93_3019910346 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym93_3019908047.depGraph.queryNames, keyHEX60gensym93_3019908048.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym93_3019910260), [32,40], queryHEX60gensym93_3019910346, [41]);
    Label5: {
      var kHEX60gensym93_3019910354 = 0;
      var colontmp__2969567378 = 0;
      colontmp__2969567378 = (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1;
      var res_2969567379 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567379 <= colontmp__2969567378)) break Label7;
            kHEX60gensym93_3019910354 = res_2969567379;
            var iHEX60gensym93_3019910358 = subInt(subInt((ctxHEX60gensym93_3019908047.activeQueryStack).length, kHEX60gensym93_3019910354), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym93_3019910354), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym93_3019908047.depGraph.queryNames, ctxHEX60gensym93_3019908047.activeQueryStack[chckIndx(iHEX60gensym93_3019910358, 0, (ctxHEX60gensym93_3019908047.activeQueryStack).length - 1)].Field1));
            res_2969567379 = addInt(res_2969567379, 1);
          }
      };
    };
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym93_3019908047.recoveryFunctions, keyHEX60gensym93_3019908048.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym93_3019908048);
    markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var Temporary9 = nimCopy(null, keyHEX60gensym93_3019908048, NTI3036676204);
    ctxHEX60gensym93_3019908047.activeQueryStack.push(Temporary9);;
    clearEdges_3036678879(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    ctxHEX60gensym93_3019908047.dependencyStack.push([]);;
    recordDependency_3019906144(ctxHEX60gensym93_3019908047, keyHEX60gensym93_3019908048.Field0, -1);
    var fingerprintHEX60gensym93_3019910864 = ctxHEX60gensym93_3019908047.updateFunctions[chckIndx(keyHEX60gensym93_3019908048.Field1, 0, (ctxHEX60gensym93_3019908047.updateFunctions).length - 1)](keyHEX60gensym93_3019908048.Field0);
    setDependencies_3036678964(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, pop_3019910865(ctxHEX60gensym93_3019908047, "dependencyStack"));
    excl_3019910892(ctxHEX60gensym93_3019908047.activeQuerySet, keyHEX60gensym93_3019908048);
    var _ = pop_3019911495(ctxHEX60gensym93_3019908047, "activeQueryStack");
    var prevFingerprintHEX60gensym93_3019911507 = fingerprint_3036679037(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    if (HEX3DHEX3D_3019911508(fingerprintHEX60gensym93_3019910864, prevFingerprintHEX60gensym93_3019911507)) {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048);
    }
    else {
      if (ctxHEX60gensym93_3019908047.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3036679306(ctxHEX60gensym93_3019908047.depGraph, keyHEX60gensym93_3019908048, fingerprintHEX60gensym93_3019910864);
    }
    
    } finally {
    if (ctxHEX60gensym93_3019908047.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008238(s_3087008240, s_3087008240_Idx, x_3087008241) {
    s_3087008240[s_3087008240_Idx].push.apply(s_3087008240[s_3087008240_Idx], HEX24_3087008191(x_3087008241));;

  
}

function collectionToString_3087008198(x_3087008200, prefix_3087008201, separator_3087008202, suffix_3087008203) {
  var result_3087008204 = [[]];

    result_3087008204[0] = nimCopy(null, prefix_3087008201, NTI33554449);
    var firstElement_3087008205 = true;
    Label1: {
      var value_3087008228 = null;
      var i_2969567396 = 0;
      var L_2969567397 = (x_3087008200).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567396 < L_2969567397)) break Label3;
            value_3087008228 = x_3087008200[i_2969567396];
            if (firstElement_3087008205) {
            firstElement_3087008205 = false;
            }
            else {
            result_3087008204[0].push.apply(result_3087008204[0], separator_3087008202);;
            }
            
            if ((value_3087008228 == null)) {
            result_3087008204[0].push.apply(result_3087008204[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008238(result_3087008204, 0, value_3087008228);
            }
            
            i_2969567396 += 1;
            if (!(((x_3087008200).length == L_2969567397))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008204[0].push.apply(result_3087008204[0], suffix_3087008203);;

  return result_3087008204[0];

}

function HEX24_3087008194(x_3087008196) {
  var result_3087008197 = [];

    result_3087008197 = nimCopy(null, collectionToString_3087008198(x_3087008196, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008197;

}

function formatValue_2785018111(result_2785018113, result_2785018113_Idx, value_2785018114, specifier_2785018115) {
    formatValue_721420459(result_2785018113, result_2785018113_Idx, nimBoolToStr(value_2785018114), specifier_2785018115);

  
}

function HEX24_3087008191(typ_3087008192) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008193 = [];

  BeforeRet: {
    switch (typ_3087008192.kind) {
    case 0:
      result_3087008193 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008193 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008193 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008193 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008192;
      if (ConstSet62[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008192;
      if (ConstSet63[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008193 = nimCopy(null, (HEX24_3087008194(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008191(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008193 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008257 = [mnewString(0)];
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008192;
      if (ConstSet64[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2785018111(fmtRes_3087008257, 0, Temporary3.open, []);
      fmtRes_3087008257[0].push.apply(fmtRes_3087008257[0], [41]);;
      result_3087008193 = nimCopy(null, fmtRes_3087008257[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008193;

}

function HEX5BHEX5D_3019913388(t_3019913391, key_3019913392) {
  var result_3019913393 = null;

    result_3019913393 = t_3019913391.get(mapKeyJs_3019899778(key_3019913392));

  return result_3019913393;

}

function addQuoted_3019911798(s_3019911800, s_3019911800_Idx, x_3019911801) {
    s_3019911800[s_3019911800_Idx].push.apply(s_3019911800[s_3019911800_Idx], HEX24_3019911804(x_3019911801));;

  
}

function collectionToString_3019911765(x_3019911767, prefix_3019911768, separator_3019911769, suffix_3019911770) {
  var result_3019911771 = [[]];

    result_3019911771[0] = nimCopy(null, prefix_3019911768, NTI33554449);
    var firstElement_3019911772 = true;
    Label1: {
      var value_3019911794 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2969567412 = 0;
      var L_2969567413 = (x_3019911767).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567412 < L_2969567413)) break Label3;
            value_3019911794 = x_3019911767[i_2969567412];
            if (firstElement_3019911772) {
            firstElement_3019911772 = false;
            }
            else {
            result_3019911771[0].push.apply(result_3019911771[0], separator_3019911769);;
            }
            
            addQuoted_3019911798(result_3019911771, 0, value_3019911794);
            i_2969567412 += 1;
            if (!(((x_3019911767).length == L_2969567413))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3019911771[0].push.apply(result_3019911771[0], suffix_3019911770);;

  return result_3019911771[0];

}

function HEX24_3019911761(x_3019911763) {
  var result_3019911764 = [];

    result_3019911764 = nimCopy(null, collectionToString_3019911765(x_3019911763, [64,91], [44,32], [93]), NTI33554449);

  return result_3019911764;

}

function getOrDefault_3036678846(t_3036678849, key_3036678850, default_3036678851) {
  var result_3036678852 = [];

    result_3036678852 = nimCopy(null, orDefaultJs((t_3036678849).get(mapKeyJs_3036678533(key_3036678850)), (default_3036678851)), NTI3036676235);

  return result_3036678852;

}

function getDependencies_3036678749(graph_3036678750, key_3036678751) {
  var result_3036678752 = [];

    result_3036678752 = nimCopy(null, getOrDefault_3036678846(graph_3036678750.dependencies, key_3036678751, []), NTI3036676235);
    if ((((result_3036678752).length == 0) && !((key_3036678751.Field1 == -1)))) {
    result_3036678752.push({Field0: nimCopy(null, key_3036678751.Field0, NTI3036676201), Field1: -1});;
    }
    

  return result_3036678752;

}

function tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, keyHEX60gensym94_3019911567, tryForceHEX60gensym94_3019911568) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3019911569 = 0;

  BeforeRet: {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary1);
    try {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3036676336(keyHEX60gensym94_3019911567.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3019911761(getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567)));
    }
    
    if (contains_3019908312(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567)) {
    incl_3019908741(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
    var itemHEX60gensym94_3019911951 = nimCopy(null, keyHEX60gensym94_3019911567.Field0, NTI3036676201);
    var queryHEX60gensym94_3019912037 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, keyHEX60gensym94_3019911567.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3036676336(itemHEX60gensym94_3019911951), [32,40], queryHEX60gensym94_3019912037, [41]);
    Label5: {
      var kHEX60gensym94_3019912045 = 0;
      var colontmp__2969567400 = 0;
      colontmp__2969567400 = (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1;
      var res_2969567401 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2969567401 <= colontmp__2969567400)) break Label7;
            kHEX60gensym94_3019912045 = res_2969567401;
            var iHEX60gensym94_3019912049 = subInt(subInt((ctxHEX60gensym94_3019911566.activeQueryStack).length, kHEX60gensym94_3019912045), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym94_3019912045), [93,32,80,97,114,101,110,116,58,32], HEX24_3036676336(ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3019910448(ctxHEX60gensym94_3019911566.depGraph.queryNames, ctxHEX60gensym94_3019911566.activeQueryStack[chckIndx(iHEX60gensym94_3019912049, 0, (ctxHEX60gensym94_3019911566.activeQueryStack).length - 1)].Field1));
            res_2969567401 = addInt(res_2969567401, 1);
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3019910620(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1)) {
    (Temporary8 = HEX5BHEX5D_3019910719(ctxHEX60gensym94_3019911566.recoveryFunctions, keyHEX60gensym94_3019911567.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym94_3019911567);
    markRed_3036679306(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567, []);
    }
    
    result_3019911569 = 2;
    break BeforeRet;
    }
    
    incl_3019908741(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var Temporary9 = nimCopy(null, keyHEX60gensym94_3019911567, NTI3036676204);
    ctxHEX60gensym94_3019911566.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym94_3019912458 = getOrDefault_3036678520(ctxHEX60gensym94_3019911566.depGraph.verified, keyHEX60gensym94_3019911567, 0);
    Label11: {
      var iHEX60gensym94_3019912482 = 0;
      var depHEX60gensym94_3019912483 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2969567405 = [];
      colontmp__2969567405 = getDependencies_3036678749(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
      var i_2969567407 = 0;
      var L_2969567408 = (colontmp__2969567405).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2969567407 < L_2969567408)) break Label13;
            iHEX60gensym94_3019912482 = i_2969567407;
            depHEX60gensym94_3019912483 = nimCopy(depHEX60gensym94_3019912483, colontmp__2969567405[chckIndx(i_2969567407, 0, (colontmp__2969567405).length - 1)], NTI3036676204);
            Label14: {
              depHEX60gensym94_3019912483._id = undefined;
              depHEX60gensym94_3019912483.Field0._id = undefined;
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, null_2046820646)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820626(depHEX60gensym94_3019912483.Field0.Field0, dependencyGlobalRevision_3036676217)) {
              if ((verifiedHEX60gensym94_3019912458 < ctxHEX60gensym94_3019911566.depGraph.revision)) {
              if (ctxHEX60gensym94_3019911566.enableLogging) {
              rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3019911569 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458)) {
              case 2:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3019911569 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym94_3019911566.enableLogging) {
                rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3019911565(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483, true)) {
                case 2:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym94_3019911568) {
                  force_3019908046(ctxHEX60gensym94_3019911566, depHEX60gensym94_3019912483);
                  }
                  else {
                    result_3019911569 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3019908312(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567)) {
                  excl_3019910892(ctxHEX60gensym94_3019911566.recursiveQueries, keyHEX60gensym94_3019911567);
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019911804(keyHEX60gensym94_3019911567) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3036678426(ctxHEX60gensym94_3019911566.depGraph, depHEX60gensym94_3019912483, verifiedHEX60gensym94_3019912458) == 1)) {
                  if (ctxHEX60gensym94_3019911566.enableLogging) {
                  rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3019908139(ctxHEX60gensym94_3019911566.depGraph.queryNames, depHEX60gensym94_3019912483.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3036676336(depHEX60gensym94_3019912483.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3019911569 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2969567407 = addInt(i_2969567407, 1);
            if (!(((colontmp__2969567405).length == L_2969567408))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3036679225(ctxHEX60gensym94_3019911566.depGraph, keyHEX60gensym94_3019911567);
    result_3019911569 = 0;
    break BeforeRet;
    } finally {
    excl_3019910892(ctxHEX60gensym94_3019911566.activeQuerySet, keyHEX60gensym94_3019911567);
    var _ = pop_3019911495(ctxHEX60gensym94_3019911566, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym94_3019911566.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary22);
    }
  };

  return result_3019911569;

}

function clear_3019913516(s_3019913518) {
    s_3019913518.counter = 0;
    Label1: {
      var i_3019913604 = 0;
      var colontmp__2969567416 = 0;
      colontmp__2969567416 = (s_3019913518.data).length;
      var i_2969567417 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567417 < colontmp__2969567416)) break Label3;
            i_3019913604 = i_2969567417;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field0 = 0;
            s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1 = nimCopy(s_3019913518.data[chckIndx(i_3019913604, 0, (s_3019913518.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            i_2969567417 = addInt(i_2969567417, 1);
          }
      };
    };

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function computeType_3019913434(ctxHEX60gensym97_3019913435, inputHEX60gensym97_3019913436, recordDependencyHEX60gensym97_3019913437) {
    var Temporary3;
    var Temporary5;

  var result_3019913438 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym97_3019913849 = getItem_3019906357(inputHEX60gensym97_3019913436);
    var keyHEX60gensym97_3019913850 = {Field0: nimCopy(null, itemHEX60gensym97_3019913849, NTI3036676201), Field1: 0};
    if (recordDependencyHEX60gensym97_3019913437) {
    recordDependency_3019906144(ctxHEX60gensym97_3019913435, itemHEX60gensym97_3019913849, 0);
    }
    
    var colorHEX60gensym97_3019913851 = nodeColor_3036678426(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, 0);
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym97_3019913851, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym97_3019913849));
    }
    
    if ((colorHEX60gensym97_3019913851 == 2)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    }
    else {
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym97_3019913851 == 0)) {
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    if (false) {
    markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850, true) == 0)) {
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym97_3019913435.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
      if (false) {
      markRed_3036679306(ctxHEX60gensym97_3019913435.depGraph, keyHEX60gensym97_3019913850, []);
      }
      
      if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
      }
      
      if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym97_3019913851 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym97_3019913435.enableLogging && contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436)));
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    force_3019908046(ctxHEX60gensym97_3019913435, keyHEX60gensym97_3019913850);
    }
    
    if (!(contains_3019913294(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym97_3019913436) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019913438 = HEX5BHEX5D_3019913388(ctxHEX60gensym97_3019913435.queryCacheType, inputHEX60gensym97_3019913436);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym97_3019913435.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym97_3019913435.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym97_3019913435.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym97_3019913435.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019913438;

}

function formatValue_3019948837(result_3019948839, result_3019948839_Idx, value_3019948840, specifier_3019948841) {
    formatValue_721420459(result_3019948839, result_3019948839_Idx, HEX24_3087008191(value_3019948840), specifier_3019948841);

  
}

function contains_3019916420(t_3019916423, key_3019916424) {
  var result_3019916425 = false;

    result_3019916425 = t_3019916423.has(mapKeyJs_3019899778(key_3019916424));

  return result_3019916425;

}

function HEX24_3087008498(value_3087008499) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008500 = [];

  BeforeRet: {
    switch (value_3087008499.kind) {
    case 0:
      result_3087008500 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008500 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008499;
      if (ConstSet65[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008499;
      if (ConstSet66[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008500 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008499;
      if (ConstSet67[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_3003123671(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008499;
      if (ConstSet68[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008500 = nimCopy(null, HEX24_3087008191(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008500;

}

function HEX5BHEX5D_3019916514(t_3019916517, key_3019916518) {
  var result_3019916519 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019916519 = nimCopy(result_3019916519, t_3019916517.get(mapKeyJs_3019899778(key_3019916518)), NTI3087007751);

  return result_3019916519;

}

function computeValue_3019916562(ctxHEX60gensym101_3019916563, inputHEX60gensym101_3019916564, recordDependencyHEX60gensym101_3019916565) {
    var Temporary3;
    var Temporary5;

  var result_3019916566 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym101_3019916647 = getItem_3019906357(inputHEX60gensym101_3019916564);
    var keyHEX60gensym101_3019916648 = {Field0: nimCopy(null, itemHEX60gensym101_3019916647, NTI3036676201), Field1: 1};
    if (recordDependencyHEX60gensym101_3019916565) {
    recordDependency_3019906144(ctxHEX60gensym101_3019916563, itemHEX60gensym101_3019916647, 1);
    }
    
    var colorHEX60gensym101_3019916649 = nodeColor_3036678426(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, 0);
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym101_3019916649, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym101_3019916647));
    }
    
    if ((colorHEX60gensym101_3019916649 == 2)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    }
    else {
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym101_3019916649 == 0)) {
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    if (false) {
    markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648, true) == 0)) {
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym101_3019916563.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
      if (false) {
      markRed_3036679306(ctxHEX60gensym101_3019916563.depGraph, keyHEX60gensym101_3019916648, []);
      }
      
      if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
      }
      
      if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym101_3019916649 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym101_3019916563.enableLogging && contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564)));
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    force_3019908046(ctxHEX60gensym101_3019916563, keyHEX60gensym101_3019916648);
    }
    
    if (!(contains_3019916420(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003123671(inputHEX60gensym101_3019916564) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019916566 = nimCopy(result_3019916566, HEX5BHEX5D_3019916514(ctxHEX60gensym101_3019916563.queryCacheValue, inputHEX60gensym101_3019916564), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym101_3019916563.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym101_3019916563.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym101_3019916563.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym101_3019916563.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019916566;

}

function formatValue_3154118047(result_3154118049, result_3154118049_Idx, value_3154118050, specifier_3154118051) {
    formatValue_721420459(result_3154118049, result_3154118049_Idx, HEX24_3087008498(value_3154118050), specifier_3154118051);

  
}

function newFunctionType_3087008173(paramTypes_3087008174, returnType_3087008175) {
  var result_3087008176 = null;

    result_3087008176 = {kind: 4, returnType: returnType_3087008175, paramTypes: nimCopy(null, paramTypes_3087008174, NTI3087008055), mHash: 0, open: false};

  return result_3087008176;

}

function HEX3DHEX3D_3087008331(x_3087008333, y_3087008334) {
  var result_3087008335 = false;

  BeforeRet: {
    var sameObject_3087008342 = false;
    sameObject_3087008342 = x_3087008333 === y_3087008334
    if (sameObject_3087008342) {
    result_3087008335 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008333).length == (y_3087008334).length))) {
    result_3087008335 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008356 = 0;
      var colontmp__2969567420 = 0;
      colontmp__2969567420 = subInt((x_3087008333).length, 1);
      var res_2969567421 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567421 <= colontmp__2969567420)) break Label3;
            i_3087008356 = res_2969567421;
            if (!(HEX3DHEX3D_3087008313(x_3087008333[chckIndx(i_3087008356, 0, (x_3087008333).length - 1)], y_3087008334[chckIndx(i_3087008356, 0, (y_3087008334).length - 1)]))) {
            result_3087008335 = false;
            break BeforeRet;
            }
            
            res_2969567421 = addInt(res_2969567421, 1);
          }
      };
    };
    result_3087008335 = true;
    break BeforeRet;
  };

  return result_3087008335;

}

function HEX3DHEX3D_3087008313(a_3087008314, b_3087008315) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008316 = false;

  BeforeRet: {
    if ((a_3087008314 == null)) {
    result_3087008316 = (b_3087008315 == null);
    break BeforeRet;
    }
    
    if ((b_3087008315 == null)) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008314.kind == b_3087008315.kind))) {
    result_3087008316 = false;
    break BeforeRet;
    }
    
    switch (a_3087008314.kind) {
    case 4:
      var Temporary2 = a_3087008314;
      if (ConstSet71[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008315;
      if (ConstSet72[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008313(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008314;
        if (ConstSet73[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008315;
        if (ConstSet74[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008331(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008316 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008314;
      if (ConstSet75[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008315;
      if (ConstSet76[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008316 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008316 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008316;

}

function anyType_3087008188(open_3087008189) {
  var result_3087008190 = null;

    result_3087008190 = {kind: 5, open: open_3087008189, mHash: 0, returnType: null, paramTypes: []};

  return result_3087008190;

}

function contains_3019922352(t_3019922355, key_3019922356) {
  var result_3019922357 = false;

    result_3019922357 = t_3019922355.has(mapKeyJs_3019899778(key_3019922356));

  return result_3019922357;

}

function len_3087009065(t_3087009068) {
  var result_3087009069 = 0;

    result_3087009069 = t_3087009068.counter;

  return result_3087009069;

}

function addQuoted_3019905691(s_3019905693, s_3019905693_Idx, x_3019905694) {
    s_3019905693[s_3019905693_Idx].push.apply(s_3019905693[s_3019905693_Idx], HEX24_2046820617(x_3019905694));;

  
}

function HEX24_3087008915(symbol_3087008916) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008917 = [];

  BeforeRet: {
    switch (symbol_3087008916.kind) {
    case 0:
      var Temporary1 = symbol_3087008916;
      if (ConstSet88[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3003123671(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008916;
      if (ConstSet89[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008916;
      if (ConstSet90[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008917 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820617(symbol_3087008916.id) || [],[44,32] || [],HEX24_3087008191(Temporary2.typ) || [],[44,32] || [],HEX24_3087008498(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008917;

}

function addQuoted_3019905502(s_3019905504, s_3019905504_Idx, x_3019905505) {
    s_3019905504[s_3019905504_Idx].push.apply(s_3019905504[s_3019905504_Idx], HEX24_3087008915(x_3019905505));;

  
}

function HEX24_3019905598(t_3019905601) {
  var result_3019905602 = [[]];

    if ((len_3087009065(t_3019905601) == 0)) {
    result_3019905602[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3019905602[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3019905689 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3019905690 = null;
        var L_2969567428 = len_3087009065(t_3019905601);
        Label2: {
          var h_2969567430 = 0;
          var colontmp__2969567431 = 0;
          colontmp__2969567431 = (t_3019905601.data).length - 1;
          var res_2969567432 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2969567432 <= colontmp__2969567431)) break Label4;
                h_2969567430 = res_2969567432;
                if (isFilled_1308622880(t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field0)) {
                key_3019905689 = nimCopy(key_3019905689, t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field1, NTI2046820355);
                val_3019905690 = t_3019905601.data[chckIndx(h_2969567430, 0, (t_3019905601.data).length - 1)].Field2;
                if ((1 < (result_3019905602[0]).length)) {
                result_3019905602[0].push.apply(result_3019905602[0], [44,32]);;
                }
                
                addQuoted_3019905691(result_3019905602, 0, key_3019905689);
                result_3019905602[0].push.apply(result_3019905602[0], [58,32]);;
                addQuoted_3019905502(result_3019905602, 0, val_3019905690);
                if (!((len_3087009065(t_3019905601) == L_2969567428))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2969567432 = addInt(res_2969567432, 1);
              }
          };
        };
      };
      result_3019905602[0].push.apply(result_3019905602[0], [125]);;
    }
    

  return result_3019905602[0];

}

function HEX5BHEX5D_3019922446(t_3019922449, key_3019922450) {
  var result_3019922451 = null;

    result_3019922451 = t_3019922449.get(mapKeyJs_3019899778(key_3019922450));

  return result_3019922451;

}

function computeSymbols_3019922496(ctxHEX60gensym109_3019922497, inputHEX60gensym109_3019922498, recordDependencyHEX60gensym109_3019922499) {
    var Temporary3;
    var Temporary5;

  var result_3019922502 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym109_3019922583 = getItem_3019906357(inputHEX60gensym109_3019922498);
    var keyHEX60gensym109_3019922584 = {Field0: nimCopy(null, itemHEX60gensym109_3019922583, NTI3036676201), Field1: 3};
    if (recordDependencyHEX60gensym109_3019922499) {
    recordDependency_3019906144(ctxHEX60gensym109_3019922497, itemHEX60gensym109_3019922583, 3);
    }
    
    var colorHEX60gensym109_3019922585 = nodeColor_3036678426(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, 0);
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym109_3019922585, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym109_3019922583));
    }
    
    if ((colorHEX60gensym109_3019922585 == 2)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    }
    else {
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym109_3019922585 == 0)) {
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    if (false) {
    markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584, true) == 0)) {
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym109_3019922497.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
      if (false) {
      markRed_3036679306(ctxHEX60gensym109_3019922497.depGraph, keyHEX60gensym109_3019922584, []);
      }
      
      if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
      }
      
      if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym109_3019922585 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym109_3019922497.enableLogging && contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905598(HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498)));
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    force_3019908046(ctxHEX60gensym109_3019922497, keyHEX60gensym109_3019922584);
    }
    
    if (!(contains_3019922352(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003123671(inputHEX60gensym109_3019922498) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019922502 = HEX5BHEX5D_3019922446(ctxHEX60gensym109_3019922497.queryCacheSymbols, inputHEX60gensym109_3019922498);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym109_3019922497.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym109_3019922497.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym109_3019922497.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym109_3019922497.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019922502;

}

function rawGet_3019938123(t_3019938126, key_3019938127, hc_3019938128, hc_3019938128_Idx) {
  var result_3019938129 = 0;

  BeforeRet: {
    hc_3019938128[hc_3019938128_Idx] = hash_2046820630(key_3019938127);
    if ((hc_3019938128[hc_3019938128_Idx] == 0)) {
    hc_3019938128[hc_3019938128_Idx] = 314159265;
    }
    
    if (((t_3019938126.data).length == 0)) {
    result_3019938129 = -1;
    break BeforeRet;
    }
    
    var h_3019938214 = (hc_3019938128[hc_3019938128_Idx] & (t_3019938126.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0)) break Label2;
          if (((t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field0 == hc_3019938128[hc_3019938128_Idx]) && HEX3DHEX3D_2046820626(t_3019938126.data[chckIndx(h_3019938214, 0, (t_3019938126.data).length - 1)].Field1, key_3019938127))) {
          result_3019938129 = h_3019938214;
          break BeforeRet;
          }
          
          h_3019938214 = nextTry_1308622883(h_3019938214, (t_3019938126.data).length - 1);
        }
    };
    result_3019938129 = subInt(-1, h_3019938214);
  };

  return result_3019938129;

}

function hasKey_3019950765(t_3019950768, key_3019950769) {
  var result_3019950770 = false;

    var hc_3019950771 = [0];
    result_3019950770 = (0 <= rawGet_3019938123(t_3019950768, key_3019950769, hc_3019950771, 0));

  return result_3019950770;

}

function hasKey_3019950639(t_3019950642, key_3019950643) {
  var result_3019950644 = false;

    result_3019950644 = hasKey_3019950765(t_3019950642, key_3019950643);

  return result_3019950644;

}

function contains_3019950603(t_3019950606, key_3019950607) {
  var result_3019950608 = false;

  BeforeRet: {
    result_3019950608 = hasKey_3019950639(t_3019950606, key_3019950607);
    break BeforeRet;
  };

  return result_3019950608;

}

function HEX5BHEX5D_3019951024(t_3019951027, key_3019951028) {
  var result_3019951029 = null;
  var result_3019951029_Idx = 0;

    var hcHEX60gensym22_3019951030 = [0];
    var indexHEX60gensym22_3019951037 = rawGet_3019938123(t_3019951027, key_3019951028, hcHEX60gensym22_3019951030, 0);
    if ((0 <= indexHEX60gensym22_3019951037)) {
    result_3019951029 = t_3019951027.data[chckIndx(indexHEX60gensym22_3019951037, 0, (t_3019951027.data).length - 1)]; result_3019951029_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3019951028);
    }
    

  return [result_3019951029, result_3019951029_Idx];

}

function HEX5BHEX5D_3019950858(t_3019950861, key_3019950862) {
    var Temporary1;

  var result_3019950863 = null;
  var result_3019950863_Idx = 0;

    result_3019950863 = (Temporary1 = HEX5BHEX5D_3019951024(t_3019950861, key_3019950862), Temporary1)[0]; result_3019950863_Idx = Temporary1[1];

  return [result_3019950863, result_3019950863_Idx];

}

function getItem_3019907143(selfHEX60gensym86_3019907144) {
  var result_3019907145 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)) {
    selfHEX60gensym86_3019907144.id = nimCopy(selfHEX60gensym86_3019907144.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym86_3019907144.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,54,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567435 = nimCopy(null, selfHEX60gensym86_3019907144.id, NTI2046820355);
    var colontmp__2969567436 = 2;
    result_3019907145 = nimCopy(result_3019907145, {Field0: nimCopy(null, colontmp__2969567435, NTI2046820355), Field1: colontmp__2969567436}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907145;

}

function mapKeyJs_3019901554(key_3019901556) {
  var result_3019901557 = null;

    let temp = key_3019901556;
    let newId = getIdSymbolJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019901557;

}

function contains_3019928285(t_3019928288, key_3019928289) {
  var result_3019928290 = false;

    result_3019928290 = t_3019928288.has(mapKeyJs_3019901554(key_3019928289));

  return result_3019928290;

}

function HEX5BHEX5D_3019928379(t_3019928382, key_3019928383) {
  var result_3019928384 = null;

    result_3019928384 = t_3019928382.get(mapKeyJs_3019901554(key_3019928383));

  return result_3019928384;

}

function computeSymbolType_3019928398(ctxHEX60gensym117_3019928399, inputHEX60gensym117_3019928400, recordDependencyHEX60gensym117_3019928401) {
    var Temporary3;
    var Temporary5;

  var result_3019928402 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym117_3019928483 = getItem_3019907143(inputHEX60gensym117_3019928400);
    var keyHEX60gensym117_3019928484 = {Field0: nimCopy(null, itemHEX60gensym117_3019928483, NTI3036676201), Field1: 5};
    if (recordDependencyHEX60gensym117_3019928401) {
    recordDependency_3019906144(ctxHEX60gensym117_3019928399, itemHEX60gensym117_3019928483, 5);
    }
    
    var colorHEX60gensym117_3019928485 = nodeColor_3036678426(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, 0);
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym117_3019928485, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym117_3019928483));
    }
    
    if ((colorHEX60gensym117_3019928485 == 2)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    }
    else {
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym117_3019928485 == 0)) {
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    if (false) {
    markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484, true) == 0)) {
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym117_3019928399.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
      if (false) {
      markRed_3036679306(ctxHEX60gensym117_3019928399.depGraph, keyHEX60gensym117_3019928484, []);
      }
      
      if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
      }
      
      if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym117_3019928485 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym117_3019928399.enableLogging && contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008191(HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400)));
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    force_3019908046(ctxHEX60gensym117_3019928399, keyHEX60gensym117_3019928484);
    }
    
    if (!(contains_3019928285(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym117_3019928400) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019928402 = HEX5BHEX5D_3019928379(ctxHEX60gensym117_3019928399.queryCacheSymbolType, inputHEX60gensym117_3019928400);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym117_3019928399.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym117_3019928399.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym117_3019928399.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym117_3019928399.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019928402;

}

function none_3019913418() {
  var result_3019913424 = ({val: null});

  return result_3019913424;

}

function none_3019913415() {
  var result_3019913417 = ({val: null});

    result_3019913417 = nimCopy(result_3019913417, none_3019913418(), NTI3019907400);

  return result_3019913417;

}

function isNone_3019951213(self_3019951215) {
  var result_3019951216 = false;

    result_3019951216 = (self_3019951215.val == null);

  return result_3019951216;

}

function get_3019951256(self_3019951258) {
  var result_3019951259 = null;
  var result_3019951259_Idx = 0;

  BeforeRet: {
    if (isNone_3019951213(self_3019951258)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3019951259 = self_3019951258; result_3019951259_Idx = "val";
    break BeforeRet;
  };

  return [result_3019951259, result_3019951259_Idx];

}

function some_3019913402(val_3019913404) {
  var result_3019913405 = ({val: null});

    if (!(!((val_3019913404 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019913405.val = val_3019913404;

  return result_3019913405;

}

function last_3003121922(node_3003121923) {
  var result_3003121924 = null;

  BeforeRet: {
    if ((0 < len_3003121752(node_3003121923))) {
    result_3003121924 = HEX5BHEX5D_3003121748(node_3003121923, subInt(len_3003121752(node_3003121923), 1));
    break BeforeRet;
    }
    
    result_3003121924 = null;
    break BeforeRet;
  };

  return result_3003121924;

}

function isSome_3019951383(self_3019951385) {
  var result_3019951386 = false;

    result_3019951386 = !((self_3019951385.val == null));

  return result_3019951386;

}

function get_3019951374(self_3019951376, otherwise_3019951377) {
    var Temporary1;

  var result_3019951378 = null;

    if (isSome_3019951383(self_3019951376)) {
    Temporary1 = self_3019951376.val;
    }
    else {
    Temporary1 = otherwise_3019951377;
    }
    
    result_3019951378 = Temporary1;

  return result_3019951378;

}

function contains_3019919209(t_3019919212, key_3019919213) {
  var result_3019919214 = false;

    result_3019919214 = t_3019919212.has(mapKeyJs_3019899778(key_3019919213));

  return result_3019919214;

}

function isSome_3087009356(self_3087009358) {
  var result_3087009359 = false;

    result_3087009359 = !((self_3087009358.val == null));

  return result_3087009359;

}

function HEX24_3019905491(self_3019905493) {
  var result_3019905494 = [[]];

    if (isSome_3087009356(self_3019905493)) {
    result_3019905494[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3019905502(result_3019905494, 0, self_3019905493.val);
    result_3019905494[0].push.apply(result_3019905494[0], [41]);;
    }
    else {
      result_3019905494[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3019905494[0];

}

function HEX5BHEX5D_3019919303(t_3019919306, key_3019919307) {
  var result_3019919308 = ({val: null});

    result_3019919308 = nimCopy(result_3019919308, t_3019919306.get(mapKeyJs_3019899778(key_3019919307)), NTI3087008909);

  return result_3019919308;

}

function computeSymbol_3019919344(ctxHEX60gensym105_3019919345, inputHEX60gensym105_3019919346, recordDependencyHEX60gensym105_3019919347) {
    var Temporary3;
    var Temporary5;

  var result_3019919349 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym105_3019919430 = getItem_3019906357(inputHEX60gensym105_3019919346);
    var keyHEX60gensym105_3019919431 = {Field0: nimCopy(null, itemHEX60gensym105_3019919430, NTI3036676201), Field1: 2};
    if (recordDependencyHEX60gensym105_3019919347) {
    recordDependency_3019906144(ctxHEX60gensym105_3019919345, itemHEX60gensym105_3019919430, 2);
    }
    
    var colorHEX60gensym105_3019919432 = nodeColor_3036678426(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, 0);
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym105_3019919432, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym105_3019919430));
    }
    
    if ((colorHEX60gensym105_3019919432 == 2)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    }
    else {
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym105_3019919432 == 0)) {
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    if (false) {
    markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431, true) == 0)) {
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym105_3019919345.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
      if (false) {
      markRed_3036679306(ctxHEX60gensym105_3019919345.depGraph, keyHEX60gensym105_3019919431, []);
      }
      
      if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
      }
      
      if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym105_3019919432 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,53,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym105_3019919345.enableLogging && contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3019905491(HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346)));
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    force_3019908046(ctxHEX60gensym105_3019919345, keyHEX60gensym105_3019919431);
    }
    
    if (!(contains_3019919209(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003123671(inputHEX60gensym105_3019919346) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019919349 = nimCopy(result_3019919349, HEX5BHEX5D_3019919303(ctxHEX60gensym105_3019919345.queryCacheSymbol, inputHEX60gensym105_3019919346), NTI3087008909);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym105_3019919345.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym105_3019919345.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym105_3019919345.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym105_3019919345.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019919349;

}

function isNone_3087009384(self_3087009386) {
  var result_3087009387 = false;

    result_3087009387 = (self_3087009386.val == null);

  return result_3087009387;

}

function get_3087009376(self_3087009378) {
  var result_3087009379 = null;

    if (isNone_3087009384(self_3087009378)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009379 = self_3087009378["val"];

  return result_3087009379;

}

function formatValue_3019951529(result_3019951531, result_3019951531_Idx, value_3019951532, specifier_3019951533) {
    formatValue_721420459(result_3019951531, result_3019951531_Idx, HEX24_3087008915(value_3019951532), specifier_3019951533);

  
}

function mustRehash_3019942773(t_3019942775) {
  var result_3019942776 = false;

    if (!((t_3019942775.counter < (t_3019942775.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019942776 = ((mulInt((t_3019942775.data).length, 2) < mulInt(t_3019942775.counter, 3)) || (subInt((t_3019942775.data).length, t_3019942775.counter) < 4));

  return result_3019942776;

}

function rawInsert_3019943466(t_3019943470, data_3019943471, data_3019943471_Idx, key_3019943472, val_3019943473, hc_3019943474, h_3019943475) {
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1 = nimCopy(data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field1, key_3019943472, NTI3036676204);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field2 = nimCopy(null, val_3019943473, NTI3019898985);
    data_3019943471[data_3019943471_Idx][chckIndx(h_3019943475, 0, (data_3019943471[data_3019943471_Idx]).length - 1)].Field0 = hc_3019943474;

  
}

function enlarge_3019943030(t_3019943033) {
    var n_3019943036 = [];
    n_3019943036 = new Array(chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019943033.data).length, 2), 0, 2147483647) ; ++i) { n_3019943036[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019943033.data; t_3019943033.data = n_3019943036; n_3019943036 = Temporary1;    Label2: {
      var i_3019943134 = 0;
      var colontmp__2969567439 = 0;
      colontmp__2969567439 = (n_3019943036).length - 1;
      var res_2969567440 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567440 <= colontmp__2969567439)) break Label4;
            i_3019943134 = res_2969567440;
            var eh_3019943215 = n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019943215)) {
            var j_3019943219 = (eh_3019943215 & (t_3019943033.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019943033.data[chckIndx(j_3019943219, 0, (t_3019943033.data).length - 1)].Field0)) break Label6;
                  j_3019943219 = nextTry_1308622883(j_3019943219, (t_3019943033.data).length - 1);
                }
            };
            rawInsert_3019943466(t_3019943033, t_3019943033, "data", n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field1, n_3019943036[chckIndx(i_3019943134, 0, (n_3019943036).length - 1)].Field2, eh_3019943215, j_3019943219);
            }
            
            res_2969567440 = addInt(res_2969567440, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019943725(t_3019943728, key_3019943729, hc_3019943730) {
  var result_3019943731 = 0;

  BeforeRet: {
    if (((t_3019943728.data).length == 0)) {
    result_3019943731 = -1;
    break BeforeRet;
    }
    
    var h_3019943816 = (hc_3019943730 & (t_3019943728.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0)) break Label2;
          if (((t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field0 == hc_3019943730) && HEX3DHEX3D_3019908680(t_3019943728.data[chckIndx(h_3019943816, 0, (t_3019943728.data).length - 1)].Field1, key_3019943729))) {
          result_3019943731 = h_3019943816;
          break BeforeRet;
          }
          
          h_3019943816 = nextTry_1308622883(h_3019943816, (t_3019943728.data).length - 1);
        }
    };
    result_3019943731 = subInt(-1, h_3019943816);
  };

  return result_3019943731;

}

function HEX5BHEX5DHEX3D_3019942505(t_3019942508, key_3019942509, val_3019942510) {
    if (((t_3019942508.data).length == 0)) {
    var correctSizeHEX60gensym357_3019942593 = slotsNeeded_1308622891(32);
    t_3019942508.counter = 0;
    t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym357_3019942593, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019942598 = [0];
    var index_3019942605 = rawGet_3019940162(t_3019942508, key_3019942509, hc_3019942598, 0);
    if ((0 <= index_3019942605)) {
    t_3019942508.data[chckIndx(index_3019942605, 0, (t_3019942508.data).length - 1)].Field2 = nimCopy(null, val_3019942510, NTI3019898985);
    }
    else {
      if (((t_3019942508.data).length == 0)) {
      var correctSizeHEX60gensym360_3019942768 = slotsNeeded_1308622891(32);
      t_3019942508.counter = 0;
      t_3019942508.data = new Array(chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym360_3019942768, 0, 2147483647) ; ++i) { t_3019942508.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019942773(t_3019942508)) {
      enlarge_3019943030(t_3019942508);
      index_3019942605 = rawGetKnownHC_3019943725(t_3019942508, key_3019942509, hc_3019942598[0]);
      }
      
      index_3019942605 = subInt(-1, index_3019942605);
      rawInsert_3019943466(t_3019942508, t_3019942508, "data", key_3019942509, val_3019942510, hc_3019942598[0], index_3019942605);
      t_3019942508.counter = addInt(t_3019942508.counter, 1);
    }
    

  
}

function hasKey_3019944174(t_3019944177, key_3019944178) {
  var result_3019944179 = false;

    var hc_3019944180 = [0];
    result_3019944179 = (0 <= rawGet_3019940817(t_3019944177, key_3019944178, hc_3019944180, 0));

  return result_3019944179;

}

function contains_3019944168(t_3019944171, key_3019944172) {
  var result_3019944173 = false;

  BeforeRet: {
    result_3019944173 = hasKey_3019944174(t_3019944171, key_3019944172);
    break BeforeRet;
  };

  return result_3019944173;

}

function mustRehash_3019944518(t_3019944520) {
  var result_3019944521 = false;

    if (!((t_3019944520.counter < (t_3019944520.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019944521 = ((mulInt((t_3019944520.data).length, 2) < mulInt(t_3019944520.counter, 3)) || (subInt((t_3019944520.data).length, t_3019944520.counter) < 4));

  return result_3019944521;

}

function rawInsert_3019945211(t_3019945215, data_3019945216, data_3019945216_Idx, key_3019945217, val_3019945218, hc_3019945219, h_3019945220) {
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field1, key_3019945217, NTI2046820355);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2 = nimCopy(data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field2, val_3019945218, NTI3019898884);
    data_3019945216[data_3019945216_Idx][chckIndx(h_3019945220, 0, (data_3019945216[data_3019945216_Idx]).length - 1)].Field0 = hc_3019945219;

  
}

function enlarge_3019944775(t_3019944778) {
    var n_3019944781 = [];
    n_3019944781 = new Array(chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019944778.data).length, 2), 0, 2147483647) ; ++i) { n_3019944781[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3019944778.data; t_3019944778.data = n_3019944781; n_3019944781 = Temporary1;    Label2: {
      var i_3019944879 = 0;
      var colontmp__2969567445 = 0;
      colontmp__2969567445 = (n_3019944781).length - 1;
      var res_2969567446 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567446 <= colontmp__2969567445)) break Label4;
            i_3019944879 = res_2969567446;
            var eh_3019944960 = n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019944960)) {
            var j_3019944964 = (eh_3019944960 & (t_3019944778.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019944778.data[chckIndx(j_3019944964, 0, (t_3019944778.data).length - 1)].Field0)) break Label6;
                  j_3019944964 = nextTry_1308622883(j_3019944964, (t_3019944778.data).length - 1);
                }
            };
            rawInsert_3019945211(t_3019944778, t_3019944778, "data", n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field1, n_3019944781[chckIndx(i_3019944879, 0, (n_3019944781).length - 1)].Field2, eh_3019944960, j_3019944964);
            }
            
            res_2969567446 = addInt(res_2969567446, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019945470(t_3019945473, key_3019945474, hc_3019945475) {
  var result_3019945476 = 0;

  BeforeRet: {
    if (((t_3019945473.data).length == 0)) {
    result_3019945476 = -1;
    break BeforeRet;
    }
    
    var h_3019945561 = (hc_3019945475 & (t_3019945473.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0)) break Label2;
          if (((t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field0 == hc_3019945475) && HEX3DHEX3D_2046820626(t_3019945473.data[chckIndx(h_3019945561, 0, (t_3019945473.data).length - 1)].Field1, key_3019945474))) {
          result_3019945476 = h_3019945561;
          break BeforeRet;
          }
          
          h_3019945561 = nextTry_1308622883(h_3019945561, (t_3019945473.data).length - 1);
        }
    };
    result_3019945476 = subInt(-1, h_3019945561);
  };

  return result_3019945476;

}

function HEX5BHEX5DHEX3D_3019944250(t_3019944253, key_3019944254, val_3019944255) {
    if (((t_3019944253.data).length == 0)) {
    var correctSizeHEX60gensym369_3019944338 = slotsNeeded_1308622891(32);
    t_3019944253.counter = 0;
    t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_3019944338, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3019944343 = [0];
    var index_3019944350 = rawGet_3019940817(t_3019944253, key_3019944254, hc_3019944343, 0);
    if ((0 <= index_3019944350)) {
    t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2 = nimCopy(t_3019944253.data[chckIndx(index_3019944350, 0, (t_3019944253.data).length - 1)].Field2, val_3019944255, NTI3019898884);
    }
    else {
      if (((t_3019944253.data).length == 0)) {
      var correctSizeHEX60gensym372_3019944513 = slotsNeeded_1308622891(32);
      t_3019944253.counter = 0;
      t_3019944253.data = new Array(chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym372_3019944513, 0, 2147483647) ; ++i) { t_3019944253.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3019944518(t_3019944253)) {
      enlarge_3019944775(t_3019944253);
      index_3019944350 = rawGetKnownHC_3019945470(t_3019944253, key_3019944254, hc_3019944343[0]);
      }
      
      index_3019944350 = subInt(-1, index_3019944350);
      rawInsert_3019945211(t_3019944253, t_3019944253, "data", key_3019944254, val_3019944255, hc_3019944343[0], index_3019944350);
      t_3019944253.counter = addInt(t_3019944253.counter, 1);
    }
    

  
}

function hasKey_3019945990(t_3019945993, key_3019945994) {
  var result_3019945995 = false;

    var hc_3019945996 = [0];
    result_3019945995 = (0 <= rawGet_3019941324(t_3019945993, key_3019945994, hc_3019945996, 0));

  return result_3019945995;

}

function contains_3019945984(t_3019945987, key_3019945988) {
  var result_3019945989 = false;

  BeforeRet: {
    result_3019945989 = hasKey_3019945990(t_3019945987, key_3019945988);
    break BeforeRet;
  };

  return result_3019945989;

}

function mustRehash_3019946423(t_3019946425) {
  var result_3019946426 = false;

    if (!((t_3019946425.counter < (t_3019946425.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019946426 = ((mulInt((t_3019946425.data).length, 2) < mulInt(t_3019946425.counter, 3)) || (subInt((t_3019946425.data).length, t_3019946425.counter) < 4));

  return result_3019946426;

}

function rawInsert_3019947116(t_3019947120, data_3019947121, data_3019947121_Idx, key_3019947122, val_3019947123, hc_3019947124, h_3019947125) {
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1 = nimCopy(data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field1, key_3019947122, NTI3036676204);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field2 = nimCopy(null, val_3019947123, NTI3019898888);
    data_3019947121[data_3019947121_Idx][chckIndx(h_3019947125, 0, (data_3019947121[data_3019947121_Idx]).length - 1)].Field0 = hc_3019947124;

  
}

function enlarge_3019946680(t_3019946683) {
    var n_3019946686 = [];
    n_3019946686 = new Array(chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019946683.data).length, 2), 0, 2147483647) ; ++i) { n_3019946686[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3019946683.data; t_3019946683.data = n_3019946686; n_3019946686 = Temporary1;    Label2: {
      var i_3019946784 = 0;
      var colontmp__2969567451 = 0;
      colontmp__2969567451 = (n_3019946686).length - 1;
      var res_2969567452 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567452 <= colontmp__2969567451)) break Label4;
            i_3019946784 = res_2969567452;
            var eh_3019946865 = n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019946865)) {
            var j_3019946869 = (eh_3019946865 & (t_3019946683.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019946683.data[chckIndx(j_3019946869, 0, (t_3019946683.data).length - 1)].Field0)) break Label6;
                  j_3019946869 = nextTry_1308622883(j_3019946869, (t_3019946683.data).length - 1);
                }
            };
            rawInsert_3019947116(t_3019946683, t_3019946683, "data", n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field1, n_3019946686[chckIndx(i_3019946784, 0, (n_3019946686).length - 1)].Field2, eh_3019946865, j_3019946869);
            }
            
            res_2969567452 = addInt(res_2969567452, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019947366(t_3019947369, key_3019947370, hc_3019947371) {
  var result_3019947372 = 0;

  BeforeRet: {
    if (((t_3019947369.data).length == 0)) {
    result_3019947372 = -1;
    break BeforeRet;
    }
    
    var h_3019947457 = (hc_3019947371 & (t_3019947369.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0)) break Label2;
          if (((t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field0 == hc_3019947371) && HEX3DHEX3D_3019908680(t_3019947369.data[chckIndx(h_3019947457, 0, (t_3019947369.data).length - 1)].Field1, key_3019947370))) {
          result_3019947372 = h_3019947457;
          break BeforeRet;
          }
          
          h_3019947457 = nextTry_1308622883(h_3019947457, (t_3019947369.data).length - 1);
        }
    };
    result_3019947372 = subInt(-1, h_3019947457);
  };

  return result_3019947372;

}

function HEX5BHEX5DHEX3D_3019946155(t_3019946158, key_3019946159, val_3019946160) {
    if (((t_3019946158.data).length == 0)) {
    var correctSizeHEX60gensym381_3019946243 = slotsNeeded_1308622891(32);
    t_3019946158.counter = 0;
    t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym381_3019946243, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3019946248 = [0];
    var index_3019946255 = rawGet_3019941324(t_3019946158, key_3019946159, hc_3019946248, 0);
    if ((0 <= index_3019946255)) {
    t_3019946158.data[chckIndx(index_3019946255, 0, (t_3019946158.data).length - 1)].Field2 = nimCopy(null, val_3019946160, NTI3019898888);
    }
    else {
      if (((t_3019946158.data).length == 0)) {
      var correctSizeHEX60gensym384_3019946418 = slotsNeeded_1308622891(32);
      t_3019946158.counter = 0;
      t_3019946158.data = new Array(chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym384_3019946418, 0, 2147483647) ; ++i) { t_3019946158.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3019946423(t_3019946158)) {
      enlarge_3019946680(t_3019946158);
      index_3019946255 = rawGetKnownHC_3019947366(t_3019946158, key_3019946159, hc_3019946248[0]);
      }
      
      index_3019946255 = subInt(-1, index_3019946255);
      rawInsert_3019947116(t_3019946158, t_3019946158, "data", key_3019946159, val_3019946160, hc_3019946248[0], index_3019946255);
      t_3019946158.counter = addInt(t_3019946158.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3019947888(t_3019947891, key_3019947892) {
  var result_3019947893 = null;
  var result_3019947893_Idx = 0;

    var hcHEX60gensym22_3019947894 = [0];
    var indexHEX60gensym22_3019947901 = rawGet_3019941324(t_3019947891, key_3019947892, hcHEX60gensym22_3019947894, 0);
    if ((0 <= indexHEX60gensym22_3019947901)) {
    result_3019947893 = t_3019947891.data[chckIndx(indexHEX60gensym22_3019947901, 0, (t_3019947891.data).length - 1)]; result_3019947893_Idx = "Field2";
    }
    else {
    raiseKeyError_3019940688(key_3019947892);
    }
    

  return [result_3019947893, result_3019947893_Idx];

}

function del_3019948061(t_3019948064, key_3019948065) {
    var hc_3019948066 = [0];
    var i_3019948073 = rawGet_3019940162(t_3019948064, key_3019948065, hc_3019948066, 0);
    var mskHEX60gensym36_3019948077 = (t_3019948064.data).length - 1;
    if ((0 <= i_3019948073)) {
    t_3019948064.counter = subInt(t_3019948064.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019948084 = i_3019948073;
            var rHEX60gensym36_3019948085 = jHEX60gensym36_3019948084;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 = 0;
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1 = nimCopy(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3036676204);
            t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field2 = nimCopy(null, [], NTI3019898985);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019948073 = (addInt(i_3019948073, 1) & mskHEX60gensym36_3019948077);
                  if (isEmpty_1308622877(t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019948085 = (t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)].Field0 & mskHEX60gensym36_3019948077);
                  if (!(((((rHEX60gensym36_3019948085 <= i_3019948073) && (jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085)) || ((jHEX60gensym36_3019948084 < rHEX60gensym36_3019948085) && (i_3019948073 < jHEX60gensym36_3019948084))) || ((i_3019948073 < jHEX60gensym36_3019948084) && (rHEX60gensym36_3019948085 <= i_3019948073))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)] = nimCopy(t_3019948064.data[chckIndx(jHEX60gensym36_3019948084, 0, (t_3019948064.data).length - 1)], t_3019948064.data[chckIndx(i_3019948073, 0, (t_3019948064.data).length - 1)], NTI3019898997);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3019899459(ctx_3019899460, node_3019899461) {
      var Temporary4;
      var Temporary17;
      var Temporary20;
      var Temporary21;
      var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
        var Temporary28;
      var Temporary30;
                  var Temporary35;
                    var Temporary36;
                  var Temporary37;
                  var Temporary38;
                var Temporary40;
                var Temporary41;
      var Temporary42;
      var Temporary45;
      var Temporary49;
      var Temporary51;
                var Temporary61;
        var Temporary62;
        var Temporary65;
        var Temporary67;
            var Temporary72;

  var result_3019948919 = null;

  BeforeRet: {
    var logQueryHEX60gensym404_3019948921 = (ctx_3019899460.enableLogging || ctx_3019899460.enableQueryLogging);
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym404_3019948921) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899461) || []));
    }
    
    try {
    var key_3019948932 = nimCopy(null, getTypeKey_3019913206(ctx_3019899460, getItem_3019906357(node_3019899461)), NTI3036676204);
    if (contains_3019940149(ctx_3019899460.diagnosticsPerQuery, key_3019948932)) {
    Label3: {
      var idHEX60gensym405_3019949110 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567325 = [];
      colontmp__2969567325 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899460.diagnosticsPerQuery, key_3019948932), Temporary4)[0][Temporary4[1]];
      var i_2969567327 = 0;
      var L_2969567328 = (colontmp__2969567325).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567327 < L_2969567328)) break Label6;
            idHEX60gensym405_3019949110 = colontmp__2969567325[chckIndx(i_2969567327, 0, (colontmp__2969567325).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949110).queries, key_3019948932);
            i_2969567327 = addInt(i_2969567327, 1);
            if (!(((colontmp__2969567325).length == L_2969567328))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym405_3019949268 = [];
    var idsHEX60gensym405_3019949273 = [];
    try {
    Label8: {
      var expr_3019950075 = node_3019899461;
      var pos_3019950076 = 0;
      var _ = pos_3019950076;
      if ((expr_3019950075.kind == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3019899461.text);
      result_3019948919 = intType_3087008169();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      var Temporary10 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary10);;
      var fmtRes_3019950095 = mnewString(0);
      fmtRes_3019950095.push.apply(fmtRes_3019950095, [78,117,109,98,101,114,32,108,105,116,101,114,97,108,32,105,115,32,110,111,116,32,118,97,108,105,100,32,111,114,32,111,117,116,115,105,100,101,32,111,102,32,114,97,110,103,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950095, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3019950075.kind == 3)) {
      result_3019948919 = stringType_3087008171();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 12)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 11)) {
      if ((len_3003121752(node_3019899461) < 3)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var params_3019950112 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      recordDependency_3019906144(ctx_3019899460, getItem_3019906357(params_3019950112), -1);
      var returnTypeNode_3019950113 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var paramTypes_3019950118 = [];
      var ok_3019950119 = true;
      Label11: {
        var param_3019950123 = null;
        var i_2969567338 = 0;
        var L_2969567339 = (params_3019950112.children).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567338 < L_2969567339)) break Label13;
              param_3019950123 = params_3019950112.children[chckIndx(i_2969567338, 0, (params_3019950112.children).length - 1)];
              Label14: {
                var paramType_3019950124 = computeType_3019913434(ctx_3019899460, param_3019950123, true);
                if ((paramType_3019950124.kind == 0)) {
                ok_3019950119 = false;
                break Label14;
                }
                
                paramTypes_3019950118.push(paramType_3019950124);;
              };
              i_2969567338 = addInt(i_2969567338, 1);
              if (!(((params_3019950112.children).length == L_2969567339))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3019950133 = computeType_3019913434(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeType_3019950133.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3019950133.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary15);;
      var fmtRes_3019950150 = [mnewString(0)];
      fmtRes_3019950150[0].push.apply(fmtRes_3019950150[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950150, 0, returnTypeType_3019950133, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950150[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var returnTypeValue_3019950160 = computeValue_3019916562(ctx_3019899460, returnTypeNode_3019950113, true);
      if ((returnTypeValue_3019950160.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3019950160.kind == 6))) {
      var Temporary16 = nimCopy(null, returnTypeNode_3019950113.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary16);;
      var fmtRes_3019950177 = [mnewString(0)];
      fmtRes_3019950177[0].push.apply(fmtRes_3019950177[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950177, 0, returnTypeValue_3019950160, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950177[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary17 = returnTypeValue_3019950160;
      if (ConstSet69[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var returnType_3019950187 = Temporary17.typ;
      result_3019948919 = newFunctionType_3087008173(paramTypes_3019950118, returnType_3019950187);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 8)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      var Temporary18 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary18);;
      var fmtRes_3019950200 = mnewString(0);
      fmtRes_3019950200.push.apply(fmtRes_3019950200, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950200, NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var function_3019950205 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var functionType_3019950206 = computeType_3019913434(ctx_3019899460, function_3019950205, true);
      if ((functionType_3019950206.kind == 0)) {
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3019950206.kind == 4))) {
      var Temporary19 = nimCopy(null, function_3019950205.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary19);;
      var fmtRes_3019950223 = [mnewString(0)];
      fmtRes_3019950223[0].push.apply(fmtRes_3019950223[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3019948837(fmtRes_3019950223, 0, functionType_3019950206, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950223[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3019950233 = subInt(len_3003121752(node_3019899461), 1);
      var Temporary22 = functionType_3019950206;
      if (ConstSet70[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
      if (!(0 < (Temporary22.paramTypes).length)) Temporary21 = false; else {        var Temporary23 = functionType_3019950206;
        if (ConstSet77[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        var Temporary24 = functionType_3019950206;
        if (ConstSet78[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI3087007747)); }
        Temporary21 = HEX3DHEX3D_3087008313((Temporary25 = Temporary23.paramTypes, Temporary25)[chckIndx((Temporary24.paramTypes).length - 1, 0, (Temporary25).length - 1)], anyType_3087008188(true));      }      if (!Temporary21) Temporary20 = false; else {        var Temporary26 = functionType_3019950206;
        if (ConstSet79[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI3087007747)); }
        Temporary20 = (subInt((Temporary26.paramTypes).length, 1) <= numArgs_3019950233);      }      var isValidOpenAnyCall_3019950243 = Temporary20;
        var Temporary28 = functionType_3019950206;
        if (ConstSet80[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI3087007747)); }
        if (!!((numArgs_3019950233 == (Temporary28.paramTypes).length))) Temporary27 = false; else {          Temporary27 = !(isValidOpenAnyCall_3019950243);        }      if (Temporary27) {
      var Temporary29 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary29);;
      var fmtRes_3019950255 = [mnewString(0)];
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary30 = functionType_3019950206;
      if (ConstSet81[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007747)); }
      formatValue_2701131945(fmtRes_3019950255, 0, (Temporary30.paramTypes).length, []);
      fmtRes_3019950255[0].push.apply(fmtRes_3019950255[0], [32,103,111,116,32]);;
      formatValue_2701131945(fmtRes_3019950255, 0, numArgs_3019950233, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950255[0], NTI33554449)});;
      result_3019948919 = {kind: 0, mHash: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3019950273 = true;
      Label31: {
        var i_3019950278 = 0;
        var res_2969567343 = 1;
        Label32: {
            Label33: while (true) {
            if (!(res_2969567343 <= numArgs_3019950233)) break Label33;
              i_3019950278 = res_2969567343;
              Label34: {
                var argType_3019950279 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278), true);
                if ((argType_3019950279.kind == 0)) {
                allArgsOk_3019950273 = false;
                break Label34;
                }
                
                  if (!isValidOpenAnyCall_3019950243) Temporary35 = false; else {                    var Temporary36 = functionType_3019950206;
                    if (ConstSet82[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                    Temporary35 = ((Temporary36.paramTypes).length - 1 < i_3019950278);                  }                if (Temporary35) {
                break Label34;
                }
                
                  var Temporary37 = functionType_3019950206;
                  if (ConstSet83[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008313(argType_3019950279, (Temporary38 = Temporary37.paramTypes, Temporary38)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary38).length - 1)]))) {
                var Temporary39 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, i_3019950278).id, NTI2046820355);
                idsHEX60gensym405_3019949273.push(Temporary39);;
                var fmtRes_3019950295 = [mnewString(0)];
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2701131945(fmtRes_3019950295, 0, i_3019950278, []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary40 = functionType_3019950206;
                if (ConstSet84[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI3087007747)); }
                formatValue_3019948837(fmtRes_3019950295, 0, (Temporary41 = Temporary40.paramTypes, Temporary41)[chckIndx(subInt(i_3019950278, 1), 0, (Temporary41).length - 1)], []);
                fmtRes_3019950295[0].push.apply(fmtRes_3019950295[0], [32,103,111,116,32]);;
                formatValue_3019948837(fmtRes_3019950295, 0, argType_3019950279, []);
                diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950295[0], NTI33554449)});;
                allArgsOk_3019950273 = false;
                }
                
              };
              res_2969567343 = addInt(res_2969567343, 1);
            }
        };
      };
      if (!(allArgsOk_3019950273)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary42 = functionType_3019950206;
      if (ConstSet85[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI3087007747)); }
      result_3019948919 = Temporary42.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 4)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 5)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950323 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950324 = voidType_3087008167();
      if (!((typeNode_3019950323.kind == 0))) {
      var typeNodeType_3019950329 = computeType_3019913434(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeType_3019950329.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950329.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary43);;
      var fmtRes_3019950346 = [mnewString(0)];
      fmtRes_3019950346[0].push.apply(fmtRes_3019950346[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950346, 0, typeNodeType_3019950329, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950346[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950356 = computeValue_3019916562(ctx_3019899460, typeNode_3019950323, true);
      if ((typeNodeValue_3019950356.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950356.kind == 6))) {
      var Temporary44 = nimCopy(null, typeNode_3019950323.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary44);;
      var fmtRes_3019950373 = [mnewString(0)];
      fmtRes_3019950373[0].push.apply(fmtRes_3019950373[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950373, 0, typeNodeValue_3019950356, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950373[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary45 = typeNodeValue_3019950356;
      if (ConstSet86[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI3087007750)); }
      typ_3019950324 = Temporary45.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950383 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950383.kind == 0))) {
      var valueNodeType_3019950388 = computeType_3019913434(ctx_3019899460, valueNode_3019950383, true);
      if ((valueNodeType_3019950388.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950324.kind == 1)) {
      typ_3019950324 = valueNodeType_3019950388;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950388, typ_3019950324))) {
      var Temporary46 = nimCopy(null, valueNode_3019950383.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary46);;
      var fmtRes_3019950405 = [mnewString(0)];
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, typ_3019950324, []);
      fmtRes_3019950405[0].push.apply(fmtRes_3019950405[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950405, 0, valueNodeType_3019950388, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950405[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950324;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 6)) {
      if ((len_3003121752(node_3019899461) < 1)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNode_3019950424 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var typ_3019950425 = voidType_3087008167();
      if (!((typeNode_3019950424.kind == 0))) {
      var typeNodeType_3019950430 = computeType_3019913434(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeType_3019950430.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3019950430.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary47);;
      var fmtRes_3019950447 = [mnewString(0)];
      fmtRes_3019950447[0].push.apply(fmtRes_3019950447[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950447, 0, typeNodeType_3019950430, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950447[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var typeNodeValue_3019950457 = computeValue_3019916562(ctx_3019899460, typeNode_3019950424, true);
      if ((typeNodeValue_3019950457.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3019950457.kind == 6))) {
      var Temporary48 = nimCopy(null, typeNode_3019950424.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary48);;
      var fmtRes_3019950474 = [mnewString(0)];
      fmtRes_3019950474[0].push.apply(fmtRes_3019950474[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3154118047(fmtRes_3019950474, 0, typeNodeValue_3019950457, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950474[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var Temporary49 = typeNodeValue_3019950457;
      if (ConstSet87[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI3087007750)); }
      typ_3019950425 = Temporary49.typ;
      }
      
      if ((2 <= len_3003121752(node_3019899461))) {
      var valueNode_3019950484 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      if (!((valueNode_3019950484.kind == 0))) {
      var valueNodeType_3019950489 = computeType_3019913434(ctx_3019899460, valueNode_3019950484, true);
      if ((valueNodeType_3019950489.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((typ_3019950425.kind == 1)) {
      typ_3019950425 = valueNodeType_3019950489;
      }
      
      if (!(HEX3DHEX3D_3087008313(valueNodeType_3019950489, typ_3019950425))) {
      var Temporary50 = nimCopy(null, valueNode_3019950484.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary50);;
      var fmtRes_3019950506 = [mnewString(0)];
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, typ_3019950425, []);
      fmtRes_3019950506[0].push.apply(fmtRes_3019950506[0], [44,32,103,111,116,32]);;
      formatValue_3019948837(fmtRes_3019950506, 0, valueNodeType_3019950489, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019950506[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3019948919 = typ_3019950425;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 1)) {
      var id_3019950525 = nimCopy(null, node_3019899461.reff, NTI2046820355);
      var symbols_3019950526 = computeSymbols_3019922496(ctx_3019899460, node_3019899461, true);
      if (contains_3019950603(symbols_3019950526, id_3019950525)) {
      var symbol_3019951130 = (Temporary51 = HEX5BHEX5D_3019950858(symbols_3019950526, id_3019950525), Temporary51)[0][Temporary51[1]];
      result_3019948919 = computeSymbolType_3019928398(ctx_3019899460, symbol_3019951130, true);
      break BeforeRet;
      }
      
      var Temporary52 = nimCopy(null, node_3019899461.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary52);;
      var fmtRes_3019951139 = [mnewString(0)];
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3036676344(fmtRes_3019951139, 0, id_3019950525, []);
      fmtRes_3019951139[0].push.apply(fmtRes_3019951139[0], [39]);;
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951139[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 7)) {
      if ((len_3003121752(node_3019899461) == 0)) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      
      var lastType_3019951153 = null;
      Label53: {
        var child_3019951157 = null;
        var i_2969567346 = 0;
        var L_2969567347 = (node_3019899461.children).length;
        Label54: {
            Label55: while (true) {
            if (!(i_2969567346 < L_2969567347)) break Label55;
              child_3019951157 = node_3019899461.children[chckIndx(i_2969567346, 0, (node_3019899461.children).length - 1)];
              lastType_3019951153 = computeType_3019913434(ctx_3019899460, child_3019951157, true);
              if ((lastType_3019951153.kind == 0)) {
              result_3019948919 = errorType_3087008131();
              break BeforeRet;
              }
              
              i_2969567346 = addInt(i_2969567346, 1);
              if (!(((node_3019899461.children).length == L_2969567347))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3019948919 = lastType_3019951153;
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 9)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951166 = true;
      var commonType_3019951169 = [none_3019913415()];
      var index_3019951170 = 0;
      Label56: {
          Label57: while (true) {
          if (!(addInt(index_3019951170, 1) < len_3003121752(node_3019899461))) break Label57;
            Label58: {
              try {
              var condition_3019951175 = HEX5BHEX5D_3003121748(node_3019899461, index_3019951170);
              var trueCase_3019951176 = HEX5BHEX5D_3003121748(node_3019899461, addInt(index_3019951170, 1));
              var conditionType_3019951177 = computeType_3019913434(ctx_3019899460, condition_3019951175, true);
              if ((conditionType_3019951177.kind == 0)) {
              ok_3019951166 = false;
              }
              else {
              if (!((conditionType_3019951177.kind == 3))) {
              var Temporary60 = nimCopy(null, condition_3019951175.id, NTI2046820355);
              idsHEX60gensym405_3019949273.push(Temporary60);;
              var fmtRes_3019951194 = [mnewString(0)];
              fmtRes_3019951194[0].push.apply(fmtRes_3019951194[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3019948837(fmtRes_3019951194, 0, conditionType_3019951177, []);
              diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951194[0], NTI33554449)});;
              ok_3019951166 = false;
              }
              }
              var trueCaseType_3019951204 = computeType_3019913434(ctx_3019899460, trueCase_3019951176, true);
              if ((trueCaseType_3019951204.kind == 0)) {
              ok_3019951166 = false;
              break Label58;
              }
              
              if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(trueCaseType_3019951204, (Temporary61 = get_3019951256(commonType_3019951169[0]), Temporary61)[0][Temporary61[1]]))) {
              commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(trueCaseType_3019951204), NTI3019907400);
              }
              else {
                commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
              }
              
              } finally {
              index_3019951170 = addInt(index_3019951170, 2);
              }
            };
          }
      };
      if (!((modInt(len_3003121752(node_3019899461), 2) == 0))) {
      var falseCaseType_3019951283 = computeType_3019913434(ctx_3019899460, last_3003121922(node_3019899461), true);
      if ((falseCaseType_3019951283.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if ((isNone_3019951213(commonType_3019951169[0]) || HEX3DHEX3D_3087008313(falseCaseType_3019951283, (Temporary62 = get_3019951256(commonType_3019951169[0]), Temporary62)[0][Temporary62[1]]))) {
      commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(falseCaseType_3019951283), NTI3019907400);
      }
      else {
        commonType_3019951169[0] = nimCopy(commonType_3019951169[0], some_3019913402(voidType_3087008167()), NTI3019907400);
      }
      
      }
      
      if (!(ok_3019951166)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      result_3019948919 = get_3019951374(commonType_3019951169[0], voidType_3087008167());
      break BeforeRet;
      }
      else {
      if ((expr_3019950075.kind == 10)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var ok_3019951395 = true;
      var conditionType_3019951396 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 0), true);
      if ((conditionType_3019951396.kind == 0)) {
      ok_3019951395 = false;
      }
      else {
      if (!((conditionType_3019951396.kind == 3))) {
      var Temporary63 = nimCopy(null, HEX5BHEX5D_3003121748(node_3019899461, 0).id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary63);;
      var fmtRes_3019951413 = [mnewString(0)];
      fmtRes_3019951413[0].push.apply(fmtRes_3019951413[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3019948837(fmtRes_3019951413, 0, conditionType_3019951396, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951413[0], NTI33554449)});;
      ok_3019951395 = false;
      }
      }
      var bodyType_3019951423 = computeType_3019913434(ctx_3019899460, HEX5BHEX5D_3003121748(node_3019899461, 1), true);
      if ((bodyType_3019951423.kind == 0)) {
      ok_3019951395 = false;
      }
      
      if (ok_3019951395) {
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019950075.kind == 13)) {
      if ((len_3003121752(node_3019899461) < 2)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var target_3019951432 = HEX5BHEX5D_3003121748(node_3019899461, 0);
      var value_3019951433 = HEX5BHEX5D_3003121748(node_3019899461, 1);
      var targetType_3019951434 = computeType_3019913434(ctx_3019899460, target_3019951432, true);
      if ((targetType_3019951434.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      var valueType_3019951439 = computeType_3019913434(ctx_3019899460, value_3019951433, true);
      if ((valueType_3019951439.kind == 0)) {
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008313(targetType_3019951434, valueType_3019951439))) {
      var Temporary64 = nimCopy(null, value_3019951433.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary64);;
      var fmtRes_3019951452 = [mnewString(0)];
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, valueType_3019951439, []);
      fmtRes_3019951452[0].push.apply(fmtRes_3019951452[0], [32,116,111,32]);;
      formatValue_3019948837(fmtRes_3019951452, 0, targetType_3019951434, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951452[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
        var oHEX60gensym495_3019951469 = computeSymbol_3019919344(ctx_3019899460, target_3019951432, true);
        if (!isSome_3087009356(oHEX60gensym495_3019951469)) Temporary65 = false; else {          var sym_3019951515 = get_3087009376(oHEX60gensym495_3019951469);
          Temporary65 = true;        }      if (Temporary65) {
      if ((sym_3019951515.kind == 1)) {
      var Temporary66 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary66);;
      var fmtRes_3019951528 = [mnewString(0)];
      fmtRes_3019951528[0].push.apply(fmtRes_3019951528[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951528, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951528[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      if (!((sym_3019951515.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,57,51,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary67 = sym_3019951515;
        if (ConstSet91[Temporary67.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary67.kind, NTI3087007753)); }
      if (!((Temporary67.node.kind == 6))) {
      var Temporary68 = nimCopy(null, target_3019951432.id, NTI2046820355);
      idsHEX60gensym405_3019949273.push(Temporary68);;
      var fmtRes_3019951559 = [mnewString(0)];
      fmtRes_3019951559[0].push.apply(fmtRes_3019951559[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3019951529(fmtRes_3019951559, 0, sym_3019951515, []);
      diagnosticsHEX60gensym405_3019949268.push({message: nimCopy(null, fmtRes_3019951559[0], NTI33554449)});;
      result_3019948919 = errorType_3087008131();
      break BeforeRet;
      }
      
      }
      
      result_3019948919 = voidType_3087008167();
      break BeforeRet;
      }
      else {
        result_3019948919 = errorType_3087008131();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym405_3019949268).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899460.diagnosticsPerQuery, key_3019948932, idsHEX60gensym405_3019949273);
    Label69: {
      var iHEX60gensym405_3019949353 = 0;
      var colontmp__2969567331 = 0;
      colontmp__2969567331 = (idsHEX60gensym405_3019949273).length - 1;
      var res_2969567332 = 0;
      Label70: {
          Label71: while (true) {
          if (!(res_2969567332 <= colontmp__2969567331)) break Label71;
            iHEX60gensym405_3019949353 = res_2969567332;
            var idHEX60gensym405_3019949354 = nimCopy(null, idsHEX60gensym405_3019949273[chckIndx(iHEX60gensym405_3019949353, 0, (idsHEX60gensym405_3019949273).length - 1)], NTI2046820355);
            var diagHEX60gensym405_3019949355 = nimCopy(null, diagnosticsHEX60gensym405_3019949268[chckIndx(iHEX60gensym405_3019949353, 0, (diagnosticsHEX60gensym405_3019949268).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932, []);
            }
            
            var Temporary73 = nimCopy(null, diagHEX60gensym405_3019949355, NTI3019898883);
            (Temporary72 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899460.diagnosticsPerNode, idHEX60gensym405_3019949354).queries, key_3019948932), Temporary72)[0][Temporary72[1]].push(Temporary73);;
            res_2969567332 = addInt(res_2969567332, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899460.diagnosticsPerQuery, key_3019948932);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym404_3019948921 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019948919) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym404_3019948921) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019948919;

}

function HEX5BHEX5DHEX3D_3019899766(t_3019899769, key_3019899770, val_3019899771) {
    t_3019899769.set(mapKeyJs_3019899778(key_3019899770), val_3019899771);

  
}

function HEX26_3087008364(x_3087008366, y_3087008367) {
  var result_3087008368 = [];

    result_3087008368 = new Array(chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008366).length, (y_3087008367).length), 0, 2147483647) ; ++i) { result_3087008368[i] = 0; }    Label1: {
      var i_3087008386 = 0;
      var colontmp__2969567463 = 0;
      colontmp__2969567463 = subInt((x_3087008366).length, 1);
      var res_2969567464 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567464 <= colontmp__2969567463)) break Label3;
            i_3087008386 = res_2969567464;
            result_3087008368[chckIndx(i_3087008386, 0, (result_3087008368).length - 1)] = x_3087008366[chckIndx(i_3087008386, 0, (x_3087008366).length - 1)];
            res_2969567464 = addInt(res_2969567464, 1);
          }
      };
    };
    Label4: {
      var i_3087008394 = 0;
      var colontmp__2969567467 = 0;
      colontmp__2969567467 = subInt((y_3087008367).length, 1);
      var res_2969567468 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2969567468 <= colontmp__2969567467)) break Label6;
            i_3087008394 = res_2969567468;
            result_3087008368[chckIndx(addInt(i_3087008394, (x_3087008366).length), 0, (result_3087008368).length - 1)] = y_3087008367[chckIndx(i_3087008394, 0, (y_3087008367).length - 1)];
            res_2969567468 = addInt(res_2969567468, 1);
          }
      };
    };

  return result_3087008368;

}

function add_3087008402(x_3087008404, x_3087008404_Idx, y_3087008405) {
    var Temporary1;

    var xl_3087008409 = (x_3087008404[x_3087008404_Idx]).length;
    if (x_3087008404[x_3087008404_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008409, (y_3087008405).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008404[x_3087008404_Idx].length ; i < Temporary1 ; ++i) x_3087008404[x_3087008404_Idx].push(0); }
               else { x_3087008404[x_3087008404_Idx].length = Temporary1; };
    Label2: {
      var i_3087008424 = 0;
      var colontmp__2969567471 = 0;
      colontmp__2969567471 = (y_3087008405).length - 1;
      var res_2969567472 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567472 <= colontmp__2969567471)) break Label4;
            i_3087008424 = res_2969567472;
            x_3087008404[x_3087008404_Idx][chckIndx(addInt(xl_3087008409, i_3087008424), 0, (x_3087008404[x_3087008404_Idx]).length - 1)] = y_3087008405[chckIndx(i_3087008424, 0, (y_3087008405).length - 1)];
            res_2969567472 = addInt(res_2969567472, 1);
          }
      };
    };

  
}

function fingerprint_3087008357(typ_3087008358) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008359 = [[]];

    switch (typ_3087008358.kind) {
    case 4:
      var Temporary1 = typ_3087008358;
      if (ConstSet92[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, HEX26_3087008364([typ_3087008358.kind], fingerprint_3087008357(Temporary1.returnType)), NTI3087008200);
      Label2: {
        var param_3087008401 = null;
        var colontmp__2969567458 = [];
        var Temporary3 = typ_3087008358;
        if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2969567458 = Temporary3.paramTypes;
        var i_2969567459 = 0;
        var L_2969567460 = (colontmp__2969567458).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2969567459 < L_2969567460)) break Label5;
              param_3087008401 = colontmp__2969567458[chckIndx(i_2969567459, 0, (colontmp__2969567458).length - 1)];
              add_3087008402(result_3087008359, 0, fingerprint_3087008357(param_3087008401));
              i_2969567459 = addInt(i_2969567459, 1);
              if (!(((colontmp__2969567458).length == L_2969567460))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008358;
      if (ConstSet94[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind, Temporary6.open], NTI3036676328);
      break;
    default: 
      result_3087008359[0] = nimCopy(null, [typ_3087008358.kind], NTI3087008194);
      break;
    }

  return result_3087008359[0];

}

function init_3019899876(result_3019899879, result_3019899879_Idx, capacity_3019899880) {
    result_3019899879[result_3019899879_Idx] = (new Map());

  
}

function getValueKey_3019916331(ctxHEX60gensym99_3019916332, itemIdHEX60gensym99_3019916333) {
  var result_3019916334 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567490 = nimCopy(null, itemIdHEX60gensym99_3019916333, NTI3036676201);
    var colontmp__2969567491 = 1;
    result_3019916334 = nimCopy(result_3019916334, {Field0: nimCopy(null, colontmp__2969567490, NTI3036676201), Field1: colontmp__2969567491}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019916334;

}

function errorValue_3087008442() {
  var result_3087008443 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008443 = nimCopy(result_3087008443, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008443;

}

function HEX5BHEX5D_3154118421(s_3154118425, x_3154118426) {
  var result_3154118427 = [];

    var a_3154118429 = x_3154118426.a;
    var L_3154118435 = addInt(subInt(subInt((s_3154118425).length, x_3154118426.b), a_3154118429), 1);
    result_3154118427 = new Array(chckRange(L_3154118435, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3154118435, 0, 2147483647) ; ++i) { result_3154118427[i] = null; }    Label1: {
      var i_3154118444 = 0;
      var i_2969567493 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567493 < L_3154118435)) break Label3;
            i_3154118444 = i_2969567493;
            result_3154118427[chckIndx(i_3154118444, 0, (result_3154118427).length - 1)] = s_3154118425[chckIndx(addInt(i_3154118444, a_3154118429), 0, (s_3154118425).length - 1)];
            i_2969567493 = addInt(i_2969567493, 1);
          }
      };
    };

  return result_3154118427;

}

function formatValue_3087008590(result_3087008592, result_3087008592_Idx, value_3087008593, specifier_3087008594) {
    formatValue_721420459(result_3087008592, result_3087008592_Idx, HEX24_3003123671(value_3087008593), specifier_3087008594);

  
}

function values_3019907567(t_3019907570) {
  var result_3019907571 = [];

    var iter_3019907576 = t_3019907570.values();
    for (var i in iter_3019907576) {result_3019907571.push(i);}

  return result_3019907571;

}

function hash_3003124022(node_3003124023) {
  var result_3003124024 = 0;

    result_3003124024 = node_3003124023;

  return result_3003124024;

}

function hash_3087008504(x_3087008506) {
  var result_3087008507 = 0;

    result_3087008507 = hashWangYi1_1325400244(x_3087008506);

  return result_3087008507;

}

function hash_3087008266(x_3087008268) {
  var result_3087008269 = 0;

    result_3087008269 = hashWangYi1_1325400244(x_3087008268);

  return result_3087008269;

}

function hash_3087008277(x_3087008279) {
  var result_3087008280 = 0;

    Label1: {
      var a_3087008294 = null;
      var i_2969567507 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567507 < (x_3087008279).length)) break Label3;
            a_3087008294 = x_3087008279[chckIndx(i_2969567507, 0, (x_3087008279).length - 1)];
            result_3087008280 = HEX21HEX26_1325400067(result_3087008280, hash_3087008263(a_3087008294));
            i_2969567507 = addInt(i_2969567507, 1);
          }
      };
    };
    result_3087008280 = HEX21HEX24_1325400082(result_3087008280);

  return result_3087008280;

}

function hash_2701134432(x_2701134434) {
  var result_2701134435 = 0;

    result_2701134435 = hashWangYi1_1325400244((x_2701134434 ? 1 : 0));

  return result_2701134435;

}

function hash_3087008263(typ_3087008264) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008265 = 0;

  BeforeRet: {
    if ((typ_3087008264.mHash == 0)) {
    switch (typ_3087008264.kind) {
    case 4:
      var Temporary2 = typ_3087008264;
      if (ConstSet100[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008264;
      if (ConstSet101[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008266(typ_3087008264.kind) ^ hash_3087008263(Temporary2.returnType)) ^ hash_3087008277(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008264;
      if (ConstSet102[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008266(typ_3087008264.kind) ^ hash_2701134432(Temporary4.open));
      break;
    default: 
      Temporary1 = hash_3087008266(typ_3087008264.kind);
      break;
    }
    typ_3087008264.mHash = Temporary1;
    }
    
    result_3087008265 = typ_3087008264.mHash;
    break BeforeRet;
  };

  return result_3087008265;

}

function hash_3087008501(value_3087008502) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008503 = 0;

  BeforeRet: {
    switch (value_3087008502.kind) {
    case 0:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008503 = hash_3087008504(value_3087008502.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008502;
      if (ConstSet97[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008502;
      if (ConstSet98[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008503 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008503 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008502;
      if (ConstSet99[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008503 = hash_3003124022(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008502;
      if (ConstSet103[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008503 = hash_3087008263(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008503;

}

function hash_3087008735(x_3087008737) {
  var result_3087008738 = 0;

    Label1: {
      var a_3087008752 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567503 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567503 < (x_3087008737).length)) break Label3;
            a_3087008752 = x_3087008737[chckIndx(i_2969567503, 0, (x_3087008737).length - 1)];
            result_3087008738 = HEX21HEX26_1325400067(result_3087008738, hash_3087008501(a_3087008752));
            i_2969567503 = addInt(i_2969567503, 1);
          }
      };
    };
    result_3087008738 = HEX21HEX24_1325400082(result_3087008738);

  return result_3087008738;

}

function hash_3087008753(x_3087008755) {
  var result_3087008756 = 0;

    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_1325400236(x_3087008755.val));
    result_3087008756 = HEX21HEX26_1325400067(result_3087008756, hash_2701134432(x_3087008755.has));
    result_3087008756 = HEX21HEX24_1325400082(result_3087008756);

  return result_3087008756;

}

function hash_3087008732(fec_3087008733) {
  var result_3087008734 = 0;

  BeforeRet: {
    if ((fec_3087008733.mHash == 0)) {
    fec_3087008733.mHash = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_3003124022(fec_3087008733.node), hash_3087008735(fec_3087008733.arguments)), hash_3087008753(fec_3087008733.maxLoopIterations));
    fec_3087008733.mHash = HEX21HEX24_1325400082(result_3087008734);
    }
    
    result_3087008734 = fec_3087008733.mHash;
    break BeforeRet;
  };

  return result_3087008734;

}

function HEX3DHEX3D_3087008521(a_3087008522, b_3087008523) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008524 = false;

  BeforeRet: {
    if (!((a_3087008522.kind == b_3087008523.kind))) {
    result_3087008524 = false;
    break BeforeRet;
    }
    
    switch (a_3087008522.kind) {
    case 0:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008524 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008522;
      if (ConstSet104[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008523;
      if (ConstSet105[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008524 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008522;
      if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008523;
      if (ConstSet107[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008524 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008522;
      if (ConstSet108[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008523;
      if (ConstSet109[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008524 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008522;
      if (ConstSet110[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008523;
      if (ConstSet111[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008524 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008522;
      if (ConstSet112[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008523;
      if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008524 = HEX3DHEX3D_3087008313(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008524;

}

function HEX3DHEX3D_3087008793(x_3087008795, y_3087008796) {
  var result_3087008797 = false;

  BeforeRet: {
    var sameObject_3087008804 = false;
    sameObject_3087008804 = x_3087008795 === y_3087008796
    if (sameObject_3087008804) {
    result_3087008797 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008795).length == (y_3087008796).length))) {
    result_3087008797 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008818 = 0;
      var colontmp__2969567510 = 0;
      colontmp__2969567510 = subInt((x_3087008795).length, 1);
      var res_2969567511 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969567511 <= colontmp__2969567510)) break Label3;
            i_3087008818 = res_2969567511;
            if (!(HEX3DHEX3D_3087008521(x_3087008795[chckIndx(i_3087008818, 0, (x_3087008795).length - 1)], y_3087008796[chckIndx(i_3087008818, 0, (y_3087008796).length - 1)]))) {
            result_3087008797 = false;
            break BeforeRet;
            }
            
            res_2969567511 = addInt(res_2969567511, 1);
          }
      };
    };
    result_3087008797 = true;
    break BeforeRet;
  };

  return result_3087008797;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008881(a_3087008883, b_3087008884) {
  var result_3087008885 = false;

    result_3087008885 = (((isSome_1191185117(a_3087008883) && isSome_1191185117(b_3087008884)) && (a_3087008883.val == b_3087008884.val)) || (isNone_1191185194(a_3087008883) && isNone_1191185194(b_3087008884)));

  return result_3087008885;

}

function HEX3DHEX3D_3087008776(a_3087008777, b_3087008778) {
  var result_3087008779 = false;

  BeforeRet: {
    if ((a_3087008777 == null)) {
    result_3087008779 = (b_3087008778 == null);
    break BeforeRet;
    }
    
    if ((b_3087008778 == null)) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008777.node == b_3087008778.node))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008793(a_3087008777.arguments, b_3087008778.arguments))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008881(a_3087008777.maxLoopIterations, b_3087008778.maxLoopIterations))) {
    result_3087008779 = false;
    break BeforeRet;
    }
    
    result_3087008779 = true;
    break BeforeRet;
  };

  return result_3087008779;

}

function getItem_3019907554(selfHEX60gensym89_3019907555) {
  var result_3019907556 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)) {
    selfHEX60gensym89_3019907555.id = nimCopy(selfHEX60gensym89_3019907555.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym89_3019907555.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,57,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969567513 = nimCopy(null, selfHEX60gensym89_3019907555.id, NTI2046820355);
    var colontmp__2969567514 = 3;
    result_3019907556 = nimCopy(result_3019907556, {Field0: nimCopy(null, colontmp__2969567513, NTI2046820355), Field1: colontmp__2969567514}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019907556;

}

function HEX5BHEX5DHEX3D_3019907734(t_3019907737, key_3019907738, val_3019907739) {
    t_3019907737.set(mapKeyJs_3019899588(key_3019907738), val_3019907739);

  
}

function getOrCreateFunctionExecutionContext_3019907563(ctxHEX60gensym90_3019907564, dataHEX60gensym90_3019907565) {
  var result_3019907566 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym90_3019907599 = null;
      var colontmp__2969567496 = [];
      colontmp__2969567496 = values_3019907567(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext);
      var i_2969567498 = 0;
      var L_2969567499 = (colontmp__2969567496).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567498 < L_2969567499)) break Label3;
            existingHEX60gensym90_3019907599 = colontmp__2969567496[chckIndx(i_2969567498, 0, (colontmp__2969567496).length - 1)];
            if (((hash_3087008732(existingHEX60gensym90_3019907599) == hash_3087008732(dataHEX60gensym90_3019907565)) && HEX3DHEX3D_3087008776(existingHEX60gensym90_3019907599, dataHEX60gensym90_3019907565))) {
            result_3019907566 = existingHEX60gensym90_3019907599;
            break BeforeRet;
            }
            
            i_2969567498 = addInt(i_2969567498, 1);
            if (!(((colontmp__2969567496).length == L_2969567499))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym90_3019907600 = getItem_3019907554(dataHEX60gensym90_3019907565);
    var keyHEX60gensym90_3019907601 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym90_3019907600, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym90_3019907564.depGraph.changed, keyHEX60gensym90_3019907601, ctxHEX60gensym90_3019907564.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym90_3019907564.itemsFunctionExecutionContext, itemHEX60gensym90_3019907600, dataHEX60gensym90_3019907565);
    result_3019907566 = dataHEX60gensym90_3019907565;
    break BeforeRet;
  };

  return result_3019907566;

}

function mapKeyJs_3019902286(key_3019902288) {
  var result_3019902289 = null;

    let temp = key_3019902288;
    let newId = getIdFunctionExecutionContextJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902289;

}

function contains_3019933795(t_3019933798, key_3019933799) {
  var result_3019933800 = false;

    result_3019933800 = t_3019933798.has(mapKeyJs_3019902286(key_3019933799));

  return result_3019933800;

}

function addQuoted_3087008638(s_3087008640, s_3087008640_Idx, x_3087008641) {
    s_3087008640[s_3087008640_Idx].push.apply(s_3087008640[s_3087008640_Idx], HEX24_3087008498(x_3087008641));;

  
}

function collectionToString_3087008604(x_3087008606, prefix_3087008607, separator_3087008608, suffix_3087008609) {
  var result_3087008610 = [[]];

    result_3087008610[0] = nimCopy(null, prefix_3087008607, NTI33554449);
    var firstElement_3087008611 = true;
    Label1: {
      var value_3087008634 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567517 = 0;
      var L_2969567518 = (x_3087008606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567517 < L_2969567518)) break Label3;
            value_3087008634 = x_3087008606[i_2969567517];
            if (firstElement_3087008611) {
            firstElement_3087008611 = false;
            }
            else {
            result_3087008610[0].push.apply(result_3087008610[0], separator_3087008608);;
            }
            
            addQuoted_3087008638(result_3087008610, 0, value_3087008634);
            i_2969567517 += 1;
            if (!(((x_3087008606).length == L_2969567518))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008610[0].push.apply(result_3087008610[0], suffix_3087008609);;

  return result_3087008610[0];

}

function HEX24_3087008600(x_3087008602) {
  var result_3087008603 = [];

    result_3087008603 = nimCopy(null, collectionToString_3087008604(x_3087008602, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008603;

}

function formatValue_3087008595(result_3087008597, result_3087008597_Idx, value_3087008598, specifier_3087008599) {
    formatValue_721420459(result_3087008597, result_3087008597_Idx, HEX24_3087008600(value_3087008598), specifier_3087008599);

  
}

function HEX24_3087008713(self_3087008715) {
  var result_3087008716 = [[]];

    if (isSome_1191185117(self_3087008715)) {
    result_3087008716[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008716, 0, self_3087008715.val);
    result_3087008716[0].push.apply(result_3087008716[0], [41]);;
    }
    else {
      result_3087008716[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008716[0];

}

function formatValue_3087008662(result_3087008664, result_3087008664_Idx, value_3087008665, specifier_3087008666) {
    formatValue_721420459(result_3087008664, result_3087008664_Idx, HEX24_3087008713(value_3087008665), specifier_3087008666);

  
}

function HEX24_3087008582(fec_3087008583) {
  var result_3087008584 = [];

  BeforeRet: {
    var fmtRes_3087008589 = [mnewString(0)];
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [67,97,108,108,32]);;
    formatValue_3087008590(fmtRes_3087008589, 0, fec_3087008583.node, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [40]);;
    formatValue_3087008595(fmtRes_3087008589, 0, fec_3087008583.arguments, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008662(fmtRes_3087008589, 0, fec_3087008583.maxLoopIterations, []);
    fmtRes_3087008589[0].push.apply(fmtRes_3087008589[0], [41]);;
    result_3087008584 = nimCopy(null, fmtRes_3087008589[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008584;

}

function HEX5BHEX5D_3019933889(t_3019933892, key_3019933893) {
  var result_3019933894 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019933894 = nimCopy(result_3019933894, t_3019933892.get(mapKeyJs_3019902286(key_3019933893)), NTI3087007751);

  return result_3019933894;

}

function computeFunctionExecution_3019933908(ctxHEX60gensym125_3019933909, inputHEX60gensym125_3019933910) {
    var Temporary3;
    var Temporary5;

  var result_3019933911 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym125_3019933992 = getItem_3019907554(inputHEX60gensym125_3019933910);
    var keyHEX60gensym125_3019933993 = {Field0: nimCopy(null, itemHEX60gensym125_3019933992, NTI3036676201), Field1: 7};
    recordDependency_3019906144(ctxHEX60gensym125_3019933909, itemHEX60gensym125_3019933992, 7);
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3036676336(itemHEX60gensym125_3019933992));
    }
    
    force_3019908046(ctxHEX60gensym125_3019933909, keyHEX60gensym125_3019933993);
    if (!(contains_3019933795(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008582(inputHEX60gensym125_3019933910) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019933911 = nimCopy(result_3019933911, HEX5BHEX5D_3019933889(ctxHEX60gensym125_3019933909.queryCacheFunctionExecution, inputHEX60gensym125_3019933910), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym125_3019933909.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym125_3019933909.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym125_3019933909.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym125_3019933909.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019933911;

}

function contains_3019931040(t_3019931043, key_3019931044) {
  var result_3019931045 = false;

    result_3019931045 = t_3019931043.has(mapKeyJs_3019901554(key_3019931044));

  return result_3019931045;

}

function HEX5BHEX5D_3019931134(t_3019931137, key_3019931138) {
  var result_3019931139 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3019931139 = nimCopy(result_3019931139, t_3019931137.get(mapKeyJs_3019901554(key_3019931138)), NTI3087007751);

  return result_3019931139;

}

function computeSymbolValue_3019931153(ctxHEX60gensym121_3019931154, inputHEX60gensym121_3019931155, recordDependencyHEX60gensym121_3019931156) {
    var Temporary3;
    var Temporary5;

  var result_3019931157 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym121_3019931238 = getItem_3019907143(inputHEX60gensym121_3019931155);
    var keyHEX60gensym121_3019931239 = {Field0: nimCopy(null, itemHEX60gensym121_3019931238, NTI3036676201), Field1: 6};
    if (recordDependencyHEX60gensym121_3019931156) {
    recordDependency_3019906144(ctxHEX60gensym121_3019931154, itemHEX60gensym121_3019931238, 6);
    }
    
    var colorHEX60gensym121_3019931240 = nodeColor_3036678426(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, 0);
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym121_3019931240, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym121_3019931238));
    }
    
    if ((colorHEX60gensym121_3019931240 == 2)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    }
    else {
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym121_3019931240 == 0)) {
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    if (false) {
    markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239, true) == 0)) {
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym121_3019931154.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
      if (false) {
      markRed_3036679306(ctxHEX60gensym121_3019931154.depGraph, keyHEX60gensym121_3019931239, []);
      }
      
      if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
      }
      
      if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym121_3019931240 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym121_3019931154.enableLogging && contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008498(HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155)));
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    force_3019908046(ctxHEX60gensym121_3019931154, keyHEX60gensym121_3019931239);
    }
    
    if (!(contains_3019931040(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008915(inputHEX60gensym121_3019931155) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019931157 = nimCopy(result_3019931157, HEX5BHEX5D_3019931134(ctxHEX60gensym121_3019931154.queryCacheSymbolValue, inputHEX60gensym121_3019931155), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym121_3019931154.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym121_3019931154.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym121_3019931154.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym121_3019931154.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019931157;

}

function voidValue_3087008471() {
  var result_3087008472 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008472 = nimCopy(result_3087008472, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008472;

}

function some_3019916528(val_3019916530) {
  var result_3019916531 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916531.has = true;
    result_3019916531.val = nimCopy(result_3019916531.val, val_3019916530, NTI3087007751);

  return result_3019916531;

}

function none_3019916536() {
  var result_3019916543 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3019916543;

}

function none_3019916533() {
  var result_3019916535 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3019916535 = nimCopy(result_3019916535, none_3019916536(), NTI3019909216);

  return result_3019916535;

}

function getValue_3019916335(ctxHEX60gensym100_3019916336, inputHEX60gensym100_3019916337) {
  var result_3019916343 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3019916420(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)) {
    result_3019916343 = nimCopy(result_3019916343, some_3019916528(HEX5BHEX5D_3019916514(ctxHEX60gensym100_3019916336.queryCacheValue, inputHEX60gensym100_3019916337)), NTI3019909216);
    break BeforeRet;
    }
    
    result_3019916343 = nimCopy(result_3019916343, none_3019916533(), NTI3019909216);
    break BeforeRet;
  };

  return result_3019916343;

}

function isSome_3154116640(self_3154116642) {
  var result_3154116643 = false;

    result_3154116643 = self_3154116642.has;

  return result_3154116643;

}

function isNone_3154116665(self_3154116667) {
  var result_3154116668 = false;

    result_3154116668 = !(self_3154116667.has);

  return result_3154116668;

}

function get_3154116657(self_3154116659) {
  var result_3154116660 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3154116665(self_3154116659)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3154116660 = self_3154116659.val;

  return result_3154116660;

}

function newAstFunctionValue_3087008494(node_3087008495, rev_3087008496) {
  var result_3087008497 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008497 = nimCopy(result_3087008497, {kind: 5, node: node_3087008495, rev: rev_3087008496, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008497;

}

function computeValueImpl_3019899462(ctx_3019899463, node_3019899464) {
      var Temporary4;
      var Temporary9;
        var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;
      var Temporary22;
        var Temporary23;
        var Temporary24;
      var Temporary25;
            var Temporary29;

  var result_3019951581 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym503_3019951583 = (ctx_3019899463.enableLogging || ctx_3019899463.enableQueryLogging);
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym503_3019951583) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899464) || []));
    }
    
    try {
    var key_3019951594 = nimCopy(null, getValueKey_3019916331(ctx_3019899463, getItem_3019906357(node_3019899464)), NTI3036676204);
    if (contains_3019940149(ctx_3019899463.diagnosticsPerQuery, key_3019951594)) {
    Label3: {
      var idHEX60gensym504_3019951772 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567475 = [];
      colontmp__2969567475 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899463.diagnosticsPerQuery, key_3019951594), Temporary4)[0][Temporary4[1]];
      var i_2969567476 = 0;
      var L_2969567477 = (colontmp__2969567475).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567476 < L_2969567477)) break Label6;
            idHEX60gensym504_3019951772 = colontmp__2969567475[chckIndx(i_2969567476, 0, (colontmp__2969567475).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019951772).queries, key_3019951594);
            i_2969567476 = addInt(i_2969567476, 1);
            if (!(((colontmp__2969567475).length == L_2969567477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym504_3019951930 = [];
    var idsHEX60gensym504_3019951935 = [];
    try {
    Label8: {
      var expr_3019952737 = node_3019899464;
      var pos_3019952738 = 0;
      var _ = pos_3019952738;
      if ((expr_3019952737.kind == 2)) {
++excHandler;
      try {
      Temporary9 = nsuParseInt(node_3019899464.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3019952745 = Temporary9;
      result_3019951581 = nimCopy(result_3019951581, {kind: 3, intValue: value_3019952745, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 3)) {
      result_3019951581 = nimCopy(result_3019951581, {kind: 2, stringValue: nimCopy(null, node_3019899464.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 8)) {
      var function_3019952754 = HEX5BHEX5D_3003121748(node_3019899464, 0);
      var functionValue_3019952755 = computeValue_3019916562(ctx_3019899463, function_3019952754, true);
      if ((functionValue_3019952755.kind == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3019952764 = [];
      Label11: {
        var arg_3019952783 = null;
        var colontmp__2969567485 = [];
        colontmp__2969567485 = HEX5BHEX5D_3154118421(node_3019899464.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2969567486 = 0;
        var L_2969567487 = (colontmp__2969567485).length;
        Label12: {
            Label13: while (true) {
            if (!(i_2969567486 < L_2969567487)) break Label13;
              arg_3019952783 = colontmp__2969567485[chckIndx(i_2969567486, 0, (colontmp__2969567485).length - 1)];
              var value_3019952784 = computeValue_3019916562(ctx_3019899463, arg_3019952783, true);
              if ((value_3019952784.kind == 0)) {
              result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary14 = nimCopy(null, value_3019952784, NTI3087007751);
              args_3019952764.push(Temporary14);;
              i_2969567486 = addInt(i_2969567486, 1);
              if (!(((colontmp__2969567485).length == L_2969567487))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3019952755.kind == 4)) {
        var Temporary15 = functionValue_3019952755;
        if (ConstSet95[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI3087007750)); }
      if ((Temporary15.impl == null)) {
      var fmtRes_3019952805 = [mnewString(0)];
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3036676344(fmtRes_3019952805, 0, function_3019952754.id, []);
      fmtRes_3019952805[0].push.apply(fmtRes_3019952805[0], [39,32,97,116,32]);;
      formatValue_3087008590(fmtRes_3019952805, 0, node_3019899464, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019952805[0], NTI33554449)]);
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary16 = functionValue_3019952755;
      if (ConstSet96[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      result_3019951581 = nimCopy(result_3019951581, Temporary16.impl(args_3019952764), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3019952755.kind == 5)) {
      var Temporary17 = functionValue_3019952755;
      if (ConstSet114[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI3087007750)); }
      var fec_3019952820 = getOrCreateFunctionExecutionContext_3019907563(ctx_3019899463, {node: Temporary17.node, arguments: nimCopy(null, args_3019952764, NTI3019930420), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3019951581 = nimCopy(result_3019951581, computeFunctionExecution_3019933908(ctx_3019899463, fec_3019952820), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 7)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 4)) {
      if ((len_3003121752(node_3019899464) == 0)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, computeValue_3019916562(ctx_3019899463, HEX5BHEX5D_3003121748(node_3019899464, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 1)) {
      var id_3019952833 = nimCopy(null, node_3019899464.reff, NTI2046820355);
      var symbols_3019952834 = computeSymbols_3019922496(ctx_3019899463, node_3019899464, true);
      if (contains_3019950603(symbols_3019952834, id_3019952833)) {
      var symbol_3019953001 = (Temporary18 = HEX5BHEX5D_3019950858(symbols_3019952834, id_3019952833), Temporary18)[0][Temporary18[1]];
      result_3019951581 = nimCopy(result_3019951581, computeSymbolValue_3019931153(ctx_3019899463, symbol_3019953001, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 9)) {
      if ((len_3003121752(node_3019899464) < 2)) {
      result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3019953006 = 0;
      Label19: {
          Label20: while (true) {
          if (!(addInt(index_3019953006, 1) < len_3003121752(node_3019899464))) break Label20;
            try {
            var condition_3019953011 = HEX5BHEX5D_3003121748(node_3019899464, index_3019953006);
            var trueCase_3019953012 = HEX5BHEX5D_3003121748(node_3019899464, addInt(index_3019953006, 1));
            var conditionValue_3019953013 = computeValue_3019916562(ctx_3019899463, condition_3019953011, true);
            if ((conditionValue_3019953013.kind == 0)) {
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.kind == 3))) {
            var fmtRes_3019953026 = [mnewString(0)];
            fmtRes_3019953026[0].push.apply(fmtRes_3019953026[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3019953026, 0, conditionValue_3019953013, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953026[0], NTI33554449)]);
            result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3019953013.intValue == 0))) {
            var trueCaseValue_3019953032 = computeValue_3019916562(ctx_3019899463, trueCase_3019953012, true);
            result_3019951581 = nimCopy(result_3019951581, trueCaseValue_3019953032, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3019953006 = addInt(index_3019953006, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3019899464), 2) == 0))) {
      var falseCaseValue_3019953033 = computeValue_3019916562(ctx_3019899463, last_3003121922(node_3019899464), true);
      result_3019951581 = nimCopy(result_3019951581, falseCaseValue_3019953033, NTI3087007751);
      break BeforeRet;
      }
      
      result_3019951581 = nimCopy(result_3019951581, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3019952737.kind == 11)) {
        var oHEX60gensym530_3019953040 = getValue_3019916335(ctx_3019899463, node_3019899464);
        if (!isSome_3154116640(oHEX60gensym530_3019953040)) Temporary24 = false; else {          var value_3019953086 = nimCopy(null, get_3154116657(oHEX60gensym530_3019953040), NTI3087007751);
          Temporary24 = true;        }        if (!Temporary24) Temporary23 = false; else {          Temporary23 = (value_3019953086.kind == 5);        }      if (Temporary23) {
      var Temporary25 = value_3019953086;
      if (ConstSet115[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007750)); }
      Temporary22 = Temporary25.rev;
      }
      else {
      Temporary22 = 0;
      }
      
      var currentRev_3019953091 = Temporary22;
      result_3019951581 = nimCopy(result_3019951581, newAstFunctionValue_3087008494(node_3019899464, addInt(currentRev_3019953091, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3019951581 = nimCopy(result_3019951581, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((0 < (diagnosticsHEX60gensym504_3019951930).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899463.diagnosticsPerQuery, key_3019951594, idsHEX60gensym504_3019951935);
    Label26: {
      var iHEX60gensym504_3019952015 = 0;
      var colontmp__2969567480 = 0;
      colontmp__2969567480 = (idsHEX60gensym504_3019951935).length - 1;
      var res_2969567481 = 0;
      Label27: {
          Label28: while (true) {
          if (!(res_2969567481 <= colontmp__2969567480)) break Label28;
            iHEX60gensym504_3019952015 = res_2969567481;
            var idHEX60gensym504_3019952016 = nimCopy(null, idsHEX60gensym504_3019951935[chckIndx(iHEX60gensym504_3019952015, 0, (idsHEX60gensym504_3019951935).length - 1)], NTI2046820355);
            var diagHEX60gensym504_3019952017 = nimCopy(null, diagnosticsHEX60gensym504_3019951930[chckIndx(iHEX60gensym504_3019952015, 0, (diagnosticsHEX60gensym504_3019951930).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594, []);
            }
            
            var Temporary30 = nimCopy(null, diagHEX60gensym504_3019952017, NTI3019898883);
            (Temporary29 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899463.diagnosticsPerNode, idHEX60gensym504_3019952016).queries, key_3019951594), Temporary29)[0][Temporary29[1]].push(Temporary30);;
            res_2969567481 = addInt(res_2969567481, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899463.diagnosticsPerQuery, key_3019951594);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym503_3019951583 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019951581) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym503_3019951583) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019951581;

}

function HEX5BHEX5DHEX3D_3019900124(t_3019900127, key_3019900128, val_3019900129) {
    t_3019900127.set(mapKeyJs_3019899778(key_3019900128), val_3019900129);

  
}

function fingerprint_3087008538(value_3087008539) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008540 = [];

  BeforeRet: {
    switch (value_3087008539.kind) {
    case 0:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 1:
      result_3087008540 = nimCopy(null, [value_3087008539.kind], NTI3087008194);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008539;
      if (ConstSet116[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, Temporary1.intValue], NTI3036676328);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008539;
      if (ConstSet117[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_1325400491(Temporary2.stringValue)], NTI3036676328);
      break BeforeRet;
      break;
    case 4:
      result_3087008540 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008539;
      if (ConstSet118[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008539;
      if (ConstSet119[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, [value_3087008539.kind, hash_3003124022(Temporary3.node), Temporary4.rev], NTI3087008384);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008539;
      if (ConstSet120[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008540 = nimCopy(null, HEX26_3087008364([value_3087008539.kind], fingerprint_3087008357(Temporary5.typ)), NTI3087008200);
      break BeforeRet;
      break;
    }
  };

  return result_3087008540;

}

function init_3019900223(result_3019900226, result_3019900226_Idx, capacity_3019900227) {
    result_3019900226[result_3019900226_Idx] = (new Map());

  
}

function some_3019907120(val_3019907122) {
  var result_3019907123 = ({val: null});

    if (!(!((val_3019907122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3019907123.val = val_3019907122;

  return result_3019907123;

}

function HEX5BHEX5DHEX3D_3019907323(t_3019907326, key_3019907327, val_3019907328) {
    t_3019907326.set(mapKeyJs_3019899588(key_3019907327), val_3019907328);

  
}

function newSymbol_3019907758(ctxHEX60gensym91_3019907759, dataHEX60gensym91_3019907760) {
  var result_3019907761 = null;

  BeforeRet: {
    var itemHEX60gensym91_3019907762 = getItem_3019907143(dataHEX60gensym91_3019907760);
    var keyHEX60gensym91_3019907763 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym91_3019907762, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym91_3019907759.depGraph.changed, keyHEX60gensym91_3019907763, ctxHEX60gensym91_3019907759.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907323(ctxHEX60gensym91_3019907759.itemsSymbol, itemHEX60gensym91_3019907762, dataHEX60gensym91_3019907760);
    result_3019907761 = dataHEX60gensym91_3019907760;
    break BeforeRet;
  };

  return result_3019907761;

}

function none_3019907136() {
  var result_3019907142 = ({val: null});

  return result_3019907142;

}

function none_3019907133() {
  var result_3019907135 = ({val: null});

    result_3019907135 = nimCopy(result_3019907135, none_3019907136(), NTI3087008909);

  return result_3019907135;

}

function computeSymbolImpl_3019899465(ctx_3019899466, node_3019899467) {
      var Temporary4;

  var result_3019953098 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym531_3019953100 = (ctx_3019899466.enableLogging || ctx_3019899466.enableQueryLogging);
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym531_3019953100) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899467) || []));
    }
    
    try {
    Label3: {
      var expr_3019953171 = node_3019899467;
      var pos_3019953172 = 0;
      var _ = pos_3019953172;
      if ((expr_3019953171.kind == 1)) {
      var symbols_3019953179 = computeSymbols_3019922496(ctx_3019899466, node_3019899467, true);
      if (contains_3019950603(symbols_3019953179, node_3019899467.reff)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120((Temporary4 = HEX5BHEX5D_3019950858(symbols_3019953179, node_3019899467.reff), Temporary4)[0][Temporary4[1]]), NTI3087008909);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3019953171.kind == 4)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 5)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
      if ((expr_3019953171.kind == 6)) {
      result_3019953098 = nimCopy(result_3019953098, some_3019907120(newSymbol_3019907758(ctx_3019899466, {kind: 0, id: nimCopy(null, node_3019899467.id, NTI2046820355), node: node_3019899467, name: nimCopy(null, node_3019899467.text, NTI33554449), mHash: 0, typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008909);
      break BeforeRet;
      }
      else {
        var fmtRes_3019953374 = [mnewString(0)];
        fmtRes_3019953374[0].push.apply(fmtRes_3019953374[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008590(fmtRes_3019953374, 0, node_3019899467, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3019953374[0], NTI33554449)]);
        result_3019953098 = nimCopy(result_3019953098, none_3019907133(), NTI3087008909);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym531_3019953100 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905491(result_3019953098) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym531_3019953100) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019953098;

}

function HEX5BHEX5DHEX3D_3019900472(t_3019900475, key_3019900476, val_3019900477) {
    t_3019900475.set(mapKeyJs_3019899778(key_3019900476), val_3019900477);

  
}

function fingerprint_3087008948(symbol_3087008949) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008950 = [];

    switch (symbol_3087008949.kind) {
    case 0:
      var Temporary1 = symbol_3087008949;
      if (ConstSet121[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, [hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, hash_2046820630(Temporary1.node.id)], NTI3087008654);
      break;
    case 1:
      var Temporary2 = symbol_3087008949;
      if (ConstSet122[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008949;
      if (ConstSet123[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008949;
      if (ConstSet124[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008949;
      if (ConstSet125[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008950 = nimCopy(null, HEX26_3087008364(HEX26_3087008364([hash_2046820630(symbol_3087008949.id), hash_1325400491(symbol_3087008949.name), symbol_3087008949.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008357(Temporary4.typ)), fingerprint_3087008538(Temporary5.value)), NTI3087008200);
      break;
    }

  return result_3087008950;

}

function fingerprint_3087009342(symbol_3087009347) {
      var Temporary1;

  var result_3087009348 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009351 = nimCopy(null, symbol_3087009347, NTI3087008909);
      if (!isSome_3087009356(oHEX60gensym27_3087009351)) Temporary1 = false; else {        var s_3087009402 = get_3087009376(oHEX60gensym27_3087009351);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009348 = nimCopy(null, fingerprint_3087008948(s_3087009402), NTI3036676200);
    break BeforeRet;
    }
    
    result_3087009348 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009348;

}

function init_3019900571(result_3019900574, result_3019900574_Idx, capacity_3019900575) {
    result_3019900574[result_3019900574_Idx] = (new Map());

  
}

function initTable_3019905097(initialSize_3019905100) {
  var result_3019905101 = ({data: [], counter: 0});

    var correctSizeHEX60gensym154_3019905103 = slotsNeeded_1308622891(chckRange(initialSize_3019905100, 0, 2147483647));
    result_3019905101.counter = 0;
    result_3019905101.data = new Array(chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym154_3019905103, 0, 2147483647) ; ++i) { result_3019905101.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3019905101;

}

function newTable_3019937829(initialSize_3019937832) {
  var result_3019937833 = null;

    result_3019937833 = ({data: [], counter: 0});
    result_3019937833 = nimCopy(result_3019937833, initTable_3019905097(initialSize_3019937832), NTI3087008713);

  return result_3019937833;

}

function none_3003121871() {
  var result_3003121877 = ({val: null});

  return result_3003121877;

}

function none_3003121868() {
  var result_3003121870 = ({val: null});

    result_3003121870 = nimCopy(result_3003121870, none_3003121871(), NTI3003121783);

  return result_3003121870;

}

function some_3003121890(val_3003121892) {
  var result_3003121893 = ({val: null});

    if (!(!((val_3003121892 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121893.val = val_3003121892;

  return result_3003121893;

}

function findWithParentRec_3003123589(node_3003123590, kind_3003123591) {
  var result_3003123593 = ({val: null});

  BeforeRet: {
    if ((node_3003123590.parent == null)) {
    result_3003123593 = nimCopy(result_3003123593, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    if ((node_3003123590.parent.kind == kind_3003123591)) {
    result_3003123593 = nimCopy(result_3003123593, some_3003121890(node_3003123590), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003123593 = nimCopy(result_3003123593, findWithParentRec_3003123589(node_3003123590.parent, kind_3003123591), NTI3003121783);
    break BeforeRet;
  };

  return result_3003123593;

}

function isSome_3003123546(self_3003123548) {
  var result_3003123549 = false;

    result_3003123549 = !((self_3003123548.val == null));

  return result_3003123549;

}

function isNone_3003123574(self_3003123576) {
  var result_3003123577 = false;

    result_3003123577 = (self_3003123576.val == null);

  return result_3003123577;

}

function get_3003123566(self_3003123568) {
  var result_3003123569 = null;

    if (isNone_3003123574(self_3003123568)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003123569 = self_3003123568["val"];

  return result_3003123569;

}

function mustRehash_3019938626(t_3019938628) {
  var result_3019938629 = false;

    if (!((t_3019938628.counter < (t_3019938628.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019938629 = ((mulInt((t_3019938628.data).length, 2) < mulInt(t_3019938628.counter, 3)) || (subInt((t_3019938628.data).length, t_3019938628.counter) < 4));

  return result_3019938629;

}

function rawInsert_3019939319(t_3019939323, data_3019939324, data_3019939324_Idx, key_3019939325, val_3019939326, hc_3019939327, h_3019939328) {
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1 = nimCopy(data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field1, key_3019939325, NTI2046820355);
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field2 = val_3019939326;
    data_3019939324[data_3019939324_Idx][chckIndx(h_3019939328, 0, (data_3019939324[data_3019939324_Idx]).length - 1)].Field0 = hc_3019939327;

  
}

function enlarge_3019938883(t_3019938886) {
    var n_3019938889 = [];
    n_3019938889 = new Array(chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019938886.data).length, 2), 0, 2147483647) ; ++i) { n_3019938889[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3019938886.data; t_3019938886.data = n_3019938889; n_3019938889 = Temporary1;    Label2: {
      var i_3019938987 = 0;
      var colontmp__2969567559 = 0;
      colontmp__2969567559 = (n_3019938889).length - 1;
      var res_2969567560 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567560 <= colontmp__2969567559)) break Label4;
            i_3019938987 = res_2969567560;
            var eh_3019939068 = n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019939068)) {
            var j_3019939072 = (eh_3019939068 & (t_3019938886.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019938886.data[chckIndx(j_3019939072, 0, (t_3019938886.data).length - 1)].Field0)) break Label6;
                  j_3019939072 = nextTry_1308622883(j_3019939072, (t_3019938886.data).length - 1);
                }
            };
            rawInsert_3019939319(t_3019938886, t_3019938886, "data", n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field1, n_3019938889[chckIndx(i_3019938987, 0, (n_3019938889).length - 1)].Field2, eh_3019939068, j_3019939072);
            }
            
            res_2969567560 = addInt(res_2969567560, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019939569(t_3019939572, key_3019939573, hc_3019939574) {
  var result_3019939575 = 0;

  BeforeRet: {
    if (((t_3019939572.data).length == 0)) {
    result_3019939575 = -1;
    break BeforeRet;
    }
    
    var h_3019939660 = (hc_3019939574 & (t_3019939572.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0)) break Label2;
          if (((t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field0 == hc_3019939574) && HEX3DHEX3D_2046820626(t_3019939572.data[chckIndx(h_3019939660, 0, (t_3019939572.data).length - 1)].Field1, key_3019939573))) {
          result_3019939575 = h_3019939660;
          break BeforeRet;
          }
          
          h_3019939660 = nextTry_1308622883(h_3019939660, (t_3019939572.data).length - 1);
        }
    };
    result_3019939575 = subInt(-1, h_3019939660);
  };

  return result_3019939575;

}

function HEX5BHEX5DHEX3D_3019938028(t_3019938031, key_3019938032, val_3019938033) {
    if (((t_3019938031.data).length == 0)) {
    var correctSizeHEX60gensym329_3019938117 = slotsNeeded_1308622891(32);
    t_3019938031.counter = 0;
    t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym329_3019938117, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3019938122 = [0];
    var index_3019938458 = rawGet_3019938123(t_3019938031, key_3019938032, hc_3019938122, 0);
    if ((0 <= index_3019938458)) {
    t_3019938031.data[chckIndx(index_3019938458, 0, (t_3019938031.data).length - 1)].Field2 = val_3019938033;
    }
    else {
      if (((t_3019938031.data).length == 0)) {
      var correctSizeHEX60gensym334_3019938621 = slotsNeeded_1308622891(32);
      t_3019938031.counter = 0;
      t_3019938031.data = new Array(chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym334_3019938621, 0, 2147483647) ; ++i) { t_3019938031.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3019938626(t_3019938031)) {
      enlarge_3019938883(t_3019938031);
      index_3019938458 = rawGetKnownHC_3019939569(t_3019938031, key_3019938032, hc_3019938122[0]);
      }
      
      index_3019938458 = subInt(-1, index_3019938458);
      rawInsert_3019939319(t_3019938031, t_3019938031, "data", key_3019938032, val_3019938033, hc_3019938122[0], index_3019938458);
      t_3019938031.counter = addInt(t_3019938031.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3019953618(t_3019953621, key_3019953622, val_3019953623) {
    HEX5BHEX5DHEX3D_3019938028(t_3019953621, key_3019953622, val_3019953623);

  
}

function base_3003121758(node_3003121759) {
  var result_3003121760 = null;

  BeforeRet: {
    if ((node_3003121759.parent == null)) {
    result_3003121760 = node_3003121759;
    break BeforeRet;
    }
    
    result_3003121760 = base_3003121758(node_3003121759.parent);
    break BeforeRet;
  };

  return result_3003121760;

}

function len_3019954306(t_3019954309) {
  var result_3019954310 = 0;

    result_3019954310 = t_3019954309.counter;

  return result_3019954310;

}

function computeSymbolsImpl_3019899469(ctx_3019899470, node_3019899471) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3019953413 = null;

    var logQueryHEX60gensym542_3019953415 = (ctx_3019899470.enableLogging || ctx_3019899470.enableQueryLogging);
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym542_3019953415) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899471) || []));
    }
    
    try {
    result_3019953413 = newTable_3019937829(32);
      var oHEX60gensym543_3019953497 = findWithParentRec_3003123589(node_3019899471, 7);
      if (!isSome_3003123546(oHEX60gensym543_3019953497)) Temporary4 = false; else {        var parentInNodeList_3019953543 = get_3003123566(oHEX60gensym543_3019953497);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3019953543.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3019953548 = computeSymbols_3019922496(ctx_3019899470, parentInNodeList_3019953543.parent, true);
    Label5: {
      var id_3019953553 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3019953554 = null;
      var L_2969567522 = len_3087009065(parentSymbols_3019953548);
      Label6: {
        var h_2969567524 = 0;
        var colontmp__2969567525 = 0;
        colontmp__2969567525 = (parentSymbols_3019953548.data).length - 1;
        var res_2969567526 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2969567526 <= colontmp__2969567525)) break Label8;
              h_2969567524 = res_2969567526;
              if (isFilled_1308622880(parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field0)) {
              var colontmp__2969567529 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_3019953548.data[chckIndx(h_2969567524, 0, (parentSymbols_3019953548.data).length - 1)].Field2}, NTI3087008732);
              id_3019953553 = nimCopy(id_3019953553, colontmp__2969567529["Field0"], NTI2046820355);
              sym_3019953554 = colontmp__2969567529["Field1"];
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, id_3019953553, sym_3019953554);
              if (!((len_3087009065(parentSymbols_3019953548) == L_2969567522))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567526 = addInt(res_2969567526, 1);
            }
        };
      };
    };
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(parentInNodeList_3019953543.parent), -1);
    var bIsOrderDependent_3019953777 = !((parentInNodeList_3019953543.parent.parent == null));
    Label9: {
      var child_3019953781 = null;
      var i_2969567532 = 0;
      var L_2969567533 = (parentInNodeList_3019953543.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2969567532 < L_2969567533)) break Label11;
            child_3019953781 = parentInNodeList_3019953543.parent.children[chckIndx(i_2969567532, 0, (parentInNodeList_3019953543.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3019953777 && (child_3019953781 == parentInNodeList_3019953543))) {
              break Label9;
              }
              
              if (((!((child_3019953781.kind == 4)) && !((child_3019953781.kind == 5))) && !((child_3019953781.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym549_3019953800 = computeSymbol_3019919344(ctx_3019899470, child_3019953781, true);
                if (!isSome_3087009356(oHEX60gensym549_3019953800)) Temporary13 = false; else {                  var symbol_3019953846 = get_3087009376(oHEX60gensym549_3019953800);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019953846.id, symbol_3019953846);
              }
              
            };
            i_2969567532 = addInt(i_2969567532, 1);
            if (!(((parentInNodeList_3019953543.parent.children).length == L_2969567533))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym550_3019953918 = findWithParentRec_3003123589(node_3019899471, 11);
      if (!isSome_3003123546(oHEX60gensym550_3019953918)) Temporary14 = false; else {        var parentInFunctionDef_3019953964 = get_3003123566(oHEX60gensym550_3019953918);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3019953965 = parentInFunctionDef_3019953964.parent;
    if ((0 < len_3003121752(functionDefinition_3019953965))) {
    var params_3019953966 = HEX5BHEX5D_3003121748(functionDefinition_3019953965, 0);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(params_3019953966), -1);
    Label15: {
      var param_3019953970 = null;
      var i_2969567536 = 0;
      var L_2969567537 = (params_3019953966.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2969567536 < L_2969567537)) break Label17;
            param_3019953970 = params_3019953966.children[chckIndx(i_2969567536, 0, (params_3019953966.children).length - 1)];
            recordDependency_3019906144(ctx_3019899470, getItem_3019906357(param_3019953970), -1);
              var oHEX60gensym552_3019953973 = computeSymbol_3019919344(ctx_3019899470, param_3019953970, true);
              if (!isSome_3087009356(oHEX60gensym552_3019953973)) Temporary18 = false; else {                var symbol_3019954019 = get_3087009376(oHEX60gensym552_3019953973);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3019953618(result_3019953413, param_3019953970.id, symbol_3019954019);
            }
            
            i_2969567536 = addInt(i_2969567536, 1);
            if (!(((params_3019953966.children).length == L_2969567537))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3019954089 = base_3003121758(node_3019899471);
    recordDependency_3019906144(ctx_3019899470, getItem_3019906357(root_3019954089), -1);
    Label19: {
      var child_3019954093 = null;
      var i_2969567541 = 0;
      var L_2969567542 = (root_3019954089.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969567541 < L_2969567542)) break Label21;
            child_3019954093 = root_3019954089.children[chckIndx(i_2969567541, 0, (root_3019954089.children).length - 1)];
            Label22: {
              if (((!((child_3019954093.kind == 4)) && !((child_3019954093.kind == 5))) && !((child_3019954093.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym556_3019954108 = computeSymbol_3019919344(ctx_3019899470, child_3019954093, true);
                if (!isSome_3087009356(oHEX60gensym556_3019954108)) Temporary23 = false; else {                  var symbol_3019954154 = get_3087009376(oHEX60gensym556_3019954108);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954154.id, symbol_3019954154);
              }
              
            };
            i_2969567541 = addInt(i_2969567541, 1);
            if (!(((root_3019954089.children).length == L_2969567542))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3019954647 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3019954648 = null;
      var L_2969567549 = len_3019954306(ctx_3019899470.globalScope);
      Label25: {
        var h_2969567551 = 0;
        var colontmp__2969567552 = 0;
        colontmp__2969567552 = (ctx_3019899470.globalScope.data).length - 1;
        var res_2969567553 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2969567553 <= colontmp__2969567552)) break Label27;
              h_2969567551 = res_2969567553;
              if (isFilled_1308622880(ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field0)) {
              var colontmp__2969567556 = nimCopy(null, {Field0: nimCopy(null, ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_3019899470.globalScope.data[chckIndx(h_2969567551, 0, (ctx_3019899470.globalScope.data).length - 1)].Field2}, NTI3019931331);
              key_3019954647 = nimCopy(key_3019954647, colontmp__2969567556["Field0"], NTI2046820355);
              symbol_3019954648 = colontmp__2969567556["Field1"];
              recordDependency_3019906144(ctx_3019899470, getItem_3019907143(symbol_3019954648), -1);
              HEX5BHEX5DHEX3D_3019953618(result_3019953413, symbol_3019954648.id, symbol_3019954648);
              if (!((len_3019954306(ctx_3019899470.globalScope) == L_2969567549))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567553 = addInt(res_2969567553, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym542_3019953415 && false)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3019905598(result_3019953413) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym542_3019953415) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }

  return result_3019953413;

}

function HEX5BHEX5DHEX3D_3019900821(t_3019900824, key_3019900825, val_3019900826) {
    t_3019900824.set(mapKeyJs_3019899778(key_3019900825), val_3019900826);

  
}

function fingerprint_3087009003(symbols_3087009011) {
  var result_3087009012 = [[]];

    result_3087009012[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009327 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009328 = null;
      var L_2969567564 = len_3087009065(symbols_3087009011);
      Label2: {
        var h_2969567566 = 0;
        var colontmp__2969567567 = 0;
        colontmp__2969567567 = (symbols_3087009011.data).length - 1;
        var res_2969567568 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969567568 <= colontmp__2969567567)) break Label4;
              h_2969567566 = res_2969567568;
              if (isFilled_1308622880(symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field0)) {
              var colontmp__2969567571 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3087009011.data[chckIndx(h_2969567566, 0, (symbols_3087009011.data).length - 1)].Field2}, NTI3087008732);
              key_3087009327 = nimCopy(key_3087009327, colontmp__2969567571["Field0"], NTI2046820355);
              value_3087009328 = colontmp__2969567571["Field1"];
              add_3087008402(result_3087009012, 0, fingerprint_3087008948(value_3087009328));
              if (!((len_3087009065(symbols_3087009011) == L_2969567564))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969567568 = addInt(res_2969567568, 1);
            }
        };
      };
    };

  return result_3087009012[0];

}

function init_3019900920(result_3019900923, result_3019900923_Idx, capacity_3019900924) {
    result_3019900923[result_3019900923_Idx] = (new Map());

  
}

function getValidationKey_3019925421(ctxHEX60gensym111_3019925422, itemIdHEX60gensym111_3019925423) {
  var result_3019925424 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2969567586 = nimCopy(null, itemIdHEX60gensym111_3019925423, NTI3036676201);
    var colontmp__2969567587 = 4;
    result_3019925424 = nimCopy(result_3019925424, {Field0: nimCopy(null, colontmp__2969567586, NTI3036676201), Field1: colontmp__2969567587}, NTI3036676204);
    break BeforeRet;
  };

  return result_3019925424;

}

function contains_3019925510(t_3019925513, key_3019925514) {
  var result_3019925515 = false;

    result_3019925515 = t_3019925513.has(mapKeyJs_3019899778(key_3019925514));

  return result_3019925515;

}

function HEX5BHEX5D_3019925604(t_3019925607, key_3019925608) {
  var result_3019925609 = false;

    result_3019925609 = t_3019925607.get(mapKeyJs_3019899778(key_3019925608));

  return result_3019925609;

}

function computeValidation_3019925643(ctxHEX60gensym113_3019925644, inputHEX60gensym113_3019925645, recordDependencyHEX60gensym113_3019925646) {
    var Temporary3;
    var Temporary5;

  var result_3019925647 = false;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym113_3019925728 = getItem_3019906357(inputHEX60gensym113_3019925645);
    var keyHEX60gensym113_3019925729 = {Field0: nimCopy(null, itemHEX60gensym113_3019925728, NTI3036676201), Field1: 4};
    if (recordDependencyHEX60gensym113_3019925646) {
    recordDependency_3019906144(ctxHEX60gensym113_3019925644, itemHEX60gensym113_3019925728, 4);
    }
    
    var colorHEX60gensym113_3019925730 = nodeColor_3036678426(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, 0);
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,105,100,97,116,105,111,110], [32], reprEnum(colorHEX60gensym113_3019925730, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym113_3019925728));
    }
    
    if ((colorHEX60gensym113_3019925730 == 2)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    }
    else {
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym113_3019925730 == 0)) {
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    if (false) {
    markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729, true) == 0)) {
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym113_3019925644.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
      if (false) {
      markRed_3036679306(ctxHEX60gensym113_3019925644.depGraph, keyHEX60gensym113_3019925729, []);
      }
      
      if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
      }
      
      if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym113_3019925730 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,51,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym113_3019925644.enableLogging && contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], nimBoolToStr(HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645)));
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    force_3019908046(ctxHEX60gensym113_3019925644, keyHEX60gensym113_3019925729);
    }
    
    if (!(contains_3019925510(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3003123671(inputHEX60gensym113_3019925645) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019925647 = HEX5BHEX5D_3019925604(ctxHEX60gensym113_3019925644.queryCacheValidation, inputHEX60gensym113_3019925645);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym113_3019925644.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym113_3019925644.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym113_3019925644.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym113_3019925644.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019925647;

}

function computeValidationImpl_3019899474(ctx_3019899475, node_3019899476) {
      var Temporary4;
        var Temporary12;
            var Temporary20;

  var result_3019940051 = false;

  BeforeRet: {
    var logQueryHEX60gensym344_3019940053 = (ctx_3019899475.enableLogging || ctx_3019899475.enableQueryLogging);
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym344_3019940053) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,105,100,97,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3003123671(node_3019899476) || []));
    }
    
    try {
    var key_3019940064 = nimCopy(null, getValidationKey_3019925421(ctx_3019899475, getItem_3019906357(node_3019899476)), NTI3036676204);
    if (contains_3019940149(ctx_3019899475.diagnosticsPerQuery, key_3019940064)) {
    Label3: {
      var idHEX60gensym345_3019940729 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2969567573 = [];
      colontmp__2969567573 = (Temporary4 = HEX5BHEX5D_3019940594(ctx_3019899475.diagnosticsPerQuery, key_3019940064), Temporary4)[0][Temporary4[1]];
      var i_2969567574 = 0;
      var L_2969567575 = (colontmp__2969567573).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567574 < L_2969567575)) break Label6;
            idHEX60gensym345_3019940729 = colontmp__2969567573[chckIndx(i_2969567574, 0, (colontmp__2969567573).length - 1)];
            del_3019941318(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019940729).queries, key_3019940064);
            i_2969567574 = addInt(i_2969567574, 1);
            if (!(((colontmp__2969567573).length == L_2969567575))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnosticsHEX60gensym345_3019942432 = [];
    var idsHEX60gensym345_3019942437 = [];
    try {
    result_3019940051 = true;
    var typ_3019948810 = computeType_3019913434(ctx_3019899475, node_3019899476, true);
    if ((typ_3019948810.kind == 0)) {
    result_3019940051 = false;
    }
    
    Label8: {
      Label9: {
        var expr_3019948816 = node_3019899476;
        var pos_3019948817 = 0;
        var _ = pos_3019948817;
        if ((expr_3019948816.kind == 11)) {
        if (!((typ_3019948810.kind == 4))) {
        var Temporary10 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary10);;
        var fmtRes_3019948836 = [mnewString(0)];
        fmtRes_3019948836[0].push.apply(fmtRes_3019948836[0], [84,121,112,101,32,111,102,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,32,116,121,112,101,44,32,98,117,116,32]);;
        formatValue_3019948837(fmtRes_3019948836, 0, typ_3019948810, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948836[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!((len_3003121752(node_3019899476) == 3))) {
        var Temporary11 = nimCopy(null, node_3019899476.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary11);;
        var fmtRes_3019948854 = [mnewString(0)];
        fmtRes_3019948854[0].push.apply(fmtRes_3019948854[0], [70,117,110,99,116,105,111,110,32,110,111,100,101,32,109,117,115,116,32,104,97,118,101,32,51,32,99,104,105,108,100,114,101,110,44,32,98,117,116,32,104,97,115,32]);;
        formatValue_2701131945(fmtRes_3019948854, 0, len_3003121752(node_3019899476), []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948854[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        var Temporary12 = typ_3019948810;
        if (ConstSet126[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007747)); }
        var returnType_3019948864 = Temporary12.returnType;
        var body_3019948865 = HEX5BHEX5D_3003121748(node_3019899476, 2);
        var bodyType_3019948866 = computeType_3019913434(ctx_3019899475, body_3019948865, true);
        if ((bodyType_3019948866.kind == 0)) {
        result_3019940051 = false;
        break BeforeRet;
        }
        
        if (!(HEX3DHEX3D_3087008313(returnType_3019948864, bodyType_3019948866))) {
        var Temporary13 = nimCopy(null, body_3019948865.id, NTI2046820355);
        idsHEX60gensym345_3019942437.push(Temporary13);;
        var fmtRes_3019948879 = [mnewString(0)];
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [70,117,110,99,116,105,111,110,32,114,101,116,117,114,110,32,116,121,112,101,32,105,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, returnType_3019948864, []);
        fmtRes_3019948879[0].push.apply(fmtRes_3019948879[0], [44,32,98,117,116,32,98,111,100,121,32,114,101,116,117,114,110,115,32]);;
        formatValue_3019948837(fmtRes_3019948879, 0, bodyType_3019948866, []);
        diagnosticsHEX60gensym345_3019942432.push({message: nimCopy(null, fmtRes_3019948879[0], NTI33554449)});;
        result_3019940051 = false;
        break BeforeRet;
        }
        
        }
        else {
        }
        
      };
    };
    if (result_3019940051) {
    Label14: {
      var c_3019948897 = null;
      var i_2969567583 = 0;
      var L_2969567584 = (node_3019899476.children).length;
      Label15: {
          Label16: while (true) {
          if (!(i_2969567583 < L_2969567584)) break Label16;
            c_3019948897 = node_3019899476.children[chckIndx(i_2969567583, 0, (node_3019899476.children).length - 1)];
            result_3019940051 = (result_3019940051 && computeValidation_3019925643(ctx_3019899475, c_3019948897, true));
            i_2969567583 = addInt(i_2969567583, 1);
            if (!(((node_3019899476.children).length == L_2969567584))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    } finally {
    if ((0 < (diagnosticsHEX60gensym345_3019942432).length)) {
    HEX5BHEX5DHEX3D_3019942505(ctx_3019899475.diagnosticsPerQuery, key_3019940064, idsHEX60gensym345_3019942437);
    Label17: {
      var iHEX60gensym345_3019944089 = 0;
      var colontmp__2969567578 = 0;
      colontmp__2969567578 = (idsHEX60gensym345_3019942437).length - 1;
      var res_2969567579 = 0;
      Label18: {
          Label19: while (true) {
          if (!(res_2969567579 <= colontmp__2969567578)) break Label19;
            iHEX60gensym345_3019944089 = res_2969567579;
            var idHEX60gensym345_3019944090 = nimCopy(null, idsHEX60gensym345_3019942437[chckIndx(iHEX60gensym345_3019944089, 0, (idsHEX60gensym345_3019942437).length - 1)], NTI2046820355);
            var diagHEX60gensym345_3019944091 = nimCopy(null, diagnosticsHEX60gensym345_3019942432[chckIndx(iHEX60gensym345_3019944089, 0, (diagnosticsHEX60gensym345_3019942432).length - 1)], NTI3019898883);
            if (!(contains_3019944168(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090))) {
            HEX5BHEX5DHEX3D_3019944250(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3019945984(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064))) {
            HEX5BHEX5DHEX3D_3019946155(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064, []);
            }
            
            var Temporary21 = nimCopy(null, diagHEX60gensym345_3019944091, NTI3019898883);
            (Temporary20 = HEX5BHEX5D_3019947888(HEX5BHEX5D_3019940810(ctx_3019899475.diagnosticsPerNode, idHEX60gensym345_3019944090).queries, key_3019940064), Temporary20)[0][Temporary20[1]].push(Temporary21);;
            res_2969567579 = addInt(res_2969567579, 1);
          }
      };
    };
    }
    else {
    del_3019948061(ctx_3019899475.diagnosticsPerQuery, key_3019940064);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym344_3019940053 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],nimBoolToStr(result_3019940051) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym344_3019940053) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940051;

}

function HEX5BHEX5DHEX3D_3019901168(t_3019901171, key_3019901172, val_3019901173) {
    t_3019901171.set(mapKeyJs_3019899778(key_3019901172), val_3019901173);

  
}

function fingerprint_3087010815(val_3087010816) {
  var result_3087010817 = [];

    result_3087010817 = nimCopy(null, [val_3087010816], NTI3087008194);

  return result_3087010817;

}

function init_3019901276(result_3019901279, result_3019901279_Idx, capacity_3019901280) {
    result_3019901279[result_3019901279_Idx] = (new Map());

  
}

function contains_3019901364(t_3019901367, key_3019901368) {
  var result_3019901369 = false;

    result_3019901369 = t_3019901367.has(mapKeyJs_3019899588(key_3019901368));

  return result_3019901369;

}

function HEX5BHEX5D_3019901463(t_3019901466, key_3019901467) {
  var result_3019901468 = null;

    result_3019901468 = t_3019901466.get(mapKeyJs_3019899588(key_3019901467));

  return result_3019901468;

}

function computeSymbolTypeImpl_3019899477(ctx_3019899478, symbol_3019899479) {
      var Temporary3;
      var Temporary4;

  var result_3019940009 = null;

  BeforeRet: {
    var logQueryHEX60gensym342_3019940011 = (ctx_3019899478.enableLogging || ctx_3019899478.enableQueryLogging);
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym342_3019940011) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899479) || []));
    }
    
    try {
    switch (symbol_3019899479.kind) {
    case 0:
      var Temporary3 = symbol_3019899479;
      if (ConstSet127[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940009 = computeType_3019913434(ctx_3019899478, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899479;
      if (ConstSet128[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940009 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym342_3019940011 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008191(result_3019940009) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym342_3019940011) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940009;

}

function HEX5BHEX5DHEX3D_3019901542(t_3019901545, key_3019901546, val_3019901547) {
    t_3019901545.set(mapKeyJs_3019901554(key_3019901546), val_3019901547);

  
}

function init_3019901652(result_3019901655, result_3019901655_Idx, capacity_3019901656) {
    result_3019901655[result_3019901655_Idx] = (new Map());

  
}

function computeSymbolValueImpl_3019899480(ctx_3019899481, symbol_3019899482) {
      var Temporary3;
      var Temporary4;

  var result_3019940025 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym343_3019940027 = (ctx_3019899481.enableLogging || ctx_3019899481.enableQueryLogging);
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym343_3019940027) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008915(symbol_3019899482) || []));
    }
    
    try {
    switch (symbol_3019899482.kind) {
    case 0:
      var Temporary3 = symbol_3019899482;
      if (ConstSet129[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, computeValue_3019916562(ctx_3019899481, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3019899482;
      if (ConstSet130[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3019940025 = nimCopy(result_3019940025, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym343_3019940027 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019940025) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym343_3019940027) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019940025;

}

function HEX5BHEX5DHEX3D_3019901900(t_3019901903, key_3019901904, val_3019901905) {
    t_3019901903.set(mapKeyJs_3019901554(key_3019901904), val_3019901905);

  
}

function init_3019901999(result_3019902002, result_3019902002_Idx, capacity_3019902003) {
    result_3019902002[result_3019902002_Idx] = (new Map());

  
}

function contains_3019902087(t_3019902090, key_3019902091) {
  var result_3019902092 = false;

    result_3019902092 = t_3019902090.has(mapKeyJs_3019899588(key_3019902091));

  return result_3019902092;

}

function HEX5BHEX5D_3019902186(t_3019902189, key_3019902190) {
  var result_3019902191 = null;

    result_3019902191 = t_3019902189.get(mapKeyJs_3019899588(key_3019902190));

  return result_3019902191;

}

function initTable_3154118844(initialSize_3154118847) {
  var result_3154118848 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3154118850 = slotsNeeded_1308622891(chckRange(initialSize_3154118847, 0, 2147483647));
    result_3154118848.counter = 0;
    result_3154118848.data = new Array(chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3154118850, 0, 2147483647) ; ++i) { result_3154118848.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3154118848;

}

function rawGet_3154116773(t_3154116776, key_3154116777, hc_3154116778, hc_3154116778_Idx) {
  var result_3154116779 = 0;

  BeforeRet: {
    hc_3154116778[hc_3154116778_Idx] = hash_2046820630(key_3154116777);
    if ((hc_3154116778[hc_3154116778_Idx] == 0)) {
    hc_3154116778[hc_3154116778_Idx] = 314159265;
    }
    
    if (((t_3154116776.data).length == 0)) {
    result_3154116779 = -1;
    break BeforeRet;
    }
    
    var h_3154116830 = (hc_3154116778[hc_3154116778_Idx] & (t_3154116776.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0)) break Label2;
          if (((t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field0 == hc_3154116778[hc_3154116778_Idx]) && HEX3DHEX3D_2046820626(t_3154116776.data[chckIndx(h_3154116830, 0, (t_3154116776.data).length - 1)].Field1, key_3154116777))) {
          result_3154116779 = h_3154116830;
          break BeforeRet;
          }
          
          h_3154116830 = nextTry_1308622883(h_3154116830, (t_3154116776.data).length - 1);
        }
    };
    result_3154116779 = subInt(-1, h_3154116830);
  };

  return result_3154116779;

}

function mustRehash_3154117118(t_3154117120) {
  var result_3154117121 = false;

    if (!((t_3154117120.counter < (t_3154117120.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3154117121 = ((mulInt((t_3154117120.data).length, 2) < mulInt(t_3154117120.counter, 3)) || (subInt((t_3154117120.data).length, t_3154117120.counter) < 4));

  return result_3154117121;

}

function rawInsert_3154117567(t_3154117571, data_3154117572, data_3154117572_Idx, key_3154117573, val_3154117574, hc_3154117575, h_3154117576) {
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field1, key_3154117573, NTI2046820355);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2 = nimCopy(data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field2, val_3154117574, NTI3087007751);
    data_3154117572[data_3154117572_Idx][chckIndx(h_3154117576, 0, (data_3154117572[data_3154117572_Idx]).length - 1)].Field0 = hc_3154117575;

  
}

function enlarge_3154117273(t_3154117276) {
    var n_3154117279 = [];
    n_3154117279 = new Array(chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3154117276.data).length, 2), 0, 2147483647) ; ++i) { n_3154117279[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3154117276.data; t_3154117276.data = n_3154117279; n_3154117279 = Temporary1;    Label2: {
      var i_3154117343 = 0;
      var colontmp__2969567596 = 0;
      colontmp__2969567596 = (n_3154117279).length - 1;
      var res_2969567597 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567597 <= colontmp__2969567596)) break Label4;
            i_3154117343 = res_2969567597;
            var eh_3154117397 = n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field0;
            if (isFilled_1308622880(eh_3154117397)) {
            var j_3154117401 = (eh_3154117397 & (t_3154117276.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3154117276.data[chckIndx(j_3154117401, 0, (t_3154117276.data).length - 1)].Field0)) break Label6;
                  j_3154117401 = nextTry_1308622883(j_3154117401, (t_3154117276.data).length - 1);
                }
            };
            rawInsert_3154117567(t_3154117276, t_3154117276, "data", n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field1, n_3154117279[chckIndx(i_3154117343, 0, (n_3154117279).length - 1)].Field2, eh_3154117397, j_3154117401);
            }
            
            res_2969567597 = addInt(res_2969567597, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3154117736(t_3154117739, key_3154117740, hc_3154117741) {
  var result_3154117742 = 0;

  BeforeRet: {
    if (((t_3154117739.data).length == 0)) {
    result_3154117742 = -1;
    break BeforeRet;
    }
    
    var h_3154117793 = (hc_3154117741 & (t_3154117739.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0)) break Label2;
          if (((t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field0 == hc_3154117741) && HEX3DHEX3D_2046820626(t_3154117739.data[chckIndx(h_3154117793, 0, (t_3154117739.data).length - 1)].Field1, key_3154117740))) {
          result_3154117742 = h_3154117793;
          break BeforeRet;
          }
          
          h_3154117793 = nextTry_1308622883(h_3154117793, (t_3154117739.data).length - 1);
        }
    };
    result_3154117742 = subInt(-1, h_3154117793);
  };

  return result_3154117742;

}

function HEX5BHEX5DHEX3D_3154116712(t_3154116715, key_3154116716, val_3154116717) {
    if (((t_3154116715.data).length == 0)) {
    var correctSizeHEX60gensym3_3154116767 = slotsNeeded_1308622891(32);
    t_3154116715.counter = 0;
    t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3154116767, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3154116772 = [0];
    var index_3154117011 = rawGet_3154116773(t_3154116715, key_3154116716, hc_3154116772, 0);
    if ((0 <= index_3154117011)) {
    t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2 = nimCopy(t_3154116715.data[chckIndx(index_3154117011, 0, (t_3154116715.data).length - 1)].Field2, val_3154116717, NTI3087007751);
    }
    else {
      if (((t_3154116715.data).length == 0)) {
      var correctSizeHEX60gensym8_3154117113 = slotsNeeded_1308622891(32);
      t_3154116715.counter = 0;
      t_3154116715.data = new Array(chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3154117113, 0, 2147483647) ; ++i) { t_3154116715.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3154117118(t_3154116715)) {
      enlarge_3154117273(t_3154116715);
      index_3154117011 = rawGetKnownHC_3154117736(t_3154116715, key_3154116716, hc_3154116772[0]);
      }
      
      index_3154117011 = subInt(-1, index_3154117011);
      rawInsert_3154117567(t_3154116715, t_3154116715, "data", key_3154116716, val_3154116717, hc_3154116772[0], index_3154117011);
      t_3154116715.counter = addInt(t_3154116715.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3154118174(t_3154118177, key_3154118178) {
  var result_3154118179 = false;

    var hc_3154118180 = [0];
    result_3154118179 = (0 <= rawGet_3154116773(t_3154118177, key_3154118178, hc_3154118180, 0));

  return result_3154118179;

}

function contains_3154118168(t_3154118171, key_3154118172) {
  var result_3154118173 = false;

  BeforeRet: {
    result_3154118173 = hasKey_3154118174(t_3154118171, key_3154118172);
    break BeforeRet;
  };

  return result_3154118173;

}

function HEX5BHEX5D_3154118240(t_3154118243, key_3154118244) {
  var result_3154118245 = null;

    var hcHEX60gensym22_3154118246 = [0];
    var indexHEX60gensym22_3154118253 = rawGet_3154116773(t_3154118243, key_3154118244, hcHEX60gensym22_3154118246, 0);
    if ((0 <= indexHEX60gensym22_3154118253)) {
    result_3154118245 = t_3154118243.data[chckIndx(indexHEX60gensym22_3154118253, 0, (t_3154118243.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3154118244);
    }
    

  return result_3154118245;

}

function newFunctionExecutionContext_3019907902(ctxHEX60gensym92_3019907903, dataHEX60gensym92_3019907904) {
  var result_3019907905 = null;

  BeforeRet: {
    var itemHEX60gensym92_3019907906 = getItem_3019907554(dataHEX60gensym92_3019907904);
    var keyHEX60gensym92_3019907907 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym92_3019907906, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym92_3019907903.depGraph.changed, keyHEX60gensym92_3019907907, ctxHEX60gensym92_3019907903.depGraph.revision);
    HEX5BHEX5DHEX3D_3019907734(ctxHEX60gensym92_3019907903.itemsFunctionExecutionContext, itemHEX60gensym92_3019907906, dataHEX60gensym92_3019907904);
    result_3019907905 = dataHEX60gensym92_3019907904;
    break BeforeRet;
  };

  return result_3019907905;

}

function executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, node_3154117981, variables_3154117984) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3154117985 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_3003123671(node_3154117981));
    }
    
    try {
    Label3: {
      var expr_3154117996 = node_3154117981;
      var pos_3154117997 = 0;
      var _ = pos_3154117997;
      if ((expr_3154117996.kind == 0)) {
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 7)) {
      var lastValue_3154118008 = errorValue_3087008442();
      Label4: {
        var child_3154118012 = null;
        var i_2969567602 = 0;
        var L_2969567603 = (node_3154117981.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2969567602 < L_2969567603)) break Label6;
              child_3154118012 = node_3154117981.children[chckIndx(i_2969567602, 0, (node_3154117981.children).length - 1)];
              lastValue_3154118008 = nimCopy(lastValue_3154118008, executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, child_3154118012, variables_3154117984), NTI3087007751);
              i_2969567602 = addInt(i_2969567602, 1);
              if (!(((node_3154117981.children).length == L_2969567603))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3154117985 = nimCopy(result_3154117985, lastValue_3154118008, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 3)) {
      result_3154117985 = nimCopy(result_3154117985, {kind: 2, stringValue: nimCopy(null, node_3154117981.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3154117981.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3154118021 = Temporary7;
      result_3154117985 = nimCopy(result_3154117985, {kind: 3, intValue: value_3154118021, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 9)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3154118026 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3154118026, 1) < len_3003121752(node_3154117981))) break Label10;
            try {
            var condition_3154118031 = HEX5BHEX5D_3003121748(node_3154117981, index_3154118026);
            var trueCase_3154118032 = HEX5BHEX5D_3003121748(node_3154117981, addInt(index_3154118026, 1));
            var conditionValue_3154118033 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118031, variables_3154117984);
            if ((conditionValue_3154118033.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118033.kind == 3))) {
            var fmtRes_3154118046 = [mnewString(0)];
            fmtRes_3154118046[0].push.apply(fmtRes_3154118046[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118046, 0, conditionValue_3154118033, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118046[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3154118033;
              if (ConstSet131[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3154118052 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, trueCase_3154118032, variables_3154117984);
            result_3154117985 = nimCopy(result_3154117985, trueCaseValue_3154118052, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118026 = addInt(index_3154118026, 2);
            }
          }
      };
      if (!((modInt(len_3003121752(node_3154117981), 2) == 0))) {
      var falseCaseValue_3154118053 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, last_3003121922(node_3154117981), variables_3154117984);
      result_3154117985 = nimCopy(result_3154117985, falseCaseValue_3154118053, NTI3087007751);
      break BeforeRet;
      }
      
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 10)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3154118058 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var body_3154118059 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var index_3154118060 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3154118081 = get_1191185108(fec_3154117980.maxLoopIterations, 1000);
            if ((maxLoopIterations_3154118081 < index_3154118060)) {
            var fmtRes_3154118086 = [mnewString(0)];
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2701131945(fmtRes_3154118086, 0, maxLoopIterations_3154118081, []);
            fmtRes_3154118086[0].push.apply(fmtRes_3154118086[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008590(fmtRes_3154118086, 0, node_3154117981, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118086[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3154118097 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, condition_3154118058, variables_3154117984);
            if ((conditionValue_3154118097.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3154118097.kind == 3))) {
            var fmtRes_3154118110 = [mnewString(0)];
            fmtRes_3154118110[0].push.apply(fmtRes_3154118110[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3154118047(fmtRes_3154118110, 0, conditionValue_3154118097, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118110[0], NTI33554449)]);
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3154118097;
              if (ConstSet132[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3154118116 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, body_3154118059, variables_3154117984);
            if ((bodyValue_3154118116.kind == 0)) {
            result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3154118060 = addInt(index_3154118060, 1);
            }
          }
      };
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 1)) {
      var id_3154118125 = nimCopy(null, node_3154117981.reff, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118125)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118125), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3154118321 = computeSymbol_3019919344(ctx_3154117979, node_3154117981, true);
        if (!isSome_3087009356(oHEX60gensym44_3154118321)) Temporary17 = false; else {          var sym_3154118344 = get_3087009376(oHEX60gensym44_3154118321);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3154118345 = computeSymbolValue_3019931153(ctx_3154117979, sym_3154118344, true);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, id_3154118125, value_3154118345);
      result_3154117985 = nimCopy(result_3154117985, value_3154118345, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3154118396 = [mnewString(0)];
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008590(fmtRes_3154118396, 0, node_3154117981, []);
      fmtRes_3154118396[0].push.apply(fmtRes_3154118396[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118396[0], NTI33554449)]);
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 8)) {
      var function_3154118406 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, HEX5BHEX5D_3003121748(node_3154117981, 0), variables_3154117984);
      switch (function_3154118406.kind) {
      case 0:
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3154118411 = [];
        Label18: {
          var arg_3154118448 = null;
          var colontmp__2969567608 = [];
          colontmp__2969567608 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567609 = 0;
          var L_2969567610 = (colontmp__2969567608).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2969567609 < L_2969567610)) break Label20;
                arg_3154118448 = colontmp__2969567608[chckIndx(i_2969567609, 0, (colontmp__2969567608).length - 1)];
                var value_3154118449 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118448, variables_3154117984);
                if ((value_3154118449.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3154118449, NTI3087007751);
                args_3154118411.push(Temporary21);;
                i_2969567609 = addInt(i_2969567609, 1);
                if (!(((colontmp__2969567608).length == L_2969567610))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3154118406;
        if (ConstSet133[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3154117985 = nimCopy(result_3154117985, Temporary22.impl(args_3154118411), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3154118462 = [];
        Label23: {
          var arg_3154118481 = null;
          var colontmp__2969567613 = [];
          colontmp__2969567613 = HEX5BHEX5D_3154118421(node_3154117981.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2969567614 = 0;
          var L_2969567615 = (colontmp__2969567613).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2969567614 < L_2969567615)) break Label25;
                arg_3154118481 = colontmp__2969567613[chckIndx(i_2969567614, 0, (colontmp__2969567613).length - 1)];
                var value_3154118482 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, arg_3154118481, variables_3154117984);
                if ((value_3154118482.kind == 0)) {
                result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3154118482, NTI3087007751);
                args_3154118462.push(Temporary26);;
                i_2969567614 = addInt(i_2969567614, 1);
                if (!(((colontmp__2969567613).length == L_2969567615))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3154118406;
        if (ConstSet134[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3154118491 = newFunctionExecutionContext_3019907902(ctx_3154117979, {node: Temporary27.node, arguments: nimCopy(null, args_3154118462, NTI3154117637), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3154117985 = nimCopy(result_3154117985, computeFunctionExecution_3019933908(ctx_3154117979, fec_3154118491), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3154117996.kind == 5)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118496 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118497 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118496, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118497);
      result_3154117985 = nimCopy(result_3154117985, value_3154118497, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 6)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3154118548 = HEX5BHEX5D_3003121748(node_3154117981, 1);
      var value_3154118549 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118548, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, node_3154117981.id, value_3154118549);
      result_3154117985 = nimCopy(result_3154117985, value_3154118549, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3154117996.kind == 4)) {
      var id_3154118600 = nimCopy(null, node_3154117981.id, NTI2046820355);
      if (contains_3154118168(variables_3154117984, id_3154118600)) {
      result_3154117985 = nimCopy(result_3154117985, HEX5BHEX5D_3154118240(variables_3154117984, id_3154118600), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3154117996.kind == 13)) {
      if ((len_3003121752(node_3154117981) < 2)) {
      result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3154118710 = HEX5BHEX5D_3003121748(node_3154117981, 0);
      var valueNode_3154118711 = HEX5BHEX5D_3003121748(node_3154117981, 1);
        var oHEX60gensym55_3154118714 = computeSymbol_3019919344(ctx_3154117979, targetNode_3154118710, true);
        if (!isSome_3087009356(oHEX60gensym55_3154118714)) Temporary28 = false; else {          var sym_3154118737 = get_3087009376(oHEX60gensym55_3154118714);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3154118738 = executeNodeRec_3154117978(ctx_3154117979, fec_3154117980, valueNode_3154118711, variables_3154117984);
      HEX5BHEX5DHEX3D_3154116712(variables_3154117984, sym_3154118737.id, value_3154118738);
      result_3154117985 = nimCopy(result_3154117985, voidValue_3087008471(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3154118789 = [mnewString(0)];
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, node_3154117981, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008590(fmtRes_3154118789, 0, targetNode_3154118710, []);
        fmtRes_3154118789[0].push.apply(fmtRes_3154118789[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118789[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3154118804 = [mnewString(0)];
        fmtRes_3154118804[0].push.apply(fmtRes_3154118804[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008590(fmtRes_3154118804, 0, node_3154117981, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118804[0], NTI33554449)]);
        result_3154117985 = nimCopy(result_3154117985, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [45,62,32], HEX24_3087008498(result_3154117985));
    }
    
    }
    } finally {
    if (ctx_3154117979.enableExecutionLogging) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3154117985;

}

function computeFunctionExecutionImpl2_3154118839(ctx_3154118840, fec_3154118841) {
      var Temporary4;
        var Temporary5;

  var result_3154118842 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3154118843 = HEX5BHEX5D_3003121748(fec_3154118841.node, 2);
    var variables_3154118855 = [initTable_3154118844(32)];
    var params_3154118856 = HEX5BHEX5D_3003121748(fec_3154118841.node, 0);
    Label1: {
      var i_3154118898 = 0;
      var arg_3154118899 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969567590 = 0;
      var L_2969567591 = (fec_3154118841.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567590 < L_2969567591)) break Label3;
            i_3154118898 = i_2969567590;
            arg_3154118899 = nimCopy(arg_3154118899, fec_3154118841.arguments[chckIndx(i_2969567590, 0, (fec_3154118841.arguments).length - 1)], NTI3087007751);
            if ((len_3003121752(params_3154118856) <= i_3154118898)) {
            var fmtRes_3154118904 = [mnewString(0)];
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, len_3003121752(params_3154118856), []);
            fmtRes_3154118904[0].push.apply(fmtRes_3154118904[0], [44,32,103,111,116,32]);;
            formatValue_2701131945(fmtRes_3154118904, 0, (fec_3154118841.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3154118904[0], NTI33554449)]);
            result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3154118918 = HEX5BHEX5D_3003121748(params_3154118856, i_3154118898);
            HEX5BHEX5DHEX3D_3154116712(variables_3154118855[0], param_3154118918.id, arg_3154118899);
            i_2969567590 = addInt(i_2969567590, 1);
            if (!(((fec_3154118841.arguments).length == L_2969567591))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3154118965 = executeNodeRec_3154117978(ctx_3154118840, fec_3154118841, body_3154118843, variables_3154118855[0]);
    if ((bodyResult_3154118965.kind == 0)) {
    result_3154118842 = nimCopy(result_3154118842, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3154118970 = computeType_3019913434(ctx_3154118840, fec_3154118841.node, true);
      if (!(functionType_3154118970.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3154118970;
        if (ConstSet135[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3154118842 = nimCopy(result_3154118842, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3154118842 = nimCopy(result_3154118842, bodyResult_3154118965, NTI3087007751);
    break BeforeRet;
  };

  return result_3154118842;

}

function computeFunctionExecutionImpl_3019899483(ctx_3019899484, fec_3019899485) {
  var result_3019937316 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym319_3019937318 = (ctx_3019899484.enableLogging || ctx_3019899484.enableQueryLogging);
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym319_3019937318) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008582(fec_3019899485) || []));
    }
    
    try {
    result_3019937316 = nimCopy(result_3019937316, computeFunctionExecutionImpl2_3154118839(ctx_3019899484, fec_3019899485), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym319_3019937318 && true)) {
    rawEcho((repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008498(result_3019937316) || []));
    }
    
    }
    } finally {
    if (logQueryHEX60gensym319_3019937318) {
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], 1);
    }
    
    }
  };

  return result_3019937316;

}

function HEX5BHEX5DHEX3D_3019902274(t_3019902277, key_3019902278, val_3019902279) {
    t_3019902277.set(mapKeyJs_3019902286(key_3019902278), val_3019902279);

  
}

function init_3019902388(result_3019902391, result_3019902391_Idx, capacity_3019902392) {
    result_3019902391[result_3019902391_Idx] = (new Map());

  
}

function contains_3019902476(t_3019902479, key_3019902480) {
  var result_3019902481 = false;

    result_3019902481 = t_3019902479.has(mapKeyJs_3019899588(key_3019902480));

  return result_3019902481;

}

function HEX5BHEX5D_3019902575(t_3019902578, key_3019902579) {
  var result_3019902580 = null;

    result_3019902580 = t_3019902578.get(mapKeyJs_3019899588(key_3019902579));

  return result_3019902580;

}

function dependOnCurrentRevision_3019906168(ctxHEX60gensym78_3019906169) {
    if ((0 < (ctxHEX60gensym78_3019906169.dependencyStack).length)) {
    ctxHEX60gensym78_3019906169.dependencyStack[chckIndx((ctxHEX60gensym78_3019906169.dependencyStack).length - 1, 0, (ctxHEX60gensym78_3019906169.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3036676217, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3137342870(initialSize_3137342873) {
  var result_3137342874 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3137342876 = slotsNeeded_1308622891(chckRange(initialSize_3137342873, 0, 2147483647));
    result_3137342874.counter = 0;
    result_3137342874.data = new Array(chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3137342876, 0, 2147483647) ; ++i) { result_3137342874.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3137342874;

}

function rawGet_3087010450(t_3087010453, key_3087010454, hc_3087010455, hc_3087010455_Idx) {
  var result_3087010456 = 0;

  BeforeRet: {
    hc_3087010455[hc_3087010455_Idx] = hash_2046820630(key_3087010454);
    if ((hc_3087010455[hc_3087010455_Idx] == 0)) {
    hc_3087010455[hc_3087010455_Idx] = 314159265;
    }
    
    if (((t_3087010453.data).length == 0)) {
    result_3087010456 = -1;
    break BeforeRet;
    }
    
    var h_3087010508 = (hc_3087010455[hc_3087010455_Idx] & (t_3087010453.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0)) break Label2;
          if (((t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field0 == hc_3087010455[hc_3087010455_Idx]) && HEX3DHEX3D_2046820626(t_3087010453.data[chckIndx(h_3087010508, 0, (t_3087010453.data).length - 1)].Field1, key_3087010454))) {
          result_3087010456 = h_3087010508;
          break BeforeRet;
          }
          
          h_3087010508 = nextTry_1308622883(h_3087010508, (t_3087010453.data).length - 1);
        }
    };
    result_3087010456 = subInt(-1, h_3087010508);
  };

  return result_3087010456;

}

function hasKey_3087010443(t_3087010446, key_3087010447) {
  var result_3087010448 = false;

    var hc_3087010449 = [0];
    result_3087010448 = (0 <= rawGet_3087010450(t_3087010446, key_3087010447, hc_3087010449, 0));

  return result_3087010448;

}

function contains_3137339757(t_3137339760, key_3137339761) {
  var result_3137339762 = false;

  BeforeRet: {
    result_3137339762 = hasKey_3087010443(t_3137339760, key_3137339761);
    break BeforeRet;
  };

  return result_3137339762;

}

function map_3087009435(s_3087009438, op_3087009440) {
  var result_3087009441 = [];

    result_3087009441 = new Array(chckRange((s_3087009438).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009438).length, 0, 2147483647) ; ++i) { result_3087009441[i] = null; }    Label1: {
      var i_3087009457 = 0;
      var colontmp__2969567640 = 0;
      colontmp__2969567640 = (s_3087009438).length;
      var i_2969567641 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567641 < colontmp__2969567640)) break Label3;
            i_3087009457 = i_2969567641;
            result_3087009441[chckIndx(i_3087009457, 0, (result_3087009441).length - 1)] = op_3087009440(s_3087009438[chckIndx(i_3087009457, 0, (s_3087009438).length - 1)]);
            i_2969567641 = addInt(i_2969567641, 1);
          }
      };
    };

  return result_3087009441;

}

function clone_3087009416(node_3087009417) {
    
function HEX3Aanonymous_3087009422(c_3087009430) {
      var result_3087009433 = null;

        result_3087009433 = clone_3087009416(c_3087009430);

      return result_3087009433;

    }

  var result_3087009418 = null;

    result_3087009418 = ({mhash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false});
    result_3087009418.id = nimCopy(result_3087009418.id, newId_2046820597(), NTI2046820355);
    result_3087009418.parent = node_3087009417.parent;
    result_3087009418.node = node_3087009417.node;
    result_3087009418.text = nimCopy(null, node_3087009417.text, NTI33554449);
    result_3087009418.bounds = nimCopy(result_3087009418.bounds, node_3087009417.bounds, NTI2147483653);
    result_3087009418.indent = node_3087009417.indent;
    result_3087009418.font = nimCopy(null, node_3087009417.font, NTI33554449);
    result_3087009418.fontSize = node_3087009417.fontSize;
    result_3087009418.render = node_3087009417.render;
    result_3087009418.widgetTemplate = node_3087009417.widgetTemplate;
    result_3087009418.cloneWidget = node_3087009417.cloneWidget;
    result_3087009418.children = nimCopy(null, map_3087009435(node_3087009417.children, HEX3Aanonymous_3087009422), NTI3087009002);
    Label1: {
      var c_3087009461 = null;
      var i_2969567636 = 0;
      var L_2969567637 = (result_3087009418.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567636 < L_2969567637)) break Label3;
            c_3087009461 = result_3087009418.children[chckIndx(i_2969567636, 0, (result_3087009418.children).length - 1)];
            c_3087009461.parent = result_3087009418;
            i_2969567636 = addInt(i_2969567636, 1);
            if (!(((result_3087009418.children).length == L_2969567637))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009418;

}

function HEX5BHEX5D_3137339821(t_3137339824, key_3137339825) {
  var result_3137339826 = null;
  var result_3137339826_Idx = 0;

    var hcHEX60gensym22_3137339827 = [0];
    var indexHEX60gensym22_3137339834 = rawGet_3087010450(t_3137339824, key_3137339825, hcHEX60gensym22_3137339827, 0);
    if ((0 <= indexHEX60gensym22_3137339834)) {
    result_3137339826 = t_3137339824.data[chckIndx(indexHEX60gensym22_3137339834, 0, (t_3137339824.data).length - 1)]; result_3137339826_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123480(key_3137339825);
    }
    

  return [result_3137339826, result_3137339826_Idx];

}

function rawGet_3137340002(t_3137340005, key_3137340006, hc_3137340007, hc_3137340007_Idx) {
  var result_3137340008 = 0;

  BeforeRet: {
    hc_3137340007[hc_3137340007_Idx] = hash_2046820630(key_3137340006);
    if ((hc_3137340007[hc_3137340007_Idx] == 0)) {
    hc_3137340007[hc_3137340007_Idx] = 314159265;
    }
    
    if (((t_3137340005.data).length == 0)) {
    result_3137340008 = -1;
    break BeforeRet;
    }
    
    var h_3137340059 = (hc_3137340007[hc_3137340007_Idx] & (t_3137340005.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0)) break Label2;
          if (((t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field0 == hc_3137340007[hc_3137340007_Idx]) && HEX3DHEX3D_2046820626(t_3137340005.data[chckIndx(h_3137340059, 0, (t_3137340005.data).length - 1)].Field1, key_3137340006))) {
          result_3137340008 = h_3137340059;
          break BeforeRet;
          }
          
          h_3137340059 = nextTry_1308622883(h_3137340059, (t_3137340005.data).length - 1);
        }
    };
    result_3137340008 = subInt(-1, h_3137340059);
  };

  return result_3137340008;

}

function mustRehash_3137340347(t_3137340349) {
  var result_3137340350 = false;

    if (!((t_3137340349.counter < (t_3137340349.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137340350 = ((mulInt((t_3137340349.data).length, 2) < mulInt(t_3137340349.counter, 3)) || (subInt((t_3137340349.data).length, t_3137340349.counter) < 4));

  return result_3137340350;

}

function rawInsert_3137340796(t_3137340800, data_3137340801, data_3137340801_Idx, key_3137340802, val_3137340803, hc_3137340804, h_3137340805) {
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field1, key_3137340802, NTI2046820355);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2 = nimCopy(data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field2, val_3137340803, NTI3087007774);
    data_3137340801[data_3137340801_Idx][chckIndx(h_3137340805, 0, (data_3137340801[data_3137340801_Idx]).length - 1)].Field0 = hc_3137340804;

  
}

function enlarge_3137340502(t_3137340505) {
    var n_3137340508 = [];
    n_3137340508 = new Array(chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340505.data).length, 2), 0, 2147483647) ; ++i) { n_3137340508[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3137340505.data; t_3137340505.data = n_3137340508; n_3137340508 = Temporary1;    Label2: {
      var i_3137340572 = 0;
      var colontmp__2969567646 = 0;
      colontmp__2969567646 = (n_3137340508).length - 1;
      var res_2969567647 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567647 <= colontmp__2969567646)) break Label4;
            i_3137340572 = res_2969567647;
            var eh_3137340626 = n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340626)) {
            var j_3137340630 = (eh_3137340626 & (t_3137340505.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340505.data[chckIndx(j_3137340630, 0, (t_3137340505.data).length - 1)].Field0)) break Label6;
                  j_3137340630 = nextTry_1308622883(j_3137340630, (t_3137340505.data).length - 1);
                }
            };
            rawInsert_3137340796(t_3137340505, t_3137340505, "data", n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field1, n_3137340508[chckIndx(i_3137340572, 0, (n_3137340508).length - 1)].Field2, eh_3137340626, j_3137340630);
            }
            
            res_2969567647 = addInt(res_2969567647, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340965(t_3137340968, key_3137340969, hc_3137340970) {
  var result_3137340971 = 0;

  BeforeRet: {
    if (((t_3137340968.data).length == 0)) {
    result_3137340971 = -1;
    break BeforeRet;
    }
    
    var h_3137341022 = (hc_3137340970 & (t_3137340968.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0)) break Label2;
          if (((t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field0 == hc_3137340970) && HEX3DHEX3D_2046820626(t_3137340968.data[chckIndx(h_3137341022, 0, (t_3137340968.data).length - 1)].Field1, key_3137340969))) {
          result_3137340971 = h_3137341022;
          break BeforeRet;
          }
          
          h_3137341022 = nextTry_1308622883(h_3137341022, (t_3137340968.data).length - 1);
        }
    };
    result_3137340971 = subInt(-1, h_3137341022);
  };

  return result_3137340971;

}

function HEX5BHEX5DHEX3D_3137339941(t_3137339944, key_3137339945, val_3137339946) {
    if (((t_3137339944.data).length == 0)) {
    var correctSizeHEX60gensym21_3137339996 = slotsNeeded_1308622891(32);
    t_3137339944.counter = 0;
    t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3137339996, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3137340001 = [0];
    var index_3137340240 = rawGet_3137340002(t_3137339944, key_3137339945, hc_3137340001, 0);
    if ((0 <= index_3137340240)) {
    t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2 = nimCopy(t_3137339944.data[chckIndx(index_3137340240, 0, (t_3137339944.data).length - 1)].Field2, val_3137339946, NTI3087007774);
    }
    else {
      if (((t_3137339944.data).length == 0)) {
      var correctSizeHEX60gensym26_3137340342 = slotsNeeded_1308622891(32);
      t_3137339944.counter = 0;
      t_3137339944.data = new Array(chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3137340342, 0, 2147483647) ; ++i) { t_3137339944.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3137340347(t_3137339944)) {
      enlarge_3137340502(t_3137339944);
      index_3137340240 = rawGetKnownHC_3137340965(t_3137339944, key_3137339945, hc_3137340001[0]);
      }
      
      index_3137340240 = subInt(-1, index_3137340240);
      rawInsert_3137340796(t_3137339944, t_3137339944, "data", key_3137339945, val_3137339946, hc_3137340001[0], index_3137340240);
      t_3137339944.counter = addInt(t_3137339944.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2147483728(a_2147483729, b_2147483730) {
  var result_2147483731 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483731.x = min_33555609(a_2147483729.x, b_2147483730.x);
    result_2147483731.y = min_33555609(a_2147483729.y, b_2147483730.y);
    result_2147483731.w = (max_33555642((a_2147483729.x + a_2147483729.w), (b_2147483730.x + b_2147483730.w)) - result_2147483731.x);
    result_2147483731.h = (max_33555642((a_2147483729.y + a_2147483729.h), (b_2147483730.y + b_2147483730.h)) - result_2147483731.y);

  return result_2147483731;

}

function HEX2B_2130706587(a_2130706588, b_2130706589) {
  var result_2130706590 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706590.x = (a_2130706588.x + b_2130706589.x);
    result_2130706590.y = (a_2130706588.y + b_2130706589.y);
    result_2130706590.w = a_2130706588.w;
    result_2130706590.h = a_2130706588.h;

  return result_2130706590;

}

function vec2_2164261725(xHEX60gensym45_2164261726, yHEX60gensym45_2164261727) {
  var result_2164261728 = ({x: 0.0, y: 0.0});

    result_2164261728 = nimCopy(result_2164261728, {x: xHEX60gensym45_2164261726, y: yHEX60gensym45_2164261727}, NTI2164261152);

  return result_2164261728;

}

function xy_2147483680(rect_2147483681) {
  var result_2147483682 = ({x: 0.0, y: 0.0});

    result_2147483682 = nimCopy(result_2147483682, vec2_2164261725(rect_2147483681.x, rect_2147483681.y), NTI2164261152);

  return result_2147483682;

}

function add_3087009897(node_3087009898, node_3087009898_Idx, child_3087009899) {
  var result_3087009900 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009898[node_3087009898_Idx].children.push(child_3087009899);;
    child_3087009899.depth = addInt(node_3087009898[node_3087009898_Idx].depth, 1);
    child_3087009899.parent = node_3087009898[node_3087009898_Idx];
    child_3087009899.bounds.x = node_3087009898[node_3087009898_Idx].bounds.w;
    node_3087009898[node_3087009898_Idx].bounds = nimCopy(node_3087009898[node_3087009898_Idx].bounds, or_2147483728(node_3087009898[node_3087009898_Idx].bounds, HEX2B_2130706587(child_3087009899.bounds, xy_2147483680(node_3087009898[node_3087009898_Idx].bounds))), NTI2147483653);
    result_3087009900 = nimCopy(result_3087009900, {parent: node_3087009898[node_3087009898_Idx], first: (node_3087009898[node_3087009898_Idx].children).length - 1, last: (node_3087009898[node_3087009898_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009900;

}

function createReplacement_3137339709(input_3137339710, node_3137339711, layout_3137339712, layout_3137339712_Idx, line_3137339713, line_3137339713_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3137339714 = false;

  BeforeRet: {
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.id)) {
    var n_3137339900 = clone_3087009416((Temporary1 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.id), Temporary1)[0][Temporary1[1]]);
    n_3137339900.cloneWidget = false;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137339900));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    if (contains_3137339757(input_3137339710.replacements, node_3137339711.reff)) {
    var n_3137341308 = clone_3087009416((Temporary2 = HEX5BHEX5D_3137339821(input_3137339710.replacements, node_3137339711.reff), Temporary2)[0][Temporary2[1]]);
    n_3137341308.cloneWidget = true;
    HEX5BHEX5DHEX3D_3137339941(layout_3137339712[layout_3137339712_Idx].nodeToVisualNode, node_3137339711.id, add_3087009897(line_3137339713, line_3137339713_Idx, n_3137341308));
    result_3137339714 = true;
    break BeforeRet;
    }
    
    result_3137339714 = false;
    break BeforeRet;
  };

  return result_3137339714;

}

function rect_2147483672(pos_2147483673, size_2147483674) {
  var result_2147483675 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483675.x = pos_2147483673.x;
    result_2147483675.y = pos_2147483673.y;
    result_2147483675.w = size_2147483674.x;
    result_2147483675.h = size_2147483674.y;

  return result_2147483675;

}

function vec2_2164261686() {
  var result_2164261687 = ({x: 0.0, y: 0.0});

    result_2164261687 = nimCopy(result_2164261687, {x: 0.0, y: 0.0}, NTI2164261152);

  return result_2164261687;

}

function whHEX3D_2147483689(rect_2147483690, v_2147483691) {
    rect_2147483690.w = v_2147483691.x;
    rect_2147483690.h = v_2147483691.y;

  
}

function newTextNode_3137339636(text_3137339637, color_3137339638, font_3137339639, measureText_3137339642, node_3137339643) {
  var result_3137339644 = null;

    result_3137339644 = {id: newId_2046820597(), text: nimCopy(null, text_3137339637, NTI33554449), colors: [nimCopy(null, color_3137339638, NTI33554449)], font: nimCopy(null, font_3137339639, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339643, mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339644.bounds, measureText_3137339642(text_3137339637));

  return result_3137339644;

}

function newTextNode_3137339649(text_3137339650, colors_3137339651, font_3137339652, measureText_3137339655, node_3137339656, styleOverride_3137339666) {
  var result_3137339667 = null;

    result_3137339667 = {id: newId_2046820597(), text: nimCopy(null, text_3137339650, NTI33554449), colors: nimCopy(null, colors_3137339651, NTI3137339575), font: nimCopy(null, font_3137339652, NTI33554449), fontSize: config_3137339605[0].fontSize, node: node_3137339656, styleOverride: nimCopy(null, styleOverride_3137339666, NTI3087007788), mhash: 0, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339667.bounds, measureText_3137339655(text_3137339650));

  return result_3137339667;

}

function none_3137339658() {
  var result_3137339665 = ({val: {}, has: false});

  return result_3137339665;

}

function getColorForSymbol_3137341355(ctx_3137341356, sym_3137341357) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3137341358 = [];

  BeforeRet: {
    var typ_3137341359 = computeSymbolType_3019928398(ctx_3137341356, sym_3137341357, false);
    switch (typ_3137341359.kind) {
    case 0:
      result_3137341358 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3137341358 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3137341357.kind == 1)) {
      var Temporary1 = sym_3137341357;
      if (ConstSet138[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3137341358 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
        break;
      }
      }
      
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      break;
    default: 
      if ((sym_3137341357.kind == 0)) {
        var Temporary2 = sym_3137341357;
        if (ConstSet139[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3137341357;
        if (ConstSet140[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3137341357;
          if (ConstSet141[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3137341357;
        if (ConstSet142[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
      break BeforeRet;
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3137341358 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3137340486);
    break BeforeRet;
  };

  return result_3137341358;

}

function some_3137341475(val_3137341477) {
  var result_3137341478 = ({val: {}, has: false});

    result_3137341478.has = true;
    result_3137341478.val = nimCopy(result_3137341478.val, val_3137341477, NTI3087007783);

  return result_3137341478;

}

function getStyleForSymbol_3137341424(ctx_3137341425, sym_3137341426) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3137341428 = ({val: {}, has: false});

    var style_3137341429 = nimCopy(null, ConstSet143, NTI3137340550);
    if ((sym_3137341426.kind == 0)) {
      var Temporary1 = sym_3137341426;
      if (ConstSet144[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet145), NTI3137340550);
    }
    
      var Temporary2 = sym_3137341426;
      if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3137341448 = computeSymbolType_3019928398(ctx_3137341425, sym_3137341426, false);
    if (!((typ_3137341448.kind == 4))) {
    style_3137341429 = nimCopy(style_3137341429, SetPlus(style_3137341429, ConstSet147), NTI3137340550);
    }
    
    }
    
    }
    else {
    if ((sym_3137341426.kind == 1)) {
      var Temporary3 = sym_3137341426;
      if (ConstSet148[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3137341429[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3137341429, ConstSet149))) {
    result_3137341428 = nimCopy(result_3137341428, some_3137341475(style_3137341429), NTI3087007788);
    }
    

  return result_3137341428;

}

function len_3087007980(node_3087007981) {
  var result_3087007982 = 0;

  BeforeRet: {
    result_3087007982 = (node_3087007981.children).length;
    break BeforeRet;
  };

  return result_3087007982;

}

function addLine_3087009929(node_3087009930, node_3087009930_Idx, child_3087009931, child_3087009931_Idx) {
    node_3087009930[node_3087009930_Idx].children.push(child_3087009931[child_3087009931_Idx]);;
    child_3087009931[child_3087009931_Idx].depth = addInt(node_3087009930[node_3087009930_Idx].depth, 1);
    child_3087009931[child_3087009931_Idx].parent = node_3087009930[node_3087009930_Idx];
    child_3087009931[child_3087009931_Idx].bounds.y = node_3087009930[node_3087009930_Idx].bounds.h;
    node_3087009930[node_3087009930_Idx].bounds = nimCopy(node_3087009930[node_3087009930_Idx].bounds, or_2147483728(node_3087009930[node_3087009930_Idx].bounds, HEX2B_2130706587(child_3087009931[child_3087009931_Idx].bounds, xy_2147483680(node_3087009930[node_3087009930_Idx].bounds))), NTI2147483653);

  
}

function rect_2147483666(x_2147483667, y_2147483668, w_2147483669, h_2147483670) {
  var result_2147483671 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483671.x = x_2147483667;
    result_2147483671.y = y_2147483668;
    result_2147483671.w = w_2147483669;
    result_2147483671.h = h_2147483670;

  return result_2147483671;

}

function getPrecedenceForNode_3137339406(ctx_3137339407, node_3137339408) {
      var Temporary1;
      var Temporary2;

  var result_3137339409 = 0;

  BeforeRet: {
    if ((!((node_3137339408.kind == 8)) || (len_3003121752(node_3137339408) == 0))) {
    result_3137339409 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3137339416 = computeSymbol_3019919344(ctx_3137339407, HEX5BHEX5D_3003121748(node_3137339408, 0), false);
      if (!isSome_3087009356(oHEX60gensym1_3137339416)) Temporary1 = false; else {        var symbol_3137339439 = get_3087009376(oHEX60gensym1_3137339416);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3137339439.kind) {
    case 1:
      var Temporary2 = symbol_3137339439;
      if (ConstSet152[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3137339409 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3137339409 = 0;
    break BeforeRet;
  };

  return result_3137339409;

}

function some_3137339691(val_3137339693) {
  var result_3137339694 = ({val: [], has: false});

    result_3137339694.has = true;
    result_3137339694.val = nimCopy(null, val_3137339693, NTI3137339604);

  return result_3137339694;

}

function newBlockNode_3137339677(colors_3137339678, size_3137339679, node_3137339680, styleOverride_3137339689) {
  var result_3137339690 = null;

    result_3137339690 = {id: newId_2046820597(), node: node_3137339680, styleOverride: nimCopy(null, styleOverride_3137339689, NTI3087007788), background: some_3137339691(colors_3137339678), mhash: 0, parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0, widgetTemplate: null, cloneWidget: false};
    whHEX3D_2147483689(result_3137339690.bounds, size_3137339679);

  return result_3137339690;

}

function HEX2BHEX3D_2147483761(x_2147483763, x_2147483763_Idx, y_2147483764) {
    x_2147483763[x_2147483763_Idx] = (x_2147483763[x_2147483763_Idx] + y_2147483764);

  
}

function formatValue_3137342818(result_3137342820, result_3137342820_Idx, value_3137342821, specifier_3137342822) {
    formatValue_721420459(result_3137342820, result_3137342820_Idx, reprEnum(value_3137342821, NTI3003121667), specifier_3137342822);

  
}

function createLayoutLineForRemainingChildren_3137341493(ctx_3137341494, input_3137341495, node_3137341496, firstChildIndex_3137341497, result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx) {
  BeforeRet: {
    if ((len_3003121752(node_3137341496) <= firstChildIndex_3137341497)) {
    break BeforeRet;
    }
    
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([60], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
    Label1: {
      var i_3137341508 = 0;
      var colontmp__2969567653 = 0;
      colontmp__2969567653 = len_3003121752(node_3137341496);
      var i_2969567654 = firstChildIndex_3137341497;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567654 < colontmp__2969567653)) break Label3;
            i_3137341508 = i_2969567654;
            if ((firstChildIndex_3137341497 < i_3137341508)) {
            var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341494, input_3137341495, HEX5BHEX5D_3003121748(node_3137341496, i_3137341508), result_3137341498, result_3137341498_Idx, line_3137341499, line_3137341499_Idx);
            i_2969567654 = addInt(i_2969567654, 1);
          }
      };
    };
    var _ = add_3087009897(line_3137341499, line_3137341499_Idx, newTextNode_3137339649([62], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341495.measureText, null, none_3137339658()));
  };

  
}

function createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3137341532 = (((ConstSet136[node_3137341490.kind] != undefined) && (ConstSet137[node_3137341490.parent.kind] != undefined)) && input_3137341489.inlineBlocks);
    var prevLine_3137341533 = line_3137341492[line_3137341492_Idx];
    var first_3137341537 = (prevLine_3137341533.children).length;
    try {
    var oldLineHEX60gensym42_3137341592 = [line_3137341492[line_3137341492_Idx]];
    var containerLineHEX60gensym42_3137341593 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    if (renderInline_3137341532) {
    line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym42_3137341593[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3137341593[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
    }
    
    try {
    var _ = computeType_3019913434(ctx_3137341488, node_3137341490, false);
    var lastUsedChild_3137341640 = -1;
    try {
    Label4: {
      var expr_3137341641 = node_3137341490;
      var pos_3137341642 = 0;
      var _ = pos_3137341642;
      if ((expr_3137341641.kind == 0)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var bounds_3137341649 = input_3137341489.measureText([32]);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, {id: newId_2046820597(), colors: [nimCopy(null, config_3137339605[0].colors.empty, NTI33554449)], node: node_3137341490, bounds: rect_2147483672(vec2_2164261686(), bounds_3137341649), mhash: 0, parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 2)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      else {
      if ((expr_3137341641.kind == 3)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(node_3137341490.text, [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
      if ((expr_3137341641.kind == 1)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym61_3137341768 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym61_3137341768)) Temporary5 = false; else {          var sym_3137341791 = get_3087009376(oHEX60gensym61_3137341768);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341791.name, getColorForSymbol_3137341355(ctx_3137341488, sym_3137341791), config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341791))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_2046820617(node_3137341490.reff), [118,97,114,105,97,98,108,101], config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      }
      
      }
      
      }
      else {
      if ((expr_3137341641.kind == 4)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym63_3137341890 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym63_3137341890)) Temporary7 = false; else {          var sym_3137341913 = get_3087009376(oHEX60gensym63_3137341890);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3137341355(ctx_3137341488, sym_3137341913);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3137341918 = nimCopy(null, Temporary6, NTI3137340452);
        var oHEX60gensym64_3137341921 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym64_3137341921)) Temporary8 = false; else {          var sym_3137341944 = get_3087009376(oHEX60gensym64_3137341921);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(sym_3137341944.name, color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341944)));
      }
      else {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(HEX24_2046820617(node_3137341490.id), color_3137341918, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, none_3137339658()));
      }
      
      }
      
      var typ_3137341945 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      if ((typ_3137341945.kind == 4)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      else {
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137341945), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      }
      
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      var value_3137341962 = computeValue_3019916562(ctx_3137341488, node_3137341490, false);
      switch (value_3137341962.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_3003121748(node_3137341490, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008498(value_3137341962), [115,116,114,105,110,103], config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3137341640 = 0;
      }
      else {
      if ((expr_3137341641.kind == 5)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym67_3137341973 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym67_3137341973)) Temporary10 = false; else {          var sym_3137341996 = get_3087009376(oHEX60gensym67_3137341973);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137341996), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137341996)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567650 = nimCopy(null, Temporary9, NTI3137340922);
      var color_3137342008 = nimCopy(null, colontmp__2969567650["Field0"], NTI3137340452);
      var style_3137342009 = nimCopy(null, colontmp__2969567650["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342008, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342009));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342065 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342065), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 6)) {
      if (!(createReplacement_3137339709(input_3137341489, node_3137341490, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx))) {
        var oHEX60gensym71_3137342122 = computeSymbol_3019919344(ctx_3137341488, node_3137341490, false);
        if (!isSome_3087009356(oHEX60gensym71_3137342122)) Temporary12 = false; else {          var sym_3137342145 = get_3087009376(oHEX60gensym71_3137342122);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3137341355(ctx_3137341488, sym_3137342145), Field1: getStyleForSymbol_3137341424(ctx_3137341488, sym_3137342145)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3137339658()};
      }
      
      var colontmp__2969567651 = nimCopy(null, Temporary11, NTI3137341025);
      var color_3137342157 = nimCopy(null, colontmp__2969567651["Field0"], NTI3137340452);
      var style_3137342158 = nimCopy(null, colontmp__2969567651["Field1"], NTI3087007788);
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649(node_3137341490.text, color_3137342157, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490, style_3137342158));
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,58,32,109,117,116,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      if ((((HEX5BHEX5D_3003121748(node_3137341490, 0).kind == 0) && ((HEX5BHEX5D_3003121748(node_3137341490, 0).text).length == 0)) && !(contains_3137339757(input_3137341489.replacements, HEX5BHEX5D_3003121748(node_3137341490, 0).id)))) {
      var typ_3137342214 = computeType_3019913434(ctx_3137341488, node_3137341490, false);
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636(HEX24_3087008191(typ_3137342214), config_3137339605[0].colors.typ, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      }
      
      if ((1 < len_3003121752(node_3137341490))) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 11)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([102,110], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      var parent_3137342269 = line_3137341492[line_3137341492_Idx];
      var first_3137342270 = len_3087007980(parent_3137342269);
      Label13: {
        var i_3137342294 = 0;
        var param_3137342295 = null;
        var colontmp__2969567619 = [];
        colontmp__2969567619 = HEX5BHEX5D_3003121748(node_3137341490, 0).children;
        var i_2969567621 = 0;
        var L_2969567622 = (colontmp__2969567619).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2969567621 < L_2969567622)) break Label15;
              i_3137342294 = i_2969567621;
              param_3137342295 = colontmp__2969567619[chckIndx(i_2969567621, 0, (colontmp__2969567619).length - 1)];
              if ((0 < i_3137342294)) {
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
              }
              
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, param_3137342295, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567621 = addInt(i_2969567621, 1);
              if (!(((colontmp__2969567619).length == L_2969567622))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_3003121752(HEX5BHEX5D_3003121748(node_3137341490, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, HEX5BHEX5D_3003121748(node_3137341490, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: parent_3137342269, first: first_3137342270, last: len_3087007980(parent_3137342269)});
      }
      
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41,32], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((1 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 2;
      }
      else {
      if ((expr_3137341641.kind == 9)) {
      var parent_3137342400 = [line_3137341492[line_3137341492_Idx].parent];
      var prevIndent_3137342401 = line_3137341492[line_3137341492_Idx].indent;
      var first_3137342405 = (parent_3137342400[0].children).length;
      try {
      var i_3137342458 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3137342458, 1) < len_3003121752(node_3137341490))) break Label18;
            try {
            if ((i_3137342458 == 0)) {
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            else {
              addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,105,102,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
            }
            
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342458), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
            createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, addInt(i_3137342458, 1)), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
            } finally {
            i_3137342458 = addInt(i_3137342458, 2);
            }
          }
      };
      if ((modInt(len_3003121752(node_3137341490), 2) == 1)) {
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([101,108,115,101,58,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, last_3003121922(node_3137341490), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      addLine_3087009929(parent_3137342400, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342400[0], bounds: rect_2147483666((prevIndent_3137342401 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342401, depth: addInt(parent_3137342400[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342405 < (parent_3137342400[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342400[0], first: first_3137342405, last: (parent_3137342400[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 10)) {
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([119,104,105,108,101,32], config_3137339605[0].colors.keyword, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
      if ((1 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([58,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((2 <= len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 7)) {
      var parent_3137342479 = [line_3137341492[line_3137341492_Idx].parent];
      var first_3137342483 = addInt((parent_3137342479[0].children).length, 1);
      try {
      var prevIndent_3137342536 = line_3137341492[line_3137341492_Idx].indent;
      Label21: {
        var child_3137342540 = null;
        var i_2969567626 = 0;
        var L_2969567627 = (node_3137341490.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2969567626 < L_2969567627)) break Label23;
              child_3137342540 = node_3137341490.children[chckIndx(i_2969567626, 0, (node_3137341490.children).length - 1)];
              addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
              line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, input_3137341489.indent, 0.0), indent: addInt(prevIndent_3137342536, 1), node: child_3137342540, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
              createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, child_3137342540, result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
              i_2969567626 = addInt(i_2969567626, 1);
              if (!(((node_3137341490.children).length == L_2969567627))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009929(parent_3137342479, 0, line_3137341492, line_3137341492_Idx);
      line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342479[0], bounds: rect_2147483666((prevIndent_3137342536 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342536, depth: addInt(parent_3137342479[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
      lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
      } finally {
      if ((first_3137342483 < (parent_3137342479[0].children).length)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342479[0], first: first_3137342483, last: (parent_3137342479[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3137341641.kind == 13)) {
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([32,61,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
      if ((0 < len_3003121752(node_3137341490))) {
      createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
      }
      
      lastUsedChild_3137341640 = 1;
      }
      else {
      if ((expr_3137341641.kind == 8)) {
      if ((len_3003121752(node_3137341490) == 0)) {
      HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3137339605[0].colors.empty, config_3137339605[0].fontRegular, input_3137341489.measureText, node_3137341490)));
      break BeforeRet;
      }
      
      var isDivision_3137342599 = false;
        var oHEX60gensym90_3137342602 = computeSymbol_3019919344(ctx_3137341488, HEX5BHEX5D_3003121748(node_3137341490, 0), false);
        if (!isSome_3087009356(oHEX60gensym90_3137342602)) Temporary26 = false; else {          var sym_3137342625 = get_3087009376(oHEX60gensym90_3137342602);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3137342625.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820626(sym_3137342625.id, IdDiv_2986344454)) {
      isDivision_3137342599 = true;
      }
      
      var Temporary27 = sym_3137342625;
      if (ConstSet150[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3137342630 = Temporary28;
      if ((len_3003121752(node_3137341490) == addInt(arity_3137342630, 1))) {
      var Temporary30 = sym_3137342625;
      if (ConstSet151[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3137342631 = Temporary24;
      switch (operatorNotation_3137342631) {
      case 3:
        var parentPrecedence_3137342632 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490.parent);
        var precedence_3137342633 = getPrecedenceForNode_3137339406(ctx_3137341488, node_3137341490);
        var renderParens_3137342634 = (precedence_3137342633 < parentPrecedence_3137342632);
        if (((isDivision_3137342599 && input_3137341489.renderDivisionVertically) && input_3137341489.inlineBlocks)) {
        var oldLineHEX60gensym91_3137342637 = [line_3137341492[line_3137341492_Idx]];
        var containerLineHEX60gensym91_3137342638 = [{id: newId_2046820597(), node: node_3137341490, parent: line_3137341492[line_3137341492_Idx], orientation: 1, depth: addInt(line_3137341492[line_3137341492_Idx].depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
        if (true) {
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: containerLineHEX60gensym91_3137342638[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3137342638[0].depth, 1), mhash: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        }
        
        try {
        var parent_3137342685 = [line_3137341492[line_3137341492_Idx].parent];
        var prevIndent_3137342686 = line_3137341492[line_3137341492_Idx].indent;
        var first_3137342690 = (parent_3137342685[0].children).length;
        try {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line1_3137342743 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        var fontSize_3137342744 = input_3137341489.measureText([32]).y;
        var divLine_3137342749 = newBlockNode_3137339677([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2164261725(0.0, (fontSize_3137342744 * 0.1)), HEX5BHEX5D_3003121748(node_3137341490, 0), none_3137339658());
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, divLine_3137342749);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, HEX5BHEX5D_3003121748(node_3137341490, 0).id, {parent: line_3137341492[line_3137341492_Idx], first: 0, last: 1});
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        addLine_3087009929(parent_3137342685, 0, line_3137341492, line_3137341492_Idx);
        var line2_3137342796 = line_3137341492[line_3137341492_Idx];
        line_3137341492[line_3137341492_Idx] = {id: newId_2046820597(), parent: parent_3137342685[0], bounds: rect_2147483666((prevIndent_3137342686 * input_3137341489.indent), 0.0, 0.0, 0.0), indent: prevIndent_3137342686, depth: addInt(parent_3137342685[0].depth, 1), mhash: 0, orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false};
        divLine_3137342749.bounds.w = max_33555642(line1_3137342743.bounds.w, line2_3137342796.bounds.w);
        divLine_3137342749.parent.bounds.w = divLine_3137342749.bounds.w;
        var shorterLine_3137342797 = line1_3137342743;
        var longerLine_3137342798 = line2_3137342796;
        if ((longerLine_3137342798.bounds.w < shorterLine_3137342797.bounds.w)) {
        shorterLine_3137342797 = line2_3137342796;
        longerLine_3137342798 = line1_3137342743;
        }
        
        var lengthDiff_3137342799 = (longerLine_3137342798.bounds.w - shorterLine_3137342797.bounds.w);
        HEX2BHEX3D_2147483761(shorterLine_3137342797.bounds, "x", (lengthDiff_3137342799 / 2.0));
        lastUsedChild_3137341640 = 2;
        } finally {
        if ((first_3137342690 < (parent_3137342685[0].children).length)) {
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: parent_3137342685[0], first: first_3137342690, last: (parent_3137342685[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009929(containerLineHEX60gensym91_3137342638, 0, line_3137341492, line_3137341492_Idx);
        HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym91_3137342637, 0, containerLineHEX60gensym91_3137342638[0]));
        line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym91_3137342637[0];
        }
        
        }
        }
        else {
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339636([32], config_3137339605[0].colors.separator, config_3137339605[0].fontRegular, input_3137341489.measureText, null));
          createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 2), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
          if (renderParens_3137342634) {
          var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
          }
          
          lastUsedChild_3137341640 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      case 2:
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        lastUsedChild_3137341640 = 1;
        break;
      default: 
        if ((0 < len_3003121752(node_3137341490))) {
        createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, 0), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
        }
        
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([40], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        Label33: {
          var i_3137342808 = 0;
          var colontmp__2969567630 = 0;
          colontmp__2969567630 = len_3003121752(node_3137341490);
          var i_2969567631 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2969567631 < colontmp__2969567630)) break Label35;
                i_3137342808 = i_2969567631;
                if ((1 < i_3137342808)) {
                var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([44,32], [nimCopy(null, config_3137339605[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
                }
                
                createLayoutLineForNode_3137341487(ctx_3137341488, input_3137341489, HEX5BHEX5D_3003121748(node_3137341490, i_3137342808), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
                i_2969567631 = addInt(i_2969567631, 1);
              }
          };
        };
        var _ = add_3087009897(line_3137341492, line_3137341492_Idx, newTextNode_3137339649([41], config_3137339605[0].colors.separatorParen, config_3137339605[0].fontRegular, input_3137341489.measureText, null, none_3137339658()));
        lastUsedChild_3137341640 = subInt(len_3003121752(node_3137341490), 1);
        break;
      }
      }
      else {
        var fmtRes_3137342817 = [mnewString(0)];
        fmtRes_3137342817[0].push.apply(fmtRes_3137342817[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3137342818(fmtRes_3137342817, 0, node_3137341490.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137342817[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3137341493(ctx_3137341488, input_3137341489, node_3137341490, addInt(lastUsedChild_3137341640, 1), result_3137341491, result_3137341491_Idx, line_3137341492, line_3137341492_Idx);
    }
    } finally {
    if (renderInline_3137341532) {
    addLine_3087009929(containerLineHEX60gensym42_3137341593, 0, line_3137341492, line_3137341492_Idx);
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, add_3087009897(oldLineHEX60gensym42_3137341592, 0, containerLineHEX60gensym42_3137341593[0]));
    line_3137341492[line_3137341492_Idx] = oldLineHEX60gensym42_3137341592[0];
    }
    
    }
    } finally {
    if ((first_3137341537 < (prevLine_3137341533.children).length)) {
    HEX5BHEX5DHEX3D_3137339941(result_3137341491[result_3137341491_Idx].nodeToVisualNode, node_3137341490.id, {parent: prevLine_3137341533, first: first_3137341537, last: (prevLine_3137341533.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3137342848(vnode_3137342849) {
    var height_3137342850 = vnode_3137342849.bounds.h;
    Label1: {
      var child_3137342854 = null;
      var i_2969567657 = 0;
      var L_2969567658 = (vnode_3137342849.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567657 < L_2969567658)) break Label3;
            child_3137342854 = vnode_3137342849.children[chckIndx(i_2969567657, 0, (vnode_3137342849.children).length - 1)];
            if ((vnode_3137342849.orientation == 0)) {
            var heightDiff_3137342860 = (height_3137342850 - child_3137342854.bounds.h);
            HEX2BHEX3D_2147483761(child_3137342854.bounds, "y", (heightDiff_3137342860 * 0.5));
            }
            
            centerChildrenVertically_3137342848(child_3137342854);
            i_2969567657 = addInt(i_2969567657, 1);
            if (!(((vnode_3137342849.children).length == L_2969567658))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3137342865(ctx_3137342866, input_3137342867) {
  var result_3137342868 = [null];

    var node_3137342869 = input_3137342867.node;
    result_3137342868[0] = {node: node_3137342869, root: {id: newId_2046820597(), orientation: 1, mhash: 0, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, widgetTemplate: null, cloneWidget: false}, nodeToVisualNode: initTable_3137342870(32)};
    var line_3137342881 = [{id: newId_2046820597(), node: node_3137342869, parent: result_3137342868[0].root, orientation: 0, depth: addInt(result_3137342868[0].root.depth, 1), mhash: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), widgetTemplate: null, cloneWidget: false}];
    createLayoutLineForNode_3137341487(ctx_3137342866, input_3137342867, node_3137342869, result_3137342868, 0, line_3137342881, 0);
    addLine_3087009929(line_3137342881[0], "parent", line_3137342881, 0);
    centerChildrenVertically_3137342848(result_3137342868[0].root);

  return result_3137342868[0];

}

function computeNodeLayoutImpl_3019899486(ctx_3019899487, nodeLayoutInput_3019899488) {
  var result_3019937312 = null;

  BeforeRet: {
    dependOnCurrentRevision_3019906168(ctx_3019899487);
    var _ = computeValidation_3019925643(ctx_3019899487, nodeLayoutInput_3019899488.node, true);
    result_3019937312 = computeNodeLayoutImpl2_3137342865(ctx_3019899487, nodeLayoutInput_3019899488);
    break BeforeRet;
  };

  return result_3019937312;

}

function mapKeyJs_3019902675(key_3019902677) {
  var result_3019902678 = null;

    let temp = key_3019902677;
    let newId = getIdNodeLayoutInputJs(temp);
    if (temp._id !== undefined && temp._id !== newId) {console.error('new id for ', temp, ', ', temp._id, ' -> ', newId); debugger;} 
    temp._id = newId;
    return temp._id;

  return result_3019902678;

}

function HEX5BHEX5DHEX3D_3019902663(t_3019902666, key_3019902667, val_3019902668) {
    t_3019902666.set(mapKeyJs_3019902675(key_3019902667), val_3019902668);

  
}

function init_3019902786(result_3019902789, result_3019902789_Idx, capacity_3019902790) {
    result_3019902789[result_3019902789_Idx] = (new Map());

  
}

function mustRehash_3019903484(t_3019903486) {
  var result_3019903487 = false;

    if (!((t_3019903486.counter < (t_3019903486.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903487 = ((mulInt((t_3019903486.data).length, 2) < mulInt(t_3019903486.counter, 3)) || (subInt((t_3019903486.data).length, t_3019903486.counter) < 4));

  return result_3019903487;

}

function rawInsert_3019904177(t_3019904181, data_3019904182, data_3019904182_Idx, key_3019904183, val_3019904184, hc_3019904185, h_3019904186) {
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field1 = key_3019904183;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field2 = val_3019904184;
    data_3019904182[data_3019904182_Idx][chckIndx(h_3019904186, 0, (data_3019904182[data_3019904182_Idx]).length - 1)].Field0 = hc_3019904185;

  
}

function enlarge_3019903741(t_3019903744) {
    var n_3019903747 = [];
    n_3019903747 = new Array(chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903744.data).length, 2), 0, 2147483647) ; ++i) { n_3019903747[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3019903744.data; t_3019903744.data = n_3019903747; n_3019903747 = Temporary1;    Label2: {
      var i_3019903845 = 0;
      var colontmp__2969567662 = 0;
      colontmp__2969567662 = (n_3019903747).length - 1;
      var res_2969567663 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969567663 <= colontmp__2969567662)) break Label4;
            i_3019903845 = res_2969567663;
            var eh_3019903926 = n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903926)) {
            var j_3019903930 = (eh_3019903926 & (t_3019903744.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903744.data[chckIndx(j_3019903930, 0, (t_3019903744.data).length - 1)].Field0)) break Label6;
                  j_3019903930 = nextTry_1308622883(j_3019903930, (t_3019903744.data).length - 1);
                }
            };
            rawInsert_3019904177(t_3019903744, t_3019903744, "data", n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field1, n_3019903747[chckIndx(i_3019903845, 0, (n_3019903747).length - 1)].Field2, eh_3019903926, j_3019903930);
            }
            
            res_2969567663 = addInt(res_2969567663, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904436(t_3019904439, key_3019904440, hc_3019904441) {
  var result_3019904442 = 0;

  BeforeRet: {
    if (((t_3019904439.data).length == 0)) {
    result_3019904442 = -1;
    break BeforeRet;
    }
    
    var h_3019904527 = (hc_3019904441 & (t_3019904439.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0)) break Label2;
          if (((t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field0 == hc_3019904441) && (t_3019904439.data[chckIndx(h_3019904527, 0, (t_3019904439.data).length - 1)].Field1 == key_3019904440))) {
          result_3019904442 = h_3019904527;
          break BeforeRet;
          }
          
          h_3019904527 = nextTry_1308622883(h_3019904527, (t_3019904439.data).length - 1);
        }
    };
    result_3019904442 = subInt(-1, h_3019904527);
  };

  return result_3019904442;

}

function HEX5BHEX5DHEX3D_3019902865(t_3019902868, key_3019902869, val_3019902870) {
    if (((t_3019902868.data).length == 0)) {
    var correctSizeHEX60gensym141_3019902954 = slotsNeeded_1308622891(32);
    t_3019902868.counter = 0;
    t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym141_3019902954, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3019902959 = [0];
    var index_3019903316 = rawGet_3019902960(t_3019902868, key_3019902869, hc_3019902959, 0);
    if ((0 <= index_3019903316)) {
    t_3019902868.data[chckIndx(index_3019903316, 0, (t_3019902868.data).length - 1)].Field2 = val_3019902870;
    }
    else {
      if (((t_3019902868.data).length == 0)) {
      var correctSizeHEX60gensym146_3019903479 = slotsNeeded_1308622891(32);
      t_3019902868.counter = 0;
      t_3019902868.data = new Array(chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym146_3019903479, 0, 2147483647) ; ++i) { t_3019902868.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3019903484(t_3019902868)) {
      enlarge_3019903741(t_3019902868);
      index_3019903316 = rawGetKnownHC_3019904436(t_3019902868, key_3019902869, hc_3019902959[0]);
      }
      
      index_3019903316 = subInt(-1, index_3019903316);
      rawInsert_3019904177(t_3019902868, t_3019902868, "data", key_3019902869, val_3019902870, hc_3019902959[0], index_3019903316);
      t_3019902868.counter = addInt(t_3019902868.counter, 1);
    }
    

  
}

function formatValue_3019937337(result_3019937339, result_3019937339_Idx, value_3019937340, specifier_3019937341) {
    formatValue_721420459(result_3019937339, result_3019937339_Idx, HEX24_3019911804(value_3019937340), specifier_3019937341);

  
}

function getAstNode_3019906180(ctxHEX60gensym79_3019906181, idHEX60gensym79_3019906182) {
  var result_3019906184 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym79_3019906185 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym79_3019906182, NTI2046820355), Field1: 0}, NTI3036676201);
    if (contains_3019899577(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)) {
    result_3019906184 = nimCopy(result_3019906184, some_3003121890(HEX5BHEX5D_3019899687(ctxHEX60gensym79_3019906181.itemsAstNode, itemHEX60gensym79_3019906185)), NTI3003121783);
    break BeforeRet;
    }
    
    result_3019906184 = nimCopy(result_3019906184, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_3019906184;

}

function recoverValue_3019899447(ctx_3019899448, key_3019899449) {
      var Temporary1;

    var fmtRes_3019937336 = [mnewString(0)];
    fmtRes_3019937336[0].push.apply(fmtRes_3019937336[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937336, 0, key_3019899449, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937336[0], NTI33554449)]);
      var oHEX60gensym321_3019937347 = getAstNode_3019906180(ctx_3019899448, key_3019899449.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym321_3019937347)) Temporary1 = false; else {        var node_3019937393 = get_3003123566(oHEX60gensym321_3019937347);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900124(ctx_3019899448.queryCacheValue, node_3019937393, errorValue_3087008442());
    }
    

  
}

function recoverType_3019899450(ctx_3019899451, key_3019899452) {
      var Temporary1;

    var fmtRes_3019937470 = [mnewString(0)];
    fmtRes_3019937470[0].push.apply(fmtRes_3019937470[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937470, 0, key_3019899452, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937470[0], NTI33554449)]);
      var oHEX60gensym323_3019937478 = getAstNode_3019906180(ctx_3019899451, key_3019899452.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym323_3019937478)) Temporary1 = false; else {        var node_3019937524 = get_3003123566(oHEX60gensym323_3019937478);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019899766(ctx_3019899451.queryCacheType, node_3019937524, errorType_3087008131());
    }
    

  
}

function recoverSymbol_3019899453(ctx_3019899454, key_3019899455) {
      var Temporary1;

    var fmtRes_3019937601 = [mnewString(0)];
    fmtRes_3019937601[0].push.apply(fmtRes_3019937601[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937601, 0, key_3019899455, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937601[0], NTI33554449)]);
      var oHEX60gensym325_3019937609 = getAstNode_3019906180(ctx_3019899454, key_3019899455.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym325_3019937609)) Temporary1 = false; else {        var node_3019937655 = get_3003123566(oHEX60gensym325_3019937609);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900472(ctx_3019899454.queryCacheSymbol, node_3019937655, none_3019907133());
    }
    

  
}

function recoverSymbols_3019899456(ctx_3019899457, key_3019899458) {
      var Temporary1;

    var fmtRes_3019937734 = [mnewString(0)];
    fmtRes_3019937734[0].push.apply(fmtRes_3019937734[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3019937337(fmtRes_3019937734, 0, key_3019899458, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019937734[0], NTI33554449)]);
      var oHEX60gensym327_3019937742 = getAstNode_3019906180(ctx_3019899457, key_3019899458.Field0.Field0);
      if (!isSome_3003123546(oHEX60gensym327_3019937742)) Temporary1 = false; else {        var node_3019937788 = get_3003123566(oHEX60gensym327_3019937742);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3019900821(ctx_3019899457.queryCacheSymbols, node_3019937788, newTable_3019937829(32));
    }
    

  
}

function init_3019905028(result_3019905031, result_3019905031_Idx, capacity_3019905032) {
    result_3019905031[result_3019905031_Idx] = (new Map());

  
}

function init_3019905048(result_3019905051, result_3019905051_Idx, capacity_3019905052) {
    result_3019905051[result_3019905051_Idx] = (new Map());

  
}

function init_3019905068(result_3019905071, result_3019905071_Idx, capacity_3019905072) {
    result_3019905071[result_3019905071_Idx] = (new Map());

  
}

function init_3019905088(result_3019905091, result_3019905091_Idx, capacity_3019905092) {
    result_3019905091[result_3019905091_Idx] = (new Map());

  
}

function initTable_3019905108(initialSize_3019905111) {
  var result_3019905112 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_3019905114 = slotsNeeded_1308622891(chckRange(initialSize_3019905111, 0, 2147483647));
    result_3019905112.counter = 0;
    result_3019905112.data = new Array(chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_3019905114, 0, 2147483647) ; ++i) { result_3019905112.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3019905112;

}

function initTable_3019905128(initialSize_3019905131) {
  var result_3019905132 = ({data: [], counter: 0});

    var correctSizeHEX60gensym158_3019905134 = slotsNeeded_1308622891(chckRange(initialSize_3019905131, 0, 2147483647));
    result_3019905132.counter = 0;
    result_3019905132.data = new Array(chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym158_3019905134, 0, 2147483647) ; ++i) { result_3019905132.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3019905132;

}

function newContext_3019899489() {
    
function HEX3Aanonymous_3019899498(itemHEX60gensym30_3019899499) {
      var result_3019899500 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym30_3019899499) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsType.forcedCalls = addInt(ctx_3019899065.statsType.forcedCalls, 1);
        var argHEX60gensym30_3019899701 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym30_3019899499);
        var valueHEX60gensym30_3019899702 = computeTypeImpl_3019899459(ctx_3019899065, argHEX60gensym30_3019899701);
        HEX5BHEX5DHEX3D_3019899766(ctx_3019899065.queryCacheType, argHEX60gensym30_3019899701, valueHEX60gensym30_3019899702);
        result_3019899500 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym30_3019899702), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899500;

    }
    
function HEX3Aanonymous_3019899885(itemHEX60gensym31_3019899886) {
      var result_3019899887 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym31_3019899886) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValue.forcedCalls = addInt(ctx_3019899065.statsValue.forcedCalls, 1);
        var argHEX60gensym31_3019900059 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym31_3019899886);
        var valueHEX60gensym31_3019900060 = computeValueImpl_3019899462(ctx_3019899065, argHEX60gensym31_3019900059);
        HEX5BHEX5DHEX3D_3019900124(ctx_3019899065.queryCacheValue, argHEX60gensym31_3019900059, valueHEX60gensym31_3019900060);
        result_3019899887 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym31_3019900060), NTI3036676200);
        break BeforeRet;
      };

      return result_3019899887;

    }
    
function HEX3Aanonymous_3019900232(itemHEX60gensym32_3019900233) {
      var result_3019900234 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3036676336(itemHEX60gensym32_3019900233) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbol.forcedCalls = addInt(ctx_3019899065.statsSymbol.forcedCalls, 1);
        var argHEX60gensym32_3019900406 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym32_3019900233);
        var valueHEX60gensym32_3019900408 = computeSymbolImpl_3019899465(ctx_3019899065, argHEX60gensym32_3019900406);
        HEX5BHEX5DHEX3D_3019900472(ctx_3019899065.queryCacheSymbol, argHEX60gensym32_3019900406, valueHEX60gensym32_3019900408);
        result_3019900234 = nimCopy(null, fingerprint_3087009342(valueHEX60gensym32_3019900408), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900234;

    }
    
function HEX3Aanonymous_3019900580(itemHEX60gensym33_3019900581) {
      var result_3019900582 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3036676336(itemHEX60gensym33_3019900581) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbols.forcedCalls = addInt(ctx_3019899065.statsSymbols.forcedCalls, 1);
        var argHEX60gensym33_3019900754 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym33_3019900581);
        var valueHEX60gensym33_3019900757 = computeSymbolsImpl_3019899469(ctx_3019899065, argHEX60gensym33_3019900754);
        HEX5BHEX5DHEX3D_3019900821(ctx_3019899065.queryCacheSymbols, argHEX60gensym33_3019900754, valueHEX60gensym33_3019900757);
        result_3019900582 = nimCopy(null, fingerprint_3087009003(valueHEX60gensym33_3019900757), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900582;

    }
    
function HEX3Aanonymous_3019900929(itemHEX60gensym34_3019900930) {
      var result_3019900931 = [];

      BeforeRet: {
        if (!(contains_3019899577(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,105,100,97,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym34_3019900930) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsValidation.forcedCalls = addInt(ctx_3019899065.statsValidation.forcedCalls, 1);
        var argHEX60gensym34_3019901103 = HEX5BHEX5D_3019899687(ctx_3019899065.itemsAstNode, itemHEX60gensym34_3019900930);
        var valueHEX60gensym34_3019901104 = computeValidationImpl_3019899474(ctx_3019899065, argHEX60gensym34_3019901103);
        HEX5BHEX5DHEX3D_3019901168(ctx_3019899065.queryCacheValidation, argHEX60gensym34_3019901103, valueHEX60gensym34_3019901104);
        result_3019900931 = nimCopy(null, fingerprint_3087010815(valueHEX60gensym34_3019901104), NTI3036676200);
        break BeforeRet;
      };

      return result_3019900931;

    }
    
function HEX3Aanonymous_3019901285(itemHEX60gensym35_3019901286) {
      var result_3019901287 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym35_3019901286) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolType.forcedCalls = addInt(ctx_3019899065.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym35_3019901477 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym35_3019901286);
        var valueHEX60gensym35_3019901478 = computeSymbolTypeImpl_3019899477(ctx_3019899065, argHEX60gensym35_3019901477);
        HEX5BHEX5DHEX3D_3019901542(ctx_3019899065.queryCacheSymbolType, argHEX60gensym35_3019901477, valueHEX60gensym35_3019901478);
        result_3019901287 = nimCopy(null, fingerprint_3087008357(valueHEX60gensym35_3019901478), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901287;

    }
    
function HEX3Aanonymous_3019901661(itemHEX60gensym36_3019901662) {
      var result_3019901663 = [];

      BeforeRet: {
        if (!(contains_3019901364(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3036676336(itemHEX60gensym36_3019901662) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsSymbolValue.forcedCalls = addInt(ctx_3019899065.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym36_3019901835 = HEX5BHEX5D_3019901463(ctx_3019899065.itemsSymbol, itemHEX60gensym36_3019901662);
        var valueHEX60gensym36_3019901836 = computeSymbolValueImpl_3019899480(ctx_3019899065, argHEX60gensym36_3019901835);
        HEX5BHEX5DHEX3D_3019901900(ctx_3019899065.queryCacheSymbolValue, argHEX60gensym36_3019901835, valueHEX60gensym36_3019901836);
        result_3019901663 = nimCopy(null, fingerprint_3087008538(valueHEX60gensym36_3019901836), NTI3036676200);
        break BeforeRet;
      };

      return result_3019901663;

    }
    
function HEX3Aanonymous_3019902008(itemHEX60gensym37_3019902009) {
      var result_3019902010 = [];

      BeforeRet: {
        if (!(contains_3019902087(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3036676336(itemHEX60gensym37_3019902009) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsFunctionExecution.forcedCalls = addInt(ctx_3019899065.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym37_3019902209 = HEX5BHEX5D_3019902186(ctx_3019899065.itemsFunctionExecutionContext, itemHEX60gensym37_3019902009);
        var valueHEX60gensym37_3019902210 = computeFunctionExecutionImpl_3019899483(ctx_3019899065, argHEX60gensym37_3019902209);
        HEX5BHEX5DHEX3D_3019902274(ctx_3019899065.queryCacheFunctionExecution, argHEX60gensym37_3019902209, valueHEX60gensym37_3019902210);
        result_3019902010 = nimCopy(null, [], NTI3019900729);
        break BeforeRet;
      };

      return result_3019902010;

    }
    
function HEX3Aanonymous_3019902397(itemHEX60gensym38_3019902398) {
      var result_3019902399 = [];

      BeforeRet: {
        if (!(contains_3019902476(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3036676336(itemHEX60gensym38_3019902398) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3019899065.statsNodeLayout.forcedCalls = addInt(ctx_3019899065.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym38_3019902598 = HEX5BHEX5D_3019902575(ctx_3019899065.itemsNodeLayoutInput, itemHEX60gensym38_3019902398);
        var valueHEX60gensym38_3019902599 = computeNodeLayoutImpl_3019899486(ctx_3019899065, argHEX60gensym38_3019902598);
        HEX5BHEX5DHEX3D_3019902663(ctx_3019899065.queryCacheNodeLayout, argHEX60gensym38_3019902598, valueHEX60gensym38_3019902599);
        result_3019902399 = nimCopy(null, [], NTI3019900968);
        break BeforeRet;
      };

      return result_3019902399;

    }
    
function HEX3Aanonymous_3019902800(keyHEX60gensym39_3019902801) {
        recoverValue_3019899447(ctx_3019899065, keyHEX60gensym39_3019902801);

      
    }
    
function HEX3Aanonymous_3019904794(keyHEX60gensym40_3019904795) {
        recoverType_3019899450(ctx_3019899065, keyHEX60gensym40_3019904795);

      
    }
    
function HEX3Aanonymous_3019904870(keyHEX60gensym41_3019904871) {
        recoverSymbol_3019899453(ctx_3019899065, keyHEX60gensym41_3019904871);

      
    }
    
function HEX3Aanonymous_3019904946(keyHEX60gensym42_3019904947) {
        recoverSymbols_3019899456(ctx_3019899065, keyHEX60gensym42_3019904947);

      
    }

  var result_3019899490 = null;

  BeforeRet: {
    var ctx_3019899065 = null;
    ctx_3019899065 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheValidation: null, updateValidation: null, statsValidation: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0.0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0.0, totalCalls: 0, forcedCalls: 0})});
    ctx_3019899065.depGraph = newDependencyGraph_3036676400();
    ctx_3019899065.dependencyStack = nimCopy(null, [], NTI3019899118);
    ctx_3019899065.updateType = HEX3Aanonymous_3019899498;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 0, [84,121,112,101]);
    init_3019899876(ctx_3019899065, "queryCacheType", 2000);
    ctx_3019899065.updateValue = HEX3Aanonymous_3019899885;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3019900223(ctx_3019899065, "queryCacheValue", 2000);
    ctx_3019899065.updateSymbol = HEX3Aanonymous_3019900232;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbol);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3019900571(ctx_3019899065, "queryCacheSymbol", 2000);
    ctx_3019899065.updateSymbols = HEX3Aanonymous_3019900580;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbols);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3019900920(ctx_3019899065, "queryCacheSymbols", 2000);
    ctx_3019899065.updateValidation = HEX3Aanonymous_3019900929;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateValidation);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 4, [86,97,108,105,100,97,116,105,111,110]);
    init_3019901276(ctx_3019899065, "queryCacheValidation", 2000);
    ctx_3019899065.updateSymbolType = HEX3Aanonymous_3019901285;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolType);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 5, [83,121,109,98,111,108,84,121,112,101]);
    init_3019901652(ctx_3019899065, "queryCacheSymbolType", 2000);
    ctx_3019899065.updateSymbolValue = HEX3Aanonymous_3019901661;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 6, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3019901999(ctx_3019899065, "queryCacheSymbolValue", 2000);
    ctx_3019899065.updateFunctionExecution = HEX3Aanonymous_3019902008;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 7, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3019902388(ctx_3019899065, "queryCacheFunctionExecution", 2000);
    ctx_3019899065.updateNodeLayout = HEX3Aanonymous_3019902397;
    ctx_3019899065.updateFunctions.push(ctx_3019899065.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3036676468(ctx_3019899065.depGraph.queryNames, 8, [78,111,100,101,76,97,121,111,117,116]);
    init_3019902786(ctx_3019899065, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 1, HEX3Aanonymous_3019902800);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 0, HEX3Aanonymous_3019904794);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 2, HEX3Aanonymous_3019904870);
    HEX5BHEX5DHEX3D_3019902865(ctx_3019899065.recoveryFunctions, 3, HEX3Aanonymous_3019904946);
    init_3019905028(ctx_3019899065, "itemsAstNode", 2000);
    init_3019905048(ctx_3019899065, "itemsNodeLayoutInput", 2000);
    init_3019905068(ctx_3019899065, "itemsSymbol", 2000);
    init_3019905088(ctx_3019899065, "itemsFunctionExecutionContext", 2000);
    ctx_3019899065.globalScope = nimCopy(ctx_3019899065.globalScope, initTable_3019905097(32), NTI3087008713);
    ctx_3019899065.enableQueryLogging = false;
    ctx_3019899065.enableExecutionLogging = false;
    ctx_3019899065.diagnosticsPerNode = nimCopy(ctx_3019899065.diagnosticsPerNode, initTable_3019905108(32), NTI3019898974);
    ctx_3019899065.diagnosticsPerQuery = nimCopy(ctx_3019899065.diagnosticsPerQuery, initTable_3019905128(32), NTI3019898991);
    result_3019899490 = ctx_3019899065;
    break BeforeRet;
  };

  return result_3019899490;

}
var executionOutput_2969567288 = [{lines: [], scroll: 0}];
var ctx_2969567289 = newContext_3019899489();
ctx_2969567289.enableLogging = false;
ctx_2969567289.enableQueryLogging = false;

function newFunctionValue_3087008482(impl_3087008483) {
  var result_3087008484 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008484 = nimCopy(result_3087008484, {kind: 4, impl: impl_3087008483, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008484;

}

function createBinaryIntOperator_2969567666(operator_2969567670) {
    
function HEX3Aanonymous_2969567672(values_2969567673) {
        var Temporary1;
        var Temporary2;

      var result_2969567674 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567673).length < 2)) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)].kind == 3)) || !((values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)].kind == 3)))) {
        result_2969567674 = nimCopy(result_2969567674, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2969567673[chckIndx(0, 0, (values_2969567673).length - 1)];
        if (ConstSet153[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2969567673[chckIndx(1, 0, (values_2969567673).length - 1)];
        if (ConstSet154[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2969567674 = nimCopy(result_2969567674, {kind: 3, intValue: operator_2969567670(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567674;

    }

  var result_2969567671 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567671 = nimCopy(result_2969567671, newFunctionValue_3087008482(HEX3Aanonymous_2969567672), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567671;

}

function createUnityIntOperator_2969567686(operator_2969567689) {
    
function HEX3Aanonymous_2969567691(values_2969567692) {
        var Temporary1;

      var result_2969567693 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2969567692).length < 1)) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2969567697 = nimCopy(null, values_2969567692[chckIndx(0, 0, (values_2969567692).length - 1)], NTI3087007751);
        if (!((value_2969567697.kind == 3))) {
        result_2969567693 = nimCopy(result_2969567693, errorValue_3087008442(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2969567697;
        if (ConstSet155[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2969567693 = nimCopy(result_2969567693, {kind: 3, intValue: operator_2969567689(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2969567693;

    }

  var result_2969567690 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567690 = nimCopy(result_2969567690, newFunctionValue_3087008482(HEX3Aanonymous_2969567691), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567690;

}

function stringValue_3087008476(value_3087008477) {
  var result_3087008478 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008478 = nimCopy(result_3087008478, {kind: 2, stringValue: nimCopy(null, value_3087008477, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008478;

}

function join_2969567841(a_2969567843, sep_2969567844) {
  var result_2969567845 = [];

    result_2969567845 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969567860 = 0;
      var x_2969567861 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2969569596 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969569596 < (a_2969567843).length)) break Label3;
            i_2969567860 = i_2969569596;
            x_2969567861 = nimCopy(x_2969567861, a_2969567843[chckIndx(i_2969569596, 0, (a_2969567843).length - 1)], NTI3087007751);
            if ((0 < i_2969567860)) {
            result_2969567845.push.apply(result_2969567845, sep_2969567844);;
            }
            
            result_2969567845.push.apply(result_2969567845, HEX24_3087008498(x_2969567861));;
            i_2969569596 = addInt(i_2969569596, 1);
          }
      };
    };

  return result_2969567845;

}

function delete_2969567879(s_2969567881, s_2969567881_Idx, slice_2969567882) {
    if (!((((slice_2969567882.a < (s_2969567881[s_2969567881_Idx]).length) && (0 <= slice_2969567882.a)) && (slice_2969567882.b < (s_2969567881[s_2969567881_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2969567882, NTI805306392), Field1: (s_2969567881[s_2969567881_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2969567882.a <= slice_2969567882.b)) {
    var n_2969567929 = addInt(subInt(slice_2969567882.b, slice_2969567882.a), 1);
    var first_2969567930 = slice_2969567882.a;
    s_2969567881[s_2969567881_Idx].splice(first_2969567930, n_2969567929);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2969567862(self_2969567864, line_2969567865, color_2969567866) {
    if ((1500 <= (self_2969567864.lines).length)) {
    delete_2969567879(self_2969567864, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969567864.lines).length, 1000)));
    }
    
    if ((0 < self_2969567864.scroll)) {
    self_2969567864.scroll = addInt(self_2969567864.scroll, 1);
    }
    
    self_2969567864.lines.push({Field0: nimCopy(null, line_2969567865, NTI33554449), Field1: color_2634023294(color_2969567866)});;

  
}

function typeType_3087008186() {
  var result_3087008187 = null;

    result_3087008187 = {kind: 6, mHash: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008187;

}

function typeValue_3087008479(typ_3087008480) {
  var result_3087008481 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008481 = nimCopy(result_3087008481, {kind: 6, typ: typ_3087008480, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008481;

}

function HEX3Aanonymous_2969567747(a_2969567748, b_2969567749) {
  var result_2969567750 = 0;

    result_2969567750 = addInt(a_2969567748, b_2969567749);

  return result_2969567750;

}

function HEX3Aanonymous_2969567752(a_2969567753, b_2969567754) {
  var result_2969567755 = 0;

    result_2969567755 = subInt(a_2969567753, b_2969567754);

  return result_2969567755;

}

function HEX3Aanonymous_2969567757(a_2969567758, b_2969567759) {
  var result_2969567760 = 0;

    result_2969567760 = mulInt(a_2969567758, b_2969567759);

  return result_2969567760;

}

function HEX3Aanonymous_2969567762(a_2969567763, b_2969567764) {
  var result_2969567765 = 0;

    result_2969567765 = divInt(a_2969567763, b_2969567764);

  return result_2969567765;

}

function HEX3Aanonymous_2969567767(a_2969567768, b_2969567769) {
  var result_2969567770 = 0;

    result_2969567770 = modInt(a_2969567768, b_2969567769);

  return result_2969567770;

}

function HEX3Aanonymous_2969567772(a_2969567773) {
  var result_2969567774 = 0;

    result_2969567774 = negInt(a_2969567773);

  return result_2969567774;

}

function HEX3Aanonymous_2969567776(a_2969567777) {
    var Temporary1;

  var result_2969567778 = 0;

    if (!((a_2969567777 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2969567778 = Temporary1;

  return result_2969567778;

}

function HEX3Aanonymous_2969567780(a_2969567781, b_2969567782) {
    var Temporary1;

  var result_2969567783 = 0;

    if ((a_2969567781 < b_2969567782)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567783 = Temporary1;

  return result_2969567783;

}

function HEX3Aanonymous_2969567785(a_2969567786, b_2969567787) {
    var Temporary1;

  var result_2969567788 = 0;

    if ((a_2969567786 <= b_2969567787)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567788 = Temporary1;

  return result_2969567788;

}

function HEX3Aanonymous_2969567790(a_2969567791, b_2969567792) {
    var Temporary1;

  var result_2969567793 = 0;

    if ((b_2969567792 < a_2969567791)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567793 = Temporary1;

  return result_2969567793;

}

function HEX3Aanonymous_2969567795(a_2969567796, b_2969567797) {
    var Temporary1;

  var result_2969567798 = 0;

    if ((b_2969567797 <= a_2969567796)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567798 = Temporary1;

  return result_2969567798;

}

function HEX3Aanonymous_2969567800(a_2969567801, b_2969567802) {
    var Temporary1;

  var result_2969567803 = 0;

    if ((a_2969567801 == b_2969567802)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567803 = Temporary1;

  return result_2969567803;

}

function HEX3Aanonymous_2969567805(a_2969567806, b_2969567807) {
    var Temporary1;

  var result_2969567808 = 0;

    if (!((a_2969567806 == b_2969567807))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567808 = Temporary1;

  return result_2969567808;

}

function HEX3Aanonymous_2969567810(a_2969567811, b_2969567812) {
    var Temporary1;

  var result_2969567813 = 0;

    if ((!((a_2969567811 == 0)) && !((b_2969567812 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567813 = Temporary1;

  return result_2969567813;

}

function HEX3Aanonymous_2969567815(a_2969567816, b_2969567817) {
    var Temporary1;

  var result_2969567818 = 0;

    if ((!((a_2969567816 == 0)) || !((b_2969567817 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2969567818 = Temporary1;

  return result_2969567818;

}

function HEX3Aanonymous_2969567820(a_2969567821, b_2969567822) {
    var Temporary1;

  var result_2969567823 = 0;

    if ((a_2969567821 < b_2969567822)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2969567822 < a_2969567821)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2969567823 = Temporary1;

  return result_2969567823;

}

function HEX3Aanonymous_2969567825(values_2969567826) {
    var Temporary1;

  var result_2969567827 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2969567826).length < 2)) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2969567831 = nimCopy(null, values_2969567826[chckIndx(0, 0, (values_2969567826).length - 1)], NTI3087007751);
    var rightValue_2969567832 = nimCopy(null, values_2969567826[chckIndx(1, 0, (values_2969567826).length - 1)], NTI3087007751);
    if (!((leftValue_2969567831.kind == 2))) {
    result_2969567827 = nimCopy(result_2969567827, errorValue_3087008442(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2969567831;
    if (ConstSet156[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2969567827 = nimCopy(result_2969567827, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008498(rightValue_2969567832) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2969567827;

}

function HEX3Aanonymous_2969567838(values_2969567839) {
  var result_2969567840 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2969567840 = nimCopy(result_2969567840, stringValue_3087008476(join_2969567841(values_2969567839, [])), NTI3087007751);
    addOutput_2969567862(executionOutput_2969567288[0], HEX24_3087008498(result_2969567840), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008498(result_2969567840)]);
    result_2969567840 = nimCopy(result_2969567840, voidValue_3087008471(), NTI3087007751);
    break BeforeRet;
  };

  return result_2969567840;

}

function HEX3Aanonymous_2969567949(values_2969567952) {
  var result_2969567955 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2969567955 = nimCopy(result_2969567955, stringValue_3087008476(join_2969567841(values_2969567952, [])), NTI3087007751);

  return result_2969567955;

}
var typeAddIntInt_2969567706 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeSubIntInt_2969567711 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeMulIntInt_2969567716 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeDivIntInt_2969567721 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeModIntInt_2969567726 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var typeAddStringInt_2969567731 = newFunctionType_3087008173([stringType_3087008171(), intType_3087008169()], stringType_3087008171());
var typeNegInt_2969567736 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeNotInt_2969567741 = newFunctionType_3087008173([intType_3087008169()], intType_3087008169());
var typeFnIntIntInt_2969567746 = newFunctionType_3087008173([intType_3087008169(), intType_3087008169()], intType_3087008169());
var funcAddIntInt_2969567751 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567747);
var funcSubIntInt_2969567756 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567752);
var funcMulIntInt_2969567761 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567757);
var funcDivIntInt_2969567766 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567762);
var funcModIntInt_2969567771 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567767);
var funcNegInt_2969567775 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567772);
var funcNotInt_2969567779 = createUnityIntOperator_2969567686(HEX3Aanonymous_2969567776);
var funcLessIntInt_2969567784 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567780);
var funcLessEqualIntInt_2969567789 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567785);
var funcGreaterIntInt_2969567794 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567790);
var funcGreaterEqualIntInt_2969567799 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567795);
var funcEqualIntInt_2969567804 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567800);
var funcNotEqualIntInt_2969567809 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567805);
var funcAndIntInt_2969567814 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567810);
var funcOrIntInt_2969567819 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567815);
var funcOrderIntInt_2969567824 = createBinaryIntOperator_2969567666(HEX3Aanonymous_2969567820);
var funcAddStringInt_2969567837 = newFunctionValue_3087008482(HEX3Aanonymous_2969567825);
var funcPrintAny_2969567948 = newFunctionValue_3087008482(HEX3Aanonymous_2969567838);
var funcBuildStringAny_2969567960 = newFunctionValue_3087008482(HEX3Aanonymous_2969567949);
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAdd_2986344451, {id: nimCopy(null, IdAdd_2986344451, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2969567706, value: nimCopy(null, funcAddIntInt_2969567751, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdSub_2986344452, {id: nimCopy(null, IdSub_2986344452, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2969567711, value: nimCopy(null, funcSubIntInt_2969567756, NTI3087007751), operatorNotation: 3, precedence: 10, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMul_2986344453, {id: nimCopy(null, IdMul_2986344453, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2969567716, value: nimCopy(null, funcMulIntInt_2969567761, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdDiv_2986344454, {id: nimCopy(null, IdDiv_2986344454, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2969567721, value: nimCopy(null, funcDivIntInt_2969567766, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdMod_2986344455, {id: nimCopy(null, IdMod_2986344455, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2969567726, value: nimCopy(null, funcModIntInt_2969567771, NTI3087007751), operatorNotation: 3, precedence: 20, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNegate_2986344456, {id: nimCopy(null, IdNegate_2986344456, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2969567736, value: nimCopy(null, funcNegInt_2969567775, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNot_2986344457, {id: nimCopy(null, IdNot_2986344457, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2969567741, value: nimCopy(null, funcNotInt_2969567779, NTI3087007751), operatorNotation: 1, mHash: 0, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAppendString_2986344459, {id: nimCopy(null, IdAppendString_2986344459, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2969567731, value: nimCopy(null, funcAddStringInt_2969567837, NTI3087007751), operatorNotation: 3, precedence: 0, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLess_2986344463, {id: nimCopy(null, IdLess_2986344463, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessIntInt_2969567784, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdLessEqual_2986344464, {id: nimCopy(null, IdLessEqual_2986344464, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcLessEqualIntInt_2969567789, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreater_2986344465, {id: nimCopy(null, IdGreater_2986344465, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterIntInt_2969567794, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdGreaterEqual_2986344466, {id: nimCopy(null, IdGreaterEqual_2986344466, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcGreaterEqualIntInt_2969567799, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdEqual_2986344467, {id: nimCopy(null, IdEqual_2986344467, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcEqualIntInt_2969567804, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdNotEqual_2986344468, {id: nimCopy(null, IdNotEqual_2986344468, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcNotEqualIntInt_2969567809, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdAnd_2986344469, {id: nimCopy(null, IdAnd_2986344469, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcAndIntInt_2969567814, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOr_2986344470, {id: nimCopy(null, IdOr_2986344470, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrIntInt_2969567819, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdOrder_2986344471, {id: nimCopy(null, IdOrder_2986344471, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2969567746, value: nimCopy(null, funcOrderIntInt_2969567824, NTI3087007751), operatorNotation: 3, precedence: 5, mHash: 0, node: null});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdInt_2986344460, {id: nimCopy(null, IdInt_2986344460, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(intType_3087008169()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdString_2986344461, {id: nimCopy(null, IdString_2986344461, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(stringType_3087008171()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdVoid_2986344462, {id: nimCopy(null, IdVoid_2986344462, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3087008186(), value: typeValue_3087008479(voidType_3087008167()), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdPrint_2986344450, {id: nimCopy(null, IdPrint_2986344450, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], voidType_3087008167()), value: nimCopy(null, funcPrintAny_2969567948, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3019938028(ctx_2969567289.globalScope, IdBuildString_2986344472, {id: nimCopy(null, IdBuildString_2986344472, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008173([anyType_3087008188(true)], stringType_3087008171()), value: nimCopy(null, funcBuildStringAny_2969567960, NTI3087007751), mHash: 0, node: null, operatorNotation: 0, precedence: 0});
Label153: {
  var symbol_2969569501 = [null];
  var L_2969569588 = len_3019954306(ctx_2969567289.globalScope);
  Label154: {
    var h_2969569590 = 0;
    var colontmp__2969569591 = 0;
    colontmp__2969569591 = (ctx_2969567289.globalScope.data).length - 1;
    var res_2969569592 = 0;
    Label155: {
        Label156: while (true) {
        if (!(res_2969569592 <= colontmp__2969569591)) break Label156;
          h_2969569590 = res_2969569592;
          if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
          symbol_2969569501[0] = ctx_2969567289.globalScope.data[chckIndx(h_2969569590, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969569501[0]);
          if (!((len_3019954306(ctx_2969567289.globalScope) == L_2969569588))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2969569592 = addInt(res_2969569592, 1);
        }
    };
  };
};

function isEditing_2969575151(self_2969575152) {
  var result_2969575153 = false;

    result_2969575153 = !((self_2969575152.textEditor == null));

  return result_2969575153;

}

function node_2969569752(editor_2969569753) {
  var result_2969569754 = null;

  BeforeRet: {
    result_2969569754 = editor_2969569753.selectedNode;
    break BeforeRet;
  };

  return result_2969569754;

}

function newSeq_2969570872(len_2969570874) {
  var result_2969570875 = [];

    result_2969570875 = new Array(len_2969570874); for (var i = 0 ; i < len_2969570874 ; ++i) { result_2969570875[i] = null; }
  return result_2969570875;

}

function expandIfNeeded_2969570862(deq_2969570864) {
              var Temporary5;
    var Temporary6;

    if ((deq_2969570864.mask == 0)) {
    var correctSizeHEX60gensym42_2969570866 = nextPowerOfTwo_872415437(4);
    deq_2969570864.mask = subInt(correctSizeHEX60gensym42_2969570866, 1);
    deq_2969570864.data = new Array(chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2969570866, 0, 2147483647) ; ++i) { deq_2969570864.data[i] = null; }    }
    
    var cap_2969570871 = addInt(deq_2969570864.mask, 1);
    if ((cap_2969570871 <= deq_2969570864.count)) {
    var n_2969570880 = newSeq_2969570872(chckRange(mulInt(cap_2969570871, 2), 0, 2147483647));
    var i_2969570881 = 0;
    Label1: {
      var x_2969570891 = null;
      var x_2969570891_Idx = 0;
      var i_2969578928 = deq_2969570864.head;
      Label2: {
        var c_2969578930 = 0;
        var i_2969578931 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2969578931 < deq_2969570864.count)) break Label4;
              c_2969578930 = i_2969578931;
              x_2969570891 = deq_2969570864.data; x_2969570891_Idx = chckIndx(i_2969578928, 0, (deq_2969570864.data).length - 1);
              Temporary5 = x_2969570891[x_2969570891_Idx];
              x_2969570891[x_2969570891_Idx] = genericReset(x_2969570891[x_2969570891_Idx], NTI3003121668);
              n_2969570880[chckIndx(i_2969570881, 0, (n_2969570880).length - 1)] = Temporary5;
              i_2969570881 = addInt(i_2969570881, 1);
              i_2969578928 = (addInt(i_2969578928, 1) & deq_2969570864.mask);
              i_2969578931 = addInt(i_2969578931, 1);
            }
        };
      };
    };
    Temporary6 = n_2969570880;
    n_2969570880 = genericReset(n_2969570880, NTI2969569217);
    deq_2969570864.data = nimCopy(null, Temporary6, NTI2969569217);
    deq_2969570864.mask = subInt(mulInt(cap_2969570871, 2), 1);
    deq_2969570864.tail = deq_2969570864.count;
    deq_2969570864.head = 0;
    }
    

  
}

function addLast_2969570853(deq_2969570855, item_2969570856) {
    expandIfNeeded_2969570862(deq_2969570855);
    deq_2969570855.count = addInt(deq_2969570855.count, 1);
    deq_2969570855.data[chckIndx(deq_2969570855.tail, 0, (deq_2969570855.data).length - 1)] = item_2969570856;
    deq_2969570855.tail = (addInt(deq_2969570855.tail, 1) & deq_2969570855.mask);

  
}

function len_2969570994(deq_2969570996) {
  var result_2969570997 = 0;

    result_2969570997 = deq_2969570996.count;

  return result_2969570997;

}

function popFirst_2969571003(deq_2969571005) {
    var Temporary1;

  var result_2969571006 = null;

    if ((deq_2969571005.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571005.count = subInt(deq_2969571005.count, 1);
    Temporary1 = deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)];
    deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)] = genericReset(deq_2969571005.data[chckIndx(deq_2969571005.head, 0, (deq_2969571005.data).length - 1)], NTI3003121668);
    result_2969571006 = Temporary1;
    deq_2969571005.head = (addInt(deq_2969571005.head, 1) & deq_2969571005.mask);

  return result_2969571006;

}

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet157[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818583615(editor_2818583617, path_2818583618, default_2818583619) {
  var result_2818583624 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818583617 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2818583635 = HEX7BHEX7D_1627393316(editor_2818583617.options, nsuSplitString(path_2818583618, [46], -1));
      if ((nodeHEX60gensym165_2818583635 == null)) {
      result_2818583624 = default_2818583619;
      break BeforeRet;
      }
      
    };
    result_2818583624 = getBool_1627390147(nodeHEX60gensym165_2818583635, default_2818583619);
    break BeforeRet;
  };

  return result_2818583624;

}

function hasKey_2969569869(t_2969569872, key_2969569873) {
  var result_2969569874 = false;

    var hc_2969569875 = [0];
    result_2969569874 = (0 <= rawGet_3137340002(t_2969569872, key_2969569873, hc_2969569875, 0));

  return result_2969569874;

}

function contains_2969569863(t_2969569866, key_2969569867) {
  var result_2969569868 = false;

  BeforeRet: {
    result_2969569868 = hasKey_2969569869(t_2969569866, key_2969569867);
    break BeforeRet;
  };

  return result_2969569868;

}

function HEX5BHEX5D_2969569959(t_2969569962, key_2969569963) {
  var result_2969569964 = null;

    var hcHEX60gensym22_2969569965 = [0];
    var indexHEX60gensym22_2969569972 = rawGet_3137340002(t_2969569962, key_2969569963, hcHEX60gensym22_2969569965, 0);
    if ((0 <= indexHEX60gensym22_2969569972)) {
    result_2969569964 = t_2969569962.data[chckIndx(indexHEX60gensym22_2969569972, 0, (t_2969569962.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_2969569963);
    }
    

  return result_2969569964;

}

function xyHEX3D_2147483683(rect_2147483684, v_2147483685) {
    rect_2147483684.x = v_2147483685.x;
    rect_2147483684.y = v_2147483685.y;

  
}

function HEX2B_2147484403(aHEX60gensym72_2147484405, bHEX60gensym72_2147484406) {
  var result_2147484407 = ({x: 0.0, y: 0.0});

    result_2147484407 = nimCopy(result_2147484407, {x: (aHEX60gensym72_2147484405.x + bHEX60gensym72_2147484406.x), y: (aHEX60gensym72_2147484405.y + bHEX60gensym72_2147484406.y)}, NTI2164261152);

  return result_2147484407;

}

function wh_2147483686(rect_2147483687) {
  var result_2147483688 = ({x: 0.0, y: 0.0});

    result_2147483688 = nimCopy(result_2147483688, vec2_2164261725(rect_2147483687.w, rect_2147483687.h), NTI2164261152);

  return result_2147483688;

}

function absoluteBounds_3087009545(node_3087009546) {
  var result_3087009547 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009546.parent == null)) {
    result_3087009547 = nimCopy(result_3087009547, node_3087009546.bounds, NTI2147483653);
    }
    else {
      result_3087009547 = nimCopy(result_3087009547, rect_2147483672(HEX2B_2147484403(xy_2147483680(absoluteBounds_3087009545(node_3087009546.parent)), xy_2147483680(node_3087009546.bounds)), wh_2147483686(node_3087009546.bounds)), NTI2147483653);
    }
    

  return result_3087009547;

}

function absoluteBounds_3087009583(nodeRange_3087009584) {
  var result_3087009585 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009585[0] = nimCopy(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(nodeRange_3087009584.first, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds, NTI2147483653);
    Label1: {
      var i_3087009590 = 0;
      var colontmp__2969578947 = 0;
      colontmp__2969578947 = addInt(nodeRange_3087009584.first, 1);
      var i_2969578948 = colontmp__2969578947;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578948 < nodeRange_3087009584.last)) break Label3;
            i_3087009590 = i_2969578948;
            result_3087009585[0] = nimCopy(result_3087009585[0], or_2147483728(result_3087009585[0], nodeRange_3087009584.parent.children[chckIndx(i_3087009590, 0, (nodeRange_3087009584.parent.children).length - 1)].bounds), NTI2147483653);
            i_2969578948 = addInt(i_2969578948, 1);
          }
      };
    };
    xyHEX3D_2147483683(result_3087009585[0], HEX2B_2147484403(xy_2147483680(result_3087009585[0]), xy_2147483680(absoluteBounds_3087009545(nodeRange_3087009584.parent))));

  return result_3087009585[0];

}

function and_2147483732(a_2147483733, b_2147483734) {
  var result_2147483735 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2147483735.x = max_33555642(a_2147483733.x, b_2147483734.x);
    result_2147483735.y = max_33555642(a_2147483733.y, b_2147483734.y);
    result_2147483735.w = (min_33555609((a_2147483733.x + a_2147483733.w), (b_2147483734.x + b_2147483734.w)) - result_2147483735.x);
    result_2147483735.h = (min_33555609((a_2147483733.y + a_2147483733.h), (b_2147483734.y + b_2147483734.h)) - result_2147483735.y);

  return result_2147483735;

}

function intersects_2130706609(a_2130706610, b_2130706611) {
  var result_2130706612 = false;

  BeforeRet: {
    var intersection_2130706613 = and_2147483732(a_2130706610, b_2130706611);
    result_2130706612 = ((0.0 < intersection_2130706613.w) && (0.0 < intersection_2130706613.h));
    break BeforeRet;
  };

  return result_2130706612;

}

function subbase_3003121765(node_3003121766) {
  var result_3003121767 = null;

  BeforeRet: {
    if ((node_3003121766.parent.parent == null)) {
    result_3003121767 = node_3003121766;
    break BeforeRet;
    }
    
    result_3003121767 = subbase_3003121765(node_3003121766.parent);
    break BeforeRet;
  };

  return result_3003121767;

}

function values_3019906757(t_3019906760) {
  var result_3019906761 = [];

    var iter_3019906766 = t_3019906760.values();
    for (var i in iter_3019906766) {result_3019906761.push(i);}

  return result_3019906761;

}

function hash_3087010010(input_3087010011) {
  var result_3087010012 = 0;

  BeforeRet: {
    if ((input_3087010011.mHash == 0)) {
    input_3087010011.mHash = HEX21HEX26_1325400067(hash_3003124022(input_3087010011.node), hash_2046820630(input_3087010011.selectedNode));
    input_3087010011.mHash = HEX21HEX24_1325400082(input_3087010011.mHash);
    }
    
    result_3087010012 = input_3087010011.mHash;
    break BeforeRet;
  };

  return result_3087010012;

}

function len_3087010148(t_3087010151) {
  var result_3087010152 = 0;

    result_3087010152 = t_3087010151.counter;

  return result_3087010152;

}

function HEX3DHEX3D_3087009833(x_3087009835, y_3087009836) {
  var result_3087009837 = false;

  BeforeRet: {
    var sameObject_3087009844 = false;
    sameObject_3087009844 = x_3087009835 === y_3087009836
    if (sameObject_3087009844) {
    result_3087009837 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009835).length == (y_3087009836).length))) {
    result_3087009837 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009858 = 0;
      var colontmp__2969578968 = 0;
      colontmp__2969578968 = subInt((x_3087009835).length, 1);
      var res_2969578969 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578969 <= colontmp__2969578968)) break Label3;
            i_3087009858 = res_2969578969;
            if (!(eqStrings(x_3087009835[chckIndx(i_3087009858, 0, (x_3087009835).length - 1)], y_3087009836[chckIndx(i_3087009858, 0, (y_3087009836).length - 1)]))) {
            result_3087009837 = false;
            break BeforeRet;
            }
            
            res_2969578969 = addInt(res_2969578969, 1);
          }
      };
    };
    result_3087009837 = true;
    break BeforeRet;
  };

  return result_3087009837;

}

function HEX3DHEX3D_2785018441(x_2785018443, y_2785018444) {
  var result_2785018445 = false;

  BeforeRet: {
    if (!((x_2785018443.x == y_2785018444.x))) {
    result_2785018445 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018443.y == y_2785018444.y))) {
    result_2785018445 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018443.w == y_2785018444.w))) {
    result_2785018445 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018443.h == y_2785018444.h))) {
    result_2785018445 = false;
    break BeforeRet;
    }
    
    result_2785018445 = true;
    break BeforeRet;
  };

  return result_2785018445;

}

function HEX3DHEX3D_3087009871(x_3087009873, y_3087009874) {
  var result_3087009875 = false;

  BeforeRet: {
    var sameObject_3087009882 = false;
    sameObject_3087009882 = x_3087009873 === y_3087009874
    if (sameObject_3087009882) {
    result_3087009875 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009873).length == (y_3087009874).length))) {
    result_3087009875 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009896 = 0;
      var colontmp__2969578972 = 0;
      colontmp__2969578972 = subInt((x_3087009873).length, 1);
      var res_2969578973 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969578973 <= colontmp__2969578972)) break Label3;
            i_3087009896 = res_2969578973;
            if (!(HEX3DHEX3D_3087009816(x_3087009873[chckIndx(i_3087009896, 0, (x_3087009873).length - 1)], y_3087009874[chckIndx(i_3087009896, 0, (y_3087009874).length - 1)]))) {
            result_3087009875 = false;
            break BeforeRet;
            }
            
            res_2969578973 = addInt(res_2969578973, 1);
          }
      };
    };
    result_3087009875 = true;
    break BeforeRet;
  };

  return result_3087009875;

}

function HEX3DHEX3D_3087009816(a_3087009817, b_3087009818) {
  var result_3087009819 = false;

  BeforeRet: {
    if ((a_3087009817 == null)) {
    result_3087009819 = (b_3087009818 == null);
    break BeforeRet;
    }
    
    if ((b_3087009818 == null)) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009817.text, b_3087009818.text))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.node == b_3087009818.node))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009833(a_3087009817.colors, b_3087009818.colors))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2785018441(a_3087009817.bounds, b_3087009818.bounds))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.render == b_3087009818.render))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.widgetTemplate == b_3087009818.widgetTemplate))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009817.cloneWidget == b_3087009818.cloneWidget))) {
    result_3087009819 = false;
    break BeforeRet;
    }
    
    result_3087009819 = HEX3DHEX3D_3087009871(a_3087009817.children, b_3087009818.children);
    break BeforeRet;
  };

  return result_3087009819;

}

function getOrDefault_3087010737(t_3087010740, key_3087010741) {
  var result_3087010742 = null;

    var hcHEX60gensym53_3087010745 = [0];
    var indexHEX60gensym53_3087010752 = rawGet_3087010450(t_3087010740, key_3087010741, hcHEX60gensym53_3087010745, 0);
    if ((0 <= indexHEX60gensym53_3087010752)) {
    result_3087010742 = t_3087010740.data[chckIndx(indexHEX60gensym53_3087010752, 0, (t_3087010740.data).length - 1)].Field2;
    }
    

  return result_3087010742;

}

function HEX3DHEX3D_3087010092(s_3087010095, t_3087010096) {
  var result_3087010097 = false;

  BeforeRet: {
    if ((s_3087010095.counter == t_3087010096.counter)) {
    Label1: {
      var keyHEX60gensym47_3087010401 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym47_3087010402 = null;
      var L_2969578961 = len_3087010148(s_3087010095);
      Label2: {
        var h_2969578963 = 0;
        var colontmp__2969578964 = 0;
        colontmp__2969578964 = (s_3087010095.data).length - 1;
        var res_2969578965 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969578965 <= colontmp__2969578964)) break Label4;
              h_2969578963 = res_2969578965;
              if (isFilled_1308622880(s_3087010095.data[chckIndx(h_2969578963, 0, (s_3087010095.data).length - 1)].Field0)) {
              keyHEX60gensym47_3087010401 = nimCopy(keyHEX60gensym47_3087010401, s_3087010095.data[chckIndx(h_2969578963, 0, (s_3087010095.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym47_3087010402 = s_3087010095.data[chckIndx(h_2969578963, 0, (s_3087010095.data).length - 1)].Field2;
              if (!(hasKey_3087010443(t_3087010096, keyHEX60gensym47_3087010401))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009816(getOrDefault_3087010737(t_3087010096, keyHEX60gensym47_3087010401), valHEX60gensym47_3087010402))) {
              result_3087010097 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010148(s_3087010095) == L_2969578961))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969578965 = addInt(res_2969578965, 1);
            }
        };
      };
    };
    result_3087010097 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010097;

}

function HEX3DHEX3D_3087010013(a_3087010014, b_3087010015) {
  var result_3087010016 = false;

  BeforeRet: {
    if ((a_3087010014 == null)) {
    result_3087010016 = (b_3087010015 == null);
    break BeforeRet;
    }
    
    if ((b_3087010015 == null)) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.revision == b_3087010015.revision))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.node == b_3087010015.node))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820626(a_3087010014.selectedNode, b_3087010015.selectedNode))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010092(a_3087010014.replacements, b_3087010015.replacements))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.renderDivisionVertically == b_3087010015.renderDivisionVertically))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.inlineBlocks == b_3087010015.inlineBlocks))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    if (!((a_3087010014.indent == b_3087010015.indent))) {
    result_3087010016 = false;
    break BeforeRet;
    }
    
    result_3087010016 = true;
    break BeforeRet;
  };

  return result_3087010016;

}

function getItem_3019906744(selfHEX60gensym83_3019906745) {
  var result_3019906746 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)) {
    selfHEX60gensym83_3019906745.id = nimCopy(selfHEX60gensym83_3019906745.id, newId_2046820597(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820626(selfHEX60gensym83_3019906745.id, null_2046820646)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,57,50,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,51,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2969578975 = nimCopy(null, selfHEX60gensym83_3019906745.id, NTI2046820355);
    var colontmp__2969578976 = 1;
    result_3019906746 = nimCopy(result_3019906746, {Field0: nimCopy(null, colontmp__2969578975, NTI2046820355), Field1: colontmp__2969578976}, NTI3036676201);
    break BeforeRet;
  };

  return result_3019906746;

}

function HEX5BHEX5DHEX3D_3019906924(t_3019906927, key_3019906928, val_3019906929) {
    t_3019906927.set(mapKeyJs_3019899588(key_3019906928), val_3019906929);

  
}

function getOrCreateNodeLayoutInput_3019906753(ctxHEX60gensym84_3019906754, dataHEX60gensym84_3019906755) {
  var result_3019906756 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym84_3019906789 = null;
      var colontmp__2969578951 = [];
      colontmp__2969578951 = values_3019906757(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput);
      var i_2969578953 = 0;
      var L_2969578954 = (colontmp__2969578951).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578953 < L_2969578954)) break Label3;
            existingHEX60gensym84_3019906789 = colontmp__2969578951[chckIndx(i_2969578953, 0, (colontmp__2969578951).length - 1)];
            if (((hash_3087010010(existingHEX60gensym84_3019906789) == hash_3087010010(dataHEX60gensym84_3019906755)) && HEX3DHEX3D_3087010013(existingHEX60gensym84_3019906789, dataHEX60gensym84_3019906755))) {
            result_3019906756 = existingHEX60gensym84_3019906789;
            break BeforeRet;
            }
            
            i_2969578953 = addInt(i_2969578953, 1);
            if (!(((colontmp__2969578951).length == L_2969578954))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var itemHEX60gensym84_3019906790 = getItem_3019906744(dataHEX60gensym84_3019906755);
    var keyHEX60gensym84_3019906791 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym84_3019906790, NTI3036676201), Field1: -1}, NTI3036676204);
    HEX5BHEX5DHEX3D_3036679291(ctxHEX60gensym84_3019906754.depGraph.changed, keyHEX60gensym84_3019906791, ctxHEX60gensym84_3019906754.depGraph.revision);
    HEX5BHEX5DHEX3D_3019906924(ctxHEX60gensym84_3019906754.itemsNodeLayoutInput, itemHEX60gensym84_3019906790, dataHEX60gensym84_3019906755);
    result_3019906756 = dataHEX60gensym84_3019906755;
    break BeforeRet;
  };

  return result_3019906756;

}

function contains_3019934605(t_3019934608, key_3019934609) {
  var result_3019934610 = false;

    result_3019934610 = t_3019934608.has(mapKeyJs_3019902675(key_3019934609));

  return result_3019934610;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2164261798(result_2164261800, result_2164261800_Idx, x_2164261801) {
    add_33556386(result_2164261800, result_2164261800_Idx, nimFloatToString_385876087(x_2164261801));

  
}

function HEX24_2164261794(x_2164261796) {
  var result_2164261797 = [[]];

    addFloat_2164261798(result_2164261797, 0, x_2164261796);

  return result_2164261797[0];

}

function HEX24_2147483713(a_2147483714) {
  var result_2147483715 = [];

    result_2147483715 = nimCopy(null, ([40] || []).concat(HEX24_2164261794(a_2147483714.x) || [],[44,32] || [],HEX24_2164261794(a_2147483714.y) || [],[58,32] || [],HEX24_2164261794(a_2147483714.w) || [],[32,120,32] || [],HEX24_2164261794(a_2147483714.h) || [],[41] || []), NTI33554449);

  return result_2147483715;

}

function collectionToString_3087009633(x_3087009635, prefix_3087009636, separator_3087009637, suffix_3087009638) {
  var result_3087009639 = [[]];

    result_3087009639[0] = nimCopy(null, prefix_3087009636, NTI33554449);
    var firstElement_3087009640 = true;
    Label1: {
      var value_3087009644 = [];
      var i_2969578982 = 0;
      var L_2969578983 = (x_3087009635).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578982 < L_2969578983)) break Label3;
            value_3087009644 = x_3087009635[i_2969578982];
            if (firstElement_3087009640) {
            firstElement_3087009640 = false;
            }
            else {
            result_3087009639[0].push.apply(result_3087009639[0], separator_3087009637);;
            }
            
            addQuoted_1593835572(result_3087009639, 0, value_3087009644);
            i_2969578982 += 1;
            if (!(((x_3087009635).length == L_2969578983))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009639[0].push.apply(result_3087009639[0], suffix_3087009638);;

  return result_3087009639[0];

}

function HEX24_3087009629(x_3087009631) {
  var result_3087009632 = [];

    result_3087009632 = nimCopy(null, collectionToString_3087009633(x_3087009631, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009632;

}

function HEX24_3087009622(vnode_3087009623) {
  var result_3087009624 = [];

    result_3087009624 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009624.push.apply(result_3087009624, (vnode_3087009623.text || []).concat([39,44,32] || []));;
    result_3087009624.push.apply(result_3087009624, (HEX24_2147483713(vnode_3087009623.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009623.node == null))) {
    result_3087009624.push.apply(result_3087009624, (HEX24_3003123671(vnode_3087009623.node) || []).concat([44,32] || []));;
    }
    
    result_3087009624.push.apply(result_3087009624, (HEX24_3087009629(vnode_3087009623.colors) || []).concat([44,32] || []));;
    result_3087009624.push.apply(result_3087009624, [41]);;

  return result_3087009624;

}

function join_3087009948(a_3087009950, sep_3087009951) {
  var result_3087009952 = [];

    result_3087009952 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009967 = 0;
      var x_3087009968 = null;
      var i_2969578979 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969578979 < (a_3087009950).length)) break Label3;
            i_3087009967 = i_2969578979;
            x_3087009968 = a_3087009950[chckIndx(i_2969578979, 0, (a_3087009950).length - 1)];
            if ((0 < i_3087009967)) {
            result_3087009952.push.apply(result_3087009952, sep_3087009951);;
            }
            
            result_3087009952.push.apply(result_3087009952, HEX24_3087009622(x_3087009968));;
            i_2969578979 = addInt(i_2969578979, 1);
          }
      };
    };

  return result_3087009952;

}

function HEX24_3087009945(nodeLayout_3087009946) {
  var result_3087009947 = [];

    result_3087009947 = nimCopy(null, join_3087009948(nodeLayout_3087009946.root.children, [10]), NTI33554449);

  return result_3087009947;

}

function HEX5BHEX5D_3019934699(t_3019934702, key_3019934703) {
  var result_3019934704 = null;

    result_3019934704 = t_3019934702.get(mapKeyJs_3019902675(key_3019934703));

  return result_3019934704;

}

function HEX24_3087009982(input_3087009983) {
  var result_3087009984 = [];

  BeforeRet: {
    var fmtRes_3087009989 = [mnewString(0)];
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.id, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008590(fmtRes_3087009989, 0, input_3087009983.node, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3036676344(fmtRes_3087009989, 0, input_3087009983.selectedNode, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2701131945(fmtRes_3087009989, 0, input_3087009983.revision, []);
    fmtRes_3087009989[0].push.apply(fmtRes_3087009989[0], [41]);;
    result_3087009984 = nimCopy(null, fmtRes_3087009989[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009984;

}

function computeNodeLayout_3019934745(ctxHEX60gensym129_3019934746, inputHEX60gensym129_3019934747, recordDependencyHEX60gensym129_3019934748) {
    var Temporary3;
    var Temporary5;

  var result_3019934749 = null;

  BeforeRet: {
++excHandler;
    try {
    try {
    var itemHEX60gensym129_3019934830 = getItem_3019906744(inputHEX60gensym129_3019934747);
    var keyHEX60gensym129_3019934831 = {Field0: nimCopy(null, itemHEX60gensym129_3019934830, NTI3036676201), Field1: 8};
    if (recordDependencyHEX60gensym129_3019934748) {
    recordDependency_3019906144(ctxHEX60gensym129_3019934746, itemHEX60gensym129_3019934830, 8);
    }
    
    var colorHEX60gensym129_3019934832 = nodeColor_3036678426(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, 0);
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3036676112[0] = addInt(currentIndent_3036676112[0], Temporary3);
    try {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(subInt(currentIndent_3036676112[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym129_3019934832, NTI3036676206), [44,32], HEX24_3036676336(itemHEX60gensym129_3019934830));
    }
    
    if ((colorHEX60gensym129_3019934832 == 2)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    }
    else {
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym129_3019934832 == 0)) {
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    if (true) {
    markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3019911565(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831, true) == 0)) {
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym129_3019934746.enableLogging) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
      if (true) {
      markRed_3036679306(ctxHEX60gensym129_3019934746.depGraph, keyHEX60gensym129_3019934831, []);
      }
      
      if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
      }
      
      if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym129_3019934832 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,56,53,55,44,32,49,51,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym129_3019934746.enableLogging && contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    rawEcho(repeat2_3036676113([124,32], chckRange(currentIndent_3036676112[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009945(HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747)));
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    force_3019908046(ctxHEX60gensym129_3019934746, keyHEX60gensym129_3019934831);
    }
    
    if (!(contains_3019934605(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009982(inputHEX60gensym129_3019934747) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3019934749 = HEX5BHEX5D_3019934699(ctxHEX60gensym129_3019934746.queryCacheNodeLayout, inputHEX60gensym129_3019934747);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym129_3019934746.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3036676112[0] = subInt(currentIndent_3036676112[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym129_3019934746.dependencyStack).length == 0)) {
    clear_3019913516(ctxHEX60gensym129_3019934746.recursiveQueries);
    }
    
    }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    log_1174405220(logger_704643272[0], 5, [getCurrentExceptionMsg_33556469()]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    if ((0 < (ctxHEX60gensym129_3019934746.dependencyStack).length)) {
    reraiseException();
    }
    
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_3019934749;

}

function prev_3003121903(node_3003121904) {
  var result_3003121906 = ({val: null});

  BeforeRet: {
    if ((node_3003121904.parent == null)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121913 = index_3003121772(node_3003121904);
    if ((i_3003121913 <= 0)) {
    result_3003121906 = nimCopy(result_3003121906, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121906 = nimCopy(result_3003121906, some_3003121890(HEX5BHEX5D_3003121748(node_3003121904.parent, subInt(i_3003121913, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121906;

}

function HEX2BHEX3D_2969570284(aHEX60gensym79_2969570286, bHEX60gensym79_2969570287) {
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "x", bHEX60gensym79_2969570287);
    HEX2BHEX3D_2147483761(aHEX60gensym79_2969570286, "y", bHEX60gensym79_2969570287);

  
}

function bounds_3087009979(nodeLayout_3087009980) {
  var result_3087009981 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009981 = nimCopy(result_3087009981, nodeLayout_3087009980.root.bounds, NTI2147483653);
    break BeforeRet;
  };

  return result_3087009981;

}

function insert_2969570296(x_2969570298, x_2969570298_Idx, item_2969570299, i_2969570300) {
    var it_2969570320 = {Field0: null, Field1: ({x: 0.0, y: 0.0})};
    x_2969570298[x_2969570298_Idx] = x_2969570298[x_2969570298_Idx] || []; x_2969570298[x_2969570298_Idx].splice(i_2969570300, 0, it_2969570320);
    x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)] = nimCopy(x_2969570298[x_2969570298_Idx][chckIndx(i_2969570300, 0, (x_2969570298[x_2969570298_Idx]).length - 1)], item_2969570299, NTI2969568663);

  
}

function next_3003121857(node_3003121858) {
  var result_3003121863 = ({val: null});

  BeforeRet: {
    if ((node_3003121858.parent == null)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var i_3003121887 = index_3003121772(node_3003121858);
    if ((subInt(len_3003121752(node_3003121858.parent), 1) <= i_3003121887)) {
    result_3003121863 = nimCopy(result_3003121863, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_3003121863 = nimCopy(result_3003121863, some_3003121890(HEX5BHEX5D_3003121748(node_3003121858.parent, addInt(i_3003121887, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_3003121863;

}

function handleSelectedNodeChanged_2969569755(editor_2969569756) {
          
function HEX3Aanonymous_2969570157(t_2969570160) {
            var result_2969570163 = ({x: 0.0, y: 0.0});

              result_2969570163 = nimCopy(result_2969570163, measureText_2768240805(gEditor.platform, t_2969570160), NTI2164261152);

            return result_2969570163;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2969570258(t_2969570261) {
            var result_2969570264 = ({x: 0.0, y: 0.0});

              result_2969570264 = nimCopy(result_2969570264, measureText_2768240805(gEditor.platform, t_2969570261), NTI2164261152);

            return result_2969570264;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2969570435(t_2969570438) {
            var result_2969570441 = ({x: 0.0, y: 0.0});

              result_2969570441 = nimCopy(result_2969570441, measureText_2768240805(gEditor.platform, t_2969570438), NTI2164261152);

            return result_2969570441;

          }
    
function HEX3Aanonymous_2969570619(t_2969570622) {
      var result_2969570625 = ({x: 0.0, y: 0.0});

        result_2969570625 = nimCopy(result_2969570625, measureText_2768240805(gEditor.platform, t_2969570622), NTI2164261152);

      return result_2969570625;

    }

  BeforeRet: {
    if ((editor_2969569756.editor == null)) {
    break BeforeRet;
    }
    
    markDirty_2415919143(editor_2969569756);
    var indent_2969569769 = getOption_2818583576(editor_2969569756.editor, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_2969569779 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_2969569789 = getOption_2818583615(editor_2969569756.editor, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var node_2969569790 = node_2969569752(editor_2969569756);
    var margin_2969569791 = (5.0 * totalLineHeight_2768240810(editor_2969569756.editor.platform));
    var foundNode_2969569792 = false;
    var i_2969569793 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label2;
          try {
          var layout_2969569803 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969569804 = nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152);
          if (contains_2969569863(layout_2969569803.nodeToVisualNode, node_2969569790.id)) {
          var visualNode_2969570062 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969569803.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570072 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570062), vec2_2164261725(0.0, offset_2969569804.y));
          if (!(intersects_2130706609(bounds_2969570072, editor_2969569756.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2969570072.y + bounds_2969570072.h) < margin_2969569791)) {
          var subbase_2969570073 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570073);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570072.y + bounds_2969570072.h) - offset_2969569804.y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570072.y)) {
          var subbase_2969570074 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570074);
          editor_2969569756.scrollOffset = ((-((bounds_2969570072.y - offset_2969569804.y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    i_2969569793 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2969569793 < (editor_2969569756.lastLayouts).length)) break Label5;
          try {
          var layout_2969570083 = editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field0;
          var offset_2969570084 = [nimCopy(null, editor_2969569756.lastLayouts[chckIndx(i_2969569793, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, NTI2164261152)];
          var targetNode_2969570085 = node_2969569790;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2969570085 == null)) && !(contains_2969569863(layout_2969570083.nodeToVisualNode, targetNode_2969570085.id)))) break Label8;
                targetNode_2969570085 = targetNode_2969570085.parent;
              }
          };
          if (!((targetNode_2969570085 == null))) {
          var input_2969570164 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(targetNode_2969570085), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570157, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570164, true);
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2969570171 = prev_3003121903(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym31_2969570171)) Temporary11 = false; else {                var prev_2969570194 = get_3003123566(oHEX60gensym31_2969570171);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2969569863(layout_2969570083.nodeToVisualNode, prev_2969570194.id);            }          if (Temporary9) {
          var input_2969570265 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570258, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570265, true);
          HEX2BHEX3D_2969570284(offset_2969570084[0], bounds_3087009979(layout_2969570083).h);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(addInt(i_2969569793, 1), 0, 2147483647));
          Label12: {
            var k_2969570337 = 0;
            var colontmp__2969578937 = 0;
            var colontmp__2969578938 = 0;
            colontmp__2969578937 = addInt(i_2969569793, 1);
            colontmp__2969578938 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578939 = colontmp__2969578937;
            Label13: {
                Label14: while (true) {
                if (!(res_2969578939 <= colontmp__2969578938)) break Label14;
                  k_2969570337 = res_2969578939;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570337, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578939 = addInt(res_2969578939, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          else {
            if (!(node_2969569790.parent == editor_2969569756.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2969570348 = next_3003121857(node_2969569790);
              if (!isSome_3003123546(oHEX60gensym34_2969570348)) Temporary17 = false; else {                var next_2969570371 = get_3003123566(oHEX60gensym34_2969570348);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2969569863(layout_2969570083.nodeToVisualNode, next_2969570371.id);            }          if (Temporary15) {
          var input_2969570442 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_3003121765(node_2969569790), selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570435, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
          layout_2969570083 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570442, true);
          insert_2969570296(editor_2969569756, "lastLayouts", {Field0: layout_2969570083, Field1: nimCopy(null, offset_2969570084[0], NTI2164261152)}, chckRange(i_2969569793, 0, 2147483647));
          Label18: {
            var k_2969570455 = 0;
            var colontmp__2969578942 = 0;
            colontmp__2969578942 = (editor_2969569756.lastLayouts).length - 1;
            var res_2969578943 = i_2969569793;
            Label19: {
                Label20: while (true) {
                if (!(res_2969578943 <= colontmp__2969578942)) break Label20;
                  k_2969570455 = res_2969578943;
                  HEX2BHEX3D_2147483761(editor_2969569756.lastLayouts[chckIndx(k_2969570455, 0, (editor_2969569756.lastLayouts).length - 1)].Field1, "y", bounds_3087009979(layout_2969570083).h);
                  res_2969578943 = addInt(res_2969578943, 1);
                }
            };
          };
          foundNode_2969569792 = true;
          }
          }}
          if ((foundNode_2969569792 && contains_2969569863(layout_2969570083.nodeToVisualNode, node_2969569790.id))) {
          var visualNode_2969570605 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570083.nodeToVisualNode, node_2969569790.id), NTI3087007774);
          var bounds_2969570615 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969570605), vec2_2164261725(0.0, offset_2969570084[0].y));
          if (!(intersects_2130706609(bounds_2969570615, rect_2147483666(0.0, 0.0, editor_2969569756.lastBounds.w, editor_2969569756.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2969570615.y + bounds_2969570615.h) < margin_2969569791)) {
          var subbase_2969570616 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570616);
          editor_2969569756.scrollOffset = (margin_2969569791 - ((bounds_2969570615.y + bounds_2969570615.h) - offset_2969570084[0].y));
          }
          else {
          if (((editor_2969569756.lastBounds.h - margin_2969569791) < bounds_2969570615.y)) {
          var subbase_2969570617 = subbase_3003121765(node_2969569790);
          editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570617);
          editor_2969569756.scrollOffset = ((-((bounds_2969570615.y - offset_2969570084[0].y)) + editor_2969569756.lastBounds.h) - margin_2969569791);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2969569793 = addInt(i_2969569793, 1);
          }
        }
    };
    var subbase_2969570618 = subbase_3003121765(node_2969569790);
    var input_2969570626 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: subbase_2969570618, selectedNode: nimCopy(null, node_2969569790.id, NTI2046820355), measureText: HEX3Aanonymous_2969570619, indent: indent_2969569769, renderDivisionVertically: verticalDivision_2969569789, inlineBlocks: inlineBlocks_2969569779, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0});
    var layout_2969570627 = computeNodeLayout_3019934745(ctx_2969567289, input_2969570626, true);
    if (contains_2969569863(layout_2969570627.nodeToVisualNode, node_2969569790.id)) {
    var visualNode_2969570773 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969570627.nodeToVisualNode, node_2969569790.id), NTI3087007774);
    var bounds_2969570774 = absoluteBounds_3087009583(visualNode_2969570773);
    editor_2969569756.previousBaseIndex = index_3003121772(subbase_2969570618);
    editor_2969569756.scrollOffset = (-(bounds_2969570774.y) + (editor_2969569756.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2969570829(editor_2969570830, node_2969570831) {
  BeforeRet: {
    if ((node_2969570831 == editor_2969570830.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2969570831.parent == null) || !((base_3003121758(node_2969570831) == editor_2969570830.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2969570830.selectedNode == null))) {
    addLast_2969570853(editor_2969570830.selectionHistory, editor_2969570830.selectedNode);
    }
    
    if ((100 < len_2969570994(editor_2969570830.selectionHistory))) {
    var _ = popFirst_2969571003(editor_2969570830.selectionHistory);
    }
    
    editor_2969570830.selectedNode = node_2969570831;
    handleSelectedNodeChanged_2969569755(editor_2969570830);
  };

  
}

function moveCursor_2969578826(self_2969578827, direction_2969578828) {
  BeforeRet: {
    if ((direction_2969578828 < 0)) {
    if (isEditing_2969575151(self_2969578827)) {
    break BeforeRet;
    }
    
    var index_2969578829 = index_3003121772(node_2969569752(self_2969578827));
    if ((0 < index_2969578829)) {
    nodeHEX3D_2969570829(self_2969578827, HEX5BHEX5D_3003121748(node_2969569752(self_2969578827).parent, subInt(index_2969578829, 1)));
    }
    
    }
    else {
      if (isEditing_2969575151(self_2969578827)) {
      break BeforeRet;
      }
      
      var index_2969578830 = index_3003121772(node_2969569752(self_2969578827));
      if (((0 <= index_2969578830) && (index_2969578830 < subInt(len_3003121752(node_2969569752(self_2969578827).parent), 1)))) {
      nodeHEX3D_2969570829(self_2969578827, HEX5BHEX5D_3003121748(node_2969569752(self_2969578827).parent, addInt(index_2969578830, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2969578822(self_2969578882, direction_2969578883) {
    moveCursor_2969578826(self_2969578882, direction_2969578883);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2969578822(this, direction_));};

function moveCursorUp_2969578992(self_2969578993) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969578993)) {
    break BeforeRet;
    }
    
    if (((!((node_2969569752(self_2969578993) == self_2969578993.document.rootNode)) && !((node_2969569752(self_2969578993).parent == self_2969578993.document.rootNode))) && !((node_2969569752(self_2969578993).parent == null)))) {
    nodeHEX3D_2969570829(self_2969578993, node_2969569752(self_2969578993).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2969578988(self_2969579033) {
    moveCursorUp_2969578992(self_2969579033);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2969578988(this));};

function moveCursorDown_2969579054(self_2969579055) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969579055)) {
    break BeforeRet;
    }
    
    if ((0 < len_3003121752(node_2969569752(self_2969579055)))) {
    nodeHEX3D_2969570829(self_2969579055, HEX5BHEX5D_3003121748(node_2969569752(self_2969579055), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2969579050(self_2969579083) {
    moveCursorDown_2969579054(self_2969579083);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2969579050(this));};

function getNextChild_2969569747(document_2969569748, node_2969569749, min_2969569750) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575787 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569749) == 0)) {
    result_2969575787 = nimCopy(result_2969575787, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575790 = node_2969569749;
      var pos_2969575791 = 0;
      var _ = pos_2969575791;
      if ((expr_2969575790.kind == 8)) {
        var oHEX60gensym128_2969575800 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569749, 0), true);
        if (!isSome_3087009356(oHEX60gensym128_2969575800)) Temporary3 = false; else {          var sym_2969575823 = get_3087009376(oHEX60gensym128_2969575800);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575823.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575823;
      if (ConstSet158[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569749) == 3)) {
        if ((min_2969569750 == 0)) {
        result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 2)) {
        result_2969575787 = nimCopy(result_2969575787, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569749) == 2)) {
        if ((min_2969569750 == 0)) {
        result_2969575787 = nimCopy(result_2969575787, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((min_2969569750 == 1)) {
        result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2969569750 < 0)) {
    result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, 0)), NTI3003121783);
    break BeforeRet;
    }
    
    if ((subInt(len_3003121752(node_2969569749), 1) <= min_2969569750)) {
    result_2969575787 = nimCopy(result_2969575787, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    result_2969575787 = nimCopy(result_2969575787, some_3003121890(HEX5BHEX5D_3003121748(node_2969569749, addInt(min_2969569750, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575787;

}

function shouldSelectNode_2969575855(node_2969575856) {
  var result_2969575857 = false;

  BeforeRet: {
    switch (node_2969575856.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2969575857 = (len_3003121752(node_2969575856) == 0);
      break BeforeRet;
      break;
    default: 
      result_2969575857 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969575857;

}

function moveCursorNext_2969579104(self_2969579105) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579105)) {
    break BeforeRet;
    }
    
    var node_2969579106 = node_2969569752(self_2969579105);
    Label1: {
      var __2969579107 = 0;
      var n_2969579108 = null;
      var colontmp__2969579157 = null;
      colontmp__2969579157 = node_2969569752(self_2969579105);
      var n_2969579159 = colontmp__2969579157;
      var i_2969579160 = 0;
      var gotoChild_2969579161 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579159 == null))) break Label3;
            if ((gotoChild_2969579161 && (0 < len_3003121752(n_2969579159)))) {
            n_2969579159 = get_3003123566(getNextChild_2969569747(self_2969579105.document, n_2969579159, -1));
            __2969579107 = i_2969579160;
            n_2969579108 = n_2969579159;
            Label4: {
              if (!(shouldSelectNode_2969575855(n_2969579108))) {
              break Label4;
              }
              
              if (!((n_2969579108 == node_2969569752(self_2969579105)))) {
              nodeHEX3D_2969570829(self_2969579105, n_2969579108);
              break Label1;
              }
              
            };
            gotoChild_2969579161 = true;
            }
            else {
              if (!!((n_2969579159.parent == null))) Temporary5 = false; else {                var oHEX60gensym66_2969579163 = getNextChild_2969569747(self_2969579105.document, n_2969579159.parent, index_3003121772(n_2969579159));
                if (!isSome_3003123546(oHEX60gensym66_2969579163)) Temporary6 = false; else {                  var ne_2969579164 = get_3003123566(oHEX60gensym66_2969579163);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2969579159 = ne_2969579164;
            __2969579107 = i_2969579160;
            n_2969579108 = n_2969579159;
            Label7: {
              if (!(shouldSelectNode_2969575855(n_2969579108))) {
              break Label7;
              }
              
              if (!((n_2969579108 == node_2969569752(self_2969579105)))) {
              nodeHEX3D_2969570829(self_2969579105, n_2969579108);
              break Label1;
              }
              
            };
            gotoChild_2969579161 = true;
            }
            else {
              gotoChild_2969579161 = false;
              n_2969579159 = n_2969579159.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2969579100(self_2969579140) {
    moveCursorNext_2969579104(self_2969579140);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2969579100(this));};

function getPrevChild_2969569742(document_2969569743, node_2969569744, max_2969569745) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2969575937 = ({val: null});

  BeforeRet: {
    if ((len_3003121752(node_2969569744) == 0)) {
    result_2969575937 = nimCopy(result_2969575937, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2969575940 = node_2969569744;
      var pos_2969575941 = 0;
      var _ = pos_2969575941;
      if ((expr_2969575940.kind == 8)) {
        var oHEX60gensym137_2969575950 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(node_2969569744, 0), true);
        if (!isSome_3087009356(oHEX60gensym137_2969575950)) Temporary3 = false; else {          var sym_2969575973 = get_3087009376(oHEX60gensym137_2969575950);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2969575973.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2969575973;
      if (ConstSet159[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_3003121752(node_2969569744) == 3)) {
        if ((max_2969569745 == 0)) {
        result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575937 = nimCopy(result_2969575937, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 2)) {
        result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 2)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_3003121752(node_2969569744) == 2)) {
        if ((max_2969569745 == 0)) {
        result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 1)), NTI3003121783);
        break BeforeRet;
        }
        
        if ((max_2969569745 == 1)) {
        result_2969575937 = nimCopy(result_2969575937, none_3003121868(), NTI3003121783);
        break BeforeRet;
        }
        
        result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, 0)), NTI3003121783);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2969569745 < 0)) {
    result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(len_3003121752(node_2969569744), 1))), NTI3003121783);
    break BeforeRet;
    }
    else {
    if ((max_2969569745 == 0)) {
    result_2969575937 = nimCopy(result_2969575937, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    }
    result_2969575937 = nimCopy(result_2969575937, some_3003121890(HEX5BHEX5D_3003121748(node_2969569744, subInt(max_2969569745, 1))), NTI3003121783);
    break BeforeRet;
  };

  return result_2969575937;

}

function moveCursorPrev_2969579172(self_2969579173) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579173)) {
    break BeforeRet;
    }
    
    var node_2969579174 = node_2969569752(self_2969579173);
    Label1: {
      var n_2969579175 = null;
      var colontmp__2969579224 = null;
      colontmp__2969579224 = node_2969569752(self_2969579173);
      var gotoChild_2969579226 = false;
      var n_2969579227 = colontmp__2969579224;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579227 == null))) break Label3;
            if ((gotoChild_2969579226 && (0 < len_3003121752(n_2969579227)))) {
            n_2969579227 = get_3003123566(getPrevChild_2969569742(self_2969579173.document, n_2969579227, -1));
            gotoChild_2969579226 = true;
            }
            else {
              if (!!((n_2969579227.parent == null))) Temporary4 = false; else {                var oHEX60gensym70_2969579229 = getPrevChild_2969569742(self_2969579173.document, n_2969579227.parent, index_3003121772(n_2969579227));
                if (!isSome_3003123546(oHEX60gensym70_2969579229)) Temporary5 = false; else {                  var ne_2969579230 = get_3003123566(oHEX60gensym70_2969579229);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2969579175 = n_2969579227;
            Label6: {
              if (!(shouldSelectNode_2969575855(n_2969579175))) {
              break Label6;
              }
              
              if (!((n_2969579175 == node_2969569752(self_2969579173)))) {
              nodeHEX3D_2969570829(self_2969579173, n_2969579175);
              break Label1;
              }
              
            };
            n_2969579227 = ne_2969579230;
            gotoChild_2969579226 = true;
            }
            else {
              n_2969579175 = n_2969579227;
              Label7: {
                if (!(shouldSelectNode_2969575855(n_2969579175))) {
                break Label7;
                }
                
                if (!((n_2969579175 == node_2969569752(self_2969579173)))) {
                nodeHEX3D_2969570829(self_2969579173, n_2969579175);
                break Label1;
                }
                
              };
              gotoChild_2969579226 = false;
              n_2969579227 = n_2969579227.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2969579168(self_2969579207) {
    moveCursorPrev_2969579172(self_2969579207);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2969579168(this));};

function getNextLine_2969576021(document_2969576022, node_2969576023) {
              var Temporary6;
              var Temporary7;

  var result_2969576025 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2969576026 = 0;
      var n_2969576027 = null;
      var n_2969579311 = node_2969576023;
      var idx_2969579312 = -1;
      var i_2969579313 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579312 == -1)) {
            __2969576026 = i_2969579313;
            n_2969576027 = n_2969579311;
            Label5: {
              if (((n_2969576027 == node_2969576023) || (n_2969576027.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576027.parent.kind == 7)) {
              if (((n_2969576027.kind == 7) && (len_3003121752(n_2969576027) == 0))) {
              result_2969576025 = nimCopy(result_2969576025, some_3003121890(n_2969576027), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576027.kind == 7))) {
              result_2969576025 = nimCopy(result_2969576025, some_3003121890(n_2969576027), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576027.parent.kind == 9)) {
              var isElse_2969576062 = ((n_2969576027 == last_3003121922(n_2969576027.parent)) && !((modInt(len_3003121752(n_2969576027.parent), 2) == 0)));
              var isCondition_2969576063 = (!(isElse_2969576062) && (modInt(index_3003121772(n_2969576027), 2) == 0));
              if (((n_2969576027.kind == 7) && (len_3003121752(n_2969576027) == 0))) {
              result_2969576025 = nimCopy(result_2969576025, some_3003121890(n_2969576027), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576027.kind == 7)) && (!(isCondition_2969576063) || (0 < index_3003121772(n_2969576027))))) {
              result_2969576025 = nimCopy(result_2969576025, some_3003121890(n_2969576027), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2969579312, 1) < len_3003121752(n_2969579311))) {
            n_2969579311 = HEX5BHEX5D_3003121748(n_2969579311, addInt(idx_2969579312, 1));
            idx_2969579312 = -1;
            }
            else {
              var oHEX60gensym55_2969579315 = next_3003121857(n_2969579311);
              if (!isSome_3003123546(oHEX60gensym55_2969579315)) Temporary7 = false; else {                var ne_2969579316 = get_3003123566(oHEX60gensym55_2969579315);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2969579311 == null));              }            if (Temporary6) {
            n_2969579311 = ne_2969579316;
            idx_2969579312 = -1;
            }
            else {
            if (((!((n_2969579311.parent == null)) && !((n_2969579311 == null))) && !((n_2969579311.parent == null)))) {
            idx_2969579312 = index_3003121772(n_2969579311);
            n_2969579311 = n_2969579311.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579313 = addInt(i_2969579313, 1);
            }
          }
      };
    };
    result_2969576025 = nimCopy(result_2969576025, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576025;

}

function moveCursorNextLine_2969579238(self_2969579239) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579239)) {
    break BeforeRet;
    }
    
      var oHEX60gensym592_2969579242 = getNextLine_2969576021(self_2969579239.document, node_2969569752(self_2969579239));
      if (!isSome_3003123546(oHEX60gensym592_2969579242)) Temporary1 = false; else {        var next_2969579265 = get_3003123566(oHEX60gensym592_2969579242);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579239, next_2969579265);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2969579234(self_2969579293) {
    moveCursorNextLine_2969579238(self_2969579293);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2969579234(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2969576080(document_2969576081, node_2969576082) {
              var Temporary4;

  var result_2969576084 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2969576085 = null;
      var idx_2969579396 = 0;
      var n_2969579397 = node_2969576082;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969579397 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969579397), 1)), subInt(idx_2969579396, 1))) {
            n_2969579397 = HEX5BHEX5D_3003121748(n_2969579397, subInt(idx_2969579396, 1));
            idx_2969579396 = len_3003121752(n_2969579397);
            }
            else {
              var oHEX60gensym74_2969579399 = prev_3003121903(n_2969579397);
              if (!isSome_3003123546(oHEX60gensym74_2969579399)) Temporary4 = false; else {                var ne_2969579400 = get_3003123566(oHEX60gensym74_2969579399);
                Temporary4 = true;              }            if (Temporary4) {
            n_2969576085 = n_2969579397;
            Label5: {
              if (((n_2969576085 == node_2969576082) || (n_2969576085.parent == null))) {
              break Label5;
              }
              
              if ((n_2969576085.parent.kind == 7)) {
              if (((n_2969576085.kind == 7) && (len_3003121752(n_2969576085) == 0))) {
              result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
              break BeforeRet;
              }
              else {
              if (!((n_2969576085.kind == 7))) {
              result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576085.parent.kind == 9)) {
              var isElse_2969576120 = ((n_2969576085 == last_3003121922(n_2969576085.parent)) && !((modInt(len_3003121752(n_2969576085.parent), 2) == 0)));
              var isCondition_2969576121 = (!(isElse_2969576120) && (modInt(index_3003121772(n_2969576085), 2) == 0));
              if (((n_2969576085.kind == 7) && (len_3003121752(n_2969576085) == 0))) {
              result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
              break BeforeRet;
              }
              else {
              if ((!((n_2969576085.kind == 7)) && (!(isCondition_2969576121) || (0 < index_3003121772(n_2969576085))))) {
              result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2969576085.kind == 9)) {
              result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
              break BeforeRet;
              }
              
            };
            n_2969579397 = ne_2969579400;
            idx_2969579396 = len_3003121752(n_2969579397);
            }
            else {
              n_2969576085 = n_2969579397;
              Label6: {
                if (((n_2969576085 == node_2969576082) || (n_2969576085.parent == null))) {
                break Label6;
                }
                
                if ((n_2969576085.parent.kind == 7)) {
                if (((n_2969576085.kind == 7) && (len_3003121752(n_2969576085) == 0))) {
                result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
                break BeforeRet;
                }
                else {
                if (!((n_2969576085.kind == 7))) {
                result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576085.parent.kind == 9)) {
                var isElse_2969579401 = ((n_2969576085 == last_3003121922(n_2969576085.parent)) && !((modInt(len_3003121752(n_2969576085.parent), 2) == 0)));
                var isCondition_2969579402 = (!(isElse_2969579401) && (modInt(index_3003121772(n_2969576085), 2) == 0));
                if (((n_2969576085.kind == 7) && (len_3003121752(n_2969576085) == 0))) {
                result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
                break BeforeRet;
                }
                else {
                if ((!((n_2969576085.kind == 7)) && (!(isCondition_2969579402) || (0 < index_3003121772(n_2969576085))))) {
                result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2969576085.kind == 9)) {
                result_2969576084 = nimCopy(result_2969576084, some_3003121890(n_2969576085), NTI3003121783);
                break BeforeRet;
                }
                
              };
              idx_2969579396 = index_3003121772(n_2969579397);
              n_2969579397 = n_2969579397.parent;
            }
            }
          }
      };
    };
    result_2969576084 = nimCopy(result_2969576084, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576084;

}

function moveCursorPrevLine_2969579323(self_2969579324) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579324)) {
    break BeforeRet;
    }
    
      var oHEX60gensym601_2969579327 = getPrevLine_2969576080(self_2969579324.document, node_2969569752(self_2969579324));
      if (!isSome_3003123546(oHEX60gensym601_2969579327)) Temporary1 = false; else {        var prev_2969579350 = get_3003123566(oHEX60gensym601_2969579327);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579324, prev_2969579350);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2969579319(self_2969579378) {
    moveCursorPrevLine_2969579323(self_2969579378);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2969579319(this));};

function selectContaining_2969579409(self_2969579410, container_2969579411) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579410)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2969579411)) {
    case "function":
        var oHEX60gensym611_2969579414 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 11);
        if (!isSome_3003123546(oHEX60gensym611_2969579414)) Temporary1 = false; else {          var child_2969579437 = get_3003123566(oHEX60gensym611_2969579414);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579437.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym612_2969579440 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 4);
        if (!isSome_3003123546(oHEX60gensym612_2969579440)) Temporary2 = false; else {          var child_2969579463 = get_3003123566(oHEX60gensym612_2969579440);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579463.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym613_2969579466 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 7);
        if (!isSome_3003123546(oHEX60gensym613_2969579466)) Temporary3 = false; else {          var child_2969579489 = get_3003123566(oHEX60gensym613_2969579466);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579489);
      }
      
      break;
    case "node-list":
        var oHEX60gensym614_2969579492 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 7);
        if (!isSome_3003123546(oHEX60gensym614_2969579492)) Temporary4 = false; else {          var child_2969579515 = get_3003123566(oHEX60gensym614_2969579492);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579515.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym615_2969579518 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 9);
        if (!isSome_3003123546(oHEX60gensym615_2969579518)) Temporary5 = false; else {          var child_2969579541 = get_3003123566(oHEX60gensym615_2969579518);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579541.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym616_2969579544 = findWithParentRec_3003123589(node_2969569752(self_2969579410), 10);
        if (!isSome_3003123546(oHEX60gensym616_2969579544)) Temporary6 = false; else {          var child_2969579567 = get_3003123566(oHEX60gensym616_2969579544);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2969570829(self_2969579410, child_2969579567.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2969579405(self_2969579596, container_2969579597) {
    selectContaining_2969579409(self_2969579596, container_2969579597);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2969579405(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3019955566(t_3019955569, key_3019955570) {
    t_3019955569.delete(mapKeyJs_3036678533(key_3019955570));

  
}

function deleteNode_3019955496(ctx_3019955497, node_3019955498) {
          var Temporary3;
            var Temporary4;

    ctx_3019955497.depGraph.revision = addInt(ctx_3019955497.depGraph.revision, 1);
    del_3019955566(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498), Field1: -1});
    if (!((node_3019955498.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(node_3019955498.parent), Field1: -1}, ctx_3019955497.depGraph.revision);
    }
    
    var parent_3019955652 = node_3019955498.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955652 == null))) Temporary3 = false; else {            var oHEX60gensym568_3019955659 = findWithParentRec_3003123589(parent_3019955652, 11);
            if (!isSome_3003123546(oHEX60gensym568_3019955659)) Temporary4 = false; else {              var child_3019955705 = get_3003123566(oHEX60gensym568_3019955659);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955706 = child_3019955705.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955497.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955706), Field1: -1}, ctx_3019955497.depGraph.revision);
          parent_3019955652 = functionDefinition_3019955706.parent;
        }
    };

  
}

function rawGet_3221225549(t_3221225552, key_3221225553, hc_3221225554, hc_3221225554_Idx) {
  var result_3221225555 = 0;

  BeforeRet: {
    hc_3221225554[hc_3221225554_Idx] = hash_2046820630(key_3221225553);
    if ((hc_3221225554[hc_3221225554_Idx] == 0)) {
    hc_3221225554[hc_3221225554_Idx] = 314159265;
    }
    
    if (((t_3221225552.data).length == 0)) {
    result_3221225555 = -1;
    break BeforeRet;
    }
    
    var h_3221225607 = (hc_3221225554[hc_3221225554_Idx] & (t_3221225552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0)) break Label2;
          if (((t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field0 == hc_3221225554[hc_3221225554_Idx]) && HEX3DHEX3D_2046820626(t_3221225552.data[chckIndx(h_3221225607, 0, (t_3221225552.data).length - 1)].Field1, key_3221225553))) {
          result_3221225555 = h_3221225607;
          break BeforeRet;
          }
          
          h_3221225607 = nextTry_1308622883(h_3221225607, (t_3221225552.data).length - 1);
        }
    };
    result_3221225555 = subInt(-1, h_3221225607);
  };

  return result_3221225555;

}

function del_2969574288(t_2969574291, key_2969574292) {
    var hc_2969574293 = [0];
    var i_2969574300 = rawGet_3221225549(t_2969574291, key_2969574292, hc_2969574293, 0);
    var mskHEX60gensym36_2969574304 = (t_2969574291.data).length - 1;
    if ((0 <= i_2969574300)) {
    t_2969574291.counter = subInt(t_2969574291.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2969574311 = i_2969574300;
            var rHEX60gensym36_2969574312 = jHEX60gensym36_2969574311;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 = 0;
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1 = nimCopy(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2969574300 = (addInt(i_2969574300, 1) & mskHEX60gensym36_2969574304);
                  if (isEmpty_1308622877(t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2969574312 = (t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)].Field0 & mskHEX60gensym36_2969574304);
                  if (!(((((rHEX60gensym36_2969574312 <= i_2969574300) && (jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312)) || ((jHEX60gensym36_2969574311 < rHEX60gensym36_2969574312) && (i_2969574300 < jHEX60gensym36_2969574311))) || ((i_2969574300 < jHEX60gensym36_2969574311) && (rHEX60gensym36_2969574312 <= i_2969574300))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)] = nimCopy(t_2969574291.data[chckIndx(jHEX60gensym36_2969574311, 0, (t_2969574291.data).length - 1)], t_2969574291.data[chckIndx(i_2969574300, 0, (t_2969574291.data).length - 1)], NTI2969568631);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2969573874(doc_2969573875, node_2969573876) {
              var Temporary8;

    var fmtRes_2969573881 = [mnewString(0)];
    fmtRes_2969573881[0].push.apply(fmtRes_2969573881[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969573881, 0, node_2969573876, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969573881[0], NTI33554449)]);
    Label1: {
      var child_2969573890 = null;
      var i_2969579671 = 0;
      var L_2969579672 = (node_2969573876.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579671 < L_2969579672)) break Label3;
            child_2969573890 = node_2969573876.children[chckIndx(i_2969579671, 0, (node_2969573876.children).length - 1)];
            handleNodeDelete_2969573874(doc_2969573875, child_2969573890);
            i_2969579671 = addInt(i_2969579671, 1);
            if (!(((node_2969573876.children).length == L_2969579672))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3019955496(ctx_2969567289, node_2969573876);
    Label4: {
      var i_2969573924 = 0;
      var update_2969573925 = null;
      var i_2969579681 = 0;
      var L_2969579682 = (ctx_2969567289.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579681 < L_2969579682)) break Label6;
            i_2969573924 = i_2969579681;
            update_2969573925 = ctx_2969567289.updateFunctions[chckIndx(i_2969579681, 0, (ctx_2969567289.updateFunctions).length - 1)];
            var key_2969573926 = {Field0: getItem_3019906357(node_2969573876), Field1: i_2969573924};
            if (contains_3019940149(ctx_2969567289.diagnosticsPerQuery, key_2969573926)) {
            Label7: {
              var id_2969574075 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2969579676 = [];
              colontmp__2969579676 = (Temporary8 = HEX5BHEX5D_3019940594(ctx_2969567289.diagnosticsPerQuery, key_2969573926), Temporary8)[0][Temporary8[1]];
              var i_2969579677 = 0;
              var L_2969579678 = (colontmp__2969579676).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2969579677 < L_2969579678)) break Label10;
                    id_2969574075 = colontmp__2969579676[chckIndx(i_2969579677, 0, (colontmp__2969579676).length - 1)];
                    del_3019941318(HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_2969574075).queries, key_2969573926);
                    i_2969579677 = addInt(i_2969579677, 1);
                    if (!(((colontmp__2969579676).length == L_2969579678))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3019948061(ctx_2969567289.diagnosticsPerQuery, key_2969573926);
            }
            
            i_2969579681 = addInt(i_2969579681, 1);
            if (!(((ctx_2969567289.updateFunctions).length == L_2969579682))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2969574288(doc_2969573875.nodes, node_2969573876.id);

  
}

function HEX5BHEX5DHEX3D_3003121928(node_3003121929, index_3003121930, newNode_3003121931) {
    newNode_3003121931.parent = node_3003121929;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)].parent = null;
    node_3003121929.children[chckIndx(index_3003121930, 0, (node_3003121929.children).length - 1)] = newNode_3003121931;

  
}

function HEX5BHEX5DHEX3D_3019906522(t_3019906525, key_3019906526, val_3019906527) {
    t_3019906525.set(mapKeyJs_3019899588(key_3019906526), val_3019906527);

  
}

function insertNode_3019954804(ctx_3019954805, node_3019954806) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3019954805.depGraph.revision = addInt(ctx_3019954805.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806), Field1: -1}, ctx_3019954805.depGraph.revision);
    if (!((node_3019954806.parent == null))) {
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(node_3019954806.parent), Field1: -1}, ctx_3019954805.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(node_3019954806), node_3019954806);
    Label1: {
      var key_3019955022 = 0;
      var child_3019955023 = null;
      var n_2969579704 = node_3019954806;
      var idx_2969579705 = -1;
      var i_2969579706 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969579705 == -1)) {
            var colontmp__2969579709 = nimCopy(null, {Field0: i_2969579706, Field1: n_2969579704}, NTI3003123002);
            key_3019955022 = colontmp__2969579709["Field0"];
            child_3019955023 = colontmp__2969579709["Field1"];
            HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(child_3019955023), Field1: -1}, ctx_3019954805.depGraph.revision);
            HEX5BHEX5DHEX3D_3019906522(ctx_3019954805.itemsAstNode, getItem_3019906357(child_3019955023), child_3019955023);
            }
            
            if ((addInt(idx_2969579705, 1) < len_3003121752(n_2969579704))) {
            n_2969579704 = HEX5BHEX5D_3003121748(n_2969579704, addInt(idx_2969579705, 1));
            idx_2969579705 = -1;
            }
            else {
              var oHEX60gensym74_2969579710 = next_3003121857(n_2969579704);
              if (!isSome_3003123546(oHEX60gensym74_2969579710)) Temporary5 = false; else {                var ne_2969579711 = get_3003123566(oHEX60gensym74_2969579710);
                Temporary5 = true;              }            if (Temporary5) {
            n_2969579704 = ne_2969579711;
            idx_2969579705 = -1;
            }
            else {
            if ((!((n_2969579704.parent == null)) && !((n_2969579704.parent == node_3019954806)))) {
            idx_2969579705 = index_3003121772(n_2969579704);
            n_2969579704 = n_2969579704.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2969579706 = addInt(i_2969579706, 1);
            }
          }
      };
    };
    var parent_3019955162 = node_3019954806.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3019955162 == null))) Temporary8 = false; else {            var oHEX60gensym562_3019955169 = findWithParentRec_3003123589(parent_3019955162, 11);
            if (!isSome_3003123546(oHEX60gensym562_3019955169)) Temporary9 = false; else {              var child_3019955215 = get_3003123566(oHEX60gensym562_3019955169);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3019955216 = child_3019955215.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019954805.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955216), Field1: -1}, ctx_3019954805.depGraph.revision);
          parent_3019955162 = functionDefinition_3019955216.parent;
        }
    };

  
}

function mustRehash_2969572614(t_2969572616) {
  var result_2969572617 = false;

    if (!((t_2969572616.counter < (t_2969572616.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969572617 = ((mulInt((t_2969572616.data).length, 2) < mulInt(t_2969572616.counter, 3)) || (subInt((t_2969572616.data).length, t_2969572616.counter) < 4));

  return result_2969572617;

}

function rawInsert_2969573223(t_2969573227, data_2969573228, data_2969573228_Idx, key_2969573229, val_2969573230, hc_2969573231, h_2969573232) {
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1 = nimCopy(data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field1, key_2969573229, NTI2046820355);
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field2 = val_2969573230;
    data_2969573228[data_2969573228_Idx][chckIndx(h_2969573232, 0, (data_2969573228[data_2969573228_Idx]).length - 1)].Field0 = hc_2969573231;

  
}

function enlarge_2969572817(t_2969572820) {
    var n_2969572823 = [];
    n_2969572823 = new Array(chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969572820.data).length, 2), 0, 2147483647) ; ++i) { n_2969572823[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2969572820.data; t_2969572820.data = n_2969572823; n_2969572823 = Temporary1;    Label2: {
      var i_2969572903 = 0;
      var colontmp__2969579715 = 0;
      colontmp__2969579715 = (n_2969572823).length - 1;
      var res_2969579716 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579716 <= colontmp__2969579715)) break Label4;
            i_2969572903 = res_2969579716;
            var eh_2969572981 = n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969572981)) {
            var j_2969572985 = (eh_2969572981 & (t_2969572820.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969572820.data[chckIndx(j_2969572985, 0, (t_2969572820.data).length - 1)].Field0)) break Label6;
                  j_2969572985 = nextTry_1308622883(j_2969572985, (t_2969572820.data).length - 1);
                }
            };
            rawInsert_2969573223(t_2969572820, t_2969572820, "data", n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field1, n_2969572823[chckIndx(i_2969572903, 0, (n_2969572823).length - 1)].Field2, eh_2969572981, j_2969572985);
            }
            
            res_2969579716 = addInt(res_2969579716, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969573464(t_2969573467, key_2969573468, hc_2969573469) {
  var result_2969573470 = 0;

  BeforeRet: {
    if (((t_2969573467.data).length == 0)) {
    result_2969573470 = -1;
    break BeforeRet;
    }
    
    var h_2969573537 = (hc_2969573469 & (t_2969573467.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0)) break Label2;
          if (((t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field0 == hc_2969573469) && HEX3DHEX3D_2046820626(t_2969573467.data[chckIndx(h_2969573537, 0, (t_2969573467.data).length - 1)].Field1, key_2969573468))) {
          result_2969573470 = h_2969573537;
          break BeforeRet;
          }
          
          h_2969573537 = nextTry_1308622883(h_2969573537, (t_2969573467.data).length - 1);
        }
    };
    result_2969573470 = subInt(-1, h_2969573537);
  };

  return result_2969573470;

}

function HEX5BHEX5DHEX3D_2969572385(t_2969572388, key_2969572389, val_2969572390) {
    if (((t_2969572388.data).length == 0)) {
    var correctSizeHEX60gensym97_2969572455 = slotsNeeded_1308622891(32);
    t_2969572388.counter = 0;
    t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym97_2969572455, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2969572460 = [0];
    var index_2969572467 = rawGet_3221225549(t_2969572388, key_2969572389, hc_2969572460, 0);
    if ((0 <= index_2969572467)) {
    t_2969572388.data[chckIndx(index_2969572467, 0, (t_2969572388.data).length - 1)].Field2 = val_2969572390;
    }
    else {
      if (((t_2969572388.data).length == 0)) {
      var correctSizeHEX60gensym100_2969572609 = slotsNeeded_1308622891(32);
      t_2969572388.counter = 0;
      t_2969572388.data = new Array(chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym100_2969572609, 0, 2147483647) ; ++i) { t_2969572388.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2969572614(t_2969572388)) {
      enlarge_2969572817(t_2969572388);
      index_2969572467 = rawGetKnownHC_2969573464(t_2969572388, key_2969572389, hc_2969572460[0]);
      }
      
      index_2969572467 = subInt(-1, index_2969572467);
      rawInsert_2969573223(t_2969572388, t_2969572388, "data", key_2969572389, val_2969572390, hc_2969572460[0], index_2969572467);
      t_2969572388.counter = addInt(t_2969572388.counter, 1);
    }
    

  
}

function handleNodeInserted_2969571616(doc_2969571617, node_2969571618) {
              var Temporary8;

    var fmtRes_2969572306 = [mnewString(0)];
    fmtRes_2969572306[0].push.apply(fmtRes_2969572306[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969572306, 0, node_2969571618, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969572306[0], NTI33554449)]);
    insertNode_3019954804(ctx_2969567289, node_2969571618);
    Label1: {
      var handler_2969572334 = null;
      var i_2969579690 = 0;
      var L_2969579691 = (doc_2969571617.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579690 < L_2969579691)) break Label3;
            handler_2969572334 = doc_2969571617.onNodeInserted[chckIndx(i_2969579690, 0, (doc_2969571617.onNodeInserted).length - 1)];
            handler_2969572334(doc_2969571617, node_2969571618);
            i_2969579690 = addInt(i_2969579690, 1);
            if (!(((doc_2969571617.onNodeInserted).length == L_2969579691))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, node_2969571618.id, node_2969571618);
    Label4: {
      var key_2969573790 = 0;
      var child_2969573791 = null;
      var n_2969579695 = node_2969571618;
      var idx_2969579696 = -1;
      var i_2969579697 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2969579696 == -1)) {
            var colontmp__2969579700 = nimCopy(null, {Field0: i_2969579697, Field1: n_2969579695}, NTI3003123002);
            key_2969573790 = colontmp__2969579700["Field0"];
            child_2969573791 = colontmp__2969579700["Field1"];
            HEX5BHEX5DHEX3D_2969572385(doc_2969571617.nodes, child_2969573791.id, child_2969573791);
            }
            
            if ((addInt(idx_2969579696, 1) < len_3003121752(n_2969579695))) {
            n_2969579695 = HEX5BHEX5D_3003121748(n_2969579695, addInt(idx_2969579696, 1));
            idx_2969579696 = -1;
            }
            else {
              var oHEX60gensym74_2969579701 = next_3003121857(n_2969579695);
              if (!isSome_3003123546(oHEX60gensym74_2969579701)) Temporary8 = false; else {                var ne_2969579702 = get_3003123566(oHEX60gensym74_2969579701);
                Temporary8 = true;              }            if (Temporary8) {
            n_2969579695 = ne_2969579702;
            idx_2969579696 = -1;
            }
            else {
            if ((!((n_2969579695.parent == null)) && !((n_2969579695.parent == node_2969571618)))) {
            idx_2969579696 = index_3003121772(n_2969579695);
            n_2969579695 = n_2969579695.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2969579697 = addInt(i_2969579697, 1);
            }
          }
      };
    };

  
}

function replaceNode_2969576145(document_2969576146, node_2969576147, newNode_2969576148) {
  var result_2969576149 = null;

  BeforeRet: {
    if ((node_2969576147.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2969576155 = index_3003121772(node_2969576147);
    document_2969576146.undoOps.push({kind: 1, parent: node_2969576147.parent, idx: idx_2969576155, node: node_2969576147, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576146.redoOps = nimCopy(null, [], NTI2969572190);
    handleNodeDelete_2969573874(document_2969576146, node_2969576147);
    HEX5BHEX5DHEX3D_3003121928(node_2969576147.parent, idx_2969576155, newNode_2969576148);
    handleNodeInserted_2969571616(document_2969576146, newNode_2969576148);
    result_2969576149 = newNode_2969576148;
    break BeforeRet;
  };

  return result_2969576149;

}

function delete_3003121936(x_3003121938, x_3003121938_Idx, i_3003121939) {
    x_3003121938[x_3003121938_Idx].splice(i_3003121939, 1);

  
}

function delete_3003121932(node_3003121933, index_3003121934) {
  var result_3003121935 = null;

  BeforeRet: {
    if (((index_3003121934 < 0) || (len_3003121752(node_3003121933) <= index_3003121934))) {
    result_3003121935 = node_3003121933;
    break BeforeRet;
    }
    
    HEX5BHEX5D_3003121748(node_3003121933, index_3003121934).parent = null;
    delete_3003121936(node_3003121933, "children", chckRange(index_3003121934, 0, 2147483647));
    if ((index_3003121934 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, index_3003121934);
    break BeforeRet;
    }
    else {
    if ((0 < len_3003121752(node_3003121933))) {
    result_3003121935 = HEX5BHEX5D_3003121748(node_3003121933, subInt(index_3003121934, 1));
    break BeforeRet;
    }
    else {
      result_3003121935 = node_3003121933;
      break BeforeRet;
    }
    }
  };

  return result_3003121935;

}

function deleteNode_2969576209(document_2969576210, node_2969576211) {
  var result_2969576212 = null;

  BeforeRet: {
    if ((node_2969576211.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2969576211.parent == document_2969576210.rootNode) && (len_3003121752(document_2969576210.rootNode) == 1))) {
    result_2969576212 = replaceNode_2969576145(document_2969576210, node_2969576211, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2969576210.undoOps.push({kind: 0, parent: node_2969576211.parent, idx: index_3003121772(node_2969576211), node: node_2969576211, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969576210.redoOps = nimCopy(null, [], NTI2969572190);
    handleNodeDelete_2969573874(document_2969576210, node_2969576211);
    result_2969576212 = delete_3003121932(node_2969576211.parent, index_3003121772(node_2969576211));
    break BeforeRet;
  };

  return result_2969576212;

}

function deleteSelected_2969579623(self_2969579624) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969579624)) {
    break BeforeRet;
    }
    
    self_2969579624.deletedNode = nimCopy(self_2969579624.deletedNode, some_3003121890(node_2969569752(self_2969579624)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969579624, deleteNode_2969576209(self_2969579624.document, node_2969569752(self_2969579624)));
  };

  
}

function deleteSelectedJsWrapper_2969579619(self_2969579655) {
    deleteSelected_2969579623(self_2969579655);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2969579619(this));};

function initTable_3003123500(initialSize_3003123503) {
  var result_3003123504 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_3003123506 = slotsNeeded_1308622891(chckRange(initialSize_3003123503, 0, 2147483647));
    result_3003123504.counter = 0;
    result_3003123504.data = new Array(chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_3003123506, 0, 2147483647) ; ++i) { result_3003123504.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_3003123504;

}

function rawGet_3003122071(t_3003122074, key_3003122075, hc_3003122076, hc_3003122076_Idx) {
  var result_3003122077 = 0;

  BeforeRet: {
    hc_3003122076[hc_3003122076_Idx] = hash_2046820630(key_3003122075);
    if ((hc_3003122076[hc_3003122076_Idx] == 0)) {
    hc_3003122076[hc_3003122076_Idx] = 314159265;
    }
    
    if (((t_3003122074.data).length == 0)) {
    result_3003122077 = -1;
    break BeforeRet;
    }
    
    var h_3003122128 = (hc_3003122076[hc_3003122076_Idx] & (t_3003122074.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0)) break Label2;
          if (((t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field0 == hc_3003122076[hc_3003122076_Idx]) && HEX3DHEX3D_2046820626(t_3003122074.data[chckIndx(h_3003122128, 0, (t_3003122074.data).length - 1)].Field1, key_3003122075))) {
          result_3003122077 = h_3003122128;
          break BeforeRet;
          }
          
          h_3003122128 = nextTry_1308622883(h_3003122128, (t_3003122074.data).length - 1);
        }
    };
    result_3003122077 = subInt(-1, h_3003122128);
  };

  return result_3003122077;

}

function mustRehash_3003122416(t_3003122418) {
  var result_3003122419 = false;

    if (!((t_3003122418.counter < (t_3003122418.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122419 = ((mulInt((t_3003122418.data).length, 2) < mulInt(t_3003122418.counter, 3)) || (subInt((t_3003122418.data).length, t_3003122418.counter) < 4));

  return result_3003122419;

}

function rawInsert_3003122865(t_3003122869, data_3003122870, data_3003122870_Idx, key_3003122871, val_3003122872, hc_3003122873, h_3003122874) {
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field1, key_3003122871, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2 = nimCopy(data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field2, val_3003122872, NTI2046820355);
    data_3003122870[data_3003122870_Idx][chckIndx(h_3003122874, 0, (data_3003122870[data_3003122870_Idx]).length - 1)].Field0 = hc_3003122873;

  
}

function enlarge_3003122571(t_3003122574) {
    var n_3003122577 = [];
    n_3003122577 = new Array(chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122574.data).length, 2), 0, 2147483647) ; ++i) { n_3003122577[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_3003122574.data; t_3003122574.data = n_3003122577; n_3003122577 = Temporary1;    Label2: {
      var i_3003122641 = 0;
      var colontmp__2969579784 = 0;
      colontmp__2969579784 = (n_3003122577).length - 1;
      var res_2969579785 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2969579785 <= colontmp__2969579784)) break Label4;
            i_3003122641 = res_2969579785;
            var eh_3003122695 = n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003122695)) {
            var j_3003122699 = (eh_3003122695 & (t_3003122574.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122574.data[chckIndx(j_3003122699, 0, (t_3003122574.data).length - 1)].Field0)) break Label6;
                  j_3003122699 = nextTry_1308622883(j_3003122699, (t_3003122574.data).length - 1);
                }
            };
            rawInsert_3003122865(t_3003122574, t_3003122574, "data", n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field1, n_3003122577[chckIndx(i_3003122641, 0, (n_3003122577).length - 1)].Field2, eh_3003122695, j_3003122699);
            }
            
            res_2969579785 = addInt(res_2969579785, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123034(t_3003123037, key_3003123038, hc_3003123039) {
  var result_3003123040 = 0;

  BeforeRet: {
    if (((t_3003123037.data).length == 0)) {
    result_3003123040 = -1;
    break BeforeRet;
    }
    
    var h_3003123091 = (hc_3003123039 & (t_3003123037.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0)) break Label2;
          if (((t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field0 == hc_3003123039) && HEX3DHEX3D_2046820626(t_3003123037.data[chckIndx(h_3003123091, 0, (t_3003123037.data).length - 1)].Field1, key_3003123038))) {
          result_3003123040 = h_3003123091;
          break BeforeRet;
          }
          
          h_3003123091 = nextTry_1308622883(h_3003123091, (t_3003123037.data).length - 1);
        }
    };
    result_3003123040 = subInt(-1, h_3003123091);
  };

  return result_3003123040;

}

function HEX5BHEX5DHEX3D_3003122010(t_3003122013, key_3003122014, val_3003122015) {
    if (((t_3003122013.data).length == 0)) {
    var correctSizeHEX60gensym15_3003122065 = slotsNeeded_1308622891(32);
    t_3003122013.counter = 0;
    t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_3003122065, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_3003122070 = [0];
    var index_3003122309 = rawGet_3003122071(t_3003122013, key_3003122014, hc_3003122070, 0);
    if ((0 <= index_3003122309)) {
    t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2 = nimCopy(t_3003122013.data[chckIndx(index_3003122309, 0, (t_3003122013.data).length - 1)].Field2, val_3003122015, NTI2046820355);
    }
    else {
      if (((t_3003122013.data).length == 0)) {
      var correctSizeHEX60gensym20_3003122411 = slotsNeeded_1308622891(32);
      t_3003122013.counter = 0;
      t_3003122013.data = new Array(chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003122411, 0, 2147483647) ; ++i) { t_3003122013.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_3003122416(t_3003122013)) {
      enlarge_3003122571(t_3003122013);
      index_3003122309 = rawGetKnownHC_3003123034(t_3003122013, key_3003122014, hc_3003122070[0]);
      }
      
      index_3003122309 = subInt(-1, index_3003122309);
      rawInsert_3003122865(t_3003122013, t_3003122013, "data", key_3003122014, val_3003122015, hc_3003122070[0], index_3003122309);
      t_3003122013.counter = addInt(t_3003122013.counter, 1);
    }
    

  
}

function add_3003121702(node_3003121703, child_3003121704) {
    if (HEX3DHEX3D_2046820626(node_3003121703.id, null_2046820646)) {
    node_3003121703.id = nimCopy(node_3003121703.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121704.id, null_2046820646)) {
    child_3003121704.id = nimCopy(child_3003121704.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121704.parent = node_3003121703;
    node_3003121703.children.push(child_3003121704);;

  
}

function clone_3003121958(node_3003121959, idMap_3003121967) {
  var result_3003121968 = null;

    var newNodeId_3003121969 = newId_2046820597();
    result_3003121968 = {kind: node_3003121959.kind, id: nimCopy(null, newNodeId_3003121969, NTI2046820355), reff: nimCopy(null, node_3003121959.reff, NTI2046820355), text: nimCopy(null, node_3003121959.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_3003122010(idMap_3003121967, node_3003121959.id, newNodeId_3003121969);
    Label1: {
      var child_3003123275 = null;
      var i_2969579778 = 0;
      var L_2969579779 = (node_3003121959.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579778 < L_2969579779)) break Label3;
            child_3003123275 = node_3003121959.children[chckIndx(i_2969579778, 0, (node_3003121959.children).length - 1)];
            add_3003121702(result_3003121968, clone_3003121958(child_3003123275, idMap_3003121967));
            i_2969579778 = addInt(i_2969579778, 1);
            if (!(((node_3003121959.children).length == L_2969579779))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3003121968;

}

function hasKey_3003123347(t_3003123350, key_3003123351) {
  var result_3003123352 = false;

    var hc_3003123353 = [0];
    result_3003123352 = (0 <= rawGet_3003122071(t_3003123350, key_3003123351, hc_3003123353, 0));

  return result_3003123352;

}

function contains_3003123341(t_3003123344, key_3003123345) {
  var result_3003123346 = false;

  BeforeRet: {
    result_3003123346 = hasKey_3003123347(t_3003123344, key_3003123345);
    break BeforeRet;
  };

  return result_3003123346;

}

function HEX5BHEX5D_3003123413(t_3003123416, key_3003123417) {
  var result_3003123418 = null;

    var hcHEX60gensym22_3003123419 = [0];
    var indexHEX60gensym22_3003123426 = rawGet_3003122071(t_3003123416, key_3003123417, hcHEX60gensym22_3003123419, 0);
    if ((0 <= indexHEX60gensym22_3003123426)) {
    result_3003123418 = t_3003123416.data[chckIndx(indexHEX60gensym22_3003123426, 0, (t_3003123416.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_3003123480(key_3003123417);
    }
    

  return result_3003123418;

}

function replaceReferences_3003123294(node_3003123295, idMap_3003123298) {
    if (contains_3003123341(idMap_3003123298, node_3003123295.reff)) {
    node_3003123295.reff = nimCopy(node_3003123295.reff, HEX5BHEX5D_3003123413(idMap_3003123298, node_3003123295.reff), NTI2046820355);
    }
    
    Label1: {
      var child_3003123496 = null;
      var i_2969579789 = 0;
      var L_2969579790 = (node_3003123295.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579789 < L_2969579790)) break Label3;
            child_3003123496 = node_3003123295.children[chckIndx(i_2969579789, 0, (node_3003123295.children).length - 1)];
            replaceReferences_3003123294(child_3003123496, idMap_3003123298);
            i_2969579789 = addInt(i_2969579789, 1);
            if (!(((node_3003123295.children).length == L_2969579790))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_3003123497(node_3003123498) {
  var result_3003123499 = null;

  BeforeRet: {
    var idMap_3003123511 = [initTable_3003123500(32)];
    var newNode_3003123512 = clone_3003121958(node_3003123498, idMap_3003123511[0]);
    replaceReferences_3003123294(newNode_3003123512, idMap_3003123511[0]);
    result_3003123499 = newNode_3003123512;
    break BeforeRet;
  };

  return result_3003123499;

}

function copySelected_2969579730(self_2969579731) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969579731)) {
    break BeforeRet;
    }
    
    self_2969579731.deletedNode = nimCopy(self_2969579731.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969569752(self_2969579731))), NTI3003121783);
  };

  
}

function copySelectedJsWrapper_2969579726(self_2969579762) {
    copySelected_2969579730(self_2969579762);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2969579726(this));};

function getSymbol_3019906948(ctxHEX60gensym85_3019906949, idHEX60gensym85_3019906950) {
  var result_3019906952 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym85_3019906953 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym85_3019906950, NTI2046820355), Field1: 2}, NTI3036676201);
    if (contains_3019901364(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)) {
    result_3019906952 = nimCopy(result_3019906952, some_3019907120(HEX5BHEX5D_3019901463(ctxHEX60gensym85_3019906949.itemsSymbol, itemHEX60gensym85_3019906953)), NTI3087008909);
    break BeforeRet;
    }
    
    result_3019906952 = nimCopy(result_3019906952, none_3019907133(), NTI3087008909);
    break BeforeRet;
  };

  return result_3019906952;

}

function content_2818574085(document_2818574086) {
  var result_2818574087 = [];

  BeforeRet: {
    result_2818574087 = nimCopy(null, document_2818574086.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818574087;

}

function updateNode_3019955286(ctx_3019955287, node_3019955288) {
          var Temporary3;
            var Temporary4;

    ctx_3019955287.depGraph.revision = addInt(ctx_3019955287.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(node_3019955288), Field1: -1}, ctx_3019955287.depGraph.revision);
    var parent_3019955362 = node_3019955288.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3019955362 == null))) Temporary3 = false; else {            var oHEX60gensym564_3019955369 = findWithParentRec_3003123589(parent_3019955362, 11);
            if (!isSome_3003123546(oHEX60gensym564_3019955369)) Temporary4 = false; else {              var child_3019955415 = get_3003123566(oHEX60gensym564_3019955369);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3019955416 = child_3019955415.parent;
          HEX5BHEX5DHEX3D_3036679291(ctx_3019955287.depGraph.changed, {Field0: getItem_3019906357(functionDefinition_3019955416), Field1: -1}, ctx_3019955287.depGraph.revision);
          parent_3019955362 = functionDefinition_3019955416.parent;
        }
    };
    var fmtRes_3019955490 = [mnewString(0)];
    fmtRes_3019955490[0].push.apply(fmtRes_3019955490[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_3019955490, 0, node_3019955288, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019955490[0], NTI33554449)]);

  
}

function notifySymbolChanged_3019954718(ctx_3019954719, sym_3019954720) {
    ctx_3019954719.depGraph.revision = addInt(ctx_3019954719.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3036679291(ctx_3019954719.depGraph.changed, {Field0: getItem_3019907143(sym_3019954720), Field1: -1}, ctx_3019954719.depGraph.revision);
    var fmtRes_3019954798 = [mnewString(0)];
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3019954798, 0, sym_3019954720.name, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [32,40]);;
    formatValue_3036676344(fmtRes_3019954798, 0, sym_3019954720.id, []);
    fmtRes_3019954798[0].push.apply(fmtRes_3019954798[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3019954798[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2969579903 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579903 < rows_1979711496)) break Label3;
            i_1979711534 = i_2969579903;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2969579903 = addInt(i_2969579903, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2969579909 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2969579909 < rows_1979711496)) break Label6;
            i_1979711551 = i_2969579909;
            Label7: {
              var k_1979711556 = 0;
              var i_2969579907 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2969579907 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2969579907;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2969579907 = addInt(i_2969579907, 1);
                  }
              };
            };
            i_2969579909 = addInt(i_2969579909, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2969579915 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2969579915 < cols_1979711497)) break Label12;
            col_1979711561 = i_2969579915;
            Label13: {
              var row_1979711566 = 0;
              var i_2969579913 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2969579913 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2969579913;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2969579913 = addInt(i_2969579913, 1);
                  }
              };
            };
            i_2969579915 = addInt(i_2969579915, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2969579925 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969579925 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2969579925];
            addChar(str_33557214, x_33557228);;
            i_2969579925 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3204448360(len_3204448362) {
  var result_3204448363 = [];

    result_3204448363 = new Array(len_3204448362); for (var i = 0 ; i < len_3204448362 ; ++i) { result_3204448363[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3204448363;

}

function mergeAlt_3204448399(a_3204448401, b_3204448402, lo_3204448403, m_3204448404, hi_3204448405, cmp_3204448408, order_3204448409) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3204448408(a_3204448401[chckIndx(m_3204448404, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(addInt(m_3204448404, 1), 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
    break BeforeRet;
    }
    
    var j_3204448410 = lo_3204448403;
    if (!((j_3204448410 <= m_3204448404))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3204448416 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3204448410 <= m_3204448404)) break Label2;
          b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)] = nimCopy(b_3204448402[chckIndx(bb_3204448416, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
          bb_3204448416 = addInt(bb_3204448416, 1);
          j_3204448410 = addInt(j_3204448410, 1);
        }
    };
    var i_3204448427 = 0;
    var k_3204448428 = lo_3204448403;
    Label3: {
        Label4: while (true) {
        if (!((k_3204448428 < j_3204448410) && (j_3204448410 <= hi_3204448405))) break Label4;
          if ((HEX2A_1023410184(cmp_3204448408(b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)]), order_3204448409) <= 0)) {
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          i_3204448427 = addInt(i_3204448427, 1);
          }
          else {
            a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], a_3204448401[chckIndx(j_3204448410, 0, (a_3204448401).length - 1)], NTI2969568638);
            j_3204448410 = addInt(j_3204448410, 1);
          }
          
          k_3204448428 = addInt(k_3204448428, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3204448428 < j_3204448410)) break Label6;
          a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)] = nimCopy(a_3204448401[chckIndx(k_3204448428, 0, (a_3204448401).length - 1)], b_3204448402[chckIndx(i_3204448427, 0, (b_3204448402).length - 1)], NTI2969568638);
          k_3204448428 = addInt(k_3204448428, 1);
          i_3204448427 = addInt(i_3204448427, 1);
        }
    };
  };

  
}

function sort_3204448348(a_3204448350, cmp_3204448353, order_3204448354) {
    var n_3204448359 = (a_3204448350).length;
    var b_3204448396 = newSeq_3204448360(chckRange(divInt(n_3204448359, 2), 0, 2147483647));
    var s_3204448397 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3204448397 < n_3204448359)) break Label2;
          var m_3204448398 = subInt(subInt(n_3204448359, 1), s_3204448397);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3204448398)) break Label4;
                mergeAlt_3204448399(a_3204448350, b_3204448396, nimMax(addInt(subInt(m_3204448398, s_3204448397), 1), 0), m_3204448398, addInt(m_3204448398, s_3204448397), cmp_3204448353, order_3204448354);
                m_3204448398 = subInt(m_3204448398, mulInt(s_3204448397, 2));
              }
          };
          s_3204448397 = mulInt(s_3204448397, 2);
        }
    };

  
}

function cmp_3204448328(x_3204448330, y_3204448331) {
  var result_3204448332 = 0;

  BeforeRet: {
    if ((x_3204448330 == y_3204448331)) {
    result_3204448332 = 0;
    break BeforeRet;
    }
    
    if ((x_3204448330 < y_3204448331)) {
    result_3204448332 = -1;
    break BeforeRet;
    }
    
    result_3204448332 = 1;
    break BeforeRet;
  };

  return result_3204448332;

}

function getCompletions_2969575364(editor_2969575365, text_2969575366, contextNode_2969575370) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2969575514(a_2969575532, b_2969575533) {
      var result_2969575538 = 0;

        result_2969575538 = cmp_3204448328(a_2969575532.score, b_2969575533.score);

      return result_2969575538;

    }

  var result_2969575371 = [];

  BeforeRet: {
    result_2969575371 = nimCopy(null, [], NTI3204448274);
    if (((isNone_3003123574(contextNode_2969575370) || (get_3003123566(contextNode_2969575370).kind == 1)) || (get_3003123566(contextNode_2969575370).kind == 0))) {
    var symbols_2969575436 = computeSymbols_3019922496(ctx_2969567289, get_3003123566(contextNode_2969575370), true);
    Label1: {
      var key_2969575441 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2969575442 = null;
      var L_2969579894 = len_3087009065(symbols_2969575436);
      Label2: {
        var h_2969579896 = 0;
        var colontmp__2969579897 = 0;
        colontmp__2969579897 = (symbols_2969575436.data).length - 1;
        var res_2969579898 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2969579898 <= colontmp__2969579897)) break Label4;
              h_2969579896 = res_2969579898;
              if (isFilled_1308622880(symbols_2969575436.data[chckIndx(h_2969579896, 0, (symbols_2969575436.data).length - 1)].Field0)) {
              var colontmp__2969579901 = nimCopy(null, {Field0: nimCopy(null, symbols_2969575436.data[chckIndx(h_2969579896, 0, (symbols_2969575436.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969575436.data[chckIndx(h_2969579896, 0, (symbols_2969575436.data).length - 1)].Field2}, NTI3087008732);
              key_2969575441 = nimCopy(key_2969575441, colontmp__2969579901["Field0"], NTI2046820355);
              symbol_2969575442 = colontmp__2969579901["Field1"];
              var score_2969575443 = fuzzyMatch_1979711568(text_2969575366, symbol_2969575442.name);
              result_2969575371.push({kind: 0, score: score_2969575443, id: nimCopy(null, symbol_2969575442.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3087009065(symbols_2969575436) == L_2969579894))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2969579898 = addInt(res_2969579898, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2969575450 = nimCopy(null, contextNode_2969575370, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym121_2969575450)) Temporary6 = false; else {        var node_2969575473 = get_3003123566(oHEX60gensym121_2969575450);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2969575473.kind == 0);      }    if (Temporary5) {
    result_2969575371.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2969575366, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2969575366, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2969575366, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2969575366, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2969575366, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2969575366, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2969575371.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2969575366, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2969575371.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2969575366, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2969575366);
    result_2969575371.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3204448348(result_2969575371, HEX3Aanonymous_2969575514, 0);
    break BeforeRet;
  };

  return result_2969575371;

}

function updateCompletions_2969569740(self_2969569741) {
  BeforeRet: {
    if ((self_2969569741.textDocument == null)) {
    self_2969569741.completions = nimCopy(null, [], NTI3204448274);
    self_2969569741.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2969575562 = nsuJoinSep(content_2818574085(self_2969569741.textDocument), []);
    self_2969569741.completions = nimCopy(null, getCompletions_2969575364(self_2969569741, text_2969575562, some_3003121890(node_2969569752(self_2969569741))), NTI2969571582);
    self_2969569741.completionText = nimCopy(null, text_2969575562, NTI33554449);
    if ((0 < (self_2969569741.completions).length)) {
    self_2969569741.selectedCompletion = clamp_1660945119(self_2969569741.selectedCompletion, 0, subInt((self_2969569741.completions).length, 1));
    }
    else {
      self_2969569741.selectedCompletion = 0;
    }
    
    markDirty_2415919143(self_2969569741);
  };

  
}

function finishEdit_2969575577(self_2969575578, apply_2969575579) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2969575151(self_2969575578))) {
    break BeforeRet;
    }
    
    if (apply_2969575579) {
    if (!(HEX3DHEX3D_2046820626(self_2969575578.currentlyEditedSymbol, null_2046820646))) {
      var oHEX60gensym643_2969579803 = getSymbol_3019906948(ctx_2969567289, self_2969575578.currentlyEditedSymbol);
      if (!isSome_3087009356(oHEX60gensym643_2969579803)) Temporary1 = false; else {        var sym_2969579826 = get_3087009376(oHEX60gensym643_2969579803);
        Temporary1 = true;      }    if (Temporary1) {
    self_2969575578.document.undoOps.push({kind: 4, id: nimCopy(null, self_2969575578.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2969579826.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2969579826.name = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575578.textDocument), []), NTI33554449);
    if ((sym_2969579826.kind == 0)) {
    var Temporary2 = sym_2969579826;
    if (ConstSet160[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2969579826.name, NTI33554449);
    var Temporary3 = sym_2969579826;
    if (ConstSet161[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3019955286(ctx_2969567289, Temporary3.node);
    }
    
    notifySymbolChanged_3019954718(ctx_2969567289, sym_2969579826);
    }
    
    }
    else {
    if (!((self_2969575578.currentlyEditedNode == null))) {
    self_2969575578.document.undoOps.push({kind: 3, node: self_2969575578.currentlyEditedNode, text: nimCopy(null, self_2969575578.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2969575578.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818574085(self_2969575578.textDocument), [10]), NTI33554449);
    updateNode_3019955286(ctx_2969567289, self_2969575578.currentlyEditedNode);
    }
    }
    }
    
    unregister_2415919268(self_2969575578.textEditor);
    self_2969575578.textEditor = null;
    self_2969575578.textDocument = null;
    self_2969575578.currentlyEditedSymbol = nimCopy(self_2969575578.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575578.currentlyEditedNode = null;
    updateCompletions_2969569740(self_2969575578);
    markDirty_2415919143(self_2969575578);
  };

  
}

function finishEditJsWrapper_2969579794(self_2969579871, apply_2969579872) {
    finishEdit_2969575577(self_2969579871, apply_2969579872);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2969579794(this, apply_));};

function pop_2969576282(s_2969576284, s_2969576284_Idx) {
  var result_2969576285 = null;

    var L_2969576289 = subInt((s_2969576284[s_2969576284_Idx]).length, 1);
    result_2969576285 = s_2969576284[s_2969576284_Idx][chckIndx(L_2969576289, 0, (s_2969576284[s_2969576284_Idx]).length - 1)];
    if (s_2969576284[s_2969576284_Idx].length < chckRange(L_2969576289, 0, 2147483647)) { for (var i = s_2969576284[s_2969576284_Idx].length ; i < chckRange(L_2969576289, 0, 2147483647) ; ++i) s_2969576284[s_2969576284_Idx].push(null); }
               else { s_2969576284[s_2969576284_Idx].length = chckRange(L_2969576289, 0, 2147483647); };

  return result_2969576285;

}

function formatValue_2969569607(result_2969569609, result_2969569609_Idx, value_2969569610, specifier_2969569611) {
    formatValue_721420459(result_2969569609, result_2969569609_Idx, reprEnum(value_2969569610, NTI2969568481), specifier_2969569611);

  
}

function HEX24_2969569599(op_2969569600) {
  var result_2969569601 = [];

    var fmtRes_2969569606 = [mnewString(0)];
    formatValue_2969569607(fmtRes_2969569606, 0, op_2969569600.kind, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2969569606, 0, op_2969569600.text, []);
    fmtRes_2969569606[0].push.apply(fmtRes_2969569606[0], [39]);;
    result_2969569601 = nimCopy(null, fmtRes_2969569606[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820626(op_2969569600.id, null_2046820646))) {
    var fmtRes_2969569619 = [mnewString(0)];
    fmtRes_2969569619[0].push.apply(fmtRes_2969569619[0], [44,32,105,100,32,61,32]);;
    formatValue_3036676344(fmtRes_2969569619, 0, op_2969569600.id, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569619[0]);;
    }
    
    if (!((op_2969569600.node == null))) {
    var fmtRes_2969569633 = [mnewString(0)];
    fmtRes_2969569633[0].push.apply(fmtRes_2969569633[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569633, 0, op_2969569600.node, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569633[0]);;
    }
    
    if (!((op_2969569600.parent == null))) {
    var fmtRes_2969569647 = [mnewString(0)];
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008590(fmtRes_2969569647, 0, op_2969569600.parent, []);
    fmtRes_2969569647[0].push.apply(fmtRes_2969569647[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2701131945(fmtRes_2969569647, 0, op_2969569600.idx, []);
    result_2969569601.push.apply(result_2969569601, fmtRes_2969569647[0]);;
    }
    

  return result_2969569601;

}

function formatValue_2969576300(result_2969576302, result_2969576302_Idx, value_2969576303, specifier_2969576304) {
    formatValue_721420459(result_2969576302, result_2969576302_Idx, HEX24_2969569599(value_2969576303), specifier_2969576304);

  
}

function insert_3003121722(x_3003121724, x_3003121724_Idx, item_3003121725, i_3003121726) {
    var it_3003121747 = null;
    x_3003121724[x_3003121724_Idx] = x_3003121724[x_3003121724_Idx] || []; x_3003121724[x_3003121724_Idx].splice(i_3003121726, 0, it_3003121747);
    x_3003121724[x_3003121724_Idx][chckIndx(i_3003121726, 0, (x_3003121724[x_3003121724_Idx]).length - 1)] = item_3003121725;

  
}

function insert_3003121718(node_3003121719, child_3003121720, idx_3003121721) {
    if (HEX3DHEX3D_2046820626(node_3003121719.id, null_2046820646)) {
    node_3003121719.id = nimCopy(node_3003121719.id, newId_2046820597(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820626(child_3003121720.id, null_2046820646)) {
    child_3003121720.id = nimCopy(child_3003121720.id, newId_2046820597(), NTI2046820355);
    }
    
    child_3003121720.parent = node_3003121719;
    insert_3003121722(node_3003121719, "children", child_3003121720, chckRange(idx_3003121721, 0, 2147483647));

  
}

function undo_2969576272(document_2969576273) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576275 = ({val: null});

  BeforeRet: {
    if (((document_2969576273.undoOps).length == 0)) {
    result_2969576275 = nimCopy(result_2969576275, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var undoOp_2969576294 = pop_2969576282(document_2969576273, "undoOps");
    var fmtRes_2969576299 = [mnewString(0)];
    fmtRes_2969576299[0].push.apply(fmtRes_2969576299[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2969576300(fmtRes_2969576299, 0, undoOp_2969576294, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576299[0], NTI33554449)]);
    switch (undoOp_2969576294.kind) {
    case 0:
      insert_3003121718(undoOp_2969576294.parent, undoOp_2969576294.node, undoOp_2969576294.idx);
      handleNodeInserted_2969571616(document_2969576273, undoOp_2969576294.node);
      document_2969576273.redoOps.push(undoOp_2969576294);;
      result_2969576275 = nimCopy(result_2969576275, some_3003121890(undoOp_2969576294.node), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576312 = HEX5BHEX5D_3003121748(undoOp_2969576294.parent, undoOp_2969576294.idx);
      handleNodeDelete_2969573874(document_2969576273, HEX5BHEX5D_3003121748(undoOp_2969576294.parent, undoOp_2969576294.idx));
      HEX5BHEX5DHEX3D_3003121928(undoOp_2969576294.parent, undoOp_2969576294.idx, undoOp_2969576294.node);
      handleNodeInserted_2969571616(document_2969576273, undoOp_2969576294.node);
      document_2969576273.redoOps.push({kind: 1, parent: undoOp_2969576294.parent, idx: undoOp_2969576294.idx, node: oldNode_2969576312, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576275 = nimCopy(result_2969576275, some_3003121890(undoOp_2969576294.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2969573874(document_2969576273, HEX5BHEX5D_3003121748(undoOp_2969576294.parent, undoOp_2969576294.idx));
      var _ = delete_3003121932(undoOp_2969576294.parent, undoOp_2969576294.idx);
      document_2969576273.redoOps.push(undoOp_2969576294);;
      if ((undoOp_2969576294.idx < len_3003121752(undoOp_2969576294.parent))) {
      result_2969576275 = nimCopy(result_2969576275, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576294.parent, undoOp_2969576294.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2969576294.idx)) {
      result_2969576275 = nimCopy(result_2969576275, some_3003121890(HEX5BHEX5D_3003121748(undoOp_2969576294.parent, subInt(undoOp_2969576294.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576275 = nimCopy(result_2969576275, some_3003121890(undoOp_2969576294.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2969576335 = getSymbol_3019906948(ctx_2969567289, undoOp_2969576294.id);
        if (!isSome_3087009356(oHEX60gensym151_2969576335)) Temporary1 = false; else {          var symbol_2969576358 = get_3087009376(oHEX60gensym151_2969576335);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576273.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2969576294.id, NTI2046820355), text: nimCopy(null, symbol_2969576358.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576358.name = nimCopy(null, undoOp_2969576294.text, NTI33554449);
      if ((symbol_2969576358.kind == 0)) {
      var Temporary2 = symbol_2969576358;
      if (ConstSet169[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576358.name, NTI33554449);
      var Temporary3 = symbol_2969576358;
      if (ConstSet170[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576358);
      }
      
      break;
    case 3:
      document_2969576273.redoOps.push({kind: 3, node: undoOp_2969576294.node, text: nimCopy(null, undoOp_2969576294.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2969576294.node.text = nimCopy(null, undoOp_2969576294.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, undoOp_2969576294.node);
      break;
    }
    result_2969576275 = nimCopy(result_2969576275, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576275;

}

function undo_2969579938(self_2969579939) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575151(self_2969579939)) {
    break BeforeRet;
    }
    
    finishEdit_2969575577(self_2969579939, false);
      var oHEX60gensym653_2969579942 = undo_2969576272(self_2969579939.document);
      if (!isSome_3003123546(oHEX60gensym653_2969579942)) Temporary1 = false; else {        var node_2969579965 = get_3003123566(oHEX60gensym653_2969579942);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969579939, node_2969579965);
    }
    
    markDirty_2415919143(self_2969579939);
  };

  
}

function undoJsWrapper2_2969579934(self_2969579993) {
    undo_2969579938(self_2969579993);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2969579934(this));};

function redo_2969576373(document_2969576374) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2969576376 = ({val: null});

  BeforeRet: {
    if (((document_2969576374.redoOps).length == 0)) {
    result_2969576376 = nimCopy(result_2969576376, none_3003121868(), NTI3003121783);
    break BeforeRet;
    }
    
    var redoOp_2969576385 = pop_2969576282(document_2969576374, "redoOps");
    var fmtRes_2969576390 = [mnewString(0)];
    fmtRes_2969576390[0].push.apply(fmtRes_2969576390[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2969576300(fmtRes_2969576390, 0, redoOp_2969576385, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969576390[0], NTI33554449)]);
    switch (redoOp_2969576385.kind) {
    case 0:
      document_2969576374.undoOps.push({kind: 0, parent: redoOp_2969576385.parent, idx: redoOp_2969576385.idx, node: redoOp_2969576385.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2969573874(document_2969576374, HEX5BHEX5D_3003121748(redoOp_2969576385.parent, redoOp_2969576385.idx));
      var _ = delete_3003121932(redoOp_2969576385.parent, redoOp_2969576385.idx);
      if ((redoOp_2969576385.idx < len_3003121752(redoOp_2969576385.parent))) {
      result_2969576376 = nimCopy(result_2969576376, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576385.parent, redoOp_2969576385.idx)), NTI3003121783);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2969576385.idx)) {
      result_2969576376 = nimCopy(result_2969576376, some_3003121890(HEX5BHEX5D_3003121748(redoOp_2969576385.parent, subInt(redoOp_2969576385.idx, 1))), NTI3003121783);
      break BeforeRet;
      }
      }
      result_2969576376 = nimCopy(result_2969576376, some_3003121890(redoOp_2969576385.parent), NTI3003121783);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2969576409 = HEX5BHEX5D_3003121748(redoOp_2969576385.parent, redoOp_2969576385.idx);
      handleNodeDelete_2969573874(document_2969576374, HEX5BHEX5D_3003121748(redoOp_2969576385.parent, redoOp_2969576385.idx));
      HEX5BHEX5DHEX3D_3003121928(redoOp_2969576385.parent, redoOp_2969576385.idx, redoOp_2969576385.node);
      handleNodeInserted_2969571616(document_2969576374, redoOp_2969576385.node);
      document_2969576374.undoOps.push({kind: 1, parent: redoOp_2969576385.parent, idx: redoOp_2969576385.idx, node: oldNode_2969576409, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2969576376 = nimCopy(result_2969576376, some_3003121890(redoOp_2969576385.node), NTI3003121783);
      break BeforeRet;
      break;
    case 2:
      insert_3003121718(redoOp_2969576385.parent, redoOp_2969576385.node, redoOp_2969576385.idx);
      handleNodeInserted_2969571616(document_2969576374, redoOp_2969576385.node);
      document_2969576374.undoOps.push(redoOp_2969576385);;
      result_2969576376 = nimCopy(result_2969576376, some_3003121890(redoOp_2969576385.node), NTI3003121783);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2969576426 = getSymbol_3019906948(ctx_2969567289, redoOp_2969576385.id);
        if (!isSome_3087009356(oHEX60gensym154_2969576426)) Temporary1 = false; else {          var symbol_2969576449 = get_3087009376(oHEX60gensym154_2969576426);
          Temporary1 = true;        }      if (Temporary1) {
      document_2969576374.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2969576385.id, NTI2046820355), text: nimCopy(null, symbol_2969576449.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2969576449.name = nimCopy(null, redoOp_2969576385.text, NTI33554449);
      if ((symbol_2969576449.kind == 0)) {
      var Temporary2 = symbol_2969576449;
      if (ConstSet171[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2969576449.name, NTI33554449);
      var Temporary3 = symbol_2969576449;
      if (ConstSet172[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3019955286(ctx_2969567289, Temporary3.node);
      }
      
      notifySymbolChanged_3019954718(ctx_2969567289, symbol_2969576449);
      }
      
      break;
    case 3:
      document_2969576374.undoOps.push({kind: 3, node: redoOp_2969576385.node, text: nimCopy(null, redoOp_2969576385.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2969576385.node.text = nimCopy(null, redoOp_2969576385.text, NTI33554449);
      updateNode_3019955286(ctx_2969567289, redoOp_2969576385.node);
      break;
    }
    result_2969576376 = nimCopy(result_2969576376, none_3003121868(), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576376;

}

function redo_2969580015(self_2969580016) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580016)) {
    break BeforeRet;
    }
    
    finishEdit_2969575577(self_2969580016, false);
      var oHEX60gensym662_2969580019 = redo_2969576373(self_2969580016.document);
      if (!isSome_3003123546(oHEX60gensym662_2969580019)) Temporary1 = false; else {        var node_2969580042 = get_3003123566(oHEX60gensym662_2969580019);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2969570829(self_2969580016, node_2969580042);
    }
    
    markDirty_2415919143(self_2969580016);
  };

  
}

function redoJsWrapper2_2969580011(self_2969580070) {
    redo_2969580015(self_2969580070);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2969580011(this));};

function canInsertInto_2969578682(self_2969578683, parent_2969578684) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2969578685 = false;

  BeforeRet: {
    switch (parent_2969578684.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2969578685 = false;
      break BeforeRet;
      break;
    case 4:
      result_2969578685 = (len_3003121752(parent_2969578684) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2969578685 = (len_3003121752(parent_2969578684) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2969578685 = (len_3003121752(parent_2969578684) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2969578685 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_3003121752(parent_2969578684) == 0)) {
      result_2969578685 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym529_2969578688 = computeSymbol_3019919344(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578684, 0), true);
        if (!isSome_3087009356(oHEX60gensym529_2969578688)) Temporary1 = false; else {          var sym_2969578711 = get_3087009376(oHEX60gensym529_2969578688);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2969578711.kind == 1)) {
      var Temporary2 = sym_2969578711;
      if (ConstSet173[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2969578685 = (len_3003121752(parent_2969578684) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2969578685 = (len_3003121752(parent_2969578684) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2969578716 = computeType_3019913434(ctx_2969567289, HEX5BHEX5D_3003121748(parent_2969578684, 0), true);
      if ((typ_2969578716.kind == 4)) {
        var Temporary4 = typ_2969578716;
        if (ConstSet174[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2969578716;
          if (ConstSet175[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2969578716;
          if (ConstSet176[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008313((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008188(true));        }      if (Temporary3) {
      result_2969578685 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2969578716;
      if (ConstSet177[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2969578685 = (len_3003121752(parent_2969578684) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2969578685 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2969578685;

}

function some_2969576504(val_2969576506) {
  var result_2969576507 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969576507.has = true;
    result_2969576507.val = nimCopy(result_2969576507.val, val_2969576506, NTI2969572484);

  return result_2969576507;

}

function none_2969576518() {
  var result_2969576525 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2969576525;

}

function none_2969577005() {
  var result_2969577007 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2969577007 = nimCopy(result_2969577007, none_2969576518(), NTI2969572489);

  return result_2969577007;

}

function createNodeFromAction_2969576464(editor_2969576465, arg_2969576466, node_2969576467, typ_2969576468) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2969576474 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2969576466)) {
    case "deleted":
        var oHEX60gensym155_2969576477 = nimCopy(null, editor_2969576465.deletedNode, NTI3003121783);
        if (!isSome_3003123546(oHEX60gensym155_2969576477)) Temporary1 = false; else {          var node_2969576500 = get_3003123566(oHEX60gensym155_2969576477);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2969576465.deletedNode = nimCopy(editor_2969576465.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969576500)), NTI3003121783);
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969576500, Field1: 0}), NTI2969572489);
      break BeforeRet;
      }
      
      result_2969576474 = nimCopy(result_2969576474, none_2969576518(), NTI2969572489);
      break BeforeRet;
      break;
    case "empty":
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "identifier":
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "number-literal":
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2969576539 = null;
        Label3: {
          var res_2969576609 = null;
          res_2969576609 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576609.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576609.id = nimCopy(res_2969576609.id, newId_2046820597(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2969576612 = null;
              res_2969576612 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576612.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969576609, res_2969576612);
        };
      };
      var node_2969576631 = res_2969576609;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969576631, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2969576639 = null;
        Label9: {
          var res_2969576645 = null;
          res_2969576645 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576645.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576645.id = nimCopy(res_2969576645.id, newId_2046820597(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2969576648 = null;
              res_2969576648 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576648.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576645, res_2969576648);
            Label14: {
              var res_2969576650 = null;
              res_2969576650 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576650.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576645, res_2969576650);
          };
        };
      };
      var node_2969576678 = res_2969576645;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969576678, Field1: 1}), NTI2969572489);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2969576686 = null;
        Label17: {
          var res_2969576692 = null;
          res_2969576692 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969576692.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969576692.id = nimCopy(res_2969576692.id, newId_2046820597(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2969576695 = null;
              res_2969576695 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576695.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576692, res_2969576695);
            Label22: {
              var res_2969576697 = null;
              res_2969576697 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576697.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969576692, res_2969576697);
          };
        };
      };
      var node_2969576725 = res_2969576692;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969576725, Field1: 1}), NTI2969572489);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2969576729 = computeSymbol_3019919344(ctx_2969567289, node_2969576467, true);
        var oHEX60gensym183_2969576732 = nimCopy(null, sym_2969576729, NTI3087008909);
        if (!isSome_3087009356(oHEX60gensym183_2969576732)) Temporary26 = false; else {          var sym_2969576755 = get_3087009376(oHEX60gensym183_2969576732);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2969576755.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2969576755;
      if (ConstSet178[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2969576760 = Temporary24;
      switch (kind_2969576760) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2969576765 = null;
          Label30: {
            var res_2969576771 = null;
            res_2969576771 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576771.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2969576773 = null;
                res_2969576773 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576773.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576771, res_2969576773);
              Label35: {
                var res_2969576775 = null;
                res_2969576775 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576775.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576771, res_2969576775);
            };
          };
        };
        Temporary28 = res_2969576771;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2969576807 = null;
          Label38: {
            var res_2969576813 = null;
            res_2969576813 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576813.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2969576815 = null;
                res_2969576815 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576815.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576813, res_2969576815);
              Label43: {
                var res_2969576817 = null;
                res_2969576817 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576817.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576813, res_2969576817);
              Label45: {
                var res_2969576819 = null;
                res_2969576819 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576819.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576813, res_2969576819);
            };
          };
        };
        Temporary28 = res_2969576813;
        break;
      case 0:
        var typ_2969576856 = computeType_3019913434(ctx_2969567289, node_2969576467, true);
        if ((typ_2969576856.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2969576865 = null;
          Label49: {
            var res_2969576871 = null;
            res_2969576871 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576871.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2969576873 = null;
                res_2969576873 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576873.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576871, res_2969576873);
              Label54: {
                var res_2969576875 = null;
                res_2969576875 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576875.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576871, res_2969576875);
              Label56: {
                var res_2969576877 = null;
                res_2969576877 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576877.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_3003121702(res_2969576871, res_2969576877);
            };
          };
        };
        Temporary47 = res_2969576871;
        }
        else {
        if (!((typ_2969576856.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2969576922 = null;
          Label59: {
            var res_2969576928 = null;
            res_2969576928 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2969576928.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2969576930 = null;
                res_2969576930 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2969576930.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_3003121702(res_2969576928, res_2969576930);
          };
        };
        Temporary47 = res_2969576928;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2969576953 = null;
            Label65: {
              var res_2969576959 = null;
              res_2969576959 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969576959.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2969576961 = null;
                  res_2969576961 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969576961.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969576959, res_2969576961);
            };
          };
          var newNode_2969576980 = res_2969576959;
          Label70: {
            var __2969576984 = null;
            var colontmp__2969580325 = [];
            var Temporary71 = typ_2969576856;
            if (ConstSet179[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2969580325 = Temporary71.paramTypes;
            var i_2969580326 = 0;
            var L_2969580327 = (colontmp__2969580325).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2969580326 < L_2969580327)) break Label73;
                  __2969576984 = colontmp__2969580325[chckIndx(i_2969580326, 0, (colontmp__2969580325).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2969576989 = null;
                    Label75: {
                      var res_2969576995 = null;
                      res_2969576995 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2969576995.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_3003121702(newNode_2969576980, res_2969576995);
                  i_2969580326 = addInt(i_2969580326, 1);
                  if (!(((colontmp__2969580325).length == L_2969580327))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2969576980;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2969576474 = nimCopy(result_2969576474, none_2969577005(), NTI2969572489);
        break BeforeRet;
        break;
      }
      var node_2969577024 = Temporary28;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577024, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2969577032 = null;
        Label78: {
          var res_2969577038 = null;
          res_2969577038 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577038.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2969577040 = null;
              res_2969577040 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577040.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577038, res_2969577040);
            Label83: {
              var res_2969577042 = null;
              res_2969577042 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577042.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577038, res_2969577042);
          };
        };
      };
      var node_2969577070 = res_2969577038;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577070, Field1: 1}), NTI2969572489);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2969576468.kind == 2)) {
      Temporary85 = IdAppendString_2986344459;
      }
      else {
      Temporary85 = IdAdd_2986344451;
      }
      
      var operator_2969577078 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym249_2969577083 = null;
        Label87: {
          var res_2969577089 = null;
          res_2969577089 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577089.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2969577091 = null;
              res_2969577091 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577091.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577091.reff = nimCopy(res_2969577091.reff, operator_2969577078, NTI2046820355);
            };
            add_3003121702(res_2969577089, res_2969577091);
            Label92: {
              var res_2969577094 = null;
              res_2969577094 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577094.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577089, res_2969577094);
            Label94: {
              var res_2969577096 = null;
              res_2969577096 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577096.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577089, res_2969577096);
          };
        };
      };
      var node_2969577133 = res_2969577089;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577133, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2969577141 = null;
        Label97: {
          var res_2969577147 = null;
          res_2969577147 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577147.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2969577149 = null;
              res_2969577149 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577149.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577149.reff = nimCopy(res_2969577149.reff, IdSub_2986344452, NTI2046820355);
            };
            add_3003121702(res_2969577147, res_2969577149);
            Label102: {
              var res_2969577152 = null;
              res_2969577152 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577152.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577147, res_2969577152);
            Label104: {
              var res_2969577154 = null;
              res_2969577154 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577154.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577147, res_2969577154);
          };
        };
      };
      var node_2969577191 = res_2969577147;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577191, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2969577199 = null;
        Label107: {
          var res_2969577205 = null;
          res_2969577205 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577205.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2969577207 = null;
              res_2969577207 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577207.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577207.reff = nimCopy(res_2969577207.reff, IdMul_2986344453, NTI2046820355);
            };
            add_3003121702(res_2969577205, res_2969577207);
            Label112: {
              var res_2969577210 = null;
              res_2969577210 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577210.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577205, res_2969577210);
            Label114: {
              var res_2969577212 = null;
              res_2969577212 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577212.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577205, res_2969577212);
          };
        };
      };
      var node_2969577249 = res_2969577205;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577249, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2969577257 = null;
        Label117: {
          var res_2969577263 = null;
          res_2969577263 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577263.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2969577265 = null;
              res_2969577265 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577265.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577265.reff = nimCopy(res_2969577265.reff, IdDiv_2986344454, NTI2046820355);
            };
            add_3003121702(res_2969577263, res_2969577265);
            Label122: {
              var res_2969577268 = null;
              res_2969577268 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577268.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577263, res_2969577268);
            Label124: {
              var res_2969577270 = null;
              res_2969577270 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577270.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577263, res_2969577270);
          };
        };
      };
      var node_2969577307 = res_2969577263;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577307, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2969577315 = null;
        Label127: {
          var res_2969577321 = null;
          res_2969577321 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577321.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2969577323 = null;
              res_2969577323 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577323.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577323.reff = nimCopy(res_2969577323.reff, IdMod_2986344455, NTI2046820355);
            };
            add_3003121702(res_2969577321, res_2969577323);
            Label132: {
              var res_2969577326 = null;
              res_2969577326 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577326.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577321, res_2969577326);
            Label134: {
              var res_2969577328 = null;
              res_2969577328 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577328.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577321, res_2969577328);
          };
        };
      };
      var node_2969577365 = res_2969577321;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577365, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2969577373 = null;
        Label137: {
          var res_2969577379 = null;
          res_2969577379 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577379.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969577379.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2969577390 = res_2969577379;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577390, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2969577398 = null;
        Label140: {
          var res_2969577404 = null;
          res_2969577404 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577404.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2969577406 = null;
              res_2969577406 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577406.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969577404, res_2969577406);
        };
      };
      var node_2969577425 = res_2969577404;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577425, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2969577433 = null;
        Label146: {
          var res_2969577439 = null;
          res_2969577439 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577439.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2969577441 = null;
              res_2969577441 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577441.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577439, res_2969577441);
            Label151: {
              var res_2969577443 = null;
              res_2969577443 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577443.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577439, res_2969577443);
          };
        };
      };
      var node_2969577471 = res_2969577439;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577471, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2969577479 = null;
        Label154: {
          var res_2969577485 = null;
          res_2969577485 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577485.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2969577487 = null;
              res_2969577487 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577487.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577487.reff = nimCopy(res_2969577487.reff, IdEqual_2986344467, NTI2046820355);
            };
            add_3003121702(res_2969577485, res_2969577487);
            Label159: {
              var res_2969577490 = null;
              res_2969577490 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577490.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577485, res_2969577490);
            Label161: {
              var res_2969577492 = null;
              res_2969577492 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577492.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577485, res_2969577492);
          };
        };
      };
      var node_2969577529 = res_2969577485;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577529, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2969577537 = null;
        Label164: {
          var res_2969577543 = null;
          res_2969577543 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577543.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2969577545 = null;
              res_2969577545 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577545.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577545.reff = nimCopy(res_2969577545.reff, IdNotEqual_2986344468, NTI2046820355);
            };
            add_3003121702(res_2969577543, res_2969577545);
            Label169: {
              var res_2969577548 = null;
              res_2969577548 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577548.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577543, res_2969577548);
            Label171: {
              var res_2969577550 = null;
              res_2969577550 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577550.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577543, res_2969577550);
          };
        };
      };
      var node_2969577587 = res_2969577543;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577587, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2969577595 = null;
        Label174: {
          var res_2969577601 = null;
          res_2969577601 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577601.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2969577603 = null;
              res_2969577603 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577603.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577603.reff = nimCopy(res_2969577603.reff, IdLessEqual_2986344464, NTI2046820355);
            };
            add_3003121702(res_2969577601, res_2969577603);
            Label179: {
              var res_2969577606 = null;
              res_2969577606 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577606.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577601, res_2969577606);
            Label181: {
              var res_2969577608 = null;
              res_2969577608 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577608.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577601, res_2969577608);
          };
        };
      };
      var node_2969577645 = res_2969577601;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577645, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2969577653 = null;
        Label184: {
          var res_2969577659 = null;
          res_2969577659 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577659.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2969577661 = null;
              res_2969577661 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577661.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577661.reff = nimCopy(res_2969577661.reff, IdGreaterEqual_2986344466, NTI2046820355);
            };
            add_3003121702(res_2969577659, res_2969577661);
            Label189: {
              var res_2969577664 = null;
              res_2969577664 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577664.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577659, res_2969577664);
            Label191: {
              var res_2969577666 = null;
              res_2969577666 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577666.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577659, res_2969577666);
          };
        };
      };
      var node_2969577703 = res_2969577659;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577703, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2969577711 = null;
        Label194: {
          var res_2969577717 = null;
          res_2969577717 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577717.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2969577719 = null;
              res_2969577719 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577719.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577719.reff = nimCopy(res_2969577719.reff, IdLess_2986344463, NTI2046820355);
            };
            add_3003121702(res_2969577717, res_2969577719);
            Label199: {
              var res_2969577722 = null;
              res_2969577722 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577722.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577717, res_2969577722);
            Label201: {
              var res_2969577724 = null;
              res_2969577724 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577724.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577717, res_2969577724);
          };
        };
      };
      var node_2969577761 = res_2969577717;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577761, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2969577769 = null;
        Label204: {
          var res_2969577775 = null;
          res_2969577775 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577775.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2969577777 = null;
              res_2969577777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577777.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577777.reff = nimCopy(res_2969577777.reff, IdGreater_2986344465, NTI2046820355);
            };
            add_3003121702(res_2969577775, res_2969577777);
            Label209: {
              var res_2969577780 = null;
              res_2969577780 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577780.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577775, res_2969577780);
            Label211: {
              var res_2969577782 = null;
              res_2969577782 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577782.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577775, res_2969577782);
          };
        };
      };
      var node_2969577819 = res_2969577775;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577819, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2969577827 = null;
        Label214: {
          var res_2969577833 = null;
          res_2969577833 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577833.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2969577835 = null;
              res_2969577835 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577835.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577835.reff = nimCopy(res_2969577835.reff, IdOrder_2986344471, NTI2046820355);
            };
            add_3003121702(res_2969577833, res_2969577835);
            Label219: {
              var res_2969577838 = null;
              res_2969577838 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577838.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577833, res_2969577838);
            Label221: {
              var res_2969577840 = null;
              res_2969577840 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577840.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577833, res_2969577840);
          };
        };
      };
      var node_2969577877 = res_2969577833;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577877, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2969577885 = null;
        Label224: {
          var res_2969577891 = null;
          res_2969577891 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577891.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2969577893 = null;
              res_2969577893 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577893.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577893.reff = nimCopy(res_2969577893.reff, IdAnd_2986344469, NTI2046820355);
            };
            add_3003121702(res_2969577891, res_2969577893);
            Label229: {
              var res_2969577896 = null;
              res_2969577896 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577896.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577891, res_2969577896);
            Label231: {
              var res_2969577898 = null;
              res_2969577898 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577898.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577891, res_2969577898);
          };
        };
      };
      var node_2969577935 = res_2969577891;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577935, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2969577943 = null;
        Label234: {
          var res_2969577949 = null;
          res_2969577949 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969577949.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2969577951 = null;
              res_2969577951 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577951.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2969577951.reff = nimCopy(res_2969577951.reff, IdOr_2986344470, NTI2046820355);
            };
            add_3003121702(res_2969577949, res_2969577951);
            Label239: {
              var res_2969577954 = null;
              res_2969577954 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577954.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577949, res_2969577954);
            Label241: {
              var res_2969577956 = null;
              res_2969577956 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969577956.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969577949, res_2969577956);
          };
        };
      };
      var node_2969577993 = res_2969577949;
      result_2969576474 = nimCopy(result_2969576474, some_2969576504({Field0: node_2969577993, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    default: 
      result_2969576474 = nimCopy(result_2969576474, none_2969577005(), NTI2969572489);
      break BeforeRet;
      break;
    }
  };

  return result_2969576474;

}

function isSome_2969580104(self_2969580106) {
  var result_2969580107 = false;

    result_2969580107 = self_2969580106.has;

  return result_2969580107;

}

function isNone_2969580129(self_2969580131) {
  var result_2969580132 = false;

    result_2969580132 = !(self_2969580131.has);

  return result_2969580132;

}

function get_2969580121(self_2969580123) {
  var result_2969580124 = {Field0: null, Field1: 0};

    if (isNone_2969580129(self_2969580123)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969580124 = self_2969580123.val;

  return result_2969580124;

}

function insertNode_2969573868(document_2969573869, node_2969573870, index_2969573871, newNode_2969573872) {
  var result_2969576236 = ({val: null});

  BeforeRet: {
    var node_2969576237 = node_2969573870;
    var index_2969576238 = index_2969573871;
    if ((node_2969576237 == null)) {
    node_2969576237 = document_2969573869.rootNode;
    index_2969576238 = 0;
    }
    
    document_2969573869.undoOps.push({kind: 2, parent: node_2969576237, idx: index_2969576238, node: newNode_2969573872, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2969573869.redoOps = nimCopy(null, [], NTI2969572190);
    insert_3003121718(node_2969576237, newNode_2969573872, index_2969576238);
    handleNodeInserted_2969571616(document_2969573869, newNode_2969573872);
    result_2969576236 = nimCopy(result_2969576236, some_3003121890(newNode_2969573872), NTI3003121783);
    break BeforeRet;
  };

  return result_2969576236;

}

function shouldEditNode_2969578343(doc_2969578344, node_2969578345) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2969578346 = false;

  BeforeRet: {
    if (((node_2969578345.kind == 0) && eqStrings(node_2969578345.text, []))) {
    result_2969578346 = true;
    break BeforeRet;
    }
    
    if (((node_2969578345.kind == 2) && eqStrings(node_2969578345.text, []))) {
    result_2969578346 = true;
    break BeforeRet;
    }
    
    if ((node_2969578345.kind == 4)) {
    var oHEX60gensym522_2969578361 = computeSymbol_3019919344(ctx_2969567289, node_2969578345, true);
    if (!isSome_3087009356(oHEX60gensym522_2969578361)) Temporary2 = false; else {      var symbol_2969578384 = get_3087009376(oHEX60gensym522_2969578361);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2969578384.name, []);    }    result_2969578346 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2969578345.kind == 5)) {
    var oHEX60gensym523_2969578391 = computeSymbol_3019919344(ctx_2969567289, node_2969578345, true);
    if (!isSome_3087009356(oHEX60gensym523_2969578391)) Temporary4 = false; else {      var symbol_2969578414 = get_3087009376(oHEX60gensym523_2969578391);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2969578414.name, []);    }    result_2969578346 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2969578345.kind == 6)) {
    var oHEX60gensym524_2969578421 = computeSymbol_3019919344(ctx_2969567289, node_2969578345, true);
    if (!isSome_3087009356(oHEX60gensym524_2969578421)) Temporary6 = false; else {      var symbol_2969578444 = get_3087009376(oHEX60gensym524_2969578421);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2969578444.name, []);    }    result_2969578346 = Temporary5;
    break BeforeRet;
    }
    
    result_2969578346 = false;
    break BeforeRet;
  };

  return result_2969578346;

}

function formatValue_2969575166(result_2969575168, result_2969575168_Idx, value_2969575169, specifier_2969575170) {
    formatValue_721420459(result_2969575168, result_2969575168_Idx, reprEnum(value_2969575169, NTI3087007753), specifier_2969575170);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2969580430 = 0;
      var last_2969580431 = 0;
      var eolpos_2969580432 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969580431 < (s_855638695).length) && !((ConstSet181[s_855638695[chckIndx(last_2969580431, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2969580431 = addInt(last_2969580431, 1);
                }
            };
            eolpos_2969580432 = last_2969580431;
            if ((last_2969580431 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2969580431, 0, (s_855638695).length - 1)] == 10)) {
            last_2969580431 = addInt(last_2969580431, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2969580431, 0, (s_855638695).length - 1)] == 13)) {
            last_2969580431 = addInt(last_2969580431, 1);
            if (((last_2969580431 < (s_855638695).length) && (s_855638695[chckIndx(last_2969580431, 0, (s_855638695).length - 1)] == 10))) {
            last_2969580431 = addInt(last_2969580431, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2969580431, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969580432, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2969580430, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2969580432 == last_2969580431)) {
            break Label2;
            }
            
            first_2969580430 = last_2969580431;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573948(self_2818573949, value_2818573950) {
    if (self_2818573949.singleLine) {
    self_2818573949.lines = nimCopy(null, [nsuReplaceStr(value_2818573950, [10], [])], NTI1560281203);
    if (((self_2818573949.lines).length == 0)) {
    self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573949.tsParser == null))) {
    self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, self_2818573949.lines[chckIndx(0, 0, (self_2818573949.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573949.lines = nimCopy(null, nsuSplitLines(value_2818573950, false), NTI855638530);
      if (((self_2818573949.lines).length == 0)) {
      self_2818573949.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573949.tsParser == null))) {
      self_2818573949.currentTree = parseString_2885681211(self_2818573949.tsParser, value_2818573950, none_2885681218());
      }
      
    }
    
    self_2818573949.version = addInt(self_2818573949.version, 1);
    notifyTextChanged_2818573268(self_2818573949);

  
}

function newTextDocument_2818579088(filename_2818579090, content_2818579091, app_2818579092) {
  var result_2818579093 = null;

    result_2818579093 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2818579097 = result_2818579093;
    self_2818579097.filename = nimCopy(null, filename_2818579090, NTI33554449);
    self_2818579097.currentTree = null;
    self_2818579097.appFile = app_2818579092;
    var _ = initTreesitter_2818578870(self_2818579097);
    var language_2818579098 = getLanguageForFile_2902458372(filename_2818579090);
    if (isSome_2348810304(language_2818579098)) {
    self_2818579097.languageId = nimCopy(null, get_2818578907(language_2818579098), NTI33554449);
    }
    
    contentHEX3D_2818573948(self_2818579097, content_2818579091);

  return result_2818579093;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573989(self_2818573990, value_2818573991) {
    if (self_2818573990.singleLine) {
    self_2818573990.lines = nimCopy(null, [nsuJoinSep(value_2818573991, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818574053 = 0;
        var resultHEX60gensym22_2818574060 = newSeq_503316959(chckRange((value_2818573991).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818574064 = [];
          var i_2969580437 = 0;
          var L_2969580438 = (value_2818573991).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2969580437 < L_2969580438)) break Label4;
                itHEX60gensym22_2818574064 = value_2818573991[chckIndx(i_2969580437, 0, (value_2818573991).length - 1)];
                resultHEX60gensym22_2818574060[chckIndx(iHEX60gensym22_2818574053, 0, (resultHEX60gensym22_2818574060).length - 1)] = nimCopy(null, itHEX60gensym22_2818574064, NTI33554449);
                iHEX60gensym22_2818574053 = addInt(iHEX60gensym22_2818574053, 1);
                i_2969580437 = addInt(i_2969580437, 1);
                if (!(((value_2818573991).length == L_2969580438))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573990.lines = nimCopy(null, resultHEX60gensym22_2818574060, NTI503316776);
    }
    
    if (((self_2818573990.lines).length == 0)) {
    self_2818573990.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818574076 = nsuJoinSep(value_2818573991, [10]);
    if (!((self_2818573990.tsParser == null))) {
    self_2818573990.currentTree = parseString_2885681211(self_2818573990.tsParser, strValue_2818574076, none_2885681218());
    }
    
    self_2818573990.version = addInt(self_2818573990.version, 1);
    notifyTextChanged_2818573268(self_2818573990);

  
}

function createTextEditorInstance_2818593993() {
  var result_2818593994 = null;

  BeforeRet: {
    var editor_2818593999 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2449474029({Field0: 0, Field1: 0}), NTI2449473547)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818593999 = createWithPrototype(editor_text_prototype, editor_2818593999);
    result_2818593994 = editor_2818593999;
    break BeforeRet;
  };

  return result_2818593994;

}

function newEditorId_2449473851() {
  var result_2449473852 = 0;

    result_2449473852 = nextEditorId_2449473850[0];
    nextEditorId_2449473850[0] = addInt(nextEditorId_2449473850[0], 1);

  return result_2449473852;

}

function init_2415919138(self_2415919139) {
    self_2415919139.id = newEditorId_2449473851();
    self_2415919139.renderHeader = true;
    self_2415919139.fillAvailableSpace = true;

  
}

function subscribe_2818594057(event_2818594059, callback_2818594061) {
  var result_2818594062 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818594062 = nimCopy(result_2818594062, newId_2046820597(), NTI2046820355);
    event_2818594059.handlers.push({Field0: nimCopy(null, result_2818594062, NTI2046820355), Field1: callback_2818594061});;

  return result_2818594062;

}

function clampSelection_2818573266(self_2818573267) {
    selectionsHEX3D_2818573083(self_2818573267, clampAndMergeSelections_2818572798(self_2818573267, self_2818573267.selectionsInternal));
    markDirty_2415919143(self_2818573267);

  
}

function handleTextDocumentTextChanged_2818593991(self_2818593992) {
    clampSelection_2818573266(self_2818593992);
    updateSearchResults_2818580294(self_2818593992);
    markDirty_2415919143(self_2818593992);

  
}

function newTextEditor_2818594009(document_2818594010, ed_2818594011) {
    
function HEX3Aanonymous_2818594032(__2818594033) {
        handleTextDocumentTextChanged_2818593991(editor_2818594013);

      
    }

  var result_2818594012 = null;

  BeforeRet: {
    var editor_2818594013 = createTextEditorInstance_2818593993();
    editor_2818594013.document = document_2818594010;
    init_2415919138(editor_2818594013);
    if (((editor_2818594013.document.lines).length == 0)) {
    editor_2818594013.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847761(editor_2818594013, ed_2818594011);
    var _ = subscribe_2818594057(document_2818594010.textChanged, HEX3Aanonymous_2818594032);
    result_2818594012 = editor_2818594013;
    break BeforeRet;
  };

  return result_2818594012;

}

function some_3187671942(val_3187671944) {
  var result_3187671945 = ({val: 0, has: false});

    result_3187671945.has = true;
    result_3187671945.val = val_3187671944;

  return result_3187671945;

}

function handleTextDocumentChanged_2969575149(self_2969575150) {
    updateCompletions_2969569740(self_2969575150);
    markDirty_2415919143(self_2969575150);

  
}

function editSymbol_2969575158(self_2969575159, symbol_2969575160) {
    var Temporary1;
    
function HEX3Aanonymous_2969575216(doc_2969575217) {
        handleTextDocumentChanged_2969575149(self_2969575159);

      
    }

    var fmtRes_2969575165 = [mnewString(0)];
    fmtRes_2969575165[0].push.apply(fmtRes_2969575165[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2969575165, 0, symbol_2969575160.name, []);
    fmtRes_2969575165[0].push.apply(fmtRes_2969575165[0], [32,40]);;
    formatValue_2969575166(fmtRes_2969575165, 0, symbol_2969575160.kind, []);
    fmtRes_2969575165[0].push.apply(fmtRes_2969575165[0], [44,32]);;
    formatValue_3036676344(fmtRes_2969575165, 0, symbol_2969575160.id, []);
    fmtRes_2969575165[0].push.apply(fmtRes_2969575165[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575165[0], NTI33554449)]);
    if ((symbol_2969575160.kind == 0)) {
    var fmtRes_2969575187 = [mnewString(0)];
    fmtRes_2969575187[0].push.apply(fmtRes_2969575187[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2969575160;
    if (ConstSet180[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008590(fmtRes_2969575187, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575187[0], NTI33554449)]);
    }
    
    self_2969575159.currentlyEditedNode = null;
    self_2969575159.currentlyEditedSymbol = nimCopy(self_2969575159.currentlyEditedSymbol, symbol_2969575160.id, NTI2046820355);
    self_2969575159.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575159.textDocument, [nimCopy(null, symbol_2969575160.name, NTI33554449)]);
    self_2969575159.textEditor = newTextEditor_2818594009(self_2969575159.textDocument, self_2969575159.editor);
    setMode_2818584223(self_2969575159.textEditor, [105,110,115,101,114,116]);
    self_2969575159.textEditor.renderHeader = false;
    self_2969575159.textEditor.fillAvailableSpace = false;
    self_2969575159.textEditor.disableScrolling = true;
    self_2969575159.textEditor.disableCompletions = true;
    self_2969575159.textEditor.lineNumbers = nimCopy(self_2969575159.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    var _ = subscribe_2818594057(self_2969575159.textDocument.textChanged, HEX3Aanonymous_2969575216);
    updateCompletions_2969569740(self_2969575159);
    markDirty_2415919143(self_2969575159);

  
}

function editNode_2969575246(self_2969575247, node_2969575248) {
    
function HEX3Aanonymous_2969575278(doc_2969575279) {
        handleTextDocumentChanged_2969575149(self_2969575247);

      
    }

    var fmtRes_2969575253 = [mnewString(0)];
    fmtRes_2969575253[0].push.apply(fmtRes_2969575253[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008590(fmtRes_2969575253, 0, node_2969575248, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575253[0], NTI33554449)]);
    self_2969575247.currentlyEditedNode = node_2969575248;
    self_2969575247.currentlyEditedSymbol = nimCopy(self_2969575247.currentlyEditedSymbol, null_2046820646, NTI2046820355);
    self_2969575247.textDocument = newTextDocument_2818579088([], [], false);
    contentHEX3D_2818573989(self_2969575247.textDocument, nsuSplitLines(node_2969575248.text, false));
    self_2969575247.textEditor = newTextEditor_2818594009(self_2969575247.textDocument, self_2969575247.editor);
    setMode_2818584223(self_2969575247.textEditor, [105,110,115,101,114,116]);
    self_2969575247.textEditor.renderHeader = false;
    self_2969575247.textEditor.fillAvailableSpace = false;
    self_2969575247.textEditor.disableScrolling = true;
    self_2969575247.textEditor.disableCompletions = true;
    self_2969575247.textEditor.lineNumbers = nimCopy(self_2969575247.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    var _ = subscribe_2818594057(self_2969575247.textDocument.textChanged, HEX3Aanonymous_2969575278);
    updateCompletions_2969569740(self_2969575247);
    markDirty_2415919143(self_2969575247);

  
}

function tryEdit_2969575308(self_2969575309, node_2969575310) {
      var Temporary1;
      var Temporary2;

  var result_2969575311 = false;

  BeforeRet: {
      var oHEX60gensym119_2969575314 = getSymbol_3019906948(ctx_2969567289, node_2969575310.id);
      if (!isSome_3087009356(oHEX60gensym119_2969575314)) Temporary1 = false; else {        var sym_2969575337 = get_3087009376(oHEX60gensym119_2969575314);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2969575158(self_2969575309, sym_2969575337);
    result_2969575311 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2969575340 = getSymbol_3019906948(ctx_2969567289, node_2969575310.reff);
      if (!isSome_3087009356(oHEX60gensym120_2969575340)) Temporary2 = false; else {        var sym_2969575363 = get_3087009376(oHEX60gensym120_2969575340);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2969575158(self_2969575309, sym_2969575363);
    result_2969575311 = true;
    break BeforeRet;
    }
    else {
      switch (node_2969575310.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2969575246(self_2969575309, node_2969575310);
        result_2969575311 = true;
        break BeforeRet;
        break;
      default: 
        result_2969575311 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2969575311;

}

function insertAfterSmart_2969580091(self_2969580092, nodeTemplate_2969580093) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2969580173(n_2969580176) {
        var result_2969580179 = false;

          result_2969580179 = shouldEditNode_2969578343(self_2969580092.document, n_2969580176);

        return result_2969580179;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580092)) {
    break BeforeRet;
    }
    
    var node_2969580094 = node_2969569752(self_2969580092);
    Label1: {
      var next_2969580095 = null;
      if (true) {
      Temporary2 = node_2969580094;
      }
      else {
      Temporary2 = node_2969580094.parent;
      }
      
      var node_2969580262 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2969580262 == null))) break Label4;
            next_2969580095 = node_2969580262;
            if (canInsertInto_2969578682(self_2969580092, next_2969580095.parent)) {
            node_2969580094 = next_2969580095;
            break Label1;
            }
            
            node_2969580262 = node_2969580262.parent;
          }
      };
    };
    var index_2969580096 = index_3003121772(node_2969580094);
      var oHEX60gensym672_2969580099 = createNodeFromAction_2969576464(self_2969580092, nodeTemplate_2969580093, node_2969580094, errorType_3087008131());
      if (!isSome_2969580104(oHEX60gensym672_2969580099)) Temporary5 = false; else {        var newNodeIndex_2969580144 = nimCopy(null, get_2969580121(oHEX60gensym672_2969580099), NTI2969572484);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2969580145 = newNodeIndex_2969580144["Field0"];
    var __2969580146 = newNodeIndex_2969580144["Field1"];
      var oHEX60gensym674_2969580149 = insertNode_2969573868(self_2969580092.document, node_2969580094.parent, addInt(index_2969580096, 1), newNode_2969580145);
      if (!isSome_3003123546(oHEX60gensym674_2969580149)) Temporary6 = false; else {        var node_2969580172 = get_3003123566(oHEX60gensym674_2969580149);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2969570829(self_2969580092, node_2969580172);
    Label7: {
      var __2969580180 = 0;
      var emptyNode_2969580181 = null;
      var colontmp__2969580265 = null;
      colontmp__2969580265 = HEX3Aanonymous_2969580173;
      var i_2969580273 = 0;
      Label8: {
        var __2969580275 = 0;
        var child_2969580276 = null;
        var n_2969580277 = newNode_2969580145;
        var idx_2969580278 = -1;
        var i_2969580279 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2969580278 == -1)) {
              __2969580275 = i_2969580279;
              child_2969580276 = n_2969580277;
              if (colontmp__2969580265(child_2969580276)) {
              __2969580180 = i_2969580273;
              emptyNode_2969580181 = child_2969580276;
              nodeHEX3D_2969570829(self_2969580092, emptyNode_2969580181);
              var _ = tryEdit_2969575308(self_2969580092, node_2969569752(self_2969580092));
              break Label7;
              i_2969580273 = addInt(i_2969580273, 1);
              }
              
              }
              
              if ((addInt(idx_2969580278, 1) < len_3003121752(n_2969580277))) {
              n_2969580277 = HEX5BHEX5D_3003121748(n_2969580277, addInt(idx_2969580278, 1));
              idx_2969580278 = -1;
              }
              else {
                var oHEX60gensym55_2969580281 = next_3003121857(n_2969580277);
                if (!isSome_3003123546(oHEX60gensym55_2969580281)) Temporary13 = false; else {                  var ne_2969580282 = get_3003123566(oHEX60gensym55_2969580281);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2969580277 == newNode_2969580145));                }              if (Temporary12) {
              n_2969580277 = ne_2969580282;
              idx_2969580278 = -1;
              }
              else {
              if (((!((n_2969580277.parent == null)) && !((n_2969580277 == newNode_2969580145))) && !((n_2969580277.parent == newNode_2969580145)))) {
              idx_2969580278 = index_3003121772(n_2969580277);
              n_2969580277 = n_2969580277.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2969580279 = addInt(i_2969580279, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580186 = [mnewString(0)];
      fmtRes_2969580186[0].push.apply(fmtRes_2969580186[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580186, 0, newNode_2969580145, []);
      fmtRes_2969580186[0].push.apply(fmtRes_2969580186[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580186, 0, node_2969569752(self_2969580092).parent, []);
      fmtRes_2969580186[0].push.apply(fmtRes_2969580186[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580186, 0, addInt(index_2969580096, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580186[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2969580087(self_2969580239, nodeTemplate_2969580240) {
    insertAfterSmart_2969580091(self_2969580239, nodeTemplate_2969580240);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2969580087(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2969580446(self_2969580447, nodeTemplate_2969580448) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580505(n_2969580508) {
        var result_2969580511 = false;

          result_2969580511 = shouldEditNode_2969578343(self_2969580447.document, n_2969580508);

        return result_2969580511;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580447)) {
    break BeforeRet;
    }
    
    var node_2969580449 = node_2969569752(self_2969580447);
    var index_2969580450 = index_3003121772(node_2969580449);
      var oHEX60gensym685_2969580453 = createNodeFromAction_2969576464(self_2969580447, nodeTemplate_2969580448, node_2969580449, errorType_3087008131());
      if (!isSome_2969580104(oHEX60gensym685_2969580453)) Temporary1 = false; else {        var newNodeIndex_2969580476 = nimCopy(null, get_2969580121(oHEX60gensym685_2969580453), NTI2969572484);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580477 = newNodeIndex_2969580476["Field0"];
    var __2969580478 = newNodeIndex_2969580476["Field1"];
      var oHEX60gensym686_2969580481 = insertNode_2969573868(self_2969580447.document, node_2969580449.parent, addInt(index_2969580450, 1), newNode_2969580477);
      if (!isSome_3003123546(oHEX60gensym686_2969580481)) Temporary2 = false; else {        var node_2969580504 = get_3003123566(oHEX60gensym686_2969580481);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580447, node_2969580504);
    Label3: {
      var __2969580512 = 0;
      var emptyNode_2969580513 = null;
      var colontmp__2969580584 = null;
      colontmp__2969580584 = HEX3Aanonymous_2969580505;
      var i_2969580585 = 0;
      Label4: {
        var __2969580587 = 0;
        var child_2969580588 = null;
        var n_2969580589 = newNode_2969580477;
        var idx_2969580590 = -1;
        var i_2969580591 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580590 == -1)) {
              __2969580587 = i_2969580591;
              child_2969580588 = n_2969580589;
              if (colontmp__2969580584(child_2969580588)) {
              __2969580512 = i_2969580585;
              emptyNode_2969580513 = child_2969580588;
              nodeHEX3D_2969570829(self_2969580447, emptyNode_2969580513);
              var _ = tryEdit_2969575308(self_2969580447, node_2969569752(self_2969580447));
              break Label3;
              i_2969580585 = addInt(i_2969580585, 1);
              }
              
              }
              
              if ((addInt(idx_2969580590, 1) < len_3003121752(n_2969580589))) {
              n_2969580589 = HEX5BHEX5D_3003121748(n_2969580589, addInt(idx_2969580590, 1));
              idx_2969580590 = -1;
              }
              else {
                var oHEX60gensym55_2969580593 = next_3003121857(n_2969580589);
                if (!isSome_3003123546(oHEX60gensym55_2969580593)) Temporary9 = false; else {                  var ne_2969580594 = get_3003123566(oHEX60gensym55_2969580593);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580589 == newNode_2969580477));                }              if (Temporary8) {
              n_2969580589 = ne_2969580594;
              idx_2969580590 = -1;
              }
              else {
              if (((!((n_2969580589.parent == null)) && !((n_2969580589 == newNode_2969580477))) && !((n_2969580589.parent == newNode_2969580477)))) {
              idx_2969580590 = index_3003121772(n_2969580589);
              n_2969580589 = n_2969580589.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580591 = addInt(i_2969580591, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580518 = [mnewString(0)];
      fmtRes_2969580518[0].push.apply(fmtRes_2969580518[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580518, 0, newNode_2969580477, []);
      fmtRes_2969580518[0].push.apply(fmtRes_2969580518[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580518, 0, node_2969569752(self_2969580447).parent, []);
      fmtRes_2969580518[0].push.apply(fmtRes_2969580518[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580518, 0, addInt(index_2969580450, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580518[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2969580442(self_2969580562, nodeTemplate_2969580563) {
    insertAfter_2969580446(self_2969580562, nodeTemplate_2969580563);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2969580442(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2969580601(self_2969580602, nodeTemplate_2969580603) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580659(n_2969580662) {
        var result_2969580665 = false;

          result_2969580665 = shouldEditNode_2969578343(self_2969580602.document, n_2969580662);

        return result_2969580665;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580602)) {
    break BeforeRet;
    }
    
    var index_2969580604 = index_3003121772(node_2969569752(self_2969580602));
      var oHEX60gensym697_2969580607 = createNodeFromAction_2969576464(self_2969580602, nodeTemplate_2969580603, node_2969569752(self_2969580602), errorType_3087008131());
      if (!isSome_2969580104(oHEX60gensym697_2969580607)) Temporary1 = false; else {        var newNodeIndex_2969580630 = nimCopy(null, get_2969580121(oHEX60gensym697_2969580607), NTI2969572484);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580631 = newNodeIndex_2969580630["Field0"];
    var __2969580632 = newNodeIndex_2969580630["Field1"];
      var oHEX60gensym698_2969580635 = insertNode_2969573868(self_2969580602.document, node_2969569752(self_2969580602).parent, index_2969580604, newNode_2969580631);
      if (!isSome_3003123546(oHEX60gensym698_2969580635)) Temporary2 = false; else {        var node_2969580658 = get_3003123566(oHEX60gensym698_2969580635);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580602, node_2969580658);
    Label3: {
      var __2969580666 = 0;
      var emptyNode_2969580667 = null;
      var colontmp__2969580738 = null;
      colontmp__2969580738 = HEX3Aanonymous_2969580659;
      var i_2969580739 = 0;
      Label4: {
        var __2969580741 = 0;
        var child_2969580742 = null;
        var n_2969580743 = newNode_2969580631;
        var idx_2969580744 = -1;
        var i_2969580745 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580744 == -1)) {
              __2969580741 = i_2969580745;
              child_2969580742 = n_2969580743;
              if (colontmp__2969580738(child_2969580742)) {
              __2969580666 = i_2969580739;
              emptyNode_2969580667 = child_2969580742;
              nodeHEX3D_2969570829(self_2969580602, emptyNode_2969580667);
              var _ = tryEdit_2969575308(self_2969580602, node_2969569752(self_2969580602));
              break Label3;
              i_2969580739 = addInt(i_2969580739, 1);
              }
              
              }
              
              if ((addInt(idx_2969580744, 1) < len_3003121752(n_2969580743))) {
              n_2969580743 = HEX5BHEX5D_3003121748(n_2969580743, addInt(idx_2969580744, 1));
              idx_2969580744 = -1;
              }
              else {
                var oHEX60gensym55_2969580747 = next_3003121857(n_2969580743);
                if (!isSome_3003123546(oHEX60gensym55_2969580747)) Temporary9 = false; else {                  var ne_2969580748 = get_3003123566(oHEX60gensym55_2969580747);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580743 == newNode_2969580631));                }              if (Temporary8) {
              n_2969580743 = ne_2969580748;
              idx_2969580744 = -1;
              }
              else {
              if (((!((n_2969580743.parent == null)) && !((n_2969580743 == newNode_2969580631))) && !((n_2969580743.parent == newNode_2969580631)))) {
              idx_2969580744 = index_3003121772(n_2969580743);
              n_2969580743 = n_2969580743.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580745 = addInt(i_2969580745, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580672 = [mnewString(0)];
      fmtRes_2969580672[0].push.apply(fmtRes_2969580672[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580672, 0, newNode_2969580631, []);
      fmtRes_2969580672[0].push.apply(fmtRes_2969580672[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580672, 0, node_2969569752(self_2969580602).parent, []);
      fmtRes_2969580672[0].push.apply(fmtRes_2969580672[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580672, 0, index_2969580604, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580672[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2969580597(self_2969580716, nodeTemplate_2969580717) {
    insertBefore_2969580601(self_2969580716, nodeTemplate_2969580717);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2969580597(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2969580755(self_2969580756, nodeTemplate_2969580757) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2969580812(n_2969580815) {
        var result_2969580818 = false;

          result_2969580818 = shouldEditNode_2969578343(self_2969580756.document, n_2969580815);

        return result_2969580818;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580756)) {
    break BeforeRet;
    }
    
      var oHEX60gensym709_2969580760 = createNodeFromAction_2969576464(self_2969580756, nodeTemplate_2969580757, node_2969569752(self_2969580756), errorType_3087008131());
      if (!isSome_2969580104(oHEX60gensym709_2969580760)) Temporary1 = false; else {        var newNodeIndex_2969580783 = nimCopy(null, get_2969580121(oHEX60gensym709_2969580760), NTI2969572484);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580784 = newNodeIndex_2969580783["Field0"];
    var __2969580785 = newNodeIndex_2969580783["Field1"];
      var oHEX60gensym710_2969580788 = insertNode_2969573868(self_2969580756.document, node_2969569752(self_2969580756), len_3003121752(node_2969569752(self_2969580756)), newNode_2969580784);
      if (!isSome_3003123546(oHEX60gensym710_2969580788)) Temporary2 = false; else {        var node_2969580811 = get_3003123566(oHEX60gensym710_2969580788);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969580756, node_2969580811);
    Label3: {
      var __2969580819 = 0;
      var emptyNode_2969580820 = null;
      var colontmp__2969580891 = null;
      colontmp__2969580891 = HEX3Aanonymous_2969580812;
      var i_2969580892 = 0;
      Label4: {
        var __2969580894 = 0;
        var child_2969580895 = null;
        var n_2969580896 = newNode_2969580784;
        var idx_2969580897 = -1;
        var i_2969580898 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969580897 == -1)) {
              __2969580894 = i_2969580898;
              child_2969580895 = n_2969580896;
              if (colontmp__2969580891(child_2969580895)) {
              __2969580819 = i_2969580892;
              emptyNode_2969580820 = child_2969580895;
              nodeHEX3D_2969570829(self_2969580756, emptyNode_2969580820);
              var _ = tryEdit_2969575308(self_2969580756, node_2969569752(self_2969580756));
              break Label3;
              i_2969580892 = addInt(i_2969580892, 1);
              }
              
              }
              
              if ((addInt(idx_2969580897, 1) < len_3003121752(n_2969580896))) {
              n_2969580896 = HEX5BHEX5D_3003121748(n_2969580896, addInt(idx_2969580897, 1));
              idx_2969580897 = -1;
              }
              else {
                var oHEX60gensym55_2969580900 = next_3003121857(n_2969580896);
                if (!isSome_3003123546(oHEX60gensym55_2969580900)) Temporary9 = false; else {                  var ne_2969580901 = get_3003123566(oHEX60gensym55_2969580900);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969580896 == newNode_2969580784));                }              if (Temporary8) {
              n_2969580896 = ne_2969580901;
              idx_2969580897 = -1;
              }
              else {
              if (((!((n_2969580896.parent == null)) && !((n_2969580896 == newNode_2969580784))) && !((n_2969580896.parent == newNode_2969580784)))) {
              idx_2969580897 = index_3003121772(n_2969580896);
              n_2969580896 = n_2969580896.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969580898 = addInt(i_2969580898, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2969580825 = [mnewString(0)];
      fmtRes_2969580825[0].push.apply(fmtRes_2969580825[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008590(fmtRes_2969580825, 0, newNode_2969580784, []);
      fmtRes_2969580825[0].push.apply(fmtRes_2969580825[0], [32,105,110,116,111,32]);;
      formatValue_3087008590(fmtRes_2969580825, 0, node_2969569752(self_2969580756), []);
      fmtRes_2969580825[0].push.apply(fmtRes_2969580825[0], [32,97,116,32]);;
      formatValue_2701131945(fmtRes_2969580825, 0, len_3003121752(node_2969569752(self_2969580756)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969580825[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2969580751(self_2969580869, nodeTemplate_2969580870) {
    insertChild_2969580755(self_2969580869, nodeTemplate_2969580870);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2969580751(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2969580908(self_2969580909, nodeTemplate_2969580910) {
      var Temporary1;
      
function HEX3Aanonymous_2969580939(n_2969580942) {
        var result_2969580945 = false;

          result_2969580945 = shouldEditNode_2969578343(self_2969580909.document, n_2969580942);

        return result_2969580945;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2969575151(self_2969580909)) {
    break BeforeRet;
    }
    
      var oHEX60gensym721_2969580913 = createNodeFromAction_2969576464(self_2969580909, nodeTemplate_2969580910, node_2969569752(self_2969580909), errorType_3087008131());
      if (!isSome_2969580104(oHEX60gensym721_2969580913)) Temporary1 = false; else {        var newNodeIndex_2969580936 = nimCopy(null, get_2969580121(oHEX60gensym721_2969580913), NTI2969572484);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969580937 = newNodeIndex_2969580936["Field0"];
    var __2969580938 = newNodeIndex_2969580936["Field1"];
    nodeHEX3D_2969570829(self_2969580909, replaceNode_2969576145(self_2969580909.document, node_2969569752(self_2969580909), newNode_2969580937));
    Label2: {
      var __2969580946 = 0;
      var emptyNode_2969580947 = null;
      var colontmp__2969580998 = null;
      colontmp__2969580998 = HEX3Aanonymous_2969580939;
      var i_2969580999 = 0;
      Label3: {
        var __2969581001 = 0;
        var child_2969581002 = null;
        var n_2969581003 = newNode_2969580937;
        var idx_2969581004 = -1;
        var i_2969581005 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581004 == -1)) {
              __2969581001 = i_2969581005;
              child_2969581002 = n_2969581003;
              if (colontmp__2969580998(child_2969581002)) {
              __2969580946 = i_2969580999;
              emptyNode_2969580947 = child_2969581002;
              nodeHEX3D_2969570829(self_2969580909, emptyNode_2969580947);
              var _ = tryEdit_2969575308(self_2969580909, node_2969569752(self_2969580909));
              break Label2;
              i_2969580999 = addInt(i_2969580999, 1);
              }
              
              }
              
              if ((addInt(idx_2969581004, 1) < len_3003121752(n_2969581003))) {
              n_2969581003 = HEX5BHEX5D_3003121748(n_2969581003, addInt(idx_2969581004, 1));
              idx_2969581004 = -1;
              }
              else {
                var oHEX60gensym55_2969581007 = next_3003121857(n_2969581003);
                if (!isSome_3003123546(oHEX60gensym55_2969581007)) Temporary8 = false; else {                  var ne_2969581008 = get_3003123566(oHEX60gensym55_2969581007);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581003 == newNode_2969580937));                }              if (Temporary7) {
              n_2969581003 = ne_2969581008;
              idx_2969581004 = -1;
              }
              else {
              if (((!((n_2969581003.parent == null)) && !((n_2969581003 == newNode_2969580937))) && !((n_2969581003.parent == newNode_2969580937)))) {
              idx_2969581004 = index_3003121772(n_2969581003);
              n_2969581003 = n_2969581003.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581005 = addInt(i_2969581005, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2969580904(self_2969580976, nodeTemplate_2969580977) {
    replace_2969580908(self_2969580976, nodeTemplate_2969580977);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2969580904(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2969581015(self_2969581016, nodeTemplate_2969581017) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2969581050(n_2969581053) {
        var result_2969581056 = false;

          result_2969581056 = shouldEditNode_2969578343(self_2969581016.document, n_2969581053);

        return result_2969581056;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2969575151(self_2969581016)) {
    break BeforeRet;
    }
    
      if (!(node_2969569752(self_2969581016).kind == 0)) Temporary1 = false; else {        var oHEX60gensym731_2969581024 = createNodeFromAction_2969576464(self_2969581016, nodeTemplate_2969581017, node_2969569752(self_2969581016), errorType_3087008131());
        if (!isSome_2969580104(oHEX60gensym731_2969581024)) Temporary2 = false; else {          var newNodeIndex_2969581047 = nimCopy(null, get_2969580121(oHEX60gensym731_2969581024), NTI2969572484);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2969581048 = newNodeIndex_2969581047["Field0"];
    var __2969581049 = newNodeIndex_2969581047["Field1"];
    nodeHEX3D_2969570829(self_2969581016, replaceNode_2969576145(self_2969581016.document, node_2969569752(self_2969581016), newNode_2969581048));
    Label3: {
      var __2969581057 = 0;
      var emptyNode_2969581058 = null;
      var colontmp__2969581109 = null;
      colontmp__2969581109 = HEX3Aanonymous_2969581050;
      var i_2969581110 = 0;
      Label4: {
        var __2969581112 = 0;
        var child_2969581113 = null;
        var n_2969581114 = newNode_2969581048;
        var idx_2969581115 = -1;
        var i_2969581116 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2969581115 == -1)) {
              __2969581112 = i_2969581116;
              child_2969581113 = n_2969581114;
              if (colontmp__2969581109(child_2969581113)) {
              __2969581057 = i_2969581110;
              emptyNode_2969581058 = child_2969581113;
              nodeHEX3D_2969570829(self_2969581016, emptyNode_2969581058);
              var _ = tryEdit_2969575308(self_2969581016, node_2969569752(self_2969581016));
              break Label3;
              i_2969581110 = addInt(i_2969581110, 1);
              }
              
              }
              
              if ((addInt(idx_2969581115, 1) < len_3003121752(n_2969581114))) {
              n_2969581114 = HEX5BHEX5D_3003121748(n_2969581114, addInt(idx_2969581115, 1));
              idx_2969581115 = -1;
              }
              else {
                var oHEX60gensym55_2969581118 = next_3003121857(n_2969581114);
                if (!isSome_3003123546(oHEX60gensym55_2969581118)) Temporary9 = false; else {                  var ne_2969581119 = get_3003123566(oHEX60gensym55_2969581118);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2969581114 == newNode_2969581048));                }              if (Temporary8) {
              n_2969581114 = ne_2969581119;
              idx_2969581115 = -1;
              }
              else {
              if (((!((n_2969581114.parent == null)) && !((n_2969581114 == newNode_2969581048))) && !((n_2969581114.parent == newNode_2969581048)))) {
              idx_2969581115 = index_3003121772(n_2969581114);
              n_2969581114 = n_2969581114.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2969581116 = addInt(i_2969581116, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2969581011(self_2969581087, nodeTemplate_2969581088) {
    replaceEmpty_2969581015(self_2969581087, nodeTemplate_2969581088);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2969581011(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2969581126(self_2969581127) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969581127)) {
    break BeforeRet;
    }
    
    var node_2969581128 = node_2969569752(self_2969581127);
    if (((node_2969581128.parent == null) || (node_2969581128.parent == self_2969581127.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2969581137 = node_2969581128.parent;
    var _ = deleteNode_2969576209(self_2969581127.document, node_2969569752(self_2969581127));
    nodeHEX3D_2969570829(self_2969581127, replaceNode_2969576145(self_2969581127.document, parent_2969581137, node_2969581128));
  };

  
}

function replaceParentJsWrapper_2969581122(self_2969581165) {
    replaceParent_2969581126(self_2969581165);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2969581122(this));};

function wrap_2969581186(self_2969581187, nodeTemplate_2969581188) {
      var Temporary1;
      
function HEX3Aanonymous_2969581219(n_2969581222) {
        var result_2969581225 = false;

          result_2969581225 = (n_2969581222.kind == 0);

        return result_2969581225;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2969581232(n_2969581235) {
        var result_2969581238 = false;

          result_2969581238 = shouldEditNode_2969578343(self_2969581187.document, n_2969581235);

        return result_2969581238;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2969575151(self_2969581187)) {
    break BeforeRet;
    }
    
    var typ_2969581189 = computeType_3019913434(ctx_2969567289, node_2969569752(self_2969581187), true);
      var oHEX60gensym749_2969581192 = createNodeFromAction_2969576464(self_2969581187, nodeTemplate_2969581188, node_2969569752(self_2969581187), typ_2969581189);
      if (!isSome_2969580104(oHEX60gensym749_2969581192)) Temporary1 = false; else {        var newNodeIndex_2969581215 = nimCopy(null, get_2969580121(oHEX60gensym749_2969581192), NTI2969572484);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2969581216 = newNodeIndex_2969581215["Field0"];
    var index_2969581217 = newNodeIndex_2969581215["Field1"];
    var oldNode_2969581218 = node_2969569752(self_2969581187);
    nodeHEX3D_2969570829(self_2969581187, replaceNode_2969576145(self_2969581187.document, node_2969569752(self_2969581187), newNode_2969581216));
    Label2: {
      var i_2969581230 = 0;
      var emptyNode_2969581231 = null;
      var colontmp__2969581300 = null;
      colontmp__2969581300 = HEX3Aanonymous_2969581219;
      var i_2969581301 = 0;
      Label3: {
        var __2969581303 = 0;
        var child_2969581304 = null;
        var n_2969581305 = newNode_2969581216;
        var idx_2969581306 = -1;
        var i_2969581307 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2969581306 == -1)) {
              __2969581303 = i_2969581307;
              child_2969581304 = n_2969581305;
              if (colontmp__2969581300(child_2969581304)) {
              i_2969581230 = i_2969581301;
              emptyNode_2969581231 = child_2969581304;
              if ((i_2969581230 == index_2969581217)) {
              nodeHEX3D_2969570829(self_2969581187, replaceNode_2969576145(self_2969581187.document, emptyNode_2969581231, oldNode_2969581218));
              break Label2;
              }
              
              i_2969581301 = addInt(i_2969581301, 1);
              }
              
              }
              
              if ((addInt(idx_2969581306, 1) < len_3003121752(n_2969581305))) {
              n_2969581305 = HEX5BHEX5D_3003121748(n_2969581305, addInt(idx_2969581306, 1));
              idx_2969581306 = -1;
              }
              else {
                var oHEX60gensym55_2969581309 = next_3003121857(n_2969581305);
                if (!isSome_3003123546(oHEX60gensym55_2969581309)) Temporary8 = false; else {                  var ne_2969581310 = get_3003123566(oHEX60gensym55_2969581309);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2969581305 == newNode_2969581216));                }              if (Temporary7) {
              n_2969581305 = ne_2969581310;
              idx_2969581306 = -1;
              }
              else {
              if (((!((n_2969581305.parent == null)) && !((n_2969581305 == newNode_2969581216))) && !((n_2969581305.parent == newNode_2969581216)))) {
              idx_2969581306 = index_3003121772(n_2969581305);
              n_2969581305 = n_2969581305.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2969581307 = addInt(i_2969581307, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2969581239 = 0;
      var emptyNode_2969581240 = null;
      var colontmp__2969581312 = null;
      colontmp__2969581312 = HEX3Aanonymous_2969581232;
      var i_2969581313 = 0;
      Label10: {
        var __2969581315 = 0;
        var child_2969581316 = null;
        var n_2969581317 = newNode_2969581216;
        var idx_2969581318 = -1;
        var i_2969581319 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2969581318 == -1)) {
              __2969581315 = i_2969581319;
              child_2969581316 = n_2969581317;
              if (colontmp__2969581312(child_2969581316)) {
              __2969581239 = i_2969581313;
              emptyNode_2969581240 = child_2969581316;
              nodeHEX3D_2969570829(self_2969581187, emptyNode_2969581240);
              var _ = tryEdit_2969575308(self_2969581187, node_2969569752(self_2969581187));
              break Label9;
              i_2969581313 = addInt(i_2969581313, 1);
              }
              
              }
              
              if ((addInt(idx_2969581318, 1) < len_3003121752(n_2969581317))) {
              n_2969581317 = HEX5BHEX5D_3003121748(n_2969581317, addInt(idx_2969581318, 1));
              idx_2969581318 = -1;
              }
              else {
                var oHEX60gensym55_2969581321 = next_3003121857(n_2969581317);
                if (!isSome_3003123546(oHEX60gensym55_2969581321)) Temporary15 = false; else {                  var ne_2969581322 = get_3003123566(oHEX60gensym55_2969581321);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2969581317 == newNode_2969581216));                }              if (Temporary14) {
              n_2969581317 = ne_2969581322;
              idx_2969581318 = -1;
              }
              else {
              if (((!((n_2969581317.parent == null)) && !((n_2969581317 == newNode_2969581216))) && !((n_2969581317.parent == newNode_2969581216)))) {
              idx_2969581318 = index_3003121772(n_2969581317);
              n_2969581317 = n_2969581317.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2969581319 = addInt(i_2969581319, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2969581182(self_2969581278, nodeTemplate_2969581279) {
    wrap_2969581186(self_2969581278, nodeTemplate_2969581279);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2969581182(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2969581329(self_2969581330) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2969575151(self_2969581330)) {
    break BeforeRet;
    }
    
    var current_2969581331 = node_2969569752(self_2969581330);
    Label1: {
      var emptyNode_2969581332 = null;
      var colontmp__2969581380 = null;
      colontmp__2969581380 = node_2969569752(self_2969581330);
      var idx_2969581381 = 0;
      var n_2969581382 = colontmp__2969581380;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969581382 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969581382), 1)), subInt(idx_2969581381, 1))) {
            n_2969581382 = HEX5BHEX5D_3003121748(n_2969581382, subInt(idx_2969581381, 1));
            idx_2969581381 = len_3003121752(n_2969581382);
            }
            else {
              var oHEX60gensym74_2969581384 = prev_3003121903(n_2969581382);
              if (!isSome_3003123546(oHEX60gensym74_2969581384)) Temporary4 = false; else {                var ne_2969581385 = get_3003123566(oHEX60gensym74_2969581384);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2969581332 = n_2969581382;
            if ((!((emptyNode_2969581332 == current_2969581331)) && shouldEditNode_2969578343(self_2969581330.document, emptyNode_2969581332))) {
            nodeHEX3D_2969570829(self_2969581330, emptyNode_2969581332);
            var _ = tryEdit_2969575308(self_2969581330, node_2969569752(self_2969581330));
            break Label1;
            }
            
            n_2969581382 = ne_2969581385;
            idx_2969581381 = len_3003121752(n_2969581382);
            }
            else {
              emptyNode_2969581332 = n_2969581382;
              if ((!((emptyNode_2969581332 == current_2969581331)) && shouldEditNode_2969578343(self_2969581330.document, emptyNode_2969581332))) {
              nodeHEX3D_2969570829(self_2969581330, emptyNode_2969581332);
              var _ = tryEdit_2969575308(self_2969581330, node_2969569752(self_2969581330));
              break Label1;
              }
              
              idx_2969581381 = index_3003121772(n_2969581382);
              n_2969581382 = n_2969581382.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2969581325(self_2969581364) {
    editPrevEmpty_2969581329(self_2969581364);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2969581325(this));};

function editNextEmpty_2969581392(self_2969581393) {
      
function HEX3Aanonymous_2969581395(n_2969581398) {
        var result_2969581401 = false;

          result_2969581401 = (!((n_2969581398 == current_2969581394)) && shouldEditNode_2969578343(self_2969581393.document, n_2969581398));

        return result_2969581401;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2969575151(self_2969581393)) {
    break BeforeRet;
    }
    
    var current_2969581394 = node_2969569752(self_2969581393);
    Label1: {
      var __2969581406 = 0;
      var emptyNode_2969581407 = null;
      var colontmp__2969581451 = null;
      var colontmp__2969581452 = null;
      colontmp__2969581451 = node_2969569752(self_2969581393);
      colontmp__2969581452 = HEX3Aanonymous_2969581395;
      var i_2969581453 = 0;
      Label2: {
        var __2969581455 = 0;
        var child_2969581456 = null;
        var n_2969581457 = colontmp__2969581451;
        var idx_2969581458 = -1;
        var i_2969581459 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2969581458 == -1)) {
              __2969581455 = i_2969581459;
              child_2969581456 = n_2969581457;
              if (colontmp__2969581452(child_2969581456)) {
              __2969581406 = i_2969581453;
              emptyNode_2969581407 = child_2969581456;
              nodeHEX3D_2969570829(self_2969581393, emptyNode_2969581407);
              var _ = tryEdit_2969575308(self_2969581393, node_2969569752(self_2969581393));
              break Label1;
              i_2969581453 = addInt(i_2969581453, 1);
              }
              
              }
              
              if ((addInt(idx_2969581458, 1) < len_3003121752(n_2969581457))) {
              n_2969581457 = HEX5BHEX5D_3003121748(n_2969581457, addInt(idx_2969581458, 1));
              idx_2969581458 = -1;
              }
              else {
                var oHEX60gensym55_2969581461 = next_3003121857(n_2969581457);
                if (!isSome_3003123546(oHEX60gensym55_2969581461)) Temporary7 = false; else {                  var ne_2969581462 = get_3003123566(oHEX60gensym55_2969581461);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2969581457 == null));                }              if (Temporary6) {
              n_2969581457 = ne_2969581462;
              idx_2969581458 = -1;
              }
              else {
              if (((!((n_2969581457.parent == null)) && !((n_2969581457 == null))) && !((n_2969581457.parent == null)))) {
              idx_2969581458 = index_3003121772(n_2969581457);
              n_2969581457 = n_2969581457.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2969581459 = addInt(i_2969581459, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2969581388(self_2969581435) {
    editNextEmpty_2969581392(self_2969581435);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2969581388(this));};

function rename_2969581469(self_2969581470) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969581470)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2969575308(self_2969581470, node_2969569752(self_2969581470));
  };

  
}

function renameJsWrapper_2969581465(self_2969581498) {
    rename_2969581469(self_2969581498);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2969581465(this));};

function selectPrevCompletion_2969581519(self_2969581520) {
    if ((0 < (self_2969581520.completions).length)) {
    self_2969581520.selectedCompletion = clamp_1660945119(subInt(self_2969581520.selectedCompletion, 1), 0, subInt((self_2969581520.completions).length, 1));
    }
    else {
      self_2969581520.selectedCompletion = 0;
    }
    
    self_2969581520.scrollToCompletion = nimCopy(self_2969581520.scrollToCompletion, some_1191184367(self_2969581520.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581520);

  
}

function selectPrevCompletionJsWrapper2_2969581515(self_2969581562) {
    selectPrevCompletion_2969581519(self_2969581562);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2969581515(this));};

function selectNextCompletion_2969581583(self_2969581584) {
    if ((0 < (self_2969581584.completions).length)) {
    self_2969581584.selectedCompletion = clamp_1660945119(addInt(self_2969581584.selectedCompletion, 1), 0, subInt((self_2969581584.completions).length, 1));
    }
    else {
      self_2969581584.selectedCompletion = 0;
    }
    
    self_2969581584.scrollToCompletion = nimCopy(self_2969581584.scrollToCompletion, some_1191184367(self_2969581584.selectedCompletion), NTI1191183280);
    markDirty_2415919143(self_2969581584);

  
}

function selectNextCompletionJsWrapper2_2969581579(self_2969581626) {
    selectNextCompletion_2969581583(self_2969581626);

  
}
editor_ast_prototype.selectNextCompletion2 = function() { return (selectNextCompletionJsWrapper2_2969581579(this));};

function createDefaultNode_2969577999(editor_2969578000, kind_2969578001) {
  var result_2969578003 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2969578001) {
    case 0:
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: {kind: 0, id: newId_2046820597(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 1:
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 2:
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 3:
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2969578020 = null;
        Label2: {
          var res_2969578026 = null;
          res_2969578026 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578026.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578026.id = nimCopy(res_2969578026.id, newId_2046820597(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2969578029 = null;
              res_2969578029 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578029.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578026, res_2969578029);
        };
      };
      var node_2969578048 = res_2969578026;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578048, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2969578056 = null;
        Label8: {
          var res_2969578062 = null;
          res_2969578062 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578062.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578062.id = nimCopy(res_2969578062.id, newId_2046820597(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2969578065 = null;
              res_2969578065 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578065.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578062, res_2969578065);
            Label13: {
              var res_2969578067 = null;
              res_2969578067 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578067.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578062, res_2969578067);
          };
        };
      };
      var node_2969578095 = res_2969578062;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578095, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2969578103 = null;
        Label16: {
          var res_2969578109 = null;
          res_2969578109 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578109.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2969578109.id = nimCopy(res_2969578109.id, newId_2046820597(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2969578112 = null;
              res_2969578112 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578112.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578109, res_2969578112);
            Label21: {
              var res_2969578114 = null;
              res_2969578114 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578114.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578109, res_2969578114);
          };
        };
      };
      var node_2969578142 = res_2969578109;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578142, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2969578150 = null;
        Label24: {
          var res_2969578156 = null;
          res_2969578156 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578156.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2969578158 = null;
              res_2969578158 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578158.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578156, res_2969578158);
            Label29: {
              var res_2969578160 = null;
              res_2969578160 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578160.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578156, res_2969578160);
            Label31: {
              var res_2969578162 = null;
              res_2969578162 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578162.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2969578164 = null;
                  res_2969578164 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2969578164.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_3003121702(res_2969578162, res_2969578164);
            };
            add_3003121702(res_2969578156, res_2969578162);
          };
        };
      };
      var node_2969578210 = res_2969578156;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578210, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2969578218 = null;
        Label37: {
          var res_2969578224 = null;
          res_2969578224 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578224.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2969578226 = null;
              res_2969578226 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578226.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578224, res_2969578226);
            Label42: {
              var res_2969578228 = null;
              res_2969578228 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578228.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578224, res_2969578228);
          };
        };
      };
      var node_2969578256 = res_2969578224;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578256, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2969578264 = null;
        Label45: {
          var res_2969578270 = null;
          res_2969578270 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578270.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2969578272 = null;
              res_2969578272 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578272.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578270, res_2969578272);
            Label50: {
              var res_2969578274 = null;
              res_2969578274 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578274.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_3003121702(res_2969578270, res_2969578274);
          };
        };
      };
      var node_2969578302 = res_2969578270;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578302, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2969578310 = null;
        Label53: {
          var res_2969578316 = null;
          res_2969578316 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2969578316.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2969578318 = null;
              res_2969578318 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2969578318.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_3003121702(res_2969578316, res_2969578318);
        };
      };
      var node_2969578337 = res_2969578316;
      result_2969578003 = nimCopy(result_2969578003, some_2969576504({Field0: node_2969578337, Field1: 0}), NTI2969572489);
      break BeforeRet;
      break;
    default: 
      result_2969578003 = nimCopy(result_2969578003, none_2969577005(), NTI2969572489);
      break BeforeRet;
      break;
    }
  };

  return result_2969578003;

}

function applySelectedCompletion_2969581647(self_2969581648) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2969581753(n_2969581756) {
          var result_2969581759 = false;

            result_2969581759 = shouldEditNode_2969578343(self_2969581648.document, n_2969581756);

          return result_2969581759;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((self_2969581648.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((self_2969581648.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2969581656 = nimCopy(null, self_2969581648.completions[chckIndx(self_2969581648.selectedCompletion, 0, (self_2969581648.completions).length - 1)], NTI2969568638);
    var completionText_2969581657 = nimCopy(null, self_2969581648.completionText, NTI33554449);
    var fmtRes_2969581662 = [mnewString(0)];
    fmtRes_2969581662[0].push.apply(fmtRes_2969581662[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2701131945(fmtRes_2969581662, 0, self_2969581648.selectedCompletion, []);
    fmtRes_2969581662[0].push.apply(fmtRes_2969581662[0], [32,40]);;
    formatValue_721420459(fmtRes_2969581662, 0, completionText_2969581657, []);
    fmtRes_2969581662[0].push.apply(fmtRes_2969581662[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969581662[0], NTI33554449)]);
    finishEdit_2969575577(self_2969581648, false);
    markDirty_2415919143(self_2969581648);
    switch (com_2969581656.kind) {
    case 0:
        var Temporary2 = com_2969581656;
        if (ConstSet182[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym803_2969581670 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym803_2969581670)) Temporary1 = false; else {          var symbol_2969581693 = get_3087009376(oHEX60gensym803_2969581670);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2969570829(self_2969581648, replaceNode_2969576145(self_2969581648.document, node_2969569752(self_2969581648), {kind: 1, reff: nimCopy(null, symbol_2969581693.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2969581656;
        if (ConstSet183[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2969568637)); }
        var oHEX60gensym804_2969581696 = createDefaultNode_2969577999(self_2969581648, Temporary4.nodeKind);
        if (!isSome_2969580104(oHEX60gensym804_2969581696)) Temporary3 = false; else {          var nodeIndex_2969581719 = nimCopy(null, get_2969580121(oHEX60gensym804_2969581696), NTI2969572484);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2969581720 = nodeIndex_2969581719["Field0"];
      var __2969581721 = nodeIndex_2969581719["Field1"];
      var _ = replaceNode_2969576145(self_2969581648.document, node_2969569752(self_2969581648), newNode_2969581720);
      if ((newNode_2969581720.kind == 2)) {
      newNode_2969581720.text = nimCopy(null, completionText_2969581657, NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581720);
      }
      else {
      if ((newNode_2969581720.kind == 3)) {
      if (!((completionText_2969581657[chckIndx(0, 0, (completionText_2969581657).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,54,48,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2969581720.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2969581657, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3019955286(ctx_2969567289, newNode_2969581720);
      }
      }
      nodeHEX3D_2969570829(self_2969581648, newNode_2969581720);
      Label5: {
        var __2969581760 = 0;
        var emptyNode_2969581761 = null;
        var colontmp__2969581805 = null;
        colontmp__2969581805 = HEX3Aanonymous_2969581753;
        var i_2969581806 = 0;
        Label6: {
          var __2969581808 = 0;
          var child_2969581809 = null;
          var n_2969581810 = newNode_2969581720;
          var idx_2969581811 = -1;
          var i_2969581812 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969581811 == -1)) {
                __2969581808 = i_2969581812;
                child_2969581809 = n_2969581810;
                if (colontmp__2969581805(child_2969581809)) {
                __2969581760 = i_2969581806;
                emptyNode_2969581761 = child_2969581809;
                nodeHEX3D_2969570829(self_2969581648, emptyNode_2969581761);
                var _ = tryEdit_2969575308(self_2969581648, node_2969569752(self_2969581648));
                break Label5;
                i_2969581806 = addInt(i_2969581806, 1);
                }
                
                }
                
                if ((addInt(idx_2969581811, 1) < len_3003121752(n_2969581810))) {
                n_2969581810 = HEX5BHEX5D_3003121748(n_2969581810, addInt(idx_2969581811, 1));
                idx_2969581811 = -1;
                }
                else {
                  var oHEX60gensym55_2969581814 = next_3003121857(n_2969581810);
                  if (!isSome_3003123546(oHEX60gensym55_2969581814)) Temporary11 = false; else {                    var ne_2969581815 = get_3003123566(oHEX60gensym55_2969581814);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969581810 == newNode_2969581720));                  }                if (Temporary10) {
                n_2969581810 = ne_2969581815;
                idx_2969581811 = -1;
                }
                else {
                if (((!((n_2969581810.parent == null)) && !((n_2969581810 == newNode_2969581720))) && !((n_2969581810.parent == newNode_2969581720)))) {
                idx_2969581811 = index_3003121772(n_2969581810);
                n_2969581810 = n_2969581810.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969581812 = addInt(i_2969581812, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2969581643(self_2969581789) {
    applySelectedCompletion_2969581647(self_2969581789);

  
}
editor_ast_prototype.applySelectedCompletion2 = function() { return (applySelectedCompletionJsWrapper2_2969581643(this));};

function cancelAndNextCompletion_2969581858(self_2969581859) {
    finishEdit_2969575577(self_2969581859, false);
    editNextEmpty_2969581392(self_2969581859);

  
}

function cancelAndNextCompletionJsWrapper_2969581854(self_2969581887) {
    cancelAndNextCompletion_2969581858(self_2969581887);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2969581854(this));};

function cancelAndPrevCompletion_2969581908(self_2969581909) {
    finishEdit_2969575577(self_2969581909, false);
    editPrevEmpty_2969581329(self_2969581909);

  
}

function cancelAndPrevCompletionJsWrapper_2969581904(self_2969581937) {
    cancelAndPrevCompletion_2969581908(self_2969581937);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2969581904(this));};

function cancelAndDelete_2969581958(self_2969581959) {
    finishEdit_2969575577(self_2969581959, false);
    self_2969581959.deletedNode = nimCopy(self_2969581959.deletedNode, some_3003121890(node_2969569752(self_2969581959)), NTI3003121783);
    nodeHEX3D_2969570829(self_2969581959, deleteNode_2969576209(self_2969581959.document, node_2969569752(self_2969581959)));

  
}

function cancelAndDeleteJsWrapper_2969581954(self_2969581990) {
    cancelAndDelete_2969581958(self_2969581990);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2969581954(this));};

function none_3003121842() {
  var result_3003121849 = ({val: 0, has: false});

  return result_3003121849;

}

function index_3003121834(node_3003121835, parent_3003121836) {
  var result_3003121838 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_3003121835.parent == null)) {
    result_3003121838 = nimCopy(result_3003121838, none_3003121842(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_3003121835.parent == parent_3003121836)) {
    result_3003121838 = nimCopy(result_3003121838, some_1191184367(index_3003121772(node_3003121835)), NTI1191183280);
    break BeforeRet;
    }
    
    result_3003121838 = nimCopy(result_3003121838, index_3003121834(node_3003121835.parent, parent_3003121836), NTI1191183280);
    break BeforeRet;
  };

  return result_3003121838;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2969582011(self_2969582012) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2969582013 = isEditing_2969575151(self_2969582012);
    finishEdit_2969575577(self_2969582012, false);
    var targetNode_2969582020 = none_3003121871();
    Label1: {
      var next_2969582021 = null;
      var colontmp__2969582161 = null;
      colontmp__2969582161 = node_2969569752(self_2969582012);
      var idx_2969582162 = 0;
      var n_2969582163 = colontmp__2969582161;
      Label2: {
          Label3: while (true) {
          if (!!((n_2969582163 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969582163), 1)), subInt(idx_2969582162, 1))) {
            n_2969582163 = HEX5BHEX5D_3003121748(n_2969582163, subInt(idx_2969582162, 1));
            idx_2969582162 = len_3003121752(n_2969582163);
            }
            else {
              var oHEX60gensym74_2969582165 = prev_3003121903(n_2969582163);
              if (!isSome_3003123546(oHEX60gensym74_2969582165)) Temporary4 = false; else {                var ne_2969582166 = get_3003123566(oHEX60gensym74_2969582165);
                Temporary4 = true;              }            if (Temporary4) {
            next_2969582021 = n_2969582163;
            Label5: {
              if ((next_2969582021 == node_2969569752(self_2969582012))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578682(self_2969582012, next_2969582021) && (!((next_2969582021 == node_2969569752(self_2969582012).parent)) || (0 < index_3003121772(node_2969569752(self_2969582012)))))) {
              targetNode_2969582020 = nimCopy(targetNode_2969582020, some_3003121890(next_2969582021), NTI3003121804);
              break Label1;
              }
              
            };
            n_2969582163 = ne_2969582166;
            idx_2969582162 = len_3003121752(n_2969582163);
            }
            else {
              next_2969582021 = n_2969582163;
              Label6: {
                if ((next_2969582021 == node_2969569752(self_2969582012))) {
                break Label6;
                }
                
                if ((canInsertInto_2969578682(self_2969582012, next_2969582021) && (!((next_2969582021 == node_2969569752(self_2969582012).parent)) || (0 < index_3003121772(node_2969569752(self_2969582012)))))) {
                targetNode_2969582020 = nimCopy(targetNode_2969582020, some_3003121890(next_2969582021), NTI3003121804);
                break Label1;
                }
                
              };
              idx_2969582162 = index_3003121772(n_2969582163);
              n_2969582163 = n_2969582163.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym843_2969582035 = nimCopy(null, targetNode_2969582020, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym843_2969582035)) Temporary7 = false; else {        var newParent_2969582058 = get_3003123566(oHEX60gensym843_2969582035);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2969582059 = node_2969569752(self_2969582012);
    if ((nodeToMove_2969582059.parent == newParent_2969582058)) {
    Temporary8 = subInt(index_3003121772(nodeToMove_2969582059), 1);
    }
    else {
      var oHEX60gensym844_2969582066 = index_3003121834(nodeToMove_2969582059, newParent_2969582058);
      if (!isSome_1191185117(oHEX60gensym844_2969582066)) Temporary9 = false; else {        var index_2969582089 = get_1191185211(oHEX60gensym844_2969582066);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2969582089;
    }
    else {
    Temporary8 = len_3003121752(newParent_2969582058);
    }
    }
    var index_2969582090 = Temporary8;
    nodeHEX3D_2969570829(self_2969582012, deleteNode_2969576209(self_2969582012.document, nodeToMove_2969582059));
      var oHEX60gensym845_2969582093 = insertNode_2969573868(self_2969582012.document, newParent_2969582058, index_2969582090, nodeToMove_2969582059);
      if (!isSome_3003123546(oHEX60gensym845_2969582093)) Temporary10 = false; else {        var newNode_2969582116 = get_3003123566(oHEX60gensym845_2969582093);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2969570829(self_2969582012, newNode_2969582116);
    if (wasEditing_2969582013) {
    var _ = tryEdit_2969575308(self_2969582012, node_2969569752(self_2969582012));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2969582007(self_2969582144) {
    moveNodeToPrevSpace_2969582011(self_2969582144);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2969582007(this));};

function moveNodeToNextSpace_2969582173(self_2969582174) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2969582175 = isEditing_2969575151(self_2969582174);
    finishEdit_2969575577(self_2969582174, false);
    var targetNode_2969582182 = none_3003121871();
    Label1: {
      var __2969582183 = 0;
      var next_2969582184 = null;
      var colontmp__2969582324 = null;
      var colontmp__2969582325 = 0;
      colontmp__2969582324 = node_2969569752(self_2969582174).parent;
      colontmp__2969582325 = index_3003121772(node_2969569752(self_2969582174));
      var n_2969582327 = colontmp__2969582324;
      var idx_2969582328 = colontmp__2969582325;
      var i_2969582329 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2969582328 == subInt(len_3003121752(n_2969582327), 1))) {
            var colontmp__2969582332 = nimCopy(null, {Field0: i_2969582329, Field1: n_2969582327}, NTI2969569466);
            __2969582183 = colontmp__2969582332["Field0"];
            next_2969582184 = colontmp__2969582332["Field1"];
            Label5: {
              if ((next_2969582184 == node_2969569752(self_2969582174))) {
              break Label5;
              }
              
              if ((canInsertInto_2969578682(self_2969582174, next_2969582184) && (!((next_2969582184 == node_2969569752(self_2969582174).parent)) || (addInt(index_3003121772(node_2969569752(self_2969582174)), 1) < len_3003121752(node_2969569752(self_2969582174).parent))))) {
              targetNode_2969582182 = nimCopy(targetNode_2969582182, some_3003121890(next_2969582184), NTI3003121804);
              break Label1;
              }
              
            };
            if (((!((n_2969582327.parent == null)) && !((n_2969582327 == null))) && !((n_2969582327.parent == null)))) {
            idx_2969582328 = index_3003121772(n_2969582327);
            n_2969582327 = n_2969582327.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2969582328, 1) < len_3003121752(colontmp__2969582324))) {
            n_2969582327 = HEX5BHEX5D_3003121748(n_2969582327, addInt(idx_2969582328, 1));
            idx_2969582328 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2969582329 = addInt(i_2969582329, 1);
            }
          }
      };
    };
      var oHEX60gensym855_2969582198 = nimCopy(null, targetNode_2969582182, NTI3003121804);
      if (!isSome_3003123546(oHEX60gensym855_2969582198)) Temporary6 = false; else {        var newParent_2969582221 = get_3003123566(oHEX60gensym855_2969582198);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2969582222 = node_2969569752(self_2969582174);
    if ((nodeToMove_2969582222.parent == newParent_2969582221)) {
    Temporary7 = addInt(index_3003121772(nodeToMove_2969582222), 1);
    }
    else {
      var oHEX60gensym856_2969582229 = index_3003121834(nodeToMove_2969582222, newParent_2969582221);
      if (!isSome_1191185117(oHEX60gensym856_2969582229)) Temporary8 = false; else {        var index_2969582252 = get_1191185211(oHEX60gensym856_2969582229);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2969582252, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2969582253 = Temporary7;
    nodeHEX3D_2969570829(self_2969582174, deleteNode_2969576209(self_2969582174.document, nodeToMove_2969582222));
      var oHEX60gensym857_2969582256 = insertNode_2969573868(self_2969582174.document, newParent_2969582221, index_2969582253, nodeToMove_2969582222);
      if (!isSome_3003123546(oHEX60gensym857_2969582256)) Temporary9 = false; else {        var newNode_2969582279 = get_3003123566(oHEX60gensym857_2969582256);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2969570829(self_2969582174, newNode_2969582279);
    if (wasEditing_2969582175) {
    var _ = tryEdit_2969575308(self_2969582174, node_2969569752(self_2969582174));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2969582169(self_2969582307) {
    moveNodeToNextSpace_2969582173(self_2969582307);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2969582169(this));};

function popLast_2969571086(deq_2969571088) {
    var Temporary1;

  var result_2969571089 = null;

    if ((deq_2969571088.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2969571088.count = subInt(deq_2969571088.count, 1);
    deq_2969571088.tail = (subInt(deq_2969571088.tail, 1) & deq_2969571088.mask);
    Temporary1 = deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)];
    deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)] = genericReset(deq_2969571088.data[chckIndx(deq_2969571088.tail, 0, (deq_2969571088.data).length - 1)], NTI3003121668);
    result_2969571089 = Temporary1;

  return result_2969571089;

}

function addFirst_2969571117(deq_2969571119, item_2969571120) {
    expandIfNeeded_2969570862(deq_2969571119);
    deq_2969571119.count = addInt(deq_2969571119.count, 1);
    deq_2969571119.head = (subInt(deq_2969571119.head, 1) & deq_2969571119.mask);
    deq_2969571119.data[chckIndx(deq_2969571119.head, 0, (deq_2969571119.data).length - 1)] = item_2969571120;

  
}

function selectPrevNode_2969571016(editor_2969571017) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571017.selectionHistory))) break Label2;
          var node_2969571099 = popLast_2969571086(editor_2969571017.selectionHistory);
          if (((!((node_2969571099 == null)) && !((node_2969571099.parent == null))) && (base_3003121758(node_2969571099) == editor_2969571017.document.rootNode))) {
          addFirst_2969571117(editor_2969571017.selectionHistory, editor_2969571017.selectedNode);
          editor_2969571017.selectedNode = node_2969571099;
          handleSelectedNodeChanged_2969569755(editor_2969571017);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2969582339(self_2969582340) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969582340)) {
    break BeforeRet;
    }
    
    selectPrevNode_2969571016(self_2969582340);
  };

  
}

function selectPrevJsWrapper2_2969582335(self_2969582368) {
    selectPrev_2969582339(self_2969582368);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2969582335(this));};

function selectNextNode_2969571134(editor_2969571135) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2969570994(editor_2969571135.selectionHistory))) break Label2;
          var node_2969571207 = popFirst_2969571003(editor_2969571135.selectionHistory);
          if (((!((node_2969571207 == null)) && !((node_2969571207.parent == null))) && (base_3003121758(node_2969571207) == editor_2969571135.document.rootNode))) {
          addLast_2969570853(editor_2969571135.selectionHistory, editor_2969571135.selectedNode);
          editor_2969571135.selectedNode = node_2969571207;
          handleSelectedNodeChanged_2969569755(editor_2969571135);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2969582390(self_2969582391) {
  BeforeRet: {
    if (isEditing_2969575151(self_2969582391)) {
    break BeforeRet;
    }
    
    selectNextNode_2969571134(self_2969582391);
  };

  
}

function selectNextJsWrapper2_2969582386(self_2969582419) {
    selectNext_2969582390(self_2969582419);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2969582386(this));};

function setCompletions_3187671114(self_3187671115, newCompletions_3187671116) {
    if (!(((newCompletions_3187671116).length == (self_3187671115.completions).length))) {
    markDirty_2483027989(self_3187671115);
    }
    else {
      Label1: {
        var i_3187671134 = 0;
        var colontmp__2969582753 = 0;
        colontmp__2969582753 = (newCompletions_3187671116).length - 1;
        var res_2969582754 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_2969582754 <= colontmp__2969582753)) break Label3;
              i_3187671134 = res_2969582754;
              if (changed_3187671112(self_3187671115.completions[chckIndx(i_3187671134, 0, (self_3187671115.completions).length - 1)], newCompletions_3187671116[chckIndx(i_3187671134, 0, (newCompletions_3187671116).length - 1)])) {
              markDirty_2483027989(self_3187671115);
              break Label1;
              }
              
              res_2969582754 = addInt(res_2969582754, 1);
            }
        };
      };
    }
    
    self_3187671115.completions = nimCopy(null, newCompletions_3187671116, NTI3187671080);
    if ((0 < (self_3187671115.completions).length)) {
    self_3187671115.selected = clamp_1660945119(self_3187671115.selected, 0, subInt((self_3187671115.completions).length, 1));
    if (!((self_3187671115.handleItemSelected == null))) {
    self_3187671115.handleItemSelected(self_3187671115.completions[chckIndx(self_3187671115.selected, 0, (self_3187671115.completions).length - 1)]);
    }
    
    }
    else {
      self_3187671115.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3187671179(self_3187671180) {
  var result_3187671182 = null;

  BeforeRet: {
    var text_3187671188 = nsuJoinSep(content_2818574085(self_3187671180.textEditor.document), []);
    var newCompletions_3187671193 = (await self_3187671180.getCompletionsAsync(self_3187671180, text_3187671188));
    setCompletions_3187671114(self_3187671180, newCompletions_3187671193);
    result_3187671182 = undefined;
    break BeforeRet;
  };

  return result_3187671182;

}
async function updateCompletionsAsyncIter_3187671206(self_3187671207) {
  var result_3187671209 = null;

  BeforeRet: {
    var text_3187671215 = nsuJoinSep(content_2818574085(self_3187671207.textEditor.document), []);
    setCompletions_3187671114(self_3187671207, []);
    (await self_3187671207.getCompletionsAsyncIter(self_3187671207, text_3187671215));
    result_3187671209 = undefined;
    break BeforeRet;
  };

  return result_3187671209;

}

function updateCompletions_3187671226(self_3187671227) {
    var text_3187671228 = nsuJoinSep(content_2818574085(self_3187671227.textEditor.document), []);
    if (!((self_3187671227.getCompletions == null))) {
    var newCompletions_3187671232 = self_3187671227.getCompletions(self_3187671227, text_3187671228);
    setCompletions_3187671114(self_3187671227, newCompletions_3187671232);
    }
    else {
    if (!((self_3187671227.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3187671179(self_3187671227);
    }
    else {
    if (!((self_3187671227.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3187671206(self_3187671227);
    }
    else {
      var fmtRes_3187671243 = [mnewString(0)];
      fmtRes_3187671243[0].push.apply(fmtRes_3187671243[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2701131945(fmtRes_3187671243, 0, self_3187671227.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3187671243[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3187671834(self_3187671835) {
    updateCompletions_3187671226(self_3187671835);
    self_3187671835.selected = 0;
    if ((!((self_3187671835.handleItemSelected == null)) && (self_3187671835.selected < (self_3187671835.completions).length))) {
    self_3187671835.handleItemSelected(self_3187671835.completions[chckIndx(self_3187671835.selected, 0, (self_3187671835.completions).length - 1)]);
    }
    

  
}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_2969582768 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582768 < L_855639192)) break Label3;
            i_855639197 = i_2969582768;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_2969582768 = addInt(i_2969582768, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__2969582771 = 0;
        var colontmp__2969582772 = 0;
        colontmp__2969582771 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__2969582772 = addInt(a_855639190, (b_855639188).length);
        var res_2969582773 = colontmp__2969582771;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__2969582772 <= res_2969582773)) break Label6;
              iHEX60gensym109_855639210 = res_2969582773;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_2969582773 = subInt(res_2969582773, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__2969582776 = 0;
          var colontmp__2969582777 = 0;
          colontmp__2969582776 = addInt(a_855639190, (b_855639188).length);
          colontmp__2969582777 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_2969582778 = colontmp__2969582776;
          Label8: {
              Label9: while (true) {
              if (!(res_2969582778 <= colontmp__2969582777)) break Label9;
                iHEX60gensym109_855639216 = res_2969582778;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_2969582778 = addInt(res_2969582778, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__2969582781 = 0;
        colontmp__2969582781 = (b_855639188).length;
        var i_2969582782 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_2969582782 < colontmp__2969582781)) break Label12;
              iHEX60gensym109_855639221 = i_2969582782;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_2969582782 = addInt(i_2969582782, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_2969582785 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582785 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_2969582785;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_2969582785 = addInt(i_2969582785, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet184);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet185[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet186[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet187[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet188[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet189[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__2969582796 = 0;
      colontmp__2969582796 = start_855639721;
      var res_2969582797 = colontmp__2969582796;
      Label3: {
          Label4: while (true) {
          if (!(res_2969582797 <= last_855639724)) break Label4;
            i_855639729 = res_2969582797;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_2969582797 = addInt(res_2969582797, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_2969582804 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582804 <= 3)) break Label3;
            __1694499043 = res_2969582804;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_2969582804 = addInt(res_2969582804, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_2969582801 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_2969582801 <= length_1694499110)) break Label5;
                      i_1694499115 = res_2969582801;
                      if ((ConstSet191[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_2969582801 = addInt(res_2969582801, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet192[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet193[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet190)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet198[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet195[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet196[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet197[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet199[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet200[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet194[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function handleUnknownPopupAction_1291848841(self_1291848842, popup_1291848843, action_1291848844, arg_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    var args_1291848847 = newJArray_1627390082();
    Label2: {
      var a_1291848848 = null;
      var colontmp__2969582762 = null;
      colontmp__2969582762 = newStringStream_1660945417(arg_1291848845);
      var p_2969582763 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582763[0], colontmp__2969582762, [], false);
      try {
      var _ = getTok_1694499270(p_2969582763[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_2969582763[0].tok == 1))) break Label5;
            a_1291848848 = parseJson_1627395211(p_2969582763[0], false, false, 0);
            add_1627390190(args_1291848847, a_1291848848);
          }
      };
      } finally {
      close_1694498967(p_2969582763[0]);
      }
    };
    if (handleUnknownPopupAction_2751463448(self_1291848842.scriptContext, popup_1291848843, action_1291848844, args_1291848847)) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848853 = [mnewString(0)];
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848853, 0, action_1291848844, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [32]);;
    formatValue_721420459(fmtRes_1291848853, 0, arg_1291848845, []);
    fmtRes_1291848853[0].push.apply(fmtRes_1291848853[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848853, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848853[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function toJson_3187671489(self_3187671490, opt_3187671491) {
  var result_3187671492 = null;

    result_3187671492 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3187671492, [105,100], newJInt_1627390040(self_3187671490.id));

  return result_3187671492;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function isSome_2818593879(self_2818593881) {
  var result_2818593882 = false;

    result_2818593882 = !((self_2818593881.val == null));

  return result_2818593882;

}

function some_2818593612(val_2818593614) {
  var result_2818593615 = ({val: null});

    if (!(!((val_2818593614 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818593615.val = val_2818593614;

  return result_2818593615;

}

function none_3187671402() {
  var result_3187671408 = ({val: null});

  return result_3187671408;

}

function some_1291850925(val_1291850927) {
  var result_1291850928 = ({val: null});

    if (!(!((val_1291850927 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850928.val = val_1291850927;

  return result_1291850928;

}

function none_1291850938() {
  var result_1291850944 = ({val: null});

  return result_1291850944;

}

function getPopupForId_1291850895(self_1291850896, id_1291850897) {
  var result_1291850902 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850924 = null;
      var i_2969582821 = 0;
      var L_2969582822 = (self_1291850896.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582821 < L_2969582822)) break Label3;
            popup_1291850924 = self_1291850896.popups[chckIndx(i_2969582821, 0, (self_1291850896.popups).length - 1)];
            if ((popup_1291850924.id == id_1291850897)) {
            result_1291850902 = nimCopy(result_1291850902, some_1291850925(popup_1291850924), NTI1291848451);
            break BeforeRet;
            }
            
            i_2969582821 = addInt(i_2969582821, 1);
            if (!(((self_1291850896.popups).length == L_2969582822))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850902 = nimCopy(result_1291850902, none_1291850938(), NTI1291848451);
    break BeforeRet;
  };

  return result_1291850902;

}

function isSome_3187671416(self_3187671418) {
  var result_3187671419 = false;

    result_3187671419 = !((self_3187671418.val == null));

  return result_3187671419;

}

function isNone_3187671444(self_3187671446) {
  var result_3187671447 = false;

    result_3187671447 = (self_3187671446.val == null);

  return result_3187671447;

}

function get_3187671436(self_3187671438) {
  var result_3187671439 = null;

    if (isNone_3187671444(self_3187671438)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671439 = self_3187671438["val"];

  return result_3187671439;

}

function some_3187671461(val_3187671463) {
  var result_3187671464 = ({val: null});

    if (!(!((val_3187671463 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671464.val = val_3187671463;

  return result_3187671464;

}

function getSelectorPopup_3187671392(wrapper_3187671393) {
      var Temporary1;

  var result_3187671398 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
    }
    
      var oHEX60gensym18_3187671411 = getPopupForId_1291850895(gEditor, wrapper_3187671393.id);
      if (!isSome_3187671416(oHEX60gensym18_3187671411)) Temporary1 = false; else {        var editor_3187671453 = get_3187671436(oHEX60gensym18_3187671411);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3187671453.m_type, NTI3187671062)) {
    result_3187671398 = nimCopy(result_3187671398, some_3187671461(editor_3187671453), NTI3187671304);
    break BeforeRet;
    }
    
    }
    
    result_3187671398 = nimCopy(result_3187671398, none_3187671402(), NTI3187671304);
    break BeforeRet;
  };

  return result_3187671398;

}

function isNone_3187671524(self_3187671526) {
  var result_3187671527 = false;

    result_3187671527 = (self_3187671526.val == null);

  return result_3187671527;

}

function get_3187671544(self_3187671546) {
  var result_3187671547 = null;

    if (isNone_3187671524(self_3187671546)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671547 = self_3187671546["val"];

  return result_3187671547;

}

function acceptScript_3187671502_3187671517(self_3187671518) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym23_3187671519 = getSelectorPopup_3187671392(self_3187671518);
      if (isNone_3187671524(rHEX60gensym23_3187671519)) {
      break BeforeRet;
      }
      
    };
    accept_3187671507(get_3187671544(rHEX60gensym23_3187671519));
  };

  
}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__2969582832 = 0;
      colontmp__2969582832 = subInt((x_1627392045).length, 1);
      var res_2969582833 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582833 <= colontmp__2969582832)) break Label3;
            i_1627392069 = res_2969582833;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_2969582833 = addInt(res_2969582833, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet201[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet202[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet203[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet204[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet205[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet206[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet207[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet208[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet209[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet210[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet211[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet212[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__2969582825 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet213[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__2969582825 = nimCopy(colontmp__2969582825, Temporary14.fields, NTI1627389966);
          var L_2969582827 = len_1627392114(colontmp__2969582825);
          if ((0 < colontmp__2969582825.counter)) {
          var h_2969582828 = colontmp__2969582825.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_2969582828)) break Label16;
                var nxt_2969582830 = colontmp__2969582825.data[chckIndx(h_2969582828, 0, (colontmp__2969582825.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__2969582825.data[chckIndx(h_2969582828, 0, (colontmp__2969582825.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__2969582825.data[chckIndx(h_2969582828, 0, (colontmp__2969582825.data).length - 1)].Field2;
                val_1627392497 = colontmp__2969582825.data[chckIndx(h_2969582828, 0, (colontmp__2969582825.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet214[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet215[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__2969582825) == L_2969582827))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_2969582828 = nxt_2969582830;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet216[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet217[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__2969582852 = 0;
      colontmp__2969582852 = subInt(len_855638790, 1);
      var res_2969582853 = colontmp__2969582852;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2969582853)) break Label3;
            j_855638800 = res_2969582853;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_2969582853 = subInt(res_2969582853, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_2969582848 = 0;
      var L_2969582849 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582848 < L_2969582849)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_2969582848, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_2969582848 = addInt(i_2969582848, 1);
            if (!(((s_1627394347).length == L_2969582849))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__2969582836 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet218[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__2969582836 = Temporary2.elems;
        var i_2969582838 = 0;
        var L_2969582839 = (colontmp__2969582836).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2969582838 < L_2969582839)) break Label4;
              child_1627394384 = colontmp__2969582836[chckIndx(i_2969582838, 0, (colontmp__2969582836).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_2969582838 = addInt(i_2969582838, 1);
              if (!(((colontmp__2969582836).length == L_2969582839))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__2969582842 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet219[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__2969582842 = nimCopy(colontmp__2969582842, Temporary6.fields, NTI1627389966);
        var L_2969582843 = len_1627392114(colontmp__2969582842);
        if ((0 < colontmp__2969582842.counter)) {
        var h_2969582844 = colontmp__2969582842.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_2969582844)) break Label8;
              var nxt_2969582846 = colontmp__2969582842.data[chckIndx(h_2969582844, 0, (colontmp__2969582842.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__2969582842.data[chckIndx(h_2969582844, 0, (colontmp__2969582842.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__2969582842.data[chckIndx(h_2969582844, 0, (colontmp__2969582842.data).length - 1)].Field2;
              value_1627394390 = colontmp__2969582842.data[chckIndx(h_2969582844, 0, (colontmp__2969582842.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__2969582842) == L_2969582843))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_2969582844 = nxt_2969582846;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet220[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet221[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet222[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet223[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet224[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_2969582857 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969582857 <= 6)) break Label3;
            if ((x_1627395424[i_2969582857] != undefined)) {
            value_1627395451 = i_2969582857;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_2969582857 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2818584078(dst_2818584080, dst_2818584080_Idx, jsonNode_2818584081, jsonPath_2818584082, jsonPath_2818584082_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818584081, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818584082[jsonPath_2818584082_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet225[jsonNode_2818584081.kind] != undefined))) {
    var msgHEX60gensym176_2818584099 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet226), nimCopy(null, jsonPath_2818584082[jsonPath_2818584082_Idx], NTI33554449), reprEnum(jsonNode_2818584081.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym176_2818584099, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818584081;
    if (ConstSet227[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818584080[dst_2818584080_Idx] = Temporary1.num;

  
}

function to_2818584067(node_2818584070) {
  var result_2818584072 = [0];

    var jsonPath_2818584073 = [[]];
    result_2818584072[0] = 0;
    initFromJson_2818584078(result_2818584072, 0, node_2818584070, jsonPath_2818584073, 0);

  return result_2818584072[0];

}

function fromJson_2818584054(a_2818584056, a_2818584056_Idx, b_2818584057, opt_2818584058) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584057, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818584057}));
    }
    
    a_2818584056[a_2818584056_Idx] = to_2818584067(b_2818584057);

  
}

function jsonTo_2818584048(b_2818584050, opt_2818584052) {
  var result_2818584053 = [0];

    fromJson_2818584054(result_2818584053, 0, b_2818584050, opt_2818584052);

  return result_2818584053[0];

}

function fromJsonHook_3187671493(t_3187671494, jsonNode_3187671495) {
    t_3187671494.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_3187671495, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3187671576(a_3187671578, b_3187671579, opt_3187671580) {
    if (!(!(HEX3DHEX3D_1627392026(b_3187671579, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3187671579}));
    }
    
    fromJsonHook_3187671493(a_3187671578, b_3187671579);

  
}

function jsonTo_3187671570(b_3187671572, opt_3187671574) {
  var result_3187671575 = [({id: 0})];

    fromJson_3187671576(result_3187671575[0], b_3187671572, opt_3187671574);

  return result_3187671575[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet228[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3187671568(HEX3Atmp_3187671504) {
  var result_3187671569 = null;

    result_3187671569 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3187671502_3187671517(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671504, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym28_3187671587 = [97,99,99,101,112,116];
    var fmtRes_3187671592 = [mnewString(0)];
    fmtRes_3187671592[0].push.apply(fmtRes_3187671592[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671592, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym28_3187671587 || [],fmtRes_3187671592[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671569;

}

function cancelScript_3187671604_3187671617(self_3187671618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym33_3187671619 = getSelectorPopup_3187671392(self_3187671618);
      if (isNone_3187671524(rHEX60gensym33_3187671619)) {
      break BeforeRet;
      }
      
    };
    cancel_3187671609(get_3187671544(rHEX60gensym33_3187671619));
  };

  
}

function cancelApi_3187671645(HEX3Atmp_3187671606) {
  var result_3187671646 = null;

    result_3187671646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3187671604_3187671617(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671606, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym38_3187671652 = [99,97,110,99,101,108];
    var fmtRes_3187671657 = [mnewString(0)];
    fmtRes_3187671657[0].push.apply(fmtRes_3187671657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym38_3187671652 || [],fmtRes_3187671657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671646;

}

function prevScript_3187671660_3187671685(self_3187671686) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym42_3187671687 = getSelectorPopup_3187671392(self_3187671686);
      if (isNone_3187671524(rHEX60gensym42_3187671687)) {
      break BeforeRet;
      }
      
    };
    prev_3187671665(get_3187671544(rHEX60gensym42_3187671687));
  };

  
}

function prevApi_3187671713(HEX3Atmp_3187671662) {
  var result_3187671714 = null;

    result_3187671714 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3187671660_3187671685(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671662, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym47_3187671720 = [112,114,101,118];
    var fmtRes_3187671725 = [mnewString(0)];
    fmtRes_3187671725[0].push.apply(fmtRes_3187671725[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671725, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym47_3187671720 || [],fmtRes_3187671725[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671714;

}

function nextScript_3187671728_3187671750(self_3187671751) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym52_3187671752 = getSelectorPopup_3187671392(self_3187671751);
      if (isNone_3187671524(rHEX60gensym52_3187671752)) {
      break BeforeRet;
      }
      
    };
    next_3187671733(get_3187671544(rHEX60gensym52_3187671752));
  };

  
}

function nextApi_3187671778(HEX3Atmp_3187671730) {
  var result_3187671779 = null;

    result_3187671779 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3187671728_3187671750(jsonTo_3187671570(HEX5BHEX5D_1627393116(HEX3Atmp_3187671730, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym57_3187671785 = [110,101,120,116];
    var fmtRes_3187671790 = [mnewString(0)];
    fmtRes_3187671790[0].push.apply(fmtRes_3187671790[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3187671790, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym57_3187671785 || [],fmtRes_3187671790[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3187671779;

}

function none_2818593811() {
  var result_2818593817 = ({val: null});

  return result_2818593817;

}

function dispatch_3187671795(command_3187671794, arg_3187671793) {
    var Temporary1;

  var result_3187671797 = ({val: null});

    switch (toJSStr(command_3187671794)) {
    case "accept":
      Temporary1 = some_2818593612(acceptApi_3187671568(arg_3187671793));
      break;
    case "cancel":
      Temporary1 = some_2818593612(cancelApi_3187671645(arg_3187671793));
      break;
    case "prev":
      Temporary1 = some_2818593612(prevApi_3187671713(arg_3187671793));
      break;
    case "next":
      Temporary1 = some_2818593612(nextApi_3187671778(arg_3187671793));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_3187671797 = nimCopy(result_3187671797, Temporary1, NTI2818585760);

  return result_3187671797;

}

function handleAction_3187671816(self_3187671817, action_3187671818, arg_3187671819) {
  var result_3187671820 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848841(self_3187671817.editor, self_3187671817, action_3187671818, arg_3187671819) == 3)) {
    result_3187671820 = 3;
    break BeforeRet;
    }
    
    var args_3187671825 = newJArray_1627390082();
    add_1627390190(args_3187671825, toJson_3187671489({id: self_3187671817.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3187671826 = null;
      var colontmp__2969582757 = null;
      colontmp__2969582757 = newStringStream_1660945417(arg_3187671819);
      var p_2969582759 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_2969582759[0], colontmp__2969582757, [], false);
      try {
      var _ = getTok_1694499270(p_2969582759[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_2969582759[0].tok == 1))) break Label4;
            a_3187671826 = parseJson_1627395211(p_2969582759[0], false, false, 0);
            add_1627390190(args_3187671825, a_3187671826);
          }
      };
      } finally {
      close_1694498967(p_2969582759[0]);
      }
    };
    if (isSome_2818593879(dispatch_3187671795(action_3187671818, args_3187671825))) {
    result_3187671820 = 3;
    break BeforeRet;
    }
    
    result_3187671820 = 1;
    break BeforeRet;
  };

  return result_3187671820;

}

function newSelectorPopup_3187671933(editor_3187671934) {
    
function HEX3Aanonymous_3187671967(doc_3187671968) {
        handleTextChanged_3187671834(popup_3187671936);

      
    }
      
function HEX3Aanonymous_3187672016(actionHEX60gensym69HEX60gensym70_3187672017, argHEX60gensym69HEX60gensym70_3187672018) {
        var result_3187672019 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_3187672004.config.handleActions) {
          var action_3187672020 = nimCopy(null, actionHEX60gensym69HEX60gensym70_3187672017, NTI33554449);
          var arg_3187672021 = nimCopy(null, argHEX60gensym69HEX60gensym70_3187672018, NTI33554449);
          var responseHEX60gensym69HEX60gensym70_3187672022 = handleAction_3187671816(popup_3187671936, action_3187672020, arg_3187672021);
          if (handlerHEX60gensym69_3187672004.config.consumeAllActions) {
          result_3187672019 = 3;
          break BeforeRet;
          }
          
          result_3187672019 = responseHEX60gensym69HEX60gensym70_3187672022;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym69_3187672004.config.consumeAllActions) {
          result_3187672019 = 3;
          break BeforeRet;
          }
          else {
            result_3187672019 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3187672019;

      }
      
function HEX3Aanonymous_3187672024(inputHEX60gensym69HEX60gensym71_3187672025) {
        var result_3187672026 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_3187672004.config.handleInputs) {
          var input_3187672027 = nimCopy(null, inputHEX60gensym69HEX60gensym71_3187672025, NTI33554449);
          result_3187672026 = 1;
          break BeforeRet;
          }
          else {
            result_3187672026 = 1;
            break BeforeRet;
          }
          
        };

        return result_3187672026;

      }

  var result_3187671935 = null;

  BeforeRet: {
    var popup_3187671936 = {editor: editor_3187671934, m_type: NTI3187671062, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], cancellationToken: null, id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3187671936.textEditor = newTextEditor_2818594009(newTextDocument_2818579088([], [], false), editor_3187671934);
    setMode_2818584223(popup_3187671936.textEditor, [105,110,115,101,114,116]);
    popup_3187671936.textEditor.renderHeader = false;
    popup_3187671936.textEditor.lineNumbers = nimCopy(popup_3187671936.textEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    popup_3187671936.textEditor.document.singleLine = true;
    var _ = subscribe_2818594057(popup_3187671936.textEditor.document.textChanged, HEX3Aanonymous_3187671967);
    Label1: {
      var handlerHEX60gensym69_3187672004 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym69_3187672004.config = getEventHandlerConfig_1291849162(editor_3187671934, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym69_3187672004.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(editor_3187671934, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym69_3187672004.handleAction = HEX3Aanonymous_3187672016;
      handlerHEX60gensym69_3187672004.handleInput = HEX3Aanonymous_3187672024;
    };
    popup_3187671936.eventHandler = handlerHEX60gensym69_3187672004;
    result_3187671935 = popup_3187671936;
    break BeforeRet;
  };

  return result_3187671935;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2684355198 = 0;
      colontmp__2684355198 = (a_1979711593).length - 1;
      var res_2684355199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2684355199 <= colontmp__2684355198)) break Label3;
            i_1979711612 = res_2684355199;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2684355199 = addInt(res_2684355199, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2969582866 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969582866 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2969582866;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2969582866 = addInt(res_2969582866, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function newSeq_2969582524(len_2969582526) {
  var result_2969582527 = [];

    result_2969582527 = new Array(len_2969582526); for (var i = 0 ; i < len_2969582526 ; ++i) { result_2969582527[i] = null; }
  return result_2969582527;

}

function mergeAlt_2969582535(a_2969582537, b_2969582538, lo_2969582539, m_2969582540, hi_2969582541, cmp_2969582544, order_2969582545) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969582544(a_2969582537[chckIndx(m_2969582540, 0, (a_2969582537).length - 1)], a_2969582537[chckIndx(addInt(m_2969582540, 1), 0, (a_2969582537).length - 1)]), order_2969582545) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969582546 = lo_2969582539;
    if (!((j_2969582546 <= m_2969582540))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969582552 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969582546 <= m_2969582540)) break Label2;
          b_2969582538[chckIndx(bb_2969582552, 0, (b_2969582538).length - 1)] = a_2969582537[chckIndx(j_2969582546, 0, (a_2969582537).length - 1)];
          bb_2969582552 = addInt(bb_2969582552, 1);
          j_2969582546 = addInt(j_2969582546, 1);
        }
    };
    var i_2969582563 = 0;
    var k_2969582564 = lo_2969582539;
    Label3: {
        Label4: while (true) {
        if (!((k_2969582564 < j_2969582546) && (j_2969582546 <= hi_2969582541))) break Label4;
          if ((HEX2A_1023410184(cmp_2969582544(b_2969582538[chckIndx(i_2969582563, 0, (b_2969582538).length - 1)], a_2969582537[chckIndx(j_2969582546, 0, (a_2969582537).length - 1)]), order_2969582545) <= 0)) {
          a_2969582537[chckIndx(k_2969582564, 0, (a_2969582537).length - 1)] = b_2969582538[chckIndx(i_2969582563, 0, (b_2969582538).length - 1)];
          i_2969582563 = addInt(i_2969582563, 1);
          }
          else {
            a_2969582537[chckIndx(k_2969582564, 0, (a_2969582537).length - 1)] = a_2969582537[chckIndx(j_2969582546, 0, (a_2969582537).length - 1)];
            j_2969582546 = addInt(j_2969582546, 1);
          }
          
          k_2969582564 = addInt(k_2969582564, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969582564 < j_2969582546)) break Label6;
          a_2969582537[chckIndx(k_2969582564, 0, (a_2969582537).length - 1)] = b_2969582538[chckIndx(i_2969582563, 0, (b_2969582538).length - 1)];
          k_2969582564 = addInt(k_2969582564, 1);
          i_2969582563 = addInt(i_2969582563, 1);
        }
    };
  };

  
}

function sort_2969582512(a_2969582514, cmp_2969582517, order_2969582518) {
    var n_2969582523 = (a_2969582514).length;
    var b_2969582532 = newSeq_2969582524(chckRange(divInt(n_2969582523, 2), 0, 2147483647));
    var s_2969582533 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969582533 < n_2969582523)) break Label2;
          var m_2969582534 = subInt(subInt(n_2969582523, 1), s_2969582533);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969582534)) break Label4;
                mergeAlt_2969582535(a_2969582514, b_2969582532, nimMax(addInt(subInt(m_2969582534, s_2969582533), 1), 0), m_2969582534, addInt(m_2969582534, s_2969582533), cmp_2969582517, order_2969582518);
                m_2969582534 = subInt(m_2969582534, mulInt(s_2969582533, 2));
              }
          };
          s_2969582533 = mulInt(s_2969582533, 2);
        }
    };

  
}

function init_2483028018(self_2483028019) {
    self_2483028019.id = newEditorId_2449473851();

  
}

function subscribe_1291848997(event_1291848999, callback_1291849000) {
  var result_1291849001 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849001 = nimCopy(result_1291849001, newId_2046820597(), NTI2046820355);
    event_1291848999.handlers.push({Field0: nimCopy(null, result_1291849001, NTI2046820355), Field1: callback_1291849000});;

  return result_1291849001;

}

function pushPopup_1291849060(self_1291849061, popup_1291849062) {
    
function HEX3Aanonymous_1291849078() {
        requestRender_2768240746(self_1291849061.platform, false);

      
    }

    init_2483028018(popup_1291849062);
    self_1291849061.popups.push(popup_1291849062);;
    var _ = subscribe_1291848997(popup_1291849062.onMarkedDirty, HEX3Aanonymous_1291849078);
    requestRender_2768240746(self_1291849061.platform, false);

  
}

function openGotoSymbolPopup_2969582458(self_2969582459) {
    
function HEX3Aanonymous_2969582461(popup_2969582462, text_2969582463) {
        
function HEX3Aanonymous_2969582481(a_2969582499, b_2969582500) {
          var result_2969582505 = 0;

            result_2969582505 = cmp_3204448328(a_2969582499.completion.score, b_2969582500.completion.score);

          return result_2969582505;

        }

      var result_2969582464 = [];

        var symbols_2969582465 = computeSymbols_3019922496(ctx_2969567289, self_2969582459.document.rootNode, true);
        Label1: {
          var key_2969582470 = ({padding: 0, time: 0, fuzz: 0, count: 0});
          var symbol_2969582471 = null;
          var L_2969582743 = len_3087009065(symbols_2969582465);
          Label2: {
            var h_2969582745 = 0;
            var colontmp__2969582746 = 0;
            colontmp__2969582746 = (symbols_2969582465.data).length - 1;
            var res_2969582747 = 0;
            Label3: {
                Label4: while (true) {
                if (!(res_2969582747 <= colontmp__2969582746)) break Label4;
                  h_2969582745 = res_2969582747;
                  if (isFilled_1308622880(symbols_2969582465.data[chckIndx(h_2969582745, 0, (symbols_2969582465.data).length - 1)].Field0)) {
                  var colontmp__2969582750 = nimCopy(null, {Field0: nimCopy(null, symbols_2969582465.data[chckIndx(h_2969582745, 0, (symbols_2969582465.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2969582465.data[chckIndx(h_2969582745, 0, (symbols_2969582465.data).length - 1)].Field2}, NTI3087008732);
                  key_2969582470 = nimCopy(key_2969582470, colontmp__2969582750["Field0"], NTI2046820355);
                  symbol_2969582471 = colontmp__2969582750["Field1"];
                  Label5: {
                    if (!((symbol_2969582471.kind == 0))) {
                    break Label5;
                    }
                    
                    var score_2969582476 = fuzzyMatchSmart_1979711572(text_2969582463, symbol_2969582471.name, true);
                    result_2969582464.push({completion: {kind: 0, score: score_2969582476, id: nimCopy(null, symbol_2969582471.id, NTI2046820355), nodeKind: 0, name: []}, m_type: NTI2969577305, score: 0.0});;
                  };
                  if (!((len_3087009065(symbols_2969582465) == L_2969582743))) {
                  failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_2969582747 = addInt(res_2969582747, 1);
                }
            };
          };
        };
        sort_2969582512(result_2969582464, HEX3Aanonymous_2969582481, 0);

      return result_2969582464;

    }
    
function HEX3Aanonymous_2969582642(item_2969582643) {
        var Temporary1;
          var Temporary2;
          var Temporary3;

        var completion_2969582644 = nimCopy(null, item_2969582643.completion, NTI2969568638);
        var Temporary1 = completion_2969582644;
        if (ConstSet229[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
        var id_2969582645 = nimCopy(null, Temporary1.id, NTI2046820355);
          var oHEX60gensym886_2969582648 = getAstNode_3019906180(ctx_2969567289, id_2969582645);
          if (!isSome_3003123546(oHEX60gensym886_2969582648)) Temporary3 = false; else {            var node_2969582671 = get_3003123566(oHEX60gensym886_2969582648);
            Temporary3 = true;          }          if (!Temporary3) Temporary2 = false; else {            Temporary2 = (base_3003121758(node_2969582671) == self_2969582459.document.rootNode);          }        if (Temporary2) {
        nodeHEX3D_2969570829(self_2969582459, node_2969582671);
        }
        

      
    }
    
function HEX3Aanonymous_2969582676() {
        if ((base_3003121758(prevSelection_2969582641) == self_2969582459.document.rootNode)) {
        nodeHEX3D_2969570829(self_2969582459, prevSelection_2969582641);
        }
        

      
    }

    var popup_2969582460 = newSelectorPopup_3187671933(self_2969582459.editor);
    popup_2969582460.getCompletions = HEX3Aanonymous_2969582461;
    var prevSelection_2969582641 = node_2969569752(self_2969582459);
    popup_2969582460.handleItemSelected = HEX3Aanonymous_2969582642;
    popup_2969582460.handleCanceled = HEX3Aanonymous_2969582676;
    updateCompletions_3187671226(popup_2969582460);
    pushPopup_1291849060(self_2969582459.editor, popup_2969582460);

  
}

function openGotoSymbolPopupJsWrapper_2969582454(self_2969582726) {
    openGotoSymbolPopup_2969582458(self_2969582726);

  
}
editor_ast_prototype.openGotoSymbolPopup = function() { return (openGotoSymbolPopupJsWrapper_2969582454(this));};

function len_3221227056(t_3221227059) {
  var result_3221227060 = 0;

    result_3221227060 = t_3221227059.counter;

  return result_3221227060;

}

function goto_2969582880(self_2969582881, where_2969582882) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2969582926(n_2969582929) {
          var result_2969582932 = false;

            result_2969582932 = (!((n_2969582929 == node_2969569752(self_2969582881))) && (HEX3DHEX3D_2046820626(n_2969582929.id, id_2969582925) || HEX3DHEX3D_2046820626(n_2969582929.reff, id_2969582925)));

          return result_2969582932;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2969582953(n_2969582956) {
          var result_2969582959 = false;

            result_2969582959 = (!((n_2969582956 == node_2969569752(self_2969582881))) && (computeType_3019913434(ctx_2969567289, n_2969582956, true).kind == 0));

          return result_2969582959;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2969582979(n_2969582982) {
          var result_2969582985 = false;

            result_2969582985 = !((n_2969582982 == node_2969569752(self_2969582881)));

          return result_2969582985;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;

  BeforeRet: {
    if (isEditing_2969575151(self_2969582881)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2969582882)) {
    case "definition":
        var oHEX60gensym896_2969582885 = computeSymbol_3019919344(ctx_2969567289, node_2969569752(self_2969582881), true);
        if (!isSome_3087009356(oHEX60gensym896_2969582885)) Temporary1 = false; else {          var sym_2969582908 = get_3087009376(oHEX60gensym896_2969582885);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2969582908.kind == 0) && !((sym_2969582908.node == self_2969582881.document.rootNode)))) {
      var Temporary2 = sym_2969582908;
      if (ConstSet230[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2969570829(self_2969582881, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2969582917 = node_2969569752(self_2969582881);
        var pos_2969582918 = 0;
        var _ = pos_2969582918;
        if ((expr_2969582917.kind == 1)) {
        Temporary4 = node_2969569752(self_2969582881).reff;
        }
        else {
        Temporary4 = node_2969569752(self_2969582881).id;
        }
        
      };
      var id_2969582925 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2969582937 = 0;
        var n_2969582938 = null;
        var colontmp__2969583356 = null;
        var colontmp__2969583357 = null;
        colontmp__2969583356 = node_2969569752(self_2969582881);
        colontmp__2969583357 = HEX3Aanonymous_2969582926;
        var i_2969583358 = 0;
        Label6: {
          var __2969583360 = 0;
          var child_2969583361 = null;
          var n_2969583362 = colontmp__2969583356;
          var idx_2969583363 = -1;
          var i_2969583364 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2969583363 == -1)) {
                __2969583360 = i_2969583364;
                child_2969583361 = n_2969583362;
                if (colontmp__2969583357(child_2969583361)) {
                __2969582937 = i_2969583358;
                n_2969582938 = child_2969583361;
                nodeHEX3D_2969570829(self_2969582881, n_2969582938);
                break Label5;
                i_2969583358 = addInt(i_2969583358, 1);
                }
                
                }
                
                if ((addInt(idx_2969583363, 1) < len_3003121752(n_2969583362))) {
                n_2969583362 = HEX5BHEX5D_3003121748(n_2969583362, addInt(idx_2969583363, 1));
                idx_2969583363 = -1;
                }
                else {
                  var oHEX60gensym55_2969583366 = next_3003121857(n_2969583362);
                  if (!isSome_3003123546(oHEX60gensym55_2969583366)) Temporary11 = false; else {                    var ne_2969583367 = get_3003123566(oHEX60gensym55_2969583366);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2969583362 == null));                  }                if (Temporary10) {
                n_2969583362 = ne_2969583367;
                idx_2969583363 = -1;
                }
                else {
                if (((!((n_2969583362.parent == null)) && !((n_2969583362 == null))) && !((n_2969583362.parent == null)))) {
                idx_2969583363 = index_3003121772(n_2969583362);
                n_2969583362 = n_2969583362.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2969583364 = addInt(i_2969583364, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2969582939 = node_2969569752(self_2969582881);
        var pos_2969582940 = 0;
        var _ = pos_2969582940;
        if ((expr_2969582939.kind == 1)) {
        Temporary13 = node_2969569752(self_2969582881).reff;
        }
        else {
        Temporary13 = node_2969569752(self_2969582881).id;
        }
        
      };
      var id_2969582947 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2969582948 = null;
        var colontmp__2969583370 = null;
        colontmp__2969583370 = node_2969569752(self_2969582881);
        var idx_2969583371 = 0;
        var n_2969583372 = colontmp__2969583370;
        Label15: {
            Label16: while (true) {
            if (!!((n_2969583372 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583372), 1)), subInt(idx_2969583371, 1))) {
              n_2969583372 = HEX5BHEX5D_3003121748(n_2969583372, subInt(idx_2969583371, 1));
              idx_2969583371 = len_3003121752(n_2969583372);
              }
              else {
                var oHEX60gensym74_2969583374 = prev_3003121903(n_2969583372);
                if (!isSome_3003123546(oHEX60gensym74_2969583374)) Temporary17 = false; else {                  var ne_2969583375 = get_3003123566(oHEX60gensym74_2969583374);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2969582948 = n_2969583372;
              if ((!((n_2969582948 == node_2969569752(self_2969582881))) && (HEX3DHEX3D_2046820626(n_2969582948.id, id_2969582947) || HEX3DHEX3D_2046820626(n_2969582948.reff, id_2969582947)))) {
              nodeHEX3D_2969570829(self_2969582881, n_2969582948);
              break Label14;
              }
              
              n_2969583372 = ne_2969583375;
              idx_2969583371 = len_3003121752(n_2969583372);
              }
              else {
                n_2969582948 = n_2969583372;
                if ((!((n_2969582948 == node_2969569752(self_2969582881))) && (HEX3DHEX3D_2046820626(n_2969582948.id, id_2969582947) || HEX3DHEX3D_2046820626(n_2969582948.reff, id_2969582947)))) {
                nodeHEX3D_2969570829(self_2969582881, n_2969582948);
                break Label14;
                }
                
                idx_2969583371 = index_3003121772(n_2969583372);
                n_2969583372 = n_2969583372.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2969582968 = 0;
        var n_2969582969 = null;
        var colontmp__2969583377 = null;
        var colontmp__2969583378 = null;
        colontmp__2969583377 = node_2969569752(self_2969582881);
        colontmp__2969583378 = HEX3Aanonymous_2969582953;
        var i_2969583379 = 0;
        Label19: {
          var __2969583381 = 0;
          var child_2969583382 = null;
          var n_2969583383 = colontmp__2969583377;
          var idx_2969583384 = -1;
          var i_2969583385 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2969583384 == -1)) {
                __2969583381 = i_2969583385;
                child_2969583382 = n_2969583383;
                if (colontmp__2969583378(child_2969583382)) {
                __2969582968 = i_2969583379;
                n_2969582969 = child_2969583382;
                nodeHEX3D_2969570829(self_2969582881, n_2969582969);
                break Label18;
                i_2969583379 = addInt(i_2969583379, 1);
                }
                
                }
                
                if ((addInt(idx_2969583384, 1) < len_3003121752(n_2969583383))) {
                n_2969583383 = HEX5BHEX5D_3003121748(n_2969583383, addInt(idx_2969583384, 1));
                idx_2969583384 = -1;
                }
                else {
                  var oHEX60gensym55_2969583387 = next_3003121857(n_2969583383);
                  if (!isSome_3003123546(oHEX60gensym55_2969583387)) Temporary24 = false; else {                    var ne_2969583388 = get_3003123566(oHEX60gensym55_2969583387);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2969583383 == null));                  }                if (Temporary23) {
                n_2969583383 = ne_2969583388;
                idx_2969583384 = -1;
                }
                else {
                if (((!((n_2969583383.parent == null)) && !((n_2969583383 == null))) && !((n_2969583383.parent == null)))) {
                idx_2969583384 = index_3003121772(n_2969583383);
                n_2969583383 = n_2969583383.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2969583385 = addInt(i_2969583385, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2969582970 = null;
        var colontmp__2969583390 = null;
        colontmp__2969583390 = node_2969569752(self_2969582881);
        var idx_2969583391 = 0;
        var n_2969583392 = colontmp__2969583390;
        Label26: {
            Label27: while (true) {
            if (!!((n_2969583392 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583392), 1)), subInt(idx_2969583391, 1))) {
              n_2969583392 = HEX5BHEX5D_3003121748(n_2969583392, subInt(idx_2969583391, 1));
              idx_2969583391 = len_3003121752(n_2969583392);
              }
              else {
                var oHEX60gensym74_2969583394 = prev_3003121903(n_2969583392);
                if (!isSome_3003123546(oHEX60gensym74_2969583394)) Temporary28 = false; else {                  var ne_2969583395 = get_3003123566(oHEX60gensym74_2969583394);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2969582970 = n_2969583392;
              if ((!((n_2969582970 == node_2969569752(self_2969582881))) && (computeType_3019913434(ctx_2969567289, n_2969582970, true).kind == 0))) {
              nodeHEX3D_2969570829(self_2969582881, n_2969582970);
              break Label25;
              }
              
              n_2969583392 = ne_2969583395;
              idx_2969583391 = len_3003121752(n_2969583392);
              }
              else {
                n_2969582970 = n_2969583392;
                if ((!((n_2969582970 == node_2969569752(self_2969582881))) && (computeType_3019913434(ctx_2969567289, n_2969582970, true).kind == 0))) {
                nodeHEX3D_2969570829(self_2969582881, n_2969582970);
                break Label25;
                }
                
                idx_2969583391 = index_3003121772(n_2969583392);
                n_2969583392 = n_2969583392.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2969582990 = 0;
        var n_2969582991 = null;
        var colontmp__2969583409 = null;
        var colontmp__2969583410 = null;
        colontmp__2969583409 = node_2969569752(self_2969582881);
        colontmp__2969583410 = HEX3Aanonymous_2969582979;
        var i_2969583411 = 0;
        Label30: {
          var __2969583413 = 0;
          var child_2969583414 = null;
          var n_2969583415 = colontmp__2969583409;
          var idx_2969583416 = -1;
          var i_2969583417 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2969583416 == -1)) {
                __2969583413 = i_2969583417;
                child_2969583414 = n_2969583415;
                if (colontmp__2969583410(child_2969583414)) {
                __2969582990 = i_2969583411;
                n_2969582991 = child_2969583414;
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969582991.id)) {
                var found_2969583055 = false;
                Label34: {
                  var diags_2969583142 = [];
                  var colontmp__2969583398 = ({data: [], counter: 0});
                  colontmp__2969583398 = nimCopy(colontmp__2969583398, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969582991.id).queries, NTI3019898894);
                  var L_2969583403 = len_3221227056(colontmp__2969583398);
                  Label35: {
                    var h_2969583405 = 0;
                    var colontmp__2969583406 = 0;
                    colontmp__2969583406 = (colontmp__2969583398.data).length - 1;
                    var res_2969583407 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2969583407 <= colontmp__2969583406)) break Label37;
                          h_2969583405 = res_2969583407;
                          if (isFilled_1308622880(colontmp__2969583398.data[chckIndx(h_2969583405, 0, (colontmp__2969583398.data).length - 1)].Field0)) {
                          diags_2969583142 = colontmp__2969583398.data[chckIndx(h_2969583405, 0, (colontmp__2969583398.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583142).length)) {
                          found_2969583055 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583398) == L_2969583403))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583407 = addInt(res_2969583407, 1);
                        }
                    };
                  };
                };
                if (found_2969583055) {
                nodeHEX3D_2969570829(self_2969582881, n_2969582991);
                }
                
                break Label29;
                }
                
                i_2969583411 = addInt(i_2969583411, 1);
                }
                
                }
                
                if ((addInt(idx_2969583416, 1) < len_3003121752(n_2969583415))) {
                n_2969583415 = HEX5BHEX5D_3003121748(n_2969583415, addInt(idx_2969583416, 1));
                idx_2969583416 = -1;
                }
                else {
                  var oHEX60gensym55_2969583419 = next_3003121857(n_2969583415);
                  if (!isSome_3003123546(oHEX60gensym55_2969583419)) Temporary39 = false; else {                    var ne_2969583420 = get_3003123566(oHEX60gensym55_2969583419);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2969583415 == null));                  }                if (Temporary38) {
                n_2969583415 = ne_2969583420;
                idx_2969583416 = -1;
                }
                else {
                if (((!((n_2969583415.parent == null)) && !((n_2969583415 == null))) && !((n_2969583415.parent == null)))) {
                idx_2969583416 = index_3003121772(n_2969583415);
                n_2969583415 = n_2969583415.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2969583417 = addInt(i_2969583417, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2969583146 = null;
        var colontmp__2969583431 = null;
        colontmp__2969583431 = node_2969569752(self_2969582881);
        var idx_2969583432 = 0;
        var n_2969583433 = colontmp__2969583431;
        Label41: {
            Label42: while (true) {
            if (!!((n_2969583433 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_3003121752(n_2969583433), 1)), subInt(idx_2969583432, 1))) {
              n_2969583433 = HEX5BHEX5D_3003121748(n_2969583433, subInt(idx_2969583432, 1));
              idx_2969583432 = len_3003121752(n_2969583433);
              }
              else {
                var oHEX60gensym74_2969583435 = prev_3003121903(n_2969583433);
                if (!isSome_3003123546(oHEX60gensym74_2969583435)) Temporary43 = false; else {                  var ne_2969583436 = get_3003123566(oHEX60gensym74_2969583435);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2969583146 = n_2969583433;
              Label44: {
                if ((n_2969583146 == node_2969569752(self_2969582881))) {
                break Label44;
                }
                
                if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969583146.id)) {
                var found_2969583214 = false;
                Label45: {
                  var diags_2969583301 = [];
                  var colontmp__2969583424 = ({data: [], counter: 0});
                  colontmp__2969583424 = nimCopy(colontmp__2969583424, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969583146.id).queries, NTI3019898894);
                  var L_2969583425 = len_3221227056(colontmp__2969583424);
                  Label46: {
                    var h_2969583427 = 0;
                    var colontmp__2969583428 = 0;
                    colontmp__2969583428 = (colontmp__2969583424.data).length - 1;
                    var res_2969583429 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2969583429 <= colontmp__2969583428)) break Label48;
                          h_2969583427 = res_2969583429;
                          if (isFilled_1308622880(colontmp__2969583424.data[chckIndx(h_2969583427, 0, (colontmp__2969583424.data).length - 1)].Field0)) {
                          diags_2969583301 = colontmp__2969583424.data[chckIndx(h_2969583427, 0, (colontmp__2969583424.data).length - 1)]["Field2"];
                          if ((0 < (diags_2969583301).length)) {
                          found_2969583214 = true;
                          }
                          
                          if (!((len_3221227056(colontmp__2969583424) == L_2969583425))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2969583429 = addInt(res_2969583429, 1);
                        }
                    };
                  };
                };
                if (found_2969583214) {
                nodeHEX3D_2969570829(self_2969582881, n_2969583146);
                break Label40;
                }
                
                }
                
              };
              n_2969583433 = ne_2969583436;
              idx_2969583432 = len_3003121752(n_2969583433);
              }
              else {
                n_2969583146 = n_2969583433;
                Label49: {
                  if ((n_2969583146 == node_2969569752(self_2969582881))) {
                  break Label49;
                  }
                  
                  if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, n_2969583146.id)) {
                  var found_2969583437 = false;
                  Label50: {
                    var diags_2969583438 = [];
                    var colontmp__2969583439 = ({data: [], counter: 0});
                    colontmp__2969583439 = nimCopy(colontmp__2969583439, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, n_2969583146.id).queries, NTI3019898894);
                    var L_2969583440 = len_3221227056(colontmp__2969583439);
                    Label51: {
                      var h_2969583441 = 0;
                      var colontmp__2969583442 = 0;
                      colontmp__2969583442 = (colontmp__2969583439.data).length - 1;
                      var res_2969583443 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2969583443 <= colontmp__2969583442)) break Label53;
                            h_2969583441 = res_2969583443;
                            if (isFilled_1308622880(colontmp__2969583439.data[chckIndx(h_2969583441, 0, (colontmp__2969583439.data).length - 1)].Field0)) {
                            diags_2969583438 = colontmp__2969583439.data[chckIndx(h_2969583441, 0, (colontmp__2969583439.data).length - 1)]["Field2"];
                            if ((0 < (diags_2969583438).length)) {
                            found_2969583437 = true;
                            }
                            
                            if (!((len_3221227056(colontmp__2969583439) == L_2969583440))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2969583443 = addInt(res_2969583443, 1);
                          }
                      };
                    };
                  };
                  if (found_2969583437) {
                  nodeHEX3D_2969570829(self_2969582881, n_2969583146);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2969583432 = index_3003121772(n_2969583433);
                n_2969583433 = n_2969583433.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      openGotoSymbolPopup_2969582458(self_2969582881);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2969582876(self_2969583333, where_2969583334) {
    goto_2969582880(self_2969583333, where_2969583334);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2969582876(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function startTimer_2080374869() {
  var result_2080374870 = 0.0;

    result_2080374870 = (Date.now() / 1000);

  return result_2080374870;

}

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2969583485(self_2969583487, line_2969583488, color_2969583489) {
    if ((1500 <= (self_2969583487.lines).length)) {
    delete_2969567879(self_2969583487, "lines", HEX2EHEX2E_805306418(0, subInt((self_2969583487.lines).length, 1000)));
    }
    
    if ((0 < self_2969583487.scroll)) {
    self_2969583487.scroll = addInt(self_2969583487.scroll, 1);
    }
    
    self_2969583487.lines.push({Field0: nimCopy(null, line_2969583488, NTI33554449), Field1: color_2634022945(color_2969583489)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2969583715 = 0;
      colontmp__2969583715 = (result_855640118).length;
      var i_2969583716 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969583716 < colontmp__2969583715)) break Label3;
            i_855640125 = i_2969583716;
            if ((ConstSet231[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2969583716 = addInt(i_2969583716, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet233[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2969583719 = 0;
      colontmp__2969583719 = subInt((s_855638126).length, 1);
      var res_2969583720 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2969583720 <= colontmp__2969583719)) break Label3;
            iHEX60gensym11_855638133 = res_2969583720;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2969583720 = addInt(res_2969583720, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2785017973(result_2785017975, result_2785017975_Idx, value_2785017976, specifier_2785017977) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2785017977).length == 0)) {
    result_2785017975[result_2785017975_Idx].push.apply(result_2785017975[result_2785017975_Idx], HEX24_33557336(value_2785017976));;
    break BeforeRet;
    }
    
    var spec_2785017981 = parseStandardFormatSpecifier_721420346(specifier_2785017977, 0, false);
    var fmode_2785017982 = 0;
    switch (spec_2785017981.typ) {
    case 101:
    case 69:
      fmode_2785017982 = 2;
      break;
    case 102:
    case 70:
      fmode_2785017982 = 1;
      break;
    case 103:
    case 71:
      fmode_2785017982 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2785017981.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2785017984 = [nsuformatBiggestFloat(value_2785017976, fmode_2785017982, chckRange(spec_2785017981.precision, -1, 32), 46)];
    var sign_2785017985 = false;
    if ((0.0 <= value_2785017976)) {
    if (!((spec_2785017981.sign == 45))) {
    sign_2785017985 = true;
    if ((value_2785017976 == 0.0)) {
    if (((1.0 / value_2785017976) == Infinity)) {
    insert_33557745(f_2785017984, 0, nimCharToStr(spec_2785017981.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2785017984, 0, nimCharToStr(spec_2785017981.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2785017985 = true;
    }
    
    if (spec_2785017981.padWithZero) {
    var signStr_2785017986 = [];
    if (sign_2785017985) {
    signStr_2785017986 = nimCopy(null, nimCharToStr(f_2785017984[0][chckIndx(0, 0, (f_2785017984[0]).length - 1)]), NTI33554449);
    f_2785017984[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2785017984[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2785018008 = subInt(subInt(spec_2785017981.minimumWidth, (f_2785017984[0]).length), (sign_2785017985 ? 1 : 0));
    if ((0 < toFill_2785018008)) {
    f_2785017984[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2785018008, 0, 2147483647)) || []).concat(f_2785017984[0] || []), NTI33554449);
    }
    
    if (sign_2785017985) {
    f_2785017984[0] = nimCopy(null, (signStr_2785017986 || []).concat(f_2785017984[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2785017981.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2785017981.align;
    }
    
    var align_2785018009 = Temporary1;
    var res_2785018010 = alignString_721420308(f_2785017984[0], spec_2785017981.minimumWidth, align_2785018009, spec_2785017981.fill);
    if ((ConstSet232[spec_2785017981.typ] != undefined)) {
    result_2785017975[result_2785017975_Idx].push.apply(result_2785017975[result_2785017975_Idx], nsuToUpperAsciiStr(res_2785018010));;
    }
    else {
    result_2785017975[result_2785017975_Idx].push.apply(result_2785017975[result_2785017975_Idx], res_2785018010);;
    }
    
  };

  
}

function ms_2080374842(seconds_2080374843) {
  var result_2080374844 = 0.0;

    result_2080374844 = (seconds_2080374843 * 1000.0);

  return result_2080374844;

}

function elapsed_2080374866(timer_2080374867) {
  var result_2080374868 = 0.0;

    result_2080374868 = ((Date.now() / 1000) - timer_2080374867);

  return result_2080374868;

}

function runSelectedFunction_2969583450(self_2969583451) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2969575151(self_2969583451)) {
    break BeforeRet;
    }
    
    var node_2969583452 = node_2969569752(self_2969583451);
    Label1: {
        Label2: while (true) {
        if (!!((node_2969583452.parent == null))) break Label2;
          if (((node_2969583452.parent == self_2969583451.document.rootNode) && (node_2969583452.kind == 8))) {
          var timer_2969583465 = startTimer_2080374869();
          var fmtRes_2969583470 = [mnewString(0)];
          fmtRes_2969583470[0].push.apply(fmtRes_2969583470[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008590(fmtRes_2969583470, 0, node_2969583452, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583470[0], NTI33554449)]);
          updateNode_3019955286(ctx_2969567289, node_2969583452);
          var result_2969583476 = computeValue_3019916562(ctx_2969567289, node_2969583452, true);
          if (!((result_2969583476.kind == 1))) {
          if ((result_2969583476.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583485(executionOutput_2969567288[0], HEX24_3087008498(result_2969583476), Temporary3);
          }
          
          var fmtRes_2969583517 = [mnewString(0)];
          fmtRes_2969583517[0].push.apply(fmtRes_2969583517[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008590(fmtRes_2969583517, 0, node_2969583452, []);
          fmtRes_2969583517[0].push.apply(fmtRes_2969583517[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583517, 0, result_2969583476, []);
          fmtRes_2969583517[0].push.apply(fmtRes_2969583517[0], [32,40,84,111,111,107,32]);;
          formatValue_2785017973(fmtRes_2969583517, 0, ms_2080374842(elapsed_2080374866(timer_2969583465)), []);
          fmtRes_2969583517[0].push.apply(fmtRes_2969583517[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583517[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2969583452.kind == 4) && (0 < len_3003121752(node_2969583452))) && (HEX5BHEX5D_3003121748(node_2969583452, 0).kind == 11))) {
          var functionType_2969583541 = computeType_3019913434(ctx_2969567289, node_2969583452, true);
          if ((functionType_2969583541.kind == 0)) {
          var fmtRes_2969583550 = [mnewString(0)];
          fmtRes_2969583550[0].push.apply(fmtRes_2969583550[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583550, 0, node_2969583452, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583550[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2969583541.kind == 4))) {
          var fmtRes_2969583564 = [mnewString(0)];
          fmtRes_2969583564[0].push.apply(fmtRes_2969583564[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008590(fmtRes_2969583564, 0, node_2969583452, []);
          fmtRes_2969583564[0].push.apply(fmtRes_2969583564[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583564, 0, functionType_2969583541, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583564[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2969583541;
            if (ConstSet234[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2969583582 = [mnewString(0)];
          fmtRes_2969583582[0].push.apply(fmtRes_2969583582[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008590(fmtRes_2969583582, 0, node_2969583452, []);
          fmtRes_2969583582[0].push.apply(fmtRes_2969583582[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3019948837(fmtRes_2969583582, 0, functionType_2969583541, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583582[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2969583597 = [mnewString(0)];
          fmtRes_2969583597[0].push.apply(fmtRes_2969583597[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583597, 0, node_2969583452, []);
          fmtRes_2969583597[0].push.apply(fmtRes_2969583597[0], [32,40]);;
          formatValue_3019948837(fmtRes_2969583597, 0, functionType_2969583541, []);
          fmtRes_2969583597[0].push.apply(fmtRes_2969583597[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583597[0], NTI33554449)]);
          var timer_2969583608 = startTimer_2080374869();
          var maxLoopIterations_2969583618 = getOption_2818589681(self_2969583451.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2969583626 = newFunctionExecutionContext_3019907902(ctx_2969567289, {node: HEX5BHEX5D_3003121748(node_2969583452, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2969583618), mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2969583627 = computeFunctionExecution_3019933908(ctx_2969567289, fec_2969583626);
          if (!((result_2969583627.kind == 1))) {
          if ((result_2969583627.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2969583485(executionOutput_2969567288[0], HEX24_3087008498(result_2969583627), Temporary5);
          }
          
          var fmtRes_2969583645 = [mnewString(0)];
          fmtRes_2969583645[0].push.apply(fmtRes_2969583645[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008590(fmtRes_2969583645, 0, node_2969583452, []);
          fmtRes_2969583645[0].push.apply(fmtRes_2969583645[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3154118047(fmtRes_2969583645, 0, result_2969583627, []);
          fmtRes_2969583645[0].push.apply(fmtRes_2969583645[0], [32,40,84,111,111,107,32]);;
          formatValue_2785017973(fmtRes_2969583645, 0, ms_2080374842(elapsed_2080374866(timer_2969583608)), []);
          fmtRes_2969583645[0].push.apply(fmtRes_2969583645[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969583645[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2969583452 = node_2969583452.parent;
        }
    };
    var fmtRes_2969583665 = [mnewString(0)];
    fmtRes_2969583665[0].push.apply(fmtRes_2969583665[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008590(fmtRes_2969583665, 0, node_2969569752(self_2969583451), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969583665[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2969583446(self_2969583698) {
    runSelectedFunction_2969583450(self_2969583698);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2969583446(this));};

function toggleOption_2969583728(self_2969583729, name_2969583730) {
    switch (toJSStr(name_2969583730)) {
    case "logging":
      ctx_2969567289.enableLogging = !(ctx_2969567289.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2969583724(self_2969583759, name_2969583760) {
    toggleOption_2969583728(self_2969583759, name_2969583760);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2969583724(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2969583790(self_2969583791, which_2969583792) {
    switch (toJSStr(which_2969583792)) {
    case "":
      var _ = handleAction_2969583780(self_2969583791, self_2969583791.lastCommand["Field0"], self_2969583791.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2969583780(self_2969583791, self_2969583791.lastMoveCommand["Field0"], self_2969583791.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2969583780(self_2969583791, self_2969583791.lastEditCommand["Field0"], self_2969583791.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2969583780(self_2969583791, self_2969583791.lastOtherCommand["Field0"], self_2969583791.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2969583786(self_2969583821, which_2969583822) {
    runLastCommand_2969583790(self_2969583821, which_2969583822);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2969583786(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007967(node_3087007968, index_3087007969) {
  var result_3087007970 = null;

  BeforeRet: {
    result_3087007970 = node_3087007968.children[chckIndx(index_3087007969, 0, (node_3087007968.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007970;

}

function none_3087008000() {
  var result_3087008006 = ({val: null});

  return result_3087008006;

}

function none_3087007997() {
  var result_3087007999 = ({val: null});

    result_3087007999 = nimCopy(result_3087007999, none_3087008000(), NTI3087007897);

  return result_3087007999;

}

function index_3087007914(node_3087007915) {
  var result_3087007916 = 0;

  BeforeRet: {
    if ((node_3087007915.parent == null)) {
    result_3087007916 = -1;
    break BeforeRet;
    }
    
    result_3087007916 = 0;
    Label1: {
      var i_3087007943 = null;
      var i_2969584170 = 0;
      var L_2969584171 = (node_3087007915.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584170 < L_2969584171)) break Label3;
            i_3087007943 = node_3087007915.parent.children[chckIndx(i_2969584170, 0, (node_3087007915.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820626(i_3087007943.id, node_3087007915.id)) {
            break BeforeRet;
            }
            
            result_3087007916 = addInt(result_3087007916, 1);
            i_2969584170 = addInt(i_2969584170, 1);
            if (!(((node_3087007915.parent.children).length == L_2969584171))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007916;

}

function some_3087008019(val_3087008021) {
  var result_3087008022 = ({val: null});

    if (!(!((val_3087008021 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008022.val = val_3087008021;

  return result_3087008022;

}

function next_3087007986(node_3087007987) {
  var result_3087007992 = ({val: null});

  BeforeRet: {
    if ((node_3087007987.parent == null)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    var i_3087008016 = index_3087007914(node_3087007987);
    if ((subInt(len_3087007980(node_3087007987.parent), 1) <= i_3087008016)) {
    result_3087007992 = nimCopy(result_3087007992, none_3087007997(), NTI3087007897);
    break BeforeRet;
    }
    
    result_3087007992 = nimCopy(result_3087007992, some_3087008019(HEX5BHEX5D_3087007967(node_3087007987.parent, addInt(i_3087008016, 1))), NTI3087007897);
    break BeforeRet;
  };

  return result_3087007992;

}

function isSome_3087008068(self_3087008070) {
  var result_3087008071 = false;

    result_3087008071 = !((self_3087008070.val == null));

  return result_3087008071;

}

function isNone_3087008096(self_3087008098) {
  var result_3087008099 = false;

    result_3087008099 = (self_3087008098.val == null);

  return result_3087008099;

}

function get_3087008088(self_3087008090) {
  var result_3087008091 = null;

    if (isNone_3087008096(self_3087008090)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008091 = self_3087008090["val"];

  return result_3087008091;

}

function newSeq_2969583925(len_2969583927) {
  var result_2969583928 = [];

    result_2969583928 = new Array(len_2969583927); for (var i = 0 ; i < len_2969583927 ; ++i) { result_2969583928[i] = {Field0: 0.0, Field1: null}; }
  return result_2969583928;

}

function mergeAlt_2969583954(a_2969583956, b_2969583957, lo_2969583958, m_2969583959, hi_2969583960, cmp_2969583963, order_2969583964) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2969583963(a_2969583956[chckIndx(m_2969583959, 0, (a_2969583956).length - 1)], a_2969583956[chckIndx(addInt(m_2969583959, 1), 0, (a_2969583956).length - 1)]), order_2969583964) <= 0)) {
    break BeforeRet;
    }
    
    var j_2969583965 = lo_2969583958;
    if (!((j_2969583965 <= m_2969583959))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2969583971 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2969583965 <= m_2969583959)) break Label2;
          b_2969583957[chckIndx(bb_2969583971, 0, (b_2969583957).length - 1)] = nimCopy(b_2969583957[chckIndx(bb_2969583971, 0, (b_2969583957).length - 1)], a_2969583956[chckIndx(j_2969583965, 0, (a_2969583956).length - 1)], NTI2969578269);
          bb_2969583971 = addInt(bb_2969583971, 1);
          j_2969583965 = addInt(j_2969583965, 1);
        }
    };
    var i_2969583982 = 0;
    var k_2969583983 = lo_2969583958;
    Label3: {
        Label4: while (true) {
        if (!((k_2969583983 < j_2969583965) && (j_2969583965 <= hi_2969583960))) break Label4;
          if ((HEX2A_1023410184(cmp_2969583963(b_2969583957[chckIndx(i_2969583982, 0, (b_2969583957).length - 1)], a_2969583956[chckIndx(j_2969583965, 0, (a_2969583956).length - 1)]), order_2969583964) <= 0)) {
          a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)] = nimCopy(a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)], b_2969583957[chckIndx(i_2969583982, 0, (b_2969583957).length - 1)], NTI2969578269);
          i_2969583982 = addInt(i_2969583982, 1);
          }
          else {
            a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)] = nimCopy(a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)], a_2969583956[chckIndx(j_2969583965, 0, (a_2969583956).length - 1)], NTI2969578269);
            j_2969583965 = addInt(j_2969583965, 1);
          }
          
          k_2969583983 = addInt(k_2969583983, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2969583983 < j_2969583965)) break Label6;
          a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)] = nimCopy(a_2969583956[chckIndx(k_2969583983, 0, (a_2969583956).length - 1)], b_2969583957[chckIndx(i_2969583982, 0, (b_2969583957).length - 1)], NTI2969578269);
          k_2969583983 = addInt(k_2969583983, 1);
          i_2969583982 = addInt(i_2969583982, 1);
        }
    };
  };

  
}

function sort_2969583913(a_2969583915, cmp_2969583918, order_2969583919) {
    var n_2969583924 = (a_2969583915).length;
    var b_2969583951 = newSeq_2969583925(chckRange(divInt(n_2969583924, 2), 0, 2147483647));
    var s_2969583952 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2969583952 < n_2969583924)) break Label2;
          var m_2969583953 = subInt(subInt(n_2969583924, 1), s_2969583952);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2969583953)) break Label4;
                mergeAlt_2969583954(a_2969583915, b_2969583951, nimMax(addInt(subInt(m_2969583953, s_2969583952), 1), 0), m_2969583953, addInt(m_2969583953, s_2969583952), cmp_2969583918, order_2969583919);
                m_2969583953 = subInt(m_2969583953, mulInt(s_2969583952, 2));
              }
          };
          s_2969583952 = mulInt(s_2969583952, 2);
        }
    };

  
}

function cmp_2969583893(x_2969583895, y_2969583896) {
  var result_2969583897 = 0;

  BeforeRet: {
    if ((x_2969583895 == y_2969583896)) {
    result_2969583897 = 0;
    break BeforeRet;
    }
    
    if ((x_2969583895 < y_2969583896)) {
    result_2969583897 = -1;
    break BeforeRet;
    }
    
    result_2969583897 = 1;
    break BeforeRet;
  };

  return result_2969583897;

}

function selectCenterNode_2969583848(self_2969583849) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2969583881(a_2969583900, b_2969583901) {
      var result_2969583906 = 0;

        result_2969583906 = cmp_2969583893(a_2969583900.Field0, b_2969583901.Field0);

      return result_2969583906;

    }

    var nodes_2969583856 = [];
    Label1: {
      var layout_2969583860 = null;
      var offset_2969583861 = ({x: 0.0, y: 0.0});
      var i_2969584161 = 0;
      var L_2969584162 = (self_2969583849.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584161 < L_2969584162)) break Label3;
            layout_2969583860 = self_2969583849.lastLayouts[chckIndx(i_2969584161, 0, (self_2969583849.lastLayouts).length - 1)]["Field0"];
            offset_2969583861 = self_2969583849.lastLayouts[chckIndx(i_2969584161, 0, (self_2969583849.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2969583862 = 0;
              var node_2969583863 = null;
              var n_2969584152 = layout_2969583860.root;
              var idx_2969584153 = -1;
              var i_2969584154 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2969584153 == -1)) {
                    var colontmp__2969584157 = nimCopy(null, {Field0: i_2969584154, Field1: n_2969584152}, NTI3087007968);
                    i_2969583862 = colontmp__2969584157["Field0"];
                    node_2969583863 = colontmp__2969584157["Field1"];
                    if ((!((node_2969583863.node == null)) && (0 < len_3087007980(node_2969583863)))) {
                    var bounds_2969583867 = absoluteBounds_3087009545(node_2969583863);
                    if (intersects_2130706609(rect_2147483666(0.0, 0.0, self_2969583849.lastBounds.w, self_2969583849.lastBounds.h), HEX2B_2130706587(bounds_2969583867, vec2_2164261725(0.0, offset_2969583861.y)))) {
                    nodes_2969583856.push({Field0: (bounds_2969583867.y + offset_2969583861.y), Field1: node_2969583863});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2969584153, 1) < len_3087007980(n_2969584152))) {
                    n_2969584152 = HEX5BHEX5D_3087007967(n_2969584152, addInt(idx_2969584153, 1));
                    idx_2969584153 = -1;
                    }
                    else {
                      var oHEX60gensym5_2969584158 = next_3087007986(n_2969584152);
                      if (!isSome_3087008068(oHEX60gensym5_2969584158)) Temporary9 = false; else {                        var ne_2969584159 = get_3087008088(oHEX60gensym5_2969584158);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2969584152 == null));                      }                    if (Temporary8) {
                    n_2969584152 = ne_2969584159;
                    idx_2969584153 = -1;
                    }
                    else {
                    if (((!((n_2969584152.parent == null)) && !((n_2969584152 == null))) && !((n_2969584152.parent == null)))) {
                    idx_2969584153 = index_3087007914(n_2969584152);
                    n_2969584152 = n_2969584152.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2969584154 = addInt(i_2969584154, 1);
                    }
                  }
              };
            };
            i_2969584161 = addInt(i_2969584161, 1);
            if (!(((self_2969583849.lastLayouts).length == L_2969584162))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2969583913(nodes_2969583856, HEX3Aanonymous_2969583881, 1);
    if ((0 < (nodes_2969583856).length)) {
    var firstY_2969584027 = nodes_2969583856[chckIndx(0, 0, (nodes_2969583856).length - 1)].Field0;
    var lastY_2969584031 = nodes_2969583856[chckIndx((nodes_2969583856).length - 1, 0, (nodes_2969583856).length - 1)].Field0;
    var middleY_2969584032 = ((firstY_2969584027 + lastY_2969584031) * 0.5);
    Label10: {
      var i_2969584065 = 0;
      var y_2969584066 = 0.0;
      var node_2969584067 = null;
      var i_2969584166 = 0;
      var L_2969584167 = (nodes_2969583856).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584166 < L_2969584167)) break Label12;
            i_2969584065 = i_2969584166;
            y_2969584066 = nodes_2969583856[chckIndx(i_2969584166, 0, (nodes_2969583856).length - 1)]["Field0"];
            node_2969584067 = nodes_2969583856[chckIndx(i_2969584166, 0, (nodes_2969583856).length - 1)]["Field1"];
            if (((i_2969584065 == (nodes_2969583856).length - 1) || (middleY_2969584032 < nodes_2969583856[chckIndx(addInt(i_2969584065, 1), 0, (nodes_2969583856).length - 1)].Field0))) {
            nodeHEX3D_2969570829(self_2969583849, node_2969584067.node);
            break Label10;
            }
            
            i_2969584166 = addInt(i_2969584166, 1);
            if (!(((nodes_2969583856).length == L_2969584167))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2969583844(self_2969584134) {
    selectCenterNode_2969583848(self_2969584134);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2969583844(this));};

function scroll_2969584184(self_2969584185, amount_2969584186) {
    HEX2BHEX3D_855640304(self_2969584185, "scrollOffset", amount_2969584186);
    markDirty_2415919143(self_2969584185);

  
}

function scrollJsWrapper_2969584180(self_2969584219, amount_2969584220) {
    scroll_2969584184(self_2969584219, amount_2969584220);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2969584180(this, amount_));};

function scrollOutput_2969584246(self_2969584247, arg_2969584248) {
    switch (toJSStr(arg_2969584248)) {
    case "home":
      executionOutput_2969567288[0].scroll = (executionOutput_2969567288[0].lines).length;
      break;
    case "end":
      executionOutput_2969567288[0].scroll = 0;
      break;
    default: 
      executionOutput_2969567288[0].scroll = clamp_1660945119(addInt(executionOutput_2969567288[0].scroll, nsuParseInt(arg_2969584248)), 0, (executionOutput_2969567288[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2969584242(self_2969584288, arg_2969584289) {
    scrollOutput_2969584246(self_2969584288, arg_2969584289);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2969584242(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function pairs_3019905231(t_3019905234) {
  var result_3019905235 = [];

    for (var [k, v] in t_3019905234.entries()) {result_3019905235.push({Field0: k, Field1: v});}

  return result_3019905235;

}

function pairs_3019905260(t_3019905263) {
  var result_3019905264 = [];

    for (var [k, v] in t_3019905263.entries()) {result_3019905264.push({Field0: k, Field1: v});}

  return result_3019905264;

}

function pairs_3019905289(t_3019905292) {
  var result_3019905293 = [];

    for (var [k, v] in t_3019905292.entries()) {result_3019905293.push({Field0: k, Field1: v});}

  return result_3019905293;

}

function pairs_3019905318(t_3019905321) {
  var result_3019905322 = [];

    for (var [k, v] in t_3019905321.entries()) {result_3019905322.push({Field0: k, Field1: v});}

  return result_3019905322;

}

function pairs_3019905347(t_3019905350) {
  var result_3019905351 = [];

    for (var [k, v] in t_3019905350.entries()) {result_3019905351.push({Field0: k, Field1: v});}

  return result_3019905351;

}

function pairs_3019905376(t_3019905379) {
  var result_3019905380 = [];

    for (var [k, v] in t_3019905379.entries()) {result_3019905380.push({Field0: k, Field1: v});}

  return result_3019905380;

}

function pairs_3019905405(t_3019905408) {
  var result_3019905409 = [];

    for (var [k, v] in t_3019905408.entries()) {result_3019905409.push({Field0: k, Field1: v});}

  return result_3019905409;

}

function pairs_3019905512(t_3019905515) {
  var result_3019905516 = [];

    for (var [k, v] in t_3019905515.entries()) {result_3019905516.push({Field0: k, Field1: v});}

  return result_3019905516;

}

function pairs_3019905701(t_3019905704) {
  var result_3019905705 = [];

    for (var [k, v] in t_3019905704.entries()) {result_3019905705.push({Field0: k, Field1: v});}

  return result_3019905705;

}

function pairs_3019905730(t_3019905733) {
  var result_3019905734 = [];

    for (var [k, v] in t_3019905733.entries()) {result_3019905734.push({Field0: k, Field1: v});}

  return result_3019905734;

}

function pairs_3019905759(t_3019905762) {
  var result_3019905763 = [];

    for (var [k, v] in t_3019905762.entries()) {result_3019905763.push({Field0: k, Field1: v});}

  return result_3019905763;

}

function pairs_3019905788(t_3019905791) {
  var result_3019905792 = [];

    for (var [k, v] in t_3019905791.entries()) {result_3019905792.push({Field0: k, Field1: v});}

  return result_3019905792;

}

function pairs_3019905817(t_3019905820) {
  var result_3019905821 = [];

    for (var [k, v] in t_3019905820.entries()) {result_3019905821.push({Field0: k, Field1: v});}

  return result_3019905821;

}

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2969584442 = 0;
      var last_2969584443 = 0;
      var eolpos_2969584444 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2969584443 < (s_855639240).length) && !((ConstSet235[s_855639240[chckIndx(last_2969584443, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2969584443 = addInt(last_2969584443, 1);
                }
            };
            eolpos_2969584444 = last_2969584443;
            if ((last_2969584443 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2969584443, 0, (s_855639240).length - 1)] == 10)) {
            last_2969584443 = addInt(last_2969584443, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2969584443, 0, (s_855639240).length - 1)] == 13)) {
            last_2969584443 = addInt(last_2969584443, 1);
            if (((last_2969584443 < (s_855639240).length) && (s_855639240[chckIndx(last_2969584443, 0, (s_855639240).length - 1)] == 10))) {
            last_2969584443 = addInt(last_2969584443, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2969584443, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2969584444, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2969584442, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2969584439 = 0;
              colontmp__2969584439 = count_855639241;
              var res_2969584440 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2969584440 <= colontmp__2969584439)) break Label9;
                    j_855639250 = res_2969584440;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2969584440 = addInt(res_2969584440, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2969584444 == last_2969584443)) {
            break Label2;
            }
            
            first_2969584442 = last_2969584443;
          }
      };
    };

  return result_855639243;

}

function HEX24_3036679526(graph_3036679527) {
  var result_3036679528 = [];

    result_3036679528 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3036679528.push.apply(result_3036679528, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3036679527.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3036679528.push.apply(result_3036679528, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3036679528;

}

function toString_3019905229(HEX3Atmp_3019899097) {
  var result_3019905230 = [];

  BeforeRet: {
    var HEX3Atmp_3019899098 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym53_3019905258 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3019905259 = null;
      var colontmp__2969584360 = [];
      colontmp__2969584360 = pairs_3019905231(HEX3Atmp_3019899097.itemsAstNode);
      var i_2969584362 = 0;
      var L_2969584363 = (colontmp__2969584360).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2969584362 < L_2969584363)) break Label3;
            keyHEX60gensym53_3019905258 = colontmp__2969584360[chckIndx(i_2969584362, 0, (colontmp__2969584360).length - 1)]["Field0"];
            valueHEX60gensym53_3019905259 = colontmp__2969584360[chckIndx(i_2969584362, 0, (colontmp__2969584360).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym53_3019905258) || [],[32,45,62,32] || [],HEX24_3003123671(valueHEX60gensym53_3019905259) || [],[10] || []));;
            i_2969584362 = addInt(i_2969584362, 1);
            if (!(((colontmp__2969584360).length == L_2969584363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label4: {
      var keyHEX60gensym54_3019905287 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym54_3019905288 = null;
      var colontmp__2969584366 = [];
      colontmp__2969584366 = pairs_3019905260(HEX3Atmp_3019899097.itemsNodeLayoutInput);
      var i_2969584368 = 0;
      var L_2969584369 = (colontmp__2969584366).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2969584368 < L_2969584369)) break Label6;
            keyHEX60gensym54_3019905287 = colontmp__2969584366[chckIndx(i_2969584368, 0, (colontmp__2969584366).length - 1)]["Field0"];
            valueHEX60gensym54_3019905288 = colontmp__2969584366[chckIndx(i_2969584368, 0, (colontmp__2969584366).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym54_3019905287) || [],[32,45,62,32] || [],HEX24_3087009982(valueHEX60gensym54_3019905288) || [],[10] || []));;
            i_2969584368 = addInt(i_2969584368, 1);
            if (!(((colontmp__2969584366).length == L_2969584369))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label7: {
      var keyHEX60gensym55_3019905316 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym55_3019905317 = null;
      var colontmp__2969584372 = [];
      colontmp__2969584372 = pairs_3019905289(HEX3Atmp_3019899097.itemsSymbol);
      var i_2969584374 = 0;
      var L_2969584375 = (colontmp__2969584372).length;
      Label8: {
          Label9: while (true) {
          if (!(i_2969584374 < L_2969584375)) break Label9;
            keyHEX60gensym55_3019905316 = colontmp__2969584372[chckIndx(i_2969584374, 0, (colontmp__2969584372).length - 1)]["Field0"];
            valueHEX60gensym55_3019905317 = colontmp__2969584372[chckIndx(i_2969584374, 0, (colontmp__2969584372).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym55_3019905316) || [],[32,45,62,32] || [],HEX24_3087008915(valueHEX60gensym55_3019905317) || [],[10] || []));;
            i_2969584374 = addInt(i_2969584374, 1);
            if (!(((colontmp__2969584372).length == L_2969584375))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label10: {
      var keyHEX60gensym56_3019905345 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym56_3019905346 = null;
      var colontmp__2969584378 = [];
      colontmp__2969584378 = pairs_3019905318(HEX3Atmp_3019899097.itemsFunctionExecutionContext);
      var i_2969584380 = 0;
      var L_2969584381 = (colontmp__2969584378).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2969584380 < L_2969584381)) break Label12;
            keyHEX60gensym56_3019905345 = colontmp__2969584378[chckIndx(i_2969584380, 0, (colontmp__2969584378).length - 1)]["Field0"];
            valueHEX60gensym56_3019905346 = colontmp__2969584378[chckIndx(i_2969584380, 0, (colontmp__2969584378).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3036676336(keyHEX60gensym56_3019905345) || [],[32,45,62,32] || [],HEX24_3087008582(valueHEX60gensym56_3019905346) || [],[10] || []));;
            i_2969584380 = addInt(i_2969584380, 1);
            if (!(((colontmp__2969584378).length == L_2969584381))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label13: {
      var keyHEX60gensym57_3019905374 = null;
      var valueHEX60gensym57_3019905375 = null;
      var colontmp__2969584384 = [];
      colontmp__2969584384 = pairs_3019905347(HEX3Atmp_3019899097.queryCacheType);
      var i_2969584386 = 0;
      var L_2969584387 = (colontmp__2969584384).length;
      Label14: {
          Label15: while (true) {
          if (!(i_2969584386 < L_2969584387)) break Label15;
            keyHEX60gensym57_3019905374 = colontmp__2969584384[chckIndx(i_2969584386, 0, (colontmp__2969584384).length - 1)]["Field0"];
            valueHEX60gensym57_3019905375 = colontmp__2969584384[chckIndx(i_2969584386, 0, (colontmp__2969584384).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym57_3019905374) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym57_3019905375) || [],[10] || []));;
            i_2969584386 = addInt(i_2969584386, 1);
            if (!(((colontmp__2969584384).length == L_2969584387))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label16: {
      var keyHEX60gensym58_3019905403 = null;
      var valueHEX60gensym58_3019905404 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584390 = [];
      colontmp__2969584390 = pairs_3019905376(HEX3Atmp_3019899097.queryCacheValue);
      var i_2969584392 = 0;
      var L_2969584393 = (colontmp__2969584390).length;
      Label17: {
          Label18: while (true) {
          if (!(i_2969584392 < L_2969584393)) break Label18;
            keyHEX60gensym58_3019905403 = colontmp__2969584390[chckIndx(i_2969584392, 0, (colontmp__2969584390).length - 1)]["Field0"];
            valueHEX60gensym58_3019905404 = colontmp__2969584390[chckIndx(i_2969584392, 0, (colontmp__2969584390).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym58_3019905403) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym58_3019905404) || [],[10] || []));;
            i_2969584392 = addInt(i_2969584392, 1);
            if (!(((colontmp__2969584390).length == L_2969584393))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label19: {
      var keyHEX60gensym59_3019905432 = null;
      var valueHEX60gensym59_3019905433 = ({val: null});
      var colontmp__2969584396 = [];
      colontmp__2969584396 = pairs_3019905405(HEX3Atmp_3019899097.queryCacheSymbol);
      var i_2969584398 = 0;
      var L_2969584399 = (colontmp__2969584396).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2969584398 < L_2969584399)) break Label21;
            keyHEX60gensym59_3019905432 = colontmp__2969584396[chckIndx(i_2969584398, 0, (colontmp__2969584396).length - 1)]["Field0"];
            valueHEX60gensym59_3019905433 = colontmp__2969584396[chckIndx(i_2969584398, 0, (colontmp__2969584396).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym59_3019905432) || [],[32,45,62,32] || [],HEX24_3019905491(valueHEX60gensym59_3019905433) || [],[10] || []));;
            i_2969584398 = addInt(i_2969584398, 1);
            if (!(((colontmp__2969584396).length == L_2969584399))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label22: {
      var keyHEX60gensym60_3019905539 = null;
      var valueHEX60gensym60_3019905540 = null;
      var colontmp__2969584402 = [];
      colontmp__2969584402 = pairs_3019905512(HEX3Atmp_3019899097.queryCacheSymbols);
      var i_2969584404 = 0;
      var L_2969584405 = (colontmp__2969584402).length;
      Label23: {
          Label24: while (true) {
          if (!(i_2969584404 < L_2969584405)) break Label24;
            keyHEX60gensym60_3019905539 = colontmp__2969584402[chckIndx(i_2969584404, 0, (colontmp__2969584402).length - 1)]["Field0"];
            valueHEX60gensym60_3019905540 = colontmp__2969584402[chckIndx(i_2969584404, 0, (colontmp__2969584402).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym60_3019905539) || [],[32,45,62,32] || [],HEX24_3019905598(valueHEX60gensym60_3019905540) || [],[10] || []));;
            i_2969584404 = addInt(i_2969584404, 1);
            if (!(((colontmp__2969584402).length == L_2969584405))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,105,100,97,116,105,111,110,10] || []));;
    Label25: {
      var keyHEX60gensym61_3019905728 = null;
      var valueHEX60gensym61_3019905729 = false;
      var colontmp__2969584408 = [];
      colontmp__2969584408 = pairs_3019905701(HEX3Atmp_3019899097.queryCacheValidation);
      var i_2969584410 = 0;
      var L_2969584411 = (colontmp__2969584408).length;
      Label26: {
          Label27: while (true) {
          if (!(i_2969584410 < L_2969584411)) break Label27;
            keyHEX60gensym61_3019905728 = colontmp__2969584408[chckIndx(i_2969584410, 0, (colontmp__2969584408).length - 1)]["Field0"];
            valueHEX60gensym61_3019905729 = colontmp__2969584408[chckIndx(i_2969584410, 0, (colontmp__2969584408).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3003123671(keyHEX60gensym61_3019905728) || [],[32,45,62,32] || [],nimBoolToStr(valueHEX60gensym61_3019905729) || [],[10] || []));;
            i_2969584410 = addInt(i_2969584410, 1);
            if (!(((colontmp__2969584408).length == L_2969584411))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label28: {
      var keyHEX60gensym62_3019905757 = null;
      var valueHEX60gensym62_3019905758 = null;
      var colontmp__2969584414 = [];
      colontmp__2969584414 = pairs_3019905730(HEX3Atmp_3019899097.queryCacheSymbolType);
      var i_2969584416 = 0;
      var L_2969584417 = (colontmp__2969584414).length;
      Label29: {
          Label30: while (true) {
          if (!(i_2969584416 < L_2969584417)) break Label30;
            keyHEX60gensym62_3019905757 = colontmp__2969584414[chckIndx(i_2969584416, 0, (colontmp__2969584414).length - 1)]["Field0"];
            valueHEX60gensym62_3019905758 = colontmp__2969584414[chckIndx(i_2969584416, 0, (colontmp__2969584414).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym62_3019905757) || [],[32,45,62,32] || [],HEX24_3087008191(valueHEX60gensym62_3019905758) || [],[10] || []));;
            i_2969584416 = addInt(i_2969584416, 1);
            if (!(((colontmp__2969584414).length == L_2969584417))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label31: {
      var keyHEX60gensym63_3019905786 = null;
      var valueHEX60gensym63_3019905787 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584420 = [];
      colontmp__2969584420 = pairs_3019905759(HEX3Atmp_3019899097.queryCacheSymbolValue);
      var i_2969584422 = 0;
      var L_2969584423 = (colontmp__2969584420).length;
      Label32: {
          Label33: while (true) {
          if (!(i_2969584422 < L_2969584423)) break Label33;
            keyHEX60gensym63_3019905786 = colontmp__2969584420[chckIndx(i_2969584422, 0, (colontmp__2969584420).length - 1)]["Field0"];
            valueHEX60gensym63_3019905787 = colontmp__2969584420[chckIndx(i_2969584422, 0, (colontmp__2969584420).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008915(keyHEX60gensym63_3019905786) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym63_3019905787) || [],[10] || []));;
            i_2969584422 = addInt(i_2969584422, 1);
            if (!(((colontmp__2969584420).length == L_2969584423))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label34: {
      var keyHEX60gensym64_3019905815 = null;
      var valueHEX60gensym64_3019905816 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var colontmp__2969584426 = [];
      colontmp__2969584426 = pairs_3019905788(HEX3Atmp_3019899097.queryCacheFunctionExecution);
      var i_2969584428 = 0;
      var L_2969584429 = (colontmp__2969584426).length;
      Label35: {
          Label36: while (true) {
          if (!(i_2969584428 < L_2969584429)) break Label36;
            keyHEX60gensym64_3019905815 = colontmp__2969584426[chckIndx(i_2969584428, 0, (colontmp__2969584426).length - 1)]["Field0"];
            valueHEX60gensym64_3019905816 = colontmp__2969584426[chckIndx(i_2969584428, 0, (colontmp__2969584426).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087008582(keyHEX60gensym64_3019905815) || [],[32,45,62,32] || [],HEX24_3087008498(valueHEX60gensym64_3019905816) || [],[10] || []));;
            i_2969584428 = addInt(i_2969584428, 1);
            if (!(((colontmp__2969584426).length == L_2969584429))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label37: {
      var keyHEX60gensym65_3019905844 = null;
      var valueHEX60gensym65_3019905845 = null;
      var colontmp__2969584432 = [];
      colontmp__2969584432 = pairs_3019905817(HEX3Atmp_3019899097.queryCacheNodeLayout);
      var i_2969584434 = 0;
      var L_2969584435 = (colontmp__2969584432).length;
      Label38: {
          Label39: while (true) {
          if (!(i_2969584434 < L_2969584435)) break Label39;
            keyHEX60gensym65_3019905844 = colontmp__2969584432[chckIndx(i_2969584434, 0, (colontmp__2969584432).length - 1)]["Field0"];
            valueHEX60gensym65_3019905845 = colontmp__2969584432[chckIndx(i_2969584434, 0, (colontmp__2969584432).length - 1)]["Field1"];
            HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, (repeat2_3036676113([124,32], 2) || []).concat(HEX24_3087009982(keyHEX60gensym65_3019905844) || [],[32,45,62,32] || [],HEX24_3087009945(valueHEX60gensym65_3019905845) || [],[10] || []));;
            i_2969584434 = addInt(i_2969584434, 1);
            if (!(((colontmp__2969584432).length == L_2969584435))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX3Atmp_3019899098.push.apply(HEX3Atmp_3019899098, nsuIndent(HEX24_3036679526(HEX3Atmp_3019899097.depGraph), 1, [124,32]));;
    result_3019905230 = nimCopy(null, HEX3Atmp_3019899098, NTI33554449);
    break BeforeRet;
  };

  return result_3019905230;

}

function dumpContext_2969584315(self_2969584316) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3019905229(ctx_2969567289)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2969584311(self_2969584344) {
    dumpContext_2969584315(self_2969584344);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2969584311(this));};

function getModeConfig_2969584447(self_2969584448, mode_2969584449) {
  var result_2969584450 = null;

  BeforeRet: {
    result_2969584450 = getEventHandlerConfig_1291849162(self_2969584448.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2969584449 || []));
    break BeforeRet;
  };

  return result_2969584450;

}

function setMode_2969584457(self_2969584458, mode_2969584459) {
        
function HEX3Aanonymous_2969584480(actionHEX60gensym1002HEX60gensym1003_2969584481, argHEX60gensym1002HEX60gensym1003_2969584482) {
          var result_2969584483 = 0;

          BeforeRet: {
            if (handlerHEX60gensym1002_2969584468.config.handleActions) {
            var action_2969584484 = nimCopy(null, actionHEX60gensym1002HEX60gensym1003_2969584481, NTI33554449);
            var arg_2969584485 = nimCopy(null, argHEX60gensym1002HEX60gensym1003_2969584482, NTI33554449);
            var responseHEX60gensym1002HEX60gensym1003_2969584486 = handleAction_2969583780(self_2969584458, action_2969584484, arg_2969584485);
            if (handlerHEX60gensym1002_2969584468.config.consumeAllActions) {
            result_2969584483 = 3;
            break BeforeRet;
            }
            
            result_2969584483 = responseHEX60gensym1002HEX60gensym1003_2969584486;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym1002_2969584468.config.consumeAllActions) {
            result_2969584483 = 3;
            break BeforeRet;
            }
            else {
              result_2969584483 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2969584483;

        }
        
function HEX3Aanonymous_2969584488(inputHEX60gensym1002HEX60gensym1004_2969584489) {
          var result_2969584490 = 0;

          BeforeRet: {
            if (handlerHEX60gensym1002_2969584468.config.handleInputs) {
            var input_2969584491 = nimCopy(null, inputHEX60gensym1002HEX60gensym1004_2969584489, NTI33554449);
            result_2969584490 = 1;
            break BeforeRet;
            }
            else {
              result_2969584490 = 1;
              break BeforeRet;
            }
            
          };

          return result_2969584490;

        }

    if (((mode_2969584459).length == 0)) {
    self_2969584458.modeEventHandler = null;
    }
    else {
      var config_2969584460 = getModeConfig_2969584447(self_2969584458, mode_2969584459);
      Label1: {
        var handlerHEX60gensym1002_2969584468 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym1002_2969584468.config = config_2969584460;
        handlerHEX60gensym1002_2969584468.dfaInternal = buildDFA_2113929279(config_2969584460);
        handlerHEX60gensym1002_2969584468.handleAction = HEX3Aanonymous_2969584480;
        handlerHEX60gensym1002_2969584468.handleInput = HEX3Aanonymous_2969584488;
      };
      self_2969584458.modeEventHandler = handlerHEX60gensym1002_2969584468;
    }
    
    self_2969584458.currentMode = nimCopy(null, mode_2969584459, NTI33554449);

  
}

function setModeJsWrapper2_2969584453(self_2969584520, mode_2969584521) {
    setMode_2969584457(self_2969584520, mode_2969584521);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2969584453(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2969584548(self_2969584549) {
  var result_2969584550 = [];

  BeforeRet: {
    result_2969584550 = nimCopy(null, self_2969584549.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2969584550;

}

function modeJsWrapper2_2969584544(self_2969584579) {
  var result_2969584580 = [];

    result_2969584580 = nimCopy(null, mode_2969584548(self_2969584579), NTI33554449);

  return result_2969584580;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2969584544(this));};

function getContextWithMode_2969584605(self_2969584606, context_2969584607) {
  var result_2969584608 = [];

  BeforeRet: {
    result_2969584608 = nimCopy(null, (context_2969584607 || []).concat([46] || [],self_2969584606.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2969584608;

}

function getContextWithModeJsWrapper2_2969584601(self_2969584638, context_2969584639) {
  var result_2969584640 = [];

    result_2969584640 = nimCopy(null, getContextWithMode_2969584605(self_2969584638, context_2969584639), NTI33554449);

  return result_2969584640;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2969584601(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function getBackend_1291854145(self_1291854146) {
  var result_1291854147 = 0;

  BeforeRet: {
    result_1291854147 = self_1291854146.backend;
    break BeforeRet;
  };

  return result_1291854147;

}

function getBackendJsWrapper_1291854141(self_1291854198) {
  var result_1291854199 = 0;

    result_1291854199 = getBackend_1291854145(self_1291854198);

  return result_1291854199;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854141(this));};

function get_2348810295(self_2348810297, otherwise_2348810298) {
    var Temporary1;

  var result_2348810299 = [];

    if (isSome_2348810304(self_2348810297)) {
    Temporary1 = self_2348810297.val;
    }
    else {
    Temporary1 = otherwise_2348810298;
    }
    
    result_2348810299 = nimCopy(null, Temporary1, NTI33554449);

  return result_2348810299;

}

function isSome_2818579241(self_2818579243) {
  var result_2818579244 = false;

    result_2818579244 = !((self_2818579243.val == null));

  return result_2818579244;

}

function map_1291854418(self_1291854421, callback_1291854423) {
    var Temporary1;

  var result_1291854424 = ({val: [], has: false});

    if (isSome_2818579241(self_1291854421)) {
    Temporary1 = some_2281701410(callback_1291854423(self_1291854421.val));
    }
    else {
    Temporary1 = none_2348810263();
    }
    
    result_1291854424 = nimCopy(result_1291854424, Temporary1, NTI2348810261);

  return result_1291854424;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854532(a_1291854534, opt_1291854535) {
  var result_1291854536 = null;

    result_1291854536 = HEX25_1627391792(a_1291854534);

  return result_1291854536;

}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854599(a_1291854601) {
  var result_1291854602 = [];

    result_1291854602 = nimCopy(null, names_1291854604[chckIndx(subInt(a_1291854601, 0), 0, (names_1291854604).length - 1)], NTI33554449);

  return result_1291854602;

}

function toJson_1291854584(a_1291854586, opt_1291854587) {
    var Temporary1;

  var result_1291854588 = null;

    switch (opt_1291854587.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854586);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854599(a_1291854586), opt_1291854587);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854586, NTI1291845663), opt_1291854587);
      break;
    }
    result_1291854588 = Temporary1;

  return result_1291854588;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet236[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet237[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet238[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet239[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855116 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet240[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855116 = nimCopy(colontmp__1291855116, Temporary6.fields, NTI1627389966);
        var L_1291855117 = len_1627392114(colontmp__1291855116);
        if ((0 < colontmp__1291855116.counter)) {
        var h_1291855118 = colontmp__1291855116.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855118)) break Label8;
              var nxt_1291855120 = colontmp__1291855116.data[chckIndx(h_1291855118, 0, (colontmp__1291855116.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855116.data[chckIndx(h_1291855118, 0, (colontmp__1291855116.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855116.data[chckIndx(h_1291855118, 0, (colontmp__1291855116.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855116.data[chckIndx(h_1291855118, 0, (colontmp__1291855116.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet241[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855116) == L_1291855117))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855118 = nxt_1291855120;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855122 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet242[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855122 = Temporary11.elems;
        var i_1291855123 = 0;
        var L_1291855124 = (colontmp__1291855122).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855123 < L_1291855124)) break Label13;
              i_1627394330 = colontmp__1291855122[chckIndx(i_1291855123, 0, (colontmp__1291855122).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet243[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855123 = addInt(i_1291855123, 1);
              if (!(((colontmp__1291855122).length == L_1291855124))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818589144(a_2818589146, opt_2818589147) {
  var result_2818589148 = null;

    result_2818589148 = HEX25_1627391795(a_2818589146);

  return result_2818589148;

}

function symbolName_1291854733(a_1291854735) {
  var result_1291854736 = [];

    result_1291854736 = nimCopy(null, names_1291854738[chckIndx(subInt(a_1291854735, 0), 0, (names_1291854738).length - 1)], NTI33554449);

  return result_1291854736;

}

function toJson_1291854717(a_1291854719, opt_1291854720) {
    var Temporary1;

  var result_1291854721 = null;

    switch (opt_1291854720.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854719);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854733(a_1291854719), opt_1291854720);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854719, NTI1627389955), opt_1291854720);
      break;
    }
    result_1291854721 = Temporary1;

  return result_1291854721;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854827(a_1291854829, opt_1291854830) {
  var result_1291854831 = null;

    result_1291854831 = HEX25_1627391789(a_1291854829);

  return result_1291854831;

}

function toJson_1291854837(a_1291854839, opt_1291854840) {
  var result_1291854841 = null;

    result_1291854841 = HEX25_1627391792(a_1291854839);

  return result_1291854841;

}

function toJsonHook_1291854930(t_1291854934, opt_1291854935) {
  var result_1291854936 = null;

    result_1291854936 = newJObject_1627390051();
    Label1: {
      var k_1291854941 = [];
      var v_1291854942 = null;
      var L_1291855127 = len_1627392114(t_1291854934);
      if ((0 < t_1291854934.counter)) {
      var h_1291855128 = t_1291854934.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855128)) break Label3;
            var nxt_1291855130 = t_1291854934.data[chckIndx(h_1291855128, 0, (t_1291854934.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854934.data[chckIndx(h_1291855128, 0, (t_1291854934.data).length - 1)].Field0)) {
            k_1291854941 = t_1291854934.data[chckIndx(h_1291855128, 0, (t_1291854934.data).length - 1)].Field2;
            v_1291854942 = t_1291854934.data[chckIndx(h_1291855128, 0, (t_1291854934.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854936, k_1291854941, toJson_1291854688(v_1291854942, opt_1291854935));
            if (!((len_1627392114(t_1291854934) == L_1291855127))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855128 = nxt_1291855130;
          }
      };
      }
      
    };

  return result_1291854936;

}

function toJson_1291854852(a_1291854854, opt_1291854855) {
  var result_1291854856 = null;

    result_1291854856 = toJsonHook_1291854930(a_1291854854, opt_1291854855);

  return result_1291854856;

}

function toJson_1291854947(a_1291854949, opt_1291854950) {
  var result_1291854951 = null;

    result_1291854951 = newJArray_1627390082();
    Label1: {
      var ai_1291854958 = null;
      var i_1291855132 = 0;
      var L_1291855133 = (a_1291854949).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855132 < L_1291855133)) break Label3;
            ai_1291854958 = a_1291854949[chckIndx(i_1291855132, 0, (a_1291854949).length - 1)];
            add_1627390190(result_1291854951, toJson_1291854688(ai_1291854958, opt_1291854950));
            i_1291855132 = addInt(i_1291855132, 1);
            if (!(((a_1291854949).length == L_1291855133))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854951;

}

function toJson_1291854700(a_1291854702, opt_1291854703) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854704 = null;

    result_1291854704 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [105,115,85,110,113,117,111,116,101,100], toJson_2818589144(a_1291854702.isUnquoted, opt_1291854703));
    HEX5BHEX5DHEX3D_1627391903(result_1291854704, [107,105,110,100], toJson_1291854717(a_1291854702.kind, opt_1291854703));
    switch (a_1291854702.kind) {
    case 4:
      var Temporary1 = a_1291854702;
      if (ConstSet244[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854703));
      break;
    case 2:
      var Temporary2 = a_1291854702;
      if (ConstSet245[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [110,117,109], toJson_1291854827(Temporary2.num, opt_1291854703));
      break;
    case 3:
      var Temporary3 = a_1291854702;
      if (ConstSet246[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,110,117,109], toJson_1291854837(Temporary3.fnum, opt_1291854703));
      break;
    case 1:
      var Temporary4 = a_1291854702;
      if (ConstSet247[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [98,118,97,108], toJson_2818589144(Temporary4.bval, opt_1291854703));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854702;
      if (ConstSet248[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [102,105,101,108,100,115], toJson_1291854852(Temporary5.fields, opt_1291854703));
      break;
    case 6:
      var Temporary6 = a_1291854702;
      if (ConstSet249[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854704, [101,108,101,109,115], toJson_1291854947(Temporary6.elems, opt_1291854703));
      break;
    }

  return result_1291854704;

}

function toJson_1291854688(a_1291854690, opt_1291854691) {
  var result_1291854692 = null;

    switch (opt_1291854691.jsonNodeMode) {
    case 0:
      result_1291854692 = a_1291854690;
      break;
    case 1:
      result_1291854692 = copy_1627394272(a_1291854690);
      break;
    case 2:
      if ((a_1291854690 == null)) {
      result_1291854692 = newJNull_1627390049();
      }
      else {
        result_1291854692 = toJson_1291854700(a_1291854690, opt_1291854691);
      }
      
      break;
    }

  return result_1291854692;

}

function toJson_1291854571(a_1291854573, opt_1291854574) {
  var result_1291854575 = null;

    result_1291854575 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [107,105,110,100], toJson_1291854584(a_1291854573.kind, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [105,100], toJson_1811939932(a_1291854573.id, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [110,97,109,101], toJson_1811939932(a_1291854573.name, opt_1291854574));
    HEX5BHEX5DHEX3D_1627391903(result_1291854575, [115,101,116,116,105,110,103,115], toJson_1291854688(a_1291854573.settings, opt_1291854574));

  return result_1291854575;

}

function toJson_1291854559(a_1291854561, opt_1291854562) {
  var result_1291854563 = null;

    result_1291854563 = newJArray_1627390082();
    Label1: {
      var ai_1291854570 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855112 = 0;
      var L_1291855113 = (a_1291854561).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855112 < L_1291855113)) break Label3;
            ai_1291854570 = a_1291854561[chckIndx(i_1291855112, 0, (a_1291854561).length - 1)];
            add_1627390190(result_1291854563, toJson_1291854571(ai_1291854570, opt_1291854562));
            i_1291855112 = addInt(i_1291855112, 1);
            if (!(((a_1291854561).length == L_1291855113))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854563;

}

function toJson_1291854975(a_1291854977, opt_1291854978) {
  var result_1291854979 = null;

    result_1291854979 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291854977.filename, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,115,116], toJson_2818589144(a_1291854977.ast, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291854977.languageID, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [97,112,112,70,105,108,101], toJson_2818589144(a_1291854977.appFile, opt_1291854978));
    HEX5BHEX5DHEX3D_1627391903(result_1291854979, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291854977.workspaceId, opt_1291854978));

  return result_1291854979;

}

function toJson_1291854963(a_1291854965, opt_1291854966) {
  var result_1291854967 = null;

    result_1291854967 = newJArray_1627390082();
    Label1: {
      var ai_1291854974 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855137 = 0;
      var L_1291855138 = (a_1291854965).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855137 < L_1291855138)) break Label3;
            ai_1291854974 = a_1291854965[chckIndx(i_1291855137, 0, (a_1291854965).length - 1)];
            add_1627390190(result_1291854967, toJson_1291854975(ai_1291854974, opt_1291854966));
            i_1291855137 = addInt(i_1291855137, 1);
            if (!(((a_1291854965).length == L_1291855138))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854967;

}

function toJson_1291854515(a_1291854517, opt_1291854518) {
  var result_1291854519 = null;

    result_1291854519 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [116,104,101,109,101], toJson_1811939932(a_1291854517.theme, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,83,105,122,101], toJson_1291854532(a_1291854517.fontSize, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854517.fontRegular, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854517.fontBold, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854517.fontBoldItalic, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854559(a_1291854517.workspaceFolders, opt_1291854518));
    HEX5BHEX5DHEX3D_1627391903(result_1291854519, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291854963(a_1291854517.openEditors, opt_1291854518));

  return result_1291854519;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet250[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855141 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet251[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855141 = nimCopy(colontmp__1291855141, Temporary3.fields, NTI1627389966);
        var L_1291855142 = len_1627392114(colontmp__1291855141);
        if ((0 < colontmp__1291855141.counter)) {
        var h_1291855143 = colontmp__1291855141.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855143)) break Label5;
              var nxt_1291855145 = colontmp__1291855141.data[chckIndx(h_1291855143, 0, (colontmp__1291855141.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855141.data[chckIndx(h_1291855143, 0, (colontmp__1291855141.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855141.data[chckIndx(h_1291855143, 0, (colontmp__1291855141.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855141.data[chckIndx(h_1291855143, 0, (colontmp__1291855141.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855141) == L_1291855142))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855143 = nxt_1291855145;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet252[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet253[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet254[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet255[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855147 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet256[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855147 = subInt((Temporary12.elems).length, 1);
        var res_1291855148 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855148 <= colontmp__1291855147)) break Label14;
              i_1627394476 = res_1291855148;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet257[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855148 = addInt(res_1291855148, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853866(self_1291853867) {
              var Temporary5;
            
function HEX3Aanonymous_1291854402(wf_1291854413) {
              var result_1291854416 = [];

                result_1291854416 = nimCopy(null, HEX24_2046820617(wf_1291854413.id), NTI33554449);

              return result_1291854416;

            }
            
function HEX3Aanonymous_1291854473(wf_1291854484) {
              var result_1291854487 = [];

                result_1291854487 = nimCopy(null, HEX24_2046820617(wf_1291854484.id), NTI33554449);

              return result_1291854487;

            }

    var state_1291854314 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854314.theme = nimCopy(null, self_1291853867.theme.path, NTI33554449);
    if ((self_1291853867.backend == 1)) {
    state_1291854314.fontSize = self_1291853867.loadedFontSize;
    }
    else {
      state_1291854314.fontSize = fontSize_2768240784(self_1291853867.platform);
    }
    
    state_1291854314.fontRegular = nimCopy(null, self_1291853867.fontRegular, NTI33554449);
    state_1291854314.fontBold = nimCopy(null, self_1291853867.fontBold, NTI33554449);
    state_1291854314.fontItalic = nimCopy(null, self_1291853867.fontItalic, NTI33554449);
    state_1291854314.fontBoldItalic = nimCopy(null, self_1291853867.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854342 = null;
      var i_1291855102 = 0;
      var L_1291855103 = (self_1291853867.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855102 < L_1291855103)) break Label3;
            workspaceFolder_1291854342 = self_1291853867.workspace.folders[chckIndx(i_1291855102, 0, (self_1291853867.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2264924164)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2399141893)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854342.m_type, NTI2281701380)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854364 = Temporary5;
              state_1291854314.workspaceFolders.push({kind: kind_1291854364, id: HEX24_2046820617(workspaceFolder_1291854342.id), name: nimCopy(null, workspaceFolder_1291854342.name, NTI33554449), settings: settings_2214592534(workspaceFolder_1291854342)});;
            };
            i_1291855102 = addInt(i_1291855102, 1);
            if (!(((self_1291853867.workspace.folders).length == L_1291855103))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854390 = null;
      var i_1291855107 = 0;
      var L_1291855108 = (self_1291853867.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855107 < L_1291855108)) break Label8;
            view_1291854390 = self_1291853867.views[chckIndx(i_1291855107, 0, (self_1291853867.views).length - 1)];
            if (isObj(view_1291854390.document.m_type, NTI2818572427)) {
            var textDocument_1291854397 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, textDocument_1291854397.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854397.languageId, NTI33554449), appFile: textDocument_1291854397.appFile, workspaceId: get_2348810295(map_1291854418(textDocument_1291854397.workspace, HEX3Aanonymous_1291854402), [])});;
            }
            else {
            if (isObj(view_1291854390.document.m_type, NTI2969568612)) {
            var astDocument_1291854468 = view_1291854390.document;
            state_1291854314.openEditors.push({filename: nimCopy(null, astDocument_1291854468.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854468.appFile, workspaceId: get_2348810295(map_1291854418(astDocument_1291854468.workspace, HEX3Aanonymous_1291854473), [])});;
            }
            }
            i_1291855107 = addInt(i_1291855107, 1);
            if (!(((self_1291853867.views).length == L_1291855108))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855008 = toJson_1291854515(state_1291854314, initToJsonOptions_1811939362());
    saveApplicationFile_2365587480(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855008, 2));
    saveApplicationFile_2365587480(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853867.options, 2));

  
}

function saveAppStateJsWrapper_1291854308(self_1291855089) {
    saveAppState_1291853866(self_1291855089);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854308(this));};

function requestRender_1291855156(self_1291855157, redrawEverything_1291855158) {
    requestRender_2768240746(self_1291855157.platform, redrawEverything_1291855158);

  
}

function requestRenderJsWrapper_1291855152(self_1291855186, redrawEverything_1291855187) {
    requestRender_1291855156(self_1291855186, redrawEverything_1291855187);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855152(this, redrawEverything_));};

function setHandleInputs_2113929570(config_2113929571, value_2113929572) {
    config_2113929571.handleInputs = value_2113929572;
    config_2113929571.revision = addInt(config_2113929571.revision, 1);

  
}

function setHandleInputs_1291855208(self_1291855209, context_1291855210, value_1291855211) {
    setHandleInputs_2113929570(getEventHandlerConfig_1291849162(self_1291855209, context_1291855210), value_1291855211);

  
}

function setHandleInputsJsWrapper_1291855204(self_1291855240, context_1291855241, value_1291855242) {
    setHandleInputs_1291855208(self_1291855240, context_1291855241, value_1291855242);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855204(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2113929577(config_2113929578, value_2113929579) {
    config_2113929578.handleActions = value_2113929579;
    config_2113929578.revision = addInt(config_2113929578.revision, 1);

  
}

function setHandleActions_1291855268(self_1291855269, context_1291855270, value_1291855271) {
    setHandleActions_2113929577(getEventHandlerConfig_1291849162(self_1291855269, context_1291855270), value_1291855271);

  
}

function setHandleActionsJsWrapper_1291855264(self_1291855300, context_1291855301, value_1291855302) {
    setHandleActions_1291855268(self_1291855300, context_1291855301, value_1291855302);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855264(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2113929584(config_2113929585, value_2113929586) {
    config_2113929585.consumeAllActions = value_2113929586;
    config_2113929585.revision = addInt(config_2113929585.revision, 1);

  
}

function setConsumeAllActions_1291855328(self_1291855329, context_1291855330, value_1291855331) {
    setConsumeAllActions_2113929584(getEventHandlerConfig_1291849162(self_1291855329, context_1291855330), value_1291855331);

  
}

function setConsumeAllActionsJsWrapper_1291855324(self_1291855360, context_1291855361, value_1291855362) {
    setConsumeAllActions_1291855328(self_1291855360, context_1291855361, value_1291855362);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855324(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2113929591(config_2113929592, value_2113929593) {
    config_2113929592.consumeAllInput = value_2113929593;
    config_2113929592.revision = addInt(config_2113929592.revision, 1);

  
}

function setConsumeAllInput_1291855388(self_1291855389, context_1291855390, value_1291855391) {
    setConsumeAllInput_2113929591(getEventHandlerConfig_1291849162(self_1291855389, context_1291855390), value_1291855391);

  
}

function setConsumeAllInputJsWrapper_1291855384(self_1291855420, context_1291855421, value_1291855422) {
    setConsumeAllInput_1291855388(self_1291855420, context_1291855421, value_1291855422);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855384(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855525(self_1291855526) {
    Label1: {
      var wf_1291855530 = null;
      var i_1291855568 = 0;
      var L_1291855569 = (self_1291855526.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855568 < L_1291855569)) break Label3;
            wf_1291855530 = self_1291855526.workspace.folders[chckIndx(i_1291855568, 0, (self_1291855526.workspace.folders).length - 1)];
            clearDirectoryCache_2214592538(wf_1291855530);
            i_1291855568 = addInt(i_1291855568, 1);
            if (!(((self_1291855526.workspace.folders).length == L_1291855569))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855521(self_1291855557) {
    clearWorkspaceCaches_1291855525(self_1291855557);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855521(this));};

function openWorkspaceKind_1291851100(workspaceFolder_1291851101) {
  var result_1291855444 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851101.m_type, NTI2264924164)) {
    result_1291855444 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2399141893)) {
    result_1291855444 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851101.m_type, NTI2281701380)) {
    result_1291855444 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,53,57,52,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855444;

}

function addWorkspaceFolder_1291851102(self_1291851103, workspaceFolder_1291851104) {
  var result_1291855471 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855475 = null;
      var i_1291855640 = 0;
      var L_1291855641 = (self_1291851103.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855640 < L_1291855641)) break Label3;
            wf_1291855475 = self_1291851103.workspace.folders[chckIndx(i_1291855640, 0, (self_1291851103.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851100(wf_1291855475) == openWorkspaceKind_1291851100(workspaceFolder_1291851104)) && HEX3DHEX3D_1627392026(settings_2214592534(wf_1291855475), settings_2214592534(workspaceFolder_1291851104)))) {
            result_1291855471 = false;
            break BeforeRet;
            }
            
            i_1291855640 = addInt(i_1291855640, 1);
            if (!(((self_1291851103.workspace.folders).length == L_1291855641))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820626(workspaceFolder_1291851104.id, idNone_2046820633())) {
    workspaceFolder_1291851104.id = nimCopy(workspaceFolder_1291851104.id, newId_2046820597(), NTI2046820355);
    }
    
    var fmtRes_1291855485 = [mnewString(0)];
    fmtRes_1291855485[0].push.apply(fmtRes_1291855485[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855485, 0, workspaceFolder_1291851104.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855485[0], NTI33554449)]);
    self_1291851103.workspace.folders.push(workspaceFolder_1291851104);;
    result_1291855471 = true;
    break BeforeRet;
  };

  return result_1291855471;

}

function initTable_2281703693(initialSize_2281703696) {
  var result_2281703697 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2281703699 = slotsNeeded_1308622891(chckRange(initialSize_2281703696, 0, 2147483647));
    result_2281703697.counter = 0;
    result_2281703697.data = new Array(chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2281703699, 0, 2147483647) ; ++i) { result_2281703697.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2281703697;

}

function newWorkspaceFolderGithub_2281703680(user_2281703681, repository_2281703682, branchOrHash_2281703683) {
  var result_2281703684 = null;

    result_2281703684 = ({m_type: NTI2281701380, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2281703692 = [mnewString(0)];
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2281703692, 0, user_2281703681, []);
    fmtRes_2281703692[0].push.apply(fmtRes_2281703692[0], [47]);;
    formatValue_721420459(fmtRes_2281703692, 0, repository_2281703682, []);
    result_2281703684.baseUrl = nimCopy(null, fmtRes_2281703692[0], NTI33554449);
    result_2281703684.user = nimCopy(null, user_2281703681, NTI33554449);
    result_2281703684.repository = nimCopy(null, repository_2281703682, NTI33554449);
    result_2281703684.branchOrHash = nimCopy(null, branchOrHash_2281703683, NTI33554449);
    result_2281703684.cachedDirectoryListings = nimCopy(result_2281703684.cachedDirectoryListings, initTable_2281703693(32), NTI2281701388);
    result_2281703684.pathToSha = nimCopy(result_2281703684.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2281703712 = [mnewString(0)];
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2281703712, 0, user_2281703681, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, repository_2281703682, []);
    fmtRes_2281703712[0].push.apply(fmtRes_2281703712[0], [47]);;
    formatValue_721420459(fmtRes_2281703712, 0, branchOrHash_2281703683, []);
    result_2281703684.name = nimCopy(null, fmtRes_2281703712[0], NTI33554449);

  return result_2281703684;

}

function openGithubWorkspace_1291855577(self_1291855578, user_1291855579, repository_1291855580, branchOrHash_1291855581) {
    var _ = addWorkspaceFolder_1291851102(self_1291855578, newWorkspaceFolderGithub_2281703680(user_1291855579, repository_1291855580, branchOrHash_1291855581));

  
}

function openGithubWorkspaceJsWrapper_1291855573(self_1291855611, user_1291855612, repository_1291855613, branchOrHash_1291855614) {
    openGithubWorkspace_1291855577(self_1291855611, user_1291855612, repository_1291855613, branchOrHash_1291855614);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855573(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2399144348(url_2399144349) {
  var result_2399144350 = null;

    result_2399144350 = ({m_type: NTI2399141893, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2399144350.baseUrl = nimCopy(null, url_2399144349, NTI33554449);
    var _ = updateWorkspaceName_2399142377(result_2399144350);

  return result_2399144350;

}

function openAbsytreeServerWorkspace_1291855649(self_1291855650, url_1291855651) {
    var _ = addWorkspaceFolder_1291851102(self_1291855650, newWorkspaceFolderAbsytreeServer_2399144348(url_1291855651));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855645(self_1291855679, url_1291855680) {
    openAbsytreeServerWorkspace_1291855649(self_1291855679, url_1291855680);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855645(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getFlag_1291848874(self_1291848875, flag_1291848876, default_1291848877) {
  var result_1291855705 = false;

  BeforeRet: {
    result_1291855705 = getOption_2818583615(self_1291848875, flag_1291848876, default_1291848877);
    break BeforeRet;
  };

  return result_1291855705;

}

function getFlagJsWrapper2_1291855697(self_1291855744, flag_1291855745, default_1291855746) {
  var result_1291855747 = false;

    result_1291855747 = getFlag_1291848874(self_1291855744, flag_1291855745, default_1291855746);

  return result_1291855747;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855697(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855781(editor_1291855783, path_1291855784, value_1291855785) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855783 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym273_1291855800 = nsuSplitString(path_1291855784, [46], -1);
      var nodeHEX60gensym273_1291855801 = editor_1291855783.options;
      Label2: {
        var keyHEX60gensym273_1291855820 = [];
        var colontmp__1291855888 = [];
        colontmp__1291855888 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym273_1291855800, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855889 = 0;
        var L_1291855890 = (colontmp__1291855888).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855889 < L_1291855890)) break Label4;
              keyHEX60gensym273_1291855820 = colontmp__1291855888[chckIndx(i_1291855889, 0, (colontmp__1291855888).length - 1)];
              if (!((nodeHEX60gensym273_1291855801.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym273_1291855801, keyHEX60gensym273_1291855820))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855801, keyHEX60gensym273_1291855820, newJObject_1627390051());
              }
              
              nodeHEX60gensym273_1291855801 = HEX5BHEX5D_1627393037(nodeHEX60gensym273_1291855801, keyHEX60gensym273_1291855820);
              i_1291855889 = addInt(i_1291855889, 1);
              if (!(((colontmp__1291855888).length == L_1291855890))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym273_1291855801 == null) || !((nodeHEX60gensym273_1291855801.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym273_1291855801, HEX5BHEX5D_2701132581(pathItemsHEX60gensym273_1291855800, 1), newJBool_1627390046(value_1291855785));
    };
    requestRender_2768240746(editor_1291855783.platform, true);
  };

  
}

function setFlag_1291848951(self_1291848952, flag_1291848953, value_1291848954) {
    setOption_1291855781(self_1291848952, flag_1291848953, value_1291848954);

  
}

function setFlagJsWrapper2_1291855773(self_1291855864, flag_1291855865, value_1291855866) {
    setFlag_1291848951(self_1291855864, flag_1291855865, value_1291855866);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855773(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848955(self_1291848956, flag_1291848957) {
    setFlag_1291848951(self_1291848956, flag_1291848957, !(getFlag_1291848874(self_1291848956, flag_1291848957, false)));
    requestRender_2768240746(self_1291848956.platform, true);

  
}

function toggleFlagJsWrapper_1291855894(self_1291855928, flag_1291855929) {
    toggleFlag_1291848955(self_1291855928, flag_1291855929);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855894(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291855950(self_1291855951, option_1291855952, value_1291855953) {
  BeforeRet: {
    if ((self_1291855951 == null)) {
    break BeforeRet;
    }
    
    requestRender_2768240746(self_1291855951.platform, true);
    var pathItems_1291855957 = nsuSplitString(option_1291855952, [46], -1);
    var node_1291855958 = self_1291855951.options;
    Label1: {
      var key_1291855977 = [];
      var colontmp__1291856039 = [];
      colontmp__1291856039 = HEX5BHEX5D_2818589613(pathItems_1291855957, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856040 = 0;
      var L_1291856041 = (colontmp__1291856039).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856040 < L_1291856041)) break Label3;
            key_1291855977 = colontmp__1291856039[chckIndx(i_1291856040, 0, (colontmp__1291856039).length - 1)];
            if (!((node_1291855958.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291855958, key_1291855977))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291855958, key_1291855977, newJObject_1627390051());
            }
            
            node_1291855958 = HEX5BHEX5D_1627393037(node_1291855958, key_1291855977);
            i_1291856040 = addInt(i_1291856040, 1);
            if (!(((colontmp__1291856039).length == L_1291856041))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291855958 == null) || !((node_1291855958.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291855958, HEX5BHEX5D_2701132581(pathItems_1291855957, 1), value_1291855953);
  };

  
}

function setOptionJsWrapper_1291855946(self_1291856021, option_1291856022, value_1291856023) {
    setOption_1291855950(self_1291856021, option_1291856022, value_1291856023);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291855946(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856049(self_1291856050) {
    self_1291856050.closeRequested = true;

  
}

function quitJsWrapper_1291856045(self_1291856077) {
    quit_1291856049(self_1291856077);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856045(this));};

function changeFontSize_1291856093(self_1291856094, amount_1291856095) {
    fontSizeHEX3D_2768240776(self_1291856094.platform, (fontSize_2768240784(self_1291856094.platform) + amount_1291856095));
    requestRender_2768240746(self_1291856094.platform, true);

  
}

function changeFontSizeJsWrapper_1291856089(self_1291856123, amount_1291856124) {
    changeFontSize_1291856093(self_1291856123, amount_1291856124);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856089(this, amount_));};

function rawGet_1291848320(t_1291848323, key_1291848324, hc_1291848325, hc_1291848325_Idx) {
  var result_1291848326 = 0;

  BeforeRet: {
    hc_1291848325[hc_1291848325_Idx] = hash_1325400491(key_1291848324);
    if ((hc_1291848325[hc_1291848325_Idx] == 0)) {
    hc_1291848325[hc_1291848325_Idx] = 314159265;
    }
    
    if (((t_1291848323.data).length == 0)) {
    result_1291848326 = -1;
    break BeforeRet;
    }
    
    var h_1291848378 = (hc_1291848325[hc_1291848325_Idx] & (t_1291848323.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0)) break Label2;
          if (((t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field0 == hc_1291848325[hc_1291848325_Idx]) && eqStrings(t_1291848323.data[chckIndx(h_1291848378, 0, (t_1291848323.data).length - 1)].Field1, key_1291848324))) {
          result_1291848326 = h_1291848378;
          break BeforeRet;
          }
          
          h_1291848378 = nextTry_1308622883(h_1291848378, (t_1291848323.data).length - 1);
        }
    };
    result_1291848326 = subInt(-1, h_1291848378);
  };

  return result_1291848326;

}

function mustRehash_1291851922(t_1291851924) {
  var result_1291851925 = false;

    if (!((t_1291851924.counter < (t_1291851924.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851925 = ((mulInt((t_1291851924.data).length, 2) < mulInt(t_1291851924.counter, 3)) || (subInt((t_1291851924.data).length, t_1291851924.counter) < 4));

  return result_1291851925;

}

function rawInsert_1291852371(t_1291852375, data_1291852376, data_1291852376_Idx, key_1291852377, val_1291852378, hc_1291852379, h_1291852380) {
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852377, NTI33554449);
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field2 = val_1291852378;
    data_1291852376[data_1291852376_Idx][chckIndx(h_1291852380, 0, (data_1291852376[data_1291852376_Idx]).length - 1)].Field0 = hc_1291852379;

  
}

function enlarge_1291852077(t_1291852080) {
    var n_1291852083 = [];
    n_1291852083 = new Array(chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852080.data).length, 2), 0, 2147483647) ; ++i) { n_1291852083[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852080.data; t_1291852080.data = n_1291852083; n_1291852083 = Temporary1;    Label2: {
      var i_1291852147 = 0;
      var colontmp__1291856451 = 0;
      colontmp__1291856451 = (n_1291852083).length - 1;
      var res_1291856452 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856452 <= colontmp__1291856451)) break Label4;
            i_1291852147 = res_1291856452;
            var eh_1291852201 = n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852201)) {
            var j_1291852205 = (eh_1291852201 & (t_1291852080.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852080.data[chckIndx(j_1291852205, 0, (t_1291852080.data).length - 1)].Field0)) break Label6;
                  j_1291852205 = nextTry_1308622883(j_1291852205, (t_1291852080.data).length - 1);
                }
            };
            rawInsert_1291852371(t_1291852080, t_1291852080, "data", n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field1, n_1291852083[chckIndx(i_1291852147, 0, (n_1291852083).length - 1)].Field2, eh_1291852201, j_1291852205);
            }
            
            res_1291856452 = addInt(res_1291856452, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852549(t_1291852552, key_1291852553, hc_1291852554) {
  var result_1291852555 = 0;

  BeforeRet: {
    if (((t_1291852552.data).length == 0)) {
    result_1291852555 = -1;
    break BeforeRet;
    }
    
    var h_1291852606 = (hc_1291852554 & (t_1291852552.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0)) break Label2;
          if (((t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field0 == hc_1291852554) && eqStrings(t_1291852552.data[chckIndx(h_1291852606, 0, (t_1291852552.data).length - 1)].Field1, key_1291852553))) {
          result_1291852555 = h_1291852606;
          break BeforeRet;
          }
          
          h_1291852606 = nextTry_1308622883(h_1291852606, (t_1291852552.data).length - 1);
        }
    };
    result_1291852555 = subInt(-1, h_1291852606);
  };

  return result_1291852555;

}

function mgetOrPut_1291856175(t_1291856178, key_1291856179, val_1291856180) {
  var result_1291856181 = null;
  var result_1291856181_Idx = 0;

    if (((t_1291856178.data).length == 0)) {
    var correctSizeHEX60gensym330_1291856230 = slotsNeeded_1308622891(32);
    t_1291856178.counter = 0;
    t_1291856178.data = new Array(chckRange(correctSizeHEX60gensym330_1291856230, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym330_1291856230, 0, 2147483647) ; ++i) { t_1291856178.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856235 = [0];
    var index_1291856242 = rawGet_1291848320(t_1291856178, key_1291856179, hc_1291856235, 0);
    if ((index_1291856242 < 0)) {
    if (((t_1291856178.data).length == 0)) {
    var correctSizeHEX60gensym333_1291856291 = slotsNeeded_1308622891(32);
    t_1291856178.counter = 0;
    t_1291856178.data = new Array(chckRange(correctSizeHEX60gensym333_1291856291, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym333_1291856291, 0, 2147483647) ; ++i) { t_1291856178.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851922(t_1291856178)) {
    enlarge_1291852077(t_1291856178);
    index_1291856242 = rawGetKnownHC_1291852549(t_1291856178, key_1291856179, hc_1291856235[0]);
    }
    
    index_1291856242 = subInt(-1, index_1291856242);
    rawInsert_1291852371(t_1291856178, t_1291856178, "data", key_1291856179, val_1291856180, hc_1291856235[0], index_1291856242);
    t_1291856178.counter = addInt(t_1291856178.counter, 1);
    }
    
    result_1291856181 = t_1291856178.data[chckIndx(index_1291856242, 0, (t_1291856178.data).length - 1)]; result_1291856181_Idx = "Field2";

  return [result_1291856181, result_1291856181_Idx];

}

function changeLayoutProp_1291856145(self_1291856146, prop_1291856147, change_1291856148) {
    var Temporary1;

    HEX2BHEX3D_2147483761((Temporary1 = mgetOrPut_1291856175(self_1291856146.layout_props.props, prop_1291856147, 0.0), Temporary1)[0], Temporary1[1], change_1291856148);
    requestRender_2768240746(self_1291856146.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856141(self_1291856426, prop_1291856427, change_1291856428) {
    changeLayoutProp_1291856145(self_1291856426, prop_1291856427, change_1291856428);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856141(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856461(self_1291856462) {
    self_1291856462.statusBarOnTop = !(self_1291856462.statusBarOnTop);
    requestRender_2768240746(self_1291856462.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856457(self_1291856489) {
    toggleStatusBarLocation_1291856461(self_1291856489);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856457(this));};

function createEditorForDocument_1291848878(self_1291848879, document_1291848880) {
  var result_1291848881 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848904 = null;
      var i_1291856550 = 0;
      var L_1291856551 = (self_1291848879.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856550 < L_1291856551)) break Label3;
            editor_1291848904 = self_1291848879.editor_defaults[chckIndx(i_1291856550, 0, (self_1291848879.editor_defaults).length - 1)];
            if (canEdit_2415919228(editor_1291848904, document_1291848880)) {
            result_1291848881 = createWithDocument_2415919243(editor_1291848904, document_1291848880);
            break BeforeRet;
            }
            
            i_1291856550 = addInt(i_1291856550, 1);
            if (!(((self_1291848879.editor_defaults).length == L_1291856551))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2197815310(document_1291848880) || [])]);
    result_1291848881 = null;
    break BeforeRet;
  };

  return result_1291848881;

}

function createView_1291848958(self_1291848959, document_1291848960) {
    
function HEX3Aanonymous_1291848973() {
        requestRender_2768240746(self_1291848959.platform, false);

      
    }

    var editor_1291848961 = createEditorForDocument_1291848878(self_1291848959, document_1291848960);
    injectDependencies_1291847761(editor_1291848961, self_1291848959);
    var _ = subscribe_1291848997(editor_1291848961.onMarkedDirty, HEX3Aanonymous_1291848973);
    var view_1291849024 = {document: document_1291848960, editor: editor_1291848961};
    self_1291848959.views.push(view_1291849024);;
    self_1291848959.currentView = subInt((self_1291848959.views).length, 1);
    requestRender_2768240746(self_1291848959.platform, false);

  
}

function createView_1291856505(self_1291856506) {
    createView_1291848958(self_1291856506, newTextDocument_2818579088([], [], false));

  
}

function createViewJsWrapper_1291856501(self_1291856538) {
    createView_1291856505(self_1291856538);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856501(this));};

function delete_1291856561(x_1291856563, x_1291856563_Idx, i_1291856564) {
    x_1291856563[x_1291856563_Idx].splice(i_1291856564, 1);

  
}

function closeCurrentView_1291856559(self_1291856560) {
    unregister_2415919268(self_1291856560.views[chckIndx(self_1291856560.currentView, 0, (self_1291856560.views).length - 1)].editor);
    delete_1291856561(self_1291856560, "views", chckRange(self_1291856560.currentView, 0, 2147483647));
    self_1291856560.currentView = clamp_1660945119(self_1291856560.currentView, 0, subInt((self_1291856560.views).length, 1));
    requestRender_2768240746(self_1291856560.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856555(self_1291856617) {
    closeCurrentView_1291856559(self_1291856617);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856555(this));};

function insert_1291856651(x_1291856653, x_1291856653_Idx, item_1291856654, i_1291856655) {
    var it_1291856675 = null;
    x_1291856653[x_1291856653_Idx] = x_1291856653[x_1291856653_Idx] || []; x_1291856653[x_1291856653_Idx].splice(i_1291856655, 0, it_1291856675);
    x_1291856653[x_1291856653_Idx][chckIndx(i_1291856655, 0, (x_1291856653[x_1291856653_Idx]).length - 1)] = item_1291856654;

  
}

function moveCurrentViewToTop_1291856638(self_1291856639) {
    if ((0 < (self_1291856639.views).length)) {
    var view_1291856646 = self_1291856639.views[chckIndx(self_1291856639.currentView, 0, (self_1291856639.views).length - 1)];
    delete_1291856561(self_1291856639, "views", chckRange(self_1291856639.currentView, 0, 2147483647));
    insert_1291856651(self_1291856639, "views", view_1291856646, 0);
    }
    
    self_1291856639.currentView = 0;
    requestRender_2768240746(self_1291856639.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856634(self_1291856702) {
    moveCurrentViewToTop_1291856638(self_1291856702);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856634(this));};

function nextView_1291856719(self_1291856720) {
    var Temporary1;

    if (((self_1291856720.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856720.currentView, 1), (self_1291856720.views).length);
    }
    
    self_1291856720.currentView = Temporary1;
    requestRender_2768240746(self_1291856720.platform, false);

  
}

function nextViewJsWrapper_1291856715(self_1291856753) {
    nextView_1291856719(self_1291856753);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856715(this));};

function prevView_1291856769(self_1291856770) {
    var Temporary1;

    if (((self_1291856770.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856770.currentView, (self_1291856770.views).length), 1), (self_1291856770.views).length);
    }
    
    self_1291856770.currentView = Temporary1;
    requestRender_2768240746(self_1291856770.platform, false);

  
}

function prevViewJsWrapper_1291856765(self_1291856806) {
    prevView_1291856769(self_1291856806);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856765(this));};

function moveCurrentViewPrev_1291856822(self_1291856823) {
    if ((0 < (self_1291856823.views).length)) {
    var view_1291856830 = self_1291856823.views[chckIndx(self_1291856823.currentView, 0, (self_1291856823.views).length - 1)];
    var index_1291856837 = modInt(subInt(addInt(self_1291856823.currentView, (self_1291856823.views).length), 1), (self_1291856823.views).length);
    delete_1291856561(self_1291856823, "views", chckRange(self_1291856823.currentView, 0, 2147483647));
    insert_1291856651(self_1291856823, "views", view_1291856830, chckRange(index_1291856837, 0, 2147483647));
    self_1291856823.currentView = index_1291856837;
    }
    
    requestRender_2768240746(self_1291856823.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856818(self_1291856873) {
    moveCurrentViewPrev_1291856822(self_1291856873);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856818(this));};

function moveCurrentViewNext_1291856889(self_1291856890) {
    if ((0 < (self_1291856890.views).length)) {
    var view_1291856897 = self_1291856890.views[chckIndx(self_1291856890.currentView, 0, (self_1291856890.views).length - 1)];
    var index_1291856901 = modInt(addInt(self_1291856890.currentView, 1), (self_1291856890.views).length);
    delete_1291856561(self_1291856890, "views", chckRange(self_1291856890.currentView, 0, 2147483647));
    insert_1291856651(self_1291856890, "views", view_1291856897, chckRange(index_1291856901, 0, 2147483647));
    self_1291856890.currentView = index_1291856901;
    }
    
    requestRender_2768240746(self_1291856890.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856885(self_1291856937) {
    moveCurrentViewNext_1291856889(self_1291856937);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856885(this));};

function setLayout_1291856953(self_1291856954, layout_1291856955) {
    var Temporary1;

    switch (toJSStr(layout_1291856955)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291856954.layout = Temporary1;
    requestRender_2768240746(self_1291856954.platform, false);

  
}

function setLayoutJsWrapper_1291856949(self_1291857019, layout_1291857020) {
    setLayout_1291856953(self_1291857019, layout_1291857020);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291856949(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851060(self_1291851061) {
  var result_1291851062 = null;

    result_1291851062 = self_1291851061.commandLineTextEditor;

  return result_1291851062;

}

function commandLine_1291857041(self_1291857042, initialValue_1291857043) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851060(self_1291857042).document, [nimCopy(null, initialValue_1291857043, NTI33554449)]);
    self_1291857042.commandLineMode = true;
    requestRender_2768240746(self_1291857042.platform, false);

  
}

function commandLineJsWrapper_1291857037(self_1291857075, initialValue_1291857076) {
    commandLine_1291857041(self_1291857075, initialValue_1291857076);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291857037(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291857097(self_1291857098) {
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851060(self_1291857098).document, [[]]);
    self_1291857098.commandLineMode = false;
    requestRender_2768240746(self_1291857098.platform, false);

  
}

function exitCommandLineJsWrapper_1291857093(self_1291857129) {
    exitCommandLine_1291857097(self_1291857129);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291857093(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857220 = 0;
      var L_1291857221 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857220 < L_1291857221)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857220, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857220 = addInt(i_1291857220, 1);
            if (!(((a_1593835606).length == L_1291857221))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2113930650(action_2113930651) {
  var result_2113930654 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2113930660 = find_1593835603(action_2113930651, 32);
    if ((spaceIndex_2113930660 == -1)) {
    var colontmp__1291857215 = nimCopy(null, action_2113930651, NTI33554449);
    var colontmp__1291857216 = [];
    result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857215, NTI33554449), Field1: nimCopy(null, colontmp__1291857216, NTI33554449)}, NTI2113929938);
    break BeforeRet;
    }
    else {
      var colontmp__1291857217 = HEX5BHEX5D_855639291(action_2113930651, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2113930660, 1)));
      var colontmp__1291857218 = HEX5BHEX5D_855639319(action_2113930651, HEX2EHEX2E_1040187488(addInt(spaceIndex_2113930660, 1), 1));
      result_2113930654 = nimCopy(result_2113930654, {Field0: nimCopy(null, colontmp__1291857217, NTI33554449), Field1: nimCopy(null, colontmp__1291857218, NTI33554449)}, NTI2113929938);
      break BeforeRet;
    }
    
  };

  return result_2113930654;

}

function executeCommandLine_1291857145(self_1291857146) {
  var result_1291857147 = false;

  BeforeRet: {
    try {
    self_1291857146.commandLineMode = false;
    var colontmp__1291857214 = parseAction_2113930650(nsuJoinSep(content_2818574085(getCommandLineTextEditor_1291851060(self_1291857146).document), []));
    var action_1291857148 = nimCopy(null, colontmp__1291857214["Field0"], NTI33554449);
    var arg_1291857149 = nimCopy(null, colontmp__1291857214["Field1"], NTI33554449);
    contentHEX3D_2818573989(getCommandLineTextEditor_1291851060(self_1291857146).document, [[]]);
    if (nsuStartsWith(arg_1291857149, [92])) {
    arg_1291857149 = nimCopy(null, HEX24_1627394481(newJString_1627389994(HEX5BHEX5D_855639319(arg_1291857149, HEX2EHEX2E_1040187488(1, 1)))), NTI33554449);
    }
    
    result_1291857147 = handleAction_1291848870(self_1291857146, action_1291857148, arg_1291857149);
    break BeforeRet;
    } finally {
    requestRender_2768240746(self_1291857146.platform, false);
    }
  };

  return result_1291857147;

}

function executeCommandLineJsWrapper_1291857141(self_1291857199) {
  var result_1291857200 = false;

    result_1291857200 = executeCommandLine_1291857145(self_1291857199);

  return result_1291857200;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857141(this));};

function writeFile_1291857253(self_1291857254, path_1291857255, app_1291857256) {
    try {
    if ((((0 <= self_1291857254.currentView) && (self_1291857254.currentView < (self_1291857254.views).length)) && !((self_1291857254.views[chckIndx(self_1291857254.currentView, 0, (self_1291857254.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2197815316(self_1291857254.views[chckIndx(self_1291857254.currentView, 0, (self_1291857254.views).length - 1)].document, path_1291857255, app_1291857256);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857268 = [mnewString(0)];
    fmtRes_1291857268[0].push.apply(fmtRes_1291857268[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857268, 0, path_1291857255, []);
    fmtRes_1291857268[0].push.apply(fmtRes_1291857268[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857268, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857268[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857254.platform, false);
    }

  
}

function writeFileJsWrapper_1291857249(self_1291857297, path_1291857298, app_1291857299) {
    writeFile_1291857253(self_1291857297, path_1291857298, app_1291857299);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857249(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857325(self_1291857326, path_1291857327) {
    try {
    if ((((0 <= self_1291857326.currentView) && (self_1291857326.currentView < (self_1291857326.views).length)) && !((self_1291857326.views[chckIndx(self_1291857326.currentView, 0, (self_1291857326.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2197815320(self_1291857326.views[chckIndx(self_1291857326.currentView, 0, (self_1291857326.views).length - 1)].document, path_1291857327);
    handleDocumentChanged_2415919265(self_1291857326.views[chckIndx(self_1291857326.currentView, 0, (self_1291857326.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857339 = [mnewString(0)];
    fmtRes_1291857339[0].push.apply(fmtRes_1291857339[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857339, 0, path_1291857327, []);
    fmtRes_1291857339[0].push.apply(fmtRes_1291857339[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857339, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857339[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857326.platform, false);
    }

  
}

function loadFileJsWrapper_1291857321(self_1291857367, path_1291857368) {
    loadFile_1291857325(self_1291857367, path_1291857368);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857321(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2969571554(filename_2969571555, app_2969571556, workspaceFolder_2969571558) {
  var result_2969571559 = null;

    result_2969571559 = ({m_type: NTI2969568612, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2969571559.filename = nimCopy(null, filename_2969571555, NTI33554449);
    result_2969571559.rootNode = {kind: 7, parent: null, id: newId_2046820597(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2969571559.symbols = nimCopy(result_2969571559.symbols, initTable_3019905097(32), NTI3087008713);
    result_2969571559.appFile = app_2969571556;
    result_2969571559.workspace = nimCopy(result_2969571559.workspace, workspaceFolder_2969571558, NTI2197815306);
    if ((0 < (filename_2969571555).length)) {
    load_2197815320(result_2969571559, []);
    }
    

  return result_2969571559;

}

function none_1291855512() {
  var result_1291855518 = ({val: null});

  return result_1291855518;

}

function newTextDocument_1291857419(filename_1291857421, content_1291857422, app_1291857423) {
  var result_1291857424 = null;

    result_1291857424 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857428 = result_1291857424;
    self_1291857428.filename = nimCopy(null, filename_1291857421, NTI33554449);
    self_1291857428.currentTree = null;
    self_1291857428.appFile = app_1291857423;
    var _ = initTreesitter_2818578870(self_1291857428);
    var language_1291857429 = getLanguageForFile_2902458372(filename_1291857421);
    if (isSome_2348810304(language_1291857429)) {
    self_1291857428.languageId = nimCopy(null, get_2818578907(language_1291857429), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857428, content_1291857422);

  return result_1291857424;

}

function openFile_1291857408(self_1291857409, path_1291857410, app_1291857411) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857410, [46,97,115,116])) {
    createView_1291848958(self_1291857409, newAstDocument_2969571554(path_1291857410, app_1291857411, none_1291855512()));
    }
    else {
      if (app_1291857411) {
      Temporary3 = loadApplicationFile_2365587474(fs_2365587509, path_1291857410);
      }
      else {
      Temporary3 = loadFile_2365587463(fs_2365587509, path_1291857410);
      }
      
      var file_1291857418 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848958(self_1291857409, newTextDocument_1291857419(path_1291857410, nsuSplitLines(file_1291857418, false), app_1291857411));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857456 = [mnewString(0)];
    fmtRes_1291857456[0].push.apply(fmtRes_1291857456[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857456, 0, path_1291857410, []);
    fmtRes_1291857456[0].push.apply(fmtRes_1291857456[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857456, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857456[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857409.platform, false);
    }

  
}

function openFileJsWrapper_1291857404(self_1291857485, path_1291857486, app_1291857487) {
    openFile_1291857408(self_1291857485, path_1291857486, app_1291857487);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857404(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857567(self_1291857568) {
    var Temporary1;

    if ((((0 <= self_1291857568.currentView) && (self_1291857568.currentView < (self_1291857568.views).length)) && !((self_1291857568.views[chckIndx(self_1291857568.currentView, 0, (self_1291857568.views).length - 1)].document == null)))) {
    if (isObj(self_1291857568.views[chckIndx(self_1291857568.currentView, 0, (self_1291857568.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291857568.views[chckIndx(self_1291857568.currentView, 0, (self_1291857568.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857568.views[chckIndx(self_1291857568.currentView, 0, (self_1291857568.views).length - 1)].document.filename;
    }
    
    var filename_1291857584 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857584));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857563(self_1291857611) {
    removeFromLocalStorage_1291857567(self_1291857611);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857563(this));};

function loadFromFile_2516586059(path_2516586060) {
  var result_2516586062 = ({val: null});

  return result_2516586062;

}

function isSome_1291851013(self_1291851015) {
  var result_1291851016 = false;

    result_1291851016 = !((self_1291851015.val == null));

  return result_1291851016;

}

function isNone_1291851041(self_1291851043) {
  var result_1291851044 = false;

    result_1291851044 = (self_1291851043.val == null);

  return result_1291851044;

}

function get_1291851033(self_1291851035) {
  var result_1291851036 = null;

    if (isNone_1291851041(self_1291851035)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851036 = self_1291851035["val"];

  return result_1291851036;

}

function loadTheme_1291857627(self_1291857628, name_1291857629) {
      var Temporary2;

    try {
      var fmtRes_1291857634 = [mnewString(0)];
      fmtRes_1291857634[0].push.apply(fmtRes_1291857634[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857634, 0, name_1291857629, []);
      fmtRes_1291857634[0].push.apply(fmtRes_1291857634[0], [46,106,115,111,110]);;
      var oHEX60gensym513_1291857637 = loadFromFile_2516586059(fmtRes_1291857634[0]);
      if (!isSome_1291851013(oHEX60gensym513_1291857637)) Temporary2 = false; else {        var theme_1291857660 = get_1291851033(oHEX60gensym513_1291857637);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857628.theme = theme_1291857660;
    }
    else {
      var fmtRes_1291857665 = [mnewString(0)];
      fmtRes_1291857665[0].push.apply(fmtRes_1291857665[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857665, 0, name_1291857629, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857665[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2768240746(self_1291857628.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857623(self_1291857693, name_1291857694) {
    loadTheme_1291857627(self_1291857693, name_1291857694);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857623(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet260[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet261[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet263[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet264[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291857972 = it_1442840587.prev;
    var colontmp__1291857973 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291857972, Field1: colontmp__1291857973}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet265[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet266[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet262[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet267[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet268[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet269[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet270[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet258[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet259[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function chooseTheme_1291857715(self_1291857716) {
    
function HEX3Aanonymous_1291857719(popup_1291857720, text_1291857721) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857735(a_1291857753, b_1291857754) {
          var result_1291857759 = 0;

            result_1291857759 = cmp_2969583893(a_1291857753.score, b_1291857754.score);

          return result_1291857759;

        }

      var result_1291857722 = [];

        Label1: {
          var file_1291857723 = [];
          var stack_1291857940 = [[[]]];
          var checkDir_1291857941 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291857940[0]).length)) break Label3;
                var d_1291857943 = pop_1560281227(stack_1291857940, 0);
                Label4: {
                  var k_1291857945 = 0;
                  var p_1291857946 = [];
                  var colontmp__1291857947 = [];
                  colontmp__1291857947 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291857943);
                  Label5: {
                    var k_1291857957 = 0;
                    var v_1291857958 = [];
                    var colontmp__1291857959 = [];
                    colontmp__1291857959 = staticWalkDir_1560281124(colontmp__1291857947, true);
                    var i_1291857960 = 0;
                    var L_1291857961 = (colontmp__1291857959).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291857960 < L_1291857961)) break Label7;
                          k_1291857957 = colontmp__1291857959[chckIndx(i_1291857960, 0, (colontmp__1291857959).length - 1)]["Field0"];
                          v_1291857958 = colontmp__1291857959[chckIndx(i_1291857960, 0, (colontmp__1291857959).length - 1)]["Field1"];
                          k_1291857945 = k_1291857957;
                          p_1291857946 = v_1291857958;
                          var rel_1291857963 = HEX2F_1426063446(d_1291857943, p_1291857946);
                          if (((ConstSet271[k_1291857945] != undefined) && (ConstSet272[k_1291857945] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291857963, NTI33554449);
                          stack_1291857940[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet273[k_1291857945] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291857963;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291857963);
                          }
                          
                          file_1291857723 = Temporary9;
                          if (nsuEndsWith(file_1291857723, [46,106,115,111,110])) {
                          var name_1291857964 = nimCopy(null, nossplitFile(file_1291857723).Field1, NTI33554449);
                          var score_1291857965 = fuzzyMatchSmart_1979711572(text_1291857721, name_1291857964, true);
                          var fmtRes_1291857966 = [mnewString(0)];
                          fmtRes_1291857966[0].push.apply(fmtRes_1291857966[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291857966, 0, file_1291857723, []);
                          result_1291857722.push({name: nimCopy(null, name_1291857964, NTI33554449), path: nimCopy(null, fmtRes_1291857966[0], NTI33554449), score: score_1291857965, m_type: NTI1291848506});;
                          }
                          
                          }
                          
                          i_1291857960 = addInt(i_1291857960, 1);
                          if (!(((colontmp__1291857959).length == L_1291857961))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291857941 = false;
              }
          };
        };
        sort_2969582512(result_1291857722, HEX3Aanonymous_1291857735, 0);

      return result_1291857722;

    }
    
function HEX3Aanonymous_1291857782(item_1291857783) {
          var Temporary1;

          var oHEX60gensym524_1291857786 = loadFromFile_2516586059(item_1291857783.path);
          if (!isSome_1291851013(oHEX60gensym524_1291857786)) Temporary1 = false; else {            var theme_1291857809 = get_1291851033(oHEX60gensym524_1291857786);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857716.theme = theme_1291857809;
        }
        

      
    }
    
function HEX3Aanonymous_1291857810(item_1291857811) {
          var Temporary1;

          var oHEX60gensym525_1291857814 = loadFromFile_2516586059(item_1291857811.path);
          if (!isSome_1291851013(oHEX60gensym525_1291857814)) Temporary1 = false; else {            var theme_1291857837 = get_1291851033(oHEX60gensym525_1291857814);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857716.theme = theme_1291857837;
        }
        

      
    }
    
function HEX3Aanonymous_1291857838() {
          var Temporary1;

          var oHEX60gensym526_1291857841 = loadFromFile_2516586059(originalTheme_1291857717);
          if (!isSome_1291851013(oHEX60gensym526_1291857841)) Temporary1 = false; else {            var theme_1291857864 = get_1291851033(oHEX60gensym526_1291857841);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857716.theme = theme_1291857864;
        }
        

      
    }

    try {
    var originalTheme_1291857717 = nimCopy(null, self_1291857716.theme.path, NTI33554449);
    var popup_1291857718 = newSelectorPopup_3187671933(self_1291857716);
    popup_1291857718.getCompletions = HEX3Aanonymous_1291857719;
    popup_1291857718.handleItemSelected = HEX3Aanonymous_1291857782;
    popup_1291857718.handleItemConfirmed = HEX3Aanonymous_1291857810;
    popup_1291857718.handleCanceled = HEX3Aanonymous_1291857838;
    updateCompletions_3187671226(popup_1291857718);
    pushPopup_1291849060(self_1291857716, popup_1291857718);
    } finally {
    requestRender_2768240746(self_1291857716.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857711(self_1291857900) {
    chooseTheme_1291857715(self_1291857900);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857711(this));};

function cancel_2499805208(token_2499805209) {
    token_2499805209.canceled = true;

  
}

function newCancellationToken_2499805188() {
  var result_2499805189 = null;

    result_2499805189 = {canceled: false};

  return result_2499805189;

}

function canceled_2499805210(token_2499805211) {
  var result_2499805212 = false;

    result_2499805212 = token_2499805211.canceled;

  return result_2499805212;

}
async function iterateDirectoryRec_1291858081(self_1291858082, folder_1291858083, path_1291858084, cancellationToken_1291858085, callback_1291858088) {
  var result_1291858090 = null;

  BeforeRet: {
    var path_1291858096 = nimCopy(null, path_1291858084, NTI33554449);
    var resultItems_1291858097 = [];
    var folders_1291858098 = [];
    if (canceled_2499805210(cancellationToken_1291858085)) {
    result_1291858090 = undefined;
    break BeforeRet;
    }
    
    var items_1291858103 = (await getDirectoryListing_2214592561(folder_1291858083, path_1291858096));
    if (canceled_2499805210(cancellationToken_1291858085)) {
    result_1291858090 = undefined;
    break BeforeRet;
    }
    
    Label1: {
      var file_1291858107 = [];
      var i_1291858407 = 0;
      var L_1291858408 = (items_1291858103.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858407 < L_1291858408)) break Label3;
            file_1291858107 = items_1291858103.files[chckIndx(i_1291858407, 0, (items_1291858103.files).length - 1)];
            resultItems_1291858097.push(HEX2F_1426063446(path_1291858096, file_1291858107));;
            i_1291858407 = addInt(i_1291858407, 1);
            if (!(((items_1291858103.files).length == L_1291858408))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291858115 = [];
      var i_1291858411 = 0;
      var L_1291858412 = (items_1291858103.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858411 < L_1291858412)) break Label6;
            dir_1291858115 = items_1291858103.folders[chckIndx(i_1291858411, 0, (items_1291858103.folders).length - 1)];
            folders_1291858098.push(HEX2F_1426063446(path_1291858096, dir_1291858115));;
            i_1291858411 = addInt(i_1291858411, 1);
            if (!(((items_1291858103.folders).length == L_1291858412))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291858088(resultItems_1291858097);
    if (canceled_2499805210(cancellationToken_1291858085)) {
    result_1291858090 = undefined;
    break BeforeRet;
    }
    
    var futs_1291858121 = [];
    Label7: {
      var dir_1291858125 = [];
      var i_1291858415 = 0;
      var L_1291858416 = (folders_1291858098).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858415 < L_1291858416)) break Label9;
            dir_1291858125 = folders_1291858098[chckIndx(i_1291858415, 0, (folders_1291858098).length - 1)];
            futs_1291858121.push(iterateDirectoryRec_1291858081(self_1291858082, folder_1291858083, dir_1291858125, cancellationToken_1291858085, callback_1291858088));;
            i_1291858415 = addInt(i_1291858415, 1);
            if (!(((folders_1291858098).length == L_1291858416))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858152 = null;
      var i_1291858420 = 0;
      var L_1291858421 = (futs_1291858121).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858420 < L_1291858421)) break Label12;
            fut_1291858152 = futs_1291858121[chckIndx(i_1291858420, 0, (futs_1291858121).length - 1)];
            (await fut_1291858152);
            i_1291858420 = addInt(i_1291858420, 1);
            if (!(((futs_1291858121).length == L_1291858421))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291858090 = undefined;
    break BeforeRet;
  };

  return result_1291858090;

}

function some_1291855499(val_1291855501) {
  var result_1291855502 = ({val: null});

    if (!(!((val_1291855501 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855502.val = val_1291855501;

  return result_1291855502;

}

function loadWorkspaceFile_1291857383(self_1291857384, path_1291857385, folder_1291857386) {
    try {
    if ((((0 <= self_1291857384.currentView) && (self_1291857384.currentView < (self_1291857384.views).length)) && !((self_1291857384.views[chckIndx(self_1291857384.currentView, 0, (self_1291857384.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857384.views[chckIndx(self_1291857384.currentView, 0, (self_1291857384.views).length - 1)].document.workspace = nimCopy(self_1291857384.views[chckIndx(self_1291857384.currentView, 0, (self_1291857384.views).length - 1)].document.workspace, some_1291855499(folder_1291857386), NTI2197815306);
    load_2197815320(self_1291857384.views[chckIndx(self_1291857384.currentView, 0, (self_1291857384.views).length - 1)].document, path_1291857385);
    handleDocumentChanged_2415919265(self_1291857384.views[chckIndx(self_1291857384.currentView, 0, (self_1291857384.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857401 = [mnewString(0)];
    fmtRes_1291857401[0].push.apply(fmtRes_1291857401[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857401, 0, path_1291857385, []);
    fmtRes_1291857401[0].push.apply(fmtRes_1291857401[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857401, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857401[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291857384.platform, false);
    }

  
}

function isNone_2818579269(self_2818579271) {
  var result_2818579272 = false;

    result_2818579272 = (self_2818579271.val == null);

  return result_2818579272;

}

function get_1291858298(self_1291858300) {
  var result_1291858301 = null;
  var result_1291858301_Idx = 0;

  BeforeRet: {
    if (isNone_2818579269(self_1291858300)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858301 = self_1291858300; result_1291858301_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858301, result_1291858301_Idx];

}

function newTextDocument_1291857519(filename_1291857521, content_1291857522, app_1291857523) {
  var result_1291857524 = null;

    result_1291857524 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857528 = result_1291857524;
    self_1291857528.filename = nimCopy(null, filename_1291857521, NTI33554449);
    self_1291857528.currentTree = null;
    self_1291857528.appFile = app_1291857523;
    var _ = initTreesitter_2818578870(self_1291857528);
    var language_1291857529 = getLanguageForFile_2902458372(filename_1291857521);
    if (isSome_2348810304(language_1291857529)) {
    self_1291857528.languageId = nimCopy(null, get_2818578907(language_1291857529), NTI33554449);
    }
    
    contentHEX3D_2818573989(self_1291857528, content_1291857522);

  return result_1291857524;

}
async function updateDocumentContent_1291857224(self_1291857225, document_1291857226, path_1291857227, folder_1291857228) {
  var result_1291857230 = null;

  BeforeRet: {
    var content_1291857240 = (await loadFile_2214592545(folder_1291857228, path_1291857227));
    if (isObj(document_1291857226.m_type, NTI2818572427)) {
    contentHEX3D_2818573948(document_1291857226, content_1291857240);
    }
    
    result_1291857230 = undefined;
    break BeforeRet;
  };

  return result_1291857230;

}

function openWorkspaceFile_1291857508(self_1291857509, path_1291857510, folder_1291857511) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857510, [46,97,115,116])) {
    createView_1291848958(self_1291857509, newAstDocument_2969571554(path_1291857510, false, some_1291855499(folder_1291857511)));
    }
    else {
      var document_1291857552 = newTextDocument_1291857519(path_1291857510, [], false);
      document_1291857552.workspace = nimCopy(document_1291857552.workspace, some_1291855499(folder_1291857511), NTI2197815306);
      var _ = updateDocumentContent_1291857224(self_1291857509, document_1291857552, path_1291857510, folder_1291857511);
      createView_1291848958(self_1291857509, document_1291857552);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857560 = [mnewString(0)];
    fmtRes_1291857560[0].push.apply(fmtRes_1291857560[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857560, 0, path_1291857510, []);
    fmtRes_1291857560[0].push.apply(fmtRes_1291857560[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857560, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857560[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2768240746(self_1291857509.platform, false);
    }

  
}

function chooseFile_1291858181(self_1291858182, view_1291858183) {
    async function HEX3Aanonymous_1291858186(popup_1291858187, text_1291858188) {
                text_1291858188 = nimCopy(null, text_1291858188, NTI33554449);
                
function HEX3Aanonymous_1291858205(files_1291858206) {
                    
function HEX3Aanonymous_1291858226(a_1291858244, b_1291858245) {
                      var result_1291858250 = 0;

                        result_1291858250 = cmp_2969583893(a_1291858244.score, b_1291858245.score);

                      return result_1291858250;

                    }

                    var folder_1291858207 = folder_1291858204;
                    Label1: {
                      var file_1291858211 = [];
                      var i_1291858400 = 0;
                      var L_1291858401 = (files_1291858206).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858400 < L_1291858401)) break Label3;
                            file_1291858211 = files_1291858206[chckIndx(i_1291858400, 0, (files_1291858206).length - 1)];
                            var name_1291858212 = nimCopy(null, nossplitFile(file_1291858211).Field1, NTI33554449);
                            var score_1291858213 = fuzzyMatchSmart_1979711572(text_1291858188, name_1291858212, true);
                            var fmtRes_1291858218 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858218, 0, file_1291858211, []);
                            popup_1291858187.completions.push({path: nimCopy(null, fmtRes_1291858218[0], NTI33554449), score: score_1291858213, workspaceFolder: some_1291855499(folder_1291858207), m_type: NTI1291848508});;
                            i_1291858400 = addInt(i_1291858400, 1);
                            if (!(((files_1291858206).length == L_1291858401))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_2969582512(popup_1291858187.completions, HEX3Aanonymous_1291858226, 0);
                    markDirty_2483027989(popup_1291858187);

                  
                }

      var result_1291858190 = null;

      BeforeRet: {
        if (!((popup_1291858187.cancellationToken == null))) {
        cancel_2499805208(popup_1291858187.cancellationToken);
        }
        
        var cancellationToken_1291858199 = newCancellationToken_2499805188();
        popup_1291858187.cancellationToken = cancellationToken_1291858199;
        Label1: {
          var folder_1291858203 = null;
          var i_1291858403 = 0;
          var L_1291858404 = (self_1291858182.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858403 < L_1291858404)) break Label3;
                folder_1291858203 = self_1291858182.workspace.folders[chckIndx(i_1291858403, 0, (self_1291858182.workspace.folders).length - 1)];
                var folder_1291858204 = folder_1291858203;
                (await iterateDirectoryRec_1291858081(self_1291858182, folder_1291858204, [], cancellationToken_1291858199, HEX3Aanonymous_1291858205));
                i_1291858403 = addInt(i_1291858403, 1);
                if (!(((self_1291858182.workspace.folders).length == L_1291858404))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858190 = undefined;
        break BeforeRet;
      };

      return result_1291858190;

    }
    view_1291858183 = nimCopy(null, view_1291858183, NTI33554449);
    
function HEX3Aanonymous_1291858277(item_1291858278) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858183)) {
        case "current":
          if (isSome_2818579241(item_1291858278.workspaceFolder)) {
          loadWorkspaceFile_1291857383(self_1291858182, item_1291858278.path, (Temporary1 = get_1291858298(item_1291858278.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857325(self_1291858182, item_1291858278.path);
          }
          
          break;
        case "new":
          if (isSome_2818579241(item_1291858278.workspaceFolder)) {
          openWorkspaceFile_1291857508(self_1291858182, item_1291858278.path, (Temporary2 = get_1291858298(item_1291858278.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857408(self_1291858182, item_1291858278.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858345 = [mnewString(0)];
          fmtRes_1291858345[0].push.apply(fmtRes_1291858345[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858345, 0, view_1291858183, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858345[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858184 = newSelectorPopup_3187671933(self_1291858182);
    popup_1291858184.getCompletionsAsyncIter = HEX3Aanonymous_1291858186;
    popup_1291858184.handleItemConfirmed = HEX3Aanonymous_1291858277;
    updateCompletions_3187671226(popup_1291858184);
    pushPopup_1291849060(self_1291858182, popup_1291858184);
    } finally {
    requestRender_2768240746(self_1291858182.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858177(self_1291858382, view_1291858383) {
    chooseFile_1291858181(self_1291858382, view_1291858383);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858177(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858429(self_1291858430, token_1291858431) {
    saveApplicationFile_2365587480(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858431);

  
}

function setGithubAccessTokenJsWrapper_1291858425(self_1291858459, token_1291858460) {
    setGithubAccessToken_1291858429(self_1291858459, token_1291858460);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858425(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858481(self_1291858482) {
    try {
    if (!((self_1291858482.scriptContext == null))) {
++excHandler;
    try {
    reload_2751463441(self_1291858482.scriptContext);
    if (!(self_1291858482.initializeCalled)) {
    var _ = false;
    self_1291858482.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858495 = mnewString(0);
    fmtRes_1291858495.push.apply(fmtRes_1291858495, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858495, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2768240746(self_1291858482.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858477(self_1291858522) {
    reloadConfig_1291858481(self_1291858522);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858477(this));};

function logOptions_1291858538(self_1291858539) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858539.options, 2)]);

  
}

function logOptionsJsWrapper_1291858534(self_1291858566) {
    logOptions_1291858538(self_1291858566);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858534(this));};

function clear_2113930247(t_2113930250) {
    Label1: {
      var i_2113930302 = 0;
      var colontmp__1291858629 = 0;
      colontmp__1291858629 = (t_2113930250.data).length;
      var i_1291858630 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858630 < colontmp__1291858629)) break Label3;
            i_2113930302 = i_1291858630;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field0 = 0;
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113930250.data[chckIndx(i_2113930302, 0, (t_2113930250.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858630 = addInt(i_1291858630, 1);
          }
      };
    };
    t_2113930250.counter = 0;

  
}

function clearCommands_2113930205(config_2113930206) {
    clear_2113930247(config_2113930206.commands);
    config_2113930206.revision = addInt(config_2113930206.revision, 1);

  
}

function clearCommands_1291858582(self_1291858583, context_1291858584) {
    clearCommands_2113930205(getEventHandlerConfig_1291849162(self_1291858583, context_1291858584));

  
}

function clearCommandsJsWrapper_1291858578(self_1291858612, context_1291858613) {
    clearCommands_1291858582(self_1291858612, context_1291858613);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858578(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853918(t_1291853921) {
  var result_1291853922 = 0;

    result_1291853922 = t_1291853921.counter;

  return result_1291853922;

}

function getAllEditors_1291858638(self_1291858639) {
  var result_1291858640 = [];

    Label1: {
      var id_1291858861 = 0;
      var L_1291858925 = len_1291853918(self_1291858639.editors);
      Label2: {
        var h_1291858927 = 0;
        var colontmp__1291858928 = 0;
        colontmp__1291858928 = (self_1291858639.editors.data).length - 1;
        var res_1291858929 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291858929 <= colontmp__1291858928)) break Label4;
              h_1291858927 = res_1291858929;
              if (isFilled_1308622880(self_1291858639.editors.data[chckIndx(h_1291858927, 0, (self_1291858639.editors.data).length - 1)].Field0)) {
              id_1291858861 = self_1291858639.editors.data[chckIndx(h_1291858927, 0, (self_1291858639.editors.data).length - 1)]["Field1"];
              result_1291858640.push(id_1291858861);;
              if (!((len_1291853918(self_1291858639.editors) == L_1291858925))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291858929 = addInt(res_1291858929, 1);
            }
        };
      };
    };

  return result_1291858640;

}

function getAllEditorsJsWrapper_1291858634(self_1291858893) {
  var result_1291858894 = [];

    result_1291858894 = nimCopy(null, getAllEditors_1291858638(self_1291858893), NTI1291854534);

  return result_1291858894;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858634(this));};

function getModeConfig_1291858931(self_1291858932, mode_1291858933) {
  var result_1291858934 = null;

  BeforeRet: {
    result_1291858934 = getEventHandlerConfig_1291849162(self_1291858932, ([101,100,105,116,111,114,46] || []).concat(mode_1291858933 || []));
    break BeforeRet;
  };

  return result_1291858934;

}

function setMode_1291858941(self_1291858942, mode_1291858943) {
        
function HEX3Aanonymous_1291858964(actionHEX60gensym611HEX60gensym612_1291858965, argHEX60gensym611HEX60gensym612_1291858966) {
            var Temporary1;

          var result_1291858967 = 0;

          BeforeRet: {
            if (handlerHEX60gensym611_1291858952.config.handleActions) {
            var action_1291858968 = nimCopy(null, actionHEX60gensym611HEX60gensym612_1291858965, NTI33554449);
            var arg_1291858969 = nimCopy(null, argHEX60gensym611HEX60gensym612_1291858966, NTI33554449);
            if (handleAction_1291848870(self_1291858942, action_1291858968, arg_1291858969)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym611HEX60gensym612_1291858970 = Temporary1;
            if (handlerHEX60gensym611_1291858952.config.consumeAllActions) {
            result_1291858967 = 3;
            break BeforeRet;
            }
            
            result_1291858967 = responseHEX60gensym611HEX60gensym612_1291858970;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym611_1291858952.config.consumeAllActions) {
            result_1291858967 = 3;
            break BeforeRet;
            }
            else {
              result_1291858967 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291858967;

        }
        
function HEX3Aanonymous_1291858972(inputHEX60gensym611HEX60gensym613_1291858973) {
          var result_1291858974 = 0;

          BeforeRet: {
            if (handlerHEX60gensym611_1291858952.config.handleInputs) {
            var input_1291858975 = nimCopy(null, inputHEX60gensym611HEX60gensym613_1291858973, NTI33554449);
            result_1291858974 = 1;
            break BeforeRet;
            }
            else {
              result_1291858974 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291858974;

        }

    try {
    if (((mode_1291858943).length == 0)) {
    self_1291858942.modeEventHandler = null;
    }
    else {
      var config_1291858944 = getModeConfig_1291858931(self_1291858942, mode_1291858943);
      Label2: {
        var handlerHEX60gensym611_1291858952 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym611_1291858952.config = config_1291858944;
        handlerHEX60gensym611_1291858952.dfaInternal = buildDFA_2113929279(config_1291858944);
        handlerHEX60gensym611_1291858952.handleAction = HEX3Aanonymous_1291858964;
        handlerHEX60gensym611_1291858952.handleInput = HEX3Aanonymous_1291858972;
      };
      self_1291858942.modeEventHandler = handlerHEX60gensym611_1291858952;
    }
    
    self_1291858942.currentMode = nimCopy(null, mode_1291858943, NTI33554449);
    } finally {
    requestRender_2768240746(self_1291858942.platform, false);
    }

  
}

function setModeJsWrapper22_1291858937(self_1291859003, mode_1291859004) {
    setMode_1291858941(self_1291859003, mode_1291859004);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291858937(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291859026(self_1291859027) {
  var result_1291859028 = [];

  BeforeRet: {
    result_1291859028 = nimCopy(null, self_1291859027.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291859028;

}

function modeJsWrapper22_1291859022(self_1291859056) {
  var result_1291859057 = [];

    result_1291859057 = nimCopy(null, mode_1291859026(self_1291859056), NTI33554449);

  return result_1291859057;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291859022(this));};

function getContextWithMode_1291859077(self_1291859078, context_1291859079) {
  var result_1291859080 = [];

  BeforeRet: {
    result_1291859080 = nimCopy(null, (context_1291859079 || []).concat([46] || [],self_1291859078.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291859080;

}

function getContextWithModeJsWrapper22_1291859073(self_1291859109, context_1291859110) {
  var result_1291859111 = [];

    result_1291859111 = nimCopy(null, getContextWithMode_1291859077(self_1291859109, context_1291859110), NTI33554449);

  return result_1291859111;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291859073(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859362(action_1291859363, arg_1291859364) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848870(gEditor, action_1291859363, arg_1291859364);
  };

  
}

function scriptRunActionJsWrapper_1291859359(action_1291859373, arg_1291859374) {
    scriptRunAction_1291859362(action_1291859373, arg_1291859374);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859359(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859399(message_1291859400) {
    var fmtRes_1291859405 = [mnewString(0)];
    fmtRes_1291859405[0].push.apply(fmtRes_1291859405[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859405, 0, message_1291859400, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859405[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859396(message_1291859410) {
    scriptLog_1291859399(message_1291859410);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859396(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859504 = 0;
      colontmp__1291859504 = (n_1795163066).length - 1;
      var res_1291859505 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859505 <= colontmp__1291859504)) break Label4;
            i_1795163130 = res_1291859505;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859505 = addInt(res_1291859505, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2113929598(config_2113929599, keys_2113929600, action_2113929601) {
    HEX5BHEX5DHEX3D_1795162732(config_2113929599.commands, keys_2113929600, action_2113929601);
    config_2113929599.revision = addInt(config_2113929599.revision, 1);

  
}

function addCommandScript_1291859431(self_1291859432, context_1291859433, keys_1291859434, action_1291859435, arg_1291859436) {
    var Temporary1;

    if (((arg_1291859436).length == 0)) {
    Temporary1 = action_1291859435;
    }
    else {
    Temporary1 = (action_1291859435 || []).concat([32] || [],arg_1291859436 || []);
    }
    
    var command_1291859437 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291859432, context_1291859433), keys_1291859434, command_1291859437);

  
}

function addCommandScriptJsWrapper_1291859427(self_1291859468, context_1291859469, keys_1291859470, action_1291859471, arg_1291859472) {
    addCommandScript_1291859431(self_1291859468, context_1291859469, keys_1291859470, action_1291859471, arg_1291859472);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859427(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2113929695(t_2113929698, key_2113929699) {
    var hc_2113929700 = [0];
    var i_2113929707 = rawGet_1795162457(t_2113929698, key_2113929699, hc_2113929700, 0);
    var mskHEX60gensym36_2113929711 = (t_2113929698.data).length - 1;
    if ((0 <= i_2113929707)) {
    t_2113929698.counter = subInt(t_2113929698.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2113929718 = i_2113929707;
            var rHEX60gensym36_2113929719 = jHEX60gensym36_2113929718;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 = 0;
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2113929707 = (addInt(i_2113929707, 1) & mskHEX60gensym36_2113929711);
                  if (isEmpty_1308622877(t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2113929719 = (t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)].Field0 & mskHEX60gensym36_2113929711);
                  if (!(((((rHEX60gensym36_2113929719 <= i_2113929707) && (jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719)) || ((jHEX60gensym36_2113929718 < rHEX60gensym36_2113929719) && (i_2113929707 < jHEX60gensym36_2113929718))) || ((i_2113929707 < jHEX60gensym36_2113929718) && (rHEX60gensym36_2113929719 <= i_2113929707))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)] = nimCopy(t_2113929698.data[chckIndx(jHEX60gensym36_2113929718, 0, (t_2113929698.data).length - 1)], t_2113929698.data[chckIndx(i_2113929707, 0, (t_2113929698.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2113929652(config_2113929653, keys_2113929654) {
    del_2113929695(config_2113929653.commands, keys_2113929654);
    config_2113929653.revision = addInt(config_2113929653.revision, 1);

  
}

function removeCommand_1291859514(self_1291859515, context_1291859516, keys_1291859517) {
    removeCommand_2113929652(getEventHandlerConfig_1291849162(self_1291859515, context_1291859516), keys_1291859517);

  
}

function removeCommandJsWrapper_1291859510(self_1291859546, context_1291859547, keys_1291859548) {
    removeCommand_1291859514(self_1291859546, context_1291859547, keys_1291859548);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859510(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859575() {
  var result_1291859576 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859576 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859576 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859576 = -1;
    break BeforeRet;
  };

  return result_1291859576;

}

function getActivePopupJsWrapper_1291859572() {
  var result_1291859593 = 0;

    result_1291859593 = getActivePopup_1291859575();

  return result_1291859593;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859572());};

function getActiveEditor_1291859612() {
  var result_1291859613 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859613 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859613 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859613 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859613 = -1;
    break BeforeRet;
  };

  return result_1291859613;

}

function getActiveEditorJsWrapper_1291859609() {
  var result_1291859624 = 0;

    result_1291859624 = getActiveEditor_1291859612();

  return result_1291859624;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859609());};

function getActiveEditor2_1291859643(self_1291859644) {
  var result_1291859645 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859645 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859645 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859645 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859645 = null;
    break BeforeRet;
  };

  return result_1291859645;

}

function getActiveEditor2JsWrapper_1291859640(self_1291859679) {
  var result_1291859680 = null;

    result_1291859680 = getActiveEditor2_1291859643(self_1291859679);

  return result_1291859680;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859640(this));};

function loadCurrentConfig_1291859687(self_1291859688) {
    createView_1291848958(self_1291859688, newTextDocument_2818579088([99,111,110,102,105,103,46,106,115], loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859683(self_1291859720) {
    loadCurrentConfig_1291859687(self_1291859720);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859683(this));};

function sourceCurrentDocument_1291859736(self_1291859737) {
    var editor_1291859742 = getActiveEditor2_1291859643(self_1291859737);
    if (isObj(editor_1291859742.m_type, NTI2818572510)) {
    var document_1291859749 = editor_1291859742.document;
    var contentStrict_1291859750 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818574088(document_1291859749) || []);
    rawEcho(contentStrict_1291859750);
      var fmtRes_1291859755 = [mnewString(0)];
      fmtRes_1291859755[0].push.apply(fmtRes_1291859755[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859755, 0, document_1291859749.filename, []);
      fmtRes_1291859755[0].push.apply(fmtRes_1291859755[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859755[0]))) {
    eval(toJSStr(contentStrict_1291859750));
    }
    else {
      var fmtRes_1291859760 = mnewString(0);
      fmtRes_1291859760.push.apply(fmtRes_1291859760, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859760, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859732(self_1291859787) {
    sourceCurrentDocument_1291859736(self_1291859787);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859732(this));};

function getEditor_1291859802(index_1291859803) {
  var result_1291859804 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859804 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291859803) && (index_1291859803 < (gEditor.views).length))) {
    result_1291859804 = gEditor.views[chckIndx(index_1291859803, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859804 = -1;
    break BeforeRet;
  };

  return result_1291859804;

}

function getEditorJsWrapper_1291859799(index_1291859816) {
  var result_1291859817 = 0;

    result_1291859817 = getEditor_1291859802(index_1291859816);

  return result_1291859817;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291859799(index_));};

function rawGet_1291845908(t_1291845911, key_1291845912, hc_1291845913, hc_1291845913_Idx) {
  var result_1291845914 = 0;

  BeforeRet: {
    hc_1291845913[hc_1291845913_Idx] = hash_1325400236(key_1291845912);
    if ((hc_1291845913[hc_1291845913_Idx] == 0)) {
    hc_1291845913[hc_1291845913_Idx] = 314159265;
    }
    
    if (((t_1291845911.data).length == 0)) {
    result_1291845914 = -1;
    break BeforeRet;
    }
    
    var h_1291845968 = (hc_1291845913[hc_1291845913_Idx] & (t_1291845911.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0)) break Label2;
          if (((t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field0 == hc_1291845913[hc_1291845913_Idx]) && (t_1291845911.data[chckIndx(h_1291845968, 0, (t_1291845911.data).length - 1)].Field1 == key_1291845912))) {
          result_1291845914 = h_1291845968;
          break BeforeRet;
          }
          
          h_1291845968 = nextTry_1308622883(h_1291845968, (t_1291845911.data).length - 1);
        }
    };
    result_1291845914 = subInt(-1, h_1291845968);
  };

  return result_1291845914;

}

function hasKey_1291850717(t_1291850720, key_1291850721) {
  var result_1291850722 = false;

    var hc_1291850723 = [0];
    result_1291850722 = (0 <= rawGet_1291845908(t_1291850720, key_1291850721, hc_1291850723, 0));

  return result_1291850722;

}

function contains_1291850711(t_1291850714, key_1291850715) {
  var result_1291850716 = false;

  BeforeRet: {
    result_1291850716 = hasKey_1291850717(t_1291850714, key_1291850715);
    break BeforeRet;
  };

  return result_1291850716;

}

function some_1291850863(val_1291850865) {
  var result_1291850866 = ({val: null});

    if (!(!((val_1291850865 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850866.val = val_1291850865;

  return result_1291850866;

}

function HEX5BHEX5D_1291850783(t_1291850786, key_1291850787) {
  var result_1291850788 = null;
  var result_1291850788_Idx = 0;

    var hcHEX60gensym22_1291850789 = [0];
    var indexHEX60gensym22_1291850796 = rawGet_1291845908(t_1291850786, key_1291850787, hcHEX60gensym22_1291850789, 0);
    if ((0 <= indexHEX60gensym22_1291850796)) {
    result_1291850788 = t_1291850786.data[chckIndx(indexHEX60gensym22_1291850796, 0, (t_1291850786.data).length - 1)]; result_1291850788_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_1291850787);
    }
    

  return [result_1291850788, result_1291850788_Idx];

}

function none_1291850879() {
  var result_1291850885 = ({val: null});

  return result_1291850885;

}

function getEditorForId_1291850661(self_1291850662, id_1291850663) {
    var Temporary1;

  var result_1291850668 = ({val: null});

  BeforeRet: {
    if (contains_1291850711(self_1291850662.editors, id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863((Temporary1 = HEX5BHEX5D_1291850783(self_1291850662.editors, id_1291850663), Temporary1)[0][Temporary1[1]]), NTI1291848319);
    break BeforeRet;
    }
    
    if ((self_1291850662.commandLineTextEditor.id == id_1291850663)) {
    result_1291850668 = nimCopy(result_1291850668, some_1291850863(self_1291850662.commandLineTextEditor), NTI1291848319);
    break BeforeRet;
    }
    
    result_1291850668 = nimCopy(result_1291850668, none_1291850879(), NTI1291848319);
    break BeforeRet;
  };

  return result_1291850668;

}

function isSome_2818583961(self_2818583963) {
  var result_2818583964 = false;

    result_2818583964 = !((self_2818583963.val == null));

  return result_2818583964;

}

function isNone_2818583989(self_2818583991) {
  var result_2818583992 = false;

    result_2818583992 = (self_2818583991.val == null);

  return result_2818583992;

}

function get_2818583981(self_2818583983) {
  var result_2818583984 = null;

    if (isNone_2818583989(self_2818583983)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583984 = self_2818583983["val"];

  return result_2818583984;

}

function scriptIsTextEditor_1291859841(editorId_1291859842) {
      var Temporary1;

  var result_1291859843 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859843 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym738_1291859849 = getEditorForId_1291850661(gEditor, editorId_1291859842);
      if (!isSome_2818583961(oHEX60gensym738_1291859849)) Temporary1 = false; else {        var editor_1291859872 = get_2818583981(oHEX60gensym738_1291859849);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859843 = isObj(editor_1291859872.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291859843 = false;
    break BeforeRet;
  };

  return result_1291859843;

}

function scriptIsTextEditorJsWrapper_1291859838(editorId_1291859884) {
  var result_1291859885 = false;

    result_1291859885 = scriptIsTextEditor_1291859841(editorId_1291859884);

  return result_1291859885;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291859838(editorId_));};

function scriptIsAstEditor_1291859910(editorId_1291859911) {
      var Temporary1;

  var result_1291859912 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859912 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym747_1291859918 = getEditorForId_1291850661(gEditor, editorId_1291859911);
      if (!isSome_2818583961(oHEX60gensym747_1291859918)) Temporary1 = false; else {        var editor_1291859941 = get_2818583981(oHEX60gensym747_1291859918);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859912 = isObj(editor_1291859941.m_type, NTI2969568641);
    break BeforeRet;
    }
    
    result_1291859912 = false;
    break BeforeRet;
  };

  return result_1291859912;

}

function scriptIsAstEditorJsWrapper_1291859907(editorId_1291859953) {
  var result_1291859954 = false;

    result_1291859954 = scriptIsAstEditor_1291859910(editorId_1291859953);

  return result_1291859954;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291859907(editorId_));};

function scriptRunActionFor_1291859978(editorId_1291859979, action_1291859980, arg_1291859981) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym757_1291859987 = getEditorForId_1291850661(gEditor, editorId_1291859979);
      if (!isSome_2818583961(oHEX60gensym757_1291859987)) Temporary2 = false; else {        var editor_1291860010 = get_2818583981(oHEX60gensym757_1291859987);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860010.eventHandler.handleAction(action_1291859980, arg_1291859981);
    }
    else {
      var oHEX60gensym758_1291860013 = getPopupForId_1291850895(gEditor, editorId_1291859979);
      if (!isSome_3187671416(oHEX60gensym758_1291860013)) Temporary3 = false; else {        var popup_1291860036 = get_3187671436(oHEX60gensym758_1291860013);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291860036.eventHandler.handleAction(action_1291859980, arg_1291859981);
    }
    }
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291859975(editorId_1291860047, action_1291860048, arg_1291860049) {
    scriptRunActionFor_1291859978(editorId_1291860047, action_1291860048, arg_1291860049);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291859975(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291860079(editorId_1291860080, text_1291860081) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym767_1291860087 = getEditorForId_1291850661(gEditor, editorId_1291860080);
      if (!isSome_2818583961(oHEX60gensym767_1291860087)) Temporary2 = false; else {        var editor_1291860110 = get_2818583981(oHEX60gensym767_1291860087);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860110.eventHandler.handleInput(text_1291860081);
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291860076(editorId_1291860118, text_1291860119) {
    scriptInsertTextInto_1291860079(editorId_1291860118, text_1291860119);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291860076(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291860144(editorId_1291860145) {
      var Temporary2;

  var result_1291860146 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291860208 = {Field0: 0, Field1: 0};
    var colontmp__1291860209 = {Field0: 0, Field1: 0};
    result_1291860146 = nimCopy(result_1291860146, {Field0: nimCopy(null, colontmp__1291860208, NTI2449473545), Field1: nimCopy(null, colontmp__1291860209, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym776_1291860152 = getEditorForId_1291850661(gEditor, editorId_1291860145);
      if (!isSome_2818583961(oHEX60gensym776_1291860152)) Temporary2 = false; else {        var editor_1291860175 = get_2818583981(oHEX60gensym776_1291860152);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860175.m_type, NTI2818572510)) {
    var editor_1291860182 = editor_1291860175;
    result_1291860146 = nimCopy(result_1291860146, selection_2818572805(editor_1291860182), NTI2449473547);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291860210 = {Field0: 0, Field1: 0};
    var colontmp__1291860211 = {Field0: 0, Field1: 0};
    result_1291860146 = nimCopy(result_1291860146, {Field0: nimCopy(null, colontmp__1291860210, NTI2449473545), Field1: nimCopy(null, colontmp__1291860211, NTI2449473545)}, NTI2449473547);
    break BeforeRet;
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  return result_1291860146;

}

function scriptTextEditorSelectionJsWrapper_1291860141(editorId_1291860188) {
  var result_1291860189 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860189 = nimCopy(result_1291860189, scriptTextEditorSelection_1291860144(editorId_1291860188), NTI2449473547);

  return result_1291860189;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291860141(editorId_));};

function scriptSetTextEditorSelection_1291860217(editorId_1291860218, selection_1291860219) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym785_1291860225 = getEditorForId_1291850661(gEditor, editorId_1291860218);
      if (!isSome_2818583961(oHEX60gensym785_1291860225)) Temporary2 = false; else {        var editor_1291860248 = get_2818583981(oHEX60gensym785_1291860225);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860248.m_type, NTI2818572510)) {
    selectionHEX3D_2818572811(editor_1291860248, selection_1291860219);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291860214(editorId_1291860260, selection_1291860261) {
    scriptSetTextEditorSelection_1291860217(editorId_1291860260, selection_1291860261);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291860214(editorId_, selection_));};

function scriptTextEditorSelections_1291860286(editorId_1291860287) {
      var Temporary1;

  var result_1291860288 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860288 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855864);
    break BeforeRet;
    }
    
      var oHEX60gensym794_1291860298 = getEditorForId_1291850661(gEditor, editorId_1291860287);
      if (!isSome_2818583961(oHEX60gensym794_1291860298)) Temporary1 = false; else {        var editor_1291860321 = get_2818583981(oHEX60gensym794_1291860298);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860321.m_type, NTI2818572510)) {
    var editor_1291860328 = editor_1291860321;
    result_1291860288 = nimCopy(null, selections_2818572802(editor_1291860328), NTI2449473555);
    break BeforeRet;
    }
    
    }
    
    result_1291860288 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291855864);
    break BeforeRet;
  };

  return result_1291860288;

}

function scriptTextEditorSelectionsJsWrapper_1291860283(editorId_1291860338) {
  var result_1291860339 = [];

    result_1291860339 = nimCopy(null, scriptTextEditorSelections_1291860286(editorId_1291860338), NTI1291855851);

  return result_1291860339;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860283(editorId_));};

function scriptSetTextEditorSelections_1291860363(editorId_1291860364, selections_1291860365) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym803_1291860371 = getEditorForId_1291850661(gEditor, editorId_1291860364);
      if (!isSome_2818583961(oHEX60gensym803_1291860371)) Temporary2 = false; else {        var editor_1291860394 = get_2818583981(oHEX60gensym803_1291860371);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860394.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573083(editor_1291860394, selections_1291860365);
    }
    
    }
    
    } finally {
    requestRender_2768240746(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860360(editorId_1291860406, selections_1291860407) {
    scriptSetTextEditorSelections_1291860363(editorId_1291860406, selections_1291860407);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860360(editorId_, selections_));};

function scriptGetTextEditorLine_1291860432(editorId_1291860433, line_1291860434) {
      var Temporary1;
    var Temporary2;

  var result_1291860435 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860435 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym813_1291860441 = getEditorForId_1291850661(gEditor, editorId_1291860433);
      if (!isSome_2818583961(oHEX60gensym813_1291860441)) Temporary1 = false; else {        var editor_1291860464 = get_2818583981(oHEX60gensym813_1291860441);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860464.m_type, NTI2818572510)) {
    var editor_1291860471 = editor_1291860464;
    if (((0 <= line_1291860434) && (line_1291860434 < (content_2818574085(editor_1291860471.document)).length))) {
    result_1291860435 = nimCopy(null, (Temporary2 = content_2818574085(editor_1291860471.document), Temporary2)[chckIndx(line_1291860434, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860435 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860435;

}

function scriptGetTextEditorLineJsWrapper_1291860429(editorId_1291860481, line_1291860482) {
  var result_1291860483 = [];

    result_1291860483 = nimCopy(null, scriptGetTextEditorLine_1291860432(editorId_1291860481, line_1291860482), NTI33554449);

  return result_1291860483;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860429(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860512(editorId_1291860513) {
      var Temporary1;

  var result_1291860514 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860514 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym823_1291860520 = getEditorForId_1291850661(gEditor, editorId_1291860513);
      if (!isSome_2818583961(oHEX60gensym823_1291860520)) Temporary1 = false; else {        var editor_1291860543 = get_2818583981(oHEX60gensym823_1291860520);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860543.m_type, NTI2818572510)) {
    var editor_1291860550 = editor_1291860543;
    result_1291860514 = (content_2818574085(editor_1291860550.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860514 = 0;
    break BeforeRet;
  };

  return result_1291860514;

}

function scriptGetTextEditorLineCountJsWrapper_1291860509(editorId_1291860559) {
  var result_1291860560 = 0;

    result_1291860560 = scriptGetTextEditorLineCount_1291860512(editorId_1291860559);

  return result_1291860560;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860509(editorId_));};

function scriptGetOptionInt_1291860595(path_1291860596, default_1291860597) {
  var result_1291860598 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860598 = default_1291860597;
      break BeforeRet;
      }
      
      var nodeHEX60gensym833_1291860603 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860596, [46], -1));
      if ((nodeHEX60gensym833_1291860603 == null)) {
      result_1291860598 = default_1291860597;
      break BeforeRet;
      }
      
    };
    result_1291860598 = getInt_1627390118(nodeHEX60gensym833_1291860603, default_1291860597);
  };

  return result_1291860598;

}

function scriptGetOptionIntJsWrapper_1291860592(path_1291860613, default_1291860614) {
  var result_1291860615 = 0;

    result_1291860615 = scriptGetOptionInt_1291860595(path_1291860613, default_1291860614);

  return result_1291860615;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860592(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860645(path_1291860646, default_1291860647) {
  var result_1291860648 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860648 = default_1291860647;
      break BeforeRet;
      }
      
      var nodeHEX60gensym843_1291860653 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860646, [46], -1));
      if ((nodeHEX60gensym843_1291860653 == null)) {
      result_1291860648 = default_1291860647;
      break BeforeRet;
      }
      
    };
    result_1291860648 = getFloat_1627390140(nodeHEX60gensym843_1291860653, default_1291860647);
  };

  return result_1291860648;

}

function scriptGetOptionFloatJsWrapper_1291860642(path_1291860663, default_1291860664) {
  var result_1291860665 = 0.0;

    result_1291860665 = scriptGetOptionFloat_1291860645(path_1291860663, default_1291860664);

  return result_1291860665;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860642(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860753(path_1291860754, default_1291860755) {
  var result_1291860756 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860756 = default_1291860755;
      break BeforeRet;
      }
      
      var nodeHEX60gensym859_1291860761 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860754, [46], -1));
      if ((nodeHEX60gensym859_1291860761 == null)) {
      result_1291860756 = default_1291860755;
      break BeforeRet;
      }
      
    };
    result_1291860756 = getBool_1627390147(nodeHEX60gensym859_1291860761, default_1291860755);
  };

  return result_1291860756;

}

function scriptGetOptionBoolJsWrapper_1291860750(path_1291860771, default_1291860772) {
  var result_1291860773 = false;

    result_1291860773 = scriptGetOptionBool_1291860753(path_1291860771, default_1291860772);

  return result_1291860773;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860750(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291860803(path_1291860804, default_1291860805) {
  var result_1291860806 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860806 = nimCopy(null, default_1291860805, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym869_1291860811 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860804, [46], -1));
      if ((nodeHEX60gensym869_1291860811 == null)) {
      result_1291860806 = nimCopy(null, default_1291860805, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291860806 = nimCopy(null, getStr_1627390106(nodeHEX60gensym869_1291860811, default_1291860805), NTI33554449);
  };

  return result_1291860806;

}

function scriptGetOptionStringJsWrapper_1291860800(path_1291860821, default_1291860822) {
  var result_1291860823 = [];

    result_1291860823 = nimCopy(null, scriptGetOptionString_1291860803(path_1291860821, default_1291860822), NTI33554449);

  return result_1291860823;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291860800(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291860853(path_1291860854, value_1291860855) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym878_1291860862 = nsuSplitString(path_1291860854, [46], -1);
      var nodeHEX60gensym878_1291860863 = gEditor.options;
      Label3: {
        var keyHEX60gensym878_1291860882 = [];
        var colontmp__1291860926 = [];
        colontmp__1291860926 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym878_1291860862, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860927 = 0;
        var L_1291860928 = (colontmp__1291860926).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860927 < L_1291860928)) break Label5;
              keyHEX60gensym878_1291860882 = colontmp__1291860926[chckIndx(i_1291860927, 0, (colontmp__1291860926).length - 1)];
              if (!((nodeHEX60gensym878_1291860863.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym878_1291860863, keyHEX60gensym878_1291860882))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym878_1291860863, keyHEX60gensym878_1291860882, newJObject_1627390051());
              }
              
              nodeHEX60gensym878_1291860863 = HEX5BHEX5D_1627393037(nodeHEX60gensym878_1291860863, keyHEX60gensym878_1291860882);
              i_1291860927 = addInt(i_1291860927, 1);
              if (!(((colontmp__1291860926).length == L_1291860928))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym878_1291860863 == null) || !((nodeHEX60gensym878_1291860863.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym878_1291860863, HEX5BHEX5D_2701132581(pathItemsHEX60gensym878_1291860862, 1), newJInt_1627390040(value_1291860855));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291860850(path_1291860903, value_1291860904) {
    scriptSetOptionInt_1291860853(path_1291860903, value_1291860904);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291860850(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291860935(path_1291860936, value_1291860937) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym892_1291860944 = nsuSplitString(path_1291860936, [46], -1);
      var nodeHEX60gensym892_1291860945 = gEditor.options;
      Label3: {
        var keyHEX60gensym892_1291860964 = [];
        var colontmp__1291861008 = [];
        colontmp__1291861008 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym892_1291860944, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861009 = 0;
        var L_1291861010 = (colontmp__1291861008).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861009 < L_1291861010)) break Label5;
              keyHEX60gensym892_1291860964 = colontmp__1291861008[chckIndx(i_1291861009, 0, (colontmp__1291861008).length - 1)];
              if (!((nodeHEX60gensym892_1291860945.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym892_1291860945, keyHEX60gensym892_1291860964))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym892_1291860945, keyHEX60gensym892_1291860964, newJObject_1627390051());
              }
              
              nodeHEX60gensym892_1291860945 = HEX5BHEX5D_1627393037(nodeHEX60gensym892_1291860945, keyHEX60gensym892_1291860964);
              i_1291861009 = addInt(i_1291861009, 1);
              if (!(((colontmp__1291861008).length == L_1291861010))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym892_1291860945 == null) || !((nodeHEX60gensym892_1291860945.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym892_1291860945, HEX5BHEX5D_2701132581(pathItemsHEX60gensym892_1291860944, 1), newJFloat_1627390043(value_1291860937));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291860932(path_1291860985, value_1291860986) {
    scriptSetOptionFloat_1291860935(path_1291860985, value_1291860986);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291860932(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291861017(path_1291861018, value_1291861019) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym906_1291861026 = nsuSplitString(path_1291861018, [46], -1);
      var nodeHEX60gensym906_1291861027 = gEditor.options;
      Label3: {
        var keyHEX60gensym906_1291861046 = [];
        var colontmp__1291861090 = [];
        colontmp__1291861090 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym906_1291861026, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861091 = 0;
        var L_1291861092 = (colontmp__1291861090).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861091 < L_1291861092)) break Label5;
              keyHEX60gensym906_1291861046 = colontmp__1291861090[chckIndx(i_1291861091, 0, (colontmp__1291861090).length - 1)];
              if (!((nodeHEX60gensym906_1291861027.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym906_1291861027, keyHEX60gensym906_1291861046))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym906_1291861027, keyHEX60gensym906_1291861046, newJObject_1627390051());
              }
              
              nodeHEX60gensym906_1291861027 = HEX5BHEX5D_1627393037(nodeHEX60gensym906_1291861027, keyHEX60gensym906_1291861046);
              i_1291861091 = addInt(i_1291861091, 1);
              if (!(((colontmp__1291861090).length == L_1291861092))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym906_1291861027 == null) || !((nodeHEX60gensym906_1291861027.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym906_1291861027, HEX5BHEX5D_2701132581(pathItemsHEX60gensym906_1291861026, 1), newJBool_1627390046(value_1291861019));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291861014(path_1291861067, value_1291861068) {
    scriptSetOptionBool_1291861017(path_1291861067, value_1291861068);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291861014(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291861099(path_1291861100, value_1291861101) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym920_1291861108 = nsuSplitString(path_1291861100, [46], -1);
      var nodeHEX60gensym920_1291861109 = gEditor.options;
      Label3: {
        var keyHEX60gensym920_1291861128 = [];
        var colontmp__1291861172 = [];
        colontmp__1291861172 = HEX5BHEX5D_2818589613(pathItemsHEX60gensym920_1291861108, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861173 = 0;
        var L_1291861174 = (colontmp__1291861172).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861173 < L_1291861174)) break Label5;
              keyHEX60gensym920_1291861128 = colontmp__1291861172[chckIndx(i_1291861173, 0, (colontmp__1291861172).length - 1)];
              if (!((nodeHEX60gensym920_1291861109.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym920_1291861109, keyHEX60gensym920_1291861128))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym920_1291861109, keyHEX60gensym920_1291861128, newJObject_1627390051());
              }
              
              nodeHEX60gensym920_1291861109 = HEX5BHEX5D_1627393037(nodeHEX60gensym920_1291861109, keyHEX60gensym920_1291861128);
              i_1291861173 = addInt(i_1291861173, 1);
              if (!(((colontmp__1291861172).length == L_1291861174))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym920_1291861109 == null) || !((nodeHEX60gensym920_1291861109.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym920_1291861109, HEX5BHEX5D_2701132581(pathItemsHEX60gensym920_1291861108, 1), newJString_1627389994(value_1291861101));
      } finally {
      requestRender_2768240746(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291861096(path_1291861149, value_1291861150) {
    scriptSetOptionString_1291861099(path_1291861149, value_1291861150);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291861096(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847822(t_1291847825, key_1291847826, hc_1291847827, hc_1291847827_Idx) {
  var result_1291847828 = 0;

  BeforeRet: {
    hc_1291847827[hc_1291847827_Idx] = hash_1325400491(key_1291847826);
    if ((hc_1291847827[hc_1291847827_Idx] == 0)) {
    hc_1291847827[hc_1291847827_Idx] = 314159265;
    }
    
    if (((t_1291847825.data).length == 0)) {
    result_1291847828 = -1;
    break BeforeRet;
    }
    
    var h_1291847880 = (hc_1291847827[hc_1291847827_Idx] & (t_1291847825.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0)) break Label2;
          if (((t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field0 == hc_1291847827[hc_1291847827_Idx]) && eqStrings(t_1291847825.data[chckIndx(h_1291847880, 0, (t_1291847825.data).length - 1)].Field1, key_1291847826))) {
          result_1291847828 = h_1291847880;
          break BeforeRet;
          }
          
          h_1291847880 = nextTry_1308622883(h_1291847880, (t_1291847825.data).length - 1);
        }
    };
    result_1291847828 = subInt(-1, h_1291847880);
  };

  return result_1291847828;

}

function mustRehash_3036680175(t_3036680177) {
  var result_3036680178 = false;

    if (!((t_3036680177.counter < (t_3036680177.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3036680178 = ((mulInt((t_3036680177.data).length, 2) < mulInt(t_3036680177.counter, 3)) || (subInt((t_3036680177.data).length, t_3036680177.counter) < 4));

  return result_3036680178;

}

function rawInsert_3036680868(t_3036680872, data_3036680873, data_3036680873_Idx, key_3036680874, val_3036680875, hc_3036680876, h_3036680877) {
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field1 = nimCopy(null, key_3036680874, NTI33554449);
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field2 = val_3036680875;
    data_3036680873[data_3036680873_Idx][chckIndx(h_3036680877, 0, (data_3036680873[data_3036680873_Idx]).length - 1)].Field0 = hc_3036680876;

  
}

function enlarge_3036680432(t_3036680435) {
    var n_3036680438 = [];
    n_3036680438 = new Array(chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3036680435.data).length, 2), 0, 2147483647) ; ++i) { n_3036680438[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3036680435.data; t_3036680435.data = n_3036680438; n_3036680438 = Temporary1;    Label2: {
      var i_3036680536 = 0;
      var colontmp__1291861261 = 0;
      colontmp__1291861261 = (n_3036680438).length - 1;
      var res_1291861262 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291861262 <= colontmp__1291861261)) break Label4;
            i_3036680536 = res_1291861262;
            var eh_3036680617 = n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field0;
            if (isFilled_1308622880(eh_3036680617)) {
            var j_3036680621 = (eh_3036680617 & (t_3036680435.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3036680435.data[chckIndx(j_3036680621, 0, (t_3036680435.data).length - 1)].Field0)) break Label6;
                  j_3036680621 = nextTry_1308622883(j_3036680621, (t_3036680435.data).length - 1);
                }
            };
            rawInsert_3036680868(t_3036680435, t_3036680435, "data", n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field1, n_3036680438[chckIndx(i_3036680536, 0, (n_3036680438).length - 1)].Field2, eh_3036680617, j_3036680621);
            }
            
            res_1291861262 = addInt(res_1291861262, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3036681118(t_3036681121, key_3036681122, hc_3036681123) {
  var result_3036681124 = 0;

  BeforeRet: {
    if (((t_3036681121.data).length == 0)) {
    result_3036681124 = -1;
    break BeforeRet;
    }
    
    var h_3036681209 = (hc_3036681123 & (t_3036681121.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0)) break Label2;
          if (((t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field0 == hc_3036681123) && eqStrings(t_3036681121.data[chckIndx(h_3036681209, 0, (t_3036681121.data).length - 1)].Field1, key_3036681122))) {
          result_3036681124 = h_3036681209;
          break BeforeRet;
          }
          
          h_3036681209 = nextTry_1308622883(h_3036681209, (t_3036681121.data).length - 1);
        }
    };
    result_3036681124 = subInt(-1, h_3036681209);
  };

  return result_3036681124;

}

function HEX5BHEX5DHEX3D_3036679907(t_3036679910, key_3036679911, val_3036679912) {
    if (((t_3036679910.data).length == 0)) {
    var correctSizeHEX60gensym30_3036679995 = slotsNeeded_1308622891(32);
    t_3036679910.counter = 0;
    t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_3036679995, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3036680000 = [0];
    var index_3036680007 = rawGet_1291847822(t_3036679910, key_3036679911, hc_3036680000, 0);
    if ((0 <= index_3036680007)) {
    t_3036679910.data[chckIndx(index_3036680007, 0, (t_3036679910.data).length - 1)].Field2 = val_3036679912;
    }
    else {
      if (((t_3036679910.data).length == 0)) {
      var correctSizeHEX60gensym33_3036680170 = slotsNeeded_1308622891(32);
      t_3036679910.counter = 0;
      t_3036679910.data = new Array(chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym33_3036680170, 0, 2147483647) ; ++i) { t_3036679910.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3036680175(t_3036679910)) {
      enlarge_3036680432(t_3036679910);
      index_3036680007 = rawGetKnownHC_3036681118(t_3036679910, key_3036679911, hc_3036680000[0]);
      }
      
      index_3036680007 = subInt(-1, index_3036680007);
      rawInsert_3036680868(t_3036679910, t_3036679910, "data", key_3036679911, val_3036679912, hc_3036680000[0], index_3036680007);
      t_3036679910.counter = addInt(t_3036679910.counter, 1);
    }
    

  
}

function scriptSetCallback_1291861181(path_1291861182, id_1291861183) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3036679907(gEditor.callbacks, path_1291861182, id_1291861183);
  };

  
}

function scriptSetCallbackJsWrapper_1291861178(path_1291861238, id_1291861239) {
    scriptSetCallback_1291861181(path_1291861238, id_1291861239);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291861178(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3271557164(initialSize_3271557167) {
  var result_3271557173 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3271557175 = slotsNeeded_1308622891(chckRange(initialSize_3271557167, 0, 2147483647));
    result_3271557173.counter = 0;
    result_3271557173.data = new Array(chckRange(correctSizeHEX60gensym0_3271557175, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3271557175, 0, 2147483647) ; ++i) { result_3271557173.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3271557173;

}
var commandLineWidget_3271557160 = [null];
var mainStack_3271557161 = [null];
var viewPanel_3271557162 = [null];
var mainPanel_3271557163 = [null];
var widgetsPerEditor_3271557189 = [initTable_3271557164(32)];

function new_536870929() {
  var result_536870932 = null;

  BeforeRet: {
    var r_536870934 = null;
    r_536870934 = ({m_type: NTI3355443211, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], currentEvent: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870932 = r_536870934;
    break BeforeRet;
  };

  return result_536870932;

}

function subscribe_1291851158(event_1291851160, callback_1291851162) {
  var result_1291851163 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851163 = nimCopy(result_1291851163, newId_2046820597(), NTI2046820355);
    event_1291851160.handlers.push({Field0: nimCopy(null, result_1291851163, NTI2046820355), Field1: callback_1291851162});;

  return result_1291851163;

}

function anyInProgress_2113930737(handlers_2113930738) {
  var result_2113930739 = false;

  BeforeRet: {
    Label1: {
      var h_2113930753 = null;
      var i_536871016 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871016 < (handlers_2113930738).length)) break Label3;
            h_2113930753 = handlers_2113930738[chckIndx(i_536871016, 0, (handlers_2113930738).length - 1)];
            if (!((h_2113930753.state.current == 0))) {
            result_2113930739 = true;
            break BeforeRet;
            }
            
            i_536871016 = addInt(i_536871016, 1);
          }
      };
    };
    result_2113930739 = false;
    break BeforeRet;
  };

  return result_2113930739;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2113929567(handler_2113929568) {
  var result_2113929569 = null;

  BeforeRet: {
    if ((handler_2113929568.revision < handler_2113929568.config.revision)) {
    handler_2113929568.dfaInternal = buildDFA_2113929279(handler_2113929568.config);
    handler_2113929568.revision = handler_2113929568.config.revision;
    }
    
    result_2113929569 = handler_2113929568.dfaInternal;
    break BeforeRet;
  };

  return result_2113929569;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet276)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet277))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet278)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2113930703(handler_2113930704, handler_2113930704_Idx, input_2113930705, modifiers_2113930706, handleUnknownAsInput_2113930707) {
  var result_2113930708 = 0;

  BeforeRet: {
    if (!((input_2113930705 == 0))) {
    var prevState_2113930709 = nimCopy(null, handler_2113930704[handler_2113930704_Idx].state, NTI2013265955);
    handler_2113930704[handler_2113930704_Idx].state = nimCopy(handler_2113930704[handler_2113930704_Idx].state, step_2013266020(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state, input_2113930705, modifiers_2113930706), NTI2013265955);
    if ((handler_2113930704[handler_2113930704_Idx].state.current == 0)) {
    if ((prevState_2113930709.current == 0)) {
    if ((((handleUnknownAsInput_2113930707 && (0 < input_2113930705)) && SetEq(SetPlus(modifiers_2113930706, ConstSet274), ConstSet275)) && !((handler_2113930704[handler_2113930704_Idx].handleInput == null)))) {
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleInput(inputToString_2013267082(input_2113930705, ConstSet279));
    break BeforeRet;
    }
    
    result_2113930708 = 1;
    break BeforeRet;
    }
    else {
      result_2113930708 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current)) {
    var colontmp__536871018 = parseAction_2113930650(getAction_2013267075(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current));
    var action_2113930722 = nimCopy(null, colontmp__536871018["Field0"], NTI33554449);
    var arg_2113930723 = nimCopy(null, colontmp__536871018["Field1"], NTI33554449);
    handler_2113930704[handler_2113930704_Idx].state.current = getDefaultState_2013267071(dfa_2113929567(handler_2113930704[handler_2113930704_Idx]), handler_2113930704[handler_2113930704_Idx].state.current);
    result_2113930708 = handler_2113930704[handler_2113930704_Idx].handleAction(action_2113930722, arg_2113930723);
    break BeforeRet;
    }
    else {
      result_2113930708 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2113930708 = 0;
      break BeforeRet;
    }
    
  };

  return result_2113930708;

}

function reset_2113930643(handler_2113930644, handler_2113930644_Idx) {
    handler_2113930644[handler_2113930644_Idx].state = nimCopy(handler_2113930644[handler_2113930644_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2113930763(handlers_2113930764, input_2113930765, modifiers_2113930766) {
            var Temporary4;

  var result_2113930767 = false;

    var anyInProgress_2113930768 = anyInProgress_2113930737(handlers_2113930764);
    var allowHandlingUnknownAsInput_2113930769 = true;
    Label1: {
      var i_2113930778 = 0;
      var colontmp__536871011 = 0;
      colontmp__536871011 = (handlers_2113930764).length;
      var i_536871012 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871012 < colontmp__536871011)) break Label3;
            i_2113930778 = i_536871012;
            var handlerIndex_2113930782 = subInt(subInt((handlers_2113930764).length, i_2113930778), 1);
            var handler_2113930783 = [handlers_2113930764[chckIndx(handlerIndex_2113930782, 0, (handlers_2113930764).length - 1)]];
            if (((anyInProgress_2113930768 && !((handler_2113930783[0].state.current == 0))) || (!(anyInProgress_2113930768) && (handler_2113930783[0].state.current == 0)))) {
            Temporary4 = handleEvent_2113930703(handler_2113930783, 0, input_2113930765, modifiers_2113930766, allowHandlingUnknownAsInput_2113930769);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2113930784 = Temporary4;
            if (!((response_2113930784 == 1))) {
            result_2113930767 = true;
            }
            
            switch (response_2113930784) {
            case 3:
              allowHandlingUnknownAsInput_2113930769 = false;
              Label5: {
                var k_2113930831 = 0;
                var h_2113930832 = null;
                var i_536871008 = 0;
                var L_536871009 = (handlers_2113930764).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871008 < L_536871009)) break Label7;
                      k_2113930831 = i_536871008;
                      h_2113930832 = handlers_2113930764[chckIndx(i_536871008, 0, (handlers_2113930764).length - 1)];
                      if (!((k_2113930831 == handlerIndex_2113930782))) {
                      var h_2113930833 = [h_2113930832];
                      reset_2113930643(h_2113930833, 0);
                      }
                      
                      i_536871008 = addInt(i_536871008, 1);
                      if (!(((handlers_2113930764).length == L_536871009))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2113930769 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2113930783[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871012 = addInt(i_536871012, 1);
          }
      };
    };

  return result_2113930767;

}

function add_2969575614(x_2969575616, x_2969575616_Idx, y_2969575617) {
    var Temporary1;

    var xl_2969575621 = (x_2969575616[x_2969575616_Idx]).length;
    if (x_2969575616[x_2969575616_Idx].length < (Temporary1 = chckRange(addInt(xl_2969575621, (y_2969575617).length), 0, 2147483647), Temporary1)) { for (var i = x_2969575616[x_2969575616_Idx].length ; i < Temporary1 ; ++i) x_2969575616[x_2969575616_Idx].push(null); }
               else { x_2969575616[x_2969575616_Idx].length = Temporary1; };
    Label2: {
      var i_2969575636 = 0;
      var colontmp__536871020 = 0;
      colontmp__536871020 = (y_2969575617).length - 1;
      var res_536871021 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871021 <= colontmp__536871020)) break Label4;
            i_2969575636 = res_536871021;
            x_2969575616[x_2969575616_Idx][chckIndx(addInt(xl_2969575621, i_2969575636), 0, (x_2969575616[x_2969575616_Idx]).length - 1)] = y_2969575617[chckIndx(i_2969575636, 0, (y_2969575617).length - 1)];
            res_536871021 = addInt(res_536871021, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291859130(self_1291859131) {
  var result_1291859132 = [[]];

    result_1291859132[0] = nimCopy(null, [self_1291859131.eventHandler], NTI2466250766);
    var modeOnTop_1291859146 = getOption_2818583615(self_1291859131, getContextWithMode_1291859077(self_1291859131, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291859131.modeEventHandler == null)) && !(modeOnTop_1291859146))) {
    result_1291859132[0].push(self_1291859131.modeEventHandler);;
    }
    
    if (self_1291859131.commandLineMode) {
    add_2969575614(result_1291859132, 0, getEventHandlers_2415919261(getCommandLineTextEditor_1291851060(self_1291859131)));
    result_1291859132[0].push(self_1291859131.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291859131.popups).length)) {
    add_2969575614(result_1291859132, 0, getEventHandlers_2483028027(self_1291859131.popups[chckIndx((self_1291859131.popups).length - 1, 0, (self_1291859131.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291859131.currentView) && (self_1291859131.currentView < (self_1291859131.views).length))) {
    add_2969575614(result_1291859132, 0, getEventHandlers_2415919261(self_1291859131.views[chckIndx(self_1291859131.currentView, 0, (self_1291859131.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291859131.modeEventHandler == null)) && modeOnTop_1291859146)) {
    result_1291859132[0].push(self_1291859131.modeEventHandler);;
    }
    

  return result_1291859132[0];

}

function handleKeyPress_1291851063(self_1291851064, input_1291851065, modifiers_1291851066) {
    if (handleEvent_2113930763(currentEventHandlers_1291859130(self_1291851064), input_1291851065, modifiers_1291851066)) {
    preventDefault_2768240809(self_1291851064.platform);
    }
    

  
}

function handleKeyRelease_1291851067(self_1291851068, input_1291851069, modifiers_1291851070) {
  
}

function handleRune_1291851071(self_1291851072, input_1291851073, modifiers_1291851074) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851073)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851073, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851074;
    }
    else {
    Temporary1 = ConstSet280;
    }
    
    var modifiers_1291859347 = nimCopy(null, Temporary1, NTI2013265950);
    if (handleEvent_2113930763(currentEventHandlers_1291859130(self_1291851072), input_1291851073, modifiers_1291859347)) {
    preventDefault_2768240809(self_1291851072.platform);
    }
    

  
}

function subscribe_1291851328(event_1291851330, callback_1291851332) {
  var result_1291851333 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851333 = nimCopy(result_1291851333, newId_2046820597(), NTI2046820355);
    event_1291851330.handlers.push({Field0: nimCopy(null, result_1291851333, NTI2046820355), Field1: callback_1291851332});;

  return result_1291851333;

}

function contains_2130706614(a_2130706615, b_2130706616) {
  var result_2130706617 = false;

  BeforeRet: {
    result_2130706617 = ((((a_2130706615.x <= b_2130706616.x) && (b_2130706616.x <= (a_2130706615.x + a_2130706615.w))) && (a_2130706615.y <= b_2130706616.y)) && (b_2130706616.y <= (a_2130706615.y + a_2130706615.h)));
    break BeforeRet;
  };

  return result_2130706617;

}

function handleMousePress_1291851075(self_1291851076, button_1291851077, modifiers_1291851078, mousePosWindow_1291851079) {
  BeforeRet: {
    Label1: {
      var i_1291859201 = 0;
      var colontmp__536871024 = 0;
      colontmp__536871024 = (self_1291851076.popups).length - 1;
      var res_536871025 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871025 <= colontmp__536871024)) break Label3;
            i_1291859201 = res_536871025;
            var popup_1291859205 = self_1291851076.popups[chckIndx(subInt((self_1291851076.popups).length - 1, i_1291859201), 0, (self_1291851076.popups).length - 1)];
            if (contains_2130706614(popup_1291859205.lastBounds, mousePosWindow_1291851079)) {
            handleMousePress_2483028038(popup_1291859205, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            res_536871025 = addInt(res_536871025, 1);
          }
      };
    };
    var rects_1291859209 = layoutViews_1291848236(self_1291851076.layout, self_1291851076.layout_props, self_1291851076.lastBounds, (self_1291851076.views).length);
    Label4: {
      var i_1291859242 = 0;
      var view_1291859243 = null;
      var i_536871029 = 0;
      var L_536871030 = (self_1291851076.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871029 < L_536871030)) break Label6;
            i_1291859242 = i_536871029;
            view_1291859243 = self_1291851076.views[chckIndx(i_536871029, 0, (self_1291851076.views).length - 1)];
            if (((rects_1291859209).length <= i_1291859242)) {
            break BeforeRet;
            }
            
            if (contains_2130706614(rects_1291859209[chckIndx(i_1291859242, 0, (rects_1291859209).length - 1)], mousePosWindow_1291851079)) {
            self_1291851076.currentView = i_1291859242;
            handleMousePress_2415919278(view_1291859243.editor, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            i_536871029 = addInt(i_536871029, 1);
            if (!(((self_1291851076.views).length == L_536871030))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851080(self_1291851081, button_1291851082, modifiers_1291851083, mousePosWindow_1291851084) {
  BeforeRet: {
    Label1: {
      var i_1291859260 = 0;
      var colontmp__536871033 = 0;
      colontmp__536871033 = (self_1291851081.popups).length - 1;
      var res_536871034 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871034 <= colontmp__536871033)) break Label3;
            i_1291859260 = res_536871034;
            var popup_1291859264 = self_1291851081.popups[chckIndx(subInt((self_1291851081.popups).length - 1, i_1291859260), 0, (self_1291851081.popups).length - 1)];
            if (contains_2130706614(popup_1291859264.lastBounds, mousePosWindow_1291851084)) {
            handleMouseRelease_2483028043(popup_1291859264, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            res_536871034 = addInt(res_536871034, 1);
          }
      };
    };
    var rects_1291859268 = layoutViews_1291848236(self_1291851081.layout, self_1291851081.layout_props, self_1291851081.lastBounds, (self_1291851081.views).length);
    Label4: {
      var i_1291859274 = 0;
      var view_1291859275 = null;
      var i_536871037 = 0;
      var L_536871038 = (self_1291851081.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871037 < L_536871038)) break Label6;
            i_1291859274 = i_536871037;
            view_1291859275 = self_1291851081.views[chckIndx(i_536871037, 0, (self_1291851081.views).length - 1)];
            if (((rects_1291859268).length <= i_1291859274)) {
            break BeforeRet;
            }
            
            if (((self_1291851081.currentView == i_1291859274) && contains_2130706614(rects_1291859268[chckIndx(i_1291859274, 0, (rects_1291859268).length - 1)], mousePosWindow_1291851084))) {
            handleMouseRelease_2415919283(view_1291859275.editor, button_1291851082, mousePosWindow_1291851084);
            break BeforeRet;
            }
            
            i_536871037 = addInt(i_536871037, 1);
            if (!(((self_1291851081.views).length == L_536871038))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851449(event_1291851451, callback_1291851453) {
  var result_1291851454 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851454 = nimCopy(result_1291851454, newId_2046820597(), NTI2046820355);
    event_1291851451.handlers.push({Field0: nimCopy(null, result_1291851454, NTI2046820355), Field1: callback_1291851453});;

  return result_1291851454;

}

function handleMouseMove_1291851085(self_1291851086, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090) {
  BeforeRet: {
    Label1: {
      var i_1291859292 = 0;
      var colontmp__536871041 = 0;
      colontmp__536871041 = (self_1291851086.popups).length - 1;
      var res_536871042 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871042 <= colontmp__536871041)) break Label3;
            i_1291859292 = res_536871042;
            var popup_1291859296 = self_1291851086.popups[chckIndx(subInt((self_1291851086.popups).length - 1, i_1291859292), 0, (self_1291851086.popups).length - 1)];
            if (contains_2130706614(popup_1291859296.lastBounds, mousePosWindow_1291851087)) {
            handleMouseMove_2483028050(popup_1291859296, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            res_536871042 = addInt(res_536871042, 1);
          }
      };
    };
    var rects_1291859300 = layoutViews_1291848236(self_1291851086.layout, self_1291851086.layout_props, self_1291851086.lastBounds, (self_1291851086.views).length);
    Label4: {
      var i_1291859306 = 0;
      var view_1291859307 = null;
      var i_536871045 = 0;
      var L_536871046 = (self_1291851086.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871045 < L_536871046)) break Label6;
            i_1291859306 = i_536871045;
            view_1291859307 = self_1291851086.views[chckIndx(i_536871045, 0, (self_1291851086.views).length - 1)];
            if (((rects_1291859300).length <= i_1291859306)) {
            break BeforeRet;
            }
            
            if (((self_1291851086.currentView == i_1291859306) && contains_2130706614(rects_1291859300[chckIndx(i_1291859306, 0, (rects_1291859300).length - 1)], mousePosWindow_1291851087))) {
            handleMouseMove_2415919290(view_1291859307.editor, mousePosWindow_1291851087, mousePosDelta_1291851088, modifiers_1291851089, buttons_1291851090);
            break BeforeRet;
            }
            
            i_536871045 = addInt(i_536871045, 1);
            if (!(((self_1291851086.views).length == L_536871046))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851521(event_1291851523, callback_1291851525) {
  var result_1291851526 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851526 = nimCopy(result_1291851526, newId_2046820597(), NTI2046820355);
    event_1291851523.handlers.push({Field0: nimCopy(null, result_1291851526, NTI2046820355), Field1: callback_1291851525});;

  return result_1291851526;

}

function handleScroll_1291851091(self_1291851092, scroll_1291851093, mousePosWindow_1291851094, modifiers_1291851095) {
  BeforeRet: {
    Label1: {
      var i_1291859323 = 0;
      var colontmp__536871049 = 0;
      colontmp__536871049 = (self_1291851092.popups).length - 1;
      var res_536871050 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871050 <= colontmp__536871049)) break Label3;
            i_1291859323 = res_536871050;
            var popup_1291859327 = self_1291851092.popups[chckIndx(subInt((self_1291851092.popups).length - 1, i_1291859323), 0, (self_1291851092.popups).length - 1)];
            if (contains_2130706614(popup_1291859327.lastBounds, mousePosWindow_1291851094)) {
            handleScroll_2483028033(popup_1291859327, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            res_536871050 = addInt(res_536871050, 1);
          }
      };
    };
    Label4: {
      var i_1291859333 = 0;
      var view_1291859334 = null;
      var i_536871053 = 0;
      var L_536871054 = (self_1291851092.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871053 < L_536871054)) break Label6;
            i_1291859333 = i_536871053;
            view_1291859334 = self_1291851092.views[chckIndx(i_536871053, 0, (self_1291851092.views).length - 1)];
            if (contains_2130706614(view_1291859334.editor.lastContentBounds, mousePosWindow_1291851094)) {
            handleScroll_2415919273(view_1291859334.editor, scroll_1291851093, mousePosWindow_1291851094);
            break BeforeRet;
            }
            
            i_536871053 = addInt(i_536871053, 1);
            if (!(((self_1291851092.views).length == L_536871054))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851593(event_1291851595, callback_1291851597) {
  var result_1291851598 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851598 = nimCopy(result_1291851598, newId_2046820597(), NTI2046820355);
    event_1291851595.handlers.push({Field0: nimCopy(null, result_1291851598, NTI2046820355), Field1: callback_1291851597});;

  return result_1291851598;

}

function handleDropFile_1291851096(self_1291851097, path_1291851098, content_1291851099) {
    createView_1291848958(self_1291851097, newTextDocument_2818579088(path_1291851098, content_1291851099, false));

  
}

function subscribe_1291851665(event_1291851667, callback_1291851669) {
  var result_1291851670 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851670 = nimCopy(result_1291851670, newId_2046820597(), NTI2046820355);
    event_1291851667.handlers.push({Field0: nimCopy(null, result_1291851670, NTI2046820355), Field1: callback_1291851669});;

  return result_1291851670;

}

function initTable_1291851680(initialSize_1291851683) {
  var result_1291851684 = ({data: [], counter: 0});

    var correctSizeHEX60gensym59_1291851686 = slotsNeeded_1308622891(chckRange(initialSize_1291851683, 0, 2147483647));
    result_1291851684.counter = 0;
    result_1291851684.data = new Array(chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_1291851686, 0, 2147483647) ; ++i) { result_1291851684.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851684;

}

function HEX5BHEX5DHEX3D_1291851749(t_1291851752, key_1291851753, val_1291851754) {
    if (((t_1291851752.data).length == 0)) {
    var correctSizeHEX60gensym62_1291851803 = slotsNeeded_1308622891(32);
    t_1291851752.counter = 0;
    t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym62_1291851803, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851808 = [0];
    var index_1291851815 = rawGet_1291848320(t_1291851752, key_1291851753, hc_1291851808, 0);
    if ((0 <= index_1291851815)) {
    t_1291851752.data[chckIndx(index_1291851815, 0, (t_1291851752.data).length - 1)].Field2 = val_1291851754;
    }
    else {
      if (((t_1291851752.data).length == 0)) {
      var correctSizeHEX60gensym65_1291851917 = slotsNeeded_1308622891(32);
      t_1291851752.counter = 0;
      t_1291851752.data = new Array(chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym65_1291851917, 0, 2147483647) ; ++i) { t_1291851752.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851922(t_1291851752)) {
      enlarge_1291852077(t_1291851752);
      index_1291851815 = rawGetKnownHC_1291852549(t_1291851752, key_1291851753, hc_1291851808[0]);
      }
      
      index_1291851815 = subInt(-1, index_1291851815);
      rawInsert_1291852371(t_1291851752, t_1291851752, "data", key_1291851753, val_1291851754, hc_1291851808[0], index_1291851815);
      t_1291851752.counter = addInt(t_1291851752.counter, 1);
    }
    

  
}

function toTable_1291851675(pairs_1291851678) {
  var result_1291851679 = [({data: [], counter: 0})];

    result_1291851679[0] = nimCopy(result_1291851679[0], initTable_1291851680((pairs_1291851678).length), NTI1291845654);
    Label1: {
      var key_1291851707 = [];
      var val_1291851708 = 0.0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < (pairs_1291851678).length)) break Label3;
            key_1291851707 = pairs_1291851678[chckIndx(i_536871058, 0, (pairs_1291851678).length - 1)]["Field0"];
            val_1291851708 = pairs_1291851678[chckIndx(i_536871058, 0, (pairs_1291851678).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851749(result_1291851679[0], key_1291851707, val_1291851708);
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_1291851679[0];

}

function rawGet_2516583429(t_2516583432, key_2516583433, hc_2516583434, hc_2516583434_Idx) {
  var result_2516583435 = 0;

  BeforeRet: {
    hc_2516583434[hc_2516583434_Idx] = hash_1325400491(key_2516583433);
    if ((hc_2516583434[hc_2516583434_Idx] == 0)) {
    hc_2516583434[hc_2516583434_Idx] = 314159265;
    }
    
    if (((t_2516583432.data).length == 0)) {
    result_2516583435 = -1;
    break BeforeRet;
    }
    
    var h_2516583486 = (hc_2516583434[hc_2516583434_Idx] & (t_2516583432.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0)) break Label2;
          if (((t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field0 == hc_2516583434[hc_2516583434_Idx]) && eqStrings(t_2516583432.data[chckIndx(h_2516583486, 0, (t_2516583432.data).length - 1)].Field1, key_2516583433))) {
          result_2516583435 = h_2516583486;
          break BeforeRet;
          }
          
          h_2516583486 = nextTry_1308622883(h_2516583486, (t_2516583432.data).length - 1);
        }
    };
    result_2516583435 = subInt(-1, h_2516583486);
  };

  return result_2516583435;

}

function mustRehash_2516583774(t_2516583776) {
  var result_2516583777 = false;

    if (!((t_2516583776.counter < (t_2516583776.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516583777 = ((mulInt((t_2516583776.data).length, 2) < mulInt(t_2516583776.counter, 3)) || (subInt((t_2516583776.data).length, t_2516583776.counter) < 4));

  return result_2516583777;

}

function rawInsert_2516584223(t_2516584227, data_2516584228, data_2516584228_Idx, key_2516584229, val_2516584230, hc_2516584231, h_2516584232) {
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field1 = nimCopy(null, key_2516584229, NTI33554449);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2 = nimCopy(data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field2, val_2516584230, NTI2550136835);
    data_2516584228[data_2516584228_Idx][chckIndx(h_2516584232, 0, (data_2516584228[data_2516584228_Idx]).length - 1)].Field0 = hc_2516584231;

  
}

function enlarge_2516583929(t_2516583932) {
    var n_2516583935 = [];
    n_2516583935 = new Array(chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516583932.data).length, 2), 0, 2147483647) ; ++i) { n_2516583935[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2516583932.data; t_2516583932.data = n_2516583935; n_2516583935 = Temporary1;    Label2: {
      var i_2516583999 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2516583935).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2516583999 = res_536871064;
            var eh_2516584053 = n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516584053)) {
            var j_2516584057 = (eh_2516584053 & (t_2516583932.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516583932.data[chckIndx(j_2516584057, 0, (t_2516583932.data).length - 1)].Field0)) break Label6;
                  j_2516584057 = nextTry_1308622883(j_2516584057, (t_2516583932.data).length - 1);
                }
            };
            rawInsert_2516584223(t_2516583932, t_2516583932, "data", n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field1, n_2516583935[chckIndx(i_2516583999, 0, (n_2516583935).length - 1)].Field2, eh_2516584053, j_2516584057);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516584392(t_2516584395, key_2516584396, hc_2516584397) {
  var result_2516584398 = 0;

  BeforeRet: {
    if (((t_2516584395.data).length == 0)) {
    result_2516584398 = -1;
    break BeforeRet;
    }
    
    var h_2516584449 = (hc_2516584397 & (t_2516584395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0)) break Label2;
          if (((t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field0 == hc_2516584397) && eqStrings(t_2516584395.data[chckIndx(h_2516584449, 0, (t_2516584395.data).length - 1)].Field1, key_2516584396))) {
          result_2516584398 = h_2516584449;
          break BeforeRet;
          }
          
          h_2516584449 = nextTry_1308622883(h_2516584449, (t_2516584395.data).length - 1);
        }
    };
    result_2516584398 = subInt(-1, h_2516584449);
  };

  return result_2516584398;

}

function HEX5BHEX5DHEX3D_2516583368(t_2516583371, key_2516583372, val_2516583373) {
    if (((t_2516583371.data).length == 0)) {
    var correctSizeHEX60gensym23_2516583423 = slotsNeeded_1308622891(32);
    t_2516583371.counter = 0;
    t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2516583423, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2516583428 = [0];
    var index_2516583667 = rawGet_2516583429(t_2516583371, key_2516583372, hc_2516583428, 0);
    if ((0 <= index_2516583667)) {
    t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2 = nimCopy(t_2516583371.data[chckIndx(index_2516583667, 0, (t_2516583371.data).length - 1)].Field2, val_2516583373, NTI2550136835);
    }
    else {
      if (((t_2516583371.data).length == 0)) {
      var correctSizeHEX60gensym28_2516583769 = slotsNeeded_1308622891(32);
      t_2516583371.counter = 0;
      t_2516583371.data = new Array(chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2516583769, 0, 2147483647) ; ++i) { t_2516583371.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2516583774(t_2516583371)) {
      enlarge_2516583929(t_2516583371);
      index_2516583667 = rawGetKnownHC_2516584392(t_2516583371, key_2516583372, hc_2516583428[0]);
      }
      
      index_2516583667 = subInt(-1, index_2516583667);
      rawInsert_2516584223(t_2516583371, t_2516583371, "data", key_2516583372, val_2516583373, hc_2516583428[0], index_2516583667);
      t_2516583371.counter = addInt(t_2516583371.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet281[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871069 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871069 < L_2533359907)) break Label3;
            i_2533359912 = i_536871069;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871069 = addInt(i_536871069, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2516582448(text_2516582449) {
    var Temporary1;

  var result_2516582450 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2516582449, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2516582451 = Temporary1;
    if (((text_2516582449).length == addInt(6, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHex_2533359858(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(8, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(3, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2516582449).length == addInt(4, offset_2516582451))) {
    result_2516582450 = nimCopy(result_2516582450, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2516582449, HEX2EHEX2E_1040187488(offset_2516582451, 2)) || [])), NTI2550136835);
    result_2516582450.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2516582449, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2516582449, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2516582450 = nimCopy(result_2516582450, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2516582450;

}

function rawGet_2516582665(t_2516582668, key_2516582669, hc_2516582670, hc_2516582670_Idx) {
  var result_2516582671 = 0;

  BeforeRet: {
    hc_2516582670[hc_2516582670_Idx] = hash_1325400491(key_2516582669);
    if ((hc_2516582670[hc_2516582670_Idx] == 0)) {
    hc_2516582670[hc_2516582670_Idx] = 314159265;
    }
    
    if (((t_2516582668.data).length == 0)) {
    result_2516582671 = -1;
    break BeforeRet;
    }
    
    var h_2516582723 = (hc_2516582670[hc_2516582670_Idx] & (t_2516582668.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0)) break Label2;
          if (((t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field0 == hc_2516582670[hc_2516582670_Idx]) && eqStrings(t_2516582668.data[chckIndx(h_2516582723, 0, (t_2516582668.data).length - 1)].Field1, key_2516582669))) {
          result_2516582671 = h_2516582723;
          break BeforeRet;
          }
          
          h_2516582723 = nextTry_1308622883(h_2516582723, (t_2516582668.data).length - 1);
        }
    };
    result_2516582671 = subInt(-1, h_2516582723);
  };

  return result_2516582671;

}

function mustRehash_2516584939(t_2516584941) {
  var result_2516584942 = false;

    if (!((t_2516584941.counter < (t_2516584941.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2516584942 = ((mulInt((t_2516584941.data).length, 2) < mulInt(t_2516584941.counter, 3)) || (subInt((t_2516584941.data).length, t_2516584941.counter) < 4));

  return result_2516584942;

}

function rawInsert_2516585388(t_2516585392, data_2516585393, data_2516585393_Idx, key_2516585394, val_2516585395, hc_2516585396, h_2516585397) {
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field1 = nimCopy(null, key_2516585394, NTI33554449);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2 = nimCopy(data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field2, val_2516585395, NTI2516582404);
    data_2516585393[data_2516585393_Idx][chckIndx(h_2516585397, 0, (data_2516585393[data_2516585393_Idx]).length - 1)].Field0 = hc_2516585396;

  
}

function enlarge_2516585094(t_2516585097) {
    var n_2516585100 = [];
    n_2516585100 = new Array(chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2516585097.data).length, 2), 0, 2147483647) ; ++i) { n_2516585100[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2516585097.data; t_2516585097.data = n_2516585100; n_2516585100 = Temporary1;    Label2: {
      var i_2516585164 = 0;
      var colontmp__536871074 = 0;
      colontmp__536871074 = (n_2516585100).length - 1;
      var res_536871075 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871075 <= colontmp__536871074)) break Label4;
            i_2516585164 = res_536871075;
            var eh_2516585218 = n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field0;
            if (isFilled_1308622880(eh_2516585218)) {
            var j_2516585222 = (eh_2516585218 & (t_2516585097.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2516585097.data[chckIndx(j_2516585222, 0, (t_2516585097.data).length - 1)].Field0)) break Label6;
                  j_2516585222 = nextTry_1308622883(j_2516585222, (t_2516585097.data).length - 1);
                }
            };
            rawInsert_2516585388(t_2516585097, t_2516585097, "data", n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field1, n_2516585100[chckIndx(i_2516585164, 0, (n_2516585100).length - 1)].Field2, eh_2516585218, j_2516585222);
            }
            
            res_536871075 = addInt(res_536871075, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2516585557(t_2516585560, key_2516585561, hc_2516585562) {
  var result_2516585563 = 0;

  BeforeRet: {
    if (((t_2516585560.data).length == 0)) {
    result_2516585563 = -1;
    break BeforeRet;
    }
    
    var h_2516585614 = (hc_2516585562 & (t_2516585560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0)) break Label2;
          if (((t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field0 == hc_2516585562) && eqStrings(t_2516585560.data[chckIndx(h_2516585614, 0, (t_2516585560.data).length - 1)].Field1, key_2516585561))) {
          result_2516585563 = h_2516585614;
          break BeforeRet;
          }
          
          h_2516585614 = nextTry_1308622883(h_2516585614, (t_2516585560.data).length - 1);
        }
    };
    result_2516585563 = subInt(-1, h_2516585614);
  };

  return result_2516585563;

}

function HEX5BHEX5DHEX3D_2516584766(t_2516584769, key_2516584770, val_2516584771) {
    if (((t_2516584769.data).length == 0)) {
    var correctSizeHEX60gensym37_2516584820 = slotsNeeded_1308622891(32);
    t_2516584769.counter = 0;
    t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2516584820, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2516584825 = [0];
    var index_2516584832 = rawGet_2516582665(t_2516584769, key_2516584770, hc_2516584825, 0);
    if ((0 <= index_2516584832)) {
    t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2 = nimCopy(t_2516584769.data[chckIndx(index_2516584832, 0, (t_2516584769.data).length - 1)].Field2, val_2516584771, NTI2516582404);
    }
    else {
      if (((t_2516584769.data).length == 0)) {
      var correctSizeHEX60gensym40_2516584934 = slotsNeeded_1308622891(32);
      t_2516584769.counter = 0;
      t_2516584769.data = new Array(chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2516584934, 0, 2147483647) ; ++i) { t_2516584769.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2516584939(t_2516584769)) {
      enlarge_2516585094(t_2516584769);
      index_2516584832 = rawGetKnownHC_2516585557(t_2516584769, key_2516584770, hc_2516584825[0]);
      }
      
      index_2516584832 = subInt(-1, index_2516584832);
      rawInsert_2516585388(t_2516584769, t_2516584769, "data", key_2516584770, val_2516584771, hc_2516584825[0], index_2516584832);
      t_2516584769.counter = addInt(t_2516584769.counter, 1);
    }
    

  
}

function some_2516583251(val_2516583253) {
  var result_2516583254 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2516583254.has = true;
    result_2516583254.val = nimCopy(result_2516583254.val, val_2516583253, NTI2550136835);

  return result_2516583254;

}

function defaultTheme_2516586063() {
  var result_2516586064 = null;

    result_2516586064 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2516586064.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2516586064.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2516582448([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2516582448([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2516582448([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2516582448([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2516582448([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2516582448([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2516582448([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2516582448([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2516582448([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516583368(result_2516586064.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2516582448([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2516584766(result_2516586064.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2516583251(parseHexVar_2516582448([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet282, NTI2516582423), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2516586064;

}

function setTheme_1291851003(self_1291851004, path_1291851005) {
      var Temporary1;

      var oHEX60gensym57_1291851008 = loadFromFile_2516586059(path_1291851005);
      if (!isSome_1291851013(oHEX60gensym57_1291851008)) Temporary1 = false; else {        var theme_1291851059 = get_1291851033(oHEX60gensym57_1291851008);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851004.theme = theme_1291851059;
    }
    
    requestRender_2768240746(self_1291851004.platform, false);

  
}

function symbolName_1291854218(a_1291854220) {
  var result_1291854221 = [];

    result_1291854221 = nimCopy(null, names_1291854223[chckIndx(subInt(a_1291854220, 0), 0, (names_1291854223).length - 1)], NTI33554449);

  return result_1291854221;

}

function toJson_1291854202(a_1291854204, opt_1291854205) {
    var Temporary1;

  var result_1291854206 = null;

    switch (opt_1291854205.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854204);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854218(a_1291854204), opt_1291854205);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854204, NTI2449473553), opt_1291854205);
      break;
    }
    result_1291854206 = Temporary1;

  return result_1291854206;

}

function none_1291854110() {
  var result_1291854116 = ({val: null});

  return result_1291854116;

}

function some_1291854117(val_1291854119) {
  var result_1291854120 = ({val: null});

    if (!(!((val_1291854119 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854120.val = val_1291854119;

  return result_1291854120;

}

function getEditor_1291854101() {
  var result_1291854106 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854106 = nimCopy(result_1291854106, none_1291854110(), NTI1291850591);
    break BeforeRet;
    }
    
    result_1291854106 = nimCopy(result_1291854106, some_1291854117(gEditor), NTI1291850591);
    break BeforeRet;
  };

  return result_1291854106;

}

function isNone_1291854155(self_1291854157) {
  var result_1291854158 = false;

    result_1291854158 = (self_1291854157.val == null);

  return result_1291854158;

}

function get_1291854175(self_1291854177) {
  var result_1291854178 = null;

    if (isNone_1291854155(self_1291854177)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854178 = self_1291854177["val"];

  return result_1291854178;

}

function getBackendScript_1291854140_1291854148() {
  var result_1291854149 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym144_1291854150 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym144_1291854150)) {
      break BeforeRet;
      }
      
    };
    result_1291854149 = getBackend_1291854145(get_1291854175(rHEX60gensym144_1291854150));
  };

  return result_1291854149;

}

function getBackendApi_1291854200(HEX3Atmp_1291854142) {
  var result_1291854201 = null;

  BeforeRet: {
    result_1291854201 = newJNull_1627390049();
++excHandler;
    try {
    result_1291854201 = toJson_1291854202(getBackendScript_1291854140_1291854148(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym150_1291854299 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854304 = [mnewString(0)];
    fmtRes_1291854304[0].push.apply(fmtRes_1291854304[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854304, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym150_1291854299 || [],fmtRes_1291854304[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854201;

}

function saveAppStateScript_1291854307_1291855063() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym155_1291855064 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym155_1291855064)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853866(get_1291854175(rHEX60gensym155_1291855064));
  };

  
}

function saveAppStateApi_1291855090(HEX3Atmp_1291854309) {
  var result_1291855091 = null;

    result_1291855091 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291854307_1291855063();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym160_1291855092 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291855097 = [mnewString(0)];
    fmtRes_1291855097[0].push.apply(fmtRes_1291855097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym160_1291855092 || [],fmtRes_1291855097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855091;

}

function requestRenderScript_1291855151_1291855159(redrawEverything_1291855160) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym171_1291855161 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym171_1291855161)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855156(get_1291854175(rHEX60gensym171_1291855161), redrawEverything_1291855160);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet283[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet284), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet285[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818585107(node_2818585110) {
  var result_2818585112 = [false];

    var jsonPath_2818585113 = [[]];
    result_2818585112[0] = false;
    initFromJson_1627395343(result_2818585112, 0, node_2818585110, jsonPath_2818585113, 0);

  return result_2818585112[0];

}

function fromJson_2818585096(a_2818585098, a_2818585098_Idx, b_2818585099, opt_2818585100) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585099, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818585099}));
    }
    
    a_2818585098[a_2818585098_Idx] = to_2818585107(b_2818585099);

  
}

function jsonTo_2818585090(b_2818585092, opt_2818585094) {
  var result_2818585095 = [false];

    fromJson_2818585096(result_2818585095, 0, b_2818585092, opt_2818585094);

  return result_2818585095[0];

}

function requestRenderApi_1291855188(HEX3Atmp_1291855153) {
      var Temporary3;

  var result_1291855189 = null;

    result_1291855189 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855153))) {
      Temporary3 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855153, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291855151_1291855159(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym176_1291855195 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291855200 = [mnewString(0)];
    fmtRes_1291855200[0].push.apply(fmtRes_1291855200[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855200, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym176_1291855195 || [],fmtRes_1291855200[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855189;

}

function setHandleInputsScript_1291855203_1291855212(context_1291855213, value_1291855214) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_1291855215 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym182_1291855215)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855208(get_1291854175(rHEX60gensym182_1291855215), context_1291855213, value_1291855214);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet286[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet287), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet288[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855243(HEX3Atmp_1291855205) {
  var result_1291855244 = null;

    result_1291855244 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291855203_1291855212(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855205, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855205, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_1291855255 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291855260 = [mnewString(0)];
    fmtRes_1291855260[0].push.apply(fmtRes_1291855260[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855260, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_1291855255 || [],fmtRes_1291855260[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855244;

}

function setHandleActionsScript_1291855263_1291855272(context_1291855273, value_1291855274) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym192_1291855275 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym192_1291855275)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855268(get_1291854175(rHEX60gensym192_1291855275), context_1291855273, value_1291855274);
  };

  
}

function setHandleActionsApi_1291855303(HEX3Atmp_1291855265) {
  var result_1291855304 = null;

    result_1291855304 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291855263_1291855272(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855265, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855265, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym197_1291855315 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291855320 = [mnewString(0)];
    fmtRes_1291855320[0].push.apply(fmtRes_1291855320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym197_1291855315 || [],fmtRes_1291855320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855304;

}

function setConsumeAllActionsScript_1291855323_1291855332(context_1291855333, value_1291855334) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym202_1291855335 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym202_1291855335)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855328(get_1291854175(rHEX60gensym202_1291855335), context_1291855333, value_1291855334);
  };

  
}

function setConsumeAllActionsApi_1291855363(HEX3Atmp_1291855325) {
  var result_1291855364 = null;

    result_1291855364 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291855323_1291855332(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855325, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855325, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym207_1291855375 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291855380 = [mnewString(0)];
    fmtRes_1291855380[0].push.apply(fmtRes_1291855380[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855380, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym207_1291855375 || [],fmtRes_1291855380[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855364;

}

function setConsumeAllInputScript_1291855383_1291855392(context_1291855393, value_1291855394) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym212_1291855395 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym212_1291855395)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855388(get_1291854175(rHEX60gensym212_1291855395), context_1291855393, value_1291855394);
  };

  
}

function setConsumeAllInputApi_1291855423(HEX3Atmp_1291855385) {
  var result_1291855424 = null;

    result_1291855424 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291855383_1291855392(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855385, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855385, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym217_1291855435 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291855440 = [mnewString(0)];
    fmtRes_1291855440[0].push.apply(fmtRes_1291855440[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855440, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym217_1291855435 || [],fmtRes_1291855440[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855424;

}

function clearWorkspaceCachesScript_1291855520_1291855531() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym225_1291855532 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym225_1291855532)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855525(get_1291854175(rHEX60gensym225_1291855532));
  };

  
}

function clearWorkspaceCachesApi_1291855558(HEX3Atmp_1291855522) {
  var result_1291855559 = null;

    result_1291855559 = newJNull_1627390049();
++excHandler;
    try {
    clearWorkspaceCachesScript_1291855520_1291855531();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym230_1291855560 = [99,108,101,97,114,87,111,114,107,115,112,97,99,101,67,97,99,104,101,115];
    var fmtRes_1291855565 = [mnewString(0)];
    fmtRes_1291855565[0].push.apply(fmtRes_1291855565[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855565, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym230_1291855560 || [],fmtRes_1291855565[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855559;

}

function openGithubWorkspaceScript_1291855572_1291855582(user_1291855583, repository_1291855584, branchOrHash_1291855585) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym236_1291855586 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym236_1291855586)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855577(get_1291854175(rHEX60gensym236_1291855586), user_1291855583, repository_1291855584, branchOrHash_1291855585);
  };

  
}

function openGithubWorkspaceApi_1291855615(HEX3Atmp_1291855574) {
  var result_1291855616 = null;

    result_1291855616 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291855572_1291855582(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855574, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855574, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855574, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym241_1291855632 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855637 = [mnewString(0)];
    fmtRes_1291855637[0].push.apply(fmtRes_1291855637[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855637, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym241_1291855632 || [],fmtRes_1291855637[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855616;

}

function openAbsytreeServerWorkspaceScript_1291855644_1291855652(url_1291855653) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_1291855654 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym245_1291855654)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855649(get_1291854175(rHEX60gensym245_1291855654), url_1291855653);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855681(HEX3Atmp_1291855646) {
  var result_1291855682 = null;

    result_1291855682 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291855644_1291855652(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855646, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym250_1291855688 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855693 = [mnewString(0)];
    fmtRes_1291855693[0].push.apply(fmtRes_1291855693[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855693, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym250_1291855688 || [],fmtRes_1291855693[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855682;

}

function getFlagScript2_1291855696_1291855715(flag_1291855716, default_1291855717) {
  var result_1291855718 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym255_1291855719 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym255_1291855719)) {
      break BeforeRet;
      }
      
    };
    result_1291855718 = getFlag_1291848874(get_1291854175(rHEX60gensym255_1291855719), flag_1291855716, default_1291855717);
  };

  return result_1291855718;

}

function getFlagApi2_1291855748(HEX3Atmp_1291855698) {
      var Temporary4;

  var result_1291855749 = null;

  BeforeRet: {
    result_1291855749 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291855698))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855698, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291855749 = toJson_2818589144(getFlagScript2_1291855696_1291855715(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855698, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym261_1291855764 = [103,101,116,70,108,97,103];
    var fmtRes_1291855769 = [mnewString(0)];
    fmtRes_1291855769[0].push.apply(fmtRes_1291855769[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855769, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym261_1291855764 || [],fmtRes_1291855769[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855749;

}

function setFlagScript2_1291855772_1291855836(flag_1291855837, value_1291855838) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym267_1291855839 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym267_1291855839)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848951(get_1291854175(rHEX60gensym267_1291855839), flag_1291855837, value_1291855838);
  };

  
}

function setFlagApi2_1291855867(HEX3Atmp_1291855774) {
  var result_1291855868 = null;

    result_1291855868 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291855772_1291855836(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855774, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291855774, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym272_1291855879 = [115,101,116,70,108,97,103];
    var fmtRes_1291855884 = [mnewString(0)];
    fmtRes_1291855884[0].push.apply(fmtRes_1291855884[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855884, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym272_1291855879 || [],fmtRes_1291855884[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855868;

}

function toggleFlagScript_1291855893_1291855901(flag_1291855902) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym281_1291855903 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym281_1291855903)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848955(get_1291854175(rHEX60gensym281_1291855903), flag_1291855902);
  };

  
}

function toggleFlagApi_1291855930(HEX3Atmp_1291855895) {
  var result_1291855931 = null;

    result_1291855931 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291855893_1291855901(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855895, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym286_1291855937 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291855942 = [mnewString(0)];
    fmtRes_1291855942[0].push.apply(fmtRes_1291855942[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855942, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym286_1291855937 || [],fmtRes_1291855942[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855931;

}

function setOptionScript_1291855945_1291855993(option_1291855994, value_1291855995) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym291_1291855996 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym291_1291855996)) {
      break BeforeRet;
      }
      
    };
    setOption_1291855950(get_1291854175(rHEX60gensym291_1291855996), option_1291855994, value_1291855995);
  };

  
}

function setOptionApi_1291856024(HEX3Atmp_1291855947) {
  var result_1291856025 = null;

    result_1291856025 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291855945_1291855993(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855947, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291855947, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym296_1291856031 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291856036 = [mnewString(0)];
    fmtRes_1291856036[0].push.apply(fmtRes_1291856036[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856036, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym296_1291856031 || [],fmtRes_1291856036[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856025;

}

function quitScript_1291856044_1291856051() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym304_1291856052 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym304_1291856052)) {
      break BeforeRet;
      }
      
    };
    quit_1291856049(get_1291854175(rHEX60gensym304_1291856052));
  };

  
}

function quitApi_1291856078(HEX3Atmp_1291856046) {
  var result_1291856079 = null;

    result_1291856079 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291856044_1291856051();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym309_1291856080 = [113,117,105,116];
    var fmtRes_1291856085 = [mnewString(0)];
    fmtRes_1291856085[0].push.apply(fmtRes_1291856085[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856085, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym309_1291856080 || [],fmtRes_1291856085[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856079;

}

function changeFontSizeScript_1291856088_1291856096(amount_1291856097) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym313_1291856098 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym313_1291856098)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856093(get_1291854175(rHEX60gensym313_1291856098), amount_1291856097);
  };

  
}

function initFromJson_2818586511(dst_2818586513, dst_2818586513_Idx, jsonNode_2818586514, jsonPath_2818586515, jsonPath_2818586515_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818586514.kind == 4)) {
    var Temporary1 = jsonNode_2818586514;
    if (ConstSet289[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818586520 = NaN;
      dst_2818586513[dst_2818586513_Idx] = b_2818586520;
      break;
    case "inf":
      var b_2818586521 = Infinity;
      dst_2818586513[dst_2818586513_Idx] = b_2818586521;
      break;
    case "-inf":
      var b_2818586522 = -Infinity;
      dst_2818586513[dst_2818586513_Idx] = b_2818586522;
      break;
    default: 
      var Temporary2 = jsonNode_2818586514;
      if (ConstSet290[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818586514, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818586515[jsonPath_2818586515_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet291[jsonNode_2818586514.kind] != undefined))) {
      var msgHEX60gensym400_2818586536 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet292), nimCopy(null, jsonPath_2818586515[jsonPath_2818586515_Idx], NTI33554449), reprEnum(jsonNode_2818586514.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym400_2818586536, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818586514.kind == 3)) {
      var Temporary3 = jsonNode_2818586514;
      if (ConstSet293[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818586513[dst_2818586513_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818586514;
        if (ConstSet294[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818586513[dst_2818586513_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818586500(node_2818586503) {
  var result_2818586505 = [0.0];

    var jsonPath_2818586506 = [[]];
    result_2818586505[0] = 0.0;
    initFromJson_2818586511(result_2818586505, 0, node_2818586503, jsonPath_2818586506, 0);

  return result_2818586505[0];

}

function fromJson_2818586485(a_2818586487, a_2818586487_Idx, b_2818586488, opt_2818586489) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818586488, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818586488}));
    }
    
    a_2818586487[a_2818586487_Idx] = to_2818586500(b_2818586488);

  
}

function jsonTo_2818586479(b_2818586481, opt_2818586483) {
  var result_2818586484 = [0.0];

    fromJson_2818586485(result_2818586484, 0, b_2818586481, opt_2818586483);

  return result_2818586484[0];

}

function changeFontSizeApi_1291856125(HEX3Atmp_1291856090) {
  var result_1291856126 = null;

    result_1291856126 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291856088_1291856096(jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_1291856090, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym318_1291856132 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291856137 = [mnewString(0)];
    fmtRes_1291856137[0].push.apply(fmtRes_1291856137[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856137, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym318_1291856132 || [],fmtRes_1291856137[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856126;

}

function changeLayoutPropScript_1291856140_1291856398(prop_1291856399, change_1291856400) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym323_1291856401 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym323_1291856401)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856145(get_1291854175(rHEX60gensym323_1291856401), prop_1291856399, change_1291856400);
  };

  
}

function changeLayoutPropApi_1291856429(HEX3Atmp_1291856142) {
  var result_1291856430 = null;

    result_1291856430 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291856140_1291856398(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856142, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_1291856142, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym328_1291856441 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291856446 = [mnewString(0)];
    fmtRes_1291856446[0].push.apply(fmtRes_1291856446[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856446, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym328_1291856441 || [],fmtRes_1291856446[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856430;

}

function toggleStatusBarLocationScript_1291856456_1291856463() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym337_1291856464 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym337_1291856464)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856461(get_1291854175(rHEX60gensym337_1291856464));
  };

  
}

function toggleStatusBarLocationApi_1291856490(HEX3Atmp_1291856458) {
  var result_1291856491 = null;

    result_1291856491 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291856456_1291856463();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym342_1291856492 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291856497 = [mnewString(0)];
    fmtRes_1291856497[0].push.apply(fmtRes_1291856497[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856497, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym342_1291856492 || [],fmtRes_1291856497[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856491;

}

function createViewScript_1291856500_1291856512() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym345_1291856513 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym345_1291856513)) {
      break BeforeRet;
      }
      
    };
    createView_1291856505(get_1291854175(rHEX60gensym345_1291856513));
  };

  
}

function createViewApi_1291856539(HEX3Atmp_1291856502) {
  var result_1291856540 = null;

    result_1291856540 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291856500_1291856512();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym350_1291856541 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291856546 = [mnewString(0)];
    fmtRes_1291856546[0].push.apply(fmtRes_1291856546[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856546, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym350_1291856541 || [],fmtRes_1291856546[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856540;

}

function closeCurrentViewScript_1291856554_1291856591() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym353_1291856592 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym353_1291856592)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856559(get_1291854175(rHEX60gensym353_1291856592));
  };

  
}

function closeCurrentViewApi_1291856618(HEX3Atmp_1291856556) {
  var result_1291856619 = null;

    result_1291856619 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291856554_1291856591();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym358_1291856620 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291856625 = [mnewString(0)];
    fmtRes_1291856625[0].push.apply(fmtRes_1291856625[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856625, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym358_1291856620 || [],fmtRes_1291856625[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856619;

}

function moveCurrentViewToTopScript_1291856633_1291856676() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym363_1291856677 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym363_1291856677)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856638(get_1291854175(rHEX60gensym363_1291856677));
  };

  
}

function moveCurrentViewToTopApi_1291856703(HEX3Atmp_1291856635) {
  var result_1291856704 = null;

    result_1291856704 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291856633_1291856676();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym368_1291856705 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291856710 = [mnewString(0)];
    fmtRes_1291856710[0].push.apply(fmtRes_1291856710[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856710, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym368_1291856705 || [],fmtRes_1291856710[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856704;

}

function nextViewScript_1291856714_1291856727() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym374_1291856728 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym374_1291856728)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856719(get_1291854175(rHEX60gensym374_1291856728));
  };

  
}

function nextViewApi_1291856754(HEX3Atmp_1291856716) {
  var result_1291856755 = null;

    result_1291856755 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291856714_1291856727();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym379_1291856756 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291856761 = [mnewString(0)];
    fmtRes_1291856761[0].push.apply(fmtRes_1291856761[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856761, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym379_1291856756 || [],fmtRes_1291856761[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856755;

}

function prevViewScript_1291856764_1291856780() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_1291856781 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym382_1291856781)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856769(get_1291854175(rHEX60gensym382_1291856781));
  };

  
}

function prevViewApi_1291856807(HEX3Atmp_1291856766) {
  var result_1291856808 = null;

    result_1291856808 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291856764_1291856780();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_1291856809 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291856814 = [mnewString(0)];
    fmtRes_1291856814[0].push.apply(fmtRes_1291856814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_1291856809 || [],fmtRes_1291856814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856808;

}

function moveCurrentViewPrevScript_1291856817_1291856847() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym390_1291856848 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym390_1291856848)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856822(get_1291854175(rHEX60gensym390_1291856848));
  };

  
}

function moveCurrentViewPrevApi_1291856874(HEX3Atmp_1291856819) {
  var result_1291856875 = null;

    result_1291856875 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291856817_1291856847();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym395_1291856876 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291856881 = [mnewString(0)];
    fmtRes_1291856881[0].push.apply(fmtRes_1291856881[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856881, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym395_1291856876 || [],fmtRes_1291856881[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856875;

}

function moveCurrentViewNextScript_1291856884_1291856911() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym399_1291856912 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym399_1291856912)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856889(get_1291854175(rHEX60gensym399_1291856912));
  };

  
}

function moveCurrentViewNextApi_1291856938(HEX3Atmp_1291856886) {
  var result_1291856939 = null;

    result_1291856939 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291856884_1291856911();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym404_1291856940 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291856945 = [mnewString(0)];
    fmtRes_1291856945[0].push.apply(fmtRes_1291856945[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856945, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym404_1291856940 || [],fmtRes_1291856945[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856939;

}

function setLayoutScript_1291856948_1291856992(layout_1291856993) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym409_1291856994 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym409_1291856994)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291856953(get_1291854175(rHEX60gensym409_1291856994), layout_1291856993);
  };

  
}

function setLayoutApi_1291857021(HEX3Atmp_1291856950) {
  var result_1291857022 = null;

    result_1291857022 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291856948_1291856992(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856950, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym414_1291857028 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291857033 = [mnewString(0)];
    fmtRes_1291857033[0].push.apply(fmtRes_1291857033[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857033, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym414_1291857028 || [],fmtRes_1291857033[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857022;

}

function commandLineScript_1291857036_1291857048(initialValue_1291857049) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym418_1291857050 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym418_1291857050)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291857041(get_1291854175(rHEX60gensym418_1291857050), initialValue_1291857049);
  };

  
}

function commandLineApi_1291857077(HEX3Atmp_1291857038) {
      var Temporary3;

  var result_1291857078 = null;

    result_1291857078 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857038))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857038, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291857036_1291857048(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym423_1291857084 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857089 = [mnewString(0)];
    fmtRes_1291857089[0].push.apply(fmtRes_1291857089[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857089, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym423_1291857084 || [],fmtRes_1291857089[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857078;

}

function exitCommandLineScript_1291857092_1291857103() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym427_1291857104 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym427_1291857104)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291857097(get_1291854175(rHEX60gensym427_1291857104));
  };

  
}

function exitCommandLineApi_1291857130(HEX3Atmp_1291857094) {
  var result_1291857131 = null;

    result_1291857131 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291857092_1291857103();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym432_1291857132 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857137 = [mnewString(0)];
    fmtRes_1291857137[0].push.apply(fmtRes_1291857137[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857137, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym432_1291857132 || [],fmtRes_1291857137[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857131;

}

function executeCommandLineScript_1291857140_1291857172() {
  var result_1291857173 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym435_1291857174 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym435_1291857174)) {
      break BeforeRet;
      }
      
    };
    result_1291857173 = executeCommandLine_1291857145(get_1291854175(rHEX60gensym435_1291857174));
  };

  return result_1291857173;

}

function executeCommandLineApi_1291857201(HEX3Atmp_1291857142) {
  var result_1291857202 = null;

  BeforeRet: {
    result_1291857202 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857202 = toJson_2818589144(executeCommandLineScript_1291857140_1291857172(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym441_1291857207 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857212 = [mnewString(0)];
    fmtRes_1291857212[0].push.apply(fmtRes_1291857212[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857212, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym441_1291857207 || [],fmtRes_1291857212[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857202;

}

function writeFileScript_1291857248_1291857269(path_1291857270, app_1291857271) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_1291857272 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym452_1291857272)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857253(get_1291854175(rHEX60gensym452_1291857272), path_1291857270, app_1291857271);
  };

  
}

function writeFileApi_1291857300(HEX3Atmp_1291857250) {
      var Temporary3;
      var Temporary5;

  var result_1291857301 = null;

    result_1291857301 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857250))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857250, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291857250))) {
      Temporary5 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291857250, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291857248_1291857269(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_1291857312 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291857317 = [mnewString(0)];
    fmtRes_1291857317[0].push.apply(fmtRes_1291857317[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857317, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_1291857312 || [],fmtRes_1291857317[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857301;

}

function loadFileScript_1291857320_1291857340(path_1291857341) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym466_1291857342 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym466_1291857342)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857325(get_1291854175(rHEX60gensym466_1291857342), path_1291857341);
  };

  
}

function loadFileApi_1291857369(HEX3Atmp_1291857322) {
      var Temporary3;

  var result_1291857370 = null;

    result_1291857370 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857322))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857322, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291857320_1291857340(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym471_1291857376 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291857381 = [mnewString(0)];
    fmtRes_1291857381[0].push.apply(fmtRes_1291857381[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857381, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym471_1291857376 || [],fmtRes_1291857381[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857370;

}

function openFileScript_1291857403_1291857457(path_1291857458, app_1291857459) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_1291857460 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym483_1291857460)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857408(get_1291854175(rHEX60gensym483_1291857460), path_1291857458, app_1291857459);
  };

  
}

function openFileApi_1291857488(HEX3Atmp_1291857405) {
      var Temporary4;

  var result_1291857489 = null;

    result_1291857489 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857405))) {
      Temporary4 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291857405, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291857403_1291857457(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857405, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_1291857500 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291857505 = [mnewString(0)];
    fmtRes_1291857505[0].push.apply(fmtRes_1291857505[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857505, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_1291857500 || [],fmtRes_1291857505[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857489;

}

function removeFromLocalStorageScript_1291857562_1291857585() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857586 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym495_1291857586)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857567(get_1291854175(rHEX60gensym495_1291857586));
  };

  
}

function removeFromLocalStorageApi_1291857612(HEX3Atmp_1291857564) {
  var result_1291857613 = null;

    result_1291857613 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291857562_1291857585();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_1291857614 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291857619 = [mnewString(0)];
    fmtRes_1291857619[0].push.apply(fmtRes_1291857619[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857619, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_1291857614 || [],fmtRes_1291857619[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857613;

}

function loadThemeScript_1291857622_1291857666(name_1291857667) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym506_1291857668 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym506_1291857668)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857627(get_1291854175(rHEX60gensym506_1291857668), name_1291857667);
  };

  
}

function loadThemeApi_1291857695(HEX3Atmp_1291857624) {
  var result_1291857696 = null;

    result_1291857696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291857622_1291857666(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857624, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_1291857702 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291857707 = [mnewString(0)];
    fmtRes_1291857707[0].push.apply(fmtRes_1291857707[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857707, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_1291857702 || [],fmtRes_1291857707[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857696;

}

function chooseThemeScript_1291857710_1291857874() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_1291857875 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym517_1291857875)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857715(get_1291854175(rHEX60gensym517_1291857875));
  };

  
}

function chooseThemeApi_1291857901(HEX3Atmp_1291857712) {
  var result_1291857902 = null;

    result_1291857902 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291857710_1291857874();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_1291857903 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291857908 = [mnewString(0)];
    fmtRes_1291857908[0].push.apply(fmtRes_1291857908[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857908, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_1291857903 || [],fmtRes_1291857908[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857902;

}

function chooseFileScript_1291858176_1291858355(view_1291858356) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym541_1291858357 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym541_1291858357)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858181(get_1291854175(rHEX60gensym541_1291858357), view_1291858356);
  };

  
}

function chooseFileApi_1291858384(HEX3Atmp_1291858178) {
      var Temporary3;

  var result_1291858385 = null;

    result_1291858385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291858178))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858178, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858176_1291858355(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym546_1291858391 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291858396 = [mnewString(0)];
    fmtRes_1291858396[0].push.apply(fmtRes_1291858396[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858396, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym546_1291858391 || [],fmtRes_1291858396[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858385;

}

function setGithubAccessTokenScript_1291858424_1291858432(token_1291858433) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym558_1291858434 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym558_1291858434)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858429(get_1291854175(rHEX60gensym558_1291858434), token_1291858433);
  };

  
}

function setGithubAccessTokenApi_1291858461(HEX3Atmp_1291858426) {
  var result_1291858462 = null;

    result_1291858462 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291858424_1291858432(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858426, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym563_1291858468 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291858473 = [mnewString(0)];
    fmtRes_1291858473[0].push.apply(fmtRes_1291858473[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858473, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym563_1291858468 || [],fmtRes_1291858473[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858462;

}

function reloadConfigScript_1291858476_1291858496() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym566_1291858497 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym566_1291858497)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858481(get_1291854175(rHEX60gensym566_1291858497));
  };

  
}

function reloadConfigApi_1291858523(HEX3Atmp_1291858478) {
  var result_1291858524 = null;

    result_1291858524 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291858476_1291858496();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym571_1291858525 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291858530 = [mnewString(0)];
    fmtRes_1291858530[0].push.apply(fmtRes_1291858530[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858530, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym571_1291858525 || [],fmtRes_1291858530[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858524;

}

function logOptionsScript_1291858533_1291858540() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym576_1291858541 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym576_1291858541)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858538(get_1291854175(rHEX60gensym576_1291858541));
  };

  
}

function logOptionsApi_1291858567(HEX3Atmp_1291858535) {
  var result_1291858568 = null;

    result_1291858568 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291858533_1291858540();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym581_1291858569 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291858574 = [mnewString(0)];
    fmtRes_1291858574[0].push.apply(fmtRes_1291858574[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858574, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym581_1291858569 || [],fmtRes_1291858574[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858568;

}

function clearCommandsScript_1291858577_1291858585(context_1291858586) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym585_1291858587 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym585_1291858587)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858582(get_1291854175(rHEX60gensym585_1291858587), context_1291858586);
  };

  
}

function clearCommandsApi_1291858614(HEX3Atmp_1291858579) {
  var result_1291858615 = null;

    result_1291858615 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291858577_1291858585(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858579, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym590_1291858621 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291858626 = [mnewString(0)];
    fmtRes_1291858626[0].push.apply(fmtRes_1291858626[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858626, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym590_1291858621 || [],fmtRes_1291858626[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858615;

}

function toJson_2818585166(a_2818585168, opt_2818585169) {
  var result_2818585170 = null;

    result_2818585170 = HEX25_1627391779(a_2818585168);

  return result_2818585170;

}

function toJson_1291858897(a_1291858899, opt_1291858900) {
  var result_1291858901 = null;

    result_1291858901 = newJArray_1627390082();
    Label1: {
      var ai_1291858908 = 0;
      var i_536871157 = 0;
      var L_536871158 = (a_1291858899).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871157 < L_536871158)) break Label3;
            ai_1291858908 = a_1291858899[chckIndx(i_536871157, 0, (a_1291858899).length - 1)];
            add_1627390190(result_1291858901, toJson_2818585166(ai_1291858908, opt_1291858900));
            i_536871157 = addInt(i_536871157, 1);
            if (!(((a_1291858899).length == L_536871158))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291858901;

}

function getAllEditorsScript_1291858633_1291858866() {
  var result_1291858867 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym593_1291858868 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym593_1291858868)) {
      break BeforeRet;
      }
      
    };
    result_1291858867 = nimCopy(null, getAllEditors_1291858638(get_1291854175(rHEX60gensym593_1291858868)), NTI1291854534);
  };

  return result_1291858867;

}

function getAllEditorsApi_1291858895(HEX3Atmp_1291858635) {
  var result_1291858896 = null;

  BeforeRet: {
    result_1291858896 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858896 = toJson_1291858897(getAllEditorsScript_1291858633_1291858866(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym599_1291858913 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291858918 = [mnewString(0)];
    fmtRes_1291858918[0].push.apply(fmtRes_1291858918[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858918, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym599_1291858913 || [],fmtRes_1291858918[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858896;

}

function setModeScript22_1291858936_1291858976(mode_1291858977) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym605_1291858978 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym605_1291858978)) {
      break BeforeRet;
      }
      
    };
    setMode_1291858941(get_1291854175(rHEX60gensym605_1291858978), mode_1291858977);
  };

  
}

function setModeApi22_1291859005(HEX3Atmp_1291858938) {
  var result_1291859006 = null;

    result_1291859006 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291858936_1291858976(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858938, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym610_1291859012 = [115,101,116,77,111,100,101];
    var fmtRes_1291859017 = [mnewString(0)];
    fmtRes_1291859017[0].push.apply(fmtRes_1291859017[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859017, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym610_1291859012 || [],fmtRes_1291859017[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859006;

}

function modeScript22_1291859021_1291859029() {
  var result_1291859030 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym616_1291859031 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym616_1291859031)) {
      break BeforeRet;
      }
      
    };
    result_1291859030 = nimCopy(null, mode_1291859026(get_1291854175(rHEX60gensym616_1291859031)), NTI33554449);
  };

  return result_1291859030;

}

function modeApi22_1291859058(HEX3Atmp_1291859023) {
  var result_1291859059 = null;

  BeforeRet: {
    result_1291859059 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859059 = toJson_1811939932(modeScript22_1291859021_1291859029(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym622_1291859064 = [109,111,100,101];
    var fmtRes_1291859069 = [mnewString(0)];
    fmtRes_1291859069[0].push.apply(fmtRes_1291859069[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859069, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym622_1291859064 || [],fmtRes_1291859069[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859059;

}

function getContextWithModeScript22_1291859072_1291859081(context_1291859082) {
  var result_1291859083 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym626_1291859084 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym626_1291859084)) {
      break BeforeRet;
      }
      
    };
    result_1291859083 = nimCopy(null, getContextWithMode_1291859077(get_1291854175(rHEX60gensym626_1291859084), context_1291859082), NTI33554449);
  };

  return result_1291859083;

}

function getContextWithModeApi22_1291859112(HEX3Atmp_1291859074) {
  var result_1291859113 = null;

  BeforeRet: {
    result_1291859113 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859113 = toJson_1811939932(getContextWithModeScript22_1291859072_1291859081(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859074, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_1291859123 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291859128 = [mnewString(0)];
    fmtRes_1291859128[0].push.apply(fmtRes_1291859128[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859128, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_1291859123 || [],fmtRes_1291859128[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859113;

}

function scriptRunActionScript_1291859358_1291859368(action_1291859369, arg_1291859370) {
    scriptRunAction_1291859362(action_1291859369, arg_1291859370);

  
}

function scriptRunActionApi_1291859375(HEX3Atmp_1291859360) {
  var result_1291859376 = null;

    result_1291859376 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291859358_1291859368(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859360, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859360, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym647_1291859387 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291859392 = [mnewString(0)];
    fmtRes_1291859392[0].push.apply(fmtRes_1291859392[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859392, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym647_1291859387 || [],fmtRes_1291859392[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859376;

}

function scriptLogScript_1291859395_1291859406(message_1291859407) {
    scriptLog_1291859399(message_1291859407);

  
}

function scriptLogApi_1291859411(HEX3Atmp_1291859397) {
  var result_1291859412 = null;

    result_1291859412 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291859395_1291859406(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859397, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym654_1291859418 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291859423 = [mnewString(0)];
    fmtRes_1291859423[0].push.apply(fmtRes_1291859423[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859423, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym654_1291859418 || [],fmtRes_1291859423[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859412;

}

function addCommandScriptScript_1291859426_1291859438(context_1291859439, keys_1291859440, action_1291859441, arg_1291859442) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym662_1291859443 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym662_1291859443)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859431(get_1291854175(rHEX60gensym662_1291859443), context_1291859439, keys_1291859440, action_1291859441, arg_1291859442);
  };

  
}

function addCommandScriptApi_1291859473(HEX3Atmp_1291859428) {
      var Temporary6;

  var result_1291859474 = null;

    result_1291859474 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291859428))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859428, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291859426_1291859438(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859428, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859428, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859428, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym667_1291859495 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291859500 = [mnewString(0)];
    fmtRes_1291859500[0].push.apply(fmtRes_1291859500[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859500, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym667_1291859495 || [],fmtRes_1291859500[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859474;

}

function removeCommandScript_1291859509_1291859518(context_1291859519, keys_1291859520) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym673_1291859521 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym673_1291859521)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859514(get_1291854175(rHEX60gensym673_1291859521), context_1291859519, keys_1291859520);
  };

  
}

function removeCommandApi_1291859549(HEX3Atmp_1291859511) {
  var result_1291859550 = null;

    result_1291859550 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291859509_1291859518(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859511, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859511, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym678_1291859561 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291859566 = [mnewString(0)];
    fmtRes_1291859566[0].push.apply(fmtRes_1291859566[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859566, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym678_1291859561 || [],fmtRes_1291859566[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859550;

}

function getActivePopupScript_1291859571_1291859589() {
  var result_1291859590 = 0;

    result_1291859590 = getActivePopup_1291859575();

  return result_1291859590;

}

function getActivePopupApi_1291859594(HEX3Atmp_1291859573) {
  var result_1291859595 = null;

  BeforeRet: {
    result_1291859595 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859595 = toJson_2818585166(getActivePopupScript_1291859571_1291859589(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym685_1291859600 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291859605 = [mnewString(0)];
    fmtRes_1291859605[0].push.apply(fmtRes_1291859605[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859605, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym685_1291859600 || [],fmtRes_1291859605[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859595;

}

function getActiveEditorScript_1291859608_1291859620() {
  var result_1291859621 = 0;

    result_1291859621 = getActiveEditor_1291859612();

  return result_1291859621;

}

function getActiveEditorApi_1291859625(HEX3Atmp_1291859610) {
  var result_1291859626 = null;

  BeforeRet: {
    result_1291859626 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859626 = toJson_2818585166(getActiveEditorScript_1291859608_1291859620(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym693_1291859631 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291859636 = [mnewString(0)];
    fmtRes_1291859636[0].push.apply(fmtRes_1291859636[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859636, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym693_1291859631 || [],fmtRes_1291859636[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859626;

}

function loadCurrentConfigScript_1291859682_1291859694() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym705_1291859695 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym705_1291859695)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859687(get_1291854175(rHEX60gensym705_1291859695));
  };

  
}

function loadCurrentConfigApi_1291859721(HEX3Atmp_1291859684) {
  var result_1291859722 = null;

    result_1291859722 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291859682_1291859694();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym710_1291859723 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291859728 = [mnewString(0)];
    fmtRes_1291859728[0].push.apply(fmtRes_1291859728[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859728, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym710_1291859723 || [],fmtRes_1291859728[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859722;

}

function sourceCurrentDocumentScript_1291859731_1291859761() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym713_1291859762 = getEditor_1291854101();
      if (isNone_1291854155(rHEX60gensym713_1291859762)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859736(get_1291854175(rHEX60gensym713_1291859762));
  };

  
}

function sourceCurrentDocumentApi_1291859788(HEX3Atmp_1291859733) {
  var result_1291859789 = null;

    result_1291859789 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291859731_1291859761();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym718_1291859790 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291859795 = [mnewString(0)];
    fmtRes_1291859795[0].push.apply(fmtRes_1291859795[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859795, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym718_1291859790 || [],fmtRes_1291859795[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859789;

}

function getEditorScript_1291859798_1291859811(index_1291859812) {
  var result_1291859813 = 0;

    result_1291859813 = getEditor_1291859802(index_1291859812);

  return result_1291859813;

}

function getEditorApi_1291859818(HEX3Atmp_1291859800) {
  var result_1291859819 = null;

  BeforeRet: {
    result_1291859819 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859819 = toJson_2818585166(getEditorScript_1291859798_1291859811(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859800, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym728_1291859829 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291859834 = [mnewString(0)];
    fmtRes_1291859834[0].push.apply(fmtRes_1291859834[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859834, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym728_1291859829 || [],fmtRes_1291859834[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859819;

}

function scriptIsTextEditorScript_1291859837_1291859879(editorId_1291859880) {
  var result_1291859881 = false;

    result_1291859881 = scriptIsTextEditor_1291859841(editorId_1291859880);

  return result_1291859881;

}

function scriptIsTextEditorApi_1291859886(HEX3Atmp_1291859839) {
  var result_1291859887 = null;

  BeforeRet: {
    result_1291859887 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859887 = toJson_2818589144(scriptIsTextEditorScript_1291859837_1291859879(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859839, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym737_1291859897 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291859902 = [mnewString(0)];
    fmtRes_1291859902[0].push.apply(fmtRes_1291859902[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859902, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym737_1291859897 || [],fmtRes_1291859902[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859887;

}

function scriptIsAstEditorScript_1291859906_1291859948(editorId_1291859949) {
  var result_1291859950 = false;

    result_1291859950 = scriptIsAstEditor_1291859910(editorId_1291859949);

  return result_1291859950;

}

function scriptIsAstEditorApi_1291859955(HEX3Atmp_1291859908) {
  var result_1291859956 = null;

  BeforeRet: {
    result_1291859956 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859956 = toJson_2818589144(scriptIsAstEditorScript_1291859906_1291859948(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859908, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym746_1291859966 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291859971 = [mnewString(0)];
    fmtRes_1291859971[0].push.apply(fmtRes_1291859971[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859971, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym746_1291859966 || [],fmtRes_1291859971[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859956;

}

function scriptRunActionForScript_1291859974_1291860041(editorId_1291860042, action_1291860043, arg_1291860044) {
    scriptRunActionFor_1291859978(editorId_1291860042, action_1291860043, arg_1291860044);

  
}

function scriptRunActionForApi_1291860050(HEX3Atmp_1291859976) {
  var result_1291860051 = null;

    result_1291860051 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291859974_1291860041(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291859976, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859976, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859976, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym756_1291860067 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291860072 = [mnewString(0)];
    fmtRes_1291860072[0].push.apply(fmtRes_1291860072[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860072, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym756_1291860067 || [],fmtRes_1291860072[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860051;

}

function scriptInsertTextIntoScript_1291860075_1291860113(editorId_1291860114, text_1291860115) {
    scriptInsertTextInto_1291860079(editorId_1291860114, text_1291860115);

  
}

function scriptInsertTextIntoApi_1291860120(HEX3Atmp_1291860077) {
  var result_1291860121 = null;

    result_1291860121 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291860075_1291860113(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860077, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860077, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_1291860132 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291860137 = [mnewString(0)];
    fmtRes_1291860137[0].push.apply(fmtRes_1291860137[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860137, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_1291860132 || [],fmtRes_1291860137[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860121;

}

function toJson_2818585153(a_2818585155, opt_2818585156) {
  var result_2818585157 = null;

    result_2818585157 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585157, [108,105,110,101], toJson_2818585166(a_2818585155["Field0"], opt_2818585156));
    HEX5BHEX5DHEX3D_1627391903(result_2818585157, [99,111,108,117,109,110], toJson_2818585166(a_2818585155["Field1"], opt_2818585156));

  return result_2818585157;

}

function toJson_2818585140(a_2818585142, opt_2818585143) {
  var result_2818585144 = null;

    result_2818585144 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818585144, [102,105,114,115,116], toJson_2818585153(a_2818585142["Field0"], opt_2818585143));
    HEX5BHEX5DHEX3D_1627391903(result_2818585144, [108,97,115,116], toJson_2818585153(a_2818585142["Field1"], opt_2818585143));

  return result_2818585144;

}

function scriptTextEditorSelectionScript_1291860140_1291860183(editorId_1291860184) {
  var result_1291860185 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860185 = nimCopy(result_1291860185, scriptTextEditorSelection_1291860144(editorId_1291860184), NTI2449473547);

  return result_1291860185;

}

function scriptTextEditorSelectionApi_1291860190(HEX3Atmp_1291860142) {
  var result_1291860191 = null;

  BeforeRet: {
    result_1291860191 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860191 = toJson_2818585140(scriptTextEditorSelectionScript_1291860140_1291860183(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860142, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_1291860201 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860206 = [mnewString(0)];
    fmtRes_1291860206[0].push.apply(fmtRes_1291860206[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860206, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_1291860201 || [],fmtRes_1291860206[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860191;

}

function scriptSetTextEditorSelectionScript_1291860213_1291860255(editorId_1291860256, selection_1291860257) {
    scriptSetTextEditorSelection_1291860217(editorId_1291860256, selection_1291860257);

  
}

function fromJson_2818584951(a_2818584953, b_2818584954, opt_2818584955) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584954, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584954}));
    }
    
    if (!((b_2818584954.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584954.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584981 = 0;
    var numMatchedHEX60gensym25_2818584982 = 0;
    numHEX60gensym25_2818584981 = addInt(numHEX60gensym25_2818584981, 1);
    if (hasKey_1627393154(b_2818584954, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584982 = addInt(numMatchedHEX60gensym25_2818584982, 1);
    fromJson_2818584054(a_2818584953, "Field0", HEX5BHEX5D_1627393037(b_2818584954, [108,105,110,101]), opt_2818584955);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584981 = addInt(numHEX60gensym25_2818584981, 1);
    if (hasKey_1627393154(b_2818584954, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584982 = addInt(numMatchedHEX60gensym25_2818584982, 1);
    fromJson_2818584054(a_2818584953, "Field1", HEX5BHEX5D_1627393037(b_2818584954, [99,111,108,117,109,110]), opt_2818584955);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
      }
      
    }
    }
    if ((opt_2818584955.allowExtraKeys && opt_2818584955.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584955.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982);
    }
    else {
    if (opt_2818584955.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584954) == numMatchedHEX60gensym25_2818584982);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584954) == numHEX60gensym25_2818584981) && (numHEX60gensym25_2818584981 == numMatchedHEX60gensym25_2818584982));
    }
    }}
    var okHEX60gensym25_2818585043 = Temporary1;
    if (!(okHEX60gensym25_2818585043)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584954)), HEX24_369098760(numHEX60gensym25_2818584981), [67,117,114,115,111,114], pretty_1627394477(b_2818584954, 2)]));
    }
    

  
}

function fromJson_2818584897(a_2818584899, b_2818584900, opt_2818584901) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584900, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584900}));
    }
    
    if (!((b_2818584900.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584900.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584927 = 0;
    var numMatchedHEX60gensym25_2818584928 = 0;
    numHEX60gensym25_2818584927 = addInt(numHEX60gensym25_2818584927, 1);
    if (hasKey_1627393154(b_2818584900, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584928 = addInt(numMatchedHEX60gensym25_2818584928, 1);
    fromJson_2818584951(a_2818584899["Field0"], HEX5BHEX5D_1627393037(b_2818584900, [102,105,114,115,116]), opt_2818584901);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584927 = addInt(numHEX60gensym25_2818584927, 1);
    if (hasKey_1627393154(b_2818584900, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584928 = addInt(numMatchedHEX60gensym25_2818584928, 1);
    fromJson_2818584951(a_2818584899["Field1"], HEX5BHEX5D_1627393037(b_2818584900, [108,97,115,116]), opt_2818584901);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
      }
      
    }
    }
    if ((opt_2818584901.allowExtraKeys && opt_2818584901.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584901.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928);
    }
    else {
    if (opt_2818584901.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584900) == numMatchedHEX60gensym25_2818584928);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584900) == numHEX60gensym25_2818584927) && (numHEX60gensym25_2818584927 == numMatchedHEX60gensym25_2818584928));
    }
    }}
    var okHEX60gensym25_2818585081 = Temporary1;
    if (!(okHEX60gensym25_2818585081)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584900)), HEX24_369098760(numHEX60gensym25_2818584927), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584900, 2)]));
    }
    

  
}

function jsonTo_2818586097(b_2818586099, opt_2818586101) {
  var result_2818586102 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584897(result_2818586102[0], b_2818586099, opt_2818586101);

  return result_2818586102[0];

}

function scriptSetTextEditorSelectionApi_1291860262(HEX3Atmp_1291860215) {
  var result_1291860263 = null;

    result_1291860263 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291860213_1291860255(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860215, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586097(HEX5BHEX5D_1627393116(HEX3Atmp_1291860215, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym784_1291860274 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860279 = [mnewString(0)];
    fmtRes_1291860279[0].push.apply(fmtRes_1291860279[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860279, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym784_1291860274 || [],fmtRes_1291860279[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860263;

}

function toJson_2818585128(a_2818585130, opt_2818585131) {
  var result_2818585132 = null;

    result_2818585132 = newJArray_1627390082();
    Label1: {
      var ai_2818585139 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871192 = 0;
      var L_536871193 = (a_2818585130).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871192 < L_536871193)) break Label3;
            ai_2818585139 = a_2818585130[chckIndx(i_536871192, 0, (a_2818585130).length - 1)];
            add_1627390190(result_2818585132, toJson_2818585140(ai_2818585139, opt_2818585131));
            i_536871192 = addInt(i_536871192, 1);
            if (!(((a_2818585130).length == L_536871193))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818585132;

}

function scriptTextEditorSelectionsScript_1291860282_1291860333(editorId_1291860334) {
  var result_1291860335 = [];

    result_1291860335 = nimCopy(null, scriptTextEditorSelections_1291860286(editorId_1291860334), NTI1291855851);

  return result_1291860335;

}

function scriptTextEditorSelectionsApi_1291860340(HEX3Atmp_1291860284) {
  var result_1291860341 = null;

  BeforeRet: {
    result_1291860341 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860341 = toJson_2818585128(scriptTextEditorSelectionsScript_1291860282_1291860333(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860284, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym793_1291860351 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860356 = [mnewString(0)];
    fmtRes_1291860356[0].push.apply(fmtRes_1291860356[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860356, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym793_1291860351 || [],fmtRes_1291860356[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860341;

}

function scriptSetTextEditorSelectionsScript_1291860359_1291860401(editorId_1291860402, selections_1291860403) {
    scriptSetTextEditorSelections_1291860363(editorId_1291860402, selections_1291860403);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet295[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818584842(a_2818584844, a_2818584844_Idx, b_2818584845, opt_2818584846) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584845, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818584845}));
    }
    
    if (a_2818584844[a_2818584844_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818584845), 0, 2147483647), Temporary1)) { for (var i = a_2818584844[a_2818584844_Idx].length ; i < Temporary1 ; ++i) a_2818584844[a_2818584844_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818584844[a_2818584844_Idx].length = Temporary1; };
    Label2: {
      var i_2818584895 = 0;
      var val_2818584896 = null;
      var colontmp__536871198 = [];
      colontmp__536871198 = getElems_1627390175(b_2818584845, []);
      var i_536871200 = 0;
      var L_536871201 = (colontmp__536871198).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871200 < L_536871201)) break Label4;
            i_2818584895 = i_536871200;
            val_2818584896 = colontmp__536871198[chckIndx(i_536871200, 0, (colontmp__536871198).length - 1)];
            fromJson_2818584897(a_2818584844[a_2818584844_Idx][chckIndx(i_2818584895, 0, (a_2818584844[a_2818584844_Idx]).length - 1)], val_2818584896, opt_2818584846);
            i_536871200 = addInt(i_536871200, 1);
            if (!(((colontmp__536871198).length == L_536871201))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818584836(b_2818584838, opt_2818584840) {
  var result_2818584841 = [[]];

    fromJson_2818584842(result_2818584841, 0, b_2818584838, opt_2818584840);

  return result_2818584841[0];

}

function scriptSetTextEditorSelectionsApi_1291860408(HEX3Atmp_1291860361) {
  var result_1291860409 = null;

    result_1291860409 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291860359_1291860401(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860361, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_1291860361, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym802_1291860420 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860425 = [mnewString(0)];
    fmtRes_1291860425[0].push.apply(fmtRes_1291860425[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860425, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym802_1291860420 || [],fmtRes_1291860425[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860409;

}

function scriptGetTextEditorLineScript_1291860428_1291860475(editorId_1291860476, line_1291860477) {
  var result_1291860478 = [];

    result_1291860478 = nimCopy(null, scriptGetTextEditorLine_1291860432(editorId_1291860476, line_1291860477), NTI33554449);

  return result_1291860478;

}

function scriptGetTextEditorLineApi_1291860484(HEX3Atmp_1291860430) {
  var result_1291860485 = null;

  BeforeRet: {
    result_1291860485 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860485 = toJson_1811939932(scriptGetTextEditorLineScript_1291860428_1291860475(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860430, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860430, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym812_1291860500 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291860505 = [mnewString(0)];
    fmtRes_1291860505[0].push.apply(fmtRes_1291860505[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860505, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym812_1291860500 || [],fmtRes_1291860505[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860485;

}

function scriptGetTextEditorLineCountScript_1291860508_1291860554(editorId_1291860555) {
  var result_1291860556 = 0;

    result_1291860556 = scriptGetTextEditorLineCount_1291860512(editorId_1291860555);

  return result_1291860556;

}

function scriptGetTextEditorLineCountApi_1291860561(HEX3Atmp_1291860510) {
  var result_1291860562 = null;

  BeforeRet: {
    result_1291860562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860562 = toJson_2818585166(scriptGetTextEditorLineCountScript_1291860508_1291860554(jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860510, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_1291860572 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291860577 = [mnewString(0)];
    fmtRes_1291860577[0].push.apply(fmtRes_1291860577[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860577, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_1291860572 || [],fmtRes_1291860577[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860562;

}

function scriptGetOptionIntScript_1291860591_1291860607(path_1291860608, default_1291860609) {
  var result_1291860610 = 0;

    result_1291860610 = scriptGetOptionInt_1291860595(path_1291860608, default_1291860609);

  return result_1291860610;

}

function scriptGetOptionIntApi_1291860616(HEX3Atmp_1291860593) {
  var result_1291860617 = null;

  BeforeRet: {
    result_1291860617 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860617 = toJson_2818585166(scriptGetOptionIntScript_1291860591_1291860607(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860593, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860593, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_1291860632 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860637 = [mnewString(0)];
    fmtRes_1291860637[0].push.apply(fmtRes_1291860637[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860637, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_1291860632 || [],fmtRes_1291860637[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860617;

}

function scriptGetOptionFloatScript_1291860641_1291860657(path_1291860658, default_1291860659) {
  var result_1291860660 = 0.0;

    result_1291860660 = scriptGetOptionFloat_1291860645(path_1291860658, default_1291860659);

  return result_1291860660;

}

function initFromJson_1291860705(dst_1291860707, dst_1291860707_Idx, jsonNode_1291860708, jsonPath_1291860709, jsonPath_1291860709_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860708.kind == 4)) {
    var Temporary1 = jsonNode_1291860708;
    if (ConstSet296[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860714 = NaN;
      dst_1291860707[dst_1291860707_Idx] = b_1291860714;
      break;
    case "inf":
      var b_1291860715 = Infinity;
      dst_1291860707[dst_1291860707_Idx] = b_1291860715;
      break;
    case "-inf":
      var b_1291860716 = -Infinity;
      dst_1291860707[dst_1291860707_Idx] = b_1291860716;
      break;
    default: 
      var Temporary2 = jsonNode_1291860708;
      if (ConstSet297[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860708, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860709[jsonPath_1291860709_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet298[jsonNode_1291860708.kind] != undefined))) {
      var msgHEX60gensym846_1291860730 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet299), nimCopy(null, jsonPath_1291860709[jsonPath_1291860709_Idx], NTI33554449), reprEnum(jsonNode_1291860708.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym846_1291860730, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860708.kind == 3)) {
      var Temporary3 = jsonNode_1291860708;
      if (ConstSet300[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860707[dst_1291860707_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860708;
        if (ConstSet301[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860707[dst_1291860707_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860694(node_1291860697) {
  var result_1291860699 = [0.0];

    var jsonPath_1291860700 = [[]];
    result_1291860699[0] = 0.0;
    initFromJson_1291860705(result_1291860699, 0, node_1291860697, jsonPath_1291860700, 0);

  return result_1291860699[0];

}

function fromJson_1291860679(a_1291860681, a_1291860681_Idx, b_1291860682, opt_1291860683) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860682, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860682}));
    }
    
    a_1291860681[a_1291860681_Idx] = to_1291860694(b_1291860682);

  
}

function jsonTo_1291860673(b_1291860675, opt_1291860677) {
  var result_1291860678 = [0.0];

    fromJson_1291860679(result_1291860678, 0, b_1291860675, opt_1291860677);

  return result_1291860678[0];

}

function scriptGetOptionFloatApi_1291860666(HEX3Atmp_1291860643) {
  var result_1291860667 = null;

  BeforeRet: {
    result_1291860667 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860667 = toJson_1291854837(scriptGetOptionFloatScript_1291860641_1291860657(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860643, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860673(HEX5BHEX5D_1627393116(HEX3Atmp_1291860643, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym842_1291860740 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860745 = [mnewString(0)];
    fmtRes_1291860745[0].push.apply(fmtRes_1291860745[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860745, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym842_1291860740 || [],fmtRes_1291860745[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860667;

}

function scriptGetOptionBoolScript_1291860749_1291860765(path_1291860766, default_1291860767) {
  var result_1291860768 = false;

    result_1291860768 = scriptGetOptionBool_1291860753(path_1291860766, default_1291860767);

  return result_1291860768;

}

function scriptGetOptionBoolApi_1291860774(HEX3Atmp_1291860751) {
  var result_1291860775 = null;

  BeforeRet: {
    result_1291860775 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860775 = toJson_2818589144(scriptGetOptionBoolScript_1291860749_1291860765(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860751, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291860751, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym858_1291860790 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291860795 = [mnewString(0)];
    fmtRes_1291860795[0].push.apply(fmtRes_1291860795[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860795, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym858_1291860790 || [],fmtRes_1291860795[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860775;

}

function scriptGetOptionStringScript_1291860799_1291860815(path_1291860816, default_1291860817) {
  var result_1291860818 = [];

    result_1291860818 = nimCopy(null, scriptGetOptionString_1291860803(path_1291860816, default_1291860817), NTI33554449);

  return result_1291860818;

}

function scriptGetOptionStringApi_1291860824(HEX3Atmp_1291860801) {
  var result_1291860825 = null;

  BeforeRet: {
    result_1291860825 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860825 = toJson_1811939932(scriptGetOptionStringScript_1291860799_1291860815(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860801, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860801, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym868_1291860840 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291860845 = [mnewString(0)];
    fmtRes_1291860845[0].push.apply(fmtRes_1291860845[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860845, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym868_1291860840 || [],fmtRes_1291860845[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860825;

}

function scriptSetOptionIntScript_1291860849_1291860898(path_1291860899, value_1291860900) {
    scriptSetOptionInt_1291860853(path_1291860899, value_1291860900);

  
}

function scriptSetOptionIntApi_1291860905(HEX3Atmp_1291860851) {
  var result_1291860906 = null;

    result_1291860906 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291860849_1291860898(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860851, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291860851, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym877_1291860917 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860922 = [mnewString(0)];
    fmtRes_1291860922[0].push.apply(fmtRes_1291860922[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860922, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym877_1291860917 || [],fmtRes_1291860922[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860906;

}

function scriptSetOptionFloatScript_1291860931_1291860980(path_1291860981, value_1291860982) {
    scriptSetOptionFloat_1291860935(path_1291860981, value_1291860982);

  
}

function scriptSetOptionFloatApi_1291860987(HEX3Atmp_1291860933) {
  var result_1291860988 = null;

    result_1291860988 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291860931_1291860980(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860933, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860673(HEX5BHEX5D_1627393116(HEX3Atmp_1291860933, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym891_1291860999 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291861004 = [mnewString(0)];
    fmtRes_1291861004[0].push.apply(fmtRes_1291861004[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861004, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym891_1291860999 || [],fmtRes_1291861004[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860988;

}

function scriptSetOptionBoolScript_1291861013_1291861062(path_1291861063, value_1291861064) {
    scriptSetOptionBool_1291861017(path_1291861063, value_1291861064);

  
}

function scriptSetOptionBoolApi_1291861069(HEX3Atmp_1291861015) {
  var result_1291861070 = null;

    result_1291861070 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291861013_1291861062(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861015, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_1291861015, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_1291861081 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861086 = [mnewString(0)];
    fmtRes_1291861086[0].push.apply(fmtRes_1291861086[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861086, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_1291861081 || [],fmtRes_1291861086[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861070;

}

function scriptSetOptionStringScript_1291861095_1291861144(path_1291861145, value_1291861146) {
    scriptSetOptionString_1291861099(path_1291861145, value_1291861146);

  
}

function scriptSetOptionStringApi_1291861151(HEX3Atmp_1291861097) {
  var result_1291861152 = null;

    result_1291861152 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291861095_1291861144(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861097, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861097, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym919_1291861163 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861168 = [mnewString(0)];
    fmtRes_1291861168[0].push.apply(fmtRes_1291861168[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861168, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym919_1291861163 || [],fmtRes_1291861168[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861152;

}

function scriptSetCallbackScript_1291861177_1291861233(path_1291861234, id_1291861235) {
    scriptSetCallback_1291861181(path_1291861234, id_1291861235);

  
}

function scriptSetCallbackApi_1291861240(HEX3Atmp_1291861179) {
  var result_1291861241 = null;

    result_1291861241 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291861177_1291861233(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861179, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_1291861179, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym933_1291861252 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291861257 = [mnewString(0)];
    fmtRes_1291861257[0].push.apply(fmtRes_1291861257[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861257, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym933_1291861252 || [],fmtRes_1291861257[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861241;

}

function dispatch_1291861268(command_1291861267, arg_1291861266) {
    var Temporary1;

  var result_1291861270 = ({val: null});

    switch (toJSStr(command_1291861267)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818593612(getBackendApi_1291854200(arg_1291861266));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818593612(saveAppStateApi_1291855090(arg_1291861266));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818593612(requestRenderApi_1291855188(arg_1291861266));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818593612(setHandleInputsApi_1291855243(arg_1291861266));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818593612(setHandleActionsApi_1291855303(arg_1291861266));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818593612(setConsumeAllActionsApi_1291855363(arg_1291861266));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818593612(setConsumeAllInputApi_1291855423(arg_1291861266));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2818593612(clearWorkspaceCachesApi_1291855558(arg_1291861266));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818593612(openGithubWorkspaceApi_1291855615(arg_1291861266));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818593612(openAbsytreeServerWorkspaceApi_1291855681(arg_1291861266));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593612(getFlagApi2_1291855748(arg_1291861266));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593612(setFlagApi2_1291855867(arg_1291861266));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818593612(toggleFlagApi_1291855930(arg_1291861266));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818593612(setOptionApi_1291856024(arg_1291861266));
      break;
    case "quit":
      Temporary1 = some_2818593612(quitApi_1291856078(arg_1291861266));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818593612(changeFontSizeApi_1291856125(arg_1291861266));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818593612(changeLayoutPropApi_1291856429(arg_1291861266));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818593612(toggleStatusBarLocationApi_1291856490(arg_1291861266));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818593612(createViewApi_1291856539(arg_1291861266));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818593612(closeCurrentViewApi_1291856618(arg_1291861266));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818593612(moveCurrentViewToTopApi_1291856703(arg_1291861266));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818593612(nextViewApi_1291856754(arg_1291861266));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818593612(prevViewApi_1291856807(arg_1291861266));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818593612(moveCurrentViewPrevApi_1291856874(arg_1291861266));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818593612(moveCurrentViewNextApi_1291856938(arg_1291861266));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818593612(setLayoutApi_1291857021(arg_1291861266));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818593612(commandLineApi_1291857077(arg_1291861266));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818593612(exitCommandLineApi_1291857130(arg_1291861266));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818593612(executeCommandLineApi_1291857201(arg_1291861266));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818593612(writeFileApi_1291857300(arg_1291861266));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818593612(loadFileApi_1291857369(arg_1291861266));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818593612(openFileApi_1291857488(arg_1291861266));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818593612(removeFromLocalStorageApi_1291857612(arg_1291861266));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818593612(loadThemeApi_1291857695(arg_1291861266));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818593612(chooseThemeApi_1291857901(arg_1291861266));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818593612(chooseFileApi_1291858384(arg_1291861266));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818593612(setGithubAccessTokenApi_1291858461(arg_1291861266));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818593612(reloadConfigApi_1291858523(arg_1291861266));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818593612(logOptionsApi_1291858567(arg_1291861266));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818593612(clearCommandsApi_1291858614(arg_1291861266));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818593612(getAllEditorsApi_1291858895(arg_1291861266));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi22_1291859005(arg_1291861266));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi22_1291859058(arg_1291861266));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi22_1291859112(arg_1291861266));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818593612(scriptRunActionApi_1291859375(arg_1291861266));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818593612(scriptLogApi_1291859411(arg_1291861266));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818593612(addCommandScriptApi_1291859473(arg_1291861266));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818593612(removeCommandApi_1291859549(arg_1291861266));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818593612(getActivePopupApi_1291859594(arg_1291861266));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818593612(getActiveEditorApi_1291859625(arg_1291861266));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818593612(loadCurrentConfigApi_1291859721(arg_1291861266));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818593612(sourceCurrentDocumentApi_1291859788(arg_1291861266));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818593612(getEditorApi_1291859818(arg_1291861266));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818593612(scriptIsTextEditorApi_1291859886(arg_1291861266));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818593612(scriptIsAstEditorApi_1291859955(arg_1291861266));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818593612(scriptRunActionForApi_1291860050(arg_1291861266));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818593612(scriptInsertTextIntoApi_1291860120(arg_1291861266));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818593612(scriptTextEditorSelectionApi_1291860190(arg_1291861266));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818593612(scriptSetTextEditorSelectionApi_1291860262(arg_1291861266));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818593612(scriptTextEditorSelectionsApi_1291860340(arg_1291861266));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818593612(scriptSetTextEditorSelectionsApi_1291860408(arg_1291861266));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818593612(scriptGetTextEditorLineApi_1291860484(arg_1291861266));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818593612(scriptGetTextEditorLineCountApi_1291860561(arg_1291861266));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818593612(scriptGetOptionIntApi_1291860616(arg_1291861266));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818593612(scriptGetOptionFloatApi_1291860666(arg_1291861266));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818593612(scriptGetOptionBoolApi_1291860774(arg_1291861266));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818593612(scriptGetOptionStringApi_1291860824(arg_1291861266));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818593612(scriptSetOptionIntApi_1291860905(arg_1291861266));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818593612(scriptSetOptionFloatApi_1291860987(arg_1291861266));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818593612(scriptSetOptionBoolApi_1291861069(arg_1291861266));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818593612(scriptSetOptionStringApi_1291861151(arg_1291861266));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818593612(scriptSetCallbackApi_1291861240(arg_1291861266));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_1291861270 = nimCopy(result_1291861270, Temporary1, NTI2818585760);

  return result_1291861270;

}

function handleAction_1291848870(self_1291848871, action_1291848872, arg_1291848873) {
  var result_1291861497 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848872, NTI33554449), nimCopy(null, arg_1291848873, NTI33554449)])]);
    var args_1291861498 = newJArray_1627390082();
    Label1: {
      var a_1291861499 = null;
      var colontmp__536871079 = null;
      colontmp__536871079 = newStringStream_1660945417(arg_1291848873);
      var p_536871080 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871080[0], colontmp__536871079, [], false);
      try {
      var _ = getTok_1694499270(p_536871080[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871080[0].tok == 1))) break Label4;
            a_1291861499 = parseJson_1627395211(p_536871080[0], false, false, 0);
            add_1627390190(args_1291861498, a_1291861499);
          }
      };
      } finally {
      close_1694498967(p_536871080[0]);
      }
    };
++excHandler;
    try {
    if (handleGlobalAction_2751463463(self_1291848871.scriptContext, action_1291848872, args_1291861498)) {
    result_1291861497 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861504 = [mnewString(0)];
    fmtRes_1291861504[0].push.apply(fmtRes_1291861504[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861504, 0, action_1291848872, []);
    fmtRes_1291861504[0].push.apply(fmtRes_1291861504[0], [32]);;
    formatValue_721420459(fmtRes_1291861504, 0, arg_1291848873, []);
    fmtRes_1291861504[0].push.apply(fmtRes_1291861504[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861504, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861504[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861497 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291861497 = isSome_2818593879(dispatch_1291861268(action_1291848872, args_1291861498));
    break BeforeRet;
  };

  return result_1291861497;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet302[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853194(s_1291853196) {
    var Temporary1;

  var result_1291853197 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853196))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853196 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853197 = Temporary1;

  return result_1291853197;

}

function fromJson_1291853182(a_1291853184, a_1291853184_Idx, b_1291853185, opt_1291853186) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853185, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853185}));
    }
    
    switch (b_1291853185.kind) {
    case 2:
      a_1291853184[a_1291853184_Idx] = chckRange(getBiggestInt_1627390129(b_1291853185, 0), 0, 2);
      break;
    case 4:
      a_1291853184[a_1291853184_Idx] = parseEnum_1291853194(getStr_1627390106(b_1291853185, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853232 = [mnewString(0)];
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853232[0].push.apply(fmtRes_1291853232[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853232, 0, pretty_1627394477(b_1291853185, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853232[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853297(a_1291853299, a_1291853299_Idx, b_1291853300, opt_1291853301) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853300, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853300}));
    }
    
    a_1291853299[a_1291853299_Idx] = b_1291853300;

  
}

function fromJson_1291853124(a_1291853126, b_1291853127, opt_1291853128) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853127, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853127}));
    }
    
    if (!((b_1291853127.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853127.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853163 = 0;
    var numMatchedHEX60gensym16_1291853164 = 0;
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853182(a_1291853126, "kind", HEX5BHEX5D_1627393037(b_1291853127, [107,105,110,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [105,100])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "id", HEX5BHEX5D_1627393037(b_1291853127, [105,100]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1811939890(a_1291853126, "name", HEX5BHEX5D_1627393037(b_1291853127, [110,97,109,101]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853163 = addInt(numHEX60gensym16_1291853163, 1);
    if (hasKey_1627393154(b_1291853127, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853164 = addInt(numMatchedHEX60gensym16_1291853164, 1);
    fromJson_1291853297(a_1291853126, "settings", HEX5BHEX5D_1627393037(b_1291853127, [115,101,116,116,105,110,103,115]), opt_1291853128);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
      }
      
    }
    }
    if ((opt_1291853128.allowExtraKeys && opt_1291853128.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853128.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164);
    }
    else {
    if (opt_1291853128.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853127) == numMatchedHEX60gensym16_1291853164);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853127) == numHEX60gensym16_1291853163) && (numHEX60gensym16_1291853163 == numMatchedHEX60gensym16_1291853164));
    }
    }}
    var okHEX60gensym16_1291853320 = Temporary1;
    if (!(okHEX60gensym16_1291853320)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853127)), HEX24_369098760(numHEX60gensym16_1291853163), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853127, 2)]));
    }
    

  
}

function fromJson_1291853096(a_1291853098, a_1291853098_Idx, b_1291853099, opt_1291853100) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853099, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853099}));
    }
    
    if (a_1291853098[a_1291853098_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853099), 0, 2147483647), Temporary1)) { for (var i = a_1291853098[a_1291853098_Idx].length ; i < Temporary1 ; ++i) a_1291853098[a_1291853098_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853098[a_1291853098_Idx].length = Temporary1; };
    Label2: {
      var i_1291853122 = 0;
      var val_1291853123 = null;
      var colontmp__536871225 = [];
      colontmp__536871225 = getElems_1627390175(b_1291853099, []);
      var i_536871226 = 0;
      var L_536871227 = (colontmp__536871225).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871226 < L_536871227)) break Label4;
            i_1291853122 = i_536871226;
            val_1291853123 = colontmp__536871225[chckIndx(i_536871226, 0, (colontmp__536871225).length - 1)];
            fromJson_1291853124(a_1291853098[a_1291853098_Idx][chckIndx(i_1291853122, 0, (a_1291853098[a_1291853098_Idx]).length - 1)], val_1291853123, opt_1291853100);
            i_536871226 = addInt(i_536871226, 1);
            if (!(((colontmp__536871225).length == L_536871227))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853369(a_1291853371, b_1291853372, opt_1291853373) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853372, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853372}));
    }
    
    if (!((b_1291853372.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853372.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853408 = 0;
    var numMatchedHEX60gensym16_1291853409 = 0;
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "filename", HEX5BHEX5D_1627393037(b_1291853372, [102,105,108,101,110,97,109,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,115,116])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818585096(a_1291853371, "ast", HEX5BHEX5D_1627393037(b_1291853372, [97,115,116]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "languageID", HEX5BHEX5D_1627393037(b_1291853372, [108,97,110,103,117,97,103,101,73,68]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_2818585096(a_1291853371, "appFile", HEX5BHEX5D_1627393037(b_1291853372, [97,112,112,70,105,108,101]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853408 = addInt(numHEX60gensym16_1291853408, 1);
    if (hasKey_1627393154(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853409 = addInt(numMatchedHEX60gensym16_1291853409, 1);
    fromJson_1811939890(a_1291853371, "workspaceId", HEX5BHEX5D_1627393037(b_1291853372, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853373);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
      }
      
    }
    }
    if ((opt_1291853373.allowExtraKeys && opt_1291853373.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853373.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409);
    }
    else {
    if (opt_1291853373.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853372) == numMatchedHEX60gensym16_1291853409);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853372) == numHEX60gensym16_1291853408) && (numHEX60gensym16_1291853408 == numMatchedHEX60gensym16_1291853409));
    }
    }}
    var okHEX60gensym16_1291853528 = Temporary1;
    if (!(okHEX60gensym16_1291853528)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853372)), HEX24_369098760(numHEX60gensym16_1291853408), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853372, 2)]));
    }
    

  
}

function fromJson_1291853341(a_1291853343, a_1291853343_Idx, b_1291853344, opt_1291853345) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853344, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853344}));
    }
    
    if (a_1291853343[a_1291853343_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853344), 0, 2147483647), Temporary1)) { for (var i = a_1291853343[a_1291853343_Idx].length ; i < Temporary1 ; ++i) a_1291853343[a_1291853343_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853343[a_1291853343_Idx].length = Temporary1; };
    Label2: {
      var i_1291853367 = 0;
      var val_1291853368 = null;
      var colontmp__536871230 = [];
      colontmp__536871230 = getElems_1627390175(b_1291853344, []);
      var i_536871231 = 0;
      var L_536871232 = (colontmp__536871230).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871231 < L_536871232)) break Label4;
            i_1291853367 = i_536871231;
            val_1291853368 = colontmp__536871230[chckIndx(i_536871231, 0, (colontmp__536871230).length - 1)];
            fromJson_1291853369(a_1291853343[a_1291853343_Idx][chckIndx(i_1291853367, 0, (a_1291853343[a_1291853343_Idx]).length - 1)], val_1291853368, opt_1291853345);
            i_536871231 = addInt(i_536871231, 1);
            if (!(((colontmp__536871230).length == L_536871232))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852898(a_1291852900, b_1291852901, opt_1291852902) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852901, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852901}));
    }
    
    if (!((b_1291852901.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852901.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852945 = 0;
    var numMatchedHEX60gensym16_1291852946 = 0;
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "theme", HEX5BHEX5D_1627393037(b_1291852901, [116,104,101,109,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_2818586485(a_1291852900, "fontSize", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,83,105,122,101]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontRegular", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBold", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1811939890(a_1291852900, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852901, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853096(a_1291852900, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852901, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852945 = addInt(numHEX60gensym16_1291852945, 1);
    if (hasKey_1627393154(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852946 = addInt(numMatchedHEX60gensym16_1291852946, 1);
    fromJson_1291853341(a_1291852900, "openEditors", HEX5BHEX5D_1627393037(b_1291852901, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852902);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
      }
      
    }
    }
    if ((opt_1291852902.allowExtraKeys && opt_1291852902.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852902.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946);
    }
    else {
    if (opt_1291852902.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852901) == numMatchedHEX60gensym16_1291852946);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852901) == numHEX60gensym16_1291852945) && (numHEX60gensym16_1291852945 == numMatchedHEX60gensym16_1291852946));
    }
    }}
    var okHEX60gensym16_1291853540 = Temporary1;
    if (!(okHEX60gensym16_1291853540)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852901)), HEX24_369098760(numHEX60gensym16_1291852945), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852901, 2)]));
    }
    

  
}

function jsonTo_1291852892(b_1291852894, opt_1291852896) {
  var result_1291852897 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852898(result_1291852897[0], b_1291852894, opt_1291852896);

  return result_1291852897[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871235 = 0;
        colontmp__536871235 = len_1627395282(x_1627395286);
        var i_536871236 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871236 < colontmp__536871235)) break Label3;
              i_1627395293 = i_536871236;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871236 = addInt(i_536871236, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2264924264(path_2264924265) {
  var result_2264924266 = null;

    result_2264924266 = ({m_type: NTI2264924164, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2264924266.path = nimCopy(null, path_2264924265, NTI33554449);
    var fmtRes_2264924274 = [mnewString(0)];
    fmtRes_2264924274[0].push.apply(fmtRes_2264924274[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2264924274, 0, absolutePath_1426063704(path_2264924265, nosgetCurrentDir()), []);
    result_2264924266.name = nimCopy(null, fmtRes_2264924274[0], NTI33554449);

  return result_2264924266;

}

function newWorkspaceFolderLocal_2264924293(settings_2264924294) {
  var result_2264924295 = null;

  BeforeRet: {
    var path_2264924296 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2264924294, [112,97,116,104]), []);
    result_2264924295 = newWorkspaceFolderLocal_2264924264(path_2264924296);
    break BeforeRet;
  };

  return result_2264924295;

}

function newWorkspaceFolderAbsytreeServer_2399144372(settings_2399144373) {
  var result_2399144374 = null;

  BeforeRet: {
    var url_2399144375 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2399144373, [98,97,115,101,85,114,108]), []);
    result_2399144374 = newWorkspaceFolderAbsytreeServer_2399144348(url_2399144375);
    break BeforeRet;
  };

  return result_2399144374;

}

function newWorkspaceFolderGithub_2281703740(settings_2281703741) {
  var result_2281703742 = null;

  BeforeRet: {
    var user_2281703743 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [117,115,101,114]), []);
    var repository_2281703744 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2281703745 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2281703741, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2281703742 = newWorkspaceFolderGithub_2281703680(user_2281703743, repository_2281703744, branchOrHash_2281703745);
    break BeforeRet;
  };

  return result_2281703742;

}

function formatValue_1291853582(result_1291853584, result_1291853584_Idx, value_1291853585, specifier_1291853586) {
    formatValue_721420459(result_1291853584, result_1291853584_Idx, reprEnum(value_1291853585, NTI1291845663), specifier_1291853586);

  
}

function new_1291853619() {
  var result_1291853622 = null;

  BeforeRet: {
    var r_1291853624 = null;
    r_1291853624 = ({m_type: NTI2801795076});
    result_1291853622 = r_1291853624;
    break BeforeRet;
  };

  return result_1291853622;

}

function getWorkspaceFolder_1291851105(self_1291851106, id_1291851107) {
  var result_1291855494 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855498 = null;
      var i_536871239 = 0;
      var L_536871240 = (self_1291851106.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871239 < L_536871240)) break Label3;
            wf_1291855498 = self_1291851106.workspace.folders[chckIndx(i_536871239, 0, (self_1291851106.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820626(wf_1291855498.id, id_1291851107)) {
            result_1291855494 = nimCopy(result_1291855494, some_1291855499(wf_1291855498), NTI2197815306);
            break BeforeRet;
            }
            
            i_536871239 = addInt(i_536871239, 1);
            if (!(((self_1291851106.workspace.folders).length == L_536871240))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855494 = nimCopy(result_1291855494, none_1291855512(), NTI2197815306);
    break BeforeRet;
  };

  return result_1291855494;

}

function newTextDocument_2818579082(filename_2818579083, app_2818579084, workspaceFolder_2818579086) {
  var result_2818579087 = null;

    result_2818579087 = newTextDocument_2818579088(filename_2818579083, [], app_2818579084);
    result_2818579087.workspace = nimCopy(result_2818579087.workspace, workspaceFolder_2818579086, NTI2197815306);
    load_2197815320(result_2818579087, []);

  return result_2818579087;

}

function newEditor_1291851109(backend_1291851110, platform_1291851111) {
    
function HEX3Aanonymous_1291851125(event_1291851143) {
        handleKeyPress_1291851063(self_1291851113, event_1291851143.Field0, event_1291851143.Field1);

      
    }
    
function HEX3Aanonymous_1291851197(event_1291851215) {
        handleKeyRelease_1291851067(self_1291851113, event_1291851215.Field0, event_1291851215.Field1);

      
    }
    
function HEX3Aanonymous_1291851246(event_1291851264) {
        handleRune_1291851071(self_1291851113, event_1291851264.Field0, event_1291851264.Field1);

      
    }
    
function HEX3Aanonymous_1291851295(event_1291851313) {
        handleMousePress_1291851075(self_1291851113, event_1291851313.Field0, event_1291851313.Field1, event_1291851313.Field2);

      
    }
    
function HEX3Aanonymous_1291851367(event_1291851385) {
        handleMouseRelease_1291851080(self_1291851113, event_1291851385.Field0, event_1291851385.Field1, event_1291851385.Field2);

      
    }
    
function HEX3Aanonymous_1291851416(event_1291851434) {
        handleMouseMove_1291851085(self_1291851113, event_1291851434.Field0, event_1291851434.Field1, event_1291851434.Field2, event_1291851434.Field3);

      
    }
    
function HEX3Aanonymous_1291851488(event_1291851506) {
        handleScroll_1291851091(self_1291851113, event_1291851506.Field1, event_1291851506.Field0, event_1291851506.Field2);

      
    }
    
function HEX3Aanonymous_1291851560(event_1291851578) {
        handleDropFile_1291851096(self_1291851113, event_1291851578.Field0, event_1291851578.Field1);

      
    }
    
function HEX3Aanonymous_1291851632() {
        self_1291851113.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852840(actionHEX60gensym73HEX60gensym74_1291852841, argHEX60gensym73HEX60gensym74_1291852842) {
          var Temporary1;

        var result_1291852843 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleActions) {
          var action_1291852844 = nimCopy(null, actionHEX60gensym73HEX60gensym74_1291852841, NTI33554449);
          var arg_1291852845 = nimCopy(null, argHEX60gensym73HEX60gensym74_1291852842, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852844, arg_1291852845)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym73HEX60gensym74_1291852846 = Temporary1;
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          
          result_1291852843 = responseHEX60gensym73HEX60gensym74_1291852846;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym73_1291852828.config.consumeAllActions) {
          result_1291852843 = 3;
          break BeforeRet;
          }
          else {
            result_1291852843 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852843;

      }
      
function HEX3Aanonymous_1291852848(inputHEX60gensym73HEX60gensym75_1291852849) {
        var result_1291852850 = 0;

        BeforeRet: {
          if (handlerHEX60gensym73_1291852828.config.handleInputs) {
          var input_1291852851 = nimCopy(null, inputHEX60gensym73HEX60gensym75_1291852849, NTI33554449);
          result_1291852850 = 1;
          break BeforeRet;
          }
          else {
            result_1291852850 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852850;

      }
      
function HEX3Aanonymous_1291852871(actionHEX60gensym76HEX60gensym77_1291852872, argHEX60gensym76HEX60gensym77_1291852873) {
          var Temporary1;

        var result_1291852874 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleActions) {
          var action_1291852875 = nimCopy(null, actionHEX60gensym76HEX60gensym77_1291852872, NTI33554449);
          var arg_1291852876 = nimCopy(null, argHEX60gensym76HEX60gensym77_1291852873, NTI33554449);
          if (handleAction_1291848870(self_1291851113, action_1291852875, arg_1291852876)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym76HEX60gensym77_1291852877 = Temporary1;
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          
          result_1291852874 = responseHEX60gensym76HEX60gensym77_1291852877;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym76_1291852859.config.consumeAllActions) {
          result_1291852874 = 3;
          break BeforeRet;
          }
          else {
            result_1291852874 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852874;

      }
      
function HEX3Aanonymous_1291852879(inputHEX60gensym76HEX60gensym78_1291852880) {
        var result_1291852881 = 0;

        BeforeRet: {
          if (handlerHEX60gensym76_1291852859.config.handleInputs) {
          var input_1291852882 = nimCopy(null, inputHEX60gensym76HEX60gensym78_1291852880, NTI33554449);
          result_1291852881 = 1;
          break BeforeRet;
          }
          else {
            result_1291852881 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852881;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
                var Temporary20;

  var result_1291851112 = null;

  BeforeRet: {
    var self_1291851113 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: 0.0, timer: 0.0, frameTimer: 0.0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851113 = createWithPrototype(editor_prototype, self_1291851113);
    gEditor = self_1291851113;
    self_1291851113.platform = platform_1291851111;
    self_1291851113.backend = backend_1291851110;
    self_1291851113.statusBarOnTop = false;
    var _ = subscribe_1291851158(platform_1291851111.onKeyPress, HEX3Aanonymous_1291851125);
    var _ = subscribe_1291851158(platform_1291851111.onKeyRelease, HEX3Aanonymous_1291851197);
    var _ = subscribe_1291851158(platform_1291851111.onRune, HEX3Aanonymous_1291851246);
    var _ = subscribe_1291851328(platform_1291851111.onMousePress, HEX3Aanonymous_1291851295);
    var _ = subscribe_1291851328(platform_1291851111.onMouseRelease, HEX3Aanonymous_1291851367);
    var _ = subscribe_1291851449(platform_1291851111.onMouseMove, HEX3Aanonymous_1291851416);
    var _ = subscribe_1291851521(platform_1291851111.onScroll, HEX3Aanonymous_1291851488);
    var _ = subscribe_1291851593(platform_1291851111.onDropFile, HEX3Aanonymous_1291851560);
    var _ = subscribe_1291851665(platform_1291851111.onCloseRequested, HEX3Aanonymous_1291851632);
    self_1291851113.timer = startTimer_2080374869();
    self_1291851113.frameTimer = startTimer_2080374869();
    self_1291851113.layout = {m_type: NTI1291845643};
    self_1291851113.layout_props = {props: toTable_1291851675([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2768240776(self_1291851113.platform, 20.0);
    self_1291851113.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851113.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851113.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851113.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, disableScrolling: false, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], disableCompletions: false, completions: [], selectedCompletion: 0, completionsBaseIndex: 0, completionsScrollOffset: 0.0, lastItems: [], lastCompletionsWidget: null, lastCompletionWidgets: [], showCompletions: false, scrollToCompletion: ({val: 0, has: false}), id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2969568641, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849426);
    self_1291851113.workspace = ({folders: []});
    self_1291851113.theme = defaultTheme_2516586063();
    setTheme_1291851003(self_1291851113, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851113.currentView = 0;
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2113929598(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851113.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym73_1291852828 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym73_1291852828.config = getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]);
      handlerHEX60gensym73_1291852828.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851113, [101,100,105,116,111,114]));
      handlerHEX60gensym73_1291852828.handleAction = HEX3Aanonymous_1291852840;
      handlerHEX60gensym73_1291852828.handleInput = HEX3Aanonymous_1291852848;
    };
    self_1291851113.eventHandler = handlerHEX60gensym73_1291852828;
    Label2: {
      var handlerHEX60gensym76_1291852859 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym76_1291852859.config = getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym76_1291852859.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(self_1291851113, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym76_1291852859.handleAction = HEX3Aanonymous_1291852871;
      handlerHEX60gensym76_1291852859.handleInput = HEX3Aanonymous_1291852879;
    };
    self_1291851113.commandLineEventHandler = handlerHEX60gensym76_1291852859;
    self_1291851113.commandLineMode = false;
    self_1291851113.commandLineTextEditor = newTextEditor_2818594009(newTextDocument_2818579088([], [], false), self_1291851113);
    self_1291851113.commandLineTextEditor.renderHeader = false;
    self_1291851113.commandLineTextEditor.lineNumbers = nimCopy(self_1291851113.commandLineTextEditor.lineNumbers, some_3187671942(0), NTI2818572554);
    getCommandLineTextEditor_1291851060(self_1291851113).hideCursorWhenInactive = true;
    var state_1291852891 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852891 = nimCopy(state_1291852891, jsonTo_1291852892(parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851003(self_1291851113, state_1291852891.theme);
    self_1291851113.loadedFontSize = state_1291852891.fontSize;
    fontSizeHEX3D_2768240776(self_1291851113.platform, state_1291852891.fontSize);
    if ((0 < (state_1291852891.fontRegular).length)) {
    self_1291851113.fontRegular = nimCopy(null, state_1291852891.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBold).length)) {
    self_1291851113.fontBold = nimCopy(null, state_1291852891.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontItalic).length)) {
    self_1291851113.fontItalic = nimCopy(null, state_1291852891.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852891.fontBoldItalic).length)) {
    self_1291851113.fontBoldItalic = nimCopy(null, state_1291852891.fontBoldItalic, NTI33554449);
    }
    
    self_1291851113.options = parseJson_1627395313(loadApplicationFile_2365587474(fs_2365587509, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853548 = [mnewString(0)];
    fmtRes_1291853548[0].push.apply(fmtRes_1291853548[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853548, 0, pretty_1627394477(self_1291851113.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853548[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853553 = [mnewString(0)];
    fmtRes_1291853553[0].push.apply(fmtRes_1291853553[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853553, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853553[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853576 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870985 = 0;
      var L_536870986 = (state_1291852891.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870985 < L_536870986)) break Label6;
            wf_1291853576 = state_1291852891.workspaceFolders[chckIndx(i_536870985, 0, (state_1291852891.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853576.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2264924293(wf_1291853576.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2399144372(wf_1291853576.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2281703740(wf_1291853576.settings);
                break;
              default: 
                var fmtRes_1291853581 = [mnewString(0)];
                fmtRes_1291853581[0].push.apply(fmtRes_1291853581[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853582(fmtRes_1291853581, 0, wf_1291853576.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853581[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853590 = Temporary8;
              folder_1291853590.id = nimCopy(folder_1291853590.id, parseId_2046820640(wf_1291853576.id), NTI2046820355);
              folder_1291853590.name = nimCopy(null, wf_1291853576.name, NTI33554449);
              if (addWorkspaceFolder_1291851102(self_1291851113, folder_1291853590)) {
              var fmtRes_1291853595 = [mnewString(0)];
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853595, 0, folder_1291853590.name, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [32,40]);;
              formatValue_3036676344(fmtRes_1291853595, 0, folder_1291853590.id, []);
              fmtRes_1291853595[0].push.apply(fmtRes_1291853595[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853595[0], NTI33554449)]);
              }
              
            };
            i_536870985 = addInt(i_536870985, 1);
            if (!(((state_1291852891.workspaceFolders).length == L_536870986))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853605 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853610 = HEX7BHEX7D_1627393316(self_1291851113.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853610 == null))) {
    Label10: {
      var sp_1291853614 = null;
      if (!((searchPathsJson_1291853610.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853610.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870995 = null;
        var colontmp__536870996 = [];
        var Temporary12 = searchPathsJson_1291853610;
        if (ConstSet303[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870996 = Temporary12.elems;
        var i_536870997 = 0;
        var L_536870998 = (colontmp__536870996).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870997 < L_536870998)) break Label14;
              i_536870995 = colontmp__536870996[chckIndx(i_536870997, 0, (colontmp__536870996).length - 1)];
              sp_1291853614 = i_536870995;
              searchPaths_1291853605.push(getStr_1627390106(sp_1291853614, []));;
              i_536870997 = addInt(i_536870997, 1);
              if (!(((colontmp__536870996).length == L_536870998))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851113.scriptContext = new_1291853619();
    init_2751463438(self_1291851113.scriptContext, []);
    var _ = false;
    self_1291851113.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853655 = [mnewString(0)];
    fmtRes_1291853655[0].push.apply(fmtRes_1291853655[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853655, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853655[0], 10);;
    formatValue_721420459(fmtRes_1291853655, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853655[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848874(self_1291851113, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853678 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871002 = 0;
      var L_536871003 = (state_1291852891.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871002 < L_536871003)) break Label17;
            editorState_1291853678 = state_1291852891.openEditors[chckIndx(i_536871002, 0, (state_1291852891.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853679 = getWorkspaceFolder_1291851105(self_1291851113, parseId_2046820640(editorState_1291853678.workspaceId));
              if (editorState_1291853678.ast) {
              Temporary19 = newAstDocument_2969571554(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
              }
              else {
++excHandler;
                try {
                Temporary20 = newTextDocument_2818579082(editorState_1291853678.filename, editorState_1291853678.appFile, workspaceFolder_1291853679);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853684 = [mnewString(0)];
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, editorState_1291853678.filename, []);
                fmtRes_1291853684[0].push.apply(fmtRes_1291853684[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853684, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853684[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary20;
              }
              
              var document_1291853685 = Temporary19;
              createView_1291848958(self_1291851113, document_1291853685);
            };
            i_536871002 = addInt(i_536871002, 1);
            if (!(((state_1291852891.openEditors).length == L_536871003))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851112 = self_1291851113;
    break BeforeRet;
  };

  return result_1291851112;

}

function fromJsonHook_2516583208(color_2516583209, jsonNode_2516583210) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2516583210.kind == 0)) {
    color_2516583209 = nimCopy(color_2516583209, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2516583210;
    if (ConstSet305[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2516583209 = nimCopy(color_2516583209, parseHexVar_2516582448(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2516583240(a_2516583242, b_2516583243, opt_2516583244) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583243, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2516583243}));
    }
    
    fromJsonHook_2516583208(a_2516583242, b_2516583243);

  
}

function jsonTo_2516583234(b_2516583236, opt_2516583238) {
  var result_2516583239 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2516583240(result_2516583239[0], b_2516583236, opt_2516583238);

  return result_2516583239[0];

}

function hasKey_2516582658(t_2516582661, key_2516582662) {
  var result_2516582663 = false;

    var hc_2516582664 = [0];
    result_2516582663 = (0 <= rawGet_2516582665(t_2516582661, key_2516582662, hc_2516582664, 0));

  return result_2516582663;

}

function contains_2516582652(t_2516582655, key_2516582656) {
  var result_2516582657 = false;

  BeforeRet: {
    result_2516582657 = hasKey_2516582658(t_2516582655, key_2516582656);
    break BeforeRet;
  };

  return result_2516582657;

}

function none_2516583264() {
  var result_2516583271 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2516583271;

}

function HEX5BHEX5D_2516582957(t_2516582960, key_2516582961) {
  var result_2516582962 = null;

    var hcHEX60gensym22_2516582963 = [0];
    var indexHEX60gensym22_2516582970 = rawGet_2516582665(t_2516582960, key_2516582961, hcHEX60gensym22_2516582963, 0);
    if ((0 <= indexHEX60gensym22_2516582970)) {
    result_2516582962 = t_2516582960.data[chckIndx(indexHEX60gensym22_2516582970, 0, (t_2516582960.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2516582961);
    }
    

  return result_2516582962;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2516583215(style_2516583216, jsonNode_2516583217) {
    var Temporary1;

    style_2516583216 = nimCopy(style_2516583216, ConstSet310, NTI2516582915);
    var Temporary1 = jsonNode_2516583217;
    if (ConstSet311[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2516583218 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2516583218, [105,116,97,108,105,99])) {
    style_2516583216[0] = true;
    }
    
    if (contains_855639877(text_2516583218, [98,111,108,100])) {
    style_2516583216[2] = true;
    }
    
    if (contains_855639877(text_2516583218, [117,110,100,101,114,108,105,110,101])) {
    style_2516583216[1] = true;
    }
    

  
}

function fromJson_2516583278(a_2516583280, b_2516583281, opt_2516583282) {
    if (!(!(HEX3DHEX3D_1627392026(b_2516583281, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2516583281}));
    }
    
    fromJsonHook_2516583215(a_2516583280, b_2516583281);

  
}

function jsonTo_2516583272(b_2516583274, opt_2516583276) {
  var result_2516583277 = [{}];

    fromJson_2516583278(result_2516583277[0], b_2516583274, opt_2516583276);

  return result_2516583277[0];

}

function jsonToTheme_2516583298(json_2516583299, opt_2516583300) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2516583301 = null;

    result_2516583301 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2516583301.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2516583299, [116,121,112,101])) {
    result_2516583301.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2516583301.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2516583299, [99,111,108,111,114,115])) {
    Label1: {
      var key_2516583321 = [];
      var value_2516583322 = null;
      var colontmp__536871243 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2516583299, [99,111,108,111,114,115]);
      if (ConstSet304[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871243 = nimCopy(colontmp__536871243, Temporary2.fields, NTI1627389966);
      var L_536871244 = len_1627392114(colontmp__536871243);
      if ((0 < colontmp__536871243.counter)) {
      var h_536871245 = colontmp__536871243.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871245)) break Label4;
            var nxt_536871247 = colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field0)) {
            var colontmp__536871249 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871243.data[chckIndx(h_536871245, 0, (colontmp__536871243.data).length - 1)].Field3}, NTI1627391161);
            key_2516583321 = colontmp__536871249["Field0"];
            value_2516583322 = colontmp__536871249["Field1"];
            HEX5BHEX5DHEX3D_2516583368(result_2516583301.colors, key_2516583321, jsonTo_2516583234(value_2516583322, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871243) == L_536871244))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871245 = nxt_536871247;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2516584633 = null;
      var colontmp__536871260 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2516583299, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet306[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871260 = Temporary6.elems;
      var i_536871261 = 0;
      var L_536871262 = (colontmp__536871260).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871261 < L_536871262)) break Label8;
            item_2516584633 = colontmp__536871260[chckIndx(i_536871261, 0, (colontmp__536871260).length - 1)];
            var scopes_2516584638 = [];
            if (hasKey_1627393154(item_2516584633, [115,99,111,112,101])) {
            var scope_2516584639 = HEX5BHEX5D_1627393037(item_2516584633, [115,99,111,112,101]);
            if ((scope_2516584639.kind == 4)) {
            var Temporary9 = scope_2516584639;
            if (ConstSet307[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2516584638.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2516584651 = null;
                var colontmp__536871252 = [];
                var Temporary12 = scope_2516584639;
                if (ConstSet308[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871252 = Temporary12.elems;
                var i_536871253 = 0;
                var L_536871254 = (colontmp__536871252).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871253 < L_536871254)) break Label14;
                      scopeName_2516584651 = colontmp__536871252[chckIndx(i_536871253, 0, (colontmp__536871252).length - 1)];
                      var Temporary15 = scopeName_2516584651;
                      if (ConstSet309[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2516584638.push(Temporary16);;
                      i_536871253 = addInt(i_536871253, 1);
                      if (!(((colontmp__536871252).length == L_536871254))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2516584638.push([46]);;
            }
            
            var settings_2516584660 = HEX5BHEX5D_1627393037(item_2516584633, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2516584664 = [];
              var i_536871257 = 0;
              var L_536871258 = (scopes_2516584638).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871257 < L_536871258)) break Label19;
                    scope_2516584664 = scopes_2516584638[chckIndx(i_536871257, 0, (scopes_2516584638).length - 1)];
                    if (!(contains_2516582652(result_2516583301.tokenColors, scope_2516584664))) {
                    HEX5BHEX5DHEX3D_2516584766(result_2516583301.tokenColors, scope_2516584664, {foreground: none_2516583264(), background: none_2516583264(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).foreground, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).background, some_2516583251(jsonTo_2516583234(HEX5BHEX5D_1627393037(settings_2516584660, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2516582412);
                    }
                    
                    if (hasKey_1627393154(settings_2516584660, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle = nimCopy(HEX5BHEX5D_2516582957(result_2516583301.tokenColors, scope_2516584664).fontStyle, jsonTo_2516583272(HEX5BHEX5D_1627393037(settings_2516584660, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2516582423);
                    }
                    
                    i_536871257 = addInt(i_536871257, 1);
                    if (!(((scopes_2516584638).length == L_536871258))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871261 = addInt(i_536871261, 1);
            if (!(((colontmp__536871260).length == L_536871262))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2516583301;

}

function some_2516586018(val_2516586020) {
  var result_2516586021 = ({val: null});

    if (!(!((val_2516586020 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2516586021.val = val_2516586020;

  return result_2516586021;

}

function none_2516586043() {
  var result_2516586049 = ({val: null});

  return result_2516586049;

}

function loadFromString_2516586008(input_2516586009, path_2516586010) {
  var result_2516586015 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2516586016 = parseJson_1627395313(input_2516586009);
    var newTheme_2516586017 = jsonToTheme_2516583298(json_2516586016, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2516586017.path = nimCopy(null, path_2516586010, NTI33554449);
    result_2516586015 = nimCopy(result_2516586015, some_2516586018(newTheme_2516586017), NTI2516584388);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2516586036 = [mnewString(0)];
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, path_2516586010, []);
    fmtRes_2516586036[0].push.apply(fmtRes_2516586036[0], [58,32]);;
    formatValue_721420459(fmtRes_2516586036, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586036[0], NTI33554449)]);
    var fmtRes_2516586042 = [mnewString(0)];
    formatValue_721420459(fmtRes_2516586042, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516586042[0], NTI33554449)]);
    result_2516586015 = nimCopy(result_2516586015, none_2516586043(), NTI2516584388);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2516586015;

}
  var Temporary274;
var rend_536870947 = [new_536870929()];
init_2768240764(rend_536870947[0]);
var initializedEditor_536870948 = [false];
var ed_536870949 = [newEditor_1291851109(2, rend_536870947[0])];
  var oHEX60gensym0_536870953 = loadFromString_2516586008(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851013(oHEX60gensym0_536870953)) Temporary274 = false; else {    var theme_536870976 = get_1291851033(oHEX60gensym0_536870953);
    Temporary274 = true;  }if (Temporary274) {
ed_536870949[0].theme = theme_536870976;
}

setLayout_1291856953(ed_536870949[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870977 = [0.0];
var frameIndex_536870978 = [0];
var hasRequestedRerender_536870979 = [false];
var isRenderInProgress_536870980 = [false];

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function rawGet_3271557288(t_3271557291, key_3271557292, hc_3271557293, hc_3271557293_Idx) {
  var result_3271557294 = 0;

  BeforeRet: {
    hc_3271557293[hc_3271557293_Idx] = hash_1325400236(key_3271557292);
    if ((hc_3271557293[hc_3271557293_Idx] == 0)) {
    hc_3271557293[hc_3271557293_Idx] = 314159265;
    }
    
    if (((t_3271557291.data).length == 0)) {
    result_3271557294 = -1;
    break BeforeRet;
    }
    
    var h_3271557349 = (hc_3271557293[hc_3271557293_Idx] & (t_3271557291.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271557291.data[chckIndx(h_3271557349, 0, (t_3271557291.data).length - 1)].Field0)) break Label2;
          if (((t_3271557291.data[chckIndx(h_3271557349, 0, (t_3271557291.data).length - 1)].Field0 == hc_3271557293[hc_3271557293_Idx]) && (t_3271557291.data[chckIndx(h_3271557349, 0, (t_3271557291.data).length - 1)].Field1 == key_3271557292))) {
          result_3271557294 = h_3271557349;
          break BeforeRet;
          }
          
          h_3271557349 = nextTry_1308622883(h_3271557349, (t_3271557291.data).length - 1);
        }
    };
    result_3271557294 = subInt(-1, h_3271557349);
  };

  return result_3271557294;

}

function hasKey_3271557281(t_3271557284, key_3271557285) {
  var result_3271557286 = false;

    var hc_3271557287 = [0];
    result_3271557286 = (0 <= rawGet_3271557288(t_3271557284, key_3271557285, hc_3271557287, 0));

  return result_3271557286;

}

function contains_3271557275(t_3271557278, key_3271557279) {
  var result_3271557280 = false;

  BeforeRet: {
    result_3271557280 = hasKey_3271557281(t_3271557278, key_3271557279);
    break BeforeRet;
  };

  return result_3271557280;

}

function HEX5BHEX5D_3271557574(t_3271557577, key_3271557578) {
  var result_3271557579 = null;
  var result_3271557579_Idx = 0;

    var hcHEX60gensym22_3271557580 = [0];
    var indexHEX60gensym22_3271557587 = rawGet_3271557288(t_3271557577, key_3271557578, hcHEX60gensym22_3271557580, 0);
    if ((0 <= indexHEX60gensym22_3271557587)) {
    result_3271557579 = t_3271557577.data[chckIndx(indexHEX60gensym22_3271557587, 0, (t_3271557577.data).length - 1)]; result_3271557579_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_3271557578);
    }
    

  return [result_3271557579, result_3271557579_Idx];

}

function mustRehash_3271557866(t_3271557868) {
  var result_3271557869 = false;

    if (!((t_3271557868.counter < (t_3271557868.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3271557869 = ((mulInt((t_3271557868.data).length, 2) < mulInt(t_3271557868.counter, 3)) || (subInt((t_3271557868.data).length, t_3271557868.counter) < 4));

  return result_3271557869;

}

function rawInsert_3271558315(t_3271558319, data_3271558320, data_3271558320_Idx, key_3271558321, val_3271558322, hc_3271558323, h_3271558324) {
    data_3271558320[data_3271558320_Idx][chckIndx(h_3271558324, 0, (data_3271558320[data_3271558320_Idx]).length - 1)].Field1 = key_3271558321;
    data_3271558320[data_3271558320_Idx][chckIndx(h_3271558324, 0, (data_3271558320[data_3271558320_Idx]).length - 1)].Field2 = val_3271558322;
    data_3271558320[data_3271558320_Idx][chckIndx(h_3271558324, 0, (data_3271558320[data_3271558320_Idx]).length - 1)].Field0 = hc_3271558323;

  
}

function enlarge_3271558021(t_3271558024) {
    var n_3271558027 = [];
    n_3271558027 = new Array(chckRange(mulInt((t_3271558024.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3271558024.data).length, 2), 0, 2147483647) ; ++i) { n_3271558027[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3271558024.data; t_3271558024.data = n_3271558027; n_3271558027 = Temporary1;    Label2: {
      var i_3271558091 = 0;
      var colontmp__536871861 = 0;
      colontmp__536871861 = (n_3271558027).length - 1;
      var res_536871862 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871862 <= colontmp__536871861)) break Label4;
            i_3271558091 = res_536871862;
            var eh_3271558145 = n_3271558027[chckIndx(i_3271558091, 0, (n_3271558027).length - 1)].Field0;
            if (isFilled_1308622880(eh_3271558145)) {
            var j_3271558149 = (eh_3271558145 & (t_3271558024.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3271558024.data[chckIndx(j_3271558149, 0, (t_3271558024.data).length - 1)].Field0)) break Label6;
                  j_3271558149 = nextTry_1308622883(j_3271558149, (t_3271558024.data).length - 1);
                }
            };
            rawInsert_3271558315(t_3271558024, t_3271558024, "data", n_3271558027[chckIndx(i_3271558091, 0, (n_3271558027).length - 1)].Field1, n_3271558027[chckIndx(i_3271558091, 0, (n_3271558027).length - 1)].Field2, eh_3271558145, j_3271558149);
            }
            
            res_536871862 = addInt(res_536871862, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3271558484(t_3271558487, key_3271558488, hc_3271558489) {
  var result_3271558490 = 0;

  BeforeRet: {
    if (((t_3271558487.data).length == 0)) {
    result_3271558490 = -1;
    break BeforeRet;
    }
    
    var h_3271558541 = (hc_3271558489 & (t_3271558487.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3271558487.data[chckIndx(h_3271558541, 0, (t_3271558487.data).length - 1)].Field0)) break Label2;
          if (((t_3271558487.data[chckIndx(h_3271558541, 0, (t_3271558487.data).length - 1)].Field0 == hc_3271558489) && (t_3271558487.data[chckIndx(h_3271558541, 0, (t_3271558487.data).length - 1)].Field1 == key_3271558488))) {
          result_3271558490 = h_3271558541;
          break BeforeRet;
          }
          
          h_3271558541 = nextTry_1308622883(h_3271558541, (t_3271558487.data).length - 1);
        }
    };
    result_3271558490 = subInt(-1, h_3271558541);
  };

  return result_3271558490;

}

function HEX5BHEX5DHEX3D_3271557693(t_3271557696, key_3271557697, val_3271557698) {
    if (((t_3271557696.data).length == 0)) {
    var correctSizeHEX60gensym5_3271557747 = slotsNeeded_1308622891(32);
    t_3271557696.counter = 0;
    t_3271557696.data = new Array(chckRange(correctSizeHEX60gensym5_3271557747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3271557747, 0, 2147483647) ; ++i) { t_3271557696.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3271557752 = [0];
    var index_3271557759 = rawGet_3271557288(t_3271557696, key_3271557697, hc_3271557752, 0);
    if ((0 <= index_3271557759)) {
    t_3271557696.data[chckIndx(index_3271557759, 0, (t_3271557696.data).length - 1)].Field2 = val_3271557698;
    }
    else {
      if (((t_3271557696.data).length == 0)) {
      var correctSizeHEX60gensym8_3271557861 = slotsNeeded_1308622891(32);
      t_3271557696.counter = 0;
      t_3271557696.data = new Array(chckRange(correctSizeHEX60gensym8_3271557861, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3271557861, 0, 2147483647) ; ++i) { t_3271557696.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3271557866(t_3271557696)) {
      enlarge_3271558021(t_3271557696);
      index_3271557759 = rawGetKnownHC_3271558484(t_3271557696, key_3271557697, hc_3271557752[0]);
      }
      
      index_3271557759 = subInt(-1, index_3271557759);
      rawInsert_3271558315(t_3271557696, t_3271557696, "data", key_3271557697, val_3271557698, hc_3271557752[0], index_3271557759);
      t_3271557696.counter = addInt(t_3271557696.counter, 1);
    }
    

  
}

function activeHEX3D_2415919215(self_2415919216, newActive_2415919217) {
    if (!((newActive_2415919217 == self_2415919216.active))) {
    markDirty_2415919143(self_2415919216);
    }
    
    self_2415919216.active = newActive_2415919217;

  
}

function HEX5BHEX5D_3271558738(s_3271558742, x_3271558743) {
  var result_3271558744 = [];

    var a_3271558746 = x_3271558743.a;
    var L_3271558752 = addInt(subInt(subInt((s_3271558742).length, x_3271558743.b), a_3271558746), 1);
    result_3271558744 = new Array(chckRange(L_3271558752, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3271558752, 0, 2147483647) ; ++i) { result_3271558744[i] = null; }    Label1: {
      var i_3271558761 = 0;
      var i_536871866 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871866 < L_3271558752)) break Label3;
            i_3271558761 = i_536871866;
            result_3271558744[chckIndx(i_3271558761, 0, (result_3271558744).length - 1)] = s_3271558742[chckIndx(addInt(i_3271558761, a_3271558746), 0, (s_3271558742).length - 1)];
            i_536871866 = addInt(i_536871866, 1);
          }
      };
    };

  return result_3271558744;

}

function find_3271558966(a_3271558969, item_3271558970) {
  var result_3271558971 = 0;

  BeforeRet: {
    result_3271558971 = 0;
    Label1: {
      var i_3271558984 = null;
      var i_536871870 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871870 < (a_3271558969).length)) break Label3;
            i_3271558984 = a_3271558969[chckIndx(i_536871870, 0, (a_3271558969).length - 1)];
            if ((i_3271558984 == item_3271558970)) {
            break BeforeRet;
            }
            
            result_3271558971 = addInt(result_3271558971, 1);
            i_536871870 = addInt(i_536871870, 1);
          }
      };
    };
    result_3271558971 = -1;
  };

  return result_3271558971;

}

function contains_3271558961(a_3271558963, item_3271558964) {
  var result_3271558965 = false;

  BeforeRet: {
    result_3271558965 = (0 <= find_3271558966(a_3271558963, item_3271558964));
    break BeforeRet;
  };

  return result_3271558965;

}

function contains_2130706618(a_2130706619, b_2130706620) {
  var result_2130706621 = false;

  BeforeRet: {
    result_2130706621 = ((((a_2130706619.x <= b_2130706620.x) && ((b_2130706620.x + b_2130706620.w) <= (a_2130706619.x + a_2130706619.w))) && (a_2130706619.y <= b_2130706620.y)) && ((b_2130706620.y + b_2130706620.h) <= (a_2130706619.y + a_2130706619.h)));
    break BeforeRet;
  };

  return result_2130706621;

}

function invalidate_2785018270(self_2785018271, currentIndex_2785018272, rect_2785018273) {
  BeforeRet: {
    if ((!(intersects_2130706609(self_2785018271.lastBounds, rect_2785018273)) || ((currentIndex_2785018272 <= self_2785018271.lastInvalidation) && contains_2130706618(self_2785018271.lastInvalidationRect, rect_2785018273)))) {
    break BeforeRet;
    }
    
    self_2785018271.lastInvalidationRect = nimCopy(self_2785018271.lastInvalidationRect, and_2147483732(rect_2785018273, self_2785018271.lastBounds), NTI2147483653);
    self_2785018271.lastInvalidation = currentIndex_2785018272;
    if (isObj(self_2785018271.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018283 = null;
      var colontmp__536871873 = [];
      colontmp__536871873 = self_2785018271.children;
      var i_536871874 = 0;
      var L_536871875 = (colontmp__536871873).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871874 < L_536871875)) break Label3;
            c_2785018283 = colontmp__536871873[chckIndx(i_536871874, 0, (colontmp__536871873).length - 1)];
            invalidate_2785018270(c_2785018283, currentIndex_2785018272, self_2785018271.lastInvalidationRect);
            i_536871874 = addInt(i_536871874, 1);
            if (!(((colontmp__536871873).length == L_536871875))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018271.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018293 = null;
      var colontmp__536871878 = [];
      colontmp__536871878 = self_2785018271.children;
      var i_536871879 = 0;
      var L_536871880 = (colontmp__536871878).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871879 < L_536871880)) break Label6;
            c_2785018293 = colontmp__536871878[chckIndx(i_536871879, 0, (colontmp__536871878).length - 1)];
            invalidate_2785018270(c_2785018293, currentIndex_2785018272, self_2785018271.lastInvalidationRect);
            i_536871879 = addInt(i_536871879, 1);
            if (!(((colontmp__536871878).length == L_536871880))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018271.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018303 = null;
      var colontmp__536871883 = [];
      colontmp__536871883 = self_2785018271.children;
      var i_536871884 = 0;
      var L_536871885 = (colontmp__536871883).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871884 < L_536871885)) break Label9;
            c_2785018303 = colontmp__536871883[chckIndx(i_536871884, 0, (colontmp__536871883).length - 1)];
            invalidate_2785018270(c_2785018303, currentIndex_2785018272, self_2785018271.lastInvalidationRect);
            i_536871884 = addInt(i_536871884, 1);
            if (!(((colontmp__536871883).length == L_536871885))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018271.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018313 = null;
      var colontmp__536871888 = [];
      colontmp__536871888 = self_2785018271.children;
      var i_536871889 = 0;
      var L_536871890 = (colontmp__536871888).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871889 < L_536871890)) break Label12;
            c_2785018313 = colontmp__536871888[chckIndx(i_536871889, 0, (colontmp__536871888).length - 1)];
            invalidate_2785018270(c_2785018313, currentIndex_2785018272, self_2785018271.lastInvalidationRect);
            i_536871889 = addInt(i_536871889, 1);
            if (!(((colontmp__536871888).length == L_536871890))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3221226060(t_3221226063, key_3221226064) {
  var result_3221226065 = false;

    var hc_3221226066 = [0];
    result_3221226065 = (0 <= rawGet_2516583429(t_3221226063, key_3221226064, hc_3221226066, 0));

  return result_3221226065;

}

function contains_3221226054(t_3221226057, key_3221226058) {
  var result_3221226059 = false;

  BeforeRet: {
    result_3221226059 = hasKey_3221226060(t_3221226057, key_3221226058);
    break BeforeRet;
  };

  return result_3221226059;

}

function HEX5BHEX5D_3221226144(t_3221226147, key_3221226148) {
  var result_3221226149 = null;

    var hcHEX60gensym22_3221226150 = [0];
    var indexHEX60gensym22_3221226157 = rawGet_2516583429(t_3221226147, key_3221226148, hcHEX60gensym22_3221226150, 0);
    if ((0 <= indexHEX60gensym22_3221226157)) {
    result_3221226149 = t_3221226147.data[chckIndx(indexHEX60gensym22_3221226157, 0, (t_3221226147.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3221226148);
    }
    

  return result_3221226149;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871897 = 0;
      var colontmp__536871898 = 0;
      colontmp__536871897 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871898 = start_855639774;
      var res_536871899 = colontmp__536871897;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871898 <= res_536871899)) break Label5;
            i_855639789 = res_536871899;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871894 = 0;
              colontmp__536871894 = subInt((sub_855639773).length, 1);
              var res_536871895 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871895 <= colontmp__536871894)) break Label8;
                    j_855639794 = res_536871895;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871895 = addInt(res_536871895, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871899 = subInt(res_536871899, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3321888972(table_3321888974, key_3321888975, default_3321888976) {
  var result_3321888977 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3221226054(table_3321888974, key_3321888975)) {
    result_3321888977 = nimCopy(result_3321888977, HEX5BHEX5D_3221226144(table_3321888974, key_3321888975), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3321889083 = nsuRFindStr(key_3321888975, [46], 0, -1);
    if (!((index_3321889083 == -1))) {
    result_3321888977 = nimCopy(result_3321888977, getCascading_3321888972(table_3321888974, HEX5BHEX5D_855639291(key_3321888975, HEX2EHEX2E_805306418(0, subInt(index_3321889083, 1))), default_3321888976), NTI2550136835);
    break BeforeRet;
    }
    
    result_3321888977 = nimCopy(result_3321888977, default_3321888976, NTI2550136835);
    break BeforeRet;
  };

  return result_3321888977;

}

function color_3321888961(theme_3321888963, name_3321888964, default_3321888965) {
  var result_3321888966 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3321888966 = nimCopy(result_3321888966, getCascading_3321888972(theme_3321888963.colors, name_3321888964, color_2634022945(default_3321888965)), NTI2550136835);
    break BeforeRet;
  };

  return result_3321888966;

}

function HEX3DHEX3D_2785018183(x_2785018185, y_2785018186) {
  var result_2785018187 = false;

  BeforeRet: {
    if (!((x_2785018185.r == y_2785018186.r))) {
    result_2785018187 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018185.g == y_2785018186.g))) {
    result_2785018187 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018185.b == y_2785018186.b))) {
    result_2785018187 = false;
    break BeforeRet;
    }
    
    if (!((x_2785018185.a == y_2785018186.a))) {
    result_2785018187 = false;
    break BeforeRet;
    }
    
    result_2785018187 = true;
    break BeforeRet;
  };

  return result_2785018187;

}

function updateForegroundColor_2785018179(self_2785018180, color_2785018181, frameIndex_2785018182) {
    if (!(HEX3DHEX3D_2785018183(self_2785018180.foregroundColor, color_2785018181))) {
    self_2785018180.lastHierarchyChange = nimMax(self_2785018180.lastHierarchyChange, frameIndex_2785018182);
    }
    
    self_2785018180.foregroundColor = nimCopy(self_2785018180.foregroundColor, color_2785018181, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2785018201(self_2785018202, currentIndex_2785018203) {
    if (isObj(self_2785018202.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018213 = null;
      var colontmp__536871902 = [];
      colontmp__536871902 = self_2785018202.children;
      var i_536871903 = 0;
      var L_536871904 = (colontmp__536871902).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871903 < L_536871904)) break Label3;
            c_2785018213 = colontmp__536871902[chckIndx(i_536871903, 0, (colontmp__536871902).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018201(c_2785018213, currentIndex_2785018203);
            self_2785018202.lastHierarchyChange = nimMax(nimMax(self_2785018202.lastHierarchyChange, c_2785018213.lastHierarchyChange), c_2785018213.lastBoundsChange);
            i_536871903 = addInt(i_536871903, 1);
            if (!(((colontmp__536871902).length == L_536871904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018202.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018223 = null;
      var colontmp__536871907 = [];
      colontmp__536871907 = self_2785018202.children;
      var i_536871908 = 0;
      var L_536871909 = (colontmp__536871907).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871908 < L_536871909)) break Label6;
            c_2785018223 = colontmp__536871907[chckIndx(i_536871908, 0, (colontmp__536871907).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018201(c_2785018223, currentIndex_2785018203);
            self_2785018202.lastHierarchyChange = nimMax(nimMax(self_2785018202.lastHierarchyChange, c_2785018223.lastHierarchyChange), c_2785018223.lastBoundsChange);
            i_536871908 = addInt(i_536871908, 1);
            if (!(((colontmp__536871907).length == L_536871909))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018202.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018234 = null;
      var colontmp__536871912 = [];
      colontmp__536871912 = self_2785018202.children;
      var i_536871913 = 0;
      var L_536871914 = (colontmp__536871912).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871913 < L_536871914)) break Label9;
            c_2785018234 = colontmp__536871912[chckIndx(i_536871913, 0, (colontmp__536871912).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018201(c_2785018234, currentIndex_2785018203);
            self_2785018202.lastHierarchyChange = nimMax(nimMax(self_2785018202.lastHierarchyChange, c_2785018234.lastHierarchyChange), c_2785018234.lastBoundsChange);
            i_536871913 = addInt(i_536871913, 1);
            if (!(((colontmp__536871912).length == L_536871914))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018202.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018245 = null;
      var colontmp__536871917 = [];
      colontmp__536871917 = self_2785018202.children;
      var i_536871918 = 0;
      var L_536871919 = (colontmp__536871917).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871918 < L_536871919)) break Label12;
            c_2785018245 = colontmp__536871917[chckIndx(i_536871918, 0, (colontmp__536871917).length - 1)];
            updateLastHierarchyChangeFromChildren_2785018201(c_2785018245, currentIndex_2785018203);
            self_2785018202.lastHierarchyChange = nimMax(nimMax(self_2785018202.lastHierarchyChange, c_2785018245.lastHierarchyChange), c_2785018245.lastBoundsChange);
            i_536871918 = addInt(i_536871918, 1);
            if (!(((colontmp__536871917).length == L_536871919))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018202.m_type, NTI2785017876)) {
    if (!(eqStrings(self_2785018202.text, self_2785018202.lastRenderedText))) {
    self_2785018202.lastHierarchyChange = nimMax(self_2785018202.lastHierarchyChange, currentIndex_2785018203);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3271557137(self_3271557138, frameIndex_3271557139, statusBarWidget_3271557140) {
    var Temporary1;

    var statusWidget_3271557141 = null;
    var commandLineWidget_3271557142 = null;
    if (((statusBarWidget_3271557140.children).length == 0)) {
    statusWidget_3271557141 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.5)}, NTI2785017867), lastHierarchyChange: frameIndex_3271557139, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3271557140.children.push(statusWidget_3271557141);;
    commandLineWidget_3271557142 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.5), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3271557139, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3271557140.children.push(commandLineWidget_3271557142);;
    layoutWidget_2785018363(statusWidget_3271557141, statusBarWidget_3271557140.lastBounds, frameIndex_3271557139, self_3271557138.platform.layoutOptions);
    layoutWidget_2785018363(commandLineWidget_3271557142, statusBarWidget_3271557140.lastBounds, frameIndex_3271557139, self_3271557138.platform.layoutOptions);
    }
    else {
      statusWidget_3271557141 = statusBarWidget_3271557140.children[chckIndx(0, 0, (statusBarWidget_3271557140.children).length - 1)];
      commandLineWidget_3271557142 = statusBarWidget_3271557140.children[chckIndx(1, 0, (statusBarWidget_3271557140.children).length - 1)];
    }
    
    var textColor_3271557159 = color_3321888961(self_3271557138.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3271557138.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3271557138.currentMode;
    }
    
    statusWidget_3271557141.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2785018179(statusWidget_3271557141, textColor_3271557159, frameIndex_3271557139);
    updateLastHierarchyChangeFromChildren_2785018201(statusWidget_3271557141, frameIndex_3271557139);
    statusBarWidget_3271557140.lastHierarchyChange = nimMax(statusBarWidget_3271557140.lastHierarchyChange, statusWidget_3271557141.lastHierarchyChange);
    activeHEX3D_2415919215(getCommandLineTextEditor_1291851060(self_3271557138), self_3271557138.commandLineMode);
    updateWidget_3288334347(getCommandLineTextEditor_1291851060(self_3271557138), self_3271557138, commandLineWidget_3271557142, frameIndex_3271557139);
    statusBarWidget_3271557140.lastHierarchyChange = nimMax(statusBarWidget_3271557140.lastHierarchyChange, commandLineWidget_3271557142.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2785018314(self_2785018315, currentIndex_2785018316, recurse_2785018317) {
    if (isObj(self_2785018315.m_type, NTI2785017868)) {
    Label1: {
      var c_2785018327 = null;
      var colontmp__536871922 = [];
      colontmp__536871922 = self_2785018315.children;
      var i_536871923 = 0;
      var L_536871924 = (colontmp__536871922).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871923 < L_536871924)) break Label3;
            c_2785018327 = colontmp__536871922[chckIndx(i_536871923, 0, (colontmp__536871922).length - 1)];
            if (recurse_2785018317) {
            updateInvalidationFromChildren_2785018314(c_2785018327, currentIndex_2785018316, recurse_2785018317);
            }
            
            self_2785018315.lastInvalidation = nimMax(nimMax(self_2785018315.lastInvalidation, c_2785018327.lastInvalidation), currentIndex_2785018316);
            i_536871923 = addInt(i_536871923, 1);
            if (!(((colontmp__536871922).length == L_536871924))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018315.m_type, NTI2785017870)) {
    Label4: {
      var c_2785018337 = null;
      var colontmp__536871927 = [];
      colontmp__536871927 = self_2785018315.children;
      var i_536871928 = 0;
      var L_536871929 = (colontmp__536871927).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871928 < L_536871929)) break Label6;
            c_2785018337 = colontmp__536871927[chckIndx(i_536871928, 0, (colontmp__536871927).length - 1)];
            if (recurse_2785018317) {
            updateInvalidationFromChildren_2785018314(c_2785018337, currentIndex_2785018316, recurse_2785018317);
            }
            
            self_2785018315.lastInvalidation = nimMax(nimMax(self_2785018315.lastInvalidation, c_2785018337.lastInvalidation), currentIndex_2785018316);
            i_536871928 = addInt(i_536871928, 1);
            if (!(((colontmp__536871927).length == L_536871929))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018315.m_type, NTI2785017872)) {
    Label7: {
      var c_2785018347 = null;
      var colontmp__536871932 = [];
      colontmp__536871932 = self_2785018315.children;
      var i_536871933 = 0;
      var L_536871934 = (colontmp__536871932).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871933 < L_536871934)) break Label9;
            c_2785018347 = colontmp__536871932[chckIndx(i_536871933, 0, (colontmp__536871932).length - 1)];
            if (recurse_2785018317) {
            updateInvalidationFromChildren_2785018314(c_2785018347, currentIndex_2785018316, recurse_2785018317);
            }
            
            self_2785018315.lastInvalidation = nimMax(nimMax(self_2785018315.lastInvalidation, c_2785018347.lastInvalidation), currentIndex_2785018316);
            i_536871933 = addInt(i_536871933, 1);
            if (!(((colontmp__536871932).length == L_536871934))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2785018315.m_type, NTI2785017874)) {
    Label10: {
      var c_2785018357 = null;
      var colontmp__536871937 = [];
      colontmp__536871937 = self_2785018315.children;
      var i_536871938 = 0;
      var L_536871939 = (colontmp__536871937).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871938 < L_536871939)) break Label12;
            c_2785018357 = colontmp__536871937[chckIndx(i_536871938, 0, (colontmp__536871937).length - 1)];
            if (recurse_2785018317) {
            updateInvalidationFromChildren_2785018314(c_2785018357, currentIndex_2785018316, recurse_2785018317);
            }
            
            self_2785018315.lastInvalidation = nimMax(nimMax(self_2785018315.lastInvalidation, c_2785018357.lastInvalidation), currentIndex_2785018316);
            i_536871938 = addInt(i_536871938, 1);
            if (!(((colontmp__536871937).length == L_536871939))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3271557199(self_3271557200, frameIndex_3271557201) {
            var Temporary4;
            var Temporary8;

    if ((self_3271557200.widget == null)) {
    mainStack_3271557161[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), right: -1.0, logLayout: false, m_type: NTI2785017870, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3271557200.widget = mainStack_3271557161[0];
    mainPanel_3271557163[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3271557161[0].children.push(mainPanel_3271557163[0]);;
    viewPanel_3271557162[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), bottom: (-2.0 * totalLineHeight_2768240810(self_3271557200.platform)), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3271557163[0].children.push(viewPanel_3271557162[0]);;
    commandLineWidget_3271557160[0] = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 1.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: (-2.0 * totalLineHeight_2768240810(self_3271557200.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3271557163[0].children.push(commandLineWidget_3271557160[0]);;
    layoutWidget_2785018363(self_3271557200.widget, rect_2147483672(vec2_2164261725(0.0, 0.0), size_2768240760(self_3271557200.platform)), frameIndex_3271557201, self_3271557200.platform.layoutOptions);
    }
    
    if (viewPanel_3271557162[0].children.length < 0) { for (var i = viewPanel_3271557162[0].children.length ; i < 0 ; ++i) viewPanel_3271557162[0].children.push(null); }
               else { viewPanel_3271557162[0].children.length = 0; };
    var rects_3271557224 = layoutViews_1291848236(self_3271557200.layout, self_3271557200.layout_props, rect_2147483666(0.0, 0.0, 1.0, 1.0), (self_3271557200.views).length);
    Label1: {
      var i_3271557230 = 0;
      var view_3271557231 = null;
      var i_536871838 = 0;
      var L_536871839 = (self_3271557200.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871838 < L_536871839)) break Label3;
            i_3271557230 = i_536871838;
            view_3271557231 = self_3271557200.views[chckIndx(i_536871838, 0, (self_3271557200.views).length - 1)];
            var widget_3271557232 = null;
            if (contains_3271557275(widgetsPerEditor_3271557189[0], view_3271557231.editor.id)) {
            widget_3271557232 = (Temporary4 = HEX5BHEX5D_3271557574(widgetsPerEditor_3271557189[0], view_3271557231.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3271557232 = {lastHierarchyChange: frameIndex_3271557201, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3271557693(widgetsPerEditor_3271557189[0], view_3271557231.editor.id, widget_3271557232);
            }
            
            if ((i_3271557230 < (rects_3271557224).length)) {
            var colontmp__536871836 = xy_2147483680(rects_3271557224[chckIndx(i_3271557230, 0, (rects_3271557224).length - 1)]);
            var colontmp__536871837 = vec2_2164261725((rects_3271557224[chckIndx(i_3271557230, 0, (rects_3271557224).length - 1)].x + rects_3271557224[chckIndx(i_3271557230, 0, (rects_3271557224).length - 1)].w), (rects_3271557224[chckIndx(i_3271557230, 0, (rects_3271557224).length - 1)].y + rects_3271557224[chckIndx(i_3271557230, 0, (rects_3271557224).length - 1)].h));
            widget_3271557232.anchor = nimCopy(widget_3271557232.anchor, {Field0: nimCopy(null, colontmp__536871836, NTI2164261152), Field1: nimCopy(null, colontmp__536871837, NTI2164261152)}, NTI2785017867);
            layoutWidget_2785018363(widget_3271557232, viewPanel_3271557162[0].lastBounds, frameIndex_3271557201, self_3271557200.platform.layoutOptions);
            viewPanel_3271557162[0].children.push(widget_3271557232);;
            activeHEX3D_2415919215(view_3271557231.editor, (self_3271557200.currentView == i_3271557230));
            updateWidget_3288334347(view_3271557231.editor, self_3271557200, widget_3271557232, frameIndex_3271557201);
            viewPanel_3271557162[0].lastHierarchyChange = nimMax(viewPanel_3271557162[0].lastHierarchyChange, widget_3271557232.lastHierarchyChange);
            }
            
            i_536871838 = addInt(i_536871838, 1);
            if (!(((self_3271557200.views).length == L_536871839))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3271557163[0].lastHierarchyChange = nimMax(mainPanel_3271557163[0].lastHierarchyChange, viewPanel_3271557162[0].lastHierarchyChange);
    var lastPopups_3271558762 = HEX5BHEX5D_3271558738(mainStack_3271557161[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3271557161[0].children.length < 1) { for (var i = mainStack_3271557161[0].children.length ; i < 1 ; ++i) mainStack_3271557161[0].children.push(null); }
               else { mainStack_3271557161[0].children.length = 1; };
    Label5: {
      var i_3271558799 = 0;
      var popup_3271558800 = null;
      var i_536871845 = 0;
      var L_536871846 = (self_3271557200.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871845 < L_536871846)) break Label7;
            i_3271558799 = i_536871845;
            popup_3271558800 = self_3271557200.popups[chckIndx(i_536871845, 0, (self_3271557200.popups).length - 1)];
            var widget_3271558801 = null;
            if (contains_3271557275(widgetsPerEditor_3271557189[0], popup_3271558800.id)) {
            widget_3271558801 = (Temporary8 = HEX5BHEX5D_3271557574(widgetsPerEditor_3271557189[0], popup_3271558800.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3271558801 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3271557201, logLayout: false, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3271557693(widgetsPerEditor_3271557189[0], popup_3271558800.id, widget_3271558801);
            }
            
            var colontmp__536871842 = vec2_2164261725(0.25, 0.25);
            var colontmp__536871843 = vec2_2164261725(0.75, 0.75);
            widget_3271558801.anchor = nimCopy(widget_3271558801.anchor, {Field0: nimCopy(null, colontmp__536871842, NTI2164261152), Field1: nimCopy(null, colontmp__536871843, NTI2164261152)}, NTI2785017867);
            layoutWidget_2785018363(widget_3271558801, mainStack_3271557161[0].lastBounds, frameIndex_3271557201, self_3271557200.platform.layoutOptions);
            mainStack_3271557161[0].children.push(widget_3271558801);;
            updateWidget_3288334353(popup_3271558800, self_3271557200, widget_3271558801, frameIndex_3271557201);
            mainStack_3271557161[0].lastHierarchyChange = nimMax(mainStack_3271557161[0].lastHierarchyChange, widget_3271558801.lastHierarchyChange);
            i_536871845 = addInt(i_536871845, 1);
            if (!(((self_3271557200.popups).length == L_536871846))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3271558960 = null;
      var i_536871855 = 0;
      var L_536871856 = (lastPopups_3271558762).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871855 < L_536871856)) break Label11;
            p_3271558960 = lastPopups_3271558762[chckIndx(i_536871855, 0, (lastPopups_3271558762).length - 1)];
            Label12: {
              if (contains_3271558961(mainStack_3271557161[0].children, p_3271558960)) {
              break Label12;
              }
              
              Label13: {
                var c_3271558997 = null;
                var i_536871852 = 0;
                var L_536871853 = (mainStack_3271557161[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871852 < L_536871853)) break Label15;
                      c_3271558997 = mainStack_3271557161[0].children[chckIndx(i_536871852, 0, (mainStack_3271557161[0].children).length - 1)];
                      invalidate_2785018270(c_3271558997, frameIndex_3271557201, p_3271558960.lastBounds);
                      i_536871852 = addInt(i_536871852, 1);
                      if (!(((mainStack_3271557161[0].children).length == L_536871853))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871855 = addInt(i_536871855, 1);
            if (!(((lastPopups_3271558762).length == L_536871856))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3271557137(self_3271557200, frameIndex_3271557201, commandLineWidget_3271557160[0]);
    mainPanel_3271557163[0].lastHierarchyChange = nimMax(mainPanel_3271557163[0].lastHierarchyChange, commandLineWidget_3271557160[0].lastHierarchyChange);
    mainStack_3271557161[0].lastHierarchyChange = nimMax(mainStack_3271557161[0].lastHierarchyChange, mainPanel_3271557163[0].lastHierarchyChange);
    updateInvalidationFromChildren_2785018314(mainStack_3271557161[0], -1, false);
    self_3271557200.widget.lastHierarchyChange = nimMax(self_3271557200.widget.lastHierarchyChange, commandLineWidget_3271557160[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3271559007(self_3271559008, size_3271559009, frameIndex_3271559010) {
  BeforeRet: {
    self_3271559008.lastBounds = nimCopy(self_3271559008.lastBounds, rect_2147483672(vec2_2164261725(0.0, 0.0), size_3271559009), NTI2147483653);
    if ((self_3271559008.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2785018363(self_3271559008.widget, self_3271559008.lastBounds, frameIndex_3271559010, self_3271559008.platform.layoutOptions);
  };

  
}

function requestRender_536871264(redrawEverything_536871265) {
    
function HEX3Aanonymous_536871266(time_536871267) {
        hasRequestedRerender_536870979[0] = false;
        isRenderInProgress_536870980[0] = true;
        try {
        try {
        var layoutTime_536871273 = 0.0;
        var updateTime_536871274 = 0.0;
        var renderTime_536871275 = 0.0;
        Label3: {
          ed_536870949[0].frameTimer = startTimer_2080374869();
          var updateTimer_536871276 = startTimer_2080374869();
          updateWidgetTree_3271557199(ed_536870949[0], frameIndex_536870978[0]);
          updateTime_536871274 = ms_2080374842(elapsed_2080374866(updateTimer_536871276));
          var layoutTimer_536871277 = startTimer_2080374869();
          layoutWidgetTree_3271559007(ed_536870949[0], size_2768240760(rend_536870947[0]), frameIndex_536870978[0]);
          layoutTime_536871273 = ms_2080374842(elapsed_2080374866(layoutTimer_536871277));
          var renderTimer_536871278 = startTimer_2080374869();
          render_2768240751(rend_536870947[0], ed_536870949[0].widget, frameIndex_536870978[0]);
          renderTime_536871275 = ms_2080374842(elapsed_2080374866(renderTimer_536871278));
          frameTime_536870977[0] = ms_2080374842(elapsed_2080374866(ed_536870949[0].frameTimer));
        };
        if ((20.0 < frameTime_536870977[0])) {
        var fmtRes_536871283 = [mnewString(0)];
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [70,114,97,109,101,58,32]);;
        formatValue_2785017973(fmtRes_536871283, 0, frameTime_536870977[0], [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,32,40,117,58,32]);;
        formatValue_2785017973(fmtRes_536871283, 0, updateTime_536871274, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,44,32,108,58,32]);;
        formatValue_2785017973(fmtRes_536871283, 0, layoutTime_536871273, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,44,32,114,58,32]);;
        formatValue_2785017973(fmtRes_536871283, 0, renderTime_536871275, [62,53,46,50]);
        fmtRes_536871283[0].push.apply(fmtRes_536871283[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871283[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870978[0] = addInt(frameIndex_536870978[0], 1);
        }
        } finally {
        isRenderInProgress_536870980[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870948[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870979[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870980[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871266);
  };

  
}

function subscribe_536871751(event_536871753, callback_536871755) {
  var result_536871756 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871756 = nimCopy(result_536871756, newId_2046820597(), NTI2046820355);
    event_536871753.handlers.push({Field0: nimCopy(null, result_536871756, NTI2046820355), Field1: callback_536871755});;

  return result_536871756;

}

function HEX3Aanonymous_536871333(event_536871351) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871382(event_536871400) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871431(event_536871449) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871480(event_536871498) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871529(event_536871547) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871578(event_536871596) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871627(event_536871645) {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871676() {
    requestRender_536871264(false);

  
}

function HEX3Aanonymous_536871725(redrawEverything_536871726) {
    requestRender_536871264(redrawEverything_536871726);

  
}
var _ = subscribe_1291851158(rend_536870947[0].onKeyPress, HEX3Aanonymous_536871333);
var _ = subscribe_1291851158(rend_536870947[0].onKeyRelease, HEX3Aanonymous_536871382);
var _ = subscribe_1291851158(rend_536870947[0].onRune, HEX3Aanonymous_536871431);
var _ = subscribe_1291851328(rend_536870947[0].onMousePress, HEX3Aanonymous_536871480);
var _ = subscribe_1291851328(rend_536870947[0].onMouseRelease, HEX3Aanonymous_536871529);
var _ = subscribe_1291851449(rend_536870947[0].onMouseMove, HEX3Aanonymous_536871578);
var _ = subscribe_1291851521(rend_536870947[0].onScroll, HEX3Aanonymous_536871627);
var _ = subscribe_1291851665(rend_536870947[0].onCloseRequested, HEX3Aanonymous_536871676);
var _ = subscribe_536871751(rend_536870947[0].onResized, HEX3Aanonymous_536871725);
Label312: {
  setHandleInputs_1291855208(ed_536870949[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291861099([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291861017([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859431(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859431(ed_536870949[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870948[0] = true;
requestRender_536871264(false);
const hiXorLoJs_override_mask = BigInt("0xffffffffffffffff");
const hiXorLoJs_override_shift = BigInt("64");
function hiXorLoJs_override(a, b) {
    var prod = (a * b);
    return ((prod >> hiXorLoJs_override_shift) ^ (prod & hiXorLoJs_override_mask));
}

var hashWangYi1_override_c1 = BigInt("0xa0761d6478bd642f");
var hashWangYi1_override_c2 = BigInt("0xe7037ed1a0b428db");
var hashWangYi1_override_c3 = BigInt("0xeb44accab455d16d");

function hashWangYi1_override(x) {
    if (typeof BigInt != 'undefined') {
        var res = hiXorLoJs_override(hiXorLoJs_override(hashWangYi1_override_c1, (BigInt(x) ^ hashWangYi1_override_c2)), hashWangYi1_override_c3);
        return Number(BigInt.asIntN(32, res));
    }
    else {
        return (x & 4294967295);
    }
}

let nimCopyCounters = new Map();
let nimCopyTimers = new Map();
let breakOnCopyType = null;
let stats = []

function clearNimCopyStats() {
    nimCopyCounters.clear();
    nimCopyTimers.clear();
}

function dumpNimCopyStatsImpl(desc, map, sortBy, setBreakOnCopyTypeIndex) {
    let values = []
    for (let entry of map.entries()) {
        values.push(entry)
    }

    values.sort((a, b) => b[1][sortBy] - a[1][sortBy])

    stats = values

    console.log(desc)

    let i = 0;
    for (let [type, stat] of values) {
        if (i == setBreakOnCopyTypeIndex) {
            breakOnCopyType = type
        }
        console.log(stat, ": ", type)
        i++
        if (i > 20) {
          break
        }
    }
}

function selectType(setBreakOnCopyTypeIndex) {
    if (setBreakOnCopyTypeIndex < stats.length) {
        breakOnCopyType = stats[setBreakOnCopyTypeIndex][0]
    }
}

function dumpNimCopyStats(sortBy, setBreakOnCopyTypeIndex) {
    //dumpNimCopyStatsImpl("Counts: ", nimCopyCounters)
    dumpNimCopyStatsImpl("Times: ", nimCopyTimers, sortBy || 0, setBreakOnCopyTypeIndex)
}

function nimCopyOverride(dest, src, ti) {
    if (ti === breakOnCopyType) {
      debugger;
    }

    let existing = nimCopyCounters.get(ti) || 0;
    nimCopyCounters.set(ti, existing + 1)

    let start = Date.now()
    let result = window._old_nimCopy(dest, src, ti);
    let elapsed = Date.now() - start

    let existingTime = nimCopyTimers.get(ti) || [0, 0];
    nimCopyTimers.set(ti, [existingTime[0] + elapsed, existingTime[1] + 1])

    return result;
}


function hashWangYi1_1325400278(x_1325400280) {
  var result_1325400281 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym10_1325400300 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym10_1325400301 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym10_1325400302 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym10_1325400303 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym10_1325400300, (BigInt(x_1325400280) ^ P1HEX60gensym10_1325400301)), P58HEX60gensym10_1325400302);
    result_1325400281 = Number((() => { const i = resHEX60gensym10_1325400303, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400281 = (x_1325400280 & 4294967295);
    }
    

  return result_1325400281;

}

function hashWangYi1_536871963(x_536871965) {
  var result_536871966 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_536871979 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_536871980 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_536871981 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_536871982 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_536871979, (BigInt(x_536871965) ^ P1HEX60gensym6_536871980)), P58HEX60gensym6_536871981);
    result_536871966 = Number((() => { const i = resHEX60gensym6_536871982, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_536871966 = (x_536871965 & 4294967295);
    }
    

  return result_536871966;

}
window._old_hashWangYi1_1325400278 = hashWangYi1_1325400278;
window.hashWangYi1_1325400278 = hashWangYi1_override;
window._old_hashWangYi1_1325400244 = hashWangYi1_1325400244;
window.hashWangYi1_1325400244 = hashWangYi1_override;
window._old_hashWangYi1_536871963 = hashWangYi1_536871963;
window.hashWangYi1_536871963 = hashWangYi1_override;

function formatValue_1291848865(result_1291848867, result_1291848867_Idx, value_1291848868, specifier_1291848869) {
    formatValue_721420459(result_1291848867, result_1291848867_Idx, HEX24_1627394481(value_1291848868), specifier_1291848869);

  
}

function handleUnknownDocumentEditorAction_1291848854(self_1291848855, editor_1291848856, action_1291848857, args_1291848858) {
  var result_1291848859 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (handleUnknownDocumentEditorAction_2751463456(self_1291848855.scriptContext, editor_1291848856, action_1291848857, args_1291848858)) {
    result_1291848859 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848864 = [mnewString(0)];
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848864, 0, action_1291848857, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [32]);;
    formatValue_1291848865(fmtRes_1291848864, 0, args_1291848858, []);
    fmtRes_1291848864[0].push.apply(fmtRes_1291848864[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848864, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848864[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848859 = 0;
    break BeforeRet;
  };

  return result_1291848859;

}

function insert_2818593850(x_2818593852, x_2818593852_Idx, item_2818593853, i_2818593854) {
    var it_2818593874 = null;
    x_2818593852[x_2818593852_Idx] = x_2818593852[x_2818593852_Idx] || []; x_2818593852[x_2818593852_Idx].splice(i_2818593854, 0, it_2818593874);
    x_2818593852[x_2818593852_Idx][chckIndx(i_2818593854, 0, (x_2818593852[x_2818593852_Idx]).length - 1)] = item_2818593853;

  
}

function toJson_2818584041(self_2818584042, opt_2818584043) {
  var result_2818584044 = null;

    result_2818584044 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818584044, [105,100], newJInt_1627390040(self_2818584042.id));

  return result_2818584044;

}

function none_2818583947() {
  var result_2818583953 = ({val: null});

  return result_2818583953;

}

function some_2818584006(val_2818584008) {
  var result_2818584009 = ({val: null});

    if (!(!((val_2818584008 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818584009.val = val_2818584008;

  return result_2818584009;

}

function getTextDocumentEditor_2818583937(wrapper_2818583938) {
      var Temporary1;

  var result_2818583943 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
    }
    
      var oHEX60gensym171_2818583956 = getEditorForId_1291850661(gEditor, wrapper_2818583938.id);
      if (!isSome_2818583961(oHEX60gensym171_2818583956)) Temporary1 = false; else {        var editor_2818583998 = get_2818583981(oHEX60gensym171_2818583956);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583998.m_type, NTI2818572510)) {
    result_2818583943 = nimCopy(result_2818583943, some_2818584006(editor_2818583998), NTI2818578635);
    break BeforeRet;
    }
    
    }
    
    result_2818583943 = nimCopy(result_2818583943, none_2818583947(), NTI2818578635);
    break BeforeRet;
  };

  return result_2818583943;

}

function isNone_2818584298(self_2818584300) {
  var result_2818584301 = false;

    result_2818584301 = (self_2818584300.val == null);

  return result_2818584301;

}

function get_2818584318(self_2818584320) {
  var result_2818584321 = null;

    if (isNone_2818584298(self_2818584320)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818584321 = self_2818584320["val"];

  return result_2818584321;

}

function setModeScript_2818584183_2818584290(self_2818584291, mode_2818584292) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym182_2818584293 = getTextDocumentEditor_2818583937(self_2818584291);
      if (isNone_2818584298(rHEX60gensym182_2818584293)) {
      break BeforeRet;
      }
      
    };
    setMode_2818584223(get_2818584318(rHEX60gensym182_2818584293), mode_2818584292);
  };

  
}

function fromJsonHook_2818584045(t_2818584046, jsonNode_2818584047) {
    t_2818584046.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2818584047, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818584358(a_2818584360, b_2818584361, opt_2818584362) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584361, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818584361}));
    }
    
    fromJsonHook_2818584045(a_2818584360, b_2818584361);

  
}

function jsonTo_2818584352(b_2818584354, opt_2818584356) {
  var result_2818584357 = [({id: 0})];

    fromJson_2818584358(result_2818584357[0], b_2818584354, opt_2818584356);

  return result_2818584357[0];

}

function setModeApi_2818584350(HEX3Atmp_2818584186) {
  var result_2818584351 = null;

    result_2818584351 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2818584183_2818584290(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584186, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_2818584374 = [115,101,116,77,111,100,101];
    var fmtRes_2818584379 = [mnewString(0)];
    fmtRes_2818584379[0].push.apply(fmtRes_2818584379[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584379, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_2818584374 || [],fmtRes_2818584379[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584351;

}

function modeScript_2818584474_2818584482(self_2818584483) {
  var result_2818584484 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym196_2818584485 = getTextDocumentEditor_2818583937(self_2818584483);
      if (isNone_2818584298(rHEX60gensym196_2818584485)) {
      break BeforeRet;
      }
      
    };
    result_2818584484 = nimCopy(null, mode_2818584479(get_2818584318(rHEX60gensym196_2818584485)), NTI33554449);
  };

  return result_2818584484;

}

function modeApi_2818584512(HEX3Atmp_2818584476) {
  var result_2818584513 = null;

  BeforeRet: {
    result_2818584513 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818584513 = toJson_1811939932(modeScript_2818584474_2818584482(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584476, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym202_2818584523 = [109,111,100,101];
    var fmtRes_2818584528 = [mnewString(0)];
    fmtRes_2818584528[0].push.apply(fmtRes_2818584528[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584528, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym202_2818584523 || [],fmtRes_2818584528[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584513;

}

function getContextWithModeScript_2818584531_2818584540(self_2818584541, context_2818584542) {
  var result_2818584543 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym206_2818584544 = getTextDocumentEditor_2818583937(self_2818584541);
      if (isNone_2818584298(rHEX60gensym206_2818584544)) {
      break BeforeRet;
      }
      
    };
    result_2818584543 = nimCopy(null, getContextWithMode_2818583609(get_2818584318(rHEX60gensym206_2818584544), context_2818584542), NTI33554449);
  };

  return result_2818584543;

}

function getContextWithModeApi_2818584572(HEX3Atmp_2818584533) {
  var result_2818584573 = null;

  BeforeRet: {
    result_2818584573 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818584573 = toJson_1811939932(getContextWithModeScript_2818584531_2818584540(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584533, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584533, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym212_2818584588 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818584593 = [mnewString(0)];
    fmtRes_2818584593[0].push.apply(fmtRes_2818584593[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584593, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym212_2818584588 || [],fmtRes_2818584593[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584573;

}

function updateTargetColumnScript_2818584596_2818584604(self_2818584605, cursor_2818584606) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym216_2818584607 = getTextDocumentEditor_2818583937(self_2818584605);
      if (isNone_2818584298(rHEX60gensym216_2818584607)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818584601(get_2818584318(rHEX60gensym216_2818584607), cursor_2818584606);
  };

  
}

function parseEnum_2818584659(s_2818584661) {
    var Temporary1;

  var result_2818584662 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818584661))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818584661 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818584662 = Temporary1;

  return result_2818584662;

}

function fromJson_2818584647(a_2818584649, a_2818584649_Idx, b_2818584650, opt_2818584651) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584650, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818584650}));
    }
    
    switch (b_2818584650.kind) {
    case 2:
      a_2818584649[a_2818584649_Idx] = chckRange(getBiggestInt_1627390129(b_2818584650, 0), 0, 4);
      break;
    case 4:
      a_2818584649[a_2818584649_Idx] = parseEnum_2818584659(getStr_1627390106(b_2818584650, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818584687 = [mnewString(0)];
      fmtRes_2818584687[0].push.apply(fmtRes_2818584687[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818584687, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818584687[0].push.apply(fmtRes_2818584687[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818584687, 0, pretty_1627394477(b_2818584650, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818584687[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818584641(b_2818584643, opt_2818584645) {
  var result_2818584646 = [0];

    fromJson_2818584647(result_2818584646, 0, b_2818584643, opt_2818584645);

  return result_2818584646[0];

}

function updateTargetColumnApi_2818584634(HEX3Atmp_2818584598) {
  var result_2818584635 = null;

    result_2818584635 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2818584596_2818584604(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584598, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818584598, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym221_2818584691 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2818584696 = [mnewString(0)];
    fmtRes_2818584696[0].push.apply(fmtRes_2818584696[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584696, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym221_2818584691 || [],fmtRes_2818584696[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584635;

}

function invertSelectionScript_2818584713_2818584720(self_2818584721) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym230_2818584722 = getTextDocumentEditor_2818583937(self_2818584721);
      if (isNone_2818584298(rHEX60gensym230_2818584722)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818584718(get_2818584318(rHEX60gensym230_2818584722));
  };

  
}

function invertSelectionApi_2818584748(HEX3Atmp_2818584715) {
  var result_2818584749 = null;

    result_2818584749 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2818584713_2818584720(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584715, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym235_2818584755 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818584760 = [mnewString(0)];
    fmtRes_2818584760[0].push.apply(fmtRes_2818584760[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584760, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym235_2818584755 || [],fmtRes_2818584760[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584749;

}

function insertScript_2818584776_2818584789(self_2818584790, selections_2818584791, text_2818584792, notify_2818584793, record_2818584794, autoIndent_2818584795) {
  var result_2818584796 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym243_2818584797 = getTextDocumentEditor_2818583937(self_2818584790);
      if (isNone_2818584298(rHEX60gensym243_2818584797)) {
      break BeforeRet;
      }
      
    };
    result_2818584796 = nimCopy(null, insert_2818584781(get_2818584318(rHEX60gensym243_2818584797), selections_2818584791, text_2818584792, notify_2818584793, record_2818584794, autoIndent_2818584795), NTI2818579318);
  };

  return result_2818584796;

}

function insertApi_2818584829(HEX3Atmp_2818584778) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2818584830 = null;

  BeforeRet: {
    result_2818584830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary8 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2818584778))) {
      Temporary10 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2818584830 = toJson_2818585128(insertScript_2818584776_2818584789(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818584778, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym249_2818585184 = [105,110,115,101,114,116];
    var fmtRes_2818585189 = [mnewString(0)];
    fmtRes_2818585189[0].push.apply(fmtRes_2818585189[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585189, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym249_2818585184 || [],fmtRes_2818585189[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584830;

}

function deleteScript_2818585277_2818585288(self_2818585289, selections_2818585290, notify_2818585291, record_2818585292) {
  var result_2818585293 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym276_2818585294 = getTextDocumentEditor_2818583937(self_2818585289);
      if (isNone_2818584298(rHEX60gensym276_2818585294)) {
      break BeforeRet;
      }
      
    };
    result_2818585293 = nimCopy(null, delete_2818585282(get_2818584318(rHEX60gensym276_2818585294), selections_2818585290, notify_2818585291, record_2818585292), NTI2818579834);
  };

  return result_2818585293;

}

function deleteApi_2818585324(HEX3Atmp_2818585279) {
      var Temporary5;
      var Temporary7;

  var result_2818585325 = null;

  BeforeRet: {
    result_2818585325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818585279))) {
      Temporary5 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818585279))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2818585325 = toJson_2818585128(deleteScript_2818585277_2818585288(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584836(HEX5BHEX5D_1627393116(HEX3Atmp_2818585279, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym282_2818585350 = [100,101,108,101,116,101];
    var fmtRes_2818585355 = [mnewString(0)];
    fmtRes_2818585355[0].push.apply(fmtRes_2818585355[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585355, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym282_2818585350 || [],fmtRes_2818585355[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818585325;

}

function selectPrevScript_2818585393_2818585567(self_2818585568) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym287_2818585569 = getTextDocumentEditor_2818583937(self_2818585568);
      if (isNone_2818584298(rHEX60gensym287_2818585569)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818585398(get_2818584318(rHEX60gensym287_2818585569));
  };

  
}

function selectPrevApi_2818585595(HEX3Atmp_2818585395) {
  var result_2818585596 = null;

    result_2818585596 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2818585393_2818585567(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585395, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym292_2818585602 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818585607 = [mnewString(0)];
    fmtRes_2818585607[0].push.apply(fmtRes_2818585607[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585607, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym292_2818585602 || [],fmtRes_2818585607[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585596;

}

function selectNextScript_2818585611_2818585762(self_2818585763) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym298_2818585764 = getTextDocumentEditor_2818583937(self_2818585763);
      if (isNone_2818584298(rHEX60gensym298_2818585764)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818585616(get_2818584318(rHEX60gensym298_2818585764));
  };

  
}

function selectNextApi_2818585790(HEX3Atmp_2818585613) {
  var result_2818585791 = null;

    result_2818585791 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2818585611_2818585762(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585613, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym303_2818585797 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818585802 = [mnewString(0)];
    fmtRes_2818585802[0].push.apply(fmtRes_2818585802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym303_2818585797 || [],fmtRes_2818585802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585791;

}

function selectInsideScript_2818585805_2818585824(self_2818585825, cursor_2818585826) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym308_2818585827 = getTextDocumentEditor_2818583937(self_2818585825);
      if (isNone_2818584298(rHEX60gensym308_2818585827)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818585810(get_2818584318(rHEX60gensym308_2818585827), cursor_2818585826);
  };

  
}

function jsonTo_2818585861(b_2818585863, opt_2818585865) {
  var result_2818585866 = [{Field0: 0, Field1: 0}];

    fromJson_2818584951(result_2818585866[0], b_2818585863, opt_2818585865);

  return result_2818585866[0];

}

function selectInsideApi_2818585854(HEX3Atmp_2818585807) {
  var result_2818585855 = null;

    result_2818585855 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2818585805_2818585824(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585807, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818585807, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym313_2818585872 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2818585877 = [mnewString(0)];
    fmtRes_2818585877[0].push.apply(fmtRes_2818585877[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585877, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym313_2818585872 || [],fmtRes_2818585877[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585855;

}

function selectInsideCurrentScript_2818585882_2818585889(self_2818585890) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_2818585891 = getTextDocumentEditor_2818583937(self_2818585890);
      if (isNone_2818584298(rHEX60gensym317_2818585891)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818585887(get_2818584318(rHEX60gensym317_2818585891));
  };

  
}

function selectInsideCurrentApi_2818585917(HEX3Atmp_2818585884) {
  var result_2818585918 = null;

    result_2818585918 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2818585882_2818585889(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585884, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym322_2818585924 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2818585929 = [mnewString(0)];
    fmtRes_2818585929[0].push.apply(fmtRes_2818585929[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585929, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym322_2818585924 || [],fmtRes_2818585929[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585918;

}

function selectLineScript_2818585932_2818585940(self_2818585941, line_2818585942) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym326_2818585943 = getTextDocumentEditor_2818583937(self_2818585941);
      if (isNone_2818584298(rHEX60gensym326_2818585943)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585937(get_2818584318(rHEX60gensym326_2818585943), line_2818585942);
  };

  
}

function selectLineApi_2818585970(HEX3Atmp_2818585934) {
  var result_2818585971 = null;

    result_2818585971 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2818585932_2818585940(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585934, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818585934, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym331_2818585982 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2818585987 = [mnewString(0)];
    fmtRes_2818585987[0].push.apply(fmtRes_2818585987[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585987, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym331_2818585982 || [],fmtRes_2818585987[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585971;

}

function selectLineCurrentScript_2818585990_2818585997(self_2818585998) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym334_2818585999 = getTextDocumentEditor_2818583937(self_2818585998);
      if (isNone_2818584298(rHEX60gensym334_2818585999)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585995(get_2818584318(rHEX60gensym334_2818585999));
  };

  
}

function selectLineCurrentApi_2818586025(HEX3Atmp_2818585992) {
  var result_2818586026 = null;

    result_2818586026 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2818585990_2818585997(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818585992, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym339_2818586032 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2818586037 = [mnewString(0)];
    fmtRes_2818586037[0].push.apply(fmtRes_2818586037[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586037, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym339_2818586032 || [],fmtRes_2818586037[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586026;

}

function selectParentTsScript_2818586040_2818586060(self_2818586061, selection_2818586062) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym343_2818586063 = getTextDocumentEditor_2818583937(self_2818586061);
      if (isNone_2818584298(rHEX60gensym343_2818586063)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818586045(get_2818584318(rHEX60gensym343_2818586063), selection_2818586062);
  };

  
}

function selectParentTsApi_2818586090(HEX3Atmp_2818586042) {
  var result_2818586091 = null;

    result_2818586091 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2818586040_2818586060(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586042, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586097(HEX5BHEX5D_1627393116(HEX3Atmp_2818586042, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym348_2818586108 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2818586113 = [mnewString(0)];
    fmtRes_2818586113[0].push.apply(fmtRes_2818586113[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586113, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym348_2818586108 || [],fmtRes_2818586113[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586091;

}

function selectParentCurrentTsScript_2818586123_2818586130(self_2818586131) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym352_2818586132 = getTextDocumentEditor_2818583937(self_2818586131);
      if (isNone_2818584298(rHEX60gensym352_2818586132)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818586128(get_2818584318(rHEX60gensym352_2818586132));
  };

  
}

function selectParentCurrentTsApi_2818586158(HEX3Atmp_2818586125) {
  var result_2818586159 = null;

    result_2818586159 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2818586123_2818586130(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586125, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym357_2818586165 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2818586170 = [mnewString(0)];
    fmtRes_2818586170[0].push.apply(fmtRes_2818586170[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586170, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym357_2818586165 || [],fmtRes_2818586170[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586159;

}

function insertTextScript_2818586176_2818586185(self_2818586186, text_2818586187) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym362_2818586188 = getTextDocumentEditor_2818583937(self_2818586186);
      if (isNone_2818584298(rHEX60gensym362_2818586188)) {
      break BeforeRet;
      }
      
    };
    insertText_2818586181(get_2818584318(rHEX60gensym362_2818586188), text_2818586187);
  };

  
}

function insertTextApi_2818586215(HEX3Atmp_2818586178) {
  var result_2818586216 = null;

    result_2818586216 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2818586176_2818586185(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586178, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818586178, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym367_2818586227 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2818586232 = [mnewString(0)];
    fmtRes_2818586232[0].push.apply(fmtRes_2818586232[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586232, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym367_2818586227 || [],fmtRes_2818586232[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586216;

}

function undoScript_2818586248_2818586303(self_2818586304) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym372_2818586305 = getTextDocumentEditor_2818583937(self_2818586304);
      if (isNone_2818584298(rHEX60gensym372_2818586305)) {
      break BeforeRet;
      }
      
    };
    undo_2818586253(get_2818584318(rHEX60gensym372_2818586305));
  };

  
}

function undoApi_2818586331(HEX3Atmp_2818586250) {
  var result_2818586332 = null;

    result_2818586332 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2818586248_2818586303(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586250, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym377_2818586338 = [117,110,100,111];
    var fmtRes_2818586343 = [mnewString(0)];
    fmtRes_2818586343[0].push.apply(fmtRes_2818586343[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586343, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym377_2818586338 || [],fmtRes_2818586343[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586332;

}

function redoScript_2818586350_2818586383(self_2818586384) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym382_2818586385 = getTextDocumentEditor_2818583937(self_2818586384);
      if (isNone_2818584298(rHEX60gensym382_2818586385)) {
      break BeforeRet;
      }
      
    };
    redo_2818586355(get_2818584318(rHEX60gensym382_2818586385));
  };

  
}

function redoApi_2818586411(HEX3Atmp_2818586352) {
  var result_2818586412 = null;

    result_2818586412 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2818586350_2818586383(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586352, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym387_2818586418 = [114,101,100,111];
    var fmtRes_2818586423 = [mnewString(0)];
    fmtRes_2818586423[0].push.apply(fmtRes_2818586423[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586423, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym387_2818586418 || [],fmtRes_2818586423[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586412;

}

function scrollTextScript_2818586430_2818586442(self_2818586443, amount_2818586444) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym392_2818586445 = getTextDocumentEditor_2818583937(self_2818586443);
      if (isNone_2818584298(rHEX60gensym392_2818586445)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818586435(get_2818584318(rHEX60gensym392_2818586445), amount_2818586444);
  };

  
}

function scrollTextApi_2818586472(HEX3Atmp_2818586432) {
  var result_2818586473 = null;

    result_2818586473 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2818586430_2818586442(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym397_2818586542 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2818586547 = [mnewString(0)];
    fmtRes_2818586547[0].push.apply(fmtRes_2818586547[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586547, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym397_2818586542 || [],fmtRes_2818586547[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586473;

}

function duplicateLastSelectionScript_2818586550_2818586599(self_2818586600) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym406_2818586601 = getTextDocumentEditor_2818583937(self_2818586600);
      if (isNone_2818584298(rHEX60gensym406_2818586601)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818586555(get_2818584318(rHEX60gensym406_2818586601));
  };

  
}

function duplicateLastSelectionApi_2818586627(HEX3Atmp_2818586552) {
  var result_2818586628 = null;

    result_2818586628 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2818586550_2818586599(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586552, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym411_2818586634 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586639 = [mnewString(0)];
    fmtRes_2818586639[0].push.apply(fmtRes_2818586639[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586639, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym411_2818586634 || [],fmtRes_2818586639[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586628;

}

function addCursorBelowScript_2818586650_2818586669(self_2818586670) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym414_2818586671 = getTextDocumentEditor_2818583937(self_2818586670);
      if (isNone_2818584298(rHEX60gensym414_2818586671)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818586655(get_2818584318(rHEX60gensym414_2818586671));
  };

  
}

function addCursorBelowApi_2818586697(HEX3Atmp_2818586652) {
  var result_2818586698 = null;

    result_2818586698 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2818586650_2818586669(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586652, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym419_2818586704 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2818586709 = [mnewString(0)];
    fmtRes_2818586709[0].push.apply(fmtRes_2818586709[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586709, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym419_2818586704 || [],fmtRes_2818586709[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586698;

}

function addCursorAboveScript_2818586716_2818586735(self_2818586736) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym422_2818586737 = getTextDocumentEditor_2818583937(self_2818586736);
      if (isNone_2818584298(rHEX60gensym422_2818586737)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818586721(get_2818584318(rHEX60gensym422_2818586737));
  };

  
}

function addCursorAboveApi_2818586763(HEX3Atmp_2818586718) {
  var result_2818586764 = null;

    result_2818586764 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2818586716_2818586735(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586718, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym427_2818586770 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2818586775 = [mnewString(0)];
    fmtRes_2818586775[0].push.apply(fmtRes_2818586775[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586775, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym427_2818586770 || [],fmtRes_2818586775[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586764;

}

function getPrevFindResultScript_2818586778_2818587058(self_2818587059, cursor_2818587060, offset_2818587061) {
  var result_2818587062 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym432_2818587063 = getTextDocumentEditor_2818583937(self_2818587059);
      if (isNone_2818584298(rHEX60gensym432_2818587063)) {
      break BeforeRet;
      }
      
    };
    result_2818587062 = nimCopy(result_2818587062, getPrevFindResult_2818583550(get_2818584318(rHEX60gensym432_2818587063), cursor_2818587060, offset_2818587061), NTI2449473547);
  };

  return result_2818587062;

}

function getPrevFindResultApi_2818587092(HEX3Atmp_2818586780) {
      var Temporary5;

  var result_2818587093 = null;

  BeforeRet: {
    result_2818587093 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586780))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587093 = toJson_2818585140(getPrevFindResultScript_2818586778_2818587058(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818586780, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym438_2818587113 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587118 = [mnewString(0)];
    fmtRes_2818587118[0].push.apply(fmtRes_2818587118[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587118, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym438_2818587113 || [],fmtRes_2818587118[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587093;

}

function getNextFindResultScript_2818587129_2818587302(self_2818587303, cursor_2818587304, offset_2818587305) {
  var result_2818587306 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym444_2818587307 = getTextDocumentEditor_2818583937(self_2818587303);
      if (isNone_2818584298(rHEX60gensym444_2818587307)) {
      break BeforeRet;
      }
      
    };
    result_2818587306 = nimCopy(result_2818587306, getNextFindResult_2818583554(get_2818584318(rHEX60gensym444_2818587307), cursor_2818587304, offset_2818587305), NTI2449473547);
  };

  return result_2818587306;

}

function getNextFindResultApi_2818587336(HEX3Atmp_2818587131) {
      var Temporary5;

  var result_2818587337 = null;

  BeforeRet: {
    result_2818587337 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587131))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818587337 = toJson_2818585140(getNextFindResultScript_2818587129_2818587302(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818587131, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2818587357 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587362 = [mnewString(0)];
    fmtRes_2818587362[0].push.apply(fmtRes_2818587362[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587362, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2818587357 || [],fmtRes_2818587362[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587337;

}

function addNextFindResultToSelectionScript_2818587375_2818587390(self_2818587391) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym454_2818587392 = getTextDocumentEditor_2818583937(self_2818587391);
      if (isNone_2818584298(rHEX60gensym454_2818587392)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818587380(get_2818584318(rHEX60gensym454_2818587392));
  };

  
}

function addNextFindResultToSelectionApi_2818587418(HEX3Atmp_2818587377) {
  var result_2818587419 = null;

    result_2818587419 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2818587375_2818587390(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587377, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym459_2818587425 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587430 = [mnewString(0)];
    fmtRes_2818587430[0].push.apply(fmtRes_2818587430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym459_2818587425 || [],fmtRes_2818587430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587419;

}

function addPrevFindResultToSelectionScript_2818587433_2818587448(self_2818587449) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym462_2818587450 = getTextDocumentEditor_2818583937(self_2818587449);
      if (isNone_2818584298(rHEX60gensym462_2818587450)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818587438(get_2818584318(rHEX60gensym462_2818587450));
  };

  
}

function addPrevFindResultToSelectionApi_2818587476(HEX3Atmp_2818587435) {
  var result_2818587477 = null;

    result_2818587477 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2818587433_2818587448(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587435, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym467_2818587483 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587488 = [mnewString(0)];
    fmtRes_2818587488[0].push.apply(fmtRes_2818587488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym467_2818587483 || [],fmtRes_2818587488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587477;

}

function setAllFindResultToSelectionScript_2818587491_2818587822(self_2818587823) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym470_2818587824 = getTextDocumentEditor_2818583937(self_2818587823);
      if (isNone_2818584298(rHEX60gensym470_2818587824)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818587496(get_2818584318(rHEX60gensym470_2818587824));
  };

  
}

function setAllFindResultToSelectionApi_2818587850(HEX3Atmp_2818587493) {
  var result_2818587851 = null;

    result_2818587851 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2818587491_2818587822(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587493, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym475_2818587857 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818587862 = [mnewString(0)];
    fmtRes_2818587862[0].push.apply(fmtRes_2818587862[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587862, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym475_2818587857 || [],fmtRes_2818587862[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587851;

}

function clearSelectionsScript_2818587880_2818587893(self_2818587894) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym480_2818587895 = getTextDocumentEditor_2818583937(self_2818587894);
      if (isNone_2818584298(rHEX60gensym480_2818587895)) {
      break BeforeRet;
      }
      
    };
    clearSelections_2818587885(get_2818584318(rHEX60gensym480_2818587895));
  };

  
}

function clearSelectionsApi_2818587921(HEX3Atmp_2818587882) {
  var result_2818587922 = null;

    result_2818587922 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearSelectionsScript_2818587880_2818587893(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587882, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym485_2818587928 = [99,108,101,97,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_2818587933 = [mnewString(0)];
    fmtRes_2818587933[0].push.apply(fmtRes_2818587933[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587933, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym485_2818587928 || [],fmtRes_2818587933[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587922;

}

function moveCursorColumnScript_2818587936_2818587964(self_2818587965, distance_2818587966, cursor_2818587967, all_2818587968) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym492_2818587969 = getTextDocumentEditor_2818583937(self_2818587965);
      if (isNone_2818584298(rHEX60gensym492_2818587969)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818587941(get_2818584318(rHEX60gensym492_2818587969), distance_2818587966, cursor_2818587967, all_2818587968);
  };

  
}

function moveCursorColumnApi_2818587998(HEX3Atmp_2818587938) {
      var Temporary5;
      var Temporary7;

  var result_2818587999 = null;

    result_2818587999 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587938))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587938))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2818587936_2818587964(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym497_2818588020 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2818588025 = [mnewString(0)];
    fmtRes_2818588025[0].push.apply(fmtRes_2818588025[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588025, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym497_2818588020 || [],fmtRes_2818588025[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587999;

}

function moveCursorLineScript_2818588044_2818588054(self_2818588055, distance_2818588056, cursor_2818588057, all_2818588058) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym505_2818588059 = getTextDocumentEditor_2818583937(self_2818588055);
      if (isNone_2818584298(rHEX60gensym505_2818588059)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818588049(get_2818584318(rHEX60gensym505_2818588059), distance_2818588056, cursor_2818588057, all_2818588058);
  };

  
}

function moveCursorLineApi_2818588088(HEX3Atmp_2818588046) {
      var Temporary5;
      var Temporary7;

  var result_2818588089 = null;

    result_2818588089 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588046))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588046))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2818588044_2818588054(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588046, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym510_2818588110 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2818588115 = [mnewString(0)];
    fmtRes_2818588115[0].push.apply(fmtRes_2818588115[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588115, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym510_2818588110 || [],fmtRes_2818588115[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588089;

}

function moveCursorHomeScript_2818588118_2818588127(self_2818588128, cursor_2818588129, all_2818588130) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_2818588131 = getTextDocumentEditor_2818583937(self_2818588128);
      if (isNone_2818584298(rHEX60gensym517_2818588131)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818588123(get_2818584318(rHEX60gensym517_2818588131), cursor_2818588129, all_2818588130);
  };

  
}

function moveCursorHomeApi_2818588159(HEX3Atmp_2818588120) {
      var Temporary4;
      var Temporary6;

  var result_2818588160 = null;

    result_2818588160 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588120))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588120))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2818588118_2818588127(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588120, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_2818588176 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2818588181 = [mnewString(0)];
    fmtRes_2818588181[0].push.apply(fmtRes_2818588181[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588181, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_2818588176 || [],fmtRes_2818588181[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588160;

}

function moveCursorEndScript_2818588186_2818588195(self_2818588196, cursor_2818588197, all_2818588198) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym529_2818588199 = getTextDocumentEditor_2818583937(self_2818588196);
      if (isNone_2818584298(rHEX60gensym529_2818588199)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818588191(get_2818584318(rHEX60gensym529_2818588199), cursor_2818588197, all_2818588198);
  };

  
}

function moveCursorEndApi_2818588227(HEX3Atmp_2818588188) {
      var Temporary4;
      var Temporary6;

  var result_2818588228 = null;

    result_2818588228 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588188))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588188))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2818588186_2818588195(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588188, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym534_2818588244 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2818588249 = [mnewString(0)];
    fmtRes_2818588249[0].push.apply(fmtRes_2818588249[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588249, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym534_2818588244 || [],fmtRes_2818588249[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588228;

}

function moveCursorToScript_2818588254_2818588271(self_2818588272, str_2818588273, cursor_2818588274, all_2818588275) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym542_2818588276 = getTextDocumentEditor_2818583937(self_2818588272);
      if (isNone_2818584298(rHEX60gensym542_2818588276)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818588259(get_2818584318(rHEX60gensym542_2818588276), str_2818588273, cursor_2818588274, all_2818588275);
  };

  
}

function moveCursorToApi_2818588305(HEX3Atmp_2818588256) {
      var Temporary5;
      var Temporary7;

  var result_2818588306 = null;

    result_2818588306 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588256))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588256))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2818588254_2818588271(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588256, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym547_2818588327 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2818588332 = [mnewString(0)];
    fmtRes_2818588332[0].push.apply(fmtRes_2818588332[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588332, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym547_2818588327 || [],fmtRes_2818588332[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588306;

}

function moveCursorBeforeScript_2818588337_2818588354(self_2818588355, str_2818588356, cursor_2818588357, all_2818588358) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2818588359 = getTextDocumentEditor_2818583937(self_2818588355);
      if (isNone_2818584298(rHEX60gensym556_2818588359)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818588342(get_2818584318(rHEX60gensym556_2818588359), str_2818588356, cursor_2818588357, all_2818588358);
  };

  
}

function moveCursorBeforeApi_2818588388(HEX3Atmp_2818588339) {
      var Temporary5;
      var Temporary7;

  var result_2818588389 = null;

    result_2818588389 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588339))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588339))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2818588337_2818588354(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588339, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym561_2818588410 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2818588415 = [mnewString(0)];
    fmtRes_2818588415[0].push.apply(fmtRes_2818588415[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588415, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym561_2818588410 || [],fmtRes_2818588415[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588389;

}

function moveCursorNextFindResultScript_2818588420_2818588429(self_2818588430, cursor_2818588431, all_2818588432) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2818588433 = getTextDocumentEditor_2818583937(self_2818588430);
      if (isNone_2818584298(rHEX60gensym569_2818588433)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818588425(get_2818584318(rHEX60gensym569_2818588433), cursor_2818588431, all_2818588432);
  };

  
}

function moveCursorNextFindResultApi_2818588461(HEX3Atmp_2818588422) {
      var Temporary4;
      var Temporary6;

  var result_2818588462 = null;

    result_2818588462 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588422))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588422))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818588420_2818588429(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588422, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym574_2818588478 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588483 = [mnewString(0)];
    fmtRes_2818588483[0].push.apply(fmtRes_2818588483[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588483, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym574_2818588478 || [],fmtRes_2818588483[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588462;

}

function moveCursorPrevFindResultScript_2818588486_2818588495(self_2818588496, cursor_2818588497, all_2818588498) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2818588499 = getTextDocumentEditor_2818583937(self_2818588496);
      if (isNone_2818584298(rHEX60gensym581_2818588499)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818588491(get_2818584318(rHEX60gensym581_2818588499), cursor_2818588497, all_2818588498);
  };

  
}

function moveCursorPrevFindResultApi_2818588527(HEX3Atmp_2818588488) {
      var Temporary4;
      var Temporary6;

  var result_2818588528 = null;

    result_2818588528 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588488))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818588488))) {
      Temporary6 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818588486_2818588495(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588488, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_2818588544 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818588549 = [mnewString(0)];
    fmtRes_2818588549[0].push.apply(fmtRes_2818588549[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588549, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_2818588544 || [],fmtRes_2818588549[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588528;

}

function scrollToCursorScript_2818588552_2818588560(self_2818588561, cursor_2818588562) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2818588563 = getTextDocumentEditor_2818583937(self_2818588561);
      if (isNone_2818584298(rHEX60gensym592_2818588563)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818584038(get_2818584318(rHEX60gensym592_2818588563), cursor_2818588562);
  };

  
}

function scrollToCursorApi_2818588590(HEX3Atmp_2818588554) {
      var Temporary4;

  var result_2818588591 = null;

    result_2818588591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818588554))) {
      Temporary4 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818588554, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2818588552_2818588560(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588554, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_2818588602 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2818588607 = [mnewString(0)];
    fmtRes_2818588607[0].push.apply(fmtRes_2818588607[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588607, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_2818588602 || [],fmtRes_2818588607[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588591;

}

function reloadTreesitterScript_2818588610_2818588617(self_2818588618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym601_2818588619 = getTextDocumentEditor_2818583937(self_2818588618);
      if (isNone_2818584298(rHEX60gensym601_2818588619)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818588615(get_2818584318(rHEX60gensym601_2818588619));
  };

  
}

function reloadTreesitterApi_2818588645(HEX3Atmp_2818588612) {
  var result_2818588646 = null;

    result_2818588646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2818588610_2818588617(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588612, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym606_2818588652 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2818588657 = [mnewString(0)];
    fmtRes_2818588657[0].push.apply(fmtRes_2818588657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym606_2818588652 || [],fmtRes_2818588657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588646;

}

function deleteLeftScript_2818588666_2818588681(self_2818588682) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym610_2818588683 = getTextDocumentEditor_2818583937(self_2818588682);
      if (isNone_2818584298(rHEX60gensym610_2818588683)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818588671(get_2818584318(rHEX60gensym610_2818588683));
  };

  
}

function deleteLeftApi_2818588709(HEX3Atmp_2818588668) {
  var result_2818588710 = null;

    result_2818588710 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2818588666_2818588681(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588668, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym615_2818588716 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2818588721 = [mnewString(0)];
    fmtRes_2818588721[0].push.apply(fmtRes_2818588721[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588721, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym615_2818588716 || [],fmtRes_2818588721[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588710;

}

function deleteRightScript_2818588730_2818588745(self_2818588746) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym618_2818588747 = getTextDocumentEditor_2818583937(self_2818588746);
      if (isNone_2818584298(rHEX60gensym618_2818588747)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818588735(get_2818584318(rHEX60gensym618_2818588747));
  };

  
}

function deleteRightApi_2818588773(HEX3Atmp_2818588732) {
  var result_2818588774 = null;

    result_2818588774 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2818588730_2818588745(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588732, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym623_2818588780 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2818588785 = [mnewString(0)];
    fmtRes_2818588785[0].push.apply(fmtRes_2818588785[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588785, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym623_2818588780 || [],fmtRes_2818588785[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588774;

}

function getCommandCountScript_2818588794_2818588802(self_2818588803) {
  var result_2818588804 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym626_2818588805 = getTextDocumentEditor_2818583937(self_2818588803);
      if (isNone_2818584298(rHEX60gensym626_2818588805)) {
      break BeforeRet;
      }
      
    };
    result_2818588804 = getCommandCount_2818588799(get_2818584318(rHEX60gensym626_2818588805));
  };

  return result_2818588804;

}

function getCommandCountApi_2818588832(HEX3Atmp_2818588796) {
  var result_2818588833 = null;

  BeforeRet: {
    result_2818588833 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818588833 = toJson_2818585166(getCommandCountScript_2818588794_2818588802(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588796, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2818588843 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588848 = [mnewString(0)];
    fmtRes_2818588848[0].push.apply(fmtRes_2818588848[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588848, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2818588843 || [],fmtRes_2818588848[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588833;

}

function setCommandCountScript_2818588851_2818588859(self_2818588860, count_2818588861) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2818588862 = getTextDocumentEditor_2818583937(self_2818588860);
      if (isNone_2818584298(rHEX60gensym636_2818588862)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818588856(get_2818584318(rHEX60gensym636_2818588862), count_2818588861);
  };

  
}

function setCommandCountApi_2818588889(HEX3Atmp_2818588853) {
  var result_2818588890 = null;

    result_2818588890 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2818588851_2818588859(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588853, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588853, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2818588901 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818588906 = [mnewString(0)];
    fmtRes_2818588906[0].push.apply(fmtRes_2818588906[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588906, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2818588901 || [],fmtRes_2818588906[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588890;

}

function setCommandCountRestoreScript_2818588909_2818588917(self_2818588918, count_2818588919) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym645_2818588920 = getTextDocumentEditor_2818583937(self_2818588918);
      if (isNone_2818584298(rHEX60gensym645_2818588920)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818588914(get_2818584318(rHEX60gensym645_2818588920), count_2818588919);
  };

  
}

function setCommandCountRestoreApi_2818588947(HEX3Atmp_2818588911) {
  var result_2818588948 = null;

    result_2818588948 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2818588909_2818588917(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588911, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588911, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym650_2818588959 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2818588964 = [mnewString(0)];
    fmtRes_2818588964[0].push.apply(fmtRes_2818588964[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588964, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym650_2818588959 || [],fmtRes_2818588964[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588948;

}

function updateCommandCountScript_2818588967_2818588975(self_2818588976, digit_2818588977) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym654_2818588978 = getTextDocumentEditor_2818583937(self_2818588976);
      if (isNone_2818584298(rHEX60gensym654_2818588978)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818588972(get_2818584318(rHEX60gensym654_2818588978), digit_2818588977);
  };

  
}

function updateCommandCountApi_2818589005(HEX3Atmp_2818588969) {
  var result_2818589006 = null;

    result_2818589006 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2818588967_2818588975(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818588969, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818588969, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym659_2818589017 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818589022 = [mnewString(0)];
    fmtRes_2818589022[0].push.apply(fmtRes_2818589022[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589022, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym659_2818589017 || [],fmtRes_2818589022[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589006;

}

function setFlagScript_2818589025_2818589034(self_2818589035, name_2818589036, value_2818589037) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym664_2818589038 = getTextDocumentEditor_2818583937(self_2818589035);
      if (isNone_2818584298(rHEX60gensym664_2818589038)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818589030(get_2818584318(rHEX60gensym664_2818589038), name_2818589036, value_2818589037);
  };

  
}

function setFlagApi_2818589066(HEX3Atmp_2818589027) {
  var result_2818589067 = null;

    result_2818589067 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2818589025_2818589034(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589027, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym669_2818589083 = [115,101,116,70,108,97,103];
    var fmtRes_2818589088 = [mnewString(0)];
    fmtRes_2818589088[0].push.apply(fmtRes_2818589088[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589088, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym669_2818589083 || [],fmtRes_2818589088[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589067;

}

function getFlagScript_2818589091_2818589100(self_2818589101, name_2818589102) {
  var result_2818589103 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym673_2818589104 = getTextDocumentEditor_2818583937(self_2818589101);
      if (isNone_2818584298(rHEX60gensym673_2818589104)) {
      break BeforeRet;
      }
      
    };
    result_2818589103 = getFlag_2818589096(get_2818584318(rHEX60gensym673_2818589104), name_2818589102);
  };

  return result_2818589103;

}

function getFlagApi_2818589132(HEX3Atmp_2818589093) {
  var result_2818589133 = null;

  BeforeRet: {
    result_2818589133 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589133 = toJson_2818589144(getFlagScript_2818589091_2818589100(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589093, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589093, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_2818589153 = [103,101,116,70,108,97,103];
    var fmtRes_2818589158 = [mnewString(0)];
    fmtRes_2818589158[0].push.apply(fmtRes_2818589158[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589158, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_2818589153 || [],fmtRes_2818589158[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589133;

}

function runActionScript_2818589161_2818589175(self_2818589176, action_2818589177, args_2818589178) {
  var result_2818589179 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym684_2818589180 = getTextDocumentEditor_2818583937(self_2818589176);
      if (isNone_2818584298(rHEX60gensym684_2818589180)) {
      break BeforeRet;
      }
      
    };
    result_2818589179 = runAction_2818589166(get_2818584318(rHEX60gensym684_2818589180), action_2818589177, args_2818589178);
  };

  return result_2818589179;

}

function runActionApi_2818589209(HEX3Atmp_2818589163) {
  var result_2818589210 = null;

  BeforeRet: {
    result_2818589210 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2818589210 = toJson_2818589144(runActionScript_2818589161_2818589175(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818589163, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym690_2818589225 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2818589230 = [mnewString(0)];
    fmtRes_2818589230[0].push.apply(fmtRes_2818589230[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589230, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym690_2818589225 || [],fmtRes_2818589230[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589210;

}

function findWordBoundaryScript_2818589236_2818589272(self_2818589273, cursor_2818589274) {
  var result_2818589275 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym694_2818589276 = getTextDocumentEditor_2818583937(self_2818589273);
      if (isNone_2818584298(rHEX60gensym694_2818589276)) {
      break BeforeRet;
      }
      
    };
    result_2818589275 = nimCopy(result_2818589275, findWordBoundary_2818589241(get_2818584318(rHEX60gensym694_2818589276), cursor_2818589274), NTI2449473547);
  };

  return result_2818589275;

}

function findWordBoundaryApi_2818589304(HEX3Atmp_2818589238) {
  var result_2818589305 = null;

  BeforeRet: {
    result_2818589305 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818589305 = toJson_2818585140(findWordBoundaryScript_2818589236_2818589272(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589238, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818589238, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym700_2818589320 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2818589325 = [mnewString(0)];
    fmtRes_2818589325[0].push.apply(fmtRes_2818589325[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589325, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym700_2818589320 || [],fmtRes_2818589325[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589305;

}

function getSelectionForMoveScript_2818589330_2818589433(self_2818589434, cursor_2818589435, move_2818589436, count_2818589437) {
  var result_2818589438 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym710_2818589439 = getTextDocumentEditor_2818583937(self_2818589434);
      if (isNone_2818584298(rHEX60gensym710_2818589439)) {
      break BeforeRet;
      }
      
    };
    result_2818589438 = nimCopy(result_2818589438, getSelectionForMove_2818589335(get_2818584318(rHEX60gensym710_2818589439), cursor_2818589435, move_2818589436, count_2818589437), NTI2449473547);
  };

  return result_2818589438;

}

function getSelectionForMoveApi_2818589469(HEX3Atmp_2818589332) {
      var Temporary6;

  var result_2818589470 = null;

  BeforeRet: {
    result_2818589470 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818589332))) {
      Temporary6 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2818589470 = toJson_2818585140(getSelectionForMoveScript_2818589330_2818589433(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585861(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589332, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym716_2818589495 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2818589500 = [mnewString(0)];
    fmtRes_2818589500[0].push.apply(fmtRes_2818589500[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589500, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym716_2818589495 || [],fmtRes_2818589500[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818589470;

}

function setMoveScript_2818589575_2818589771(self_2818589772, args_2818589773) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym732_2818589774 = getTextDocumentEditor_2818583937(self_2818589772);
      if (isNone_2818584298(rHEX60gensym732_2818589774)) {
      break BeforeRet;
      }
      
    };
    setMove_2818589580(get_2818584318(rHEX60gensym732_2818589774), args_2818589773);
  };

  
}

function HEX5BHEX5D_2818589815(a_2818589818, x_2818589819) {
  var result_2818589820 = null;

    if (!((a_2818589818.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818589820 = newJArray_1627390082();
    var xa_2818589831 = x_2818589819.a;
    var L_2818589833 = addInt(subInt(subInt(len_1627392983(a_2818589818), x_2818589819.b), xa_2818589831), 1);
    Label1: {
      var i_2818589838 = 0;
      var i_536872145 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872145 < L_2818589833)) break Label3;
            i_2818589838 = i_536872145;
            add_1627390190(result_2818589820, HEX5BHEX5D_1627393116(a_2818589818, addInt(i_2818589838, xa_2818589831)));
            i_536872145 = addInt(i_536872145, 1);
          }
      };
    };

  return result_2818589820;

}

function setMoveApi_2818589801(HEX3Atmp_2818589577) {
  var result_2818589802 = null;

    result_2818589802 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2818589575_2818589771(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589577, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818589815(HEX3Atmp_2818589577, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym737_2818589839 = [115,101,116,77,111,118,101];
    var fmtRes_2818589844 = [mnewString(0)];
    fmtRes_2818589844[0].push.apply(fmtRes_2818589844[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589844, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym737_2818589839 || [],fmtRes_2818589844[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589802;

}

function deleteMoveScript_2818589867_2818589907(self_2818589908, move_2818589909, which_2818589910, all_2818589911) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym759_2818589912 = getTextDocumentEditor_2818583937(self_2818589908);
      if (isNone_2818584298(rHEX60gensym759_2818589912)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818589872(get_2818584318(rHEX60gensym759_2818589912), move_2818589909, which_2818589910, all_2818589911);
  };

  
}

function deleteMoveApi_2818589941(HEX3Atmp_2818589869) {
      var Temporary5;
      var Temporary7;

  var result_2818589942 = null;

    result_2818589942 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589869))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589869))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2818589867_2818589907(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589869, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym764_2818589963 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2818589968 = [mnewString(0)];
    fmtRes_2818589968[0].push.apply(fmtRes_2818589968[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589968, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym764_2818589963 || [],fmtRes_2818589968[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589942;

}

function selectMoveScript_2818589971_2818590036(self_2818590037, move_2818590038, which_2818590039, all_2818590040) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym772_2818590041 = getTextDocumentEditor_2818583937(self_2818590037);
      if (isNone_2818584298(rHEX60gensym772_2818590041)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818589976(get_2818584318(rHEX60gensym772_2818590041), move_2818590038, which_2818590039, all_2818590040);
  };

  
}

function selectMoveApi_2818590070(HEX3Atmp_2818589973) {
      var Temporary5;
      var Temporary7;

  var result_2818590071 = null;

    result_2818590071 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589973))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589973))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2818589971_2818590036(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym777_2818590092 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2818590097 = [mnewString(0)];
    fmtRes_2818590097[0].push.apply(fmtRes_2818590097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym777_2818590092 || [],fmtRes_2818590097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590071;

}

function changeMoveScript_2818590100_2818590140(self_2818590141, move_2818590142, which_2818590143, all_2818590144) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym786_2818590145 = getTextDocumentEditor_2818583937(self_2818590141);
      if (isNone_2818584298(rHEX60gensym786_2818590145)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818590105(get_2818584318(rHEX60gensym786_2818590145), move_2818590142, which_2818590143, all_2818590144);
  };

  
}

function changeMoveApi_2818590174(HEX3Atmp_2818590102) {
      var Temporary5;
      var Temporary7;

  var result_2818590175 = null;

    result_2818590175 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590102))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590102))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2818590100_2818590140(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590102, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym791_2818590196 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2818590201 = [mnewString(0)];
    fmtRes_2818590201[0].push.apply(fmtRes_2818590201[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590201, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym791_2818590196 || [],fmtRes_2818590201[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590175;

}

function moveLastScript_2818590204_2818590252(self_2818590253, move_2818590254, which_2818590255, all_2818590256, count_2818590257) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym800_2818590258 = getTextDocumentEditor_2818583937(self_2818590253);
      if (isNone_2818584298(rHEX60gensym800_2818590258)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818590209(get_2818584318(rHEX60gensym800_2818590258), move_2818590254, which_2818590255, all_2818590256, count_2818590257);
  };

  
}

function moveLastApi_2818590288(HEX3Atmp_2818590206) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590289 = null;

    result_2818590289 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590206))) {
      Temporary9 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2818590204_2818590252(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590206, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym805_2818590315 = [109,111,118,101,76,97,115,116];
    var fmtRes_2818590320 = [mnewString(0)];
    fmtRes_2818590320[0].push.apply(fmtRes_2818590320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym805_2818590315 || [],fmtRes_2818590320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590289;

}

function moveFirstScript_2818590331_2818590379(self_2818590380, move_2818590381, which_2818590382, all_2818590383, count_2818590384) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym815_2818590385 = getTextDocumentEditor_2818583937(self_2818590380);
      if (isNone_2818584298(rHEX60gensym815_2818590385)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818590336(get_2818584318(rHEX60gensym815_2818590385), move_2818590381, which_2818590382, all_2818590383, count_2818590384);
  };

  
}

function moveFirstApi_2818590415(HEX3Atmp_2818590333) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818590416 = null;

    result_2818590416 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary5 = jsonTo_2818584641(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary7 = jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818590333))) {
      Temporary9 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2818590331_2818590379(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590333, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym820_2818590442 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2818590447 = [mnewString(0)];
    fmtRes_2818590447[0].push.apply(fmtRes_2818590447[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590447, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym820_2818590442 || [],fmtRes_2818590447[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590416;

}

function setSearchQueryScript_2818590450_2818590472(self_2818590473, query_2818590474) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2818590475 = getTextDocumentEditor_2818583937(self_2818590473);
      if (isNone_2818584298(rHEX60gensym827_2818590475)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818590455(get_2818584318(rHEX60gensym827_2818590475), query_2818590474);
  };

  
}

function setSearchQueryApi_2818590502(HEX3Atmp_2818590452) {
  var result_2818590503 = null;

    result_2818590503 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2818590450_2818590472(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590452, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590452, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2818590514 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2818590519 = [mnewString(0)];
    fmtRes_2818590519[0].push.apply(fmtRes_2818590519[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590519, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2818590514 || [],fmtRes_2818590519[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590503;

}

function setSearchQueryFromMoveScript_2818590542_2818590552(self_2818590553, move_2818590554, count_2818590555) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym837_2818590556 = getTextDocumentEditor_2818583937(self_2818590553);
      if (isNone_2818584298(rHEX60gensym837_2818590556)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818590547(get_2818584318(rHEX60gensym837_2818590556), move_2818590554, count_2818590555);
  };

  
}

function setSearchQueryFromMoveApi_2818590584(HEX3Atmp_2818590544) {
      var Temporary5;

  var result_2818590585 = null;

    result_2818590585 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818590544))) {
      Temporary5 = jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818590542_2818590552(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818590544, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym842_2818590601 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2818590606 = [mnewString(0)];
    fmtRes_2818590606[0].push.apply(fmtRes_2818590606[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590606, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym842_2818590601 || [],fmtRes_2818590606[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590585;

}

function gotoDefinitionScript_2818593065_2818593072(self_2818593073) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym882_2818593074 = getTextDocumentEditor_2818583937(self_2818593073);
      if (isNone_2818584298(rHEX60gensym882_2818593074)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818593070(get_2818584318(rHEX60gensym882_2818593074));
  };

  
}

function gotoDefinitionApi_2818593100(HEX3Atmp_2818593067) {
  var result_2818593101 = null;

    result_2818593101 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2818593065_2818593072(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593067, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym887_2818593107 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2818593112 = [mnewString(0)];
    fmtRes_2818593112[0].push.apply(fmtRes_2818593112[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593112, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym887_2818593107 || [],fmtRes_2818593112[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593101;

}

function getCompletionsScript_2818593129_2818593136(self_2818593137) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym891_2818593138 = getTextDocumentEditor_2818583937(self_2818593137);
      if (isNone_2818584298(rHEX60gensym891_2818593138)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818593134(get_2818584318(rHEX60gensym891_2818593138));
  };

  
}

function getCompletionsApi_2818593164(HEX3Atmp_2818593131) {
  var result_2818593165 = null;

    result_2818593165 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2818593129_2818593136(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593131, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym896_2818593171 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593176 = [mnewString(0)];
    fmtRes_2818593176[0].push.apply(fmtRes_2818593176[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593176, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym896_2818593171 || [],fmtRes_2818593176[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593165;

}

function hideCompletionsScript_2818593215_2818593222(self_2818593223) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym900_2818593224 = getTextDocumentEditor_2818583937(self_2818593223);
      if (isNone_2818584298(rHEX60gensym900_2818593224)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818593220(get_2818584318(rHEX60gensym900_2818593224));
  };

  
}

function hideCompletionsApi_2818593250(HEX3Atmp_2818593217) {
  var result_2818593251 = null;

    result_2818593251 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2818593215_2818593222(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593217, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_2818593257 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818593262 = [mnewString(0)];
    fmtRes_2818593262[0].push.apply(fmtRes_2818593262[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593262, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_2818593257 || [],fmtRes_2818593262[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593251;

}

function selectPrevCompletionScript_2818593265_2818593289(self_2818593290) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym908_2818593291 = getTextDocumentEditor_2818583937(self_2818593290);
      if (isNone_2818584298(rHEX60gensym908_2818593291)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818593270(get_2818584318(rHEX60gensym908_2818593291));
  };

  
}

function selectPrevCompletionApi_2818593317(HEX3Atmp_2818593267) {
  var result_2818593318 = null;

    result_2818593318 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2818593265_2818593289(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593267, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym913_2818593324 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593329 = [mnewString(0)];
    fmtRes_2818593329[0].push.apply(fmtRes_2818593329[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593329, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym913_2818593324 || [],fmtRes_2818593329[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593318;

}

function selectNextCompletionScript_2818593332_2818593356(self_2818593357) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym917_2818593358 = getTextDocumentEditor_2818583937(self_2818593357);
      if (isNone_2818584298(rHEX60gensym917_2818593358)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818593337(get_2818584318(rHEX60gensym917_2818593358));
  };

  
}

function selectNextCompletionApi_2818593384(HEX3Atmp_2818593334) {
  var result_2818593385 = null;

    result_2818593385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2818593332_2818593356(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593334, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym922_2818593391 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593396 = [mnewString(0)];
    fmtRes_2818593396[0].push.apply(fmtRes_2818593396[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593396, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym922_2818593391 || [],fmtRes_2818593396[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593385;

}

function applySelectedCompletionScript_2818593399_2818593539(self_2818593540) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym926_2818593541 = getTextDocumentEditor_2818583937(self_2818593540);
      if (isNone_2818584298(rHEX60gensym926_2818593541)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818593404(get_2818584318(rHEX60gensym926_2818593541));
  };

  
}

function applySelectedCompletionApi_2818593567(HEX3Atmp_2818593401) {
  var result_2818593568 = null;

    result_2818593568 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2818593399_2818593539(jsonTo_2818584352(HEX5BHEX5D_1627393116(HEX3Atmp_2818593401, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym931_2818593574 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818593579 = [mnewString(0)];
    fmtRes_2818593579[0].push.apply(fmtRes_2818593579[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818593579, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym931_2818593574 || [],fmtRes_2818593579[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818593568;

}

function dispatch_2818593606(command_2818593605, arg_2818593604) {
    var Temporary1;

  var result_2818593611 = ({val: null});

    switch (toJSStr(command_2818593605)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi_2818584350(arg_2818593604));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi_2818584512(arg_2818593604));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi_2818584572(arg_2818593604));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818593612(updateTargetColumnApi_2818584634(arg_2818593604));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818593612(invertSelectionApi_2818584748(arg_2818593604));
      break;
    case "insert":
      Temporary1 = some_2818593612(insertApi_2818584829(arg_2818593604));
      break;
    case "delete":
      Temporary1 = some_2818593612(deleteApi_2818585324(arg_2818593604));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593612(selectPrevApi_2818585595(arg_2818593604));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593612(selectNextApi_2818585790(arg_2818593604));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818593612(selectInsideApi_2818585854(arg_2818593604));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818593612(selectInsideCurrentApi_2818585917(arg_2818593604));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818593612(selectLineApi_2818585970(arg_2818593604));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818593612(selectLineCurrentApi_2818586025(arg_2818593604));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818593612(selectParentTsApi_2818586090(arg_2818593604));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818593612(selectParentCurrentTsApi_2818586158(arg_2818593604));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818593612(insertTextApi_2818586215(arg_2818593604));
      break;
    case "undo":
      Temporary1 = some_2818593612(undoApi_2818586331(arg_2818593604));
      break;
    case "redo":
      Temporary1 = some_2818593612(redoApi_2818586411(arg_2818593604));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818593612(scrollTextApi_2818586472(arg_2818593604));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818593612(duplicateLastSelectionApi_2818586627(arg_2818593604));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818593612(addCursorBelowApi_2818586697(arg_2818593604));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818593612(addCursorAboveApi_2818586763(arg_2818593604));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818593612(getPrevFindResultApi_2818587092(arg_2818593604));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818593612(getNextFindResultApi_2818587336(arg_2818593604));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818593612(addNextFindResultToSelectionApi_2818587418(arg_2818593604));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818593612(addPrevFindResultToSelectionApi_2818587476(arg_2818593604));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818593612(setAllFindResultToSelectionApi_2818587850(arg_2818593604));
      break;
    case "clearSelections":
    case "clear-selections":
      Temporary1 = some_2818593612(clearSelectionsApi_2818587921(arg_2818593604));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818593612(moveCursorColumnApi_2818587998(arg_2818593604));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818593612(moveCursorLineApi_2818588088(arg_2818593604));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818593612(moveCursorHomeApi_2818588159(arg_2818593604));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818593612(moveCursorEndApi_2818588227(arg_2818593604));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818593612(moveCursorToApi_2818588305(arg_2818593604));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818593612(moveCursorBeforeApi_2818588388(arg_2818593604));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818593612(moveCursorNextFindResultApi_2818588461(arg_2818593604));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818593612(moveCursorPrevFindResultApi_2818588527(arg_2818593604));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818593612(scrollToCursorApi_2818588590(arg_2818593604));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818593612(reloadTreesitterApi_2818588645(arg_2818593604));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818593612(deleteLeftApi_2818588709(arg_2818593604));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818593612(deleteRightApi_2818588773(arg_2818593604));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818593612(getCommandCountApi_2818588832(arg_2818593604));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818593612(setCommandCountApi_2818588889(arg_2818593604));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818593612(setCommandCountRestoreApi_2818588947(arg_2818593604));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818593612(updateCommandCountApi_2818589005(arg_2818593604));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818593612(setFlagApi_2818589066(arg_2818593604));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818593612(getFlagApi_2818589132(arg_2818593604));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818593612(runActionApi_2818589209(arg_2818593604));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818593612(findWordBoundaryApi_2818589304(arg_2818593604));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818593612(getSelectionForMoveApi_2818589469(arg_2818593604));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818593612(setMoveApi_2818589801(arg_2818593604));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818593612(deleteMoveApi_2818589941(arg_2818593604));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818593612(selectMoveApi_2818590070(arg_2818593604));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818593612(changeMoveApi_2818590174(arg_2818593604));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818593612(moveLastApi_2818590288(arg_2818593604));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818593612(moveFirstApi_2818590415(arg_2818593604));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818593612(setSearchQueryApi_2818590502(arg_2818593604));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818593612(setSearchQueryFromMoveApi_2818590584(arg_2818593604));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818593612(gotoDefinitionApi_2818593100(arg_2818593604));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818593612(getCompletionsApi_2818593164(arg_2818593604));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818593612(hideCompletionsApi_2818593250(arg_2818593604));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593612(selectPrevCompletionApi_2818593317(arg_2818593604));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593612(selectNextCompletionApi_2818593384(arg_2818593604));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593612(applySelectedCompletionApi_2818593567(arg_2818593604));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_2818593611 = nimCopy(result_2818593611, Temporary1, NTI2818585760);

  return result_2818593611;

}

function isNone_2818593896(self_2818593898) {
  var result_2818593899 = false;

    result_2818593899 = (self_2818593898.val == null);

  return result_2818593899;

}

function handleActionInternal_2818572659(self_2818572660, action_2818572661, args_2818572662) {
    var Temporary3;

  var result_2818593831 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3)) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848854(self_2818572660.editor, self_2818572660, action_2818572661, args_2818572662) == 3))) {
          break Label1;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593831 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572662;
    if (ConstSet312[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818593850(Temporary3, "elems", toJson_2818584041({id: self_2818572660.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818593879(dispatch_2818593606(action_2818572661, args_2818572662))) {
    self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572660.commandCount)) break Label5;
          if (isNone_2818593896(dispatch_2818593606(action_2818572661, args_2818572662))) {
          break Label4;
          }
          
          self_2818572660.commandCount = subInt(self_2818572660.commandCount, 1);
        }
    };
    self_2818572660.commandCount = self_2818572660.commandCountRestore;
    self_2818572660.commandCountRestore = 0;
    result_2818593831 = 3;
    break BeforeRet;
    }
    
    result_2818593831 = 1;
    break BeforeRet;
  };

  return result_2818593831;

}

function handleAction_2818572655(self_2818572656, action_2818572657, arg_2818572658) {
  var result_2818593913 = 0;

  BeforeRet: {
    var args_2818593914 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818593915 = null;
      var colontmp__536871984 = null;
      colontmp__536871984 = newStringStream_1660945417(arg_2818572658);
      var p_536871985 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871985[0], colontmp__536871984, [], false);
      try {
      var _ = getTok_1694499270(p_536871985[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871985[0].tok == 1))) break Label5;
            a_2818593915 = parseJson_1627395211(p_536871985[0], false, false, 0);
            add_1627390190(args_2818593914, a_2818593915);
          }
      };
      } finally {
      close_1694498967(p_536871985[0]);
      }
    };
    result_2818593913 = handleActionInternal_2818572659(self_2818572656, action_2818572657, args_2818593914);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818593920 = [mnewString(0)];
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818593920, 0, action_2818572657, []);
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818593920, 0, arg_2818572658, []);
    fmtRes_2818593920[0].push.apply(fmtRes_2818593920[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818593920[0], NTI33554449)]);
    result_2818593913 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818593913;

}

function hasKey_1291847815(t_1291847818, key_1291847819) {
  var result_1291847820 = false;

    var hc_1291847821 = [0];
    result_1291847820 = (0 <= rawGet_1291847822(t_1291847818, key_1291847819, hc_1291847821, 0));

  return result_1291847820;

}

function contains_1291847809(t_1291847812, key_1291847813) {
  var result_1291847814 = false;

  BeforeRet: {
    result_1291847814 = hasKey_1291847815(t_1291847812, key_1291847813);
    break BeforeRet;
  };

  return result_1291847814;

}

function HEX5BHEX5D_1291848114(t_1291848117, key_1291848118) {
  var result_1291848119 = null;
  var result_1291848119_Idx = 0;

    var hcHEX60gensym22_1291848120 = [0];
    var indexHEX60gensym22_1291848127 = rawGet_1291847822(t_1291848117, key_1291848118, hcHEX60gensym22_1291848120, 0);
    if ((0 <= indexHEX60gensym22_1291848127)) {
    result_1291848119 = t_1291848117.data[chckIndx(indexHEX60gensym22_1291848127, 0, (t_1291848117.data).length - 1)]; result_1291848119_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848118);
    }
    

  return [result_1291848119, result_1291848119_Idx];

}

function invokeCallback_1291847762(self_1291847763, context_1291847764, args_1291847765) {
    var Temporary1;

  var result_1291847766 = false;

  BeforeRet: {
    if (!(contains_1291847809(self_1291847763.callbacks, context_1291847764))) {
    result_1291847766 = false;
    break BeforeRet;
    }
    
    var id_1291848184 = (Temporary1 = HEX5BHEX5D_1291848114(self_1291847763.callbacks, context_1291847764), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847766 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848195 = [mnewString(0)];
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2701131945(fmtRes_1291848195, 0, id_1291848184, []);
    fmtRes_1291848195[0].push.apply(fmtRes_1291848195[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848195, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848195[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847766 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847766;

}

function handleInput_2818572663(self_2818572664, input_2818572665) {
  var result_2818593924 = 0;

  BeforeRet: {
    if (invokeCallback_1291847762(self_2818572664.editor, getContextWithMode_2818583609(self_2818572664, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572665))) {
    result_2818593924 = 3;
    break BeforeRet;
    }
    
    insertText_2818586181(self_2818572664, input_2818572665);
    result_2818593924 = 3;
    break BeforeRet;
  };

  return result_2818593924;

}

function toJson_2969578808(self_2969578809, opt_2969578810) {
  var result_2969578811 = null;

    result_2969578811 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969578811, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2969578811, [105,100], newJInt_1627390040(self_2969578809.id));

  return result_2969578811;

}

function none_2969578740() {
  var result_2969578746 = ({val: null});

  return result_2969578746;

}

function some_2969578780(val_2969578782) {
  var result_2969578783 = ({val: null});

    if (!(!((val_2969578782 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969578783.val = val_2969578782;

  return result_2969578783;

}

function getAstDocumentEditor_2969578730(wrapper_2969578731) {
      var Temporary1;

  var result_2969578736 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2969578736 = nimCopy(result_2969578736, none_2969578740(), NTI2969574376);
    break BeforeRet;
    }
    
      var oHEX60gensym531_2969578749 = getEditorForId_1291850661(gEditor, wrapper_2969578731.id);
      if (!isSome_2818583961(oHEX60gensym531_2969578749)) Temporary1 = false; else {        var editor_2969578772 = get_2818583981(oHEX60gensym531_2969578749);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2969578772.m_type, NTI2969568641)) {
    result_2969578736 = nimCopy(result_2969578736, some_2969578780(editor_2969578772), NTI2969574376);
    break BeforeRet;
    }
    
    }
    
    result_2969578736 = nimCopy(result_2969578736, none_2969578740(), NTI2969574376);
    break BeforeRet;
  };

  return result_2969578736;

}

function isNone_2969578839(self_2969578841) {
  var result_2969578842 = false;

    result_2969578842 = (self_2969578841.val == null);

  return result_2969578842;

}

function get_2969578859(self_2969578861) {
  var result_2969578862 = null;

    if (isNone_2969578839(self_2969578861)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969578862 = self_2969578861["val"];

  return result_2969578862;

}

function moveCursorScript_2969578821_2969578831(self_2969578832, direction_2969578833) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_2969578834 = getAstDocumentEditor_2969578730(self_2969578832);
      if (isNone_2969578839(rHEX60gensym536_2969578834)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2969578826(get_2969578859(rHEX60gensym536_2969578834), direction_2969578833);
  };

  
}

function fromJsonHook_2969578812(t_2969578813, jsonNode_2969578814) {
    t_2969578813.id = jsonTo_2818584048(HEX5BHEX5D_1627393037(jsonNode_2969578814, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2969578892(a_2969578894, b_2969578895, opt_2969578896) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969578895, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2969578895}));
    }
    
    fromJsonHook_2969578812(a_2969578894, b_2969578895);

  
}

function jsonTo_2969578886(b_2969578888, opt_2969578890) {
  var result_2969578891 = [({id: 0})];

    fromJson_2969578892(result_2969578891[0], b_2969578888, opt_2969578890);

  return result_2969578891[0];

}

function moveCursorApi_2969578884(HEX3Atmp_2969578823) {
  var result_2969578885 = null;

    result_2969578885 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2969578821_2969578831(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969578823, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584048(HEX5BHEX5D_1627393116(HEX3Atmp_2969578823, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_2969578908 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2969578913 = [mnewString(0)];
    fmtRes_2969578913[0].push.apply(fmtRes_2969578913[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969578913, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_2969578908 || [],fmtRes_2969578913[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969578885;

}

function moveCursorUpScript_2969578987_2969579006(self_2969579007) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym548_2969579008 = getAstDocumentEditor_2969578730(self_2969579007);
      if (isNone_2969578839(rHEX60gensym548_2969579008)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2969578992(get_2969578859(rHEX60gensym548_2969579008));
  };

  
}

function moveCursorUpApi_2969579034(HEX3Atmp_2969578989) {
  var result_2969579035 = null;

    result_2969579035 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2969578987_2969579006(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969578989, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym553_2969579041 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2969579046 = [mnewString(0)];
    fmtRes_2969579046[0].push.apply(fmtRes_2969579046[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579046, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym553_2969579041 || [],fmtRes_2969579046[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579035;

}

function moveCursorDownScript_2969579049_2969579056(self_2969579057) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym559_2969579058 = getAstDocumentEditor_2969578730(self_2969579057);
      if (isNone_2969578839(rHEX60gensym559_2969579058)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2969579054(get_2969578859(rHEX60gensym559_2969579058));
  };

  
}

function moveCursorDownApi_2969579084(HEX3Atmp_2969579051) {
  var result_2969579085 = null;

    result_2969579085 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2969579049_2969579056(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579051, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym564_2969579091 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2969579096 = [mnewString(0)];
    fmtRes_2969579096[0].push.apply(fmtRes_2969579096[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579096, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym564_2969579091 || [],fmtRes_2969579096[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579085;

}

function moveCursorNextScript_2969579099_2969579113(self_2969579114) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_2969579115 = getAstDocumentEditor_2969578730(self_2969579114);
      if (isNone_2969578839(rHEX60gensym568_2969579115)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2969579104(get_2969578859(rHEX60gensym568_2969579115));
  };

  
}

function moveCursorNextApi_2969579141(HEX3Atmp_2969579101) {
  var result_2969579142 = null;

    result_2969579142 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2969579099_2969579113(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579101, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_2969579148 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2969579153 = [mnewString(0)];
    fmtRes_2969579153[0].push.apply(fmtRes_2969579153[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579153, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_2969579148 || [],fmtRes_2969579153[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579142;

}

function moveCursorPrevScript_2969579167_2969579180(self_2969579181) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym577_2969579182 = getAstDocumentEditor_2969578730(self_2969579181);
      if (isNone_2969578839(rHEX60gensym577_2969579182)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2969579172(get_2969578859(rHEX60gensym577_2969579182));
  };

  
}

function moveCursorPrevApi_2969579208(HEX3Atmp_2969579169) {
  var result_2969579209 = null;

    result_2969579209 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2969579167_2969579180(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579169, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym582_2969579215 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2969579220 = [mnewString(0)];
    fmtRes_2969579220[0].push.apply(fmtRes_2969579220[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579220, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym582_2969579215 || [],fmtRes_2969579220[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579209;

}

function moveCursorNextLineScript_2969579233_2969579266(self_2969579267) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym586_2969579268 = getAstDocumentEditor_2969578730(self_2969579267);
      if (isNone_2969578839(rHEX60gensym586_2969579268)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2969579238(get_2969578859(rHEX60gensym586_2969579268));
  };

  
}

function moveCursorNextLineApi_2969579294(HEX3Atmp_2969579235) {
  var result_2969579295 = null;

    result_2969579295 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2969579233_2969579266(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579235, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym591_2969579301 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2969579306 = [mnewString(0)];
    fmtRes_2969579306[0].push.apply(fmtRes_2969579306[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579306, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym591_2969579301 || [],fmtRes_2969579306[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579295;

}

function moveCursorPrevLineScript_2969579318_2969579351(self_2969579352) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym595_2969579353 = getAstDocumentEditor_2969578730(self_2969579352);
      if (isNone_2969578839(rHEX60gensym595_2969579353)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2969579323(get_2969578859(rHEX60gensym595_2969579353));
  };

  
}

function moveCursorPrevLineApi_2969579379(HEX3Atmp_2969579320) {
  var result_2969579380 = null;

    result_2969579380 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2969579318_2969579351(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579320, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_2969579386 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2969579391 = [mnewString(0)];
    fmtRes_2969579391[0].push.apply(fmtRes_2969579391[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579391, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_2969579386 || [],fmtRes_2969579391[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579380;

}

function selectContainingScript_2969579404_2969579568(self_2969579569, container_2969579570) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym605_2969579571 = getAstDocumentEditor_2969578730(self_2969579569);
      if (isNone_2969578839(rHEX60gensym605_2969579571)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2969579409(get_2969578859(rHEX60gensym605_2969579571), container_2969579570);
  };

  
}

function selectContainingApi_2969579598(HEX3Atmp_2969579406) {
  var result_2969579599 = null;

    result_2969579599 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2969579404_2969579568(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579406, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969579406, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym610_2969579610 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2969579615 = [mnewString(0)];
    fmtRes_2969579615[0].push.apply(fmtRes_2969579615[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579615, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym610_2969579610 || [],fmtRes_2969579615[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579599;

}

function deleteSelectedScript_2969579618_2969579628(self_2969579629) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym619_2969579630 = getAstDocumentEditor_2969578730(self_2969579629);
      if (isNone_2969578839(rHEX60gensym619_2969579630)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2969579623(get_2969578859(rHEX60gensym619_2969579630));
  };

  
}

function deleteSelectedApi_2969579656(HEX3Atmp_2969579620) {
  var result_2969579657 = null;

    result_2969579657 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2969579618_2969579628(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579620, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_2969579663 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2969579668 = [mnewString(0)];
    fmtRes_2969579668[0].push.apply(fmtRes_2969579668[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579668, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_2969579663 || [],fmtRes_2969579668[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579657;

}

function copySelectedScript_2969579725_2969579735(self_2969579736) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym627_2969579737 = getAstDocumentEditor_2969578730(self_2969579736);
      if (isNone_2969578839(rHEX60gensym627_2969579737)) {
      break BeforeRet;
      }
      
    };
    copySelected_2969579730(get_2969578859(rHEX60gensym627_2969579737));
  };

  
}

function copySelectedApi_2969579763(HEX3Atmp_2969579727) {
  var result_2969579764 = null;

    result_2969579764 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2969579725_2969579735(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579727, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2969579770 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2969579775 = [mnewString(0)];
    fmtRes_2969579775[0].push.apply(fmtRes_2969579775[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579775, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2969579770 || [],fmtRes_2969579775[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579764;

}

function finishEditScript_2969579793_2969579843(self_2969579844, apply_2969579845) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2969579846 = getAstDocumentEditor_2969578730(self_2969579844);
      if (isNone_2969578839(rHEX60gensym636_2969579846)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2969575577(get_2969578859(rHEX60gensym636_2969579846), apply_2969579845);
  };

  
}

function finishEditApi_2969579873(HEX3Atmp_2969579795) {
  var result_2969579874 = null;

    result_2969579874 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2969579793_2969579843(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579795, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585090(HEX5BHEX5D_1627393116(HEX3Atmp_2969579795, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym641_2969579885 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2969579890 = [mnewString(0)];
    fmtRes_2969579890[0].push.apply(fmtRes_2969579890[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969579890, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym641_2969579885 || [],fmtRes_2969579890[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579874;

}

function undoScript2_2969579933_2969579966(self_2969579967) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym647_2969579968 = getAstDocumentEditor_2969578730(self_2969579967);
      if (isNone_2969578839(rHEX60gensym647_2969579968)) {
      break BeforeRet;
      }
      
    };
    undo_2969579938(get_2969578859(rHEX60gensym647_2969579968));
  };

  
}

function undoApi2_2969579994(HEX3Atmp_2969579935) {
  var result_2969579995 = null;

    result_2969579995 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2969579933_2969579966(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969579935, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym652_2969580001 = [117,110,100,111];
    var fmtRes_2969580006 = [mnewString(0)];
    fmtRes_2969580006[0].push.apply(fmtRes_2969580006[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580006, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym652_2969580001 || [],fmtRes_2969580006[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969579995;

}

function redoScript2_2969580010_2969580043(self_2969580044) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym656_2969580045 = getAstDocumentEditor_2969578730(self_2969580044);
      if (isNone_2969578839(rHEX60gensym656_2969580045)) {
      break BeforeRet;
      }
      
    };
    redo_2969580015(get_2969578859(rHEX60gensym656_2969580045));
  };

  
}

function redoApi2_2969580071(HEX3Atmp_2969580012) {
  var result_2969580072 = null;

    result_2969580072 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2969580010_2969580043(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580012, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym661_2969580078 = [114,101,100,111];
    var fmtRes_2969580083 = [mnewString(0)];
    fmtRes_2969580083[0].push.apply(fmtRes_2969580083[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580083, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym661_2969580078 || [],fmtRes_2969580083[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580072;

}

function insertAfterSmartScript_2969580086_2969580211(self_2969580212, nodeTemplate_2969580213) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym666_2969580214 = getAstDocumentEditor_2969578730(self_2969580212);
      if (isNone_2969578839(rHEX60gensym666_2969580214)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2969580091(get_2969578859(rHEX60gensym666_2969580214), nodeTemplate_2969580213);
  };

  
}

function insertAfterSmartApi_2969580241(HEX3Atmp_2969580088) {
  var result_2969580242 = null;

    result_2969580242 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2969580086_2969580211(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580088, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580088, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym671_2969580253 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2969580258 = [mnewString(0)];
    fmtRes_2969580258[0].push.apply(fmtRes_2969580258[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580258, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym671_2969580253 || [],fmtRes_2969580258[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580242;

}

function insertAfterScript_2969580441_2969580534(self_2969580535, nodeTemplate_2969580536) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym679_2969580537 = getAstDocumentEditor_2969578730(self_2969580535);
      if (isNone_2969578839(rHEX60gensym679_2969580537)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2969580446(get_2969578859(rHEX60gensym679_2969580537), nodeTemplate_2969580536);
  };

  
}

function insertAfterApi_2969580564(HEX3Atmp_2969580443) {
  var result_2969580565 = null;

    result_2969580565 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2969580441_2969580534(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580443, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580443, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym684_2969580576 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2969580581 = [mnewString(0)];
    fmtRes_2969580581[0].push.apply(fmtRes_2969580581[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580581, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym684_2969580576 || [],fmtRes_2969580581[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580565;

}

function insertBeforeScript_2969580596_2969580688(self_2969580689, nodeTemplate_2969580690) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym691_2969580691 = getAstDocumentEditor_2969578730(self_2969580689);
      if (isNone_2969578839(rHEX60gensym691_2969580691)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2969580601(get_2969578859(rHEX60gensym691_2969580691), nodeTemplate_2969580690);
  };

  
}

function insertBeforeApi_2969580718(HEX3Atmp_2969580598) {
  var result_2969580719 = null;

    result_2969580719 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2969580596_2969580688(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580598, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580598, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym696_2969580730 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2969580735 = [mnewString(0)];
    fmtRes_2969580735[0].push.apply(fmtRes_2969580735[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580735, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym696_2969580730 || [],fmtRes_2969580735[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580719;

}

function insertChildScript_2969580750_2969580841(self_2969580842, nodeTemplate_2969580843) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym703_2969580844 = getAstDocumentEditor_2969578730(self_2969580842);
      if (isNone_2969578839(rHEX60gensym703_2969580844)) {
      break BeforeRet;
      }
      
    };
    insertChild_2969580755(get_2969578859(rHEX60gensym703_2969580844), nodeTemplate_2969580843);
  };

  
}

function insertChildApi_2969580871(HEX3Atmp_2969580752) {
  var result_2969580872 = null;

    result_2969580872 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2969580750_2969580841(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580752, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580752, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym708_2969580883 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2969580888 = [mnewString(0)];
    fmtRes_2969580888[0].push.apply(fmtRes_2969580888[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580888, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym708_2969580883 || [],fmtRes_2969580888[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580872;

}

function replaceScript_2969580903_2969580948(self_2969580949, nodeTemplate_2969580950) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_2969580951 = getAstDocumentEditor_2969578730(self_2969580949);
      if (isNone_2969578839(rHEX60gensym715_2969580951)) {
      break BeforeRet;
      }
      
    };
    replace_2969580908(get_2969578859(rHEX60gensym715_2969580951), nodeTemplate_2969580950);
  };

  
}

function replaceApi_2969580978(HEX3Atmp_2969580905) {
  var result_2969580979 = null;

    result_2969580979 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2969580903_2969580948(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969580905, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969580905, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_2969580990 = [114,101,112,108,97,99,101];
    var fmtRes_2969580995 = [mnewString(0)];
    fmtRes_2969580995[0].push.apply(fmtRes_2969580995[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969580995, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_2969580990 || [],fmtRes_2969580995[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969580979;

}

function replaceEmptyScript_2969581010_2969581059(self_2969581060, nodeTemplate_2969581061) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym725_2969581062 = getAstDocumentEditor_2969578730(self_2969581060);
      if (isNone_2969578839(rHEX60gensym725_2969581062)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2969581015(get_2969578859(rHEX60gensym725_2969581062), nodeTemplate_2969581061);
  };

  
}

function replaceEmptyApi_2969581089(HEX3Atmp_2969581012) {
  var result_2969581090 = null;

    result_2969581090 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2969581010_2969581059(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581012, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581012, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2969581101 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2969581106 = [mnewString(0)];
    fmtRes_2969581106[0].push.apply(fmtRes_2969581106[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581106, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2969581101 || [],fmtRes_2969581106[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581090;

}

function replaceParentScript_2969581121_2969581138(self_2969581139) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym734_2969581140 = getAstDocumentEditor_2969578730(self_2969581139);
      if (isNone_2969578839(rHEX60gensym734_2969581140)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2969581126(get_2969578859(rHEX60gensym734_2969581140));
  };

  
}

function replaceParentApi_2969581166(HEX3Atmp_2969581123) {
  var result_2969581167 = null;

    result_2969581167 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2969581121_2969581138(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581123, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_2969581173 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2969581178 = [mnewString(0)];
    fmtRes_2969581178[0].push.apply(fmtRes_2969581178[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581178, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_2969581173 || [],fmtRes_2969581178[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581167;

}

function wrapScript_2969581181_2969581250(self_2969581251, nodeTemplate_2969581252) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym743_2969581253 = getAstDocumentEditor_2969578730(self_2969581251);
      if (isNone_2969578839(rHEX60gensym743_2969581253)) {
      break BeforeRet;
      }
      
    };
    wrap_2969581186(get_2969578859(rHEX60gensym743_2969581253), nodeTemplate_2969581252);
  };

  
}

function wrapApi_2969581280(HEX3Atmp_2969581183) {
  var result_2969581281 = null;

    result_2969581281 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2969581181_2969581250(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581183, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969581183, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym748_2969581292 = [119,114,97,112];
    var fmtRes_2969581297 = [mnewString(0)];
    fmtRes_2969581297[0].push.apply(fmtRes_2969581297[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581297, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym748_2969581292 || [],fmtRes_2969581297[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581281;

}

function editPrevEmptyScript_2969581324_2969581337(self_2969581338) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2969581339 = getAstDocumentEditor_2969578730(self_2969581338);
      if (isNone_2969578839(rHEX60gensym752_2969581339)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2969581329(get_2969578859(rHEX60gensym752_2969581339));
  };

  
}

function editPrevEmptyApi_2969581365(HEX3Atmp_2969581326) {
  var result_2969581366 = null;

    result_2969581366 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2969581324_2969581337(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581326, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2969581372 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2969581377 = [mnewString(0)];
    fmtRes_2969581377[0].push.apply(fmtRes_2969581377[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581377, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2969581372 || [],fmtRes_2969581377[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581366;

}

function editNextEmptyScript_2969581387_2969581408(self_2969581409) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym761_2969581410 = getAstDocumentEditor_2969578730(self_2969581409);
      if (isNone_2969578839(rHEX60gensym761_2969581410)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2969581392(get_2969578859(rHEX60gensym761_2969581410));
  };

  
}

function editNextEmptyApi_2969581436(HEX3Atmp_2969581389) {
  var result_2969581437 = null;

    result_2969581437 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2969581387_2969581408(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581389, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_2969581443 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2969581448 = [mnewString(0)];
    fmtRes_2969581448[0].push.apply(fmtRes_2969581448[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581448, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_2969581443 || [],fmtRes_2969581448[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581437;

}

function renameScript_2969581464_2969581471(self_2969581472) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym770_2969581473 = getAstDocumentEditor_2969578730(self_2969581472);
      if (isNone_2969578839(rHEX60gensym770_2969581473)) {
      break BeforeRet;
      }
      
    };
    rename_2969581469(get_2969578859(rHEX60gensym770_2969581473));
  };

  
}

function renameApi_2969581499(HEX3Atmp_2969581466) {
  var result_2969581500 = null;

    result_2969581500 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2969581464_2969581471(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581466, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_2969581506 = [114,101,110,97,109,101];
    var fmtRes_2969581511 = [mnewString(0)];
    fmtRes_2969581511[0].push.apply(fmtRes_2969581511[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581511, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_2969581506 || [],fmtRes_2969581511[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581500;

}

function selectPrevCompletionScript2_2969581514_2969581535(self_2969581536) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym778_2969581537 = getAstDocumentEditor_2969578730(self_2969581536);
      if (isNone_2969578839(rHEX60gensym778_2969581537)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2969581519(get_2969578859(rHEX60gensym778_2969581537));
  };

  
}

function selectPrevCompletionApi2_2969581563(HEX3Atmp_2969581516) {
  var result_2969581564 = null;

    result_2969581564 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2969581514_2969581535(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581516, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym783_2969581570 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581575 = [mnewString(0)];
    fmtRes_2969581575[0].push.apply(fmtRes_2969581575[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581575, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym783_2969581570 || [],fmtRes_2969581575[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581564;

}

function selectNextCompletionScript2_2969581578_2969581599(self_2969581600) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym787_2969581601 = getAstDocumentEditor_2969578730(self_2969581600);
      if (isNone_2969578839(rHEX60gensym787_2969581601)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2969581583(get_2969578859(rHEX60gensym787_2969581601));
  };

  
}

function selectNextCompletionApi2_2969581627(HEX3Atmp_2969581580) {
  var result_2969581628 = null;

    result_2969581628 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2969581578_2969581599(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581580, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym792_2969581634 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581639 = [mnewString(0)];
    fmtRes_2969581639[0].push.apply(fmtRes_2969581639[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581639, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym792_2969581634 || [],fmtRes_2969581639[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581628;

}

function applySelectedCompletionScript2_2969581642_2969581762(self_2969581763) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym796_2969581764 = getAstDocumentEditor_2969578730(self_2969581763);
      if (isNone_2969578839(rHEX60gensym796_2969581764)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2969581647(get_2969578859(rHEX60gensym796_2969581764));
  };

  
}

function applySelectedCompletionApi2_2969581790(HEX3Atmp_2969581644) {
  var result_2969581791 = null;

    result_2969581791 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2969581642_2969581762(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581644, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym801_2969581797 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581802 = [mnewString(0)];
    fmtRes_2969581802[0].push.apply(fmtRes_2969581802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym801_2969581797 || [],fmtRes_2969581802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581791;

}

function cancelAndNextCompletionScript_2969581853_2969581860(self_2969581861) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym811_2969581862 = getAstDocumentEditor_2969578730(self_2969581861);
      if (isNone_2969578839(rHEX60gensym811_2969581862)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2969581858(get_2969578859(rHEX60gensym811_2969581862));
  };

  
}

function cancelAndNextCompletionApi_2969581888(HEX3Atmp_2969581855) {
  var result_2969581889 = null;

    result_2969581889 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2969581853_2969581860(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581855, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym816_2969581895 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581900 = [mnewString(0)];
    fmtRes_2969581900[0].push.apply(fmtRes_2969581900[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581900, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym816_2969581895 || [],fmtRes_2969581900[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581889;

}

function cancelAndPrevCompletionScript_2969581903_2969581910(self_2969581911) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym819_2969581912 = getAstDocumentEditor_2969578730(self_2969581911);
      if (isNone_2969578839(rHEX60gensym819_2969581912)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2969581908(get_2969578859(rHEX60gensym819_2969581912));
  };

  
}

function cancelAndPrevCompletionApi_2969581938(HEX3Atmp_2969581905) {
  var result_2969581939 = null;

    result_2969581939 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2969581903_2969581910(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581905, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym824_2969581945 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2969581950 = [mnewString(0)];
    fmtRes_2969581950[0].push.apply(fmtRes_2969581950[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969581950, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym824_2969581945 || [],fmtRes_2969581950[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581939;

}

function cancelAndDeleteScript_2969581953_2969581963(self_2969581964) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym827_2969581965 = getAstDocumentEditor_2969578730(self_2969581964);
      if (isNone_2969578839(rHEX60gensym827_2969581965)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2969581958(get_2969578859(rHEX60gensym827_2969581965));
  };

  
}

function cancelAndDeleteApi_2969581991(HEX3Atmp_2969581955) {
  var result_2969581992 = null;

    result_2969581992 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2969581953_2969581963(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969581955, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym832_2969581998 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2969582003 = [mnewString(0)];
    fmtRes_2969582003[0].push.apply(fmtRes_2969582003[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582003, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym832_2969581998 || [],fmtRes_2969582003[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969581992;

}

function moveNodeToPrevSpaceScript_2969582006_2969582117(self_2969582118) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym835_2969582119 = getAstDocumentEditor_2969578730(self_2969582118);
      if (isNone_2969578839(rHEX60gensym835_2969582119)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2969582011(get_2969578859(rHEX60gensym835_2969582119));
  };

  
}

function moveNodeToPrevSpaceApi_2969582145(HEX3Atmp_2969582008) {
  var result_2969582146 = null;

    result_2969582146 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2969582006_2969582117(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582008, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym840_2969582152 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2969582157 = [mnewString(0)];
    fmtRes_2969582157[0].push.apply(fmtRes_2969582157[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582157, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym840_2969582152 || [],fmtRes_2969582157[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582146;

}

function moveNodeToNextSpaceScript_2969582168_2969582280(self_2969582281) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2969582282 = getAstDocumentEditor_2969578730(self_2969582281);
      if (isNone_2969578839(rHEX60gensym848_2969582282)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2969582173(get_2969578859(rHEX60gensym848_2969582282));
  };

  
}

function moveNodeToNextSpaceApi_2969582308(HEX3Atmp_2969582170) {
  var result_2969582309 = null;

    result_2969582309 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2969582168_2969582280(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582170, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym853_2969582315 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2969582320 = [mnewString(0)];
    fmtRes_2969582320[0].push.apply(fmtRes_2969582320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym853_2969582315 || [],fmtRes_2969582320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582309;

}

function selectPrevScript2_2969582334_2969582341(self_2969582342) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym860_2969582343 = getAstDocumentEditor_2969578730(self_2969582342);
      if (isNone_2969578839(rHEX60gensym860_2969582343)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2969582339(get_2969578859(rHEX60gensym860_2969582343));
  };

  
}

function selectPrevApi2_2969582369(HEX3Atmp_2969582336) {
  var result_2969582370 = null;

    result_2969582370 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2969582334_2969582341(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582336, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym865_2969582376 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2969582381 = [mnewString(0)];
    fmtRes_2969582381[0].push.apply(fmtRes_2969582381[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582381, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym865_2969582376 || [],fmtRes_2969582381[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582370;

}

function selectNextScript2_2969582385_2969582392(self_2969582393) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym868_2969582394 = getAstDocumentEditor_2969578730(self_2969582393);
      if (isNone_2969578839(rHEX60gensym868_2969582394)) {
      break BeforeRet;
      }
      
    };
    selectNext_2969582390(get_2969578859(rHEX60gensym868_2969582394));
  };

  
}

function selectNextApi2_2969582420(HEX3Atmp_2969582387) {
  var result_2969582421 = null;

    result_2969582421 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2969582385_2969582392(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582387, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym873_2969582427 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2969582432 = [mnewString(0)];
    fmtRes_2969582432[0].push.apply(fmtRes_2969582432[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582432, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym873_2969582427 || [],fmtRes_2969582432[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582421;

}

function openGotoSymbolPopupScript_2969582453_2969582699(self_2969582700) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym877_2969582701 = getAstDocumentEditor_2969578730(self_2969582700);
      if (isNone_2969578839(rHEX60gensym877_2969582701)) {
      break BeforeRet;
      }
      
    };
    openGotoSymbolPopup_2969582458(get_2969578859(rHEX60gensym877_2969582701));
  };

  
}

function openGotoSymbolPopupApi_2969582727(HEX3Atmp_2969582455) {
  var result_2969582728 = null;

    result_2969582728 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openGotoSymbolPopupScript_2969582453_2969582699(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582455, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym882_2969582734 = [111,112,101,110,71,111,116,111,83,121,109,98,111,108,80,111,112,117,112];
    var fmtRes_2969582739 = [mnewString(0)];
    fmtRes_2969582739[0].push.apply(fmtRes_2969582739[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969582739, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym882_2969582734 || [],fmtRes_2969582739[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969582728;

}

function gotoScript_2969582875_2969583305(self_2969583306, where_2969583307) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym890_2969583308 = getAstDocumentEditor_2969578730(self_2969583306);
      if (isNone_2969578839(rHEX60gensym890_2969583308)) {
      break BeforeRet;
      }
      
    };
    goto_2969582880(get_2969578859(rHEX60gensym890_2969583308), where_2969583307);
  };

  
}

function gotoApi_2969583335(HEX3Atmp_2969582877) {
  var result_2969583336 = null;

    result_2969583336 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2969582875_2969583305(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969582877, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969582877, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym895_2969583347 = [103,111,116,111];
    var fmtRes_2969583352 = [mnewString(0)];
    fmtRes_2969583352[0].push.apply(fmtRes_2969583352[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583352, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym895_2969583347 || [],fmtRes_2969583352[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583336;

}

function runSelectedFunctionScript_2969583445_2969583671(self_2969583672) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym913_2969583673 = getAstDocumentEditor_2969578730(self_2969583672);
      if (isNone_2969578839(rHEX60gensym913_2969583673)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2969583450(get_2969578859(rHEX60gensym913_2969583673));
  };

  
}

function runSelectedFunctionApi_2969583699(HEX3Atmp_2969583447) {
  var result_2969583700 = null;

    result_2969583700 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2969583445_2969583671(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969583447, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym918_2969583706 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2969583711 = [mnewString(0)];
    fmtRes_2969583711[0].push.apply(fmtRes_2969583711[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583711, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym918_2969583706 || [],fmtRes_2969583711[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583700;

}

function toggleOptionScript_2969583723_2969583731(self_2969583732, name_2969583733) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym936_2969583734 = getAstDocumentEditor_2969578730(self_2969583732);
      if (isNone_2969578839(rHEX60gensym936_2969583734)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2969583728(get_2969578859(rHEX60gensym936_2969583734), name_2969583733);
  };

  
}

function toggleOptionApi_2969583761(HEX3Atmp_2969583725) {
  var result_2969583762 = null;

    result_2969583762 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2969583723_2969583731(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969583725, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583725, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym941_2969583773 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2969583778 = [mnewString(0)];
    fmtRes_2969583778[0].push.apply(fmtRes_2969583778[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583778, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym941_2969583773 || [],fmtRes_2969583778[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583762;

}

function runLastCommandScript_2969583785_2969583793(self_2969583794, which_2969583795) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym945_2969583796 = getAstDocumentEditor_2969578730(self_2969583794);
      if (isNone_2969578839(rHEX60gensym945_2969583796)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2969583790(get_2969578859(rHEX60gensym945_2969583796), which_2969583795);
  };

  
}

function runLastCommandApi_2969583823(HEX3Atmp_2969583787) {
  var result_2969583824 = null;

    result_2969583824 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2969583785_2969583793(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969583787, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969583787, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym950_2969583835 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2969583840 = [mnewString(0)];
    fmtRes_2969583840[0].push.apply(fmtRes_2969583840[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969583840, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym950_2969583835 || [],fmtRes_2969583840[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969583824;

}

function selectCenterNodeScript_2969583843_2969584107(self_2969584108) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym953_2969584109 = getAstDocumentEditor_2969578730(self_2969584108);
      if (isNone_2969578839(rHEX60gensym953_2969584109)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2969583848(get_2969578859(rHEX60gensym953_2969584109));
  };

  
}

function selectCenterNodeApi_2969584135(HEX3Atmp_2969583845) {
  var result_2969584136 = null;

    result_2969584136 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2969583843_2969584107(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969583845, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym958_2969584142 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2969584147 = [mnewString(0)];
    fmtRes_2969584147[0].push.apply(fmtRes_2969584147[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584147, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym958_2969584142 || [],fmtRes_2969584147[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584136;

}

function scrollScript_2969584179_2969584191(self_2969584192, amount_2969584193) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym970_2969584194 = getAstDocumentEditor_2969578730(self_2969584192);
      if (isNone_2969578839(rHEX60gensym970_2969584194)) {
      break BeforeRet;
      }
      
    };
    scroll_2969584184(get_2969578859(rHEX60gensym970_2969584194), amount_2969584193);
  };

  
}

function scrollApi_2969584221(HEX3Atmp_2969584181) {
  var result_2969584222 = null;

    result_2969584222 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2969584179_2969584191(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584181, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818586479(HEX5BHEX5D_1627393116(HEX3Atmp_2969584181, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym975_2969584233 = [115,99,114,111,108,108];
    var fmtRes_2969584238 = [mnewString(0)];
    fmtRes_2969584238[0].push.apply(fmtRes_2969584238[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584238, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym975_2969584233 || [],fmtRes_2969584238[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584222;

}

function scrollOutputScript_2969584241_2969584260(self_2969584261, arg_2969584262) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym979_2969584263 = getAstDocumentEditor_2969578730(self_2969584261);
      if (isNone_2969578839(rHEX60gensym979_2969584263)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2969584246(get_2969578859(rHEX60gensym979_2969584263), arg_2969584262);
  };

  
}

function scrollOutputApi_2969584290(HEX3Atmp_2969584243) {
  var result_2969584291 = null;

    result_2969584291 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2969584241_2969584260(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584243, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584243, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym984_2969584302 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2969584307 = [mnewString(0)];
    fmtRes_2969584307[0].push.apply(fmtRes_2969584307[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584307, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym984_2969584302 || [],fmtRes_2969584307[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584291;

}

function dumpContextScript_2969584310_2969584317(self_2969584318) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym987_2969584319 = getAstDocumentEditor_2969578730(self_2969584318);
      if (isNone_2969578839(rHEX60gensym987_2969584319)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2969584315(get_2969578859(rHEX60gensym987_2969584319));
  };

  
}

function dumpContextApi_2969584345(HEX3Atmp_2969584312) {
  var result_2969584346 = null;

    result_2969584346 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2969584310_2969584317(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584312, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym992_2969584352 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2969584357 = [mnewString(0)];
    fmtRes_2969584357[0].push.apply(fmtRes_2969584357[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584357, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym992_2969584352 || [],fmtRes_2969584357[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584346;

}

function setModeScript2_2969584452_2969584492(self_2969584493, mode_2969584494) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym996_2969584495 = getAstDocumentEditor_2969578730(self_2969584493);
      if (isNone_2969578839(rHEX60gensym996_2969584495)) {
      break BeforeRet;
      }
      
    };
    setMode_2969584457(get_2969578859(rHEX60gensym996_2969584495), mode_2969584494);
  };

  
}

function setModeApi2_2969584522(HEX3Atmp_2969584454) {
  var result_2969584523 = null;

    result_2969584523 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2969584452_2969584492(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584454, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584454, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1001_2969584534 = [115,101,116,77,111,100,101];
    var fmtRes_2969584539 = [mnewString(0)];
    fmtRes_2969584539[0].push.apply(fmtRes_2969584539[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584539, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1001_2969584534 || [],fmtRes_2969584539[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2969584523;

}

function modeScript2_2969584543_2969584551(self_2969584552) {
  var result_2969584553 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1007_2969584554 = getAstDocumentEditor_2969578730(self_2969584552);
      if (isNone_2969578839(rHEX60gensym1007_2969584554)) {
      break BeforeRet;
      }
      
    };
    result_2969584553 = nimCopy(null, mode_2969584548(get_2969578859(rHEX60gensym1007_2969584554)), NTI33554449);
  };

  return result_2969584553;

}

function modeApi2_2969584581(HEX3Atmp_2969584545) {
  var result_2969584582 = null;

  BeforeRet: {
    result_2969584582 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2969584582 = toJson_1811939932(modeScript2_2969584543_2969584551(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584545, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1013_2969584592 = [109,111,100,101];
    var fmtRes_2969584597 = [mnewString(0)];
    fmtRes_2969584597[0].push.apply(fmtRes_2969584597[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584597, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1013_2969584592 || [],fmtRes_2969584597[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584582;

}

function getContextWithModeScript2_2969584600_2969584609(self_2969584610, context_2969584611) {
  var result_2969584612 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1017_2969584613 = getAstDocumentEditor_2969578730(self_2969584610);
      if (isNone_2969578839(rHEX60gensym1017_2969584613)) {
      break BeforeRet;
      }
      
    };
    result_2969584612 = nimCopy(null, getContextWithMode_2969584605(get_2969578859(rHEX60gensym1017_2969584613), context_2969584611), NTI33554449);
  };

  return result_2969584612;

}

function getContextWithModeApi2_2969584641(HEX3Atmp_2969584602) {
  var result_2969584642 = null;

  BeforeRet: {
    result_2969584642 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2969584642 = toJson_1811939932(getContextWithModeScript2_2969584600_2969584609(jsonTo_2969578886(HEX5BHEX5D_1627393116(HEX3Atmp_2969584602, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2969584602, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1023_2969584657 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2969584662 = [mnewString(0)];
    fmtRes_2969584662[0].push.apply(fmtRes_2969584662[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2969584662, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1023_2969584657 || [],fmtRes_2969584662[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2969584642;

}

function dispatch_2969584667(command_2969584666, arg_2969584665) {
    var Temporary1;

  var result_2969584669 = ({val: null});

    switch (toJSStr(command_2969584666)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818593612(moveCursorApi_2969578884(arg_2969584665));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818593612(moveCursorUpApi_2969579034(arg_2969584665));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818593612(moveCursorDownApi_2969579084(arg_2969584665));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818593612(moveCursorNextApi_2969579141(arg_2969584665));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818593612(moveCursorPrevApi_2969579208(arg_2969584665));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818593612(moveCursorNextLineApi_2969579294(arg_2969584665));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818593612(moveCursorPrevLineApi_2969579379(arg_2969584665));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818593612(selectContainingApi_2969579598(arg_2969584665));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818593612(deleteSelectedApi_2969579656(arg_2969584665));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818593612(copySelectedApi_2969579763(arg_2969584665));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818593612(finishEditApi_2969579873(arg_2969584665));
      break;
    case "undo":
      Temporary1 = some_2818593612(undoApi2_2969579994(arg_2969584665));
      break;
    case "redo":
      Temporary1 = some_2818593612(redoApi2_2969580071(arg_2969584665));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818593612(insertAfterSmartApi_2969580241(arg_2969584665));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818593612(insertAfterApi_2969580564(arg_2969584665));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818593612(insertBeforeApi_2969580718(arg_2969584665));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818593612(insertChildApi_2969580871(arg_2969584665));
      break;
    case "replace":
      Temporary1 = some_2818593612(replaceApi_2969580978(arg_2969584665));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818593612(replaceEmptyApi_2969581089(arg_2969584665));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818593612(replaceParentApi_2969581166(arg_2969584665));
      break;
    case "wrap":
      Temporary1 = some_2818593612(wrapApi_2969581280(arg_2969584665));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818593612(editPrevEmptyApi_2969581365(arg_2969584665));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818593612(editNextEmptyApi_2969581436(arg_2969584665));
      break;
    case "rename":
      Temporary1 = some_2818593612(renameApi_2969581499(arg_2969584665));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818593612(selectPrevCompletionApi2_2969581563(arg_2969584665));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818593612(selectNextCompletionApi2_2969581627(arg_2969584665));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818593612(applySelectedCompletionApi2_2969581790(arg_2969584665));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818593612(cancelAndNextCompletionApi_2969581888(arg_2969584665));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818593612(cancelAndPrevCompletionApi_2969581938(arg_2969584665));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818593612(cancelAndDeleteApi_2969581991(arg_2969584665));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818593612(moveNodeToPrevSpaceApi_2969582145(arg_2969584665));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818593612(moveNodeToNextSpaceApi_2969582308(arg_2969584665));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818593612(selectPrevApi2_2969582369(arg_2969584665));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818593612(selectNextApi2_2969582420(arg_2969584665));
      break;
    case "openGotoSymbolPopup":
    case "open-goto-symbol-popup":
      Temporary1 = some_2818593612(openGotoSymbolPopupApi_2969582727(arg_2969584665));
      break;
    case "goto":
      Temporary1 = some_2818593612(gotoApi_2969583335(arg_2969584665));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818593612(runSelectedFunctionApi_2969583699(arg_2969584665));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818593612(toggleOptionApi_2969583761(arg_2969584665));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818593612(runLastCommandApi_2969583823(arg_2969584665));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818593612(selectCenterNodeApi_2969584135(arg_2969584665));
      break;
    case "scroll":
      Temporary1 = some_2818593612(scrollApi_2969584221(arg_2969584665));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818593612(scrollOutputApi_2969584290(arg_2969584665));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818593612(dumpContextApi_2969584345(arg_2969584665));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818593612(setModeApi2_2969584522(arg_2969584665));
      break;
    case "mode":
      Temporary1 = some_2818593612(modeApi2_2969584581(arg_2969584665));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818593612(getContextWithModeApi2_2969584641(arg_2969584665));
      break;
    default: 
      Temporary1 = none_2818593811();
      break;
    }
    result_2969584669 = nimCopy(result_2969584669, Temporary1, NTI2818585760);

  return result_2969584669;

}

function handleAction_2969583780(self_2969583781, action_2969583782, arg_2969583783) {
  var result_2969584818 = 0;

  BeforeRet: {
    var args_2969584819 = newJArray_1627390082();
    add_1627390190(args_2969584819, toJson_2969578808({id: self_2969583781.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2969584820 = null;
      var colontmp__536872194 = null;
      colontmp__536872194 = newStringStream_1660945417(arg_2969583783);
      var p_536872195 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872195[0], colontmp__536872194, [], false);
      try {
      var _ = getTok_1694499270(p_536872195[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872195[0].tok == 1))) break Label4;
            a_2969584820 = parseJson_1627395211(p_536872195[0], false, false, 0);
            add_1627390190(args_2969584819, a_2969584820);
          }
      };
      } finally {
      close_1694498967(p_536872195[0]);
      }
    };
    var newLastCommand_2969584821 = {Field0: nimCopy(null, action_2969583782, NTI33554449), Field1: nimCopy(null, arg_2969583783, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848854(self_2969583781.editor, self_2969583781, action_2969583782, args_2969584819) == 3)) {
    result_2969584818 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818593879(dispatch_2969584667(action_2969583782, args_2969584819))) {
    result_2969584818 = 3;
    break BeforeRet;
    }
    
    result_2969584818 = 1;
    break BeforeRet;
    } finally {
    self_2969583781.lastCommand = nimCopy(self_2969583781.lastCommand, newLastCommand_2969584821, NTI2969568667);
    }
  };

  return result_2969584818;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet314[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872315 = 0;
      colontmp__536872315 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872316 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872316 <= colontmp__536872315)) break Label3;
            i_855638867 = res_536872316;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872316 = addInt(res_536872316, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872319 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872320 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872321 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872319, NTI1191182360), Field1: colontmp__536872320, Field2: colontmp__536872321}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872322 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872322["Field0"];
    var m_1191182547 = colontmp__536872322["Field1"];
    var d_1191182548 = colontmp__536872322["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872318 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872318["Field0"];
    var m_1191183687 = colontmp__536872318["Field1"];
    var y_1191183688 = colontmp__536872318["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872307 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872307 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872307, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872307 = addInt(i_536872307, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet313[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872312 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872312 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872312, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872312 = addInt(i_536872312, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2399141915(self_2399141916) {
  var result_2399141917 = false;

    result_2399141917 = false;

  return result_2399141917;

}

function isReadOnly_2281701431(self_2281701432) {
  var result_2281701433 = false;

    result_2281701433 = true;

  return result_2281701433;

}

function isReadOnly_2264924176(self_2264924177) {
  var result_2264924178 = false;

    result_2264924178 = false;

  return result_2264924178;

}

function isReadOnly_2214592526(self_2214592527) {
  var result_2214592528 = false;

    result_2214592528 = true;

  return result_2214592528;

}

function isReadOnly_2214592529(self_2214592527) {
  var result_2214592530 = false;

  BeforeRet: {
    chckNilDisp(self_2214592527);
    if (isObj(self_2214592527.m_type, NTI2399141893)) {
    result_2214592530 = isReadOnly_2399141915(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2281701380)) {
    result_2214592530 = isReadOnly_2281701431(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2264924164)) {
    result_2214592530 = isReadOnly_2264924176(self_2214592527);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592527.m_type, NTI2214592520)) {
    result_2214592530 = isReadOnly_2214592526(self_2214592527);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592530;

}

function settings_2399141918(self_2399141919) {
  var result_2399141920 = null;

    result_2399141920 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2399141920, [98,97,115,101,85,114,108], newJString_1627389994(self_2399141919.baseUrl));

  return result_2399141920;

}

function settings_2281701434(self_2281701435) {
  var result_2281701436 = null;

    result_2281701436 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,97,115,101,85,114,108], newJString_1627389994(self_2281701435.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [117,115,101,114], newJString_1627389994(self_2281701435.user));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2281701435.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2281701436, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2281701435.branchOrHash));

  return result_2281701436;

}

function settings_2264924169(self_2264924170) {
  var result_2264924171 = null;

    result_2264924171 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2264924171, [112,97,116,104], newJString_1627389994(self_2264924170.path));

  return result_2264924171;

}

function settings_2214592531(self_2214592532) {
  var result_2214592533 = null;

  return result_2214592533;

}

function settings_2214592534(self_2214592532) {
  var result_2214592535 = null;

  BeforeRet: {
    chckNilDisp(self_2214592532);
    if (isObj(self_2214592532.m_type, NTI2399141893)) {
    result_2214592535 = settings_2399141918(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2281701380)) {
    result_2214592535 = settings_2281701434(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2264924164)) {
    result_2214592535 = settings_2264924169(self_2214592532);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592532.m_type, NTI2214592520)) {
    result_2214592535 = settings_2214592531(self_2214592532);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592535;

}

function clear_2399141963(t_2399141966) {
    Label1: {
      var i_2399142019 = 0;
      var colontmp__536872324 = 0;
      colontmp__536872324 = (t_2399141966.data).length;
      var i_536872325 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872325 < colontmp__536872324)) break Label3;
            i_2399142019 = i_536872325;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field0 = 0;
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2 = nimCopy(t_2399141966.data[chckIndx(i_2399142019, 0, (t_2399141966.data).length - 1)].Field2, ({done: false, listing: ({files: [], folders: []})}), NTI2399141891);
            i_536872325 = addInt(i_536872325, 1);
          }
      };
    };
    t_2399141966.counter = 0;

  
}

function clearDirectoryCache_2399141921(self_2399141922) {
    clear_2399141963(self_2399141922.cachedDirectoryListings);

  
}

function clear_2281701479(t_2281701482) {
    Label1: {
      var i_2281701535 = 0;
      var colontmp__536872328 = 0;
      colontmp__536872328 = (t_2281701482.data).length;
      var i_536872329 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872329 < colontmp__536872328)) break Label3;
            i_2281701535 = i_536872329;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field0 = 0;
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2 = nimCopy(t_2281701482.data[chckIndx(i_2281701535, 0, (t_2281701482.data).length - 1)].Field2, ({files: [], folders: []}), NTI2214592517);
            i_536872329 = addInt(i_536872329, 1);
          }
      };
    };
    t_2281701482.counter = 0;

  
}

function clearDirectoryCache_2281701437(self_2281701438) {
    clear_2281701479(self_2281701438.cachedDirectoryListings);

  
}

function clearDirectoryCache_2214592536(self_2214592537) {
  
}

function clearDirectoryCache_2214592538(self_2214592537) {
    chckNilDisp(self_2214592537);
    if (isObj(self_2214592537.m_type, NTI2399141893)) {
    clearDirectoryCache_2399141921(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2281701380)) {
    clearDirectoryCache_2281701437(self_2214592537);
    }
    else {
    if (isObj(self_2214592537.m_type, NTI2214592520)) {
    clearDirectoryCache_2214592536(self_2214592537);
    }
    }}

  
}
async function httpGet_2348810256(url_2348810257, authToken_2348810271) {
  var result_2348810273 = null;

  BeforeRet: {
    var cstr_2348810313 = (await getAsyncJs(toJSStr(url_2348810257), toJSStr(get_2348810295(authToken_2348810271, []))));
    result_2348810273 = cstrToNimstr(cstr_2348810313);
    break BeforeRet;
  };

  return result_2348810273;

}
async function loadFile_2399142382(self_2399142383, relativePath_2399142384) {
    var Temporary1;

  var result_2399142386 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142384, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142384, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142384;
    }
    
    var relativePath_2399142414 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142415 = (self_2399142383.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142414 || []);
    var fmtRes_2399142420 = [mnewString(0)];
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142420, 0, url_2399142415, []);
    fmtRes_2399142420[0].push.apply(fmtRes_2399142420[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142420[0], NTI33554449)]);
    result_2399142386 = (await httpGet_2348810256(url_2399142415, none_2348810263()));
    break BeforeRet;
  };

  return result_2399142386;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2382364741(t_2382364744, key_2382364745) {
  var result_2382364746 = false;

  BeforeRet: {
    result_2382364746 = hasKey_1795162450(t_2382364744, key_2382364745);
    break BeforeRet;
  };

  return result_2382364746;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2382364695(self_2382364696, name_2382364697) {
    var Temporary1;

  var result_2382364698 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2382364697)) !== null)) {
    result_2382364698 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2382364697))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2382364741(cachedAppFiles_2382364694[0], name_2382364697))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2382364694[0], name_2382364697, cstrToNimstr(loadFileSync(toJSStr(name_2382364697))));
    }
    
    result_2382364698 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2382364694[0], name_2382364697), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2382364698;

}

function loadApplicationFile_2365587470(self_2365587471, name_2365587472) {
  var result_2365587473 = [];

  return result_2365587473;

}

function loadApplicationFile_2365587474(self_2365587471, name_2365587472) {
  var result_2365587475 = [];

  BeforeRet: {
    chckNilDisp(self_2365587471);
    if (isObj(self_2365587471.m_type, NTI2382364676)) {
    result_2365587475 = loadApplicationFile_2382364695(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587471.m_type, NTI2365587460)) {
    result_2365587475 = loadApplicationFile_2365587470(self_2365587471, name_2365587472);
    break BeforeRet;
    }
    }
  };

  return result_2365587475;

}

function getAccessToken_2281701406() {
  var result_2281701408 = ({val: [], has: false});

  BeforeRet: {
    var token_2281701409 = loadApplicationFile_2365587474(fs_2365587509, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2281701409).length)) {
    result_2281701408 = nimCopy(result_2281701408, some_2281701410(token_2281701409), NTI2348810261);
    break BeforeRet;
    }
    
    result_2281701408 = nimCopy(result_2281701408, none_2348810263(), NTI2348810261);
    break BeforeRet;
  };

  return result_2281701408;

}

function decode_2315256303(s_2315256304) {
    
function decodeSize_2315256306(size_2315256307) {
      var result_2315256308 = 0;

      BeforeRet: {
        result_2315256308 = addInt(divInt(mulInt(size_2315256307, 3), 4), 6);
        break BeforeRet;
      };

      return result_2315256308;

    }
    var Temporary1;

  var result_2315256305 = [];

  BeforeRet: {
    if (((s_2315256304).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2315256305.length < (Temporary1 = chckRange(decodeSize_2315256306((s_2315256304).length), 0, 2147483647), Temporary1)) { for (var i = result_2315256305.length; i < Temporary1; ++i) result_2315256305.push(0); }
         else {result_2315256305.length = Temporary1; };
    var inputIndex_2315256313 = 0;
    var outputIndex_2315256314 = 0;
    var inputLen_2315256315 = (s_2315256304).length;
    var inputEnds_2315256316 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet315[s_2315256304[chckIndx(subInt(inputLen_2315256315, 1), 0, (s_2315256304).length - 1)]] != undefined)) break Label3;
          inputLen_2315256315 = subInt(inputLen_2315256315, 1);
        }
    };
    inputEnds_2315256316 = subInt(inputLen_2315256315, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2315256313 <= inputEnds_2315256316)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet316[s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]] != undefined)) break Label7;
                inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
              }
          };
          var a_2315256338 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((a_2315256338 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var b_2315256351 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((b_2315256351 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var c_2315256364 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((c_2315256364 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          var d_2315256377 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
          if ((d_2315256377 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256338 << 2) | (b_2315256351 >> 4)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256351 << 4) | (c_2315256364 >> 2)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
          result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((c_2315256364 << 6) | (d_2315256377 >> 0)) & 255), 0, 255);
          outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
        }
    };
    var leftLen_2315256426 = absInt(modInt(subInt(inputIndex_2315256313, inputLen_2315256315), 4));
    if ((leftLen_2315256426 == 2)) {
    var a_2315256430 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256430 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256443 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256443 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256430 << 2) | (b_2315256443 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    else {
    if ((leftLen_2315256426 == 3)) {
    var a_2315256469 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((a_2315256469 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var b_2315256482 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((b_2315256482 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    var c_2315256495 = ((decodeTable_2315256293[chckIndx(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)], 0, (decodeTable_2315256293).length - 1)]) | 0);
    if ((c_2315256495 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2315256304[chckIndx(inputIndex_2315256313, 0, (s_2315256304).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2315256313) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2315256313 = addInt(inputIndex_2315256313, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((a_2315256469 << 2) | (b_2315256482 >> 4)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    result_2315256305[chckIndx(outputIndex_2315256314, 0, (result_2315256305).length - 1)] = chckRange((((b_2315256482 << 4) | (c_2315256495 >> 2)) & 255), 0, 255);
    outputIndex_2315256314 = addInt(outputIndex_2315256314, 1);
    }
    }
    if (result_2315256305.length < chckRange(outputIndex_2315256314, 0, 2147483647)) { for (var i = result_2315256305.length; i < chckRange(outputIndex_2315256314, 0, 2147483647); ++i) result_2315256305.push(0); }
         else {result_2315256305.length = chckRange(outputIndex_2315256314, 0, 2147483647); };
  };

  return result_2315256305;

}
async function loadFile_2281701875(self_2281701876, relativePath_2281701877) {
    var Temporary1;

  var result_2281701879 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2281701877, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2281701877, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2281701877;
    }
    
    var relativePath_2281701907 = nimCopy(null, Temporary1, NTI33554449);
    var url_2281701908 = (self_2281701876.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2281701907 || [],[63,114,101,102,61] || [],self_2281701876.branchOrHash || []);
    var fmtRes_2281701913 = [mnewString(0)];
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2281701913, 0, url_2281701908, []);
    fmtRes_2281701913[0].push.apply(fmtRes_2281701913[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281701913[0], NTI33554449)]);
    var token_2281701914 = getAccessToken_2281701406();
    var response_2281701919 = (await httpGet_2348810256(url_2281701908, token_2281701914));
++excHandler;
    try {
    var jsn_2281701920 = parseJson_1627395313(response_2281701919);
    if (hasKey_1627393154(jsn_2281701920, [99,111,110,116,101,110,116])) {
    var contentBase64_2281701921 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2281701920, [99,111,110,116,101,110,116]), []);
    var content_2281701922 = decode_2315256303(contentBase64_2281701921);
    result_2281701879 = content_2281701922;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281701930 = [mnewString(0)];
    fmtRes_2281701930[0].push.apply(fmtRes_2281701930[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281701930, 0, response_2281701919, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281701930[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281701879 = [];
    break BeforeRet;
  };

  return result_2281701879;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2264924172(self_2264924173, relativePath_2264924174) {
  var result_2264924175 = [];

    result_2264924175 = nimCopy(null, HEX2F_1426063446(self_2264924173.path, relativePath_2264924174), NTI33554449);

  return result_2264924175;

}
async function loadFile_2264924200(self_2264924201, relativePath_2264924202) {
  var result_2264924204 = null;

  BeforeRet: {
    result_2264924204 = readFile_503316918(getAbsolutePath_2264924172(self_2264924201, relativePath_2264924202));
    break BeforeRet;
  };

  return result_2264924204;

}

function loadFile_2214592539(self_2214592540, relativePath_2214592541) {
  var result_2214592544 = null;

  return result_2214592544;

}

function loadFile_2214592545(self_2214592540, relativePath_2214592541) {
  var result_2214592546 = null;

  BeforeRet: {
    chckNilDisp(self_2214592540);
    if (isObj(self_2214592540.m_type, NTI2399141893)) {
    result_2214592546 = loadFile_2399142382(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2281701380)) {
    result_2214592546 = loadFile_2281701875(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2264924164)) {
    result_2214592546 = loadFile_2264924200(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592540.m_type, NTI2214592520)) {
    result_2214592546 = loadFile_2214592539(self_2214592540, relativePath_2214592541);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592546;

}
async function httpPost_2348810327(url_2348810328, content_2348810329, authToken_2348810338) {
  var result_2348810340 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2348810328), toJSStr(content_2348810329), toJSStr(get_2348810295(authToken_2348810338, []))));
    result_2348810340 = undefined;
    break BeforeRet;
  };

  return result_2348810340;

}
async function saveFile_2399142429(self_2399142430, relativePath_2399142431, content_2399142432) {
    var Temporary1;

  var result_2399142434 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2399142431, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2399142431, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2399142431;
    }
    
    var relativePath_2399142458 = nimCopy(null, Temporary1, NTI33554449);
    var url_2399142459 = (self_2399142430.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2399142458 || []);
    var fmtRes_2399142464 = [mnewString(0)];
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2399142464, 0, url_2399142459, []);
    fmtRes_2399142464[0].push.apply(fmtRes_2399142464[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2399142464[0], NTI33554449)]);
    (await httpPost_2348810327(url_2399142459, content_2399142432, none_2348810263()));
    result_2399142434 = undefined;
    break BeforeRet;
  };

  return result_2399142434;

}
async function saveFile_2281701935(self_2281701936, relativePath_2281701937, content_2281701938) {
  var result_2281701940 = null;

  BeforeRet: {
    result_2281701940 = undefined;
    break BeforeRet;
  };

  return result_2281701940;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2264924227(self_2264924228, relativePath_2264924229, content_2264924230) {
  var result_2264924232 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2264924172(self_2264924228, relativePath_2264924229), content_2264924230);
    result_2264924232 = undefined;
    break BeforeRet;
  };

  return result_2264924232;

}

function saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592552 = null;

  return result_2214592552;

}

function saveFile_2214592553(self_2214592548, relativePath_2214592549, content_2214592550) {
  var result_2214592554 = null;

  BeforeRet: {
    chckNilDisp(self_2214592548);
    if (isObj(self_2214592548.m_type, NTI2399141893)) {
    result_2214592554 = saveFile_2399142429(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2281701380)) {
    result_2214592554 = saveFile_2281701935(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2264924164)) {
    result_2214592554 = saveFile_2264924227(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592548.m_type, NTI2214592520)) {
    result_2214592554 = saveFile_2214592547(self_2214592548, relativePath_2214592549, content_2214592550);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592554;

}

function rawGet_2399142566(t_2399142569, key_2399142570, hc_2399142571, hc_2399142571_Idx) {
  var result_2399142572 = 0;

  BeforeRet: {
    hc_2399142571[hc_2399142571_Idx] = hash_1325400491(key_2399142570);
    if ((hc_2399142571[hc_2399142571_Idx] == 0)) {
    hc_2399142571[hc_2399142571_Idx] = 314159265;
    }
    
    if (((t_2399142569.data).length == 0)) {
    result_2399142572 = -1;
    break BeforeRet;
    }
    
    var h_2399142623 = (hc_2399142571[hc_2399142571_Idx] & (t_2399142569.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0)) break Label2;
          if (((t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field0 == hc_2399142571[hc_2399142571_Idx]) && eqStrings(t_2399142569.data[chckIndx(h_2399142623, 0, (t_2399142569.data).length - 1)].Field1, key_2399142570))) {
          result_2399142572 = h_2399142623;
          break BeforeRet;
          }
          
          h_2399142623 = nextTry_1308622883(h_2399142623, (t_2399142569.data).length - 1);
        }
    };
    result_2399142572 = subInt(-1, h_2399142623);
  };

  return result_2399142572;

}

function hasKey_2399142559(t_2399142562, key_2399142563) {
  var result_2399142564 = false;

    var hc_2399142565 = [0];
    result_2399142564 = (0 <= rawGet_2399142566(t_2399142562, key_2399142563, hc_2399142565, 0));

  return result_2399142564;

}

function contains_2399142553(t_2399142556, key_2399142557) {
  var result_2399142558 = false;

  BeforeRet: {
    result_2399142558 = hasKey_2399142559(t_2399142556, key_2399142557);
    break BeforeRet;
  };

  return result_2399142558;

}

function HEX5BHEX5D_2399142857(t_2399142860, key_2399142861) {
  var result_2399142862 = null;

    var hcHEX60gensym22_2399142863 = [0];
    var indexHEX60gensym22_2399142870 = rawGet_2399142566(t_2399142860, key_2399142861, hcHEX60gensym22_2399142863, 0);
    if ((0 <= indexHEX60gensym22_2399142870)) {
    result_2399142862 = t_2399142860.data[chckIndx(indexHEX60gensym22_2399142870, 0, (t_2399142860.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2399142861);
    }
    

  return result_2399142862;

}

function mustRehash_2399143261(t_2399143263) {
  var result_2399143264 = false;

    if (!((t_2399143263.counter < (t_2399143263.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2399143264 = ((mulInt((t_2399143263.data).length, 2) < mulInt(t_2399143263.counter, 3)) || (subInt((t_2399143263.data).length, t_2399143263.counter) < 4));

  return result_2399143264;

}

function rawInsert_2399143710(t_2399143714, data_2399143715, data_2399143715_Idx, key_2399143716, val_2399143717, hc_2399143718, h_2399143719) {
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field1 = nimCopy(null, key_2399143716, NTI33554449);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2 = nimCopy(data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field2, val_2399143717, NTI2399141891);
    data_2399143715[data_2399143715_Idx][chckIndx(h_2399143719, 0, (data_2399143715[data_2399143715_Idx]).length - 1)].Field0 = hc_2399143718;

  
}

function enlarge_2399143416(t_2399143419) {
    var n_2399143422 = [];
    n_2399143422 = new Array(chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2399143419.data).length, 2), 0, 2147483647) ; ++i) { n_2399143422[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    var Temporary1 = t_2399143419.data; t_2399143419.data = n_2399143422; n_2399143422 = Temporary1;    Label2: {
      var i_2399143486 = 0;
      var colontmp__536872339 = 0;
      colontmp__536872339 = (n_2399143422).length - 1;
      var res_536872340 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872340 <= colontmp__536872339)) break Label4;
            i_2399143486 = res_536872340;
            var eh_2399143540 = n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field0;
            if (isFilled_1308622880(eh_2399143540)) {
            var j_2399143544 = (eh_2399143540 & (t_2399143419.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2399143419.data[chckIndx(j_2399143544, 0, (t_2399143419.data).length - 1)].Field0)) break Label6;
                  j_2399143544 = nextTry_1308622883(j_2399143544, (t_2399143419.data).length - 1);
                }
            };
            rawInsert_2399143710(t_2399143419, t_2399143419, "data", n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field1, n_2399143422[chckIndx(i_2399143486, 0, (n_2399143422).length - 1)].Field2, eh_2399143540, j_2399143544);
            }
            
            res_536872340 = addInt(res_536872340, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2399143879(t_2399143882, key_2399143883, hc_2399143884) {
  var result_2399143885 = 0;

  BeforeRet: {
    if (((t_2399143882.data).length == 0)) {
    result_2399143885 = -1;
    break BeforeRet;
    }
    
    var h_2399143936 = (hc_2399143884 & (t_2399143882.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0)) break Label2;
          if (((t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field0 == hc_2399143884) && eqStrings(t_2399143882.data[chckIndx(h_2399143936, 0, (t_2399143882.data).length - 1)].Field1, key_2399143883))) {
          result_2399143885 = h_2399143936;
          break BeforeRet;
          }
          
          h_2399143936 = nextTry_1308622883(h_2399143936, (t_2399143882.data).length - 1);
        }
    };
    result_2399143885 = subInt(-1, h_2399143936);
  };

  return result_2399143885;

}

function HEX5BHEX5DHEX3D_2399143088(t_2399143091, key_2399143092, val_2399143093) {
    if (((t_2399143091.data).length == 0)) {
    var correctSizeHEX60gensym25_2399143142 = slotsNeeded_1308622891(32);
    t_2399143091.counter = 0;
    t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2399143142, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }    }
    
    var hc_2399143147 = [0];
    var index_2399143154 = rawGet_2399142566(t_2399143091, key_2399143092, hc_2399143147, 0);
    if ((0 <= index_2399143154)) {
    t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2 = nimCopy(t_2399143091.data[chckIndx(index_2399143154, 0, (t_2399143091.data).length - 1)].Field2, val_2399143093, NTI2399141891);
    }
    else {
      if (((t_2399143091.data).length == 0)) {
      var correctSizeHEX60gensym28_2399143256 = slotsNeeded_1308622891(32);
      t_2399143091.counter = 0;
      t_2399143091.data = new Array(chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2399143256, 0, 2147483647) ; ++i) { t_2399143091.data[i] = {Field0: 0, Field1: [], Field2: ({done: false, listing: ({files: [], folders: []})})}; }      }
      
      if (mustRehash_2399143261(t_2399143091)) {
      enlarge_2399143416(t_2399143091);
      index_2399143154 = rawGetKnownHC_2399143879(t_2399143091, key_2399143092, hc_2399143147[0]);
      }
      
      index_2399143154 = subInt(-1, index_2399143154);
      rawInsert_2399143710(t_2399143091, t_2399143091, "data", key_2399143092, val_2399143093, hc_2399143147[0], index_2399143154);
      t_2399143091.counter = addInt(t_2399143091.counter, 1);
    }
    

  
}

function parseDirectoryListing_2399142469(self_2399142470, basePath_2399142471, jsn_2399142472) {
        var Temporary3;
        var Temporary8;

  var result_2399142473 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2399142472, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]).kind == 6))) {
    var files_2399142478 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,105,108,101,115]);
    Label1: {
      var item_2399142479 = null;
      if (!((files_2399142478.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2399142478.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872345 = null;
        var colontmp__536872346 = [];
        var Temporary3 = files_2399142478;
        if (ConstSet317[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872346 = Temporary3.elems;
        var i_536872347 = 0;
        var L_536872348 = (colontmp__536872346).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872347 < L_536872348)) break Label5;
              i_536872345 = colontmp__536872346[chckIndx(i_536872347, 0, (colontmp__536872346).length - 1)];
              item_2399142479 = i_536872345;
              result_2399142473.files.push(getStr_1627390106(item_2399142479, []));;
              i_536872347 = addInt(i_536872347, 1);
              if (!(((colontmp__536872346).length == L_536872348))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2399142472, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2399142488 = HEX5BHEX5D_1627393037(jsn_2399142472, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2399142489 = null;
      if (!((folders_2399142488.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2399142488.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872352 = null;
        var colontmp__536872353 = [];
        var Temporary8 = folders_2399142488;
        if (ConstSet318[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872353 = Temporary8.elems;
        var i_536872354 = 0;
        var L_536872355 = (colontmp__536872353).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872354 < L_536872355)) break Label10;
              i_536872352 = colontmp__536872353[chckIndx(i_536872354, 0, (colontmp__536872353).length - 1)];
              item_2399142489 = i_536872352;
              result_2399142473.folders.push(getStr_1627390106(item_2399142489, []));;
              i_536872354 = addInt(i_536872354, 1);
              if (!(((colontmp__536872353).length == L_536872355))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2399142473;

}
async function getDirectoryListing_2399142497(self_2399142498, relativePath_2399142499) {
    var Temporary3;

  var result_2399142501 = null;

  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499) && !(HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done))) break Label2;
          (await (new Promise(resolve => setTimeout(resolve, 2))));
        }
    };
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: false, listing: ({files: [], folders: []})});
    if ((((relativePath_2399142499).length == 0) || eqStrings(relativePath_2399142499, [46]))) {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary3 = (self_2399142498.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2399142499 || []);
    }
    
    var url_2399144117 = nimCopy(null, Temporary3, NTI33554449);
    var response_2399144122 = (await httpGet_2348810256(url_2399144117, none_2348810263()));
++excHandler;
    try {
    var jsn_2399144123 = parseJson_1627395313(response_2399144122);
    var listing_2399144124 = parseDirectoryListing_2399142469(self_2399142498, relativePath_2399142499, jsn_2399144123);
    HEX5BHEX5DHEX3D_2399143088(self_2399142498.cachedDirectoryListings, relativePath_2399142499, {done: true, listing: nimCopy(null, listing_2399144124, NTI2214592517)});
    result_2399142501 = listing_2399144124;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2399144178 = [mnewString(0)];
    fmtRes_2399144178[0].push.apply(fmtRes_2399144178[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2399144178, 0, response_2399144122, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2399144178[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (contains_2399142553(self_2399142498.cachedDirectoryListings, relativePath_2399142499)) {
    HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).done = true;
    result_2399142501 = HEX5BHEX5D_2399142857(self_2399142498.cachedDirectoryListings, relativePath_2399142499).listing;
    break BeforeRet;
    }
    
    result_2399142501 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2399142501;

}

function rawGet_2281702091(t_2281702094, key_2281702095, hc_2281702096, hc_2281702096_Idx) {
  var result_2281702097 = 0;

  BeforeRet: {
    hc_2281702096[hc_2281702096_Idx] = hash_1325400491(key_2281702095);
    if ((hc_2281702096[hc_2281702096_Idx] == 0)) {
    hc_2281702096[hc_2281702096_Idx] = 314159265;
    }
    
    if (((t_2281702094.data).length == 0)) {
    result_2281702097 = -1;
    break BeforeRet;
    }
    
    var h_2281702148 = (hc_2281702096[hc_2281702096_Idx] & (t_2281702094.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0)) break Label2;
          if (((t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field0 == hc_2281702096[hc_2281702096_Idx]) && eqStrings(t_2281702094.data[chckIndx(h_2281702148, 0, (t_2281702094.data).length - 1)].Field1, key_2281702095))) {
          result_2281702097 = h_2281702148;
          break BeforeRet;
          }
          
          h_2281702148 = nextTry_1308622883(h_2281702148, (t_2281702094.data).length - 1);
        }
    };
    result_2281702097 = subInt(-1, h_2281702148);
  };

  return result_2281702097;

}

function hasKey_2281702084(t_2281702087, key_2281702088) {
  var result_2281702089 = false;

    var hc_2281702090 = [0];
    result_2281702089 = (0 <= rawGet_2281702091(t_2281702087, key_2281702088, hc_2281702090, 0));

  return result_2281702089;

}

function contains_2281702078(t_2281702081, key_2281702082) {
  var result_2281702083 = false;

  BeforeRet: {
    result_2281702083 = hasKey_2281702084(t_2281702081, key_2281702082);
    break BeforeRet;
  };

  return result_2281702083;

}

function HEX5BHEX5D_2281702382(t_2281702385, key_2281702386) {
  var result_2281702387 = null;

    var hcHEX60gensym22_2281702388 = [0];
    var indexHEX60gensym22_2281702395 = rawGet_2281702091(t_2281702385, key_2281702386, hcHEX60gensym22_2281702388, 0);
    if ((0 <= indexHEX60gensym22_2281702395)) {
    result_2281702387 = t_2281702385.data[chckIndx(indexHEX60gensym22_2281702395, 0, (t_2281702385.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2281702386);
    }
    

  return result_2281702387;

}

function parseDirectoryListing_2281701946(self_2281701947, basePath_2281701948, jsn_2281701949) {
        var Temporary3;

  var result_2281701950 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2281701949, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]).kind == 6))) {
    var tree_2281701955 = HEX5BHEX5D_1627393037(jsn_2281701949, [116,114,101,101]);
    Label1: {
      var item_2281701956 = null;
      if (!((tree_2281701955.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2281701955.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872361 = null;
        var colontmp__536872362 = [];
        var Temporary3 = tree_2281701955;
        if (ConstSet319[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872362 = Temporary3.elems;
        var i_536872363 = 0;
        var L_536872364 = (colontmp__536872362).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872363 < L_536872364)) break Label5;
              i_536872361 = colontmp__536872362[chckIndx(i_536872363, 0, (colontmp__536872362).length - 1)];
              item_2281701956 = i_536872361;
              Label6: {
                if (!((item_2281701956.kind == 5))) {
                break Label6;
                }
                
                var path_2281701961 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [112,97,116,104]), []);
                var typ_2281701962 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [116,121,112,101]), []);
                var url_2281701963 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [117,114,108]), []);
                var sha_2281701964 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2281701956, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2281701947.pathToSha, HEX2F_1426063446(basePath_2281701948, path_2281701961), sha_2281701964);
                switch (toJSStr(typ_2281701962)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2281701961, NTI33554449);
                  result_2281701950.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872363 = addInt(i_536872363, 1);
              if (!(((colontmp__536872362).length == L_536872364))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2281701950;

}

function mustRehash_2281702804(t_2281702806) {
  var result_2281702807 = false;

    if (!((t_2281702806.counter < (t_2281702806.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2281702807 = ((mulInt((t_2281702806.data).length, 2) < mulInt(t_2281702806.counter, 3)) || (subInt((t_2281702806.data).length, t_2281702806.counter) < 4));

  return result_2281702807;

}

function rawInsert_2281703253(t_2281703257, data_2281703258, data_2281703258_Idx, key_2281703259, val_2281703260, hc_2281703261, h_2281703262) {
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field1 = nimCopy(null, key_2281703259, NTI33554449);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2 = nimCopy(data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field2, val_2281703260, NTI2214592517);
    data_2281703258[data_2281703258_Idx][chckIndx(h_2281703262, 0, (data_2281703258[data_2281703258_Idx]).length - 1)].Field0 = hc_2281703261;

  
}

function enlarge_2281702959(t_2281702962) {
    var n_2281702965 = [];
    n_2281702965 = new Array(chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2281702962.data).length, 2), 0, 2147483647) ; ++i) { n_2281702965[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2281702962.data; t_2281702962.data = n_2281702965; n_2281702965 = Temporary1;    Label2: {
      var i_2281703029 = 0;
      var colontmp__536872368 = 0;
      colontmp__536872368 = (n_2281702965).length - 1;
      var res_536872369 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872369 <= colontmp__536872368)) break Label4;
            i_2281703029 = res_536872369;
            var eh_2281703083 = n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field0;
            if (isFilled_1308622880(eh_2281703083)) {
            var j_2281703087 = (eh_2281703083 & (t_2281702962.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2281702962.data[chckIndx(j_2281703087, 0, (t_2281702962.data).length - 1)].Field0)) break Label6;
                  j_2281703087 = nextTry_1308622883(j_2281703087, (t_2281702962.data).length - 1);
                }
            };
            rawInsert_2281703253(t_2281702962, t_2281702962, "data", n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field1, n_2281702965[chckIndx(i_2281703029, 0, (n_2281702965).length - 1)].Field2, eh_2281703083, j_2281703087);
            }
            
            res_536872369 = addInt(res_536872369, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2281703422(t_2281703425, key_2281703426, hc_2281703427) {
  var result_2281703428 = 0;

  BeforeRet: {
    if (((t_2281703425.data).length == 0)) {
    result_2281703428 = -1;
    break BeforeRet;
    }
    
    var h_2281703479 = (hc_2281703427 & (t_2281703425.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0)) break Label2;
          if (((t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field0 == hc_2281703427) && eqStrings(t_2281703425.data[chckIndx(h_2281703479, 0, (t_2281703425.data).length - 1)].Field1, key_2281703426))) {
          result_2281703428 = h_2281703479;
          break BeforeRet;
          }
          
          h_2281703479 = nextTry_1308622883(h_2281703479, (t_2281703425.data).length - 1);
        }
    };
    result_2281703428 = subInt(-1, h_2281703479);
  };

  return result_2281703428;

}

function HEX5BHEX5DHEX3D_2281702631(t_2281702634, key_2281702635, val_2281702636) {
    if (((t_2281702634.data).length == 0)) {
    var correctSizeHEX60gensym22_2281702685 = slotsNeeded_1308622891(32);
    t_2281702634.counter = 0;
    t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2281702685, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2281702690 = [0];
    var index_2281702697 = rawGet_2281702091(t_2281702634, key_2281702635, hc_2281702690, 0);
    if ((0 <= index_2281702697)) {
    t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2 = nimCopy(t_2281702634.data[chckIndx(index_2281702697, 0, (t_2281702634.data).length - 1)].Field2, val_2281702636, NTI2214592517);
    }
    else {
      if (((t_2281702634.data).length == 0)) {
      var correctSizeHEX60gensym25_2281702799 = slotsNeeded_1308622891(32);
      t_2281702634.counter = 0;
      t_2281702634.data = new Array(chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2281702799, 0, 2147483647) ; ++i) { t_2281702634.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2281702804(t_2281702634)) {
      enlarge_2281702959(t_2281702634);
      index_2281702697 = rawGetKnownHC_2281703422(t_2281702634, key_2281702635, hc_2281702690[0]);
      }
      
      index_2281702697 = subInt(-1, index_2281702697);
      rawInsert_2281703253(t_2281702634, t_2281702634, "data", key_2281702635, val_2281702636, hc_2281702690[0], index_2281702697);
      t_2281702634.counter = addInt(t_2281702634.counter, 1);
    }
    

  
}
async function getDirectoryListing_2281702022(self_2281702023, relativePath_2281702024) {
    var Temporary1;
    var Temporary2;

  var result_2281702026 = null;

  BeforeRet: {
    if (contains_2281702078(self_2281702023.cachedDirectoryListings, relativePath_2281702024)) {
    result_2281702026 = HEX5BHEX5D_2281702382(self_2281702023.cachedDirectoryListings, relativePath_2281702024);
    break BeforeRet;
    }
    
    var fmtRes_2281702468 = [mnewString(0)];
    fmtRes_2281702468[0].push.apply(fmtRes_2281702468[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2281702468, 0, self_2281702023.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2281702468[0], NTI33554449)]);
    var token_2281702469 = getAccessToken_2281701406();
    if ((((relativePath_2281702024).length == 0) || eqStrings(relativePath_2281702024, [46]))) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2281702023.branchOrHash || []);
    }
    else {
    if (contains_2382364741(self_2281702023.pathToSha, relativePath_2281702024)) {
    Temporary1 = (self_2281702023.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2281702023.pathToSha, relativePath_2281702024), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2281702579 = [mnewString(0)];
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2281702579, 0, relativePath_2281702024, []);
      fmtRes_2281702579[0].push.apply(fmtRes_2281702579[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281702579[0], NTI33554449)]);
      result_2281702026 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2281702583 = nimCopy(null, Temporary1, NTI33554449);
    var response_2281702588 = (await httpGet_2348810256(url_2281702583, token_2281702469));
++excHandler;
    try {
    var jsn_2281702589 = parseJson_1627395313(response_2281702588);
    var listing_2281702590 = parseDirectoryListing_2281701946(self_2281702023, relativePath_2281702024, jsn_2281702589);
    HEX5BHEX5DHEX3D_2281702631(self_2281702023.cachedDirectoryListings, relativePath_2281702024, listing_2281702590);
    result_2281702026 = listing_2281702590;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2281703667 = [mnewString(0)];
    fmtRes_2281703667[0].push.apply(fmtRes_2281703667[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2281703667, 0, response_2281702588, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2281703667[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2281702026 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2281702026;

}
async function getDirectoryListing_2264924250(self_2264924251, relativePath_2264924252) {
  var result_2264924254 = null;

  return result_2264924254;

}

function getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557) {
  var result_2214592560 = null;

  return result_2214592560;

}

function getDirectoryListing_2214592561(self_2214592556, relativePath_2214592557) {
  var result_2214592562 = null;

  BeforeRet: {
    chckNilDisp(self_2214592556);
    if (isObj(self_2214592556.m_type, NTI2399141893)) {
    result_2214592562 = getDirectoryListing_2399142497(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2281701380)) {
    result_2214592562 = getDirectoryListing_2281702022(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2264924164)) {
    result_2214592562 = getDirectoryListing_2264924250(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    else {
    if (isObj(self_2214592556.m_type, NTI2214592520)) {
    result_2214592562 = getDirectoryListing_2214592555(self_2214592556, relativePath_2214592557);
    break BeforeRet;
    }
    }}}
  };

  return result_2214592562;

}

function loadFile_2382364680(self_2382364681, path_2382364682) {
  var result_2382364683 = [];

  BeforeRet: {
    result_2382364683 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2382364682))), NTI33554449);
    break BeforeRet;
  };

  return result_2382364683;

}

function loadFile_2365587459(self_2365587460, path_2365587461) {
  var result_2365587462 = [];

  return result_2365587462;

}

function loadFile_2365587463(self_2365587460, path_2365587461) {
  var result_2365587464 = [];

  BeforeRet: {
    chckNilDisp(self_2365587460);
    if (isObj(self_2365587460.m_type, NTI2382364676)) {
    result_2365587464 = loadFile_2382364680(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2365587460.m_type, NTI2365587460)) {
    result_2365587464 = loadFile_2365587459(self_2365587460, path_2365587461);
    break BeforeRet;
    }
    }
  };

  return result_2365587464;

}

function saveFile_2382364684(self_2382364685, path_2382364686, content_2382364687) {
  
}

function saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468) {
  
}

function saveFile_2365587469(self_2365587466, path_2365587467, content_2365587468) {
    chckNilDisp(self_2365587466);
    if (isObj(self_2365587466.m_type, NTI2382364676)) {
    saveFile_2382364684(self_2365587466, path_2365587467, content_2365587468);
    }
    else {
    if (isObj(self_2365587466.m_type, NTI2365587460)) {
    saveFile_2365587465(self_2365587466, path_2365587467, content_2365587468);
    }
    }

  
}

function saveApplicationFile_2382364856(self_2382364857, name_2382364858, content_2382364859) {
    window.localStorage.setItem(toJSStr(name_2382364858), toJSStr(content_2382364859));

  
}

function saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479) {
  
}

function saveApplicationFile_2365587480(self_2365587477, name_2365587478, content_2365587479) {
    chckNilDisp(self_2365587477);
    if (isObj(self_2365587477.m_type, NTI2382364676)) {
    saveApplicationFile_2382364856(self_2365587477, name_2365587478, content_2365587479);
    }
    else {
    if (isObj(self_2365587477.m_type, NTI2365587460)) {
    saveApplicationFile_2365587476(self_2365587477, name_2365587478, content_2365587479);
    }
    }

  
}
async function updateWorkspaceName_2399142357(self_2399142358) {
  var result_2399142360 = null;

  BeforeRet: {
    var url_2399142366 = (self_2399142358.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2399142371 = (await httpGet_2348810256(url_2399142366, none_2348810263()));
    var fmtRes_2399142376 = [mnewString(0)];
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2399142376, 0, self_2399142358.baseUrl, []);
    fmtRes_2399142376[0].push.apply(fmtRes_2399142376[0], [47]);;
    formatValue_721420459(fmtRes_2399142376, 0, localFolder_2399142371, []);
    self_2399142358.name = nimCopy(null, fmtRes_2399142376[0], NTI33554449);
    result_2399142360 = undefined;
    break BeforeRet;
  };

  return result_2399142360;

}
async function updateWorkspaceName_2399142377(self_2399142358) {
  var result_2399142378 = null;

  BeforeRet: {
    result_2399142378 = updateWorkspaceName_2399142357(self_2399142358);
    break BeforeRet;
  };

  return result_2399142378;

}

function HEX24_2969571551(document_2969571552) {
  var result_2969571553 = [];

  BeforeRet: {
    result_2969571553 = nimCopy(null, document_2969571552.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2969571553;

}

function HEX24_2818579226(document_2818579227) {
  var result_2818579228 = [];

  BeforeRet: {
    result_2818579228 = nimCopy(null, document_2818579227.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818579228;

}

function HEX24_2197815307(document_2197815308) {
  var result_2197815309 = [];

  BeforeRet: {
    result_2197815309 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2197815309;

}

function HEX24_2197815310(document_2197815308) {
  var result_2197815311 = [];

  BeforeRet: {
    chckNilDisp(document_2197815308);
    if (isObj(document_2197815308.m_type, NTI2969568612)) {
    result_2197815311 = HEX24_2969571551(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2818572427)) {
    result_2197815311 = HEX24_2818579226(document_2197815308);
    break BeforeRet;
    }
    else {
    if (isObj(document_2197815308.m_type, NTI2197815300)) {
    result_2197815311 = HEX24_2197815307(document_2197815308);
    break BeforeRet;
    }
    }}
  };

  return result_2197815311;

}

function toJson_3003123902(kind_3003123903, opt_3003123904) {
  var result_3003123905 = null;

  BeforeRet: {
    result_3003123905 = newJString_1627389994(reprEnum(kind_3003123903, NTI3003121667));
    break BeforeRet;
  };

  return result_3003123905;

}

function toJson_2046820654(id_2046820655, opt_2046820656) {
  var result_2046820657 = null;

  BeforeRet: {
    result_2046820657 = newJString_1627389994(HEX24_2046820617(id_2046820655));
    break BeforeRet;
  };

  return result_2046820657;

}

function join_3003123944(a_3003123946, sep_3003123947) {
  var result_3003123948 = [];

    result_3003123948 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3003123963 = 0;
      var x_3003123964 = 0;
      var i_536872378 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872378 < (a_3003123946).length)) break Label3;
            i_3003123963 = i_536872378;
            x_3003123964 = a_3003123946[chckIndx(i_536872378, 0, (a_3003123946).length - 1)];
            if ((0 < i_3003123963)) {
            result_3003123948.push.apply(result_3003123948, sep_3003123947);;
            }
            
            result_3003123948.push.apply(result_3003123948, HEX24_369098760(x_3003123964));;
            i_536872378 = addInt(i_536872378, 1);
          }
      };
    };

  return result_3003123948;

}

function toJson_3003123936(node_3003123937, opt_3003123938) {
  var result_3003123939 = null;

    result_3003123939 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [107,105,110,100], toJson_3003123902(node_3003123937.kind, opt_3003123938));
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [105,100], toJson_2046820654(node_3003123937.id, opt_3003123938));
    if (!(HEX3DHEX3D_2046820626(node_3003123937.reff, null_2046820646))) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [114,101,102,102], toJson_2046820654(node_3003123937.reff, opt_3003123938));
    }
    
    if ((0 < (node_3003123937.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [116,101,120,116], toJson_1811939932(node_3003123937.text, opt_3003123938));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [112,97,116,104], newJString_1627389994(join_3003123944(path_3003123619(node_3003123937), [44,32])));
    if ((0 < len_3003121752(node_3003123937))) {
    var children_3003123965 = newJArray_1627390082();
    Label1: {
      var child_3003123969 = null;
      var i_536872373 = 0;
      var L_536872374 = (node_3003123937.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872373 < L_536872374)) break Label3;
            child_3003123969 = node_3003123937.children[chckIndx(i_536872373, 0, (node_3003123937.children).length - 1)];
            add_1627390190(children_3003123965, toJson_3003123936(child_3003123969, opt_3003123938));
            i_536872373 = addInt(i_536872373, 1);
            if (!(((node_3003123937.children).length == L_536872374))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_3003123939, [99,104,105,108,100,114,101,110], children_3003123965);
    }
    

  return result_3003123939;

}

function get_2818579261(self_2818579263) {
  var result_2818579264 = null;

    if (isNone_2818579269(self_2818579263)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818579264 = self_2818579263["val"];

  return result_2818579264;

}

function saveHtml_2969571577(self_2969571578) {
  
}

function save_2969571579(self_2969571580, filename_2969571581, app_2969571582) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2969571581).length)) {
    Temporary1 = filename_2969571581;
    }
    else {
    Temporary1 = self_2969571580.filename;
    }
    
    self_2969571580.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2969571580.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2969571588 = [mnewString(0)];
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571588, 0, self_2969571580.filename, []);
    fmtRes_2969571588[0].push.apply(fmtRes_2969571588[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571588[0], NTI33554449)]);
    var serialized_2969571589 = toJson_3003123936(self_2969571580.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym79_2969571592 = nimCopy(null, self_2969571580.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym79_2969571592)) Temporary2 = false; else {        var ws_2969571615 = get_2818579261(oHEX60gensym79_2969571592);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2969571615, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    if (self_2969571580.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2969571580.filename, pretty_1627394477(serialized_2969571589, 2));
    }
    }
    saveHtml_2969571577(self_2969571580);

  
}

function save_2818579229(self_2818579230, filename_2818579231, app_2818579232) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579231).length)) {
    Temporary1 = filename_2818579231;
    }
    else {
    Temporary1 = self_2818579230.filename;
    }
    
    self_2818579230.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818579230.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579230.appFile = app_2818579232;
      var oHEX60gensym103_2818579236 = nimCopy(null, self_2818579230.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym103_2818579236)) Temporary2 = false; else {        var ws_2818579287 = get_2818579261(oHEX60gensym103_2818579236);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2214592553(ws_2818579287, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    if (self_2818579230.appFile) {
    saveApplicationFile_2365587480(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    else {
    saveFile_2365587469(fs_2365587509, self_2818579230.filename, contentString_2818574088(self_2818579230));
    }
    }

  
}

function save_2197815312(self_2197815313, filename_2197815314, app_2197815315) {
  
}

function save_2197815316(self_2197815313, filename_2197815314, app_2197815315) {
    chckNilDisp(self_2197815313);
    if (isObj(self_2197815313.m_type, NTI2969568612)) {
    save_2969571579(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2818572427)) {
    save_2818579229(self_2197815313, filename_2197815314, app_2197815315);
    }
    else {
    if (isObj(self_2197815313.m_type, NTI2197815300)) {
    save_2197815312(self_2197815313, filename_2197815314, app_2197815315);
    }
    }}

  
}

function parseEnum_3003123912(s_3003123914, default_3003123915) {
    var Temporary1;

  var result_3003123916 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3003123914))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_3003123915;
      break;
    }
    result_3003123916 = Temporary1;

  return result_3003123916;

}

function fromJsonHook_3003123909(t_3003123910, t_3003123910_Idx, jsonNode_3003123911) {
    var Temporary1;

    var Temporary1 = jsonNode_3003123911;
    if (ConstSet320[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_3003123910[t_3003123910_Idx] = parseEnum_3003123912(Temporary1.str, 0);

  
}

function fromJson_3003123980(a_3003123982, a_3003123982_Idx, b_3003123983, opt_3003123984) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003123983, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_3003123983}));
    }
    
    fromJsonHook_3003123909(a_3003123982, a_3003123982_Idx, b_3003123983);

  
}

function jsonTo_3003123974(b_3003123976, opt_3003123978) {
  var result_3003123979 = [0];

    fromJson_3003123980(result_3003123979, 0, b_3003123976, opt_3003123978);

  return result_3003123979[0];

}

function fromJsonHook_2046820647(id_2046820648, json_2046820649) {
    var Temporary1;

    if ((json_2046820649.kind == 4)) {
    var Temporary1 = json_2046820649;
    if (ConstSet321[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820648 = nimCopy(id_2046820648, parseId_2046820640(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820648 = nimCopy(id_2046820648, null_2046820646, NTI2046820355);
    }
    

  
}

function fromJson_3003123997(a_3003123999, b_3003124000, opt_3003124001) {
    if (!(!(HEX3DHEX3D_1627392026(b_3003124000, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_3003124000}));
    }
    
    fromJsonHook_2046820647(a_3003123999, b_3003124000);

  
}

function jsonTo_3003123991(b_3003123993, opt_3003123995) {
  var result_3003123996 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_3003123997(result_3003123996[0], b_3003123993, opt_3003123995);

  return result_3003123996[0];

}

function jsonToAstNode_3003123970(json_3003123971, opt_3003123972) {
        var Temporary3;

  var result_3003123973 = null;

    result_3003123973 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_3003123973.kind = jsonTo_3003123974(HEX5BHEX5D_1627393037(json_3003123971, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_3003123973.id = nimCopy(result_3003123973.id, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_3003123971, [114,101,102,102])) {
    result_3003123973.reff = nimCopy(result_3003123973.reff, jsonTo_3003123991(HEX5BHEX5D_1627393037(json_3003123971, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_3003123971, [116,101,120,116])) {
    result_3003123973.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_3003123971, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_3003123971, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_3003124018 = null;
      var colontmp__536872388 = null;
      colontmp__536872388 = HEX5BHEX5D_1627393037(json_3003123971, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872388.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872388.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872390 = null;
        var colontmp__536872391 = [];
        var Temporary3 = colontmp__536872388;
        if (ConstSet322[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872391 = Temporary3.elems;
        var i_536872392 = 0;
        var L_536872393 = (colontmp__536872391).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872392 < L_536872393)) break Label5;
              i_536872390 = colontmp__536872391[chckIndx(i_536872392, 0, (colontmp__536872391).length - 1)];
              child_3003124018 = i_536872390;
              add_3003121702(result_3003123973, jsonToAstNode_3003123970(child_3003124018, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872392 = addInt(i_536872392, 1);
              if (!(((colontmp__536872391).length == L_536872393))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_3003123973;

}

function clear_3019955856(t_3019955859) {
    t_3019955859.clear();

  
}

function clear_3019956016(t_3019956019) {
    t_3019956019.clear();

  
}

function clear_3019956098(t_3019956101) {
    t_3019956101.clear();

  
}

function clear_3019956180(t_3019956183) {
    t_3019956183.clear();

  
}

function clear_3019956262(t_3019956265) {
    t_3019956265.clear();

  
}

function clear_3019956344(t_3019956347) {
    t_3019956347.clear();

  
}

function clear_3019956426(t_3019956429) {
    t_3019956429.clear();

  
}

function clear_3019956508(t_3019956511) {
    t_3019956511.clear();

  
}

function clear_3019956590(t_3019956593) {
    t_3019956593.clear();

  
}

function clear_3019956672(t_3019956675) {
    t_3019956675.clear();

  
}

function clear_3019956754(t_3019956757) {
    t_3019956757.clear();

  
}

function clear_3019956836(t_3019956839) {
    t_3019956839.clear();

  
}

function clear_3019956918(t_3019956921) {
    t_3019956921.clear();

  
}

function clear_3019957000(t_3019957003) {
    t_3019957003.clear();

  
}

function clear_3019957082(t_3019957085) {
    t_3019957085.clear();

  
}

function deleteAllNodesAndSymbols_3019955776(ctx_3019955777) {
    ctx_3019955777.depGraph.revision = addInt(ctx_3019955777.depGraph.revision, 1);
    clear_3019955856(ctx_3019955777.depGraph.changed);
    clear_3019955856(ctx_3019955777.depGraph.verified);
    clear_3019956016(ctx_3019955777.depGraph.fingerprints);
    clear_3019956098(ctx_3019955777.depGraph.dependencies);
    clear_3019956180(ctx_3019955777.itemsAstNode);
    clear_3019956262(ctx_3019955777.itemsSymbol);
    clear_3019956344(ctx_3019955777.itemsNodeLayoutInput);
    clear_3019956426(ctx_3019955777.itemsFunctionExecutionContext);
    clear_3019956508(ctx_3019955777.queryCacheType);
    clear_3019956590(ctx_3019955777.queryCacheValue);
    clear_3019956672(ctx_3019955777.queryCacheSymbolType);
    clear_3019956754(ctx_3019955777.queryCacheSymbolValue);
    clear_3019956836(ctx_3019955777.queryCacheSymbol);
    clear_3019956918(ctx_3019955777.queryCacheSymbols);
    clear_3019957000(ctx_3019955777.queryCacheFunctionExecution);
    clear_3019957082(ctx_3019955777.queryCacheNodeLayout);

  
}

function clear_2969571738(t_2969571741) {
    Label1: {
      var i_2969571809 = 0;
      var colontmp__536872396 = 0;
      colontmp__536872396 = (t_2969571741.data).length;
      var i_536872397 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872397 < colontmp__536872396)) break Label3;
            i_2969571809 = i_536872397;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field0 = 0;
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1 = nimCopy(t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2969571741.data[chckIndx(i_2969571809, 0, (t_2969571741.data).length - 1)].Field2 = null;
            i_536872397 = addInt(i_536872397, 1);
          }
      };
    };
    t_2969571741.counter = 0;

  
}
async function loadAsync_2969571620(self_2969571621) {
      var Temporary2;

  var result_2969571623 = null;

  BeforeRet: {
    var fmtRes_2969571633 = [mnewString(0)];
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969571633, 0, self_2969571621.filename, []);
    fmtRes_2969571633[0].push.apply(fmtRes_2969571633[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571633[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2969571634 = [];
      var oHEX60gensym86_2969571637 = nimCopy(null, self_2969571621.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym86_2969571637)) Temporary2 = false; else {        var ws_2969571660 = get_2818579261(oHEX60gensym86_2969571637);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2969571634 = nimCopy(null, (await loadFile_2214592545(ws_2969571660, self_2969571621.filename)), NTI33554449);
    }
    else {
    if (self_2969571621.appFile) {
    jsonText_2969571634 = nimCopy(null, loadApplicationFile_2365587474(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    else {
      jsonText_2969571634 = nimCopy(null, loadFile_2365587463(fs_2365587509, self_2969571621.filename), NTI33554449);
    }
    }
    var json_2969571665 = parseJson_1627395313(jsonText_2969571634);
    var newAst_2969571666 = jsonToAstNode_3003123970(json_2969571665, {allowExtraKeys: false, allowMissingKeys: false});
    var fmtRes_2969571671 = [mnewString(0)];
    fmtRes_2969571671[0].push.apply(fmtRes_2969571671[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,32,110,101,119,32,97,115,116,32]);;
    formatValue_3087008590(fmtRes_2969571671, 0, newAst_2969571666, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969571671[0], NTI33554449)]);
    deleteAllNodesAndSymbols_3019955776(ctx_2969567289);
    Label3: {
      var symbol_2969571681 = null;
      var L_536872381 = len_3019954306(ctx_2969567289.globalScope);
      Label4: {
        var h_536872383 = 0;
        var colontmp__536872384 = 0;
        colontmp__536872384 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872385 = 0;
        Label5: {
            Label6: while (true) {
            if (!(res_536872385 <= colontmp__536872384)) break Label6;
              h_536872383 = res_536872385;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872383, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969571681 = ctx_2969567289.globalScope.data[chckIndx(h_536872383, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969571681);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872381))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872385 = addInt(res_536872385, 1);
            }
        };
      };
    };
    clear_2969571738(self_2969571621.nodes);
    self_2969571621.rootNode = newAst_2969571666;
    handleNodeInserted_2969571616(self_2969571621, self_2969571621.rootNode);
    if (self_2969571621.undoOps.length < 0) { for (var i = self_2969571621.undoOps.length ; i < 0 ; ++i) self_2969571621.undoOps.push(null); }
               else { self_2969571621.undoOps.length = 0; };
    if (self_2969571621.redoOps.length < 0) { for (var i = self_2969571621.redoOps.length ; i < 0 ; ++i) self_2969571621.redoOps.push(null); }
               else { self_2969571621.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2969572293 = [mnewString(0)];
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2969572293, 0, self_2969571621.filename, []);
    fmtRes_2969572293[0].push.apply(fmtRes_2969572293[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2969572293[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2969571577(self_2969571621);
    result_2969571623 = undefined;
    break BeforeRet;
  };

  return result_2969571623;

}

function load_2969572294(self_2969572295, filename_2969572296) {
    var Temporary1;

    if ((0 < (filename_2969572296).length)) {
    Temporary1 = filename_2969572296;
    }
    else {
    Temporary1 = self_2969572295.filename;
    }
    
    var filename_2969572297 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2969572297).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2969572295.filename = nimCopy(null, filename_2969572297, NTI33554449);
    var _ = loadAsync_2969571620(self_2969572295);

  
}
async function loadAsync_2818579298(self_2818579299, ws_2818579300) {
  var result_2818579302 = null;

  BeforeRet: {
    contentHEX3D_2818573948(self_2818579299, (await loadFile_2214592545(ws_2818579300, self_2818579299.filename)));
    result_2818579302 = undefined;
    break BeforeRet;
  };

  return result_2818579302;

}

function load_2818579312(self_2818579313, filename_2818579314) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2818579314).length)) {
    Temporary1 = filename_2818579314;
    }
    else {
    Temporary1 = self_2818579313.filename;
    }
    
    var filename_2818579315 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818579315).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818579313.filename = nimCopy(null, filename_2818579315, NTI33554449);
      var oHEX60gensym112_2818579319 = nimCopy(null, self_2818579313.workspace, NTI2197815306);
      if (!isSome_2818579241(oHEX60gensym112_2818579319)) Temporary2 = false; else {        var ws_2818579342 = get_2818579261(oHEX60gensym112_2818579319);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2818579298(self_2818579313, ws_2818579342);
    }
    else {
    if (self_2818579313.appFile) {
    contentHEX3D_2818573948(self_2818579313, loadApplicationFile_2365587474(fs_2365587509, self_2818579313.filename));
    }
    else {
    contentHEX3D_2818573948(self_2818579313, loadFile_2365587463(fs_2365587509, self_2818579313.filename));
    }
    }

  
}

function load_2197815317(self_2197815318, filename_2197815319) {
  
}

function load_2197815320(self_2197815318, filename_2197815319) {
    chckNilDisp(self_2197815318);
    if (isObj(self_2197815318.m_type, NTI2969568612)) {
    load_2969572294(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2818572427)) {
    load_2818579312(self_2197815318, filename_2197815319);
    }
    else {
    if (isObj(self_2197815318.m_type, NTI2197815300)) {
    load_2197815317(self_2197815318, filename_2197815319);
    }
    }}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872416 = 0;
      var L_536872417 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872416 < L_536872417)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872416, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872416 = addInt(i_536872416, 1);
            if (!(((a_2919239717).length == L_536872417))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function del_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    var xl_2919239737 = subInt((x_2919239732[x_2919239732_Idx]).length, 1);
    x_2919239732[x_2919239732_Idx][chckIndx(i_2919239733, 0, (x_2919239732[x_2919239732_Idx]).length - 1)] = x_2919239732[x_2919239732_Idx][chckIndx(xl_2919239737, 0, (x_2919239732[x_2919239732_Idx]).length - 1)];
    if (x_2919239732[x_2919239732_Idx].length < chckRange(xl_2919239737, 0, 2147483647)) { for (var i = x_2919239732[x_2919239732_Idx].length ; i < chckRange(xl_2919239737, 0, 2147483647) ; ++i) x_2919239732[x_2919239732_Idx].push(0); }
               else { x_2919239732[x_2919239732_Idx].length = chckRange(xl_2919239737, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872404 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872406 = 0;
        var colontmp__536872407 = 0;
        colontmp__536872407 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872408 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872408 <= colontmp__536872407)) break Label4;
              h_536872406 = res_536872408;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872411 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872406, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872411["Field0"];
              list_2919239713 = colontmp__536872411["Field1"][0]; list_2919239713_Idx = colontmp__536872411["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              del_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872404))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872408 = addInt(res_536872408, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818579148(self_2818579149) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818579149.tsParser == null))) {
    deinit_2885681592(self_2818579149.tsParser);
    self_2818579149.tsParser = null;
    }
    
    if (isSome_2818579157(self_2818579149.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818579177(self_2818579149.languageServer), Temporary1)[0][Temporary1[1]], self_2818579149.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818579177(self_2818579149.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818579149.languageServer = nimCopy(self_2818579149.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818579224(self_2818579225) {
    destroy_2818579148(self_2818579225.document);

  
}

function shutdown_2415919221(self_2415919222) {
  
}

function shutdown_2415919223(self_2415919222) {
    chckNilDisp(self_2415919222);
    if (isObj(self_2415919222.m_type, NTI2818572510)) {
    shutdown_2818579224(self_2415919222);
    }
    else {
    if (isObj(self_2415919222.m_type, NTI2415919108)) {
    shutdown_2415919221(self_2415919222);
    }
    }

  
}

function canEdit_2969575585(self_2969575586, document_2969575587) {
  var result_2969575588 = false;

  BeforeRet: {
    if (isObj(document_2969575587.m_type, NTI2969568612)) {
    result_2969575588 = true;
    break BeforeRet;
    }
    else {
      result_2969575588 = false;
      break BeforeRet;
    }
    
  };

  return result_2969575588;

}

function canEdit_2818580265(self_2818580266, document_2818580267) {
  var result_2818580268 = false;

  BeforeRet: {
    if (isObj(document_2818580267.m_type, NTI2818572427)) {
    result_2818580268 = true;
    break BeforeRet;
    }
    else {
      result_2818580268 = false;
      break BeforeRet;
    }
    
  };

  return result_2818580268;

}

function canEdit_2415919224(self_2415919225, document_2415919226) {
  var result_2415919227 = false;

  BeforeRet: {
    result_2415919227 = false;
    break BeforeRet;
  };

  return result_2415919227;

}

function canEdit_2415919228(self_2415919225, document_2415919226) {
  var result_2415919229 = false;

  BeforeRet: {
    chckNilDisp(self_2415919225);
    if (isObj(self_2415919225.m_type, NTI2969568641)) {
    result_2415919229 = canEdit_2969575585(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2818572510)) {
    result_2415919229 = canEdit_2818580265(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919225.m_type, NTI2415919108)) {
    result_2415919229 = canEdit_2415919224(self_2415919225, document_2415919226);
    break BeforeRet;
    }
    }}
  };

  return result_2415919229;

}

function addQuoted_2969575101(s_2969575103, s_2969575103_Idx, x_2969575104) {
    s_2969575103[s_2969575103_Idx].push.apply(s_2969575103[s_2969575103_Idx], HEX24_3003123671(x_2969575104));;

  
}

function HEX24_2969575090(self_2969575092) {
  var result_2969575093 = [[]];

    if (isSome_3003123546(self_2969575092)) {
    result_2969575093[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2969575101(result_2969575093, 0, self_2969575092.val);
    result_2969575093[0].push.apply(result_2969575093[0], [41]);;
    }
    else {
      result_2969575093[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2969575093[0];

}

function formatValue_2969575023(result_2969575025, result_2969575025_Idx, value_2969575026, specifier_2969575027) {
    formatValue_721420459(result_2969575025, result_2969575025_Idx, HEX24_2969575090(value_2969575026), specifier_2969575027);

  
}

function handleNodeInserted_2969575005(self_2969575006, doc_2969575007, node_2969575008) {
      var Temporary1;
      var Temporary2;

    if (!((doc_2969575007.rootNode == self_2969575006.lastRootNode))) {
    nodeHEX3D_2969570829(self_2969575006, HEX5BHEX5D_3003121748(doc_2969575007.rootNode, 0));
    self_2969575006.lastRootNode = doc_2969575007.rootNode;
    }
    
    var fmtRes_2969575017 = [mnewString(0)];
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008590(fmtRes_2969575017, 0, node_2969575008, []);
    fmtRes_2969575017[0].push.apply(fmtRes_2969575017[0], [44,32]);;
    formatValue_2969575023(fmtRes_2969575017, 0, self_2969575006.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575017[0], NTI33554449)]);
      var oHEX60gensym113_2969575113 = nimCopy(null, self_2969575006.deletedNode, NTI3003121783);
      if (!isSome_3003123546(oHEX60gensym113_2969575113)) Temporary2 = false; else {        var deletedNode_2969575136 = get_3003123566(oHEX60gensym113_2969575113);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2969575136 == node_2969575008);      }    if (Temporary1) {
    self_2969575006.deletedNode = nimCopy(self_2969575006.deletedNode, some_3003121890(cloneAndMapIds_3003123497(node_2969575008)), NTI3003121783);
    var fmtRes_2969575148 = mnewString(0);
    fmtRes_2969575148.push.apply(fmtRes_2969575148, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575148, NTI33554449)]);
    }
    
    markDirty_2415919143(self_2969575006);

  
}

function createWithDocument_2969585169(self_2969585170, document_2969585171) {
    
function HEX3Aanonymous_2969585174(doc_2969585175, node_2969585176) {
        handleNodeInserted_2969575005(editor_2969585173, doc_2969585175, node_2969585176);

      
    }

  var result_2969585172 = null;

  BeforeRet: {
    var editor_2969585173 = {eventHandler: null, document: document_2969585171, textDocument: null, textEditor: null, m_type: NTI2969568641, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), lastRootNode: null, currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, textEditorWidget: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], completionsBaseIndex: 0, completionsScrollOffset: 0.0, scrollToCompletion: ({val: 0, has: false}), lastCompletionsWidget: null, scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2969585173 = createWithPrototype(editor_ast_prototype, editor_2969585173);
    init_2415919138(editor_2969585173);
    editor_2969585173.document.onNodeInserted.push(HEX3Aanonymous_2969585174);;
    editor_2969585173.selectedCompletion = 0;
    editor_2969585173.completions = nimCopy(null, [], NTI3204448274);
    Label1: {
      var tmpHEX60gensym1082_2969585190 = null;
      Label2: {
        var res_2969585196 = null;
        res_2969585196 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2969585196.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      };
    };
    add_3003121702(editor_2969585173.document.rootNode, res_2969585196);
    Label4: {
      var c_2969585209 = null;
      var i_536872422 = 0;
      var L_536872423 = (editor_2969585173.document.rootNode.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872422 < L_536872423)) break Label6;
            c_2969585209 = editor_2969585173.document.rootNode.children[chckIndx(i_536872422, 0, (editor_2969585173.document.rootNode.children).length - 1)];
            handleNodeInserted_2969571616(editor_2969585173.document, c_2969585209);
            i_536872422 = addInt(i_536872422, 1);
            if (!(((editor_2969585173.document.rootNode.children).length == L_536872423))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3019954804(ctx_2969567289, editor_2969585173.document.rootNode);
    nodeHEX3D_2969570829(editor_2969585173, HEX5BHEX5D_3003121748(editor_2969585173.document.rootNode, 0));
    result_2969585172 = editor_2969585173;
    break BeforeRet;
  };

  return result_2969585172;

}

function createWithDocument_2818594085(self_2818594086, document_2818594087) {
    
function HEX3Aanonymous_2818594108(__2818594109) {
        handleTextDocumentTextChanged_2818593991(editor_2818594089);

      
    }

  var result_2818594088 = null;

  BeforeRet: {
    var editor_2818594089 = createTextEditorInstance_2818593993();
    editor_2818594089.document = document_2818594087;
    init_2415919138(editor_2818594089);
    if (((editor_2818594089.document.lines).length == 0)) {
    editor_2818594089.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818594057(editor_2818594089.document.textChanged, HEX3Aanonymous_2818594108);
    result_2818594088 = editor_2818594089;
    break BeforeRet;
  };

  return result_2818594088;

}

function createWithDocument_2415919230(self_2415919231, document_2415919232) {
  var result_2415919233 = null;

  BeforeRet: {
    result_2415919233 = null;
    break BeforeRet;
  };

  return result_2415919233;

}

function createWithDocument_2415919243(self_2415919231, document_2415919232) {
  var result_2415919244 = null;

  BeforeRet: {
    chckNilDisp(self_2415919231);
    if (isObj(self_2415919231.m_type, NTI2969568641)) {
    result_2415919244 = createWithDocument_2969585169(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2818572510)) {
    result_2415919244 = createWithDocument_2818594085(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919231.m_type, NTI2415919108)) {
    result_2415919244 = createWithDocument_2415919230(self_2415919231, document_2415919232);
    break BeforeRet;
    }
    }}
  };

  return result_2415919244;

}

function getEventHandlers_2969575596(self_2969575597) {
  var result_2969575598 = [[]];

    result_2969575598[0].push(self_2969575597.eventHandler);;
    if (!((self_2969575597.modeEventHandler == null))) {
    result_2969575598[0].push(self_2969575597.modeEventHandler);;
    }
    
    if (!((self_2969575597.textEditor == null))) {
    add_2969575614(result_2969575598, 0, getEventHandlers_2415919261(self_2969575597.textEditor));
    result_2969575598[0].push(self_2969575597.textEditEventHandler);;
    }
    

  return result_2969575598[0];

}

function getEventHandlers_2818580276(self_2818580277) {
  var result_2818580278 = [];

    result_2818580278 = nimCopy(null, [self_2818580277.eventHandler], NTI2466250766);
    if (!((self_2818580277.modeEventHandler == null))) {
    result_2818580278.push(self_2818580277.modeEventHandler);;
    }
    
    if (self_2818580277.showCompletions) {
    result_2818580278.push(self_2818580277.completionEventHandler);;
    }
    

  return result_2818580278;

}

function getEventHandlers_2466250757(self_2466250758) {
  var result_2466250759 = [];

  BeforeRet: {
    result_2466250759 = nimCopy(null, [self_2466250758.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2466250759;

}

function getEventHandlers_2415919245(self_2415919246) {
  var result_2415919247 = [];

  BeforeRet: {
    result_2415919247 = nimCopy(null, [], NTI2415919187);
    break BeforeRet;
  };

  return result_2415919247;

}

function getEventHandlers_2415919261(self_2415919246) {
  var result_2415919262 = [];

  BeforeRet: {
    chckNilDisp(self_2415919246);
    if (isObj(self_2415919246.m_type, NTI2969568641)) {
    result_2415919262 = getEventHandlers_2969575596(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2818572510)) {
    result_2415919262 = getEventHandlers_2818580276(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2466250756)) {
    result_2415919262 = getEventHandlers_2466250757(self_2415919246);
    break BeforeRet;
    }
    else {
    if (isObj(self_2415919246.m_type, NTI2415919108)) {
    result_2415919262 = getEventHandlers_2415919245(self_2415919246);
    break BeforeRet;
    }
    }}}
  };

  return result_2415919262;

}

function reset_2969575711(obj_2969575713, obj_2969575713_Idx) {
    obj_2969575713[obj_2969575713_Idx] = null;

  
}

function clear_2969575704(deq_2969575706) {
    Label1: {
      var el_2969575710 = null;
      var el_2969575710_Idx = 0;
      var i_536872433 = deq_2969575706.head;
      Label2: {
        var c_536872435 = 0;
        var i_536872436 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872436 < deq_2969575706.count)) break Label4;
              c_536872435 = i_536872436;
              el_2969575710 = deq_2969575706.data; el_2969575710_Idx = chckIndx(i_536872433, 0, (deq_2969575706.data).length - 1);
              reset_2969575711(el_2969575710, el_2969575710_Idx);
              i_536872433 = (addInt(i_536872433, 1) & deq_2969575706.mask);
              i_536872436 = addInt(i_536872436, 1);
            }
        };
      };
    };
    deq_2969575706.count = 0;
    deq_2969575706.tail = deq_2969575706.head;

  
}

function handleDocumentChanged_2969575641(self_2969575642) {
    var fmtRes_2969575647 = mnewString(0);
    fmtRes_2969575647.push.apply(fmtRes_2969575647, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2969575647, NTI33554449)]);
    clear_2969575704(self_2969575642.selectionHistory);
    clear_2969575704(self_2969575642.selectionFuture);
    finishEdit_2969575577(self_2969575642, false);
    Label1: {
      var symbol_2969575781 = null;
      var L_536872426 = len_3019954306(ctx_2969567289.globalScope);
      Label2: {
        var h_536872428 = 0;
        var colontmp__536872429 = 0;
        colontmp__536872429 = (ctx_2969567289.globalScope.data).length - 1;
        var res_536872430 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872430 <= colontmp__536872429)) break Label4;
              h_536872428 = res_536872430;
              if (isFilled_1308622880(ctx_2969567289.globalScope.data[chckIndx(h_536872428, 0, (ctx_2969567289.globalScope.data).length - 1)].Field0)) {
              symbol_2969575781 = ctx_2969567289.globalScope.data[chckIndx(h_536872428, 0, (ctx_2969567289.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3019907758(ctx_2969567289, symbol_2969575781);
              if (!((len_3019954306(ctx_2969567289.globalScope) == L_536872426))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872430 = addInt(res_536872430, 1);
            }
        };
      };
    };
    nodeHEX3D_2969570829(self_2969575642, HEX5BHEX5D_3003121748(self_2969575642.document.rootNode, 0));
    markDirty_2415919143(self_2969575642);

  
}

function handleDocumentChanged_2818583515(self_2818583516) {
    selectionHEX3D_2818572811(self_2818583516, {Field0: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field0), Field1: clampCursor_2818572708(self_2818583516, selection_2818572805(self_2818583516).Field1)});
    updateSearchResults_2818580294(self_2818583516);

  
}

function handleDocumentChanged_2415919263(self_2415919264) {
  
}

function handleDocumentChanged_2415919265(self_2415919264) {
    chckNilDisp(self_2415919264);
    if (isObj(self_2415919264.m_type, NTI2969568641)) {
    handleDocumentChanged_2969575641(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2818572510)) {
    handleDocumentChanged_2818583515(self_2415919264);
    }
    else {
    if (isObj(self_2415919264.m_type, NTI2415919108)) {
    handleDocumentChanged_2415919263(self_2415919264);
    }
    }}

  
}

function del_1291847224(t_1291847227, key_1291847228) {
    var hc_1291847229 = [0];
    var i_1291847236 = rawGet_1291845908(t_1291847227, key_1291847228, hc_1291847229, 0);
    var mskHEX60gensym36_1291847240 = (t_1291847227.data).length - 1;
    if ((0 <= i_1291847236)) {
    t_1291847227.counter = subInt(t_1291847227.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847247 = i_1291847236;
            var rHEX60gensym36_1291847248 = jHEX60gensym36_1291847247;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field1 = 0;
            t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847236 = (addInt(i_1291847236, 1) & mskHEX60gensym36_1291847240);
                  if (isEmpty_1308622877(t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847248 = (t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)].Field0 & mskHEX60gensym36_1291847240);
                  if (!(((((rHEX60gensym36_1291847248 <= i_1291847236) && (jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248)) || ((jHEX60gensym36_1291847247 < rHEX60gensym36_1291847248) && (i_1291847236 < jHEX60gensym36_1291847247))) || ((i_1291847236 < jHEX60gensym36_1291847247) && (rHEX60gensym36_1291847248 <= i_1291847236))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)] = nimCopy(t_1291847227.data[chckIndx(jHEX60gensym36_1291847247, 0, (t_1291847227.data).length - 1)], t_1291847227.data[chckIndx(i_1291847236, 0, (t_1291847227.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847134(event_1291847136, arg_1291847137) {
    Label1: {
      var h_1291847160 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872442 = 0;
      var L_536872443 = (event_1291847136.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872442 < L_536872443)) break Label3;
            h_1291847160 = event_1291847136.handlers[chckIndx(i_536872442, 0, (event_1291847136.handlers).length - 1)];
            h_1291847160.Field1(arg_1291847137);
            i_536872442 = addInt(i_536872442, 1);
            if (!(((event_1291847136.handlers).length == L_536872443))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847181(self_1291847182, editor_1291847183) {
    del_1291847224(self_1291847182.editors, editor_1291847183.id);
    invoke_1291847134(self_1291847182.onEditorDeregistered, editor_1291847183);

  
}

function unregister_2969585293(self_2969585294) {
    finishEdit_2969575577(self_2969585294, false);
    unregisterEditor_1291847181(self_2969585294.editor, self_2969585294);

  
}

function unregister_2818594439(self_2818594440) {
    unregisterEditor_1291847181(self_2818594440.editor, self_2818594440);

  
}

function unregister_2415919266(self_2415919267) {
  
}

function unregister_2415919268(self_2415919267) {
    chckNilDisp(self_2415919267);
    if (isObj(self_2415919267.m_type, NTI2969568641)) {
    unregister_2969585293(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2818572510)) {
    unregister_2818594439(self_2415919267);
    }
    else {
    if (isObj(self_2415919267.m_type, NTI2415919108)) {
    unregister_2415919266(self_2415919267);
    }
    }}

  
}

function getOption_2818583898(editor_2818583900, path_2818583901, default_2818583902) {
  var result_2818583908 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583900 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
      var nodeHEX60gensym170_2818583921 = HEX7BHEX7D_1627393316(editor_2818583900.options, nsuSplitString(path_2818583901, [46], -1));
      if ((nodeHEX60gensym170_2818583921 == null)) {
      result_2818583908 = default_2818583902;
      break BeforeRet;
      }
      
    };
    result_2818583908 = getFloat_1627390140(nodeHEX60gensym170_2818583921, default_2818583902);
    break BeforeRet;
  };

  return result_2818583908;

}

function handleScroll_2969584860(self_2969584861, scroll_2969584862, mousePosWindow_2969584863) {
    var scrollAmount_2969584873 = (scroll_2969584862.y * getOption_2818583898(self_2969584861.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0));
    if ((!((self_2969584861.lastCompletionsWidget == null)) && contains_2130706614(self_2969584861.lastCompletionsWidget.lastBounds, mousePosWindow_2969584863))) {
    HEX2BHEX3D_855640304(self_2969584861, "completionsScrollOffset", scrollAmount_2969584873);
    markDirty_2415919143(self_2969584861);
    }
    else {
      HEX2BHEX3D_855640304(self_2969584861, "scrollOffset", scrollAmount_2969584873);
      markDirty_2415919143(self_2969584861);
    }
    

  
}

function handleScroll_2818583894(self_2818583895, scroll_2818583896, mousePosWindow_2818583897) {
  BeforeRet: {
    if (self_2818583895.disableScrolling) {
    break BeforeRet;
    }
    
    var scrollAmount_2818583925 = (scroll_2818583896.y * getOption_2818583898(self_2818583895.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0));
    if ((!((self_2818583895.lastCompletionsWidget == null)) && contains_2130706614(self_2818583895.lastCompletionsWidget.lastBounds, mousePosWindow_2818583897))) {
    HEX2BHEX3D_855640304(self_2818583895, "completionsScrollOffset", scrollAmount_2818583925);
    }
    else {
    HEX2BHEX3D_855640304(self_2818583895, "scrollOffset", scrollAmount_2818583925);
    }
    
    markDirty_2415919143(self_2818583895);
  };

  
}

function handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
  
}

function handleScroll_2415919273(self_2415919270, scroll_2415919271, mousePosWindow_2415919272) {
    chckNilDisp(self_2415919270);
    if (isObj(self_2415919270.m_type, NTI2969568641)) {
    handleScroll_2969584860(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2818572510)) {
    handleScroll_2818583894(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    else {
    if (isObj(self_2415919270.m_type, NTI2415919108)) {
    handleScroll_2415919269(self_2415919270, scroll_2415919271, mousePosWindow_2415919272);
    }
    }}

  
}

function HEX2D_2147484180(aHEX60gensym73_2147484182, bHEX60gensym73_2147484183) {
  var result_2147484184 = ({x: 0.0, y: 0.0});

    result_2147484184 = nimCopy(result_2147484184, {x: (aHEX60gensym73_2147484182.x - bHEX60gensym73_2147484183.x), y: (aHEX60gensym73_2147484182.y - bHEX60gensym73_2147484183.y)}, NTI2164261152);

  return result_2147484184;

}

function getItemAtPixelPosition_2969584837(self_2969584838, posWindow_2969584839) {
  var result_2969584841 = ({val: 0, has: false});

  BeforeRet: {
    result_2969584841 = nimCopy(result_2969584841, none_3003121842(), NTI1191183280);
    Label1: {
      var index_2969584852 = 0;
      var widget_2969584853 = null;
      var i_536872448 = 0;
      var L_536872449 = (self_2969584838.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872448 < L_536872449)) break Label3;
            index_2969584852 = self_2969584838.lastItems[chckIndx(i_536872448, 0, (self_2969584838.lastItems).length - 1)]["Field0"];
            widget_2969584853 = self_2969584838.lastItems[chckIndx(i_536872448, 0, (self_2969584838.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(widget_2969584853.lastBounds, posWindow_2969584839) && (0 <= index_2969584852)) && (index_2969584852 <= (self_2969584838.completions).length - 1))) {
            result_2969584841 = nimCopy(result_2969584841, some_1191184367(index_2969584852), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872448 = addInt(i_536872448, 1);
            if (!(((self_2969584838.lastItems).length == L_536872449))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969584841;

}

function getNodeAtPixelPosition_2969578445(self_2969578446, posContent_2969578447) {
                      var Temporary8;

  var result_2969578449 = ({val: null});

  BeforeRet: {
    result_2969578449 = nimCopy(result_2969578449, none_3003121871(), NTI3003121783);
    Label1: {
      var layout_2969578477 = null;
      var offset_2969578478 = ({x: 0.0, y: 0.0});
      var i_536872461 = 0;
      var L_536872462 = (self_2969578446.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872461 < L_536872462)) break Label3;
            layout_2969578477 = self_2969578446.lastLayouts[chckIndx(i_536872461, 0, (self_2969578446.lastLayouts).length - 1)]["Field0"];
            offset_2969578478 = self_2969578446.lastLayouts[chckIndx(i_536872461, 0, (self_2969578446.lastLayouts).length - 1)]["Field1"];
            var bounds_2969578488 = HEX2B_2130706587(bounds_3087009979(layout_2969578477), offset_2969578478);
            var smallestRange_2969578489 = ({parent: null, first: 0, last: 0});
            if (contains_2130706614(bounds_2969578488, posContent_2969578447)) {
            Label4: {
              var __2969578490 = 0;
              var child_2969578491 = null;
              var n_536872453 = layout_2969578477.node;
              var idx_536872454 = -1;
              var i_536872455 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872454 == -1)) {
                    var colontmp__536872458 = nimCopy(null, {Field0: i_536872455, Field1: n_536872453}, NTI3003123002);
                    __2969578490 = colontmp__536872458["Field0"];
                    child_2969578491 = colontmp__536872458["Field1"];
                    if (contains_2969569863(layout_2969578477.nodeToVisualNode, child_2969578491.id)) {
                    var visualNode_2969578637 = nimCopy(null, HEX5BHEX5D_2969569959(layout_2969578477.nodeToVisualNode, child_2969578491.id), NTI3087007774);
                    var bounds_2969578647 = HEX2B_2130706587(absoluteBounds_3087009583(visualNode_2969578637), vec2_2164261725(0.0, offset_2969578478.y));
                    if (contains_2130706614(bounds_2969578647, posContent_2969578447)) {
                    if (((((smallestRange_2969578489.parent == null) || (smallestRange_2969578489.parent.depth < visualNode_2969578637.parent.depth)) || ((visualNode_2969578637.parent.depth == smallestRange_2969578489.parent.depth) && (smallestRange_2969578489.parent.indent < visualNode_2969578637.parent.indent))) || ((visualNode_2969578637.parent.depth == smallestRange_2969578489.parent.depth) && (subInt(visualNode_2969578637.last, visualNode_2969578637.first) < subInt(smallestRange_2969578489.last, smallestRange_2969578489.first))))) {
                    smallestRange_2969578489 = nimCopy(smallestRange_2969578489, visualNode_2969578637, NTI3087007774);
                    result_2969578449 = nimCopy(result_2969578449, some_3003121890(child_2969578491), NTI3003121783);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872454, 1) < len_3003121752(n_536872453))) {
                    n_536872453 = HEX5BHEX5D_3003121748(n_536872453, addInt(idx_536872454, 1));
                    idx_536872454 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872459 = next_3003121857(n_536872453);
                      if (!isSome_3003123546(oHEX60gensym74_536872459)) Temporary8 = false; else {                        var ne_536872460 = get_3003123566(oHEX60gensym74_536872459);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872453 = ne_536872460;
                    idx_536872454 = -1;
                    }
                    else {
                    if ((!((n_536872453.parent == null)) && !((n_536872453.parent == layout_2969578477.node)))) {
                    idx_536872454 = index_3003121772(n_536872453);
                    n_536872453 = n_536872453.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872455 = addInt(i_536872455, 1);
                    }
                  }
              };
            };
            if (isNone_3003123574(result_2969578449)) {
            result_2969578449 = nimCopy(result_2969578449, some_3003121890(layout_2969578477.node), NTI3003121783);
            }
            
            break BeforeRet;
            }
            
            i_536872461 = addInt(i_536872461, 1);
            if (!(((self_2969578446.lastLayouts).length == L_536872462))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2969578449;

}

function handleMousePress_2969584885(self_2969584886, button_2969584887, mousePosWindow_2969584888) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

  BeforeRet: {
    var mousePosContent_2969584933 = HEX2D_2147484180(mousePosWindow_2969584888, xy_2147483680(self_2969584886.lastBounds));
      var oHEX60gensym1074_2969584936 = getItemAtPixelPosition_2969584837(self_2969584886, mousePosWindow_2969584888);
      if (!isSome_1191185117(oHEX60gensym1074_2969584936)) Temporary1 = false; else {        var item_2969584959 = get_1191185211(oHEX60gensym1074_2969584936);
        Temporary1 = true;      }    if (Temporary1) {
    if (((button_2969584887 == 0) || (button_2969584887 == 1))) {
    self_2969584886.selectedCompletion = item_2969584959;
    markDirty_2415919143(self_2969584886);
    }
    
    break BeforeRet;
    }
    
    if ((button_2969584887 == 0)) {
      var oHEX60gensym1075_2969584974 = getItemAtPixelPosition_2969584837(self_2969584886, mousePosWindow_2969584888);
      if (!isSome_1191185117(oHEX60gensym1075_2969584974)) Temporary2 = false; else {        var index_2969584997 = get_1191185211(oHEX60gensym1075_2969584974);
        Temporary2 = true;      }    if (Temporary2) {
    self_2969584886.selectedCompletion = index_2969584997;
    applySelectedCompletion_2969581647(self_2969584886);
    }
    else {
      if (!!(isEditing_2969575151(self_2969584886))) Temporary3 = false; else {        var oHEX60gensym1076_2969585000 = getNodeAtPixelPosition_2969578445(self_2969584886, mousePosContent_2969584933);
        if (!isSome_3003123546(oHEX60gensym1076_2969585000)) Temporary4 = false; else {          var n_2969585023 = get_3003123566(oHEX60gensym1076_2969585000);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    nodeHEX3D_2969570829(self_2969584886, n_2969585023);
    }
    }
    }
    
  };

  
}

function getHoveredCompletion_2818583849(self_2818583850, mousePosWindow_2818583851) {
  var result_2818583852 = 0;

  BeforeRet: {
    Label1: {
      var item_2818583875 = {Field0: 0, Field1: null};
      var i_536872465 = 0;
      var L_536872466 = (self_2818583850.lastCompletionWidgets).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872465 < L_536872466)) break Label3;
            item_2818583875 = self_2818583850.lastCompletionWidgets[chckIndx(i_536872465, 0, (self_2818583850.lastCompletionWidgets).length - 1)];
            if (contains_2130706614(item_2818583875.Field1.lastBounds, mousePosWindow_2818583851)) {
            result_2818583852 = item_2818583875.Field0;
            break BeforeRet;
            }
            
            i_536872465 = addInt(i_536872465, 1);
            if (!(((self_2818583850.lastCompletionWidgets).length == L_536872466))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818583852 = 0;
    break BeforeRet;
  };

  return result_2818583852;

}

function charWidth_3355444417(self_3355444418) {
  var result_3355444419 = 0.0;

    result_3355444419 = self_3355444418.mCharWidth;

  return result_3355444419;

}

function charWidth_2768240796(self_2768240797) {
  var result_2768240798 = 0.0;

  return result_2768240798;

}

function charWidth_2768240799(self_2768240797) {
  var result_2768240800 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240797);
    if (isObj(self_2768240797.m_type, NTI3355443211)) {
    result_2768240800 = charWidth_3355444417(self_2768240797);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240797.m_type, NTI2768240644)) {
    result_2768240800 = charWidth_2768240796(self_2768240797);
    break BeforeRet;
    }
    }
  };

  return result_2768240800;

}

function isThickCursor_2818583612(self_2818583613) {
  var result_2818583614 = false;

  BeforeRet: {
    result_2818583614 = getOption_2818583615(self_2818583613.editor, getContextWithMode_2818583609(self_2818583613, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818583614;

}

function HEX2DHEX3D_2818594211(x_2818594213, x_2818594213_Idx, y_2818594214) {
    x_2818594213[x_2818594213_Idx] = (x_2818594213[x_2818594213_Idx] - y_2818594214);

  
}

function some_2818594225(val_2818594227) {
  var result_2818594232 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818594232.has = true;
    result_2818594232.val = nimCopy(result_2818594232.val, val_2818594227, NTI2818586256);

  return result_2818594232;

}

function none_2818594238() {
  var result_2818594245 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818594245;

}

function getCursorAtPixelPos_2818594138(self_2818594139, mousePosWindow_2818594140) {
  var result_2818594146 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818594191 = HEX2D_2147484180(mousePosWindow_2818594140, xy_2147483680(self_2818594139.lastContentBounds));
    Label1: {
      var li_2818594197 = 0;
      var line_2818594198 = null;
      var i_536872473 = 0;
      var L_536872474 = (self_2818594139.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872473 < L_536872474)) break Label3;
            li_2818594197 = i_536872473;
            line_2818594198 = self_2818594139.lastRenderedLines[chckIndx(i_536872473, 0, (self_2818594139.lastRenderedLines).length - 1)];
            var startOffset_2818594199 = 0;
            Label4: {
              var i_2818594205 = 0;
              var part_2818594206 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872470 = 0;
              var L_536872471 = (line_2818594198.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872470 < L_536872471)) break Label6;
                    i_2818594205 = i_536872470;
                    part_2818594206 = nimCopy(part_2818594206, line_2818594198.parts[chckIndx(i_536872470, 0, (line_2818594198.parts).length - 1)], NTI2818572422);
                    if ((contains_2130706614(part_2818594206.bounds, mousePosContent_2818594191) || ((((i_2818594205 == (line_2818594198.parts).length - 1) && (part_2818594206.bounds.y <= mousePosContent_2818594191.y)) && (mousePosContent_2818594191.y <= (part_2818594206.bounds.y + part_2818594206.bounds.h))) && (part_2818594206.bounds.x <= mousePosContent_2818594191.x)))) {
                    var offsetFromLeft_2818594210 = [((mousePosContent_2818594191.x - part_2818594206.bounds.x) / charWidth_2768240799(self_2818594139.editor.platform))];
                    if (isThickCursor_2818583612(self_2818594139)) {
                    HEX2DHEX3D_2818594211(offsetFromLeft_2818594210, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818594210, 0, 0.5);
                    }
                    
                    var index_2818594224 = clamp_1660945119(((offsetFromLeft_2818594210[0]) | 0), 0, (part_2818594206.text).length);
                    result_2818594146 = nimCopy(result_2818594146, some_2818594225({Field0: line_2818594198.index, Field1: addInt(startOffset_2818594199, index_2818594224)}), NTI2818586210);
                    break BeforeRet;
                    }
                    
                    startOffset_2818594199 = addInt(startOffset_2818594199, (part_2818594206.text).length);
                    i_536872470 = addInt(i_536872470, 1);
                    if (!(((line_2818594198.parts).length == L_536872471))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872473 = addInt(i_536872473, 1);
            if (!(((self_2818594139.lastRenderedLines).length == L_536872474))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818594146 = nimCopy(result_2818594146, none_2818594238(), NTI2818586210);
    break BeforeRet;
  };

  return result_2818594146;

}

function isSome_2818594282(self_2818594284) {
  var result_2818594285 = false;

    result_2818594285 = self_2818594284.has;

  return result_2818594285;

}

function isNone_2818594307(self_2818594309) {
  var result_2818594310 = false;

    result_2818594310 = !(self_2818594309.has);

  return result_2818594310;

}

function get_2818594299(self_2818594301) {
  var result_2818594302 = {Field0: 0, Field1: 0};

    if (isNone_2818594307(self_2818594301)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818594302 = self_2818594301.val;

  return result_2818594302;

}

function handleMousePress_2818594255(self_2818594256, button_2818594257, mousePosWindow_2818594258) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

  BeforeRet: {
    if ((!((self_2818594256.lastCompletionsWidget == null)) && contains_2130706614(self_2818594256.lastCompletionsWidget.lastBounds, mousePosWindow_2818594258))) {
    if (((button_2818594257 == 0) || (button_2818594257 == 1))) {
    self_2818594256.selectedCompletion = getHoveredCompletion_2818583849(self_2818594256, mousePosWindow_2818594258);
    markDirty_2415919143(self_2818594256);
    }
    
    break BeforeRet;
    }
    
      if (!(button_2818594257 == 0)) Temporary1 = false; else {        var oHEX60gensym1040_2818594277 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1040_2818594277)) Temporary2 = false; else {          var cursor_2818594322 = nimCopy(null, get_2818594299(oHEX60gensym1040_2818594277), NTI2449473545);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818594256, toSelection_2449474029(cursor_2818594322));
    }
    
      if (!(button_2818594257 == 3)) Temporary3 = false; else {        var oHEX60gensym1042_2818594329 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1042_2818594329)) Temporary4 = false; else {          var cursor_2818594352 = nimCopy(null, get_2818594299(oHEX60gensym1042_2818594329), NTI2449473545);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818585810(self_2818594256, cursor_2818594352);
    }
    
      if (!(button_2818594257 == 4)) Temporary5 = false; else {        var oHEX60gensym1043_2818594359 = getCursorAtPixelPos_2818594138(self_2818594256, mousePosWindow_2818594258);
        if (!isSome_2818594282(oHEX60gensym1043_2818594359)) Temporary6 = false; else {          var cursor_2818594382 = nimCopy(null, get_2818594299(oHEX60gensym1043_2818594359), NTI2449473545);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585937(self_2818594256, cursor_2818594382.Field0);
    }
    
  };

  
}

function handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
  
}

function handleMousePress_2415919278(self_2415919275, button_2415919276, mousePosWindow_2415919277) {
    chckNilDisp(self_2415919275);
    if (isObj(self_2415919275.m_type, NTI2969568641)) {
    handleMousePress_2969584885(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2818572510)) {
    handleMousePress_2818594255(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    else {
    if (isObj(self_2415919275.m_type, NTI2415919108)) {
    handleMousePress_2415919274(self_2415919275, button_2415919276, mousePosWindow_2415919277);
    }
    }}

  
}

function handleMouseRelease_2969585024(self_2969585025, button_2969585026, mousePosWindow_2969585027) {
      var Temporary1;
        var Temporary2;

      if (!(button_2969585026 == 0)) Temporary1 = false; else {        var oHEX60gensym1077_2969585034 = getItemAtPixelPosition_2969584837(self_2969585025, mousePosWindow_2969585027);
        if (!isSome_1191185117(oHEX60gensym1077_2969585034)) Temporary2 = false; else {          var item_2969585057 = get_1191185211(oHEX60gensym1077_2969585034);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    if ((self_2969585025.selectedCompletion == item_2969585057)) {
    applySelectedCompletion_2969581647(self_2969585025);
    markDirty_2415919143(self_2969585025);
    }
    
    }
    

  
}

function handleMouseRelease_2818594383(self_2818594384, button_2818594385, mousePosWindow_2818594386) {
    if ((((button_2818594385 == 0) && !((self_2818594384.lastCompletionsWidget == null))) && contains_2130706614(self_2818594384.lastCompletionsWidget.lastBounds, mousePosWindow_2818594386))) {
    var oldSelectedCompletion_2818594394 = self_2818594384.selectedCompletion;
    self_2818594384.selectedCompletion = getHoveredCompletion_2818583849(self_2818594384, mousePosWindow_2818594386);
    if ((self_2818594384.selectedCompletion == oldSelectedCompletion_2818594394)) {
    applySelectedCompletion_2818593404(self_2818594384);
    markDirty_2415919143(self_2818594384);
    }
    
    }
    

  
}

function handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
  
}

function handleMouseRelease_2415919283(self_2415919280, button_2415919281, mousePosWindow_2415919282) {
    chckNilDisp(self_2415919280);
    if (isObj(self_2415919280.m_type, NTI2969568641)) {
    handleMouseRelease_2969585024(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2818572510)) {
    handleMouseRelease_2818594383(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    else {
    if (isObj(self_2415919280.m_type, NTI2415919108)) {
    handleMouseRelease_2415919279(self_2415919280, button_2415919281, mousePosWindow_2415919282);
    }
    }}

  
}

function handleMouseMove_2969585058(self_2969585059, mousePosWindow_2969585060, mousePosDelta_2969585061, modifiers_2969585062, buttons_2969585063) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  BeforeRet: {
      var oHEX60gensym1078_2969585066 = getItemAtPixelPosition_2969584837(self_2969585059, mousePosWindow_2969585060);
      if (!isSome_1191185117(oHEX60gensym1078_2969585066)) Temporary1 = false; else {        var item_2969585089 = get_1191185211(oHEX60gensym1078_2969585066);
        Temporary1 = true;      }    if (Temporary1) {
    if ((buttons_2969585063[1] != undefined)) {
    self_2969585059.selectedCompletion = item_2969585089;
    markDirty_2415919143(self_2969585059);
    }
    
    break BeforeRet;
    }
    
    if ((buttons_2969585063[0] != undefined)) {
    var mousePosContent_2969585142 = HEX2D_2147484180(mousePosWindow_2969585060, xy_2147483680(self_2969585059.lastBounds));
      if (!!(isEditing_2969575151(self_2969585059))) Temporary2 = false; else {        var oHEX60gensym1081_2969585145 = getNodeAtPixelPosition_2969578445(self_2969585059, mousePosContent_2969585142);
        if (!isSome_3003123546(oHEX60gensym1081_2969585145)) Temporary3 = false; else {          var n_2969585168 = get_3003123566(oHEX60gensym1081_2969585145);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2969570829(self_2969585059, n_2969585168);
    }
    
    }
    
  };

  
}

function handleMouseMove_2818594395(self_2818594396, mousePosWindow_2818594397, mousePosDelta_2818594398, modifiers_2818594399, buttons_2818594400) {
      var Temporary1;
        var Temporary2;

  BeforeRet: {
    if ((!((self_2818594396.lastCompletionsWidget == null)) && contains_2130706614(self_2818594396.lastCompletionsWidget.lastBounds, mousePosWindow_2818594397))) {
    if ((buttons_2818594400[1] != undefined)) {
    self_2818594396.selectedCompletion = getHoveredCompletion_2818583849(self_2818594396, mousePosWindow_2818594397);
    markDirty_2415919143(self_2818594396);
    }
    
    break BeforeRet;
    }
    
      if (!(buttons_2818594400[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1046_2818594415 = getCursorAtPixelPos_2818594138(self_2818594396, mousePosWindow_2818594397);
        if (!isSome_2818594282(oHEX60gensym1046_2818594415)) Temporary2 = false; else {          var cursor_2818594438 = nimCopy(null, get_2818594299(oHEX60gensym1046_2818594415), NTI2449473545);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572811(self_2818594396, toSelection_2449474032(cursor_2818594438, selection_2818572805(self_2818594396), 3));
    }
    
  };

  
}

function handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
  
}

function handleMouseMove_2415919290(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289) {
    chckNilDisp(self_2415919285);
    if (isObj(self_2415919285.m_type, NTI2969568641)) {
    handleMouseMove_2969585058(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2818572510)) {
    handleMouseMove_2818594395(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    else {
    if (isObj(self_2415919285.m_type, NTI2415919108)) {
    handleMouseMove_2415919284(self_2415919285, mousePosWindow_2415919286, mousePosDelta_2415919287, modifiers_2415919288, buttons_2415919289);
    }
    }}

  
}

function HEX26_3187671358(x_3187671360, y_3187671361) {
  var result_3187671362 = [];

    result_3187671362 = new Array(chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3187671360).length, (y_3187671361).length), 0, 2147483647) ; ++i) { result_3187671362[i] = null; }    Label1: {
      var i_3187671380 = 0;
      var colontmp__536872477 = 0;
      colontmp__536872477 = subInt((x_3187671360).length, 1);
      var res_536872478 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872478 <= colontmp__536872477)) break Label3;
            i_3187671380 = res_536872478;
            result_3187671362[chckIndx(i_3187671380, 0, (result_3187671362).length - 1)] = x_3187671360[chckIndx(i_3187671380, 0, (x_3187671360).length - 1)];
            res_536872478 = addInt(res_536872478, 1);
          }
      };
    };
    Label4: {
      var i_3187671388 = 0;
      var colontmp__536872481 = 0;
      colontmp__536872481 = subInt((y_3187671361).length, 1);
      var res_536872482 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872482 <= colontmp__536872481)) break Label6;
            i_3187671388 = res_536872482;
            result_3187671362[chckIndx(addInt(i_3187671388, (x_3187671360).length), 0, (result_3187671362).length - 1)] = y_3187671361[chckIndx(i_3187671388, 0, (y_3187671361).length - 1)];
            res_536872482 = addInt(res_536872482, 1);
          }
      };
    };

  return result_3187671362;

}

function getEventHandlers_3204448577(self_3204448578) {
  var result_3204448579 = [];

  BeforeRet: {
    result_3204448579 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3204448578.textEditor), [self_3204448578.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3204448579;

}

function getEventHandlers_3187671351(self_3187671352) {
  var result_3187671353 = [];

  BeforeRet: {
    result_3187671353 = nimCopy(null, HEX26_3187671358(getEventHandlers_2415919261(self_3187671352.textEditor), [self_3187671352.eventHandler]), NTI3187671275);
    break BeforeRet;
  };

  return result_3187671353;

}

function getEventHandlers_2483028020(self_2483028021) {
  var result_2483028022 = [];

  BeforeRet: {
    result_2483028022 = nimCopy(null, [self_2483028021.eventHandler], NTI2466250766);
    break BeforeRet;
  };

  return result_2483028022;

}

function getEventHandlers_2483028027(self_2483028021) {
  var result_2483028028 = [];

  BeforeRet: {
    chckNilDisp(self_2483028021);
    if (isObj(self_2483028021.m_type, NTI3204448260)) {
    result_2483028028 = getEventHandlers_3204448577(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI3187671062)) {
    result_2483028028 = getEventHandlers_3187671351(self_2483028021);
    break BeforeRet;
    }
    else {
    if (isObj(self_2483028021.m_type, NTI2483027972)) {
    result_2483028028 = getEventHandlers_2483028020(self_2483028021);
    break BeforeRet;
    }
    }}
  };

  return result_2483028028;

}

function handleScroll_3204448624(self_3204448625, scroll_3204448626, mousePosWindow_3204448627) {
    self_3204448625.selected = clamp_1660945119(subInt(self_3204448625.selected, ((scroll_3204448626.y) | 0)), 0, subInt((self_3204448625.completions).length, 1));

  
}

function handleScroll_3187671844(self_3187671845, scroll_3187671846, mousePosWindow_3187671847) {
    self_3187671845.selected = clamp_1660945119(subInt(self_3187671845.selected, ((scroll_3187671846.y) | 0)), 0, subInt((self_3187671845.completions).length, 1));

  
}

function handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
  
}

function handleScroll_2483028033(self_2483028030, scroll_2483028031, mousePosWindow_2483028032) {
    chckNilDisp(self_2483028030);
    if (isObj(self_2483028030.m_type, NTI3204448260)) {
    handleScroll_3204448624(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI3187671062)) {
    handleScroll_3187671844(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    else {
    if (isObj(self_2483028030.m_type, NTI2483027972)) {
    handleScroll_2483028029(self_2483028030, scroll_2483028031, mousePosWindow_2483028032);
    }
    }}

  
}

function none_3204448528() {
  var result_3204448535 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3204448535;

}

function some_3204448544(val_3204448546) {
  var result_3204448547 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3204448547.has = true;
    result_3204448547.val = nimCopy(result_3204448547.val, val_3204448546, NTI2969568638);

  return result_3204448547;

}

function getItemAtPixelPosition_3204448519(self_3204448520, posWindow_3204448521) {
  var result_3204448527 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3204448527 = nimCopy(result_3204448527, none_3204448528(), NTI3204448400);
    Label1: {
      var index_3204448539 = 0;
      var rect_3204448540 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872486 = 0;
      var L_536872487 = (self_3204448520.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872486 < L_536872487)) break Label3;
            index_3204448539 = self_3204448520.lastItems[chckIndx(i_536872486, 0, (self_3204448520.lastItems).length - 1)]["Field0"];
            rect_3204448540 = self_3204448520.lastItems[chckIndx(i_536872486, 0, (self_3204448520.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3204448540, posWindow_3204448521) && (0 <= index_3204448539)) && (index_3204448539 <= (self_3204448520.completions).length - 1))) {
            result_3204448527 = nimCopy(result_3204448527, some_3204448544(self_3204448520.completions[chckIndx(index_3204448539, 0, (self_3204448520.completions).length - 1)]), NTI3204448400);
            break BeforeRet;
            }
            
            i_536872486 = addInt(i_536872486, 1);
            if (!(((self_3204448520.lastItems).length == L_536872487))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3204448527;

}

function isSome_3204448651(self_3204448653) {
  var result_3204448654 = false;

    result_3204448654 = self_3204448653.has;

  return result_3204448654;

}

function isNone_3204448676(self_3204448678) {
  var result_3204448679 = false;

    result_3204448679 = !(self_3204448678.has);

  return result_3204448679;

}

function get_3204448668(self_3204448670) {
  var result_3204448671 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3204448676(self_3204448670)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448671 = self_3204448670.val;

  return result_3204448671;

}

function handleMousePress_3204448636(self_3204448637, button_3204448638, mousePosWindow_3204448639) {
      var Temporary1;
    var Temporary2;

    if ((button_3204448638 == 0)) {
      var oHEX60gensym5_3204448646 = getItemAtPixelPosition_3204448519(self_3204448637, mousePosWindow_3204448639);
      if (!isSome_3204448651(oHEX60gensym5_3204448646)) Temporary1 = false; else {        var item_3204448691 = nimCopy(null, get_3204448668(oHEX60gensym5_3204448646), NTI2969568638);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3204448691;
    if (ConstSet323[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
    self_3204448637.handleSymbolSelected(Temporary2.id);
    popPopup_1291849115(self_3204448637.editor, self_3204448637);
    }
    
    }
    

  
}

function none_3187671259() {
  var result_3187671265 = ({val: null});

  return result_3187671265;

}

function some_3187671293(val_3187671295) {
  var result_3187671296 = ({val: null});

    if (!(!((val_3187671295 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3187671296.val = val_3187671295;

  return result_3187671296;

}

function getItemAtPixelPosition_3187671251(self_3187671252, posWindow_3187671253) {
  var result_3187671258 = ({val: null});

  BeforeRet: {
    result_3187671258 = nimCopy(result_3187671258, none_3187671259(), NTI3187671186);
    Label1: {
      var index_3187671288 = 0;
      var rect_3187671289 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872490 = 0;
      var L_536872491 = (self_3187671252.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872490 < L_536872491)) break Label3;
            index_3187671288 = self_3187671252.lastItems[chckIndx(i_536872490, 0, (self_3187671252.lastItems).length - 1)]["Field0"];
            rect_3187671289 = self_3187671252.lastItems[chckIndx(i_536872490, 0, (self_3187671252.lastItems).length - 1)]["Field1"];
            if (((contains_2130706614(rect_3187671289, posWindow_3187671253) && (0 <= index_3187671288)) && (index_3187671288 <= (self_3187671252.completions).length - 1))) {
            result_3187671258 = nimCopy(result_3187671258, some_3187671293(self_3187671252.completions[chckIndx(index_3187671288, 0, (self_3187671252.completions).length - 1)]), NTI3187671186);
            break BeforeRet;
            }
            
            i_536872490 = addInt(i_536872490, 1);
            if (!(((self_3187671252.lastItems).length == L_536872491))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3187671258;

}

function isSome_3187671871(self_3187671873) {
  var result_3187671874 = false;

    result_3187671874 = !((self_3187671873.val == null));

  return result_3187671874;

}

function isNone_3187671899(self_3187671901) {
  var result_3187671902 = false;

    result_3187671902 = (self_3187671901.val == null);

  return result_3187671902;

}

function get_3187671891(self_3187671893) {
  var result_3187671894 = null;

    if (isNone_3187671899(self_3187671893)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3187671894 = self_3187671893["val"];

  return result_3187671894;

}

function handleMousePress_3187671856(self_3187671857, button_3187671858, mousePosWindow_3187671859) {
      var Temporary1;

    if ((button_3187671858 == 0)) {
      var oHEX60gensym67_3187671866 = getItemAtPixelPosition_3187671251(self_3187671857, mousePosWindow_3187671859);
      if (!isSome_3187671871(oHEX60gensym67_3187671866)) Temporary1 = false; else {        var item_3187671917 = get_3187671891(oHEX60gensym67_3187671866);
        Temporary1 = true;      }    if (Temporary1) {
    if (!((self_3187671857.handleItemConfirmed == null))) {
    self_3187671857.handleItemConfirmed(item_3187671917);
    }
    
    popPopup_1291849115(self_3187671857.editor, self_3187671857);
    }
    
    }
    

  
}

function handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
  
}

function handleMousePress_2483028038(self_2483028035, button_2483028036, mousePosWindow_2483028037) {
    chckNilDisp(self_2483028035);
    if (isObj(self_2483028035.m_type, NTI3204448260)) {
    handleMousePress_3204448636(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI3187671062)) {
    handleMousePress_3187671856(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    else {
    if (isObj(self_2483028035.m_type, NTI2483027972)) {
    handleMousePress_2483028034(self_2483028035, button_2483028036, mousePosWindow_2483028037);
    }
    }}

  
}

function handleMouseRelease_3204448694(self_3204448695, button_3204448696, mousePosWindow_3204448697) {
  
}

function handleMouseRelease_3187671923(self_3187671924, button_3187671925, mousePosWindow_3187671926) {
  
}

function handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
  
}

function handleMouseRelease_2483028043(self_2483028040, button_2483028041, mousePosWindow_2483028042) {
    chckNilDisp(self_2483028040);
    if (isObj(self_2483028040.m_type, NTI3204448260)) {
    handleMouseRelease_3204448694(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI3187671062)) {
    handleMouseRelease_3187671923(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    else {
    if (isObj(self_2483028040.m_type, NTI2483027972)) {
    handleMouseRelease_2483028039(self_2483028040, button_2483028041, mousePosWindow_2483028042);
    }
    }}

  
}

function handleMouseMove_3204448698(self_3204448699, mousePosWindow_3204448700, mousePosDelta_3204448701, modifiers_3204448702, buttons_3204448703) {
  
}

function handleMouseMove_3187671927(self_3187671928, mousePosWindow_3187671929, mousePosDelta_3187671930, modifiers_3187671931, buttons_3187671932) {
  
}

function handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
  
}

function handleMouseMove_2483028050(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049) {
    chckNilDisp(self_2483028045);
    if (isObj(self_2483028045.m_type, NTI3204448260)) {
    handleMouseMove_3204448698(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI3187671062)) {
    handleMouseMove_3187671927(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    else {
    if (isObj(self_2483028045.m_type, NTI2483027972)) {
    handleMouseMove_2483028044(self_2483028045, mousePosWindow_2483028046, mousePosDelta_2483028047, modifiers_2483028048, buttons_2483028049);
    }
    }}

  
}
async function initAsync_2801795119(self_2801795120) {
  var result_2801795122 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2801795133 = loadApplicationFile_2365587474(fs_2365587509, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795134 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795133 || []);
    rawEcho(contentStrict_2801795134);
    var allowEval_2801795135 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2801795135) {
    var _ = (await loadScriptContent(toJSStr(config_2801795133)));
    }
    else {
      var fmtRes_2801795144 = mnewString(0);
      fmtRes_2801795144.push.apply(fmtRes_2801795144, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795144, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2801795122 = undefined;
    break BeforeRet;
  };

  return result_2801795122;

}

function init_2801795167(self_2801795168, path_2801795169) {
    var _ = initAsync_2801795119(self_2801795168);

  
}

function init_2751463435(self_2751463436, path_2751463437) {
  
}

function init_2751463438(self_2751463436, path_2751463437) {
    chckNilDisp(self_2751463436);
    if (isObj(self_2751463436.m_type, NTI2801795076)) {
    init_2801795167(self_2751463436, path_2751463437);
    }
    else {
    if (isObj(self_2751463436.m_type, NTI2751463428)) {
    init_2751463435(self_2751463436, path_2751463437);
    }
    }

  
}

function reload_2801795170(self_2801795171) {
  
}

function reload_2751463439(self_2751463440) {
  
}

function reload_2751463441(self_2751463440) {
    chckNilDisp(self_2751463440);
    if (isObj(self_2751463440.m_type, NTI2801795076)) {
    reload_2801795170(self_2751463440);
    }
    else {
    if (isObj(self_2751463440.m_type, NTI2751463428)) {
    reload_2751463439(self_2751463440);
    }
    }

  
}

function handleUnknownPopupAction_2801795172(self_2801795173, popup_2801795174, action_2801795175, arg_2801795176) {
  var result_2801795177 = false;

    var action_2801795178 = toJSStr(action_2801795175);
    var arg_2801795179 = toJSStr(HEX24_1627394481(arg_2801795176));
    return window.handleUnknownPopupAction(popup_2801795174, action_2801795178,  JSON.parse(arg_2801795179));

  return result_2801795177;

}

function handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463447 = false;

  return result_2751463447;

}

function handleUnknownPopupAction_2751463448(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446) {
  var result_2751463449 = false;

  BeforeRet: {
    chckNilDisp(self_2751463443);
    if (isObj(self_2751463443.m_type, NTI2801795076)) {
    result_2751463449 = handleUnknownPopupAction_2801795172(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463443.m_type, NTI2751463428)) {
    result_2751463449 = handleUnknownPopupAction_2751463442(self_2751463443, popup_2751463444, action_2751463445, arg_2751463446);
    break BeforeRet;
    }
    }
  };

  return result_2751463449;

}

function handleUnknownDocumentEditorAction_2801795180(self_2801795181, editor_2801795182, action_2801795183, arg_2801795184) {
  var result_2801795185 = false;

    var action_2801795186 = toJSStr(action_2801795183);
    var arg_2801795187 = toJSStr(HEX24_1627394481(arg_2801795184));
    return window.handleUnknownDocumentEditorAction(editor_2801795182, action_2801795186, JSON.parse(arg_2801795187));

  return result_2801795185;

}

function handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463455 = false;

  return result_2751463455;

}

function handleUnknownDocumentEditorAction_2751463456(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454) {
  var result_2751463457 = false;

  BeforeRet: {
    chckNilDisp(self_2751463451);
    if (isObj(self_2751463451.m_type, NTI2801795076)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2801795180(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463451.m_type, NTI2751463428)) {
    result_2751463457 = handleUnknownDocumentEditorAction_2751463450(self_2751463451, editor_2751463452, action_2751463453, arg_2751463454);
    break BeforeRet;
    }
    }
  };

  return result_2751463457;

}

function handleGlobalAction_2801795188(self_2801795189, action_2801795190, arg_2801795191) {
  var result_2801795192 = false;

    var action_2801795193 = toJSStr(action_2801795190);
    var arg_2801795194 = toJSStr(HEX24_1627394481(arg_2801795191));
    return window.handleGlobalAction(action_2801795193, JSON.parse(arg_2801795194));

  return result_2801795192;

}

function handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463462 = false;

  return result_2751463462;

}

function handleGlobalAction_2751463463(self_2751463459, action_2751463460, arg_2751463461) {
  var result_2751463464 = false;

  BeforeRet: {
    chckNilDisp(self_2751463459);
    if (isObj(self_2751463459.m_type, NTI2801795076)) {
    result_2751463464 = handleGlobalAction_2801795188(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    else {
    if (isObj(self_2751463459.m_type, NTI2751463428)) {
    result_2751463464 = handleGlobalAction_2751463458(self_2751463459, action_2751463460, arg_2751463461);
    break BeforeRet;
    }
    }
  };

  return result_2751463464;

}

function calculateBounds_2785018368(self_2785018369, container_2785018370) {
  var result_2785018371 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2785018372 = ((container_2785018370.x + (self_2785018369.anchor.Field0.x * container_2785018370.w)) + self_2785018369.left);
    var top_2785018373 = ((container_2785018370.y + (self_2785018369.anchor.Field0.y * container_2785018370.h)) + self_2785018369.top);
    var right_2785018374 = ((container_2785018370.x + (self_2785018369.anchor.Field1.x * container_2785018370.w)) + self_2785018369.right);
    var bottom_2785018375 = ((container_2785018370.y + (self_2785018369.anchor.Field1.y * container_2785018370.h)) + self_2785018369.bottom);
    var px_2785018376 = (self_2785018369.pivot.x * (right_2785018374 - left_2785018372));
    var py_2785018377 = (self_2785018369.pivot.y * (bottom_2785018375 - top_2785018373));
    result_2785018371.x = (left_2785018372 - px_2785018376);
    result_2785018371.y = (top_2785018373 - py_2785018377);
    result_2785018371.w = (right_2785018374 - left_2785018372);
    result_2785018371.h = (bottom_2785018375 - top_2785018373);

  return result_2785018371;

}

function formatValue_2785018106(result_2785018108, result_2785018108_Idx, value_2785018109, specifier_2785018110) {
    formatValue_721420459(result_2785018108, result_2785018108_Idx, HEX24_2147483713(value_2785018109), specifier_2785018110);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872499 = 0;
      colontmp__536872499 = subInt((s_855638110).length, 1);
      var res_536872500 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872500 <= colontmp__536872499)) break Label3;
            iHEX60gensym7_855638117 = res_536872500;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872500 = addInt(res_536872500, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2164261788(aHEX60gensym45_2164261789) {
  var result_2164261790 = [];

    result_2164261790 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2164261794(aHEX60gensym45_2164261789.x) || [],[44,32] || [],HEX24_2164261794(aHEX60gensym45_2164261789.y) || [],[41] || []), NTI33554449);

  return result_2164261790;

}

function addQuoted_2785018076(s_2785018078, s_2785018078_Idx, x_2785018079) {
    s_2785018078[s_2785018078_Idx].push.apply(s_2785018078[s_2785018078_Idx], HEX24_2164261788(x_2785018079));;

  
}

function HEX24_2785018044(x_2785018046) {
  var result_2785018047 = [[]];

    result_2785018047[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym6_2785018058 = 0;
    if ((0 < countHEX60gensym6_2785018058)) {
    result_2785018047[0].push.apply(result_2785018047[0], [44,32]);;
    }
    
    result_2785018047[0].push.apply(result_2785018047[0], [109,105,110]);;
    result_2785018047[0].push.apply(result_2785018047[0], [58,32]);;
    countHEX60gensym6_2785018058 += 1;
    addQuoted_2785018076(result_2785018047, 0, x_2785018046["Field0"]);
    if ((0 < countHEX60gensym6_2785018058)) {
    result_2785018047[0].push.apply(result_2785018047[0], [44,32]);;
    }
    
    result_2785018047[0].push.apply(result_2785018047[0], [109,97,120]);;
    result_2785018047[0].push.apply(result_2785018047[0], [58,32]);;
    countHEX60gensym6_2785018058 += 1;
    addQuoted_2785018076(result_2785018047, 0, x_2785018046["Field1"]);
    result_2785018047[0].push.apply(result_2785018047[0], [41]);;

  return result_2785018047[0];

}

function formatValue_2785018039(result_2785018041, result_2785018041_Idx, value_2785018042, specifier_2785018043) {
    formatValue_721420459(result_2785018041, result_2785018041_Idx, HEX24_2785018044(value_2785018042), specifier_2785018043);

  
}

function formatValue_2785018405(result_2785018407, result_2785018407_Idx, value_2785018408, specifier_2785018409) {
    formatValue_721420459(result_2785018407, result_2785018407_Idx, HEX24_2164261788(value_2785018408), specifier_2785018409);

  
}

function layoutWidget_2785018378(self_2785018379, container_2785018380, frameIndex_2785018381, options_2785018382) {
    var newBounds_2785018383 = [calculateBounds_2785018368(self_2785018379, container_2785018380)];
    if (self_2785018379.logLayout) {
    var fmtRes_2785018389 = [mnewString(0)];
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2785018106(fmtRes_2785018389, 0, container_2785018380, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018389, 0, frameIndex_2785018381, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018039(fmtRes_2785018389, 0, self_2785018379.anchor, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018405(fmtRes_2785018389, 0, self_2785018379.pivot, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018389, 0, self_2785018379.left, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44]);;
    formatValue_2785017973(fmtRes_2785018389, 0, self_2785018379.top, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018389, 0, self_2785018379.right, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [44]);;
    formatValue_2785017973(fmtRes_2785018389, 0, self_2785018379.bottom, []);
    fmtRes_2785018389[0].push.apply(fmtRes_2785018389[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018389, 0, newBounds_2785018383[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018389[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018383[0], self_2785018379.lastBounds))) {
    var fmtRes_2785018456 = [mnewString(0)];
    fmtRes_2785018456[0].push.apply(fmtRes_2785018456[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018106(fmtRes_2785018456, 0, self_2785018379.lastBounds, []);
    fmtRes_2785018456[0].push.apply(fmtRes_2785018456[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018456, 0, newBounds_2785018383[0], []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018456[0], NTI33554449)]);
    }
    
    }
    
    if (self_2785018379.sizeToContent) {
    whHEX3D_2147483689(newBounds_2785018383[0], vec2_2164261686());
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018383[0], self_2785018379.lastBounds))) {
    self_2785018379.lastBounds = nimCopy(self_2785018379.lastBounds, newBounds_2785018383[0], NTI2147483653);
    self_2785018379.lastBoundsChange = frameIndex_2785018381;
    }
    
    if (((frameIndex_2785018381 <= self_2785018379.lastHierarchyChange) || (frameIndex_2785018381 <= self_2785018379.lastBoundsChange))) {
    Label1: {
      var i_2785018503 = 0;
      var c_2785018504 = null;
      var i_536872495 = 0;
      var L_536872496 = (self_2785018379.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872495 < L_536872496)) break Label3;
            i_2785018503 = i_536872495;
            c_2785018504 = self_2785018379.children[chckIndx(i_536872495, 0, (self_2785018379.children).length - 1)];
            layoutWidget_2785018363(c_2785018504, newBounds_2785018383[0], frameIndex_2785018381, options_2785018382);
            if (self_2785018379.sizeToContent) {
            newBounds_2785018383[0] = nimCopy(newBounds_2785018383[0], or_2147483728(newBounds_2785018383[0], c_2785018504.lastBounds), NTI2147483653);
            }
            
            i_536872495 = addInt(i_536872495, 1);
            if (!(((self_2785018379.children).length == L_536872496))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018383[0], self_2785018379.lastBounds))) {
    self_2785018379.lastBounds = nimCopy(self_2785018379.lastBounds, newBounds_2785018383[0], NTI2147483653);
    self_2785018379.lastBoundsChange = frameIndex_2785018381;
    }
    

  
}

function height_2785017911(self_2785017912) {
  var result_2785017913 = 0.0;

    result_2785017913 = (self_2785017912.bottom - self_2785017912.top);

  return result_2785017913;

}

function layoutWidget_2785018714(self_2785018715, container_2785018716, frameIndex_2785018717, options_2785018718) {
    var newBounds_2785018719 = calculateBounds_2785018368(self_2785018715, container_2785018716);
    if (self_2785018715.logLayout) {
    var fmtRes_2785018725 = [mnewString(0)];
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2785018106(fmtRes_2785018725, 0, container_2785018716, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018725, 0, frameIndex_2785018717, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018039(fmtRes_2785018725, 0, self_2785018715.anchor, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018405(fmtRes_2785018725, 0, self_2785018715.pivot, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018725, 0, self_2785018715.left, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44]);;
    formatValue_2785017973(fmtRes_2785018725, 0, self_2785018715.top, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018725, 0, self_2785018715.right, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [44]);;
    formatValue_2785017973(fmtRes_2785018725, 0, self_2785018715.bottom, []);
    fmtRes_2785018725[0].push.apply(fmtRes_2785018725[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018725, 0, newBounds_2785018719, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018725[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018719, self_2785018715.lastBounds))) {
    var fmtRes_2785018780 = [mnewString(0)];
    fmtRes_2785018780[0].push.apply(fmtRes_2785018780[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018106(fmtRes_2785018780, 0, self_2785018715.lastBounds, []);
    fmtRes_2785018780[0].push.apply(fmtRes_2785018780[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018780, 0, newBounds_2785018719, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018780[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018719, self_2785018715.lastBounds))) {
    self_2785018715.lastBounds = nimCopy(self_2785018715.lastBounds, newBounds_2785018719, NTI2147483653);
    self_2785018715.lastBoundsChange = frameIndex_2785018717;
    }
    
    if (((frameIndex_2785018717 <= self_2785018715.lastHierarchyChange) || (frameIndex_2785018717 <= self_2785018715.lastBoundsChange))) {
    var lastY_2785018795 = 0.0;
    Label1: {
      var c_2785018799 = null;
      var i_536872503 = 0;
      var L_536872504 = (self_2785018715.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872503 < L_536872504)) break Label3;
            c_2785018799 = self_2785018715.children[chckIndx(i_536872503, 0, (self_2785018715.children).length - 1)];
            var height_2785018800 = height_2785017911(c_2785018799);
            c_2785018799.top = lastY_2785018795;
            c_2785018799.bottom = (lastY_2785018795 + height_2785018800);
            layoutWidget_2785018363(c_2785018799, newBounds_2785018719, frameIndex_2785018717, options_2785018718);
            lastY_2785018795 = ((c_2785018799.lastBounds.y + c_2785018799.lastBounds.h) - newBounds_2785018719.y);
            i_536872503 = addInt(i_536872503, 1);
            if (!(((self_2785018715.children).length == L_536872504))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2785018615() {
  var result_2785018622 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2785018622;

}

function isSome_2785018635(self_2785018637) {
  var result_2785018638 = false;

    result_2785018638 = self_2785018637.has;

  return result_2785018638;

}

function isNone_2785018660(self_2785018662) {
  var result_2785018663 = false;

    result_2785018663 = !(self_2785018662.has);

  return result_2785018663;

}

function get_2785018652(self_2785018654) {
  var result_2785018655 = null;

  BeforeRet: {
    if (isNone_2785018660(self_2785018654)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785018655 = self_2785018654.val;
    break BeforeRet;
  };

  return result_2785018655;

}

function some_2785018697(val_2785018699) {
  var result_2785018700 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2785018700.has = true;
    result_2785018700.val = nimCopy(result_2785018700.val, val_2785018699, NTI2147483653);

  return result_2785018700;

}

function layoutWidget_2785018509(self_2785018510, container_2785018511, frameIndex_2785018512, options_2785018513) {
            var Temporary10;

    var newBounds_2785018514 = calculateBounds_2785018368(self_2785018510, container_2785018511);
    if (self_2785018510.logLayout) {
    var fmtRes_2785018520 = [mnewString(0)];
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2785018106(fmtRes_2785018520, 0, container_2785018511, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018520, 0, frameIndex_2785018512, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018039(fmtRes_2785018520, 0, self_2785018510.anchor, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018405(fmtRes_2785018520, 0, self_2785018510.pivot, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018520, 0, self_2785018510.left, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44]);;
    formatValue_2785017973(fmtRes_2785018520, 0, self_2785018510.top, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018520, 0, self_2785018510.right, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [44]);;
    formatValue_2785017973(fmtRes_2785018520, 0, self_2785018510.bottom, []);
    fmtRes_2785018520[0].push.apply(fmtRes_2785018520[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018520, 0, newBounds_2785018514, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018520[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018514, self_2785018510.lastBounds))) {
    var fmtRes_2785018575 = [mnewString(0)];
    fmtRes_2785018575[0].push.apply(fmtRes_2785018575[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018106(fmtRes_2785018575, 0, self_2785018510.lastBounds, []);
    fmtRes_2785018575[0].push.apply(fmtRes_2785018575[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018575, 0, newBounds_2785018514, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018575[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018514, self_2785018510.lastBounds))) {
    self_2785018510.lastBounds = nimCopy(self_2785018510.lastBounds, newBounds_2785018514, NTI2147483653);
    self_2785018510.lastBoundsChange = frameIndex_2785018512;
    }
    
    if (((frameIndex_2785018512 <= self_2785018510.lastHierarchyChange) || (frameIndex_2785018512 <= self_2785018510.lastBoundsChange))) {
    Label1: {
      var i_2785018595 = 0;
      var c_2785018596 = null;
      var i_536872511 = 0;
      var L_536872512 = (self_2785018510.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872511 < L_536872512)) break Label3;
            i_2785018595 = i_536872511;
            c_2785018596 = self_2785018510.children[chckIndx(i_536872511, 0, (self_2785018510.children).length - 1)];
            var oldBounds_2785018597 = nimCopy(null, c_2785018596.lastBounds, NTI2147483653);
            layoutWidget_2785018363(c_2785018596, newBounds_2785018514, frameIndex_2785018512, options_2785018513);
            var newBounds_2785018598 = nimCopy(null, c_2785018596.lastBounds, NTI2147483653);
            if ((!(HEX3DHEX3D_2785018441(oldBounds_2785018597, newBounds_2785018598)) && !(contains_2130706618(newBounds_2785018598, oldBounds_2785018597)))) {
            var invalidationRect_2785018603 = nimCopy(null, oldBounds_2785018597, NTI2147483653);
            Label4: {
              var k_2785018609 = 0;
              var colontmp__536872508 = 0;
              colontmp__536872508 = subInt(i_2785018595, 1);
              var res_536872509 = colontmp__536872508;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872509)) break Label6;
                    k_2785018609 = res_536872509;
                    invalidate_2785018270(self_2785018510.children[chckIndx(k_2785018609, 0, (self_2785018510.children).length - 1)], frameIndex_2785018512, invalidationRect_2785018603);
                    if (contains_2130706618(self_2785018510.children[chckIndx(k_2785018609, 0, (self_2785018510.children).length - 1)].lastBounds, invalidationRect_2785018603)) {
                    break Label4;
                    }
                    
                    res_536872509 = subInt(res_536872509, 1);
                  }
              };
            };
            }
            
            i_536872511 = addInt(i_536872511, 1);
            if (!(((self_2785018510.children).length == L_536872512))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2785018623 = [none_2785018615()];
    Label7: {
      var i_2785018629 = 0;
      var c_2785018630 = null;
      var i_536872515 = 0;
      var L_536872516 = (self_2785018510.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872515 < L_536872516)) break Label9;
            i_2785018629 = i_536872515;
            c_2785018630 = self_2785018510.children[chckIndx(i_536872515, 0, (self_2785018510.children).length - 1)];
            if (isSome_2785018635(invalidationRect_2785018623[0])) {
            invalidate_2785018270(c_2785018630, frameIndex_2785018512, get_2785018652(invalidationRect_2785018623[0]));
            }
            
            if (isSome_2785018635(invalidationRect_2785018623[0])) {
            Temporary10 = some_2785018697(or_2147483728(get_2785018652(invalidationRect_2785018623[0]), c_2785018630.lastBounds));
            }
            else {
            Temporary10 = some_2785018697(c_2785018630.lastBounds);
            }
            
            invalidationRect_2785018623[0] = nimCopy(invalidationRect_2785018623[0], Temporary10, NTI2785018298);
            i_536872515 = addInt(i_536872515, 1);
            if (!(((self_2785018510.children).length == L_536872516))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2785018888(self_2785018889, container_2785018890, frameIndex_2785018891, options_2785018892) {
    var newBounds_2785018893 = calculateBounds_2785018368(self_2785018889, container_2785018890);
    if (self_2785018889.sizeToContent) {
    var size_2785018894 = options_2785018892.getTextBounds(self_2785018889.text);
    var incX_2785018895 = max_33555642((size_2785018894.x - newBounds_2785018893.w), 0.0);
    var incY_2785018896 = max_33555642((size_2785018894.y - newBounds_2785018893.h), 0.0);
    newBounds_2785018893.w = size_2785018894.x;
    newBounds_2785018893.h = size_2785018894.y;
    HEX2DHEX3D_2634022922(newBounds_2785018893, "x", (incX_2785018895 * self_2785018889.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2785018893, "y", (incY_2785018896 * self_2785018889.pivot.y));
    }
    
    if (self_2785018889.logLayout) {
    var fmtRes_2785018910 = [mnewString(0)];
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2785018910, 0, self_2785018889.text, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [39,44,32]);;
    formatValue_2785018106(fmtRes_2785018910, 0, container_2785018890, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018910, 0, frameIndex_2785018891, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018039(fmtRes_2785018910, 0, self_2785018889.anchor, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018405(fmtRes_2785018910, 0, self_2785018889.pivot, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018910, 0, self_2785018889.left, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44]);;
    formatValue_2785017973(fmtRes_2785018910, 0, self_2785018889.top, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018910, 0, self_2785018889.right, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [44]);;
    formatValue_2785017973(fmtRes_2785018910, 0, self_2785018889.bottom, []);
    fmtRes_2785018910[0].push.apply(fmtRes_2785018910[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018910, 0, newBounds_2785018893, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018910[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018893, self_2785018889.lastBounds))) {
    var fmtRes_2785018965 = [mnewString(0)];
    fmtRes_2785018965[0].push.apply(fmtRes_2785018965[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018106(fmtRes_2785018965, 0, self_2785018889.lastBounds, []);
    fmtRes_2785018965[0].push.apply(fmtRes_2785018965[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018965, 0, newBounds_2785018893, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018965[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018893, self_2785018889.lastBounds))) {
    self_2785018889.lastBounds = nimCopy(self_2785018889.lastBounds, newBounds_2785018893, NTI2147483653);
    self_2785018889.lastBoundsChange = frameIndex_2785018891;
    }
    

  
}

function width_2785017908(self_2785017909) {
  var result_2785017910 = 0.0;

    result_2785017910 = (self_2785017909.right - self_2785017909.left);

  return result_2785017910;

}

function layoutWidget_2785018801(self_2785018802, container_2785018803, frameIndex_2785018804, options_2785018805) {
    var newBounds_2785018806 = calculateBounds_2785018368(self_2785018802, container_2785018803);
    if (self_2785018802.logLayout) {
    var fmtRes_2785018812 = [mnewString(0)];
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2785018106(fmtRes_2785018812, 0, container_2785018803, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44,32]);;
    formatValue_2701131945(fmtRes_2785018812, 0, frameIndex_2785018804, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2785018039(fmtRes_2785018812, 0, self_2785018802.anchor, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2785018405(fmtRes_2785018812, 0, self_2785018802.pivot, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018812, 0, self_2785018802.left, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44]);;
    formatValue_2785017973(fmtRes_2785018812, 0, self_2785018802.top, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44,32]);;
    formatValue_2785017973(fmtRes_2785018812, 0, self_2785018802.right, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [44]);;
    formatValue_2785017973(fmtRes_2785018812, 0, self_2785018802.bottom, []);
    fmtRes_2785018812[0].push.apply(fmtRes_2785018812[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018812, 0, newBounds_2785018806, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018812[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018806, self_2785018802.lastBounds))) {
    var fmtRes_2785018867 = [mnewString(0)];
    fmtRes_2785018867[0].push.apply(fmtRes_2785018867[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2785018106(fmtRes_2785018867, 0, self_2785018802.lastBounds, []);
    fmtRes_2785018867[0].push.apply(fmtRes_2785018867[0], [32,45,62,32]);;
    formatValue_2785018106(fmtRes_2785018867, 0, newBounds_2785018806, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018867[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2785018441(newBounds_2785018806, self_2785018802.lastBounds))) {
    self_2785018802.lastBounds = nimCopy(self_2785018802.lastBounds, newBounds_2785018806, NTI2147483653);
    self_2785018802.lastBoundsChange = frameIndex_2785018804;
    }
    
    if (((frameIndex_2785018804 <= self_2785018802.lastHierarchyChange) || (frameIndex_2785018804 <= self_2785018802.lastBoundsChange))) {
    var lastX_2785018882 = 0.0;
    Label1: {
      var c_2785018886 = null;
      var i_536872519 = 0;
      var L_536872520 = (self_2785018802.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872519 < L_536872520)) break Label3;
            c_2785018886 = self_2785018802.children[chckIndx(i_536872519, 0, (self_2785018802.children).length - 1)];
            var width_2785018887 = width_2785017908(c_2785018886);
            c_2785018886.left = lastX_2785018882;
            c_2785018886.right = (lastX_2785018882 + width_2785018887);
            layoutWidget_2785018363(c_2785018886, newBounds_2785018806, frameIndex_2785018804, options_2785018805);
            lastX_2785018882 = ((c_2785018886.lastBounds.x + c_2785018886.lastBounds.w) - newBounds_2785018806.x);
            i_536872519 = addInt(i_536872519, 1);
            if (!(((self_2785018802.children).length == L_536872520))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2785018358(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362) {
  
}

function layoutWidget_2785018363(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362) {
    chckNilDisp(self_2785018359);
    if (isObj(self_2785018359.m_type, NTI2785017868)) {
    layoutWidget_2785018378(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    else {
    if (isObj(self_2785018359.m_type, NTI2785017872)) {
    layoutWidget_2785018714(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    else {
    if (isObj(self_2785018359.m_type, NTI2785017870)) {
    layoutWidget_2785018509(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    else {
    if (isObj(self_2785018359.m_type, NTI2785017876)) {
    layoutWidget_2785018888(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    else {
    if (isObj(self_2785018359.m_type, NTI2785017874)) {
    layoutWidget_2785018801(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    else {
    if (isObj(self_2785018359.m_type, NTI2785017866)) {
    layoutWidget_2785018358(self_2785018359, bounds_2785018360, frameIndex_2785018361, options_2785018362);
    }
    }}}}}

  
}

function copyTo_2785018982(self_2785018983, to_2785018984, to_2785018984_Idx) {
    to_2785018984[to_2785018984_Idx].anchor = nimCopy(to_2785018984[to_2785018984_Idx].anchor, self_2785018983.anchor, NTI2785017867);
    to_2785018984[to_2785018984_Idx].pivot = nimCopy(to_2785018984[to_2785018984_Idx].pivot, self_2785018983.pivot, NTI2164261152);
    to_2785018984[to_2785018984_Idx].left = self_2785018983.left;
    to_2785018984[to_2785018984_Idx].top = self_2785018983.top;
    to_2785018984[to_2785018984_Idx].right = self_2785018983.right;
    to_2785018984[to_2785018984_Idx].bottom = self_2785018983.bottom;
    to_2785018984[to_2785018984_Idx].backgroundColor = nimCopy(to_2785018984[to_2785018984_Idx].backgroundColor, self_2785018983.backgroundColor, NTI2550136835);
    to_2785018984[to_2785018984_Idx].foregroundColor = nimCopy(to_2785018984[to_2785018984_Idx].foregroundColor, self_2785018983.foregroundColor, NTI2550136835);
    to_2785018984[to_2785018984_Idx].lastBounds = nimCopy(to_2785018984[to_2785018984_Idx].lastBounds, self_2785018983.lastBounds, NTI2147483653);
    to_2785018984[to_2785018984_Idx].lastBoundsChange = self_2785018983.lastBoundsChange;
    to_2785018984[to_2785018984_Idx].lastHierarchyChange = self_2785018983.lastHierarchyChange;
    to_2785018984[to_2785018984_Idx].lastInvalidationRect = nimCopy(to_2785018984[to_2785018984_Idx].lastInvalidationRect, self_2785018983.lastInvalidationRect, NTI2147483653);
    to_2785018984[to_2785018984_Idx].lastInvalidation = self_2785018983.lastInvalidation;
    to_2785018984[to_2785018984_Idx].sizeToContent = self_2785018983.sizeToContent;
    to_2785018984[to_2785018984_Idx].drawBorder = self_2785018983.drawBorder;
    to_2785018984[to_2785018984_Idx].fillBackground = self_2785018983.fillBackground;
    to_2785018984[to_2785018984_Idx].logLayout = self_2785018983.logLayout;
    to_2785018984[to_2785018984_Idx].allowAlpha = self_2785018983.allowAlpha;

  
}

function clone_2785018999(self_2785019000) {
  var result_2785019001 = [null];

    result_2785019001[0] = {children: [], maskContent: self_2785019000.maskContent, m_type: NTI2785017868, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785018982(self_2785019000, result_2785019001, 0);
    var r_2785019006 = result_2785019001[0];
    Label1: {
      var c_2785019010 = null;
      var i_536872523 = 0;
      var L_536872524 = (self_2785019000.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872523 < L_536872524)) break Label3;
            c_2785019010 = self_2785019000.children[chckIndx(i_536872523, 0, (self_2785019000.children).length - 1)];
            r_2785019006.children.push(clone_2785018997(c_2785019010));;
            i_536872523 = addInt(i_536872523, 1);
            if (!(((self_2785019000.children).length == L_536872524))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019001[0];

}

function clone_2785019058(self_2785019059) {
  var result_2785019060 = [null];

    result_2785019060[0] = {children: [], m_type: NTI2785017872, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785018982(self_2785019059, result_2785019060, 0);
    var r_2785019065 = result_2785019060[0];
    Label1: {
      var c_2785019069 = null;
      var i_536872527 = 0;
      var L_536872528 = (self_2785019059.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872527 < L_536872528)) break Label3;
            c_2785019069 = self_2785019059.children[chckIndx(i_536872527, 0, (self_2785019059.children).length - 1)];
            r_2785019065.children.push(clone_2785018997(c_2785019069));;
            i_536872527 = addInt(i_536872527, 1);
            if (!(((self_2785019059.children).length == L_536872528))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019060[0];

}

function clone_2785019033(self_2785019034) {
  var result_2785019035 = [null];

    result_2785019035[0] = {children: [], m_type: NTI2785017874, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785018982(self_2785019034, result_2785019035, 0);
    var r_2785019040 = result_2785019035[0];
    Label1: {
      var c_2785019044 = null;
      var i_536872531 = 0;
      var L_536872532 = (self_2785019034.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872531 < L_536872532)) break Label3;
            c_2785019044 = self_2785019034.children[chckIndx(i_536872531, 0, (self_2785019034.children).length - 1)];
            r_2785019040.children.push(clone_2785018997(c_2785019044));;
            i_536872531 = addInt(i_536872531, 1);
            if (!(((self_2785019034.children).length == L_536872532))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019035[0];

}

function clone_2785019108(self_2785019109) {
  var result_2785019110 = [null];

    result_2785019110[0] = {text: nimCopy(null, self_2785019109.text, NTI33554449), style: nimCopy(null, self_2785019109.style, NTI2516582404), m_type: NTI2785017876, lastRenderedText: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785018982(self_2785019109, result_2785019110, 0);

  return result_2785019110[0];

}

function clone_2785019083(self_2785019084) {
  var result_2785019085 = [null];

    result_2785019085[0] = {children: [], m_type: NTI2785017870, anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    copyTo_2785018982(self_2785019084, result_2785019085, 0);
    var r_2785019090 = result_2785019085[0];
    Label1: {
      var c_2785019094 = null;
      var i_536872535 = 0;
      var L_536872536 = (self_2785019084.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872535 < L_536872536)) break Label3;
            c_2785019094 = self_2785019084.children[chckIndx(i_536872535, 0, (self_2785019084.children).length - 1)];
            r_2785019090.children.push(clone_2785018997(c_2785019094));;
            i_536872535 = addInt(i_536872535, 1);
            if (!(((self_2785019084.children).length == L_536872536))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2785019085[0];

}

function clone_2785018994(self_2785018995) {
  var result_2785018996 = null;

  return result_2785018996;

}

function clone_2785018997(self_2785018995) {
  var result_2785018998 = null;

  BeforeRet: {
    chckNilDisp(self_2785018995);
    if (isObj(self_2785018995.m_type, NTI2785017868)) {
    result_2785018998 = clone_2785018999(self_2785018995);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785018995.m_type, NTI2785017872)) {
    result_2785018998 = clone_2785019058(self_2785018995);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785018995.m_type, NTI2785017874)) {
    result_2785018998 = clone_2785019033(self_2785018995);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785018995.m_type, NTI2785017876)) {
    result_2785018998 = clone_2785019108(self_2785018995);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785018995.m_type, NTI2785017870)) {
    result_2785018998 = clone_2785019083(self_2785018995);
    break BeforeRet;
    }
    else {
    if (isObj(self_2785018995.m_type, NTI2785017866)) {
    result_2785018998 = clone_2785018994(self_2785018995);
    break BeforeRet;
    }
    }}}}}
  };

  return result_2785018998;

}

function invoke_3355443441(event_3355443443, arg_3355443444) {
    Label1: {
      var h_3355443467 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872540 = 0;
      var L_536872541 = (event_3355443443.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872540 < L_536872541)) break Label3;
            h_3355443467 = event_3355443443.handlers[chckIndx(i_536872540, 0, (event_3355443443.handlers).length - 1)];
            h_3355443467.Field1(arg_3355443444);
            i_536872540 = addInt(i_536872540, 1);
            if (!(((event_3355443443.handlers).length == L_536872541))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3355444340(self_3355444341, redrawEverything_3355444342) {
    self_3355444341.redrawEverything = (self_3355444341.redrawEverything || redrawEverything_3355444342);
    invoke_3355443441(self_3355444341.onResized, redrawEverything_3355444342);

  
}

function requestRender_2768240743(self_2768240744, redrawEverything_2768240745) {
  
}

function requestRender_2768240746(self_2768240744, redrawEverything_2768240745) {
    chckNilDisp(self_2768240744);
    if (isObj(self_2768240744.m_type, NTI3355443211)) {
    requestRender_3355444340(self_2768240744, redrawEverything_2768240745);
    }
    else {
    if (isObj(self_2768240744.m_type, NTI2768240644)) {
    requestRender_2768240743(self_2768240744, redrawEverything_2768240745);
    }
    }

  
}

function size_3355444374(self_3355444375) {
  var result_3355444376 = ({x: 0.0, y: 0.0});

    return {x: self_3355444375.content.clientWidth, y: self_3355444375.content.clientHeight};;

  return result_3355444376;

}

function size_2768240757(self_2768240758) {
  var result_2768240759 = ({x: 0.0, y: 0.0});

  return result_2768240759;

}

function size_2768240760(self_2768240758) {
  var result_2768240761 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240758);
    if (isObj(self_2768240758.m_type, NTI3355443211)) {
    result_2768240761 = nimCopy(result_2768240761, size_3355444374(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240758.m_type, NTI2768240644)) {
    result_2768240761 = nimCopy(result_2768240761, size_2768240757(self_2768240758), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240761;

}

function createOrReplaceElement_3355444522(element_3355444523, element_3355444523_Idx, name_3355444524, nameUpper_3355444525) {
    if ((element_3355444523[element_3355444523_Idx] == null)) {
    element_3355444523[element_3355444523_Idx] = document.createElement(name_3355444524);
    element_3355444523[element_3355444523_Idx].className = "widget";
    }
    else {
    if (!((element_3355444523[element_3355444523_Idx].nodeName == nameUpper_3355444525))) {
    var dif_3355444529 = document.createElement(name_3355444524);
    element_3355444523[element_3355444523_Idx].replaceWith(dif_3355444529);
    element_3355444523[element_3355444523_Idx] = dif_3355444529;
    element_3355444523[element_3355444523_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2130706591(a_2130706592, b_2130706593) {
  var result_2130706594 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2130706594.x = (a_2130706592.x - b_2130706593.x);
    result_2130706594.y = (a_2130706592.y - b_2130706593.y);
    result_2130706594.w = a_2130706592.w;
    result_2130706594.h = a_2130706592.h;

  return result_2130706594;

}

function round_2634022918(x_2634022920) {
  var result_2634022921 = [0.0];

    if ((0.0 <= x_2634022920)) {
    result_2634022921[0] = Math.round(x_2634022920);
    }
    else {
      result_2634022921[0] = Math.ceil(x_2634022920);
      if ((0.5 <= (result_2634022921[0] - x_2634022920))) {
      HEX2DHEX3D_2634022922(result_2634022921, 0, 1.0);
      }
      
    }
    

  return result_2634022921[0];

}

function myToHtmlHex_3355444533(c_3355444534) {
  var result_3355444535 = null;

    result_3355444535 = "rgba(";
    (result_3355444535) += (((round_2634022918((c_3355444534.r * 255.0))) | 0));;
    (result_3355444535) += (", ");;
    (result_3355444535) += (((round_2634022918((c_3355444534.g * 255.0))) | 0));;
    (result_3355444535) += (", ");;
    (result_3355444535) += (((round_2634022918((c_3355444534.b * 255.0))) | 0));;
    (result_3355444535) += (", ");;
    (result_3355444535) += (c_3355444534.a);;
    (result_3355444535) += (")");;

  return result_3355444535;

}

function getTextStyle_3355444749(x_3355444750, y_3355444751, width_3355444752, height_3355444753, color_3355444754, backgroundColor_3355444755) {
  var result_3355444756 = null;

    result_3355444756 = `left: ${x_3355444750}px; top: ${y_3355444751}px; width: ${width_3355444752}px; height: ${height_3355444753}px; overflow: visible; color: ${color_3355444754}; ${backgroundColor_3355444755}`

  return result_3355444756;

}

function pop_3355444497(s_3355444499, s_3355444499_Idx) {
  var result_3355444500 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3355444504 = subInt((s_3355444499[s_3355444499_Idx]).length, 1);
    result_3355444500 = nimCopy(result_3355444500, s_3355444499[s_3355444499_Idx][chckIndx(L_3355444504, 0, (s_3355444499[s_3355444499_Idx]).length - 1)], NTI2147483653);
    if (s_3355444499[s_3355444499_Idx].length < chckRange(L_3355444504, 0, 2147483647)) { for (var i = s_3355444499[s_3355444499_Idx].length ; i < chckRange(L_3355444504, 0, 2147483647) ; ++i) s_3355444499[s_3355444499_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3355444499[s_3355444499_Idx].length = chckRange(L_3355444504, 0, 2147483647); };

  return result_3355444500;

}

function renderWidget_3355444757(self_3355444758, renderer_3355444759, element_3355444760, element_3355444760_Idx, forceRedraw_3355444761, frameIndex_3355444762, buffer_3355444763, buffer_3355444763_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3355444793() {
        element_3355444760[element_3355444760_Idx].setAttribute("style", getTextStyle_3355444749(((relBounds_3355444776.x) | 0), ((relBounds_3355444776.y) | 0), ((relBounds_3355444776.w) | 0), ((relBounds_3355444776.h) | 0), color_3355444784, backgroundColor_3355444792));
        if (updateText_3355444786) {
        element_3355444760[element_3355444760_Idx].innerText = text_3355444785;
        element_3355444760[element_3355444760_Idx].setAttribute("data-text", text_3355444785);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3355444758.lastHierarchyChange < frameIndex_3355444762) && (self_3355444758.lastBoundsChange < frameIndex_3355444762)) && (self_3355444758.lastInvalidation < frameIndex_3355444762)) && !(forceRedraw_3355444761))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3355444522(element_3355444760, element_3355444760_Idx, "span", "SPAN");
    var relBounds_3355444776 = HEX2D_2130706591(self_3355444758.lastBounds, xy_2147483680(renderer_3355444759.boundsStack[chckIndx((renderer_3355444759.boundsStack).length - 1, 0, (renderer_3355444759.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3355444758.lastBounds, NTI2147483653);
    renderer_3355444759.boundsStack.push(Temporary1);;
    try {
    var color_3355444784 = myToHtmlHex_3355444533(self_3355444758.foregroundColor);
    var text_3355444785 = toJSStr(self_3355444758.text);
    var updateText_3355444786 = !((element_3355444760[element_3355444760_Idx].getAttribute("data-text") == text_3355444785));
    if (self_3355444758.fillBackground) {
    var fmtRes_3355444791 = [mnewString(0)];
    fmtRes_3355444791[0].push.apply(fmtRes_3355444791[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3355444791, 0, myToHtmlHex_3355444533(self_3355444758.backgroundColor));
    fmtRes_3355444791[0].push.apply(fmtRes_3355444791[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3355444791[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3355444792 = Temporary3;
    renderer_3355444759.domUpdates.push(HEX3Aanonymous_3355444793);;
    self_3355444758.lastRenderedText = nimCopy(null, self_3355444758.text, NTI33554449);
    } finally {
    var _ = pop_3355444497(renderer_3355444759, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3355444530(element_3355444531, element_3355444531_Idx, bounds_3355444532) {
    element_3355444531[element_3355444531_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3355444532.x) | 0)));
    element_3355444531[element_3355444531_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3355444532.y) | 0)));
    element_3355444531[element_3355444531_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3355444532.w) | 0)));
    element_3355444531[element_3355444531_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3355444532.h) | 0)));

  
}

function renderWidget_3355444701(self_3355444702, renderer_3355444703, element_3355444704, element_3355444704_Idx, forceRedraw_3355444705, frameIndex_3355444706, buffer_3355444707, buffer_3355444707_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3355444702.lastHierarchyChange < frameIndex_3355444706) && (self_3355444702.lastBoundsChange < frameIndex_3355444706)) && (self_3355444702.lastInvalidation < frameIndex_3355444706)) && !(forceRedraw_3355444705))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3355444522(element_3355444704, element_3355444704_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3355444702.children).length < (element_3355444704[element_3355444704_Idx].children).length)) break Label2;
          element_3355444704[element_3355444704_Idx].removeChild(element_3355444704[element_3355444704_Idx].lastChild);
        }
    };
    var relBounds_3355444726 = HEX2D_2130706591(self_3355444702.lastBounds, xy_2147483680(renderer_3355444703.boundsStack[chckIndx((renderer_3355444703.boundsStack).length - 1, 0, (renderer_3355444703.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3355444702.lastBounds, NTI2147483653);
    renderer_3355444703.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3355444530(element_3355444704, element_3355444704_Idx, relBounds_3355444726);
    var existingCount_3355444737 = (element_3355444704[element_3355444704_Idx].children).length;
    Label5: {
      var i_3355444743 = 0;
      var c_3355444744 = null;
      var i_536872545 = 0;
      var L_536872546 = (self_3355444702.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872545 < L_536872546)) break Label7;
            i_3355444743 = i_536872545;
            c_3355444744 = self_3355444702.children[chckIndx(i_536872545, 0, (self_3355444702.children).length - 1)];
            if ((i_3355444743 < existingCount_3355444737)) {
            Temporary8 = element_3355444704[element_3355444704_Idx].children[chckIndx(i_3355444743, 0, (element_3355444704[element_3355444704_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3355444745 = [Temporary8];
            renderWidget_3355444439(c_3355444744, renderer_3355444703, childElement_3355444745, 0, (forceRedraw_3355444705 || self_3355444702.fillBackground), frameIndex_3355444706, buffer_3355444707, buffer_3355444707_Idx);
            if (((existingCount_3355444737 <= i_3355444743) && !((childElement_3355444745[0] == null)))) {
            element_3355444704[element_3355444704_Idx].appendChild(childElement_3355444745[0]);
            }
            
            i_536872545 = addInt(i_536872545, 1);
            if (!(((self_3355444702.children).length == L_536872546))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3355444497(renderer_3355444703, "boundsStack");
    }
  };

  
}

function getBackgroundColor_2785018176(self_2785018177) {
  var result_2785018178 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018178 = nimCopy(result_2785018178, self_2785018177.backgroundColor, NTI2550136835);
    if (!(self_2785018177.allowAlpha)) {
    result_2785018178.a = 1.0;
    }
    

  return result_2785018178;

}

function getForegroundColor_2785018173(self_2785018174) {
  var result_2785018175 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2785018175 = nimCopy(result_2785018175, self_2785018174.foregroundColor, NTI2550136835);
    if (!(self_2785018174.allowAlpha)) {
    result_2785018175.a = 1.0;
    }
    

  return result_2785018175;

}

function renderWidget_3355444577(self_3355444578, renderer_3355444579, element_3355444580, element_3355444580_Idx, forceRedraw_3355444581, frameIndex_3355444582, buffer_3355444583, buffer_3355444583_Idx) {
    
function HEX3Aanonymous_3355444672() {
        element_3355444580[element_3355444580_Idx].className = "widget";
        element_3355444580[element_3355444580_Idx].setAttribute("style", css_3355444610);

      
    }
            var Temporary8;

  BeforeRet: {
    if (((((self_3355444578.lastHierarchyChange < frameIndex_3355444582) && (self_3355444578.lastBoundsChange < frameIndex_3355444582)) && (self_3355444578.lastInvalidation < frameIndex_3355444582)) && !(forceRedraw_3355444581))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3355444522(element_3355444580, element_3355444580_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3355444578.children).length < (element_3355444580[element_3355444580_Idx].children).length)) break Label2;
          element_3355444580[element_3355444580_Idx].removeChild(element_3355444580[element_3355444580_Idx].lastChild);
        }
    };
    var relBounds_3355444602 = HEX2D_2130706591(self_3355444578.lastBounds, xy_2147483680(renderer_3355444579.boundsStack[chckIndx((renderer_3355444579.boundsStack).length - 1, 0, (renderer_3355444579.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3355444578.lastBounds, NTI2147483653);
    renderer_3355444579.boundsStack.push(Temporary3);;
    try {
    var css_3355444610 = "left: ";
    (css_3355444610) += (((relBounds_3355444602.x) | 0));;
    (css_3355444610) += ("px; top: ");;
    (css_3355444610) += (((relBounds_3355444602.y) | 0));;
    (css_3355444610) += ("px; width: ");;
    (css_3355444610) += (((relBounds_3355444602.w) | 0));;
    (css_3355444610) += ("px; height: ");;
    (css_3355444610) += (((relBounds_3355444602.h) | 0));;
    (css_3355444610) += ("px;");;
    var backgroundColor_3355444643 = getBackgroundColor_2785018176(self_3355444578);
    if (self_3355444578.fillBackground) {
    (css_3355444610) += ("background: ");;
    (css_3355444610) += (myToHtmlHex_3355444533(backgroundColor_3355444643));;
    (css_3355444610) += (";");;
    }
    
    if (self_3355444578.maskContent) {
    (css_3355444610) += ("overflow: hidden;");;
    }
    
    if (self_3355444578.drawBorder) {
    (css_3355444610) += ("border: 1px solid ");;
    (css_3355444610) += (myToHtmlHex_3355444533(getForegroundColor_2785018173(self_3355444578)));;
    (css_3355444610) += (";");;
    }
    
    renderer_3355444579.domUpdates.push(HEX3Aanonymous_3355444672);;
    var existingCount_3355444680 = (element_3355444580[element_3355444580_Idx].children).length;
    Label5: {
      var i_3355444686 = 0;
      var c_3355444687 = null;
      var i_536872550 = 0;
      var L_536872551 = (self_3355444578.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872550 < L_536872551)) break Label7;
            i_3355444686 = i_536872550;
            c_3355444687 = self_3355444578.children[chckIndx(i_536872550, 0, (self_3355444578.children).length - 1)];
            if ((i_3355444686 < existingCount_3355444680)) {
            Temporary8 = element_3355444580[element_3355444580_Idx].children[chckIndx(i_3355444686, 0, (element_3355444580[element_3355444580_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3355444688 = [Temporary8];
            renderWidget_3355444439(c_3355444687, renderer_3355444579, childElement_3355444688, 0, (forceRedraw_3355444581 || self_3355444578.fillBackground), frameIndex_3355444582, buffer_3355444583, buffer_3355444583_Idx);
            if (((existingCount_3355444680 <= i_3355444686) && !((childElement_3355444688[0] == null)))) {
            element_3355444580[element_3355444580_Idx].appendChild(childElement_3355444688[0]);
            }
            
            i_536872550 = addInt(i_536872550, 1);
            if (!(((self_3355444578.children).length == L_536872551))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3355444497(renderer_3355444579, "boundsStack");
    }
  };

  
}

function renderWidget_3355444432(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx) {
  
}

function renderWidget_3355444439(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx) {
    chckNilDisp(self_3355444433);
    if (isObj(self_3355444433.m_type, NTI2785017876)) {
    renderWidget_3355444757(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx);
    }
    else {
    if (isObj(self_3355444433.m_type, NTI2785017870)) {
    renderWidget_3355444701(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx);
    }
    else {
    if (isObj(self_3355444433.m_type, NTI2785017868)) {
    renderWidget_3355444577(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx);
    }
    else {
    if (isObj(self_3355444433.m_type, NTI2785017866)) {
    renderWidget_3355444432(self_3355444433, renderer_3355444434, element_3355444435, element_3355444435_Idx, forceRedraw_3355444436, frameIndex_3355444437, buffer_3355444438, buffer_3355444438_Idx);
    }
    }}}

  
}

function applyDomUpdates_3355444440(self_3355444441) {
    Label1: {
      var update_3355444464 = null;
      var i_536872555 = 0;
      var L_536872556 = (self_3355444441.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872555 < L_536872556)) break Label3;
            update_3355444464 = self_3355444441.domUpdates[chckIndx(i_536872555, 0, (self_3355444441.domUpdates).length - 1)];
            update_3355444464();
            i_536872555 = addInt(i_536872555, 1);
            if (!(((self_3355444441.domUpdates).length == L_536872556))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3355444441.domUpdates.length < 0) { for (var i = self_3355444441.domUpdates.length ; i < 0 ; ++i) self_3355444441.domUpdates.push(null); }
               else { self_3355444441.domUpdates.length = 0; };

  
}

function render_3355444489(self_3355444490, widget_3355444491, frameIndex_3355444492) {
    var Temporary2;

    self_3355444490.boundsStack.push(rect_2147483672(vec2_2164261686(), size_2768240760(self_3355444490)));;
    try {
    var buffer_3355444509 = [[]];
    if ((0 < (self_3355444490.content.children).length)) {
    Temporary2 = self_3355444490.content.children[chckIndx(0, 0, (self_3355444490.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3355444514 = [Temporary2];
    var wasNil_3355444518 = (element_3355444514[0] == null);
    renderWidget_3355444439(widget_3355444491, self_3355444490, element_3355444514, 0, self_3355444490.redrawEverything, frameIndex_3355444492, buffer_3355444509, 0);
    applyDomUpdates_3355444440(self_3355444490);
    if ((!((element_3355444514[0] == null)) && wasNil_3355444518)) {
    self_3355444490.content.appendChild(element_3355444514[0]);
    }
    
    self_3355444490.redrawEverything = false;
    } finally {
    var _ = pop_3355444497(self_3355444490, "boundsStack");
    }

  
}

function render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750) {
  
}

function render_2768240751(self_2768240748, widget_2768240749, frameIndex_2768240750) {
    chckNilDisp(self_2768240748);
    if (isObj(self_2768240748.m_type, NTI3355443211)) {
    render_3355444489(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    else {
    if (isObj(self_2768240748.m_type, NTI2768240644)) {
    render_2768240747(self_2768240748, widget_2768240749, frameIndex_2768240750);
    }
    }

  
}

function sizeChanged_2768240752(self_2768240753) {
  var result_2768240754 = false;

  return result_2768240754;

}

function sizeChanged_2768240755(self_2768240753) {
  var result_2768240756 = false;

  BeforeRet: {
    result_2768240756 = sizeChanged_2768240752(self_2768240753);
    break BeforeRet;
  };

  return result_2768240756;

}

function initDoublyLinkedList_3355443351() {
  var result_3355443353 = ({head: null, tail: null});

  return result_3355443353;

}

function initTable_3355443357(initialSize_3355443360) {
  var result_3355443361 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3355443363 = slotsNeeded_1308622891(chckRange(initialSize_3355443360, 0, 2147483647));
    result_3355443361.counter = 0;
    result_3355443361.data = new Array(chckRange(correctSizeHEX60gensym3_3355443363, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3355443363, 0, 2147483647) ; ++i) { result_3355443361.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3355443361;

}

function correctSize_3053453333(cap_3053453334) {
  var result_3053453335 = 0;

    result_3053453335 = cap_3053453334;

  return result_3053453335;

}

function newLruCache_3355443341(capacity_3355443344, recordRemovedKeys_3355443345) {
  var result_3355443346 = null;

    result_3355443346 = {capacity: capacity_3355443344, list: initDoublyLinkedList_3355443351(), table: initTable_3355443357(correctSize_3053453333(capacity_3355443344)), recordRemovedKeys: recordRemovedKeys_3355443345, removedKeys: ({data: [], counter: 0})};

  return result_3355443346;

}

function getModifiers_3355443281(self_3355443282) {
  var result_3355443283 = {};

    if (self_3355443282.altKey) {
    result_3355443283[2] = true;
    }
    
    if (self_3355443282.shiftKey) {
    result_3355443283[1] = true;
    }
    
    if (self_3355443282.ctrlKey) {
    result_3355443283[0] = true;
    }
    

  return result_3355443283;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3355443275(key_3355443276, code_3355443277, keyCode_3355443278) {
  var result_3355444428 = 0;

    switch (key_3355443276) {
    case "Enter":
      result_3355444428 = -1;
      break;
    case "Escape":
      result_3355444428 = -2;
      break;
    case "Backspace":
      result_3355444428 = -3;
      break;
    case " ":
      result_3355444428 = -4;
      break;
    case "Delete":
      result_3355444428 = -5;
      break;
    case "Tab":
      result_3355444428 = -6;
      break;
    case "ArrowLeft":
      result_3355444428 = -7;
      break;
    case "ArrowRight":
      result_3355444428 = -8;
      break;
    case "ArrowUp":
      result_3355444428 = -9;
      break;
    case "ArrowDown":
      result_3355444428 = -10;
      break;
    case "Home":
      result_3355444428 = -11;
      break;
    case "End":
      result_3355444428 = -12;
      break;
    case "PageUp":
      result_3355444428 = -13;
      break;
    case "PageDown":
      result_3355444428 = -14;
      break;
    default: 
      if (      keyCode_3355443278 >= 112 && keyCode_3355443278 <= 123      ){        result_3355444428 = addInt(-20, subInt(keyCode_3355443278, 112));
        }
      else{
        if ((((key_3355443276) == null ? 0 : (key_3355443276).length) == 1)) {
        result_3355444428 = runeAt_788536179(cstrToNimstr(key_3355443276), 0);
        }
        
        }
      break;
    }

  return result_3355444428;

}

function invoke_3355443525(event_3355443527, arg_3355443528) {
    Label1: {
      var h_3355443551 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872565 = 0;
      var L_536872566 = (event_3355443527.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872565 < L_536872566)) break Label3;
            h_3355443551 = event_3355443527.handlers[chckIndx(i_536872565, 0, (event_3355443527.handlers).length - 1)];
            h_3355443551.Field1(arg_3355443528);
            i_536872565 = addInt(i_536872565, 1);
            if (!(((event_3355443527.handlers).length == L_536872566))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3355443296(self_3355443297) {
  var result_3355443298 = {};

    if (self_3355443297.altKey) {
    result_3355443298[2] = true;
    }
    
    if (self_3355443297.shiftKey) {
    result_3355443298[1] = true;
    }
    
    if (self_3355443297.ctrlKey) {
    result_3355443298[0] = true;
    }
    

  return result_3355443298;

}

function invoke_3355443868(event_3355443870, arg_3355443871) {
    Label1: {
      var h_3355443894 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872570 = 0;
      var L_536872571 = (event_3355443870.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872570 < L_536872571)) break Label3;
            h_3355443894 = event_3355443870.handlers[chckIndx(i_536872570, 0, (event_3355443870.handlers).length - 1)];
            h_3355443894.Field1(arg_3355443871);
            i_536872570 = addInt(i_536872570, 1);
            if (!(((event_3355443870.handlers).length == L_536872571))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3355443705(aHEX60gensym74_3355443707, bHEX60gensym74_3355443708) {
  var result_3355443709 = ({x: 0.0, y: 0.0});

    result_3355443709 = nimCopy(result_3355443709, {x: (aHEX60gensym74_3355443707.x * bHEX60gensym74_3355443708), y: (aHEX60gensym74_3355443707.y * bHEX60gensym74_3355443708)}, NTI2164261152);

  return result_3355443709;

}

function getMouseButton_3355443327(event_3355443328) {
    var Temporary1;

  var result_3355443329 = 0;

    if (    event_3355443328.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3355443328.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3355443328.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3355443329 = Temporary1;

  return result_3355443329;

}

function invoke_3355443964(event_3355443966, arg_3355443967) {
    Label1: {
      var h_3355443990 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872575 = 0;
      var L_536872576 = (event_3355443966.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872575 < L_536872576)) break Label3;
            h_3355443990 = event_3355443966.handlers[chckIndx(i_536872575, 0, (event_3355443966.handlers).length - 1)];
            h_3355443990.Field1(arg_3355443967);
            i_536872575 = addInt(i_536872575, 1);
            if (!(((event_3355443966.handlers).length == L_536872576))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3355444073(event_3355444075, arg_3355444076) {
    Label1: {
      var h_3355444099 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872580 = 0;
      var L_536872581 = (event_3355444075.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872580 < L_536872581)) break Label3;
            h_3355444099 = event_3355444075.handlers[chckIndx(i_536872580, 0, (event_3355444075.handlers).length - 1)];
            h_3355444099.Field1(arg_3355444076);
            i_536872580 = addInt(i_536872580, 1);
            if (!(((event_3355444075.handlers).length == L_536872581))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3355443311(event_3355443312) {
  var result_3355443313 = {};

    var buttons_3355443314 = event_3355443312.buttons;
    if (!(((buttons_3355443314 & 1) == 0))) {
    result_3355443313[0] = true;
    }
    
    if (!(((buttons_3355443314 & 2) == 0))) {
    result_3355443313[2] = true;
    }
    
    if (!(((buttons_3355443314 & 4) == 0))) {
    result_3355443313[1] = true;
    }
    

  return result_3355443313;

}

function invoke_3355444230(event_3355444232, arg_3355444233) {
    Label1: {
      var h_3355444256 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872585 = 0;
      var L_536872586 = (event_3355444232.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872585 < L_536872586)) break Label3;
            h_3355444256 = event_3355444232.handlers[chckIndx(i_536872585, 0, (event_3355444232.handlers).length - 1)];
            h_3355444256.Field1(arg_3355444233);
            i_536872585 = addInt(i_536872585, 1);
            if (!(((event_3355444232.handlers).length == L_536872586))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function updateFontSettings_3355443279(self_3355443280) {
    var d_3355444392 = document.createElement("div");
    d_3355444392.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3355444392.innerHTML = toJSStr(nsuRepeatStr([35], 100));
    self_3355443280.content.appendChild(d_3355444392);
    self_3355443280.mLineHeight = d_3355444392.clientHeight;
    self_3355443280.mCharWidth = (d_3355444392.clientWidth / 100.0);
    self_3355443280.content.removeChild(d_3355444392);

  
}

function init_3355443339(self_3355443340) {
    
function HEX3Aanonymous_3355443404(text_3355443405) {
      var result_3355443406 = ({x: 0.0, y: 0.0});

        result_3355443406.x = ((text_3355443405).length * self_3355443340.mCharWidth);
        result_3355443406.y = totalLineHeight_2768240810(self_3355443340);

      return result_3355443406;

    }
    
function HEX3Aanonymous_3355443416(e_3355443417) {
        var oldEvent_3355443418 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355443417;
        try {
        invoke_3355443441(self_3355443340.onResized, true);
        } finally {
        self_3355443340.currentEvent = oldEvent_3355443418;
        }

      
    }
    
function HEX3Aanonymous_3355443497(e_3355443498) {
        var oldEvent_3355443499 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355443498;
        try {
        var ke_3355443500 = e_3355443498;
        var modifiers_3355443501 = getModifiers_3355443281(ke_3355443500);
        var input_3355443502 = toInput_3355443275(ke_3355443500.key, ke_3355443500.code, ke_3355443500.keyCode);
        invoke_3355443525(self_3355443340.onKeyPress, {Field0: input_3355443502, Field1: nimCopy(null, modifiers_3355443501, NTI2013265950)});
        } finally {
        self_3355443340.currentEvent = oldEvent_3355443499;
        }

      
    }
    
function HEX3Aanonymous_3355443581(e_3355443582) {
        var oldEvent_3355443583 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355443582;
        try {
        var we_3355443584 = e_3355443582;
        var modifiers_3355443585 = getModifiers_3355443296(we_3355443584);
        invoke_3355443868(self_3355443340.onScroll, {Field0: vec2_2164261725(we_3355443584.clientX, we_3355443584.clientY), Field1: HEX2A_3355443705(vec2_2164261725(we_3355443584.deltaX, -(we_3355443584.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3355443585, NTI2013265950)});
        } finally {
        self_3355443340.currentEvent = oldEvent_3355443583;
        }

      
    }
    
function HEX3Aanonymous_3355443933(e_3355443934) {
        var oldEvent_3355443935 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355443934;
        try {
        var me_3355443936 = e_3355443934;
        var modifiers_3355443937 = getModifiers_3355443296(me_3355443936);
        var mouseButton_3355443938 = getMouseButton_3355443327(me_3355443936);
        var currentTargetRect_3355443939 = me_3355443936.currentTarget.getBoundingClientRect();
        var x_3355443940 = (me_3355443936.pageX - currentTargetRect_3355443939.x);
        var y_3355443941 = (me_3355443936.pageY - currentTargetRect_3355443939.y);
        invoke_3355443964(self_3355443340.onMousePress, {Field0: mouseButton_3355443938, Field1: nimCopy(null, modifiers_3355443937, NTI2013265950), Field2: vec2_2164261725(x_3355443940, y_3355443941)});
        } finally {
        self_3355443340.currentEvent = oldEvent_3355443935;
        }

      
    }
    
function HEX3Aanonymous_3355444011(e_3355444012) {
        var oldEvent_3355444013 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355444012;
        try {
        var me_3355444014 = e_3355444012;
        var modifiers_3355444015 = getModifiers_3355443296(me_3355444014);
        var mouseButton_3355444016 = getMouseButton_3355443327(me_3355444014);
        var currentTargetRect_3355444017 = me_3355444014.currentTarget.getBoundingClientRect();
        var x_3355444018 = (me_3355444014.pageX - currentTargetRect_3355444017.x);
        var y_3355444019 = (me_3355444014.pageY - currentTargetRect_3355444017.y);
        invoke_3355443964(self_3355443340.onMouseRelease, {Field0: mouseButton_3355444016, Field1: nimCopy(null, modifiers_3355444015, NTI2013265950), Field2: vec2_2164261725(x_3355444018, y_3355444019)});
        } finally {
        self_3355443340.currentEvent = oldEvent_3355444013;
        }

      
    }
    
function HEX3Aanonymous_3355444046(e_3355444047) {
        var oldEvent_3355444048 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355444047;
        try {
        var me_3355444049 = e_3355444047;
        var modifiers_3355444050 = getModifiers_3355443296(me_3355444049);
        invoke_3355444073(self_3355443340.onMouseMove, {Field0: vec2_2164261725(me_3355444049.clientX, me_3355444049.clientY), Field1: vec2_2164261725(me_3355444049.movementX, me_3355444049.movementY), Field2: nimCopy(null, modifiers_3355444050, NTI2013265950), Field3: getMouseButtons_3355443311(me_3355444049)});
        } finally {
        self_3355443340.currentEvent = oldEvent_3355444048;
        }

      
    }
    
function HEX3Aanonymous_3355444132(e_3355444133) {
        var oldEvent_3355444134 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355444133;
        try {
        var de_3355444135 = e_3355444133;
        de_3355444135.preventDefault();
        } finally {
        self_3355443340.currentEvent = oldEvent_3355444134;
        }

      
    }
    
function HEX3Aanonymous_3355444145(e_3355444146) {
                
function HEX3Aanonymous_3355444193(f_3355444194) {
                    
function HEX3Aanonymous_3355444206(e_3355444207) {
                        invoke_3355444230(self_3355443340.onDropFile, {Field0: cstrToNimstr(f_3355444194.name), Field1: cstrToNimstr((fileReader_3355444196.result || ''))});

                      
                    }

                    var fileReader_3355444196 = new FileReader();
                    fileReader_3355444196.readAsText(f_3355444194, "UTF-8");
                    fileReader_3355444196.onload = HEX3Aanonymous_3355444206;

                  
                }

        var oldEvent_3355444147 = self_3355443340.currentEvent;
        self_3355443340.currentEvent = e_3355444146;
        try {
        var de_3355444148 = e_3355444146;
        de_3355444148.preventDefault();
        console.log(de_3355444148.dataTransfer);;
        Label2: {
          var f_3355444174 = null;
          var i_536872560 = 0;
          var L_536872561 = (de_3355444148.dataTransfer.files).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872560 < L_536872561)) break Label4;
                f_3355444174 = de_3355444148.dataTransfer.files[chckIndx(i_536872560, 0, (de_3355444148.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3355444193(f_3355444174);
                i_536872560 = addInt(i_536872560, 1);
                if (!(((de_3355444148.dataTransfer.files).length == L_536872561))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        } finally {
        self_3355443340.currentEvent = oldEvent_3355444147;
        }

      
    }

    self_3355443340.mFontSize = 18.0;
    self_3355443340.mLineHeight = 20.0;
    self_3355443340.mLineDistance = 2.0;
    self_3355443340.mCharWidth = 18.0;
    self_3355443340.escapedText = newLruCache_3355443341(1000, false);
    self_3355443340.layoutOptions.getTextBounds = HEX3Aanonymous_3355443404;
    window.addEventListener("resize", HEX3Aanonymous_3355443416, false);
    self_3355443340.content = document.getElementById("view");
    self_3355443340.content.addEventListener("keydown", HEX3Aanonymous_3355443497, false);
    self_3355443340.content.addEventListener("wheel", HEX3Aanonymous_3355443581, {passive: true, capture: false, once: false});
    self_3355443340.content.addEventListener("mousedown", HEX3Aanonymous_3355443933, false);
    self_3355443340.content.addEventListener("mouseup", HEX3Aanonymous_3355444011, false);
    self_3355443340.content.addEventListener("mousemove", HEX3Aanonymous_3355444046, false);
    self_3355443340.content.addEventListener("dragover", HEX3Aanonymous_3355444132, false);
    self_3355443340.content.addEventListener("drop", HEX3Aanonymous_3355444145, false);
    updateFontSettings_3355443279(self_3355443340);
    self_3355443340.content.focus();

  
}

function init_2768240762(self_2768240763) {
  
}

function init_2768240764(self_2768240763) {
    chckNilDisp(self_2768240763);
    if (isObj(self_2768240763.m_type, NTI3355443211)) {
    init_3355443339(self_2768240763);
    }
    else {
    if (isObj(self_2768240763.m_type, NTI2768240644)) {
    init_2768240762(self_2768240763);
    }
    }

  
}

function deinit_3355444369(self_3355444370) {
  
}

function deinit_2768240765(self_2768240766) {
  
}

function deinit_2768240767(self_2768240766) {
    chckNilDisp(self_2768240766);
    if (isObj(self_2768240766.m_type, NTI3355443211)) {
    deinit_3355444369(self_2768240766);
    }
    else {
    if (isObj(self_2768240766.m_type, NTI2768240644)) {
    deinit_2768240765(self_2768240766);
    }
    }

  
}

function processEvents_3355444429(self_3355444430) {
  var result_3355444431 = 0;

    result_3355444431 = 0;

  return result_3355444431;

}

function processEvents_2768240768(self_2768240769) {
  var result_2768240770 = 0;

  return result_2768240770;

}

function processEvents_2768240771(self_2768240769) {
  var result_2768240772 = 0;

  BeforeRet: {
    chckNilDisp(self_2768240769);
    if (isObj(self_2768240769.m_type, NTI3355443211)) {
    result_2768240772 = processEvents_3355444429(self_2768240769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240769.m_type, NTI2768240644)) {
    result_2768240772 = processEvents_2768240768(self_2768240769);
    break BeforeRet;
    }
    }
  };

  return result_2768240772;

}

function fontSizeHEX3D_3355444402(self_3355444403, fontSize_3355444404) {
    if (!((self_3355444403.mFontSize == fontSize_3355444404))) {
    self_3355444403.mFontSize = fontSize_3355444404;
    self_3355444403.content.style.fontSize = toJSStr(HEX24_33557336(fontSize_3355444404));
    self_3355444403.redrawEverything = true;
    updateFontSettings_3355443279(self_3355444403);
    }
    

  
}

function fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775) {
  
}

function fontSizeHEX3D_2768240776(self_2768240774, fontSize_2768240775) {
    chckNilDisp(self_2768240774);
    if (isObj(self_2768240774.m_type, NTI3355443211)) {
    fontSizeHEX3D_3355444402(self_2768240774, fontSize_2768240775);
    }
    else {
    if (isObj(self_2768240774.m_type, NTI2768240644)) {
    fontSizeHEX3D_2768240773(self_2768240774, fontSize_2768240775);
    }
    }

  
}

function lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779) {
  
}

function lineDistanceHEX3D_2768240780(self_2768240778, lineDistance_2768240779) {
    lineDistanceHEX3D_2768240777(self_2768240778, lineDistance_2768240779);

  
}

function fontSize_3355444408(self_3355444409) {
  var result_3355444410 = 0.0;

    result_3355444410 = self_3355444409.mFontSize;

  return result_3355444410;

}

function fontSize_2768240781(self_2768240782) {
  var result_2768240783 = 0.0;

  return result_2768240783;

}

function fontSize_2768240784(self_2768240782) {
  var result_2768240785 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240782);
    if (isObj(self_2768240782.m_type, NTI3355443211)) {
    result_2768240785 = fontSize_3355444408(self_2768240782);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240782.m_type, NTI2768240644)) {
    result_2768240785 = fontSize_2768240781(self_2768240782);
    break BeforeRet;
    }
    }
  };

  return result_2768240785;

}

function lineDistance_3355444411(self_3355444412) {
  var result_3355444413 = 0.0;

    result_3355444413 = self_3355444412.mLineDistance;

  return result_3355444413;

}

function lineDistance_2768240786(self_2768240787) {
  var result_2768240788 = 0.0;

  return result_2768240788;

}

function lineDistance_2768240789(self_2768240787) {
  var result_2768240790 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240787);
    if (isObj(self_2768240787.m_type, NTI3355443211)) {
    result_2768240790 = lineDistance_3355444411(self_2768240787);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240787.m_type, NTI2768240644)) {
    result_2768240790 = lineDistance_2768240786(self_2768240787);
    break BeforeRet;
    }
    }
  };

  return result_2768240790;

}

function lineHeight_3355444414(self_3355444415) {
  var result_3355444416 = 0.0;

    result_3355444416 = self_3355444415.mLineHeight;

  return result_3355444416;

}

function lineHeight_2768240791(self_2768240792) {
  var result_2768240793 = 0.0;

  return result_2768240793;

}

function lineHeight_2768240794(self_2768240792) {
  var result_2768240795 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2768240792);
    if (isObj(self_2768240792.m_type, NTI3355443211)) {
    result_2768240795 = lineHeight_3355444414(self_2768240792);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240792.m_type, NTI2768240644)) {
    result_2768240795 = lineHeight_2768240791(self_2768240792);
    break BeforeRet;
    }
    }
  };

  return result_2768240795;

}

function measureText_3355444420(self_3355444421, text_3355444422) {
  var result_3355444423 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_3355444423 = nimCopy(result_3355444423, vec2_2164261725(((text_3355444422).length * self_3355444421.mCharWidth), totalLineHeight_2768240810(self_3355444421)), NTI2164261152);
    break BeforeRet;
  };

  return result_3355444423;

}

function measureText_2768240801(self_2768240802, text_2768240803) {
  var result_2768240804 = ({x: 0.0, y: 0.0});

  return result_2768240804;

}

function measureText_2768240805(self_2768240802, text_2768240803) {
  var result_2768240806 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2768240802);
    if (isObj(self_2768240802.m_type, NTI3355443211)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_3355444420(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    else {
    if (isObj(self_2768240802.m_type, NTI2768240644)) {
    result_2768240806 = nimCopy(result_2768240806, measureText_2768240801(self_2768240802, text_2768240803), NTI2164261152);
    break BeforeRet;
    }
    }
  };

  return result_2768240806;

}

function preventDefault_3355444385(self_3355444386) {
  BeforeRet: {
    if ((self_3355444386.currentEvent == null)) {
    break BeforeRet;
    }
    
    self_3355444386.currentEvent.preventDefault();
  };

  
}

function preventDefault_2768240807(self_2768240808) {
  
}

function preventDefault_2768240809(self_2768240808) {
    chckNilDisp(self_2768240808);
    if (isObj(self_2768240808.m_type, NTI3355443211)) {
    preventDefault_3355444385(self_2768240808);
    }
    else {
    if (isObj(self_2768240808.m_type, NTI2768240644)) {
    preventDefault_2768240807(self_2768240808);
    }
    }

  
}

function mustRehash_1291846256(t_1291846258) {
  var result_1291846259 = false;

    if (!((t_1291846258.counter < (t_1291846258.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846259 = ((mulInt((t_1291846258.data).length, 2) < mulInt(t_1291846258.counter, 3)) || (subInt((t_1291846258.data).length, t_1291846258.counter) < 4));

  return result_1291846259;

}

function rawInsert_1291846705(t_1291846709, data_1291846710, data_1291846710_Idx, key_1291846711, val_1291846712, hc_1291846713, h_1291846714) {
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field1 = key_1291846711;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field2 = val_1291846712;
    data_1291846710[data_1291846710_Idx][chckIndx(h_1291846714, 0, (data_1291846710[data_1291846710_Idx]).length - 1)].Field0 = hc_1291846713;

  
}

function enlarge_1291846411(t_1291846414) {
    var n_1291846417 = [];
    n_1291846417 = new Array(chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846414.data).length, 2), 0, 2147483647) ; ++i) { n_1291846417[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846414.data; t_1291846414.data = n_1291846417; n_1291846417 = Temporary1;    Label2: {
      var i_1291846481 = 0;
      var colontmp__536872592 = 0;
      colontmp__536872592 = (n_1291846417).length - 1;
      var res_536872593 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872593 <= colontmp__536872592)) break Label4;
            i_1291846481 = res_536872593;
            var eh_1291846535 = n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846535)) {
            var j_1291846539 = (eh_1291846535 & (t_1291846414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846414.data[chckIndx(j_1291846539, 0, (t_1291846414.data).length - 1)].Field0)) break Label6;
                  j_1291846539 = nextTry_1308622883(j_1291846539, (t_1291846414.data).length - 1);
                }
            };
            rawInsert_1291846705(t_1291846414, t_1291846414, "data", n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field1, n_1291846417[chckIndx(i_1291846481, 0, (n_1291846417).length - 1)].Field2, eh_1291846535, j_1291846539);
            }
            
            res_536872593 = addInt(res_536872593, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846874(t_1291846877, key_1291846878, hc_1291846879) {
  var result_1291846880 = 0;

  BeforeRet: {
    if (((t_1291846877.data).length == 0)) {
    result_1291846880 = -1;
    break BeforeRet;
    }
    
    var h_1291846931 = (hc_1291846879 & (t_1291846877.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0)) break Label2;
          if (((t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field0 == hc_1291846879) && (t_1291846877.data[chckIndx(h_1291846931, 0, (t_1291846877.data).length - 1)].Field1 == key_1291846878))) {
          result_1291846880 = h_1291846931;
          break BeforeRet;
          }
          
          h_1291846931 = nextTry_1308622883(h_1291846931, (t_1291846877.data).length - 1);
        }
    };
    result_1291846880 = subInt(-1, h_1291846931);
  };

  return result_1291846880;

}

function HEX5BHEX5DHEX3D_1291845847(t_1291845850, key_1291845851, val_1291845852) {
    if (((t_1291845850.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845902 = slotsNeeded_1308622891(32);
    t_1291845850.counter = 0;
    t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845902, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845907 = [0];
    var index_1291846149 = rawGet_1291845908(t_1291845850, key_1291845851, hc_1291845907, 0);
    if ((0 <= index_1291846149)) {
    t_1291845850.data[chckIndx(index_1291846149, 0, (t_1291845850.data).length - 1)].Field2 = val_1291845852;
    }
    else {
      if (((t_1291845850.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846251 = slotsNeeded_1308622891(32);
      t_1291845850.counter = 0;
      t_1291845850.data = new Array(chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846251, 0, 2147483647) ; ++i) { t_1291845850.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846256(t_1291845850)) {
      enlarge_1291846411(t_1291845850);
      index_1291846149 = rawGetKnownHC_1291846874(t_1291845850, key_1291845851, hc_1291845907[0]);
      }
      
      index_1291846149 = subInt(-1, index_1291846149);
      rawInsert_1291846705(t_1291845850, t_1291845850, "data", key_1291845851, val_1291845852, hc_1291845907[0], index_1291846149);
      t_1291845850.counter = addInt(t_1291845850.counter, 1);
    }
    

  
}

function registerEditor_1291845804(self_1291845805, editor_1291845806) {
    HEX5BHEX5DHEX3D_1291845847(self_1291845805.editors, editor_1291845806.id, editor_1291845806);
    invoke_1291847134(self_1291845805.onEditorRegistered, editor_1291845806);

  
}

function handleInput_2969584833(self_2969584834, input_2969584835) {
  var result_2969584836 = 0;

  BeforeRet: {
    result_2969584836 = 1;
    break BeforeRet;
  };

  return result_2969584836;

}

function injectDependencies_2969585228(self_2969585229, ed_2969585230) {
      
function HEX3Aanonymous_2969585250(actionHEX60gensym1086HEX60gensym1087_2969585251, argHEX60gensym1086HEX60gensym1087_2969585252) {
        var result_2969585253 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1086_2969585238.config.handleActions) {
          var action_2969585254 = nimCopy(null, actionHEX60gensym1086HEX60gensym1087_2969585251, NTI33554449);
          var arg_2969585255 = nimCopy(null, argHEX60gensym1086HEX60gensym1087_2969585252, NTI33554449);
          var responseHEX60gensym1086HEX60gensym1087_2969585256 = handleAction_2969583780(self_2969585229, action_2969585254, arg_2969585255);
          if (handlerHEX60gensym1086_2969585238.config.consumeAllActions) {
          result_2969585253 = 3;
          break BeforeRet;
          }
          
          result_2969585253 = responseHEX60gensym1086HEX60gensym1087_2969585256;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1086_2969585238.config.consumeAllActions) {
          result_2969585253 = 3;
          break BeforeRet;
          }
          else {
            result_2969585253 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585253;

      }
      
function HEX3Aanonymous_2969585258(inputHEX60gensym1086HEX60gensym1088_2969585259) {
        var result_2969585260 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1086_2969585238.config.handleInputs) {
          var input_2969585261 = nimCopy(null, inputHEX60gensym1086HEX60gensym1088_2969585259, NTI33554449);
          result_2969585260 = handleInput_2969584833(self_2969585229, input_2969585261);
          break BeforeRet;
          }
          else {
            result_2969585260 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585260;

      }
      
function HEX3Aanonymous_2969585281(actionHEX60gensym1089HEX60gensym1090_2969585282, argHEX60gensym1089HEX60gensym1090_2969585283) {
        var result_2969585284 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1089_2969585269.config.handleActions) {
          var action_2969585285 = nimCopy(null, actionHEX60gensym1089HEX60gensym1090_2969585282, NTI33554449);
          var arg_2969585286 = nimCopy(null, argHEX60gensym1089HEX60gensym1090_2969585283, NTI33554449);
          var responseHEX60gensym1089HEX60gensym1090_2969585287 = handleAction_2969583780(self_2969585229, action_2969585285, arg_2969585286);
          if (handlerHEX60gensym1089_2969585269.config.consumeAllActions) {
          result_2969585284 = 3;
          break BeforeRet;
          }
          
          result_2969585284 = responseHEX60gensym1089HEX60gensym1090_2969585287;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1089_2969585269.config.consumeAllActions) {
          result_2969585284 = 3;
          break BeforeRet;
          }
          else {
            result_2969585284 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2969585284;

      }
      
function HEX3Aanonymous_2969585289(inputHEX60gensym1089HEX60gensym1091_2969585290) {
        var result_2969585291 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1089_2969585269.config.handleInputs) {
          var input_2969585292 = nimCopy(null, inputHEX60gensym1089HEX60gensym1091_2969585290, NTI33554449);
          result_2969585291 = 1;
          break BeforeRet;
          }
          else {
            result_2969585291 = 1;
            break BeforeRet;
          }
          
        };

        return result_2969585291;

      }

    self_2969585229.editor = ed_2969585230;
    registerEditor_1291845804(self_2969585229.editor, self_2969585229);
    Label1: {
      var handlerHEX60gensym1086_2969585238 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1086_2969585238.config = getEventHandlerConfig_1291849162(ed_2969585230, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1086_2969585238.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585230, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1086_2969585238.handleAction = HEX3Aanonymous_2969585250;
      handlerHEX60gensym1086_2969585238.handleInput = HEX3Aanonymous_2969585258;
    };
    self_2969585229.eventHandler = handlerHEX60gensym1086_2969585238;
    Label2: {
      var handlerHEX60gensym1089_2969585269 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1089_2969585269.config = getEventHandlerConfig_1291849162(ed_2969585230, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1089_2969585269.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2969585230, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1089_2969585269.handleAction = HEX3Aanonymous_2969585281;
      handlerHEX60gensym1089_2969585269.handleInput = HEX3Aanonymous_2969585289;
    };
    self_2969585229.textEditEventHandler = handlerHEX60gensym1089_2969585269;

  
}

function injectDependencies_2818593925(self_2818593926, ed_2818593927) {
      
function HEX3Aanonymous_2818593948(actionHEX60gensym1031HEX60gensym1032_2818593949, argHEX60gensym1031HEX60gensym1032_2818593950) {
        var result_2818593951 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593936.config.handleActions) {
          var action_2818593952 = nimCopy(null, actionHEX60gensym1031HEX60gensym1032_2818593949, NTI33554449);
          var arg_2818593953 = nimCopy(null, argHEX60gensym1031HEX60gensym1032_2818593950, NTI33554449);
          var responseHEX60gensym1031HEX60gensym1032_2818593954 = handleAction_2818572655(self_2818593926, action_2818593952, arg_2818593953);
          if (handlerHEX60gensym1031_2818593936.config.consumeAllActions) {
          result_2818593951 = 3;
          break BeforeRet;
          }
          
          result_2818593951 = responseHEX60gensym1031HEX60gensym1032_2818593954;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1031_2818593936.config.consumeAllActions) {
          result_2818593951 = 3;
          break BeforeRet;
          }
          else {
            result_2818593951 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593951;

      }
      
function HEX3Aanonymous_2818593956(inputHEX60gensym1031HEX60gensym1033_2818593957) {
        var result_2818593958 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1031_2818593936.config.handleInputs) {
          var input_2818593959 = nimCopy(null, inputHEX60gensym1031HEX60gensym1033_2818593957, NTI33554449);
          result_2818593958 = handleInput_2818572663(self_2818593926, input_2818593959);
          break BeforeRet;
          }
          else {
            result_2818593958 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593958;

      }
      
function HEX3Aanonymous_2818593979(actionHEX60gensym1034HEX60gensym1035_2818593980, argHEX60gensym1034HEX60gensym1035_2818593981) {
        var result_2818593982 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593967.config.handleActions) {
          var action_2818593983 = nimCopy(null, actionHEX60gensym1034HEX60gensym1035_2818593980, NTI33554449);
          var arg_2818593984 = nimCopy(null, argHEX60gensym1034HEX60gensym1035_2818593981, NTI33554449);
          var responseHEX60gensym1034HEX60gensym1035_2818593985 = handleAction_2818572655(self_2818593926, action_2818593983, arg_2818593984);
          if (handlerHEX60gensym1034_2818593967.config.consumeAllActions) {
          result_2818593982 = 3;
          break BeforeRet;
          }
          
          result_2818593982 = responseHEX60gensym1034HEX60gensym1035_2818593985;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1034_2818593967.config.consumeAllActions) {
          result_2818593982 = 3;
          break BeforeRet;
          }
          else {
            result_2818593982 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818593982;

      }
      
function HEX3Aanonymous_2818593987(inputHEX60gensym1034HEX60gensym1036_2818593988) {
        var result_2818593989 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1034_2818593967.config.handleInputs) {
          var input_2818593990 = nimCopy(null, inputHEX60gensym1034HEX60gensym1036_2818593988, NTI33554449);
          result_2818593989 = handleInput_2818572663(self_2818593926, input_2818593990);
          break BeforeRet;
          }
          else {
            result_2818593989 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818593989;

      }

    self_2818593926.editor = ed_2818593927;
    registerEditor_1291845804(self_2818593926.editor, self_2818593926);
    var config_2818593928 = getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym1031_2818593936 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1031_2818593936.config = config_2818593928;
      handlerHEX60gensym1031_2818593936.dfaInternal = buildDFA_2113929279(config_2818593928);
      handlerHEX60gensym1031_2818593936.handleAction = HEX3Aanonymous_2818593948;
      handlerHEX60gensym1031_2818593936.handleInput = HEX3Aanonymous_2818593956;
    };
    self_2818593926.eventHandler = handlerHEX60gensym1031_2818593936;
    Label2: {
      var handlerHEX60gensym1034_2818593967 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1034_2818593967.config = getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1034_2818593967.dfaInternal = buildDFA_2113929279(getEventHandlerConfig_1291849162(ed_2818593927, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1034_2818593967.handleAction = HEX3Aanonymous_2818593979;
      handlerHEX60gensym1034_2818593967.handleInput = HEX3Aanonymous_2818593987;
    };
    self_2818593926.completionEventHandler = handlerHEX60gensym1034_2818593967;

  
}

function injectDependencies_1291847758(self_1291847759, ed_1291847760) {
  
}

function injectDependencies_1291847761(self_1291847759, ed_1291847760) {
    chckNilDisp(self_1291847759);
    if (isObj(self_1291847759.m_type, NTI2969568641)) {
    injectDependencies_2969585228(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2818572510)) {
    injectDependencies_2818593925(self_1291847759, ed_1291847760);
    }
    else {
    if (isObj(self_1291847759.m_type, NTI2415919108)) {
    injectDependencies_1291847758(self_1291847759, ed_1291847760);
    }
    }}

  
}

function getOrDefault_1291848310(t_1291848313, key_1291848314, default_1291848315) {
    var Temporary1;

  var result_1291848316 = 0.0;

    var hcHEX60gensym20_1291848319 = [0];
    var indexHEX60gensym20_1291848559 = rawGet_1291848320(t_1291848313, key_1291848314, hcHEX60gensym20_1291848319, 0);
    if ((0 <= indexHEX60gensym20_1291848559)) {
    Temporary1 = t_1291848313.data[chckIndx(indexHEX60gensym20_1291848559, 0, (t_1291848313.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848315;
    }
    
    result_1291848316 = Temporary1;

  return result_1291848316;

}

function value_2130706482(m_2130706483) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2130706484 = 0.0;

  BeforeRet: {
    switch (m_2130706483.kind) {
    case 0:
      var Temporary1 = m_2130706483;
      if (ConstSet324[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2130706435)); }
      result_2130706484 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2130706483;
      if (ConstSet325[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2130706435)); }
      result_2130706484 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2130706483;
      if (ConstSet326[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2130706435)); }
      result_2130706484 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2130706484;

}

function apply_2130706507(m_2130706508, a_2130706509, b_2130706510) {
  var result_2130706511 = 0.0;

  BeforeRet: {
    switch (m_2130706508.kind) {
    case 0:
      var v_2130706522 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + v_2130706522);
      break BeforeRet;
      break;
    case 1:
      var v_2130706523 = value_2130706482(m_2130706508);
      result_2130706511 = v_2130706523;
      break BeforeRet;
      break;
    case 2:
      var v_2130706524 = value_2130706482(m_2130706508);
      result_2130706511 = (a_2130706509 + (v_2130706524 * (b_2130706510 - a_2130706509)));
      break BeforeRet;
      break;
    }
  };

  return result_2130706511;

}

function splitV_2130706537(r_2130706538, x_2130706539) {
  var result_2130706542 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706542.Field0 = nimCopy(result_2130706542.Field0, r_2130706538, NTI2147483653);
    result_2130706542.Field1 = nimCopy(result_2130706542.Field1, r_2130706538, NTI2147483653);
    result_2130706542.Field0.w = (apply_2130706507(x_2130706539, r_2130706538.x, (r_2130706538.x + r_2130706538.w)) - r_2130706538.x);
    result_2130706542.Field1.x = (result_2130706542.Field0.x + result_2130706542.Field0.w);
    result_2130706542.Field1.w = (result_2130706542.Field1.w - result_2130706542.Field0.w);

  return result_2130706542;

}

function percent_2130706479(value_2130706480) {
  var result_2130706481 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2130706481 = nimCopy(result_2130706481, {kind: 2, per: value_2130706480, rel: 0.0, abs: 0.0}, NTI2130706436);
    break BeforeRet;
  };

  return result_2130706481;

}

function splitH_2130706525(r_2130706526, y_2130706527) {
  var result_2130706530 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2130706530.Field0 = nimCopy(result_2130706530.Field0, r_2130706526, NTI2147483653);
    result_2130706530.Field1 = nimCopy(result_2130706530.Field1, r_2130706526, NTI2147483653);
    result_2130706530.Field0.h = (apply_2130706507(y_2130706527, r_2130706526.y, (r_2130706526.y + r_2130706526.h)) - r_2130706526.y);
    result_2130706530.Field1.y = (result_2130706530.Field0.y + result_2130706530.Field0.h);
    result_2130706530.Field1.h = (result_2130706530.Field1.h - result_2130706530.Field0.h);

  return result_2130706530;

}

function layoutViews_1291848745(layout_1291848746, props_1291848747, bounds_1291848748, views_1291848749) {
            var Temporary4;
            var Temporary5;

  var result_1291848750 = [];

    var mainSplit_1291848823 = getOrDefault_1291848310(props_1291848747.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848750 = nimCopy(null, [], NTI1291847200);
    var rect_1291848828 = nimCopy(null, bounds_1291848748, NTI2147483653);
    Label1: {
      var i_1291848833 = 0;
      var i_536872599 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872599 < views_1291848749)) break Label3;
            i_1291848833 = i_536872599;
            if (((i_1291848833 == 0) && (1 < views_1291848749))) {
            Temporary4 = mainSplit_1291848823;
            }
            else {
            if ((i_1291848833 == subInt(views_1291848749, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848834 = Temporary4;
            if ((modInt(i_1291848833, 2) == 0)) {
            Temporary5 = splitV_2130706537(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            else {
            Temporary5 = splitH_2130706525(rect_1291848828, percent_2130706479(ratio_1291848834));
            }
            
            var colontmp__536872601 = nimCopy(null, Temporary5, NTI2130706495);
            var view_rect_1291848835 = nimCopy(null, colontmp__536872601["Field0"], NTI2147483653);
            var remaining_1291848836 = nimCopy(null, colontmp__536872601["Field1"], NTI2147483653);
            rect_1291848828 = nimCopy(rect_1291848828, remaining_1291848836, NTI2147483653);
            var Temporary6 = nimCopy(null, view_rect_1291848835, NTI2147483653);
            result_1291848750.push(Temporary6);;
            i_536872599 = addInt(i_536872599, 1);
          }
      };
    };

  return result_1291848750;

}

function layoutViews_1291848649(layout_1291848650, props_1291848651, bounds_1291848652, views_1291848653) {
            var Temporary4;

  var result_1291848654 = [];

    var mainSplit_1291848727 = getOrDefault_1291848310(props_1291848651.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848654 = nimCopy(null, [], NTI1291847200);
    var rect_1291848732 = nimCopy(null, bounds_1291848652, NTI2147483653);
    Label1: {
      var i_1291848737 = 0;
      var i_536872603 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872603 < views_1291848653)) break Label3;
            i_1291848737 = i_536872603;
            if (((i_1291848737 == 0) && (1 < views_1291848653))) {
            Temporary4 = mainSplit_1291848727;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848653, i_1291848737));
            }
            
            var ratio_1291848738 = Temporary4;
            var colontmp__536872605 = splitH_2130706525(rect_1291848732, percent_2130706479(ratio_1291848738));
            var view_rect_1291848739 = nimCopy(null, colontmp__536872605["Field0"], NTI2147483653);
            var remaining_1291848740 = nimCopy(null, colontmp__536872605["Field1"], NTI2147483653);
            rect_1291848732 = nimCopy(rect_1291848732, remaining_1291848740, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848739, NTI2147483653);
            result_1291848654.push(Temporary5);;
            i_536872603 = addInt(i_536872603, 1);
          }
      };
    };

  return result_1291848654;

}

function layoutViews_1291848238(layout_1291848239, props_1291848240, bounds_1291848241, views_1291848242) {
            var Temporary4;

  var result_1291848243 = [];

    var mainSplit_1291848613 = getOrDefault_1291848310(props_1291848240.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848243 = nimCopy(null, [], NTI1291847200);
    var rect_1291848618 = nimCopy(null, bounds_1291848241, NTI2147483653);
    Label1: {
      var i_1291848623 = 0;
      var i_536872607 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872607 < views_1291848242)) break Label3;
            i_1291848623 = i_536872607;
            if (((i_1291848623 == 0) && (1 < views_1291848242))) {
            Temporary4 = mainSplit_1291848613;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848242, i_1291848623));
            }
            
            var ratio_1291848624 = Temporary4;
            var colontmp__536872609 = splitV_2130706537(rect_1291848618, percent_2130706479(ratio_1291848624));
            var view_rect_1291848625 = nimCopy(null, colontmp__536872609["Field0"], NTI2147483653);
            var remaining_1291848626 = nimCopy(null, colontmp__536872609["Field1"], NTI2147483653);
            rect_1291848618 = nimCopy(rect_1291848618, remaining_1291848626, NTI2147483653);
            var Temporary5 = nimCopy(null, view_rect_1291848625, NTI2147483653);
            result_1291848243.push(Temporary5);;
            i_536872607 = addInt(i_536872607, 1);
          }
      };
    };

  return result_1291848243;

}

function layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848213 = [];

  BeforeRet: {
    result_1291848213 = nimCopy(null, [nimCopy(null, bounds_1291848211, NTI2147483653)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848213;

}

function layoutViews_1291848236(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212) {
  var result_1291848237 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848209);
    if (isObj(layout_1291848209.m_type, NTI1291845645)) {
    result_1291848237 = layoutViews_1291848745(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845644)) {
    result_1291848237 = layoutViews_1291848649(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845643)) {
    result_1291848237 = layoutViews_1291848238(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848209.m_type, NTI1291845642)) {
    result_1291848237 = layoutViews_1291848208(layout_1291848209, props_1291848210, bounds_1291848211, views_1291848212);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848237;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850989(self_1291850990, other_1291850991) {
  var result_1291850992 = false;

  BeforeRet: {
    var other_1291850993 = other_1291850991;
    result_1291850992 = (!(eqStrings(self_1291850990.name, other_1291850993.name)) || !(eqStrings(self_1291850990.path, other_1291850993.path)));
    break BeforeRet;
  };

  return result_1291850992;

}

function changed_1291850975(self_1291850976, other_1291850977) {
  var result_1291850978 = false;

  BeforeRet: {
    var other_1291850979 = other_1291850977;
    result_1291850978 = !(eqStrings(self_1291850976.path, other_1291850979.path));
    break BeforeRet;
  };

  return result_1291850978;

}

function changed_2969582438(self_2969582439, other_2969582440) {
    var Temporary1;

  var result_2969582441 = false;

  BeforeRet: {
    var other_2969582442 = other_2969582440;
    var Temporary1 = other_2969582442.completion;
    if (ConstSet327[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2969568637)); }
    result_2969582441 = !(HEX3DHEX3D_2046820626(self_2969582439.completion.id, Temporary1.id));
    break BeforeRet;
  };

  return result_2969582441;

}

function changed_3187671108(self_3187671109, other_3187671110) {
  var result_3187671111 = false;

  return result_3187671111;

}

function changed_3187671112(self_3187671109, other_3187671110) {
  var result_3187671113 = false;

  BeforeRet: {
    chckNilDisp(self_3187671109);
    if (isObj(self_3187671109.m_type, NTI1291848506)) {
    result_3187671113 = changed_1291850989(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI1291848508)) {
    result_3187671113 = changed_1291850975(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI2969577305)) {
    result_3187671113 = changed_2969582438(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    else {
    if (isObj(self_3187671109.m_type, NTI3187671048)) {
    result_3187671113 = changed_3187671108(self_3187671109, other_3187671110);
    break BeforeRet;
    }
    }}}
  };

  return result_3187671113;

}

function active_2415919218(self_2415919219) {
  var result_2415919220 = false;

    result_2415919220 = self_2415919219.active;

  return result_2415919220;

}

function updateBackgroundColor_2785018193(self_2785018194, color_2785018195, frameIndex_2785018196) {
    if (!(HEX3DHEX3D_2785018183(self_2785018194.backgroundColor, color_2785018195))) {
    self_2785018194.lastHierarchyChange = nimMax(self_2785018194.lastHierarchyChange, frameIndex_2785018196);
    }
    
    self_2785018194.backgroundColor = nimCopy(self_2785018194.backgroundColor, color_2785018195, NTI2550136835);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function dirty_2415919140(self_2415919141) {
  var result_2415919142 = false;

    result_2415919142 = self_2415919141.mDirty;

  return result_2415919142;

}

function changed_2785018364(self_2785018365, frameIndex_2785018366) {
  var result_2785018367 = false;

    result_2785018367 = (((frameIndex_2785018366 <= self_2785018365.lastBoundsChange) || (frameIndex_2785018366 <= self_2785018365.lastHierarchyChange)) || (frameIndex_2785018366 <= self_2785018365.lastInvalidation));

  return result_2785018367;

}

function resetDirty_2415919213(self_2415919214) {
    self_2415919214.mDirty = false;

  
}

function clamp_3321888884(val_3321888886, bounds_3321888887) {
  var result_3321888888 = 0;

    if (!((bounds_3321888887.a <= bounds_3321888887.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2449473857({Field0: bounds_3321888887.a, Field1: bounds_3321888887.b}) || []));
    }
    
    result_3321888888 = clamp_1660945119(val_3321888886, bounds_3321888887.a, bounds_3321888887.b);

  return result_3321888888;

}

function initTable_3305111668(initialSize_3305111671) {
  var result_3305111672 = ({data: [], counter: 0});

    var correctSizeHEX60gensym1_3305111674 = slotsNeeded_1308622891(chckRange(initialSize_3305111671, 0, 2147483647));
    result_3305111672.counter = 0;
    result_3305111672.data = new Array(chckRange(correctSizeHEX60gensym1_3305111674, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_3305111674, 0, 2147483647) ; ++i) { result_3305111672.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3305111672;

}

function updateBaseIndexAndScrollOffset_3305111653(self_3305111654, app_3305111655, contentPanel_3305111656) {
          
function HEX3Aanonymous_3305111710(t_3305111713) {
            var result_3305111716 = ({x: 0.0, y: 0.0});

              result_3305111716 = nimCopy(result_3305111716, measureText_2768240805(self_3305111654.editor.platform, t_3305111713), NTI2164261152);

            return result_3305111716;

          }
          
function HEX3Aanonymous_3305111727(t_3305111730) {
            var result_3305111733 = ({x: 0.0, y: 0.0});

              result_3305111733 = nimCopy(result_3305111733, measureText_2768240805(self_3305111654.editor.platform, t_3305111730), NTI2164261152);

            return result_3305111733;

          }

    var totalLineHeight_3305111657 = totalLineHeight_2768240810(app_3305111655.platform);
    self_3305111654.previousBaseIndex = clamp_3321888884(self_3305111654.previousBaseIndex, HEX2EHEX2E_805306418(0, len_3003121752(self_3305111654.document.rootNode)));
    var selectedNodeId_3305111667 = nimCopy(null, node_2969569752(self_3305111654).id, NTI2046820355);
    var replacements_3305111679 = initTable_3305111668(32);
    var indent_3305111689 = getOption_2818583576(app_3305111655, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3305111699 = getOption_2818583615(app_3305111655, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3305111709 = getOption_2818583615(app_3305111655, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    Label1: {
        Label2: while (true) {
        if (!((self_3305111654.scrollOffset < 0.0) && (addInt(self_3305111654.previousBaseIndex, 1) < len_3003121752(self_3305111654.document.rootNode)))) break Label2;
          var input_3305111717 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3305111654.document.rootNode, self_3305111654.previousBaseIndex), selectedNode: nimCopy(null, selectedNodeId_3305111667, NTI2046820355), replacements: nimCopy(null, replacements_3305111679, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3305111710, indent: indent_3305111689, renderDivisionVertically: verticalDivision_3305111709, inlineBlocks: inlineBlocks_3305111699, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3305111718 = computeNodeLayout_3019934745(ctx_2969567289, input_3305111717, true);
          if ((contentPanel_3305111656.lastBounds.h <= ((self_3305111654.scrollOffset + bounds_3087009979(layout_3305111718).h) + totalLineHeight_3305111657))) {
          break Label1;
          }
          
          self_3305111654.previousBaseIndex = addInt(self_3305111654.previousBaseIndex, 1);
          HEX2BHEX3D_855640304(self_3305111654, "scrollOffset", (bounds_3087009979(layout_3305111718).h + totalLineHeight_3305111657));
        }
    };
    Label3: {
        Label4: while (true) {
        if (!((contentPanel_3305111656.lastBounds.h < self_3305111654.scrollOffset) && (0 < self_3305111654.previousBaseIndex))) break Label4;
          var input_3305111734 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: HEX5BHEX5D_3003121748(self_3305111654.document.rootNode, subInt(self_3305111654.previousBaseIndex, 1)), selectedNode: nimCopy(null, selectedNodeId_3305111667, NTI2046820355), replacements: nimCopy(null, replacements_3305111679, NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3305111727, indent: indent_3305111689, renderDivisionVertically: verticalDivision_3305111709, inlineBlocks: inlineBlocks_3305111699, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var layout_3305111735 = computeNodeLayout_3019934745(ctx_2969567289, input_3305111734, true);
          if (((self_3305111654.scrollOffset - bounds_3087009979(layout_3305111735).h) <= 0.0)) {
          break Label3;
          }
          
          self_3305111654.previousBaseIndex = subInt(self_3305111654.previousBaseIndex, 1);
          HEX2DHEX3D_2818594211(self_3305111654, "scrollOffset", (bounds_3087009979(layout_3305111735).h + totalLineHeight_3305111657));
        }
    };

  
}

function mustRehash_3305113569(t_3305113571) {
  var result_3305113572 = false;

    if (!((t_3305113571.counter < (t_3305113571.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3305113572 = ((mulInt((t_3305113571.data).length, 2) < mulInt(t_3305113571.counter, 3)) || (subInt((t_3305113571.data).length, t_3305113571.counter) < 4));

  return result_3305113572;

}

function rawInsert_3305114018(t_3305114022, data_3305114023, data_3305114023_Idx, key_3305114024, val_3305114025, hc_3305114026, h_3305114027) {
    data_3305114023[data_3305114023_Idx][chckIndx(h_3305114027, 0, (data_3305114023[data_3305114023_Idx]).length - 1)].Field1 = nimCopy(data_3305114023[data_3305114023_Idx][chckIndx(h_3305114027, 0, (data_3305114023[data_3305114023_Idx]).length - 1)].Field1, key_3305114024, NTI2046820355);
    data_3305114023[data_3305114023_Idx][chckIndx(h_3305114027, 0, (data_3305114023[data_3305114023_Idx]).length - 1)].Field2 = val_3305114025;
    data_3305114023[data_3305114023_Idx][chckIndx(h_3305114027, 0, (data_3305114023[data_3305114023_Idx]).length - 1)].Field0 = hc_3305114026;

  
}

function enlarge_3305113724(t_3305113727) {
    var n_3305113730 = [];
    n_3305113730 = new Array(chckRange(mulInt((t_3305113727.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3305113727.data).length, 2), 0, 2147483647) ; ++i) { n_3305113730[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3305113727.data; t_3305113727.data = n_3305113730; n_3305113730 = Temporary1;    Label2: {
      var i_3305113794 = 0;
      var colontmp__536872621 = 0;
      colontmp__536872621 = (n_3305113730).length - 1;
      var res_536872622 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872622 <= colontmp__536872621)) break Label4;
            i_3305113794 = res_536872622;
            var eh_3305113848 = n_3305113730[chckIndx(i_3305113794, 0, (n_3305113730).length - 1)].Field0;
            if (isFilled_1308622880(eh_3305113848)) {
            var j_3305113852 = (eh_3305113848 & (t_3305113727.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3305113727.data[chckIndx(j_3305113852, 0, (t_3305113727.data).length - 1)].Field0)) break Label6;
                  j_3305113852 = nextTry_1308622883(j_3305113852, (t_3305113727.data).length - 1);
                }
            };
            rawInsert_3305114018(t_3305113727, t_3305113727, "data", n_3305113730[chckIndx(i_3305113794, 0, (n_3305113730).length - 1)].Field1, n_3305113730[chckIndx(i_3305113794, 0, (n_3305113730).length - 1)].Field2, eh_3305113848, j_3305113852);
            }
            
            res_536872622 = addInt(res_536872622, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3305114187(t_3305114190, key_3305114191, hc_3305114192) {
  var result_3305114193 = 0;

  BeforeRet: {
    if (((t_3305114190.data).length == 0)) {
    result_3305114193 = -1;
    break BeforeRet;
    }
    
    var h_3305114244 = (hc_3305114192 & (t_3305114190.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3305114190.data[chckIndx(h_3305114244, 0, (t_3305114190.data).length - 1)].Field0)) break Label2;
          if (((t_3305114190.data[chckIndx(h_3305114244, 0, (t_3305114190.data).length - 1)].Field0 == hc_3305114192) && HEX3DHEX3D_2046820626(t_3305114190.data[chckIndx(h_3305114244, 0, (t_3305114190.data).length - 1)].Field1, key_3305114191))) {
          result_3305114193 = h_3305114244;
          break BeforeRet;
          }
          
          h_3305114244 = nextTry_1308622883(h_3305114244, (t_3305114190.data).length - 1);
        }
    };
    result_3305114193 = subInt(-1, h_3305114244);
  };

  return result_3305114193;

}

function HEX5BHEX5DHEX3D_3305113396(t_3305113399, key_3305113400, val_3305113401) {
    if (((t_3305113399.data).length == 0)) {
    var correctSizeHEX60gensym55_3305113450 = slotsNeeded_1308622891(32);
    t_3305113399.counter = 0;
    t_3305113399.data = new Array(chckRange(correctSizeHEX60gensym55_3305113450, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym55_3305113450, 0, 2147483647) ; ++i) { t_3305113399.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3305113455 = [0];
    var index_3305113462 = rawGet_3087010450(t_3305113399, key_3305113400, hc_3305113455, 0);
    if ((0 <= index_3305113462)) {
    t_3305113399.data[chckIndx(index_3305113462, 0, (t_3305113399.data).length - 1)].Field2 = val_3305113401;
    }
    else {
      if (((t_3305113399.data).length == 0)) {
      var correctSizeHEX60gensym58_3305113564 = slotsNeeded_1308622891(32);
      t_3305113399.counter = 0;
      t_3305113399.data = new Array(chckRange(correctSizeHEX60gensym58_3305113564, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3305113564, 0, 2147483647) ; ++i) { t_3305113399.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3305113569(t_3305113399)) {
      enlarge_3305113724(t_3305113399);
      index_3305113462 = rawGetKnownHC_3305114187(t_3305113399, key_3305113400, hc_3305113455[0]);
      }
      
      index_3305113462 = subInt(-1, index_3305113462);
      rawInsert_3305114018(t_3305113399, t_3305113399, "data", key_3305113400, val_3305113401, hc_3305113455[0], index_3305113462);
      t_3305113399.counter = addInt(t_3305113399.counter, 1);
    }
    

  
}

function isSome_3305111774(self_3305111776) {
  var result_3305111777 = false;

    result_3305111777 = self_3305111776.has;

  return result_3305111777;

}

function isNone_3305111799(self_3305111801) {
  var result_3305111802 = false;

    result_3305111802 = !(self_3305111801.has);

  return result_3305111802;

}

function get_3305111791(self_3305111793) {
  var result_3305111794 = [];

    if (isNone_3305111799(self_3305111793)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3305111794 = self_3305111793["val"];

  return result_3305111794;

}

function isSome_3221226333(self_3221226335) {
  var result_3221226336 = false;

    result_3221226336 = self_3221226335.has;

  return result_3221226336;

}

function isNone_3221226358(self_3221226360) {
  var result_3221226361 = false;

    result_3221226361 = !(self_3221226360.has);

  return result_3221226361;

}

function get_3221226350(self_3221226352) {
  var result_3221226353 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isNone_3221226358(self_3221226352)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226353 = self_3221226352.val;

  return result_3221226353;

}

function anyColor_3221225984(theme_3221225986, names_3221225987, default_3221225988) {
  var result_3221225989 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3221225993 = [];
      var i_536872660 = 0;
      var L_536872661 = (names_3221225987).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872660 < L_536872661)) break Label3;
            name_3221225993 = names_3221225987[chckIndx(i_536872660, 0, (names_3221225987).length - 1)];
            if (nsuStartsWith(name_3221225993, [35])) {
            result_3221225989 = nimCopy(result_3221225989, parseHexVar_2516582448(name_3221225993), NTI2550136835);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_3221225993, [38]) && contains_3221226054(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))))) {
            result_3221225989 = nimCopy(result_3221225989, HEX5BHEX5D_3221226144(theme_3221225986.colors, HEX5BHEX5D_855639319(name_3221225993, HEX2EHEX2E_1040187488(1, 1))), NTI2550136835);
            break BeforeRet;
            }
            else {
            if (contains_2516582652(theme_3221225986.tokenColors, name_3221225993)) {
            var style_3221226328 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3221225986.tokenColors, name_3221225993), NTI2516582404);
            if (isSome_3221226333(style_3221226328.foreground)) {
            result_3221225989 = nimCopy(result_3221225989, get_3221226350(style_3221226328.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            }}
            i_536872660 = addInt(i_536872660, 1);
            if (!(((names_3221225987).length == L_536872661))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3221225989 = nimCopy(result_3221225989, color_2634022945(default_3221225988), NTI2550136835);
    break BeforeRet;
  };

  return result_3221225989;

}

function tokenFontStyle_2516583089(theme_2516583090, names_2516583091) {
  var result_2516583092 = {};

  BeforeRet: {
    Label1: {
      var name_2516583096 = [];
      var i_536872664 = 0;
      var L_536872665 = (names_2516583091).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872664 < L_536872665)) break Label3;
            name_2516583096 = names_2516583091[chckIndx(i_536872664, 0, (names_2516583091).length - 1)];
            if (contains_2516582652(theme_2516583090.tokenColors, name_2516583096)) {
            result_2516583092 = nimCopy(result_2516583092, HEX5BHEX5D_2516582957(theme_2516583090.tokenColors, name_2516583096).fontStyle, NTI2516582848);
            break BeforeRet;
            }
            
            i_536872664 = addInt(i_536872664, 1);
            if (!(((names_2516583091).length == L_536872665))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2516583092 = nimCopy(result_2516583092, ConstSet328, NTI2516582848);
    break BeforeRet;
  };

  return result_2516583092;

}

function isSome_3221226382(self_3221226384) {
  var result_3221226385 = false;

    result_3221226385 = self_3221226384.has;

  return result_3221226385;

}

function isNone_3221226407(self_3221226409) {
  var result_3221226410 = false;

    result_3221226410 = !(self_3221226409.has);

  return result_3221226410;

}

function get_3221226399(self_3221226401) {
  var result_3221226402 = {};

    if (isNone_3221226407(self_3221226401)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226402 = self_3221226401.val;

  return result_3221226402;

}

function createPartWidget_3321888836(text_3321888837, startOffset_3321888838, width_3321888839, height_3321888840, color_3321888841, frameIndex_3321888842) {
  var result_3321890603 = null;

    result_3321890603 = ({m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3321890603.text = text_3321888837.slice(0);
    result_3321890603.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 0}};
    result_3321890603.left = startOffset_3321888838;
    result_3321890603.right = startOffset_3321888838 + width_3321888839;
    result_3321890603.bottom = height_3321888840;
    result_3321890603.frameIndex = frameIndex_3321888842;
    result_3321890603.foregroundColor = color_3321888841;

  return result_3321890603;

}

function withAlpha_3305111576(color_3305111577, alpha_3305111578) {
  var result_3305111579 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_3305111579 = nimCopy(result_3305111579, color_2550136904(color_3305111577.r, color_3305111577.g, color_3305111577.b, alpha_3305111578), NTI2550136835);

  return result_3305111579;

}

function renderVisualNode_3305111744(self_3305111745, app_3305111746, node_3305111747, selected_3305111748, bounds_3305111749, offset_3305111750, widget_3305111751, frameIndex_3305111752) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var charWidth_3305111753 = charWidth_2768240799(app_3305111746.platform);
    if (!((node_3305111747.widgetTemplate == null))) {
    var nodeWidget_3305111757 = node_3305111747.widgetTemplate;
    if (node_3305111747.cloneWidget) {
    nodeWidget_3305111757 = clone_2785018997(nodeWidget_3305111757);
    }
    
    nodeWidget_3305111757.left = node_3305111747.bounds.x;
    nodeWidget_3305111757.top = node_3305111747.bounds.y;
    nodeWidget_3305111757.right = (node_3305111747.bounds.x + node_3305111747.bounds.w);
    nodeWidget_3305111757.bottom = (node_3305111747.bounds.y + node_3305111747.bounds.h);
    widget_3305111751.children.push(nodeWidget_3305111757);;
    break BeforeRet;
    }
    
    var panel_3305111762 = {left: node_3305111747.bounds.x, right: (node_3305111747.bounds.x + node_3305111747.bounds.w), top: node_3305111747.bounds.y, bottom: (node_3305111747.bounds.y + node_3305111747.bounds.h), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3305111751.children.push(panel_3305111762);;
      var oHEX60gensym10_3305111769 = nimCopy(null, node_3305111747.background, NTI3087007803);
      if (!isSome_3305111774(oHEX60gensym10_3305111769)) Temporary1 = false; else {        var colors_3305111814 = nimCopy(null, get_3305111791(oHEX60gensym10_3305111769), NTI3087007798);
        Temporary1 = true;      }    if (Temporary1) {
    var color_3305111820 = anyColor_3221225984(app_3305111746.theme, colors_3305111814, rgb_2550136919(255, 255, 255));
    panel_3305111762.backgroundColor = nimCopy(panel_3305111762.backgroundColor, color_3305111820, NTI2550136835);
    panel_3305111762.fillBackground = true;
    }
    
    if ((0 < (node_3305111747.text).length)) {
    var color_3305111826 = anyColor_3221225984(app_3305111746.theme, node_3305111747.colors, rgb_2550136919(255, 255, 255));
    var style_3305111827 = tokenFontStyle_2516583089(app_3305111746.theme, node_3305111747.colors);
      var oHEX60gensym13_3305111830 = nimCopy(null, node_3305111747.styleOverride, NTI3087007788);
      if (!isSome_3221226382(oHEX60gensym13_3305111830)) Temporary2 = false; else {        var override_3305111853 = nimCopy(null, get_3221226399(oHEX60gensym13_3305111830), NTI3087007783);
        Temporary2 = true;      }    if (Temporary2) {
    style_3305111827 = nimCopy(style_3305111827, SetPlus(style_3305111827, override_3305111853), NTI2516582848);
    }
    
    var textWidget_3305111859 = createPartWidget_3321888836(node_3305111747.text, node_3305111747.bounds.x, ((node_3305111747.text).length * charWidth_3305111753), totalLineHeight_2768240810(app_3305111746.platform), color_3305111826, frameIndex_3305111752);
    textWidget_3305111859.style.fontStyle = nimCopy(textWidget_3305111859.style.fontStyle, style_3305111827, NTI2516582423);
    textWidget_3305111859.top = node_3305111747.bounds.y;
    textWidget_3305111859.bottom = (node_3305111747.bounds.y + node_3305111747.bounds.h);
    widget_3305111751.children.push(textWidget_3305111859);;
    }
    
    if ((0 < (node_3305111747.children).length)) {
    Label3: {
      var child_3305111873 = null;
      var i_536872656 = 0;
      var L_536872657 = (node_3305111747.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536872656 < L_536872657)) break Label5;
            child_3305111873 = node_3305111747.children[chckIndx(i_536872656, 0, (node_3305111747.children).length - 1)];
            renderVisualNode_3305111744(self_3305111745, app_3305111746, child_3305111873, selected_3305111748, bounds_3305111749, offset_3305111750, panel_3305111762, frameIndex_3305111752);
            i_536872656 = addInt(i_536872656, 1);
            if (!(((node_3305111747.children).length == L_536872657))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    if ((!((node_3305111747.node == null)) && (HEX3DHEX3D_2046820626(node_2969569752(self_3305111745).id, node_3305111747.node.reff) || (HEX3DHEX3D_2046820626(node_2969569752(self_3305111745).reff, node_3305111747.node.reff) && !(HEX3DHEX3D_2046820626(node_3305111747.node.reff, null_2046820646)))))) {
    panel_3305111762.fillBackground = true;
    panel_3305111762.allowAlpha = true;
    panel_3305111762.drawBorder = true;
    panel_3305111762.backgroundColor = nimCopy(panel_3305111762.backgroundColor, withAlpha_3305111576(color_3321888961(app_3305111746.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), 0.25), NTI2550136835);
    panel_3305111762.foregroundColor = nimCopy(panel_3305111762.foregroundColor, color_3321888961(app_3305111746.theme, [102,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 255)), NTI2550136835);
    }
    else {
    if ((!((node_3305111747.node == null)) && HEX3DHEX3D_2046820626(node_2969569752(self_3305111745).reff, node_3305111747.node.id))) {
    panel_3305111762.fillBackground = true;
    panel_3305111762.allowAlpha = true;
    panel_3305111762.drawBorder = true;
    panel_3305111762.backgroundColor = nimCopy(panel_3305111762.backgroundColor, withAlpha_3305111576(color_3321888961(app_3305111746.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), 0.25), NTI2550136835);
    panel_3305111762.foregroundColor = nimCopy(panel_3305111762.foregroundColor, color_3321888961(app_3305111746.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], rgb_2550136919(175, 255, 200)), NTI2550136835);
    }
    }
  };

  
}

function len_3221226665(t_3221226668) {
  var result_3221226669 = 0;

    result_3221226669 = t_3221226668.counter;

  return result_3221226669;

}

function color_3305112478(theme_3305112480, name_3305112481, default_3305112482) {
  var result_3305112483 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3305112483 = nimCopy(result_3305112483, getCascading_3321888972(theme_3305112480.colors, name_3305112481, color_2634023294(default_3305112482)), NTI2550136835);
    break BeforeRet;
  };

  return result_3305112483;

}

function color_3305112057(theme_3305112059, names_3305112060, default_3305112061) {
  var result_3305112062 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3305112066 = [];
      var i_536872677 = 0;
      var L_536872678 = (names_3305112060).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872677 < L_536872678)) break Label3;
            name_3305112066 = names_3305112060[chckIndx(i_536872677, 0, (names_3305112060).length - 1)];
            if (contains_3221226054(theme_3305112059.colors, name_3305112066)) {
            result_3305112062 = nimCopy(result_3305112062, HEX5BHEX5D_3221226144(theme_3305112059.colors, name_3305112066), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872677 = addInt(i_536872677, 1);
            if (!(((names_3305112060).length == L_536872678))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3305112062 = nimCopy(result_3305112062, color_2634023294(default_3305112061), NTI2550136835);
    break BeforeRet;
  };

  return result_3305112062;

}

function insert_3305112174(x_3305112176, x_3305112176_Idx, item_3305112177, i_3305112178) {
    var it_3305112198 = null;
    x_3305112176[x_3305112176_Idx] = x_3305112176[x_3305112176_Idx] || []; x_3305112176[x_3305112176_Idx].splice(i_3305112178, 0, it_3305112198);
    x_3305112176[x_3305112176_Idx][chckIndx(i_3305112178, 0, (x_3305112176[x_3305112176_Idx]).length - 1)] = item_3305112177;

  
}

function renderBlockIndent_3305111902(editor_3305111903, app_3305111904, layout_3305111905, node_3305111906, offset_3305111907, widget_3305111908) {
              var Temporary5;

  BeforeRet: {
    var indentLineWidth_3305111918 = getOption_2818583576(app_3305111904, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,119,105,100,116,104], 1.0);
    var indentLineAlpha_3305111928 = getOption_2818583576(app_3305111904, [97,115,116,46,105,110,100,101,110,116,45,108,105,110,101,45,97,108,112,104,97], 1.0);
    if ((indentLineWidth_3305111918 <= 0.0)) {
    break BeforeRet;
    }
    
    Label1: {
      var __3305111929 = 0;
      var child_3305111930 = null;
      var n_536872668 = node_3305111906;
      var idx_536872669 = -1;
      var i_536872670 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536872669 == -1)) {
            var colontmp__536872673 = nimCopy(null, {Field0: i_536872670, Field1: n_536872668}, NTI3003123002);
            __3305111929 = colontmp__536872673["Field0"];
            child_3305111930 = colontmp__536872673["Field1"];
            if (((child_3305111930.kind == 7) && contains_2969569863(layout_3305111905.nodeToVisualNode, child_3305111930.id))) {
            var visualRange_3305112040 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3305111905.nodeToVisualNode, child_3305111930.id), NTI3087007774);
            var bounds_3305112041 = absoluteBounds_3087009583(visualRange_3305112040);
            var indent_3305112042 = addInt(modInt(subInt(HEX5BHEX5D_3087007967(visualRange_3305112040.parent, visualRange_3305112040.first).indent, 1), 6), 1);
            var fmtRes_3305112047 = [mnewString(0)];
            fmtRes_3305112047[0].push.apply(fmtRes_3305112047[0], [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100]);;
            formatValue_2701131945(fmtRes_3305112047, 0, indent_3305112042, []);
            var color_3305112172 = withAlpha_3305111576(color_3305112057(app_3305111904.theme, [nimCopy(null, fmtRes_3305112047[0], NTI33554449), [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], {r: 0.0, g: 0.0, b: 0.0, a: 1.0}), indentLineAlpha_3305111928);
            var panel_3305112173 = {left: bounds_3305112041.x, right: (bounds_3305112041.x + indentLineWidth_3305111918), top: bounds_3305112041.y, bottom: (bounds_3305112041.y + bounds_3305112041.h), fillBackground: true, allowAlpha: true, backgroundColor: nimCopy(null, color_3305112172, NTI2550136835), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false};
            insert_3305112174(widget_3305111908, "children", panel_3305112173, 0);
            }
            
            }
            
            if ((addInt(idx_536872669, 1) < len_3003121752(n_536872668))) {
            n_536872668 = HEX5BHEX5D_3003121748(n_536872668, addInt(idx_536872669, 1));
            idx_536872669 = -1;
            }
            else {
              var oHEX60gensym74_536872674 = next_3003121857(n_536872668);
              if (!isSome_3003123546(oHEX60gensym74_536872674)) Temporary5 = false; else {                var ne_536872675 = get_3003123566(oHEX60gensym74_536872674);
                Temporary5 = true;              }            if (Temporary5) {
            n_536872668 = ne_536872675;
            idx_536872669 = -1;
            }
            else {
            if ((!((n_536872668.parent == null)) && !((n_536872668.parent == node_3305111906)))) {
            idx_536872669 = index_3003121772(n_536872668);
            n_536872668 = n_536872668.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536872670 = addInt(i_536872670, 1);
            }
          }
      };
    };
  };

  
}

function renderVisualNodeLayout_3305112199(self_3305112200, app_3305112201, node_3305112202, bounds_3305112203, layout_3305112204, offset_3305112205, contentWidget_3305112206, frameIndex_3305112207) {
    var totalLineHeight_3305112208 = totalLineHeight_2768240810(app_3305112201.platform);
    var charWidth_3305112209 = charWidth_2768240799(app_3305112201.platform);
    self_3305112200.lastLayouts.push({Field0: layout_3305112204, Field1: nimCopy(null, offset_3305112205, NTI2164261152)});;
    var widget_3305112214 = {left: bounds_3087009979(layout_3305112204).x, right: (bounds_3087009979(layout_3305112204).x + bounds_3087009979(layout_3305112204).w), top: (bounds_3087009979(layout_3305112204).y + offset_3305112205.y), bottom: ((bounds_3087009979(layout_3305112204).y + bounds_3087009979(layout_3305112204).h) + offset_3305112205.y), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    Label1: {
      var line_3305112218 = null;
      var i_536872626 = 0;
      var L_536872627 = (layout_3305112204.root.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872626 < L_536872627)) break Label3;
            line_3305112218 = layout_3305112204.root.children[chckIndx(i_536872626, 0, (layout_3305112204.root.children).length - 1)];
            renderVisualNode_3305111744(self_3305112200, app_3305112201, line_3305112218, node_2969569752(self_3305112200), bounds_3305112203, offset_3305112205, widget_3305112214, frameIndex_3305112207);
            i_536872626 = addInt(i_536872626, 1);
            if (!(((layout_3305112204.root.children).length == L_536872627))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    contentWidget_3305112206.children.push(widget_3305112214);;
    var errorColor_3305112228 = color_3321888961(app_3305112201.theme, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(255, 0, 0));
    Label4: {
      var id_3305112233 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var visualRange_3305112234 = ({parent: null, first: 0, last: 0});
      var L_536872647 = len_3221226665(layout_3305112204.nodeToVisualNode);
      Label5: {
        var h_536872649 = 0;
        var colontmp__536872650 = 0;
        colontmp__536872650 = (layout_3305112204.nodeToVisualNode.data).length - 1;
        var res_536872651 = 0;
        Label6: {
            Label7: while (true) {
            if (!(res_536872651 <= colontmp__536872650)) break Label7;
              h_536872649 = res_536872651;
              if (isFilled_1308622880(layout_3305112204.nodeToVisualNode.data[chckIndx(h_536872649, 0, (layout_3305112204.nodeToVisualNode.data).length - 1)].Field0)) {
              var colontmp__536872654 = nimCopy(null, {Field0: nimCopy(null, layout_3305112204.nodeToVisualNode.data[chckIndx(h_536872649, 0, (layout_3305112204.nodeToVisualNode.data).length - 1)].Field1, NTI2046820355), Field1: nimCopy(null, layout_3305112204.nodeToVisualNode.data[chckIndx(h_536872649, 0, (layout_3305112204.nodeToVisualNode.data).length - 1)].Field2, NTI3087007774)}, NTI3221226150);
              id_3305112233 = nimCopy(id_3305112233, colontmp__536872654["Field0"], NTI2046820355);
              visualRange_3305112234 = nimCopy(visualRange_3305112234, colontmp__536872654["Field1"], NTI3087007774);
              if (contains_3019944168(ctx_2969567289.diagnosticsPerNode, id_3305112233)) {
              var foundErrors_3305112282 = false;
              var bounds_3305112292 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3305112234), offset_3305112205);
              var last_3305112293 = rect_2147483672(xy_2147483680(bounds_3305112292), vec2_2164261686());
              Label8: {
                var diagnostics_3305112356 = [];
                var colontmp__536872636 = ({data: [], counter: 0});
                colontmp__536872636 = nimCopy(colontmp__536872636, HEX5BHEX5D_3019940810(ctx_2969567289.diagnosticsPerNode, id_3305112233).queries, NTI3019898894);
                var L_536872637 = len_3221227056(colontmp__536872636);
                Label9: {
                  var h_536872639 = 0;
                  var colontmp__536872640 = 0;
                  colontmp__536872640 = (colontmp__536872636.data).length - 1;
                  var res_536872641 = 0;
                  Label10: {
                      Label11: while (true) {
                      if (!(res_536872641 <= colontmp__536872640)) break Label11;
                        h_536872639 = res_536872641;
                        if (isFilled_1308622880(colontmp__536872636.data[chckIndx(h_536872639, 0, (colontmp__536872636.data).length - 1)].Field0)) {
                        diagnostics_3305112356 = colontmp__536872636.data[chckIndx(h_536872639, 0, (colontmp__536872636.data).length - 1)]["Field2"];
                        Label12: {
                          var diagnostic_3305112360 = ({message: []});
                          var i_536872633 = 0;
                          var L_536872634 = (diagnostics_3305112356).length;
                          Label13: {
                              Label14: while (true) {
                              if (!(i_536872633 < L_536872634)) break Label14;
                                diagnostic_3305112360 = diagnostics_3305112356[chckIndx(i_536872633, 0, (diagnostics_3305112356).length - 1)];
                                var panel_3305112361 = {text: nimCopy(null, diagnostic_3305112360.message, NTI33554449), left: (-((diagnostic_3305112360.message).length) * charWidth_3305112209), right: 0.0, top: (last_3305112293.y + last_3305112293.h), bottom: ((last_3305112293.y + last_3305112293.h) + totalLineHeight_3305112208), anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), sizeToContent: true, foregroundColor: nimCopy(null, errorColor_3305112228, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                                contentWidget_3305112206.children.push(panel_3305112361);;
                                foundErrors_3305112282 = true;
                                i_536872633 = addInt(i_536872633, 1);
                                if (!(((diagnostics_3305112356).length == L_536872634))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!((len_3221227056(colontmp__536872636) == L_536872637))) {
                        failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        res_536872641 = addInt(res_536872641, 1);
                      }
                  };
                };
              };
              if (foundErrors_3305112282) {
              var panel_3305112366 = {left: bounds_3305112292.x, right: (bounds_3305112292.x + bounds_3305112292.w), top: bounds_3305112292.y, bottom: (bounds_3305112292.y + bounds_3305112292.h), allowAlpha: true, fillBackground: true, drawBorder: true, backgroundColor: withAlpha_3305111576(errorColor_3305112228, 0.25), foregroundColor: nimCopy(null, errorColor_3305112228, NTI2550136835), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
              contentWidget_3305112206.children.push(panel_3305112366);;
              }
              
              }
              
              if (!((len_3221226665(layout_3305112204.nodeToVisualNode) == L_536872647))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872651 = addInt(res_536872651, 1);
            }
        };
      };
    };
    if (contains_2969569863(layout_3305112204.nodeToVisualNode, node_2969569752(self_3305112200).id)) {
    var visualRange_3305112476 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3305112204.nodeToVisualNode, node_2969569752(self_3305112200).id), NTI3087007774);
    var bounds_3305112477 = absoluteBounds_3087009583(visualRange_3305112476);
    var panel_3305112499 = {left: bounds_3305112477.x, right: (bounds_3305112477.x + bounds_3305112477.w), top: bounds_3305112477.y, bottom: (bounds_3305112477.y + bounds_3305112477.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3305111576(color_3305112478(app_3305112201.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], color_2550136904(1.0, 1.0, 1.0, 1.0)), 0.25), foregroundColor: color_3321888961(app_3305112201.theme, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], rgb_2550136919(255, 255, 255)), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
    widget_3305112214.children.push(panel_3305112499);;
    }
    
    renderBlockIndent_3305111902(self_3305112200, app_3305112201, layout_3305112204, node_3305112202, offset_3305112205, widget_3305112214);

  
}

function updateBaseIndexAndScrollOffset_3321888843(contentPanel_3321888844, previousBaseIndex_3321888845, previousBaseIndex_3321888845_Idx, scrollOffset_3321888846, scrollOffset_3321888846_Idx, lines_3321888847, totalLineHeight_3321888848, targetLine_3321888850) {
      var Temporary1;

      var oHEX60gensym2_3321888853 = nimCopy(null, targetLine_3321888850, NTI1191183280);
      if (!isSome_1191185117(oHEX60gensym2_3321888853)) Temporary1 = false; else {        var targetLine_3321888876 = get_1191185211(oHEX60gensym2_3321888853);
        Temporary1 = true;      }    if (Temporary1) {
    var targetLineY_3321888877 = ((subInt(targetLine_3321888876, previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx]) * totalLineHeight_3321888848) + scrollOffset_3321888846[scrollOffset_3321888846_Idx]);
    var margin_3321888878 = 0.0;
    if ((targetLineY_3321888877 < margin_3321888878)) {
    scrollOffset_3321888846[scrollOffset_3321888846_Idx] = margin_3321888878;
    previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx] = targetLine_3321888876;
    }
    else {
    if (((contentPanel_3321888844.lastBounds.h - margin_3321888878) < (targetLineY_3321888877 + totalLineHeight_3321888848))) {
    scrollOffset_3321888846[scrollOffset_3321888846_Idx] = ((contentPanel_3321888844.lastBounds.h - margin_3321888878) - totalLineHeight_3321888848);
    previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx] = targetLine_3321888876;
    }
    }
    }
    
    previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx] = clamp_3321888884(previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx], HEX2EHEX2E_805306418(0, lines_3321888847));
    Label2: {
        Label3: while (true) {
        if (!((scrollOffset_3321888846[scrollOffset_3321888846_Idx] < 0.0) && (addInt(previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx], 1) < lines_3321888847))) break Label3;
          if ((contentPanel_3321888844.lastBounds.h <= (scrollOffset_3321888846[scrollOffset_3321888846_Idx] + totalLineHeight_3321888848))) {
          break Label2;
          }
          
          previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx] = addInt(previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx], 1);
          HEX2BHEX3D_855640304(scrollOffset_3321888846, scrollOffset_3321888846_Idx, totalLineHeight_3321888848);
        }
    };
    Label4: {
        Label5: while (true) {
        if (!((contentPanel_3321888844.lastBounds.h < scrollOffset_3321888846[scrollOffset_3321888846_Idx]) && (0 < previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx]))) break Label5;
          if (((scrollOffset_3321888846[scrollOffset_3321888846_Idx] - totalLineHeight_3321888848) <= 0.0)) {
          break Label4;
          }
          
          previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx] = subInt(previousBaseIndex_3321888845[previousBaseIndex_3321888845_Idx], 1);
          HEX2DHEX3D_2818594211(scrollOffset_3321888846, scrollOffset_3321888846_Idx, totalLineHeight_3321888848);
        }
    };

  
}

function HEX5BHEX5D_3305112570(s_3305112574, x_3305112575) {
  var result_3305112576 = [];

    var a_3305112578 = x_3305112575.a;
    var L_3305112580 = addInt(subInt(x_3305112575.b, a_3305112578), 1);
    result_3305112576 = new Array(chckRange(L_3305112580, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3305112580, 0, 2147483647) ; ++i) { result_3305112576[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }    Label1: {
      var i_3305112589 = 0;
      var i_536872705 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872705 < L_3305112580)) break Label3;
            i_3305112589 = i_536872705;
            result_3305112576[chckIndx(i_3305112589, 0, (result_3305112576).length - 1)] = nimCopy(result_3305112576[chckIndx(i_3305112589, 0, (result_3305112576).length - 1)], s_3305112574[chckIndx(addInt(i_3305112589, a_3305112578), 0, (s_3305112574).length - 1)], NTI2969568638);
            i_536872705 = addInt(i_536872705, 1);
          }
      };
    };

  return result_3305112576;

}

function createLinesInPanel_3321888915(app_3321888916, contentPanel_3321888917, previousBaseIndex_3321888918, scrollOffset_3321888919, lines_3321888920, frameIndex_3321888921, onlyRenderInBounds_3321888922, renderLine_3321888928) {
    var totalLineHeight_3321888929 = totalLineHeight_2768240810(app_3321888916.platform);
    Label1: {
      var i_3321888934 = 0;
      var i_536872709 = previousBaseIndex_3321888918;
      Label2: {
          Label3: while (true) {
          if (!(i_536872709 < lines_3321888920)) break Label3;
            i_3321888934 = i_536872709;
            Label4: {
              var top_3321888935 = ((subInt(i_3321888934, previousBaseIndex_3321888918) * totalLineHeight_3321888929) + scrollOffset_3321888919);
              if ((onlyRenderInBounds_3321888922 && (contentPanel_3321888917.lastBounds.h <= top_3321888935))) {
              break Label1;
              }
              
              if ((onlyRenderInBounds_3321888922 && ((top_3321888935 + totalLineHeight_3321888929) <= 0.0))) {
              break Label4;
              }
              
              var lineWidget_3321888936 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), left: 0.0, right: 0.0, top: top_3321888935, bottom: (top_3321888935 + totalLineHeight_3321888929), lastHierarchyChange: frameIndex_3321888921, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3321888928(lineWidget_3321888936, i_3321888934, true, frameIndex_3321888921))) {
              break Label1;
              }
              
              contentPanel_3321888917.children.push(lineWidget_3321888936);;
            };
            i_536872709 = addInt(i_536872709, 1);
          }
      };
    };
    Label5: {
      var k_3321888945 = 0;
      var res_536872713 = 1;
      Label6: {
          Label7: while (true) {
          if (!(res_536872713 <= previousBaseIndex_3321888918)) break Label7;
            k_3321888945 = res_536872713;
            Label8: {
              var i_3321888946 = subInt(previousBaseIndex_3321888918, k_3321888945);
              var top_3321888947 = ((subInt(i_3321888946, previousBaseIndex_3321888918) * totalLineHeight_3321888929) + scrollOffset_3321888919);
              if ((onlyRenderInBounds_3321888922 && (contentPanel_3321888917.lastBounds.h <= top_3321888947))) {
              break Label8;
              }
              
              if ((onlyRenderInBounds_3321888922 && ((top_3321888947 + totalLineHeight_3321888929) <= 0.0))) {
              break Label5;
              }
              
              var lineWidget_3321888948 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), left: 0.0, right: 0.0, top: top_3321888947, bottom: (top_3321888947 + totalLineHeight_3321888929), lastHierarchyChange: frameIndex_3321888921, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
              if (!(renderLine_3321888928(lineWidget_3321888948, i_3321888946, false, frameIndex_3321888921))) {
              break Label5;
              }
              
              contentPanel_3321888917.children.push(lineWidget_3321888948);;
            };
            res_536872713 = addInt(res_536872713, 1);
          }
      };
    };

  
}

function tokenColor_3321889129(theme_3321889131, names_3321889132, default_3321889133) {
  var result_3321889134 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3321889138 = [];
      var i_536872716 = 0;
      var L_536872717 = (names_3321889132).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872716 < L_536872717)) break Label3;
            name_3321889138 = names_3321889132[chckIndx(i_536872716, 0, (names_3321889132).length - 1)];
            if (contains_2516582652(theme_3321889131.tokenColors, name_3321889138)) {
            var style_3321889244 = nimCopy(null, HEX5BHEX5D_2516582957(theme_3321889131.tokenColors, name_3321889138), NTI2516582404);
            if (isSome_3221226333(style_3321889244.foreground)) {
            result_3321889134 = nimCopy(result_3321889134, get_3221226350(style_3321889244.foreground), NTI2550136835);
            break BeforeRet;
            }
            
            }
            
            i_536872716 = addInt(i_536872716, 1);
            if (!(((names_3321889132).length == L_536872717))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889134 = nimCopy(result_3321889134, color_2634022945(default_3321889133), NTI2550136835);
    break BeforeRet;
  };

  return result_3321889134;

}

function get_3321890553(self_3321890555, otherwise_3321890556) {
    var Temporary1;

  var result_3321890557 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3221226333(self_3321890555)) {
    Temporary1 = self_3321890555.val;
    }
    else {
    Temporary1 = otherwise_3321890556;
    }
    
    result_3321890557 = nimCopy(result_3321890557, Temporary1, NTI2550136835);

  return result_3321890557;

}

function getCascading_2516582604(table_2516582606, key_2516582607, default_2516582608) {
  var result_2516582609 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2516582652(table_2516582606, key_2516582607)) {
    result_2516582609 = nimCopy(result_2516582609, HEX5BHEX5D_2516582957(table_2516582606, key_2516582607), NTI2516582404);
    break BeforeRet;
    }
    
    var index_2516583036 = nsuRFindStr(key_2516582607, [46], 0, -1);
    if (!((index_2516583036 == -1))) {
    result_2516582609 = nimCopy(result_2516582609, getCascading_2516582604(table_2516582606, HEX5BHEX5D_855639291(key_2516582607, HEX2EHEX2E_805306418(0, subInt(index_2516583036, 1))), default_2516582608), NTI2516582404);
    break BeforeRet;
    }
    
    result_2516582609 = nimCopy(result_2516582609, default_2516582608, NTI2516582404);
    break BeforeRet;
  };

  return result_2516582609;

}

function tokenColor_3321890525(theme_3321890527, name_3321890528, default_3321890529) {
  var result_3321890530 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3321890530 = nimCopy(result_3321890530, get_3321890553(getCascading_2516582604(theme_3321890527.tokenColors, name_3321890528, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3321890529)), NTI2550136835);
    break BeforeRet;
  };

  return result_3321890530;

}

function add_3305112838(x_3305112840, x_3305112840_Idx, y_3305112841) {
    var Temporary1;

    var xl_3305112845 = (x_3305112840[x_3305112840_Idx]).length;
    if (x_3305112840[x_3305112840_Idx].length < (Temporary1 = chckRange(addInt(xl_3305112845, (y_3305112841).length), 0, 2147483647), Temporary1)) { for (var i = x_3305112840[x_3305112840_Idx].length ; i < Temporary1 ; ++i) x_3305112840[x_3305112840_Idx].push({Field0: 0, Field1: null}); }
               else { x_3305112840[x_3305112840_Idx].length = Temporary1; };
    Label2: {
      var i_3305112861 = 0;
      var colontmp__536872720 = 0;
      colontmp__536872720 = (y_3305112841).length - 1;
      var res_536872721 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872721 <= colontmp__536872720)) break Label4;
            i_3305112861 = res_536872721;
            x_3305112840[x_3305112840_Idx][chckIndx(addInt(xl_3305112845, i_3305112861), 0, (x_3305112840[x_3305112840_Idx]).length - 1)] = nimCopy(x_3305112840[x_3305112840_Idx][chckIndx(addInt(xl_3305112845, i_3305112861), 0, (x_3305112840[x_3305112840_Idx]).length - 1)], y_3305112841[chckIndx(i_3305112861, 0, (y_3305112841).length - 1)], NTI3305112105);
            res_536872721 = addInt(res_536872721, 1);
          }
      };
    };

  
}

function renderCompletionList_3305112504(self_3305112505, app_3305112506, widget_3305112507, parentBounds_3305112508, frameIndex_3305112509, completions_3305112510, selected_3305112511, fill_3305112512, targetLine_3305112514, renderedItems_3305112517, renderedItems_3305112517_Idx, previousBaseIndex_3305112518, previousBaseIndex_3305112518_Idx, scrollOffset_3305112519, scrollOffset_3305112519_Idx) {
    var Temporary1;
                var Temporary8;
                var Temporary9;
              var Temporary10;
              var Temporary11;
    
function renderLine_3305112751(lineWidget_3305112752, i_3305112753, down_3305112754, frameIndex_3305112755) {
      var result_3305112756 = false;

      BeforeRet: {
        if ((i_3305112753 == self_3305112505.selectedCompletion)) {
        lineWidget_3305112752.fillBackground = true;
        lineWidget_3305112752.backgroundColor = nimCopy(lineWidget_3305112752.backgroundColor, selectionColor_3305112741, NTI2550136835);
        }
        
        var k_3305112757 = subInt(i_3305112753, firstCompletion_3305112537);
        if (((k_3305112757 < 0) || ((entries_3305112557).length - 1 < k_3305112757))) {
        result_3305112756 = false;
        break BeforeRet;
        }
        
        var entry_3305112761 = nimCopy(null, entries_3305112557[chckIndx(k_3305112757, 0, (entries_3305112557).length - 1)], NTI3305112120);
        var nameColor_3305112767 = tokenColor_3321889129(app_3305112506.theme, entry_3305112761.Field3, rgb_2550136919(255, 255, 255));
        var nameWidget_3305112768 = createPartWidget_3321888836(entry_3305112761.Field0, 0.0, ((entry_3305112761.Field0).length * charWidth_3305112521), totalLineHeight_3305112520, nameColor_3305112767, frameIndex_3305112755);
        lineWidget_3305112752.children.push(nameWidget_3305112768);;
        var tempWidget_3305112773 = createPartWidget_3321888836([32,58,32], nameWidth_3305112732, (3.0 * charWidth_3305112521), totalLineHeight_3305112520, sepColor_3305112747, frameIndex_3305112755);
        lineWidget_3305112752.children.push(tempWidget_3305112773);;
        var typeColor_3305112783 = tokenColor_3321890525(app_3305112506.theme, entry_3305112761.Field4, rgb_2550136919(255, 255, 255));
        var typeWidget_3305112784 = createPartWidget_3321888836(entry_3305112761.Field1, tempWidget_3305112773.right, ((entry_3305112761.Field1).length * charWidth_3305112521), totalLineHeight_3305112520, typeColor_3305112783, frameIndex_3305112755);
        lineWidget_3305112752.children.push(typeWidget_3305112784);;
        tempWidget_3305112773 = createPartWidget_3321888836([32,61,32], (typeWidget_3305112784.left + typeWidth_3305112733), (3.0 * charWidth_3305112521), totalLineHeight_3305112520, sepColor_3305112747, frameIndex_3305112755);
        lineWidget_3305112752.children.push(tempWidget_3305112773);;
        if ((0 < (entry_3305112761.Field2).length)) {
        var valueColor_3305112798 = tokenColor_3321890525(app_3305112506.theme, entry_3305112761.Field5, rgb_2550136919(255, 255, 255));
        var valueWidget_3305112799 = createPartWidget_3321888836(entry_3305112761.Field2, (-((entry_3305112761.Field2).length) * charWidth_3305112521), 0.0, totalLineHeight_3305112520, valueColor_3305112798, frameIndex_3305112755);
        valueWidget_3305112799.anchor.Field0.x = 1.0;
        valueWidget_3305112799.anchor.Field1.x = 1.0;
        lineWidget_3305112752.children.push(valueWidget_3305112799);;
        }
        
        newRenderedItems_3305112750.push({Field0: i_3305112753, Field1: lineWidget_3305112752});;
        result_3305112756 = true;
        break BeforeRet;
      };

      return result_3305112756;

    }

  BeforeRet: {
    var totalLineHeight_3305112520 = totalLineHeight_2768240810(app_3305112506.platform);
    var charWidth_3305112521 = charWidth_2768240799(app_3305112506.platform);
    if (renderedItems_3305112517[renderedItems_3305112517_Idx].length < 0) { for (var i = renderedItems_3305112517[renderedItems_3305112517_Idx].length ; i < 0 ; ++i) renderedItems_3305112517[renderedItems_3305112517_Idx].push({Field0: 0, Field1: null}); }
               else { renderedItems_3305112517[renderedItems_3305112517_Idx].length = 0; };
    if (((completions_3305112510).length == 0)) {
    break BeforeRet;
    }
    
    if (fill_3305112512) {
    Temporary1 = (((widget_3305112507.lastBounds.h / totalLineHeight_3305112520)) | 0);
    }
    else {
    Temporary1 = 15;
    }
    
    var maxRenderedCompletions_3305112529 = Temporary1;
    var renderedCompletions_3305112533 = nimMin((completions_3305112510).length, maxRenderedCompletions_3305112529);
    widget_3305112507.bottom = (widget_3305112507.top + (renderedCompletions_3305112533 * totalLineHeight_3305112520));
    layoutWidget_2785018363(widget_3305112507, parentBounds_3305112508, frameIndex_3305112509, app_3305112506.platform.layoutOptions);
    updateBaseIndexAndScrollOffset_3321888843(widget_3305112507, previousBaseIndex_3305112518, previousBaseIndex_3305112518_Idx, scrollOffset_3305112519, scrollOffset_3305112519_Idx, (completions_3305112510).length, totalLineHeight_3305112520, targetLine_3305112514);
    var firstCompletion_3305112537 = previousBaseIndex_3305112518[previousBaseIndex_3305112518_Idx];
    Label2: {
      var temp_3305112538 = [scrollOffset_3305112519[scrollOffset_3305112519_Idx]];
      Label3: {
          Label4: while (true) {
          if (!((0.0 < temp_3305112538[0]) && (0 < firstCompletion_3305112537))) break Label4;
            HEX2DHEX3D_2818594211(temp_3305112538, 0, totalLineHeight_3305112520);
            firstCompletion_3305112537 = subInt(firstCompletion_3305112537, 1);
          }
      };
    };
    var entries_3305112557 = [];
    Label5: {
      var i_3305112632 = 0;
      var com_3305112633 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});
      var colontmp__536872692 = [];
      colontmp__536872692 = HEX5BHEX5D_3305112570(completions_3305112510, HEX2EHEX2E_805306418(firstCompletion_3305112537, (completions_3305112510).length - 1));
      var i_536872694 = 0;
      var L_536872695 = (colontmp__536872692).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872694 < L_536872695)) break Label7;
            i_3305112632 = i_536872694;
            com_3305112633 = nimCopy(com_3305112633, colontmp__536872692[chckIndx(i_536872694, 0, (colontmp__536872692).length - 1)], NTI2969568638);
            switch (com_3305112633.kind) {
            case 0:
                var Temporary9 = com_3305112633;
                if (ConstSet332[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2969568637)); }
                var oHEX60gensym36_3305112636 = getSymbol_3019906948(ctx_2969567289, Temporary9.id);
                if (!isSome_3087009356(oHEX60gensym36_3305112636)) Temporary8 = false; else {                  var sym_3305112659 = get_3087009376(oHEX60gensym36_3305112636);
                  Temporary8 = true;                }              if (Temporary8) {
              var typ_3305112660 = computeSymbolType_3019928398(ctx_2969567289, sym_3305112659, true);
              var valueString_3305112661 = [];
              var value_3305112662 = computeSymbolValue_3019931153(ctx_2969567289, sym_3305112659, true);
              if ((((!((value_3305112662.kind == 0)) && !((value_3305112662.kind == 4))) && !((value_3305112662.kind == 5))) && !((value_3305112662.kind == 1)))) {
              valueString_3305112661 = nimCopy(null, HEX24_3087008498(value_3305112662), NTI33554449);
              }
              
              entries_3305112557.push({Field0: nimCopy(null, sym_3305112659.name, NTI33554449), Field1: HEX24_3087008191(typ_3305112660), Field2: nimCopy(null, valueString_3305112661, NTI33554449), Field3: getColorForSymbol_3137341355(ctx_2969567289, sym_3305112659), Field4: [115,116,111,114,97,103,101,46,116,121,112,101], Field5: [115,116,114,105,110,103]});;
              }
              
              break;
            case 1:
              var Temporary10 = com_3305112633;
              if (ConstSet333[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'name\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2969568637)); }
              var Temporary11 = com_3305112633;
              if (ConstSet334[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2969568637)); }
              entries_3305112557.push({Field0: nimCopy(null, Temporary10.name, NTI33554449), Field1: [115,110,105,112,112,101,116], Field2: reprEnum(Temporary11.nodeKind, NTI3003121667), Field3: [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], Field4: [115,116,111,114,97,103,101], Field5: [115,116,114,105,110,103]});;
              break;
            }
            if ((renderedCompletions_3305112533 < (entries_3305112557).length)) {
            break Label5;
            }
            
            i_536872694 = addInt(i_536872694, 1);
            if (!(((colontmp__536872692).length == L_536872695))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var maxNameLen_3305112701 = 10;
    var maxTypeLen_3305112702 = 10;
    var maxValueLen_3305112703 = 0;
    Label12: {
      var name_3305112725 = [];
      var typ_3305112726 = [];
      var value_3305112727 = [];
      var color1_3305112728 = [];
      var color2_3305112729 = [];
      var color3_3305112730 = [];
      var i_536872699 = 0;
      var L_536872700 = (entries_3305112557).length;
      Label13: {
          Label14: while (true) {
          if (!(i_536872699 < L_536872700)) break Label14;
            name_3305112725 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field0"];
            typ_3305112726 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field1"];
            value_3305112727 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field2"];
            color1_3305112728 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field3"];
            color2_3305112729 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field4"];
            color3_3305112730 = entries_3305112557[chckIndx(i_536872699, 0, (entries_3305112557).length - 1)]["Field5"];
            maxNameLen_3305112701 = nimMax(maxNameLen_3305112701, (name_3305112725).length);
            maxTypeLen_3305112702 = nimMax(maxTypeLen_3305112702, (typ_3305112726).length);
            maxValueLen_3305112703 = nimMax(maxValueLen_3305112703, (value_3305112727).length);
            i_536872699 = addInt(i_536872699, 1);
            if (!(((entries_3305112557).length == L_536872700))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var sepWidth_3305112731 = (charWidth_3305112521 * 3.0);
    var nameWidth_3305112732 = (charWidth_3305112521 * maxNameLen_3305112701);
    var typeWidth_3305112733 = (charWidth_3305112521 * maxTypeLen_3305112702);
    var valueWidth_3305112734 = (charWidth_3305112521 * maxValueLen_3305112703);
    var totalWidth_3305112735 = (((nameWidth_3305112732 + typeWidth_3305112733) + valueWidth_3305112734) + (sepWidth_3305112731 * 2.0));
    if ((fill_3305112512 && (totalWidth_3305112735 < widget_3305112507.lastBounds.w))) {
    totalWidth_3305112735 = widget_3305112507.lastBounds.w;
    }
    
    widget_3305112507.right = (widget_3305112507.left + totalWidth_3305112735);
    widget_3305112507.bottom = (widget_3305112507.top + (renderedCompletions_3305112533 * totalLineHeight_3305112520));
    var selectionColor_3305112741 = color_3321888961(app_3305112506.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var sepColor_3305112747 = color_3321888961(app_3305112506.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var newRenderedItems_3305112750 = [];
    createLinesInPanel_3321888915(app_3305112506, widget_3305112507, previousBaseIndex_3305112518[previousBaseIndex_3305112518_Idx], scrollOffset_3305112519[scrollOffset_3305112519_Idx], (completions_3305112510).length, frameIndex_3305112509, true, renderLine_3305112751);
    add_3305112838(renderedItems_3305112517, renderedItems_3305112517_Idx, newRenderedItems_3305112750);
  };

  
}

function renderCompletions_3305112889(self_3305112890, app_3305112891, widget_3305112892, frameIndex_3305112893) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
                var Temporary7;
                var Temporary8;
                var Temporary9;
            var Temporary10;

  BeforeRet: {
    self_3305112890.lastCompletionsWidget = null;
    if (((self_3305112890.completions).length == 0)) {
    break BeforeRet;
    }
    
    var matchColor_3305112902 = color_3321888961(app_3305112891.theme, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], rgb_2550136919(150, 150, 220));
    var backgroundColor_3305112908 = color_3321888961(app_3305112891.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var borderColor_3305112914 = color_3321888961(app_3305112891.theme, [112,97,110,101,108,46,98,111,114,100,101,114], rgb_2550136919(255, 255, 255));
    Label1: {
      var layout_3305112918 = null;
      var offset_3305112919 = ({x: 0.0, y: 0.0});
      var i_536872682 = 0;
      var L_536872683 = (self_3305112890.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872682 < L_536872683)) break Label3;
            layout_3305112918 = self_3305112890.lastLayouts[chckIndx(i_536872682, 0, (self_3305112890.lastLayouts).length - 1)]["Field0"];
            offset_3305112919 = self_3305112890.lastLayouts[chckIndx(i_536872682, 0, (self_3305112890.lastLayouts).length - 1)]["Field1"];
            var selectedCompletion_3305112920 = nimCopy(null, self_3305112890.completions[chckIndx(self_3305112890.selectedCompletion, 0, (self_3305112890.completions).length - 1)], NTI2969568638);
              if (!(selectedCompletion_3305112920.kind == 0)) Temporary6 = false; else {                var Temporary8 = selectedCompletion_3305112920;
                if (ConstSet329[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2969568637)); }
                var oHEX60gensym46_3305112928 = getSymbol_3019906948(ctx_2969567289, Temporary8.id);
                if (!isSome_3087009356(oHEX60gensym46_3305112928)) Temporary7 = false; else {                  var symbol_3305112951 = get_3087009376(oHEX60gensym46_3305112928);
                  Temporary7 = true;                }                Temporary6 = Temporary7;              }              if (!Temporary6) Temporary5 = false; else {                Temporary5 = (symbol_3305112951.kind == 0);              }              if (!Temporary5) Temporary4 = false; else {                var Temporary9 = symbol_3305112951;
                if (ConstSet330[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007753)); }
                Temporary4 = contains_2969569863(layout_3305112918.nodeToVisualNode, Temporary9.node.id);              }            if (Temporary4) {
            var Temporary10 = symbol_3305112951;
            if (ConstSet331[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007753)); }
            var selectedDeclRect_3305113061 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3305112918.nodeToVisualNode, Temporary10.node.id), NTI3087007774);
            var bounds_3305113071 = HEX2B_2130706587(absoluteBounds_3087009583(selectedDeclRect_3305113061), offset_3305112919);
            var panel_3305113072 = {left: bounds_3305113071.x, right: (bounds_3305113071.x + bounds_3305113071.w), top: bounds_3305113071.y, bottom: (bounds_3305113071.y + bounds_3305113071.h), fillBackground: true, drawBorder: true, allowAlpha: true, backgroundColor: withAlpha_3305111576(matchColor_3305112902, 0.25), foregroundColor: nimCopy(null, matchColor_3305112902, NTI2550136835), m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false};
            widget_3305112892.children.push(panel_3305113072);;
            }
            
            i_536872682 = addInt(i_536872682, 1);
            if (!(((self_3305112890.lastLayouts).length == L_536872683))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label11: {
      var layout_3305113080 = null;
      var offset_3305113081 = ({x: 0.0, y: 0.0});
      var i_536872686 = 0;
      var L_536872687 = (self_3305112890.lastLayouts).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872686 < L_536872687)) break Label13;
            layout_3305113080 = self_3305112890.lastLayouts[chckIndx(i_536872686, 0, (self_3305112890.lastLayouts).length - 1)]["Field0"];
            offset_3305113081 = self_3305112890.lastLayouts[chckIndx(i_536872686, 0, (self_3305112890.lastLayouts).length - 1)]["Field1"];
            if (contains_2969569863(layout_3305113080.nodeToVisualNode, node_2969569752(self_3305112890).id)) {
            var visualRange_3305113187 = nimCopy(null, HEX5BHEX5D_2969569959(layout_3305113080.nodeToVisualNode, node_2969569752(self_3305112890).id), NTI3087007774);
            var bounds_3305113197 = HEX2B_2130706587(absoluteBounds_3087009583(visualRange_3305113187), offset_3305113081);
            var panel_3305113198 = {left: bounds_3305113197.x, top: (bounds_3305113197.y + bounds_3305113197.h), right: (bounds_3305113197.x + 100.0), bottom: ((bounds_3305113197.y + bounds_3305113197.h) + 100.0), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3305112908, NTI2550136835), drawBorder: true, foregroundColor: nimCopy(null, borderColor_3305112914, NTI2550136835), maskContent: true, m_type: NTI2785017868, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, logLayout: false, allowAlpha: false};
            renderCompletionList_3305112504(self_3305112890, app_3305112891, panel_3305113198, widget_3305112892.lastBounds, frameIndex_3305112893, self_3305112890.completions, self_3305112890.selectedCompletion, false, self_3305112890.scrollToCompletion, self_3305112890, "lastItems", self_3305112890, "completionsBaseIndex", self_3305112890, "completionsScrollOffset");
            self_3305112890.lastCompletionsWidget = panel_3305113198;
            widget_3305112892.children.push(panel_3305113198);;
            break Label11;
            }
            
            i_536872686 = addInt(i_536872686, 1);
            if (!(((self_3305112890.lastLayouts).length == L_536872687))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    self_3305112890.scrollToCompletion = nimCopy(self_3305112890.scrollToCompletion, none_3003121842(), NTI1191183280);
  };

  
}

function updateWidget_3305113210(self_3305113211, app_3305113212, widget_3305113213, frameIndex_3305113214) {
    var Temporary1;
    
function HEX3Aanonymous_3305113263(wf_3305113274) {
      var result_3305113277 = [];

        result_3305113277 = nimCopy(null, ([32,45,32] || []).concat(wf_3305113274.name || []), NTI33554449);

      return result_3305113277;

    }
    var Temporary2;
    var Temporary3;
    var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
            
function HEX3Aanonymous_3305114509(t_3305114512) {
              var result_3305114515 = ({x: 0.0, y: 0.0});

                result_3305114515 = nimCopy(result_3305114515, measureText_2768240805(app_3305113212.platform, t_3305114512), NTI2164261152);

              return result_3305114515;

            }
            
function HEX3Aanonymous_3305114534(t_3305114537) {
              var result_3305114540 = ({x: 0.0, y: 0.0});

                result_3305114540 = nimCopy(result_3305114540, measureText_2768240805(app_3305113212.platform, t_3305114537), NTI2164261152);

              return result_3305114540;

            }

  BeforeRet: {
    var lineHeight_3305113215 = lineHeight_2768240794(app_3305113212.platform);
    var totalLineHeight_3305113216 = totalLineHeight_2768240810(app_3305113212.platform);
    var lineDistance_3305113217 = lineDistance_2768240789(app_3305113212.platform);
    var charWidth_3305113218 = charWidth_2768240799(app_3305113212.platform);
    var textColor_3305113224 = color_3321888961(app_3305113212.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3305113225 = null;
    var headerPart1Text_3305113226 = null;
    var headerPart2Text_3305113227 = null;
    var contentPanel_3305113228 = null;
    if (((widget_3305113213.children).length == 0)) {
    headerPanel_3305113225 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3305113216, lastHierarchyChange: frameIndex_3305113214, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3305113213.children.push(headerPanel_3305113225);;
    headerPart1Text_3305113226 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3305113214, foregroundColor: nimCopy(null, textColor_3305113224, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3305113225.children.push(headerPart1Text_3305113226);;
    headerPart2Text_3305113227 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3305113214, foregroundColor: nimCopy(null, textColor_3305113224, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3305113225.children.push(headerPart2Text_3305113227);;
    contentPanel_3305113228 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3305113216, lastHierarchyChange: frameIndex_3305113214, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3305113228.maskContent = true;
    widget_3305113213.children.push(contentPanel_3305113228);;
    layoutWidget_2785018363(headerPanel_3305113225, widget_3305113213.lastBounds, frameIndex_3305113214, app_3305113212.platform.layoutOptions);
    layoutWidget_2785018363(contentPanel_3305113228, widget_3305113213.lastBounds, frameIndex_3305113214, app_3305113212.platform.layoutOptions);
    }
    else {
      headerPanel_3305113225 = widget_3305113213.children[chckIndx(0, 0, (widget_3305113213.children).length - 1)];
      headerPart1Text_3305113226 = headerPanel_3305113225.children[chckIndx(0, 0, (headerPanel_3305113225.children).length - 1)];
      headerPart2Text_3305113227 = headerPanel_3305113225.children[chckIndx(1, 0, (headerPanel_3305113225.children).length - 1)];
      contentPanel_3305113228 = widget_3305113213.children[chckIndx(1, 0, (widget_3305113213.children).length - 1)];
    }
    
    if (self_3305113211.renderHeader) {
    headerPanel_3305113225.bottom = totalLineHeight_3305113216;
    contentPanel_3305113228.top = totalLineHeight_3305113216;
    if (active_2415919218(self_3305113211)) {
    Temporary1 = color_3321888961(app_3305113212.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3321888961(app_3305113212.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3305113258 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018193(headerPanel_3305113225, color_3305113258, frameIndex_3305113214);
    var workspaceName_3305113301 = get_2348810295(map_1291854418(self_3305113211.document.workspace, HEX3Aanonymous_3305113263), []);
    if (((self_3305113211.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3305113211.currentMode;
    }
    
    var mode_3305113302 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3305113307 = [mnewString(0)];
    fmtRes_3305113307[0].push.apply(fmtRes_3305113307[0], [32]);;
    formatValue_721420459(fmtRes_3305113307, 0, mode_3305113302, []);
    fmtRes_3305113307[0].push.apply(fmtRes_3305113307[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3305113307, 0, self_3305113211.document.filename, []);
    fmtRes_3305113307[0].push.apply(fmtRes_3305113307[0], [32]);;
    formatValue_721420459(fmtRes_3305113307, 0, workspaceName_3305113301, []);
    fmtRes_3305113307[0].push.apply(fmtRes_3305113307[0], [32]);;
    headerPart1Text_3305113226.text = nimCopy(null, fmtRes_3305113307[0], NTI33554449);
    var fmtRes_3305113312 = [mnewString(0)];
    fmtRes_3305113312[0].push.apply(fmtRes_3305113312[0], [32]);;
    formatValue_2701131945(fmtRes_3305113312, 0, self_3305113211.id, []);
    fmtRes_3305113312[0].push.apply(fmtRes_3305113312[0], [32]);;
    headerPart2Text_3305113227.text = nimCopy(null, fmtRes_3305113312[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018201(headerPanel_3305113225, frameIndex_3305113214);
    }
    else {
      headerPanel_3305113225.bottom = 0.0;
      contentPanel_3305113228.top = 0.0;
    }
    
    self_3305113211.lastBounds = nimCopy(self_3305113211.lastBounds, contentPanel_3305113228.lastBounds, NTI2147483653);
    self_3305113211.lastContentBounds = nimCopy(self_3305113211.lastContentBounds, widget_3305113213.lastBounds, NTI2147483653);
    widget_3305113213.lastHierarchyChange = nimMax(widget_3305113213.lastHierarchyChange, headerPanel_3305113225.lastHierarchyChange);
    if (active_2415919218(self_3305113211)) {
    Temporary3 = color_3321888961(app_3305113212.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3321888961(app_3305113212.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018193(contentPanel_3305113228, Temporary3, frameIndex_3305113214);
    if ((self_3305113211.textEditor == null)) {
    Temporary4 = false;
    }
    else {
    Temporary4 = dirty_2415919140(self_3305113211.textEditor);
    }
    
    var textEditorDirty_3305113331 = Temporary4;
      if (changed_2785018364(contentPanel_3305113228, frameIndex_3305113214)) Temporary7 = true; else {        Temporary7 = dirty_2415919140(self_3305113211);      }      if (Temporary7) Temporary6 = true; else {        Temporary6 = app_3305113212.platform.redrawEverything;      }      if (Temporary6) Temporary5 = true; else {        Temporary5 = textEditorDirty_3305113331;      }    if (!(Temporary5)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3305113211);
    var timer_3305113332 = startTimer_2080374869();
    if (contentPanel_3305113228.children.length < 0) { for (var i = contentPanel_3305113228.children.length ; i < 0 ; ++i) contentPanel_3305113228.children.push(null); }
               else { contentPanel_3305113228.children.length = 0; };
    updateBaseIndexAndScrollOffset_3305111653(self_3305113211, app_3305113212, contentPanel_3305113228);
    if (self_3305113211.lastLayouts.length < 0) { for (var i = self_3305113211.lastLayouts.length ; i < 0 ; ++i) self_3305113211.lastLayouts.push({Field0: null, Field1: ({x: 0.0, y: 0.0})}); }
               else { self_3305113211.lastLayouts.length = 0; };
    var rendered_3305113341 = 0;
    var replacements_3305113346 = [initTable_3305111668(32)];
    if ((!((self_3305113211.currentlyEditedNode == null)) || !(HEX3DHEX3D_2046820626(self_3305113211.currentlyEditedSymbol, null_2046820646)))) {
    if ((self_3305113211.textEditorWidget == null)) {
    self_3305113211.textEditorWidget = {sizeToContent: true, m_type: NTI2785017868, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    }
    
    activeHEX3D_2415919215(self_3305113211.textEditor, true);
    markDirty_2415919143(self_3305113211.textEditor);
    updateWidget_3288334347(self_3305113211.textEditor, app_3305113212, self_3305113211.textEditorWidget, frameIndex_3305113214);
    layoutWidget_2785018363(self_3305113211.textEditorWidget, rect_2147483666(0.0, 0.0, 0.0, 0.0), frameIndex_3305113214, app_3305113212.platform.layoutOptions);
    }
    else {
      self_3305113211.textEditorWidget = null;
    }
    
    if (!((self_3305113211.currentlyEditedNode == null))) {
    HEX5BHEX5DHEX3D_3305113396(replacements_3305113346[0], self_3305113211.currentlyEditedNode.id, {id: newId_2046820597(), bounds: nimCopy(null, self_3305113211.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3305113211.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    else {
    if (!(HEX3DHEX3D_2046820626(self_3305113211.currentlyEditedSymbol, null_2046820646))) {
    HEX5BHEX5DHEX3D_3305113396(replacements_3305113346[0], self_3305113211.currentlyEditedSymbol, {id: newId_2046820597(), bounds: nimCopy(null, self_3305113211.textEditorWidget.lastBounds, NTI2147483653), widgetTemplate: self_3305113211.textEditorWidget, mhash: 0, parent: null, orientation: 0, node: null, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0, cloneWidget: false});
    }
    }
    var selectedNode_3305114471 = node_2969569752(self_3305113211);
    var indent_3305114481 = getOption_2818583576(app_3305113212, [97,115,116,46,105,110,100,101,110,116], 20.0);
    var inlineBlocks_3305114491 = getOption_2818583615(app_3305113212, [97,115,116,46,105,110,108,105,110,101,45,98,108,111,99,107,115], false);
    var verticalDivision_3305114501 = getOption_2818583615(app_3305113212, [97,115,116,46,118,101,114,116,105,99,97,108,45,100,105,118,105,115,105,111,110], false);
    var offset_3305114502 = vec2_2164261725(0.0, self_3305113211.scrollOffset);
    Label8: {
      var i_3305114507 = 0;
      var colontmp__536872611 = 0;
      colontmp__536872611 = len_3003121752(self_3305113211.document.rootNode);
      var i_536872612 = self_3305113211.previousBaseIndex;
      Label9: {
          Label10: while (true) {
          if (!(i_536872612 < colontmp__536872611)) break Label10;
            i_3305114507 = i_536872612;
            var node_3305114508 = HEX5BHEX5D_3003121748(self_3305113211.document.rootNode, i_3305114507);
            var input_3305114516 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3305114508, selectedNode: nimCopy(null, selectedNode_3305114471.id, NTI2046820355), replacements: nimCopy(null, replacements_3305113346[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3305114509, indent: indent_3305114481, renderDivisionVertically: verticalDivision_3305114501, inlineBlocks: inlineBlocks_3305114491, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3305114517 = computeNodeLayout_3019934745(ctx_2969567289, input_3305114516, true);
            if ((contentPanel_3305113228.lastBounds.h < (bounds_3087009979(layout_3305114517).y + offset_3305114502.y))) {
            break Label8;
            }
            
            renderVisualNodeLayout_3305112199(self_3305113211, app_3305113212, node_3305114508, contentPanel_3305113228.lastBounds, layout_3305114517, offset_3305114502, contentPanel_3305113228, frameIndex_3305113214);
            HEX2BHEX3D_2147483761(offset_3305114502, "y", (bounds_3087009979(layout_3305114517).h + totalLineHeight_3305113216));
            rendered_3305113341 = addInt(rendered_3305113341, 1);
            i_536872612 = addInt(i_536872612, 1);
          }
      };
    };
    offset_3305114502 = nimCopy(offset_3305114502, vec2_2164261725(0.0, self_3305113211.scrollOffset), NTI2164261152);
    Label11: {
      var k_3305114531 = 0;
      var res_536872615 = 1;
      Label12: {
          Label13: while (true) {
          if (!(res_536872615 <= self_3305113211.previousBaseIndex)) break Label13;
            k_3305114531 = res_536872615;
            var i_3305114532 = subInt(self_3305113211.previousBaseIndex, k_3305114531);
            var node_3305114533 = HEX5BHEX5D_3003121748(self_3305113211.document.rootNode, i_3305114532);
            var input_3305114541 = getOrCreateNodeLayoutInput_3019906753(ctx_2969567289, {node: node_3305114533, selectedNode: nimCopy(null, selectedNode_3305114471.id, NTI2046820355), replacements: nimCopy(null, replacements_3305113346[0], NTI3087007835), revision: config_3137339605[0].revision, measureText: HEX3Aanonymous_3305114534, indent: indent_3305114481, renderDivisionVertically: verticalDivision_3305114501, inlineBlocks: inlineBlocks_3305114491, mHash: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
            var layout_3305114542 = computeNodeLayout_3019934745(ctx_2969567289, input_3305114541, true);
            if ((((bounds_3087009979(layout_3305114542).y + bounds_3087009979(layout_3305114542).h) + offset_3305114502.y) < 0.0)) {
            break Label11;
            }
            
            HEX2DHEX3D_2634022922(offset_3305114502, "y", (bounds_3087009979(layout_3305114542).h + totalLineHeight_3305113216));
            renderVisualNodeLayout_3305112199(self_3305113211, app_3305113212, node_3305114533, contentPanel_3305113228.lastBounds, layout_3305114542, offset_3305114502, contentPanel_3305113228, frameIndex_3305113214);
            rendered_3305113341 = addInt(rendered_3305113341, 1);
            res_536872615 = addInt(res_536872615, 1);
          }
      };
    };
    renderCompletions_3305112889(self_3305113211, app_3305113212, contentPanel_3305113228, frameIndex_3305113214);
    contentPanel_3305113228.lastHierarchyChange = frameIndex_3305113214;
    widget_3305113213.lastHierarchyChange = nimMax(widget_3305113213.lastHierarchyChange, contentPanel_3305113228.lastHierarchyChange);
    self_3305113211.lastContentBounds = nimCopy(self_3305113211.lastContentBounds, contentPanel_3305113228.lastBounds, NTI2147483653);
  };

  
}

function HEX24_2449473860(selection_2449473861) {
  var result_2449473862 = [];

  BeforeRet: {
    result_2449473862 = nimCopy(null, (HEX24_2449473857(selection_2449473861.Field0) || []).concat([45] || [],HEX24_2449473857(selection_2449473861.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2449473862;

}

function formatValue_2818572415(result_2818572417, result_2818572417_Idx, value_2818572418, specifier_2818572419) {
    formatValue_721420459(result_2818572417, result_2818572417_Idx, HEX24_2449473860(value_2818572418), specifier_2818572419);

  
}

function initTable_3321889461(initialSize_3321889464) {
  var result_3321889465 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_3321889467 = slotsNeeded_1308622891(chckRange(initialSize_3321889464, 0, 2147483647));
    result_3321889465.counter = 0;
    result_3321889465.data = new Array(chckRange(correctSizeHEX60gensym16_3321889467, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3321889467, 0, 2147483647) ; ++i) { result_3321889465.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3321889465;

}

function mgetOrPut_3321889513(t_3321889516, key_3321889517, val_3321889518) {
  var result_3321889519 = null;
  var result_3321889519_Idx = 0;

    if (((t_3321889516.data).length == 0)) {
    var correctSizeHEX60gensym19_3321889568 = slotsNeeded_1308622891(32);
    t_3321889516.counter = 0;
    t_3321889516.data = new Array(chckRange(correctSizeHEX60gensym19_3321889568, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_3321889568, 0, 2147483647) ; ++i) { t_3321889516.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3321889573 = [0];
    var index_3321889580 = rawGet_2818581106(t_3321889516, key_3321889517, hc_3321889573, 0);
    if ((index_3321889580 < 0)) {
    if (((t_3321889516.data).length == 0)) {
    var correctSizeHEX60gensym22_3321889629 = slotsNeeded_1308622891(32);
    t_3321889516.counter = 0;
    t_3321889516.data = new Array(chckRange(correctSizeHEX60gensym22_3321889629, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_3321889629, 0, 2147483647) ; ++i) { t_3321889516.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818581582(t_3321889516)) {
    enlarge_2818581785(t_3321889516);
    index_3321889580 = rawGetKnownHC_2818582432(t_3321889516, key_3321889517, hc_3321889573[0]);
    }
    
    index_3321889580 = subInt(-1, index_3321889580);
    rawInsert_2818582191(t_3321889516, t_3321889516, "data", key_3321889517, val_3321889518, hc_3321889573[0], index_3321889580);
    t_3321889516.counter = addInt(t_3321889516.counter, 1);
    }
    
    result_3321889519 = t_3321889516.data[chckIndx(index_3321889580, 0, (t_3321889516.data).length - 1)]; result_3321889519_Idx = "Field2";

  return [result_3321889519, result_3321889519_Idx];

}

function isSome_3321889800(self_3321889802) {
  var result_3321889803 = false;

    result_3321889803 = self_3321889802.has;

  return result_3321889803;

}

function get_3321889791(self_3321889793, otherwise_3321889794) {
    var Temporary1;

  var result_3321889795 = 0;

    if (isSome_3321889800(self_3321889793)) {
    Temporary1 = self_3321889793.val;
    }
    else {
    Temporary1 = otherwise_3321889794;
    }
    
    result_3321889795 = Temporary1;

  return result_3321889795;

}

function parseEnum_3321889766(s_3321889768, default_3321889769) {
    var Temporary1;

  var result_3321889770 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3321889768))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3321889769;
      break;
    }
    result_3321889770 = Temporary1;

  return result_3321889770;

}

function getOption_3321889740(editor_3321889742, path_3321889743, default_3321889744) {
  var result_3321889750 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3321889742 == null)) {
      result_3321889750 = default_3321889744;
      break BeforeRet;
      }
      
      var nodeHEX60gensym24_3321889762 = HEX7BHEX7D_1627393316(editor_3321889742.options, nsuSplitString(path_3321889743, [46], -1));
      if ((nodeHEX60gensym24_3321889762 == null)) {
      result_3321889750 = default_3321889744;
      break BeforeRet;
      }
      
    };
    result_3321889750 = parseEnum_3321889766(getStr_1627390106(nodeHEX60gensym24_3321889762, []), default_3321889744);
    break BeforeRet;
  };

  return result_3321889750;

}

function color_3321889841(theme_3321889843, names_3321889844, default_3321889845) {
  var result_3321889846 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3321889850 = [];
      var i_536872742 = 0;
      var L_536872743 = (names_3321889844).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872742 < L_536872743)) break Label3;
            name_3321889850 = names_3321889844[chckIndx(i_536872742, 0, (names_3321889844).length - 1)];
            if (contains_3221226054(theme_3321889843.colors, name_3321889850)) {
            result_3321889846 = nimCopy(result_3321889846, HEX5BHEX5D_3221226144(theme_3321889843.colors, name_3321889850), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872742 = addInt(i_536872742, 1);
            if (!(((names_3321889844).length == L_536872743))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889846 = nimCopy(result_3321889846, color_2634022945(default_3321889845), NTI2550136835);
    break BeforeRet;
  };

  return result_3321889846;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3321889961(theme_3321889963, names_3321889964, default_3321889965) {
  var result_3321889966 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3321889970 = [];
      var i_536872746 = 0;
      var L_536872747 = (names_3321889964).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872746 < L_536872747)) break Label3;
            name_3321889970 = names_3321889964[chckIndx(i_536872746, 0, (names_3321889964).length - 1)];
            if (contains_3221226054(theme_3321889963.colors, name_3321889970)) {
            result_3321889966 = nimCopy(result_3321889966, HEX5BHEX5D_3221226144(theme_3321889963.colors, name_3321889970), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872746 = addInt(i_536872746, 1);
            if (!(((names_3321889964).length == L_536872747))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3321889966 = nimCopy(result_3321889966, color_2634022963(default_3321889965), NTI2550136835);
    break BeforeRet;
  };

  return result_3321889966;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function rawGet_2818574416(t_2818574419, key_2818574420, hc_2818574421, hc_2818574421_Idx) {
  var result_2818574422 = 0;

  BeforeRet: {
    hc_2818574421[hc_2818574421_Idx] = hash_1325400236(key_2818574420);
    if ((hc_2818574421[hc_2818574421_Idx] == 0)) {
    hc_2818574421[hc_2818574421_Idx] = 314159265;
    }
    
    if (((t_2818574419.data).length == 0)) {
    result_2818574422 = -1;
    break BeforeRet;
    }
    
    var h_2818574492 = (hc_2818574421[hc_2818574421_Idx] & (t_2818574419.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0)) break Label2;
          if (((t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field0 == hc_2818574421[hc_2818574421_Idx]) && (t_2818574419.data[chckIndx(h_2818574492, 0, (t_2818574419.data).length - 1)].Field1 == key_2818574420))) {
          result_2818574422 = h_2818574492;
          break BeforeRet;
          }
          
          h_2818574492 = nextTry_1308622883(h_2818574492, (t_2818574419.data).length - 1);
        }
    };
    result_2818574422 = subInt(-1, h_2818574492);
  };

  return result_2818574422;

}

function hasKey_2818574409(t_2818574412, key_2818574413) {
  var result_2818574414 = false;

    var hc_2818574415 = [0];
    result_2818574414 = (0 <= rawGet_2818574416(t_2818574412, key_2818574413, hc_2818574415, 0));

  return result_2818574414;

}

function contains_2818574403(t_2818574406, key_2818574407) {
  var result_2818574408 = false;

  BeforeRet: {
    result_2818574408 = hasKey_2818574409(t_2818574406, key_2818574407);
    break BeforeRet;
  };

  return result_2818574408;

}

function HEX5BHEX5D_2818574822(t_2818574825, key_2818574826) {
  var result_2818574827 = null;
  var result_2818574827_Idx = 0;

    var hcHEX60gensym22_2818574828 = [0];
    var indexHEX60gensym22_2818574835 = rawGet_2818574416(t_2818574825, key_2818574826, hcHEX60gensym22_2818574828, 0);
    if ((0 <= indexHEX60gensym22_2818574835)) {
    result_2818574827 = t_2818574825.data[chckIndx(indexHEX60gensym22_2818574835, 0, (t_2818574825.data).length - 1)]; result_2818574827_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850850(key_2818574826);
    }
    

  return [result_2818574827, result_2818574827_Idx];

}

function mustRehash_2818575209(t_2818575211) {
  var result_2818575212 = false;

    if (!((t_2818575211.counter < (t_2818575211.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575212 = ((mulInt((t_2818575211.data).length, 2) < mulInt(t_2818575211.counter, 3)) || (subInt((t_2818575211.data).length, t_2818575211.counter) < 4));

  return result_2818575212;

}

function rawInsert_2818575818(t_2818575822, data_2818575823, data_2818575823_Idx, key_2818575824, val_2818575825, hc_2818575826, h_2818575827) {
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field1 = key_2818575824;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field2 = val_2818575825;
    data_2818575823[data_2818575823_Idx][chckIndx(h_2818575827, 0, (data_2818575823[data_2818575823_Idx]).length - 1)].Field0 = hc_2818575826;

  
}

function enlarge_2818575412(t_2818575415) {
    var n_2818575418 = [];
    n_2818575418 = new Array(chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818575415.data).length, 2), 0, 2147483647) ; ++i) { n_2818575418[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818575415.data; t_2818575415.data = n_2818575418; n_2818575418 = Temporary1;    Label2: {
      var i_2818575498 = 0;
      var colontmp__536872776 = 0;
      colontmp__536872776 = (n_2818575418).length - 1;
      var res_536872777 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872777 <= colontmp__536872776)) break Label4;
            i_2818575498 = res_536872777;
            var eh_2818575576 = n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818575576)) {
            var j_2818575580 = (eh_2818575576 & (t_2818575415.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818575415.data[chckIndx(j_2818575580, 0, (t_2818575415.data).length - 1)].Field0)) break Label6;
                  j_2818575580 = nextTry_1308622883(j_2818575580, (t_2818575415.data).length - 1);
                }
            };
            rawInsert_2818575818(t_2818575415, t_2818575415, "data", n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field1, n_2818575418[chckIndx(i_2818575498, 0, (n_2818575418).length - 1)].Field2, eh_2818575576, j_2818575580);
            }
            
            res_536872777 = addInt(res_536872777, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576059(t_2818576062, key_2818576063, hc_2818576064) {
  var result_2818576065 = 0;

  BeforeRet: {
    if (((t_2818576062.data).length == 0)) {
    result_2818576065 = -1;
    break BeforeRet;
    }
    
    var h_2818576132 = (hc_2818576064 & (t_2818576062.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0)) break Label2;
          if (((t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field0 == hc_2818576064) && (t_2818576062.data[chckIndx(h_2818576132, 0, (t_2818576062.data).length - 1)].Field1 == key_2818576063))) {
          result_2818576065 = h_2818576132;
          break BeforeRet;
          }
          
          h_2818576132 = nextTry_1308622883(h_2818576132, (t_2818576062.data).length - 1);
        }
    };
    result_2818576065 = subInt(-1, h_2818576132);
  };

  return result_2818576065;

}

function HEX5BHEX5DHEX3D_2818574980(t_2818574983, key_2818574984, val_2818574985) {
    if (((t_2818574983.data).length == 0)) {
    var correctSizeHEX60gensym43_2818575050 = slotsNeeded_1308622891(32);
    t_2818574983.counter = 0;
    t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym43_2818575050, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818575055 = [0];
    var index_2818575062 = rawGet_2818574416(t_2818574983, key_2818574984, hc_2818575055, 0);
    if ((0 <= index_2818575062)) {
    t_2818574983.data[chckIndx(index_2818575062, 0, (t_2818574983.data).length - 1)].Field2 = val_2818574985;
    }
    else {
      if (((t_2818574983.data).length == 0)) {
      var correctSizeHEX60gensym46_2818575204 = slotsNeeded_1308622891(32);
      t_2818574983.counter = 0;
      t_2818574983.data = new Array(chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym46_2818575204, 0, 2147483647) ; ++i) { t_2818574983.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818575209(t_2818574983)) {
      enlarge_2818575412(t_2818574983);
      index_2818575062 = rawGetKnownHC_2818576059(t_2818574983, key_2818574984, hc_2818575055[0]);
      }
      
      index_2818575062 = subInt(-1, index_2818575062);
      rawInsert_2818575818(t_2818574983, t_2818574983, "data", key_2818574984, val_2818574985, hc_2818575055[0], index_2818575062);
      t_2818574983.counter = addInt(t_2818574983.counter, 1);
    }
    

  
}

function initTable_2818576385(initialSize_2818576388) {
  var result_2818576394 = ({data: [], counter: 0});

    var correctSizeHEX60gensym54_2818576396 = slotsNeeded_1308622891(chckRange(initialSize_2818576388, 0, 2147483647));
    result_2818576394.counter = 0;
    result_2818576394.data = new Array(chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_2818576396, 0, 2147483647) ; ++i) { result_2818576394.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818576394;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818576588(t_2818576591, key_2818576592, hc_2818576593, hc_2818576593_Idx) {
  var result_2818576594 = 0;

  BeforeRet: {
    hc_2818576593[hc_2818576593_Idx] = hash_1325400491(key_2818576592);
    if ((hc_2818576593[hc_2818576593_Idx] == 0)) {
    hc_2818576593[hc_2818576593_Idx] = 314159265;
    }
    
    if (((t_2818576591.data).length == 0)) {
    result_2818576594 = -1;
    break BeforeRet;
    }
    
    var h_2818576662 = (hc_2818576593[hc_2818576593_Idx] & (t_2818576591.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0)) break Label2;
          if (((t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field0 == hc_2818576593[hc_2818576593_Idx]) && eqStrings(t_2818576591.data[chckIndx(h_2818576662, 0, (t_2818576591.data).length - 1)].Field1, key_2818576592))) {
          result_2818576594 = h_2818576662;
          break BeforeRet;
          }
          
          h_2818576662 = nextTry_1308622883(h_2818576662, (t_2818576591.data).length - 1);
        }
    };
    result_2818576594 = subInt(-1, h_2818576662);
  };

  return result_2818576594;

}

function hasKey_2818576581(t_2818576584, key_2818576585) {
  var result_2818576586 = false;

    var hc_2818576587 = [0];
    result_2818576586 = (0 <= rawGet_2818576588(t_2818576584, key_2818576585, hc_2818576587, 0));

  return result_2818576586;

}

function contains_2818576575(t_2818576578, key_2818576579) {
  var result_2818576580 = false;

  BeforeRet: {
    result_2818576580 = hasKey_2818576581(t_2818576578, key_2818576579);
    break BeforeRet;
  };

  return result_2818576580;

}

function HEX5BHEX5D_2818576983(t_2818576986, key_2818576987) {
  var result_2818576988 = null;

    var hcHEX60gensym22_2818576989 = [0];
    var indexHEX60gensym22_2818576996 = rawGet_2818576588(t_2818576986, key_2818576987, hcHEX60gensym22_2818576989, 0);
    if ((0 <= indexHEX60gensym22_2818576996)) {
    result_2818576988 = t_2818576986.data[chckIndx(indexHEX60gensym22_2818576996, 0, (t_2818576986.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818576987);
    }
    

  return result_2818576988;

}

function mustRehash_2818577366(t_2818577368) {
  var result_2818577369 = false;

    if (!((t_2818577368.counter < (t_2818577368.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577369 = ((mulInt((t_2818577368.data).length, 2) < mulInt(t_2818577368.counter, 3)) || (subInt((t_2818577368.data).length, t_2818577368.counter) < 4));

  return result_2818577369;

}

function rawInsert_2818577975(t_2818577979, data_2818577980, data_2818577980_Idx, key_2818577981, val_2818577982, hc_2818577983, h_2818577984) {
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field1 = nimCopy(null, key_2818577981, NTI33554449);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2 = nimCopy(data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field2, val_2818577982, NTI2852126723);
    data_2818577980[data_2818577980_Idx][chckIndx(h_2818577984, 0, (data_2818577980[data_2818577980_Idx]).length - 1)].Field0 = hc_2818577983;

  
}

function enlarge_2818577569(t_2818577572) {
    var n_2818577575 = [];
    n_2818577575 = new Array(chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577572.data).length, 2), 0, 2147483647) ; ++i) { n_2818577575[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818577572.data; t_2818577572.data = n_2818577575; n_2818577575 = Temporary1;    Label2: {
      var i_2818577655 = 0;
      var colontmp__536872783 = 0;
      colontmp__536872783 = (n_2818577575).length - 1;
      var res_536872784 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872784 <= colontmp__536872783)) break Label4;
            i_2818577655 = res_536872784;
            var eh_2818577733 = n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577733)) {
            var j_2818577737 = (eh_2818577733 & (t_2818577572.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577572.data[chckIndx(j_2818577737, 0, (t_2818577572.data).length - 1)].Field0)) break Label6;
                  j_2818577737 = nextTry_1308622883(j_2818577737, (t_2818577572.data).length - 1);
                }
            };
            rawInsert_2818577975(t_2818577572, t_2818577572, "data", n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field1, n_2818577575[chckIndx(i_2818577655, 0, (n_2818577575).length - 1)].Field2, eh_2818577733, j_2818577737);
            }
            
            res_536872784 = addInt(res_536872784, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578216(t_2818578219, key_2818578220, hc_2818578221) {
  var result_2818578222 = 0;

  BeforeRet: {
    if (((t_2818578219.data).length == 0)) {
    result_2818578222 = -1;
    break BeforeRet;
    }
    
    var h_2818578289 = (hc_2818578221 & (t_2818578219.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0)) break Label2;
          if (((t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field0 == hc_2818578221) && eqStrings(t_2818578219.data[chckIndx(h_2818578289, 0, (t_2818578219.data).length - 1)].Field1, key_2818578220))) {
          result_2818578222 = h_2818578289;
          break BeforeRet;
          }
          
          h_2818578289 = nextTry_1308622883(h_2818578289, (t_2818578219.data).length - 1);
        }
    };
    result_2818578222 = subInt(-1, h_2818578289);
  };

  return result_2818578222;

}

function HEX5BHEX5DHEX3D_2818577137(t_2818577140, key_2818577141, val_2818577142) {
    if (((t_2818577140.data).length == 0)) {
    var correctSizeHEX60gensym68_2818577207 = slotsNeeded_1308622891(32);
    t_2818577140.counter = 0;
    t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym68_2818577207, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818577212 = [0];
    var index_2818577219 = rawGet_2818576588(t_2818577140, key_2818577141, hc_2818577212, 0);
    if ((0 <= index_2818577219)) {
    t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2 = nimCopy(t_2818577140.data[chckIndx(index_2818577219, 0, (t_2818577140.data).length - 1)].Field2, val_2818577142, NTI2852126723);
    }
    else {
      if (((t_2818577140.data).length == 0)) {
      var correctSizeHEX60gensym71_2818577361 = slotsNeeded_1308622891(32);
      t_2818577140.counter = 0;
      t_2818577140.data = new Array(chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym71_2818577361, 0, 2147483647) ; ++i) { t_2818577140.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818577366(t_2818577140)) {
      enlarge_2818577569(t_2818577140);
      index_2818577219 = rawGetKnownHC_2818578216(t_2818577140, key_2818577141, hc_2818577212[0]);
      }
      
      index_2818577219 = subInt(-1, index_2818577219);
      rawInsert_2818577975(t_2818577140, t_2818577140, "data", key_2818577141, val_2818577142, hc_2818577212[0], index_2818577219);
      t_2818577140.counter = addInt(t_2818577140.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818578766(result_2818578768, result_2818578768_Idx, value_2818578769, specifier_2818578770) {
    formatValue_721420459(result_2818578768, result_2818578768_Idx, HEX24_2885681319(value_2818578769), specifier_2818578770);

  
}

function insert_2818574279(x_2818574281, x_2818574281_Idx, item_2818574282, i_2818574283) {
    var it_2818574303 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574281[x_2818574281_Idx] = x_2818574281[x_2818574281_Idx] || []; x_2818574281[x_2818574281_Idx].splice(i_2818574283, 0, it_2818574303);
    x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)] = nimCopy(x_2818574281[x_2818574281_Idx][chckIndx(i_2818574283, 0, (x_2818574281[x_2818574281_Idx]).length - 1)], item_2818574282, NTI2818572422);

  
}

function splitAt_2818574217(line_2818574218, line_2818574218_Idx, index_2818574219) {
    var index_2818574220 = index_2818574219;
    var i_2818574221 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && ((line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length <= index_2818574220))) break Label2;
          index_2818574220 = subInt(index_2818574220, (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length);
          i_2818574221 = addInt(i_2818574221, 1);
        }
    };
    if ((((i_2818574221 < (line_2818574218[line_2818574218_Idx].parts).length) && !((index_2818574220 == 0))) && !((index_2818574220 == (line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574236 = nimCopy(null, line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)], NTI2818572422);
    line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574218[line_2818574218_Idx].parts[chckIndx(i_2818574221, 0, (line_2818574218[line_2818574218_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574220, 1))), NTI33554449);
    copy_2818574236.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574236.text, HEX2EHEX2E_1040187488(index_2818574220, 1)), NTI33554449);
    insert_2818574279(line_2818574218[line_2818574218_Idx], "parts", copy_2818574236, chckRange(addInt(i_2818574221, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574313(line_2818574314, line_2818574314_Idx, first_2818574315, last_2818574316, scope_2818574317, priority_2818574318) {
    var index_2818574319 = 0;
    Label1: {
      var i_2818574327 = 0;
      var colontmp__536872790 = 0;
      colontmp__536872790 = (line_2818574314[line_2818574314_Idx].parts).length - 1;
      var res_536872791 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872791 <= colontmp__536872790)) break Label3;
            i_2818574327 = res_536872791;
            if ((((first_2818574315 <= index_2818574319) && (addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length) <= last_2818574316)) && (priority_2818574318 < line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority))) {
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574317, NTI33554449);
            line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].priority = priority_2818574318;
            }
            
            index_2818574319 = addInt(index_2818574319, (line_2818574314[line_2818574314_Idx].parts[chckIndx(i_2818574327, 0, (line_2818574314[line_2818574314_Idx].parts).length - 1)].text).length);
            res_536872791 = addInt(res_536872791, 1);
          }
      };
    };

  
}

function getStyledText_2818574341(self_2818574342, i_2818574343) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574344 = [null];

  BeforeRet: {
    if (contains_2818574403(self_2818574342.styledTextCache, i_2818574343)) {
    result_2818574344[0] = (Temporary1 = HEX5BHEX5D_2818574822(self_2818574342.styledTextCache, i_2818574343), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574925 = nimCopy(null, self_2818574342.lines[chckIndx(i_2818574343, 0, (self_2818574342.lines).length - 1)], NTI33554449);
      result_2818574344[0] = {index: i_2818574343, parts: [{text: nimCopy(null, line_2818574925, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      HEX5BHEX5DHEX3D_2818574980(self_2818574342.styledTextCache, i_2818574343, result_2818574344[0]);
      var regexes_2818576410 = [initTable_2818576385(32)];
      if ((((self_2818574342.tsParser == null) || (self_2818574342.highlightQuery == null)) || (self_2818574342.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818576442 = null;
        var colontmp__536872768 = [];
        colontmp__536872768 = matches_2885681272(self_2818574342.highlightQuery, self_2818574342.currentTree.rootNode, {Field0: {Field0: i_2818574343, Field1: 0}, Field1: {Field0: i_2818574343, Field1: (line_2818574925).length}});
        var i_536872770 = 0;
        var L_536872771 = (colontmp__536872768).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872770 < L_536872771)) break Label4;
              match_2818576442 = colontmp__536872768[chckIndx(i_536872770, 0, (colontmp__536872768).length - 1)];
              var predicates_2818576443 = self_2818574342.highlightQuery.predicatesForPattern(match_2818576442.pattern);
              Label5: {
                var capture_2818576466 = null;
                var colontmp__536872763 = [];
                colontmp__536872763 = match_2818576442.captures;
                var i_536872765 = 0;
                var L_536872766 = (colontmp__536872763).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536872765 < L_536872766)) break Label7;
                      capture_2818576466 = colontmp__536872763[chckIndx(i_536872765, 0, (colontmp__536872763).length - 1)];
                      Label8: {
                        var scope_2818576467 = capture_2818576466.name;
                        var node_2818576468 = capture_2818576466.node;
                        var matches_2818576469 = true;
                        Label9: {
                          var predicate_2818576492 = null;
                          var i_536872760 = 0;
                          var L_536872761 = (predicates_2818576443).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536872760 < L_536872761)) break Label11;
                                predicate_2818576492 = predicates_2818576443[chckIndx(i_536872760, 0, (predicates_2818576443).length - 1)];
                                if (!(matches_2818576469)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818576515 = null;
                                  var colontmp__536872754 = [];
                                  colontmp__536872754 = predicate_2818576492.operands;
                                  var i_536872756 = 0;
                                  var L_536872757 = (colontmp__536872754).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872756 < L_536872757)) break Label14;
                                        operand_2818576515 = colontmp__536872754[chckIndx(i_536872756, 0, (colontmp__536872754).length - 1)];
                                        var value_2818576516 = cstrToNimstr(operand_2818576515.type);
                                        if (!((operand_2818576515.name == scope_2818576467))) {
                                        matches_2818576469 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818576492.operator))) {
                                        case "match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary15 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818577086 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818577086);
                                          Temporary15 = regex_2818577086;
                                          }
                                          
                                          var regex_2818578542 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818578543 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!((matchLen_2852126756(nodeText_2818578543, regex_2818578542, 0) == (nodeText_2818578543).length))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818576575(regexes_2818576410[0], value_2818576516)) {
                                          Temporary16 = HEX5BHEX5D_2818576983(regexes_2818576410[0], value_2818576516);
                                          }
                                          else {
                                            var regex_2818578689 = re_2852126779(value_2818576516);
                                            HEX5BHEX5DHEX3D_2818577137(regexes_2818576410[0], value_2818576516, regex_2818578689);
                                          Temporary16 = regex_2818578689;
                                          }
                                          
                                          var regex_2818578746 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818578747 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if ((matchLen_2852126756(nodeText_2818578747, regex_2818578746, 0) == (nodeText_2818578747).length)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818578748 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (!(eqStrings(nodeText_2818578748, value_2818576516))) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818578749 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                          if (eqStrings(nodeText_2818578749, value_2818576516)) {
                                          matches_2818576469 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818578754 = [mnewString(0)];
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818578754, 0, predicate_2818576492.operator);
                                          fmtRes_2818578754[0].push.apply(fmtRes_2818578754[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818578754[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872756 = addInt(i_536872756, 1);
                                        if (!(((colontmp__536872754).length == L_536872757))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848874(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818578755 = contentString_2818574091(self_2818574342, getRange_2885681336(node_2818576468));
                                var fmtRes_2818578760 = [mnewString(0)];
                                formatValue_2701131945(fmtRes_2818578760, 0, match_2818576442.pattern, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818578760, 0, nodeText_2818578755, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [39,32]);;
                                formatValue_2818578766(fmtRes_2818578760, 0, node_2818576468, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2785018111(fmtRes_2818578760, 0, matches_2818576469, []);
                                fmtRes_2818578760[0].push.apply(fmtRes_2818578760[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818578760[0], NTI33554449)]);
                                }
                                
                                i_536872760 = addInt(i_536872760, 1);
                                if (!(((predicates_2818576443).length == L_536872761))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818576469)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818578776 = getRange_2885681336(node_2818576468);
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        splitAt_2818574217(result_2818574344, 0, nodeRange_2818578776.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818578776.Field0.Field0 < i_2818574343)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field0.Field0 == i_2818574343)) {
                        Temporary17 = nodeRange_2818578776.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574925).length;
                        }
                        }
                        var first_2818578777 = Temporary17;
                        if ((nodeRange_2818578776.Field1.Field0 < i_2818574343)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818578776.Field1.Field0 == i_2818574343)) {
                        Temporary18 = nodeRange_2818578776.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574925).length;
                        }
                        }
                        var last_2818578778 = Temporary18;
                        overrideStyle_2818574313(result_2818574344, 0, first_2818578777, last_2818578778, cstrToNimstr(scope_2818576467), match_2818576442.pattern);
                      };
                      i_536872765 = addInt(i_536872765, 1);
                      if (!(((colontmp__536872763).length == L_536872766))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536872770 = addInt(i_536872770, 1);
              if (!(((colontmp__536872768).length == L_536872771))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  return result_2818574344[0];

}

function getOrDefault_3321890156(t_3321890159, key_3321890160, default_3321890161) {
    var Temporary1;

  var result_3321890162 = [];

    var hcHEX60gensym27_3321890165 = [0];
    var indexHEX60gensym27_3321890172 = rawGet_2818581106(t_3321890159, key_3321890160, hcHEX60gensym27_3321890165, 0);
    if ((0 <= indexHEX60gensym27_3321890172)) {
    Temporary1 = t_3321890159.data[chckIndx(indexHEX60gensym27_3321890172, 0, (t_3321890159.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3321890161;
    }
    
    result_3321890162 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3321890162;

}

function map_3321890257(s_3321890260, op_3321890262) {
  var result_3321890263 = [];

    result_3321890263 = new Array(chckRange((s_3321890260).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3321890260).length, 0, 2147483647) ; ++i) { result_3321890263[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3321890278 = 0;
      var colontmp__536872794 = 0;
      colontmp__536872794 = (s_3321890260).length;
      var i_536872795 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872795 < colontmp__536872794)) break Label3;
            i_3321890278 = i_536872795;
            result_3321890263[chckIndx(i_3321890278, 0, (result_3321890263).length - 1)] = nimCopy(result_3321890263[chckIndx(i_3321890278, 0, (result_3321890263).length - 1)], op_3321890262(s_3321890260[chckIndx(i_3321890278, 0, (s_3321890260).length - 1)]), NTI3321888772);
            i_536872795 = addInt(i_536872795, 1);
          }
      };
    };

  return result_3321890263;

}

function clampToLine_3321888785(selection_3321888786, line_3321888787, lineLength_3321888788) {
    var Temporary1;
    var Temporary2;

  var result_3321888791 = {Field0: 0, Field1: 0};

    if ((selection_3321888786.Field0.Field0 < line_3321888787)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3321888786.Field0.Field0 == line_3321888787)) {
    Temporary1 = selection_3321888786.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3321888788;
    }
    }
    result_3321888791.Field0 = Temporary1;
    if ((selection_3321888786.Field1.Field0 < line_3321888787)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3321888786.Field1.Field0 == line_3321888787)) {
    Temporary2 = selection_3321888786.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3321888788;
    }
    }
    result_3321888791.Field1 = Temporary2;

  return result_3321888791;

}

function len_2818574169(line_2818574170) {
  var result_2818574171 = 0;

    result_2818574171 = 0;
    Label1: {
      var p_2818574194 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872799 = 0;
      var L_536872800 = (line_2818574170.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872799 < L_536872800)) break Label3;
            p_2818574194 = line_2818574170.parts[chckIndx(i_536872799, 0, (line_2818574170.parts).length - 1)];
            result_2818574171 = addInt(result_2818574171, (p_2818574194.text).length);
            i_536872799 = addInt(i_536872799, 1);
            if (!(((line_2818574170.parts).length == L_536872800))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574171;

}

function contains_2449473915(selection_2449473916, cursor_2449473917) {
  var result_2449473918 = false;

    result_2449473918 = (HEX3CHEX3D_2449473879(selection_2449473916.Field0, cursor_2449473917) && HEX3CHEX3D_2449473879(cursor_2449473917, selection_2449473916.Field1));

  return result_2449473918;

}

function renderTextHighlight_3321888792(panel_3321888793, app_3321888794, startOffset_3321888795, endOffset_3321888796, line_3321888797, startIndex_3321888798, selection_3321888799, selectionClamped_3321888802, part_3321888803, color_3321888804, totalLineHeight_3321888805) {
  BeforeRet: {
    var startOffset_3321888806 = Math.floor(startOffset_3321888795);
    var endOffset_3321888807 = Math.ceil(endOffset_3321888796);
    var left_3321888808 = 0.0;
    var right_3321888809 = 0.0;
    if ((((startIndex_3321888798 < selectionClamped_3321888802.Field1) && (selectionClamped_3321888802.Field0 < addInt(startIndex_3321888798, (part_3321888803.text).length))) && (0 < (part_3321888803.text).length))) {
    left_3321888808 = (startOffset_3321888806 + ((nimMax(0, subInt(selectionClamped_3321888802.Field0, startIndex_3321888798)) / ((part_3321888803.text).length - 0.0)) * (endOffset_3321888807 - startOffset_3321888806)));
    right_3321888809 = (startOffset_3321888806 + ((nimMin((part_3321888803.text).length, subInt(selectionClamped_3321888802.Field1, startIndex_3321888798)) / ((part_3321888803.text).length - 0.0)) * (endOffset_3321888807 - startOffset_3321888806)));
    }
    else {
    if (((((part_3321888803.text).length == 0) && contains_2449473915(selection_3321888799, {Field0: line_3321888797, Field1: startIndex_3321888798})) && !(isEmpty_2449473908(selection_3321888799)))) {
    left_3321888808 = startOffset_3321888806;
    right_3321888809 = Math.ceil((startOffset_3321888806 + (charWidth_2768240799(app_3321888794.platform) * 0.5)));
    }
    else {
      break BeforeRet;
    }
    }
    if ((left_3321888808 == right_3321888809)) {
    break BeforeRet;
    }
    
    panel_3321888793.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017867), left: left_3321888808, right: right_3321888809, bottom: totalLineHeight_3321888805, fillBackground: true, backgroundColor: nimCopy(null, color_3321888804, NTI2550136835), lastHierarchyChange: panel_3321888793.lastHierarchyChange, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3321888814(panel_3321888815, app_3321888816, startOffset_3321888817, endOffset_3321888818, line_3321888819, startIndex_3321888820, selections_3321888821, selectionClamped_3321888824, part_3321888825, color_3321888826, totalLineHeight_3321888827) {
    Label1: {
      var i_3321888835 = 0;
      var colontmp__536872803 = 0;
      colontmp__536872803 = (selections_3321888821).length;
      var i_536872804 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872804 < colontmp__536872803)) break Label3;
            i_3321888835 = i_536872804;
            renderTextHighlight_3321888792(panel_3321888815, app_3321888816, startOffset_3321888817, endOffset_3321888818, line_3321888819, startIndex_3321888820, selections_3321888821[chckIndx(i_3321888835, 0, (selections_3321888821).length - 1)], selectionClamped_3321888824[chckIndx(i_3321888835, 0, (selectionClamped_3321888824).length - 1)], part_3321888825, color_3321888826, totalLineHeight_3321888827);
            i_536872804 = addInt(i_536872804, 1);
          }
      };
    };

  
}

function renderCompletions_3321888953(self_3321888954, app_3321888955, contentPanel_3321888956, cursorBounds_3321888957, frameIndex_3321888958) {
    
function renderLine_3321889299(lineWidget_3321889300, i_3321889301, down_3321889302, frameIndex_3321889303) {
      var result_3321889304 = false;

      BeforeRet: {
        var top_3321889305 = ((subInt(i_3321889301, self_3321888954.previousBaseIndex) * totalLineHeight_3321888959) + self_3321888954.scrollOffset);
        if ((i_3321889301 == self_3321888954.selectedCompletion)) {
        lineWidget_3321889300.fillBackground = true;
        lineWidget_3321889300.backgroundColor = nimCopy(lineWidget_3321889300.backgroundColor, selectedBackgroundColor_3321889124, NTI2550136835);
        }
        
        var completion_3321889306 = nimCopy(null, self_3321888954.completions[chckIndx(i_3321889301, 0, (self_3321888954.completions).length - 1)], NTI2919235630);
        var nameWidget_3321889307 = createPartWidget_3321888836(completion_3321889306.name, 0.0, ((completion_3321889306.name).length * charWidth_3321888960), totalLineHeight_3321888959, nameColor_3321889267, frameIndex_3321889303);
        lineWidget_3321889300.children.push(nameWidget_3321889307);;
        var scopeWidget_3321889312 = createPartWidget_3321888836(completion_3321889306.scope, (-((completion_3321889306.scope).length) * charWidth_3321888960), totalLineHeight_3321888959, ((completion_3321889306.scope).length * charWidth_3321888960), scopeColor_3321889279, frameIndex_3321889303);
        scopeWidget_3321889312.anchor.Field0.x = 1.0;
        scopeWidget_3321889312.anchor.Field1.x = 1.0;
        lineWidget_3321889300.children.push(scopeWidget_3321889312);;
        self_3321888954.lastCompletionWidgets.push({Field0: i_3321889301, Field1: lineWidget_3321889300});;
        result_3321889304 = true;
        break BeforeRet;
      };

      return result_3321889304;

    }

    var totalLineHeight_3321888959 = totalLineHeight_2768240810(app_3321888955.platform);
    var charWidth_3321888960 = charWidth_2768240799(app_3321888955.platform);
    var backgroundColor_3321889118 = color_3321888961(app_3321888955.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(30, 30, 30));
    var selectedBackgroundColor_3321889124 = color_3321888961(app_3321888955.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var nameColor_3321889267 = tokenColor_3321889129(app_3321888955.theme, [[101,110,116,105,116,121,46,110,97,109,101,46,108,97,98,101,108], [101,110,116,105,116,121,46,110,97,109,101]], rgb_2550136919(255, 255, 255));
    var textColor_3321889273 = color_3321888961(app_3321888955.theme, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], rgb_2550136919(175, 175, 175));
    var scopeColor_3321889279 = color_3321888961(app_3321888955.theme, [115,116,114,105,110,103], rgb_2550136919(175, 255, 175));
    var panel_3321889280 = {left: cursorBounds_3321888957.x, top: (cursorBounds_3321888957.y + cursorBounds_3321888957.h), right: (cursorBounds_3321888957.x + (charWidth_3321888960 * 60.0)), bottom: ((cursorBounds_3321888957.y + cursorBounds_3321888957.h) + (totalLineHeight_3321888959 * 20.0)), fillBackground: true, backgroundColor: nimCopy(null, backgroundColor_3321889118, NTI2550136835), lastHierarchyChange: frameIndex_3321888958, maskContent: true, m_type: NTI2785017868, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    layoutWidget_2785018363(panel_3321889280, contentPanel_3321888956.lastBounds, frameIndex_3321888958, app_3321888955.platform.layoutOptions);
    contentPanel_3321888956.children.push(panel_3321889280);;
    self_3321888954.lastCompletionsWidget = panel_3321889280;
    updateBaseIndexAndScrollOffset_3321888843(panel_3321889280, self_3321888954, "completionsBaseIndex", self_3321888954, "completionsScrollOffset", (self_3321888954.completions).length, totalLineHeight_3321888959, self_3321888954.scrollToCompletion);
    self_3321888954.scrollToCompletion = nimCopy(self_3321888954.scrollToCompletion, none_3003121842(), NTI1191183280);
    if (self_3321888954.lastCompletionWidgets.length < 0) { for (var i = self_3321888954.lastCompletionWidgets.length ; i < 0 ; ++i) self_3321888954.lastCompletionWidgets.push({Field0: 0, Field1: null}); }
               else { self_3321888954.lastCompletionWidgets.length = 0; };
    createLinesInPanel_3321888915(app_3321888955, panel_3321889280, self_3321888954.completionsBaseIndex, self_3321888954.completionsScrollOffset, (self_3321888954.completions).length, frameIndex_3321888958, true, renderLine_3321889299);

  
}

function updateWidget_3321889324(self_3321889325, app_3321889326, widget_3321889327, frameIndex_3321889328) {
    var Temporary1;
    
function HEX3Aanonymous_3321889377(wf_3321889388) {
      var result_3321889391 = [];

        result_3321889391 = nimCopy(null, ([32,45,32] || []).concat(wf_3321889388.name || []), NTI33554449);

      return result_3321889391;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary12;
    var Temporary14;
    var Temporary15;
    var Temporary16;
    
function renderLine_3321890078(lineWidget_3321890079, i_3321890080, down_3321890081, frameIndex_3321890082) {
        
function HEX3Aanonymous_3321890226(s_3321890234) {
          var result_3321890237 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3321890237 = nimCopy(result_3321890237, normalized_2449473902(s_3321890234), NTI2449473547);

          return result_3321890237;

        }
        
function HEX3Aanonymous_3321890246(s_3321890253) {
          var result_3321890256 = {Field0: 0, Field1: 0};

            result_3321890256 = nimCopy(result_3321890256, clampToLine_3321888785(s_3321890253, i_3321890080, len_2818574169(styledText_3321890085)), NTI3321888772);

          return result_3321890256;

        }
        
function HEX3Aanonymous_3321890365(s_3321890373) {
          var result_3321890376 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

            result_3321890376 = nimCopy(result_3321890376, normalized_2449473902(s_3321890373), NTI2449473547);

          return result_3321890376;

        }
        
function HEX3Aanonymous_3321890385(s_3321890392) {
          var result_3321890395 = {Field0: 0, Field1: 0};

            result_3321890395 = nimCopy(result_3321890395, clampToLine_3321888785(s_3321890392, i_3321890080, len_2818574169(styledText_3321890085)), NTI3321888772);

          return result_3321890395;

        }
        var Temporary1;
                        var Temporary8;
                var Temporary9;

      var result_3321890083 = false;

      BeforeRet: {
        var top_3321890084 = ((subInt(i_3321890080, self_3321889325.previousBaseIndex) * totalLineHeight_3321889330) + self_3321889325.scrollOffset);
        if (sizeToContent_3321889338) {
        lineWidget_3321890079.sizeToContent = true;
        }
        
        var styledText_3321890085 = getStyledText_2818574341(self_3321889325.document, i_3321890080);
        var selectionsNormalizedOnLine_3321890245 = map_2818572735(getOrDefault_3321890156(selectionsPerLine_3321889472[0], i_3321890080, []), HEX3Aanonymous_3321890226);
        var selectionsClampedOnLine_3321890288 = map_3321890257(selectionsNormalizedOnLine_3321890245, HEX3Aanonymous_3321890246);
        var highlightsNormalizedOnLine_3321890384 = map_2818572735(getOrDefault_3321890156(highlightsPerLine_3321889727, i_3321890080, []), HEX3Aanonymous_3321890365);
        var highlightsClampedOnLine_3321890402 = map_3321890257(highlightsNormalizedOnLine_3321890384, HEX3Aanonymous_3321890385);
        if ((!((lineNumbers_3321889805 == 0)) && (cursorLine_3321889808 == i_3321890080))) {
        var partWidget_3321890407 = createPartWidget_3321888836(HEX24_369098760(i_3321890080), 0.0, lineNumberBounds_3321889815.x, totalLineHeight_3321889330, textColor_3321889337, frameIndex_3321890082);
        lineWidget_3321890079.children.push(partWidget_3321890407);;
        }
        else {
          switch (lineNumbers_3321889805) {
          case 1:
            var text_3321890412 = HEX24_369098760(i_3321890080);
            var x_3321890413 = max_33555646(0.0, (lineNumberBounds_3321889815.x - ((text_3321890412).length * charWidth_3321889331)));
            var partWidget_3321890414 = createPartWidget_3321888836(text_3321890412, x_3321890413, lineNumberBounds_3321889815.x, totalLineHeight_3321889330, textColor_3321889337, frameIndex_3321890082);
            lineWidget_3321890079.children.push(partWidget_3321890414);;
            break;
          case 2:
            var text_3321890419 = HEX24_369098760(absInt(subInt(i_3321890080, cursorLine_3321889808)));
            var x_3321890420 = max_33555646(0.0, (lineNumberBounds_3321889815.x - ((text_3321890419).length * charWidth_3321889331)));
            var partWidget_3321890421 = createPartWidget_3321888836(text_3321890419, x_3321890420, lineNumberBounds_3321889815.x, totalLineHeight_3321889330, textColor_3321889337, frameIndex_3321890082);
            lineWidget_3321890079.children.push(partWidget_3321890421);;
            break;
          default: 
            break;
          }
        }
        
        if ((lineNumbers_3321889805 == 0)) {
        Temporary1 = 0.0;
        }
        else {
        Temporary1 = (lineNumberBounds_3321889815.x + lineNumberPadding_3321889809);
        }
        
        var startOffset_3321890430 = [Temporary1];
        var startIndex_3321890431 = 0;
        Label2: {
          var partIndex_3321890437 = 0;
          var part_3321890438 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
          var i_536872737 = 0;
          var L_536872738 = (styledText_3321890085.parts).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536872737 < L_536872738)) break Label4;
                partIndex_3321890437 = i_536872737;
                part_3321890438 = nimCopy(part_3321890438, styledText_3321890085.parts[chckIndx(i_536872737, 0, (styledText_3321890085.parts).length - 1)], NTI2818572422);
                var width_3321890439 = ((part_3321890438.text).length * charWidth_3321889331);
                renderTextHighlight_3321888814(lineWidget_3321890079, app_3321889326, startOffset_3321890430[0], (startOffset_3321890430[0] + width_3321890439), i_3321890080, startIndex_3321890431, selectionsNormalizedOnLine_3321890245, selectionsClampedOnLine_3321890288, part_3321890438, selectionColor_3321889836, totalLineHeight_3321889330);
                renderTextHighlight_3321888814(lineWidget_3321890079, app_3321889326, startOffset_3321890430[0], (startOffset_3321890430[0] + width_3321890439), i_3321890080, startIndex_3321890431, highlightsNormalizedOnLine_3321890384, highlightsClampedOnLine_3321890402, part_3321890438, highlightColor_3321889956, totalLineHeight_3321889330);
                Label5: {
                  var selection_3321890519 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                  var colontmp__536872733 = [];
                  colontmp__536872733 = getOrDefault_3321890156(selectionsPerLine_3321889472[0], i_3321890080, []);
                  var i_536872734 = 0;
                  var L_536872735 = (colontmp__536872733).length;
                  Label6: {
                      Label7: while (true) {
                      if (!(i_536872734 < L_536872735)) break Label7;
                        selection_3321890519 = colontmp__536872733[chckIndx(i_536872734, 0, (colontmp__536872733).length - 1)];
                        if ((((selection_3321890519.Field1.Field0 == i_3321890080) && (startIndex_3321890431 <= selection_3321890519.Field1.Field1)) && (selection_3321890519.Field1.Field1 <= addInt(startIndex_3321890431, (part_3321890438.text).length)))) {
                        if (((part_3321890438.text).length == 0)) {
                        Temporary8 = 0.0;
                        }
                        else {
                        Temporary8 = ((subInt(selection_3321890519.Field1.Field1, startIndex_3321890431) / (part_3321890438.text).length) * width_3321890439);
                        }
                        
                        var offsetFromPartStart_3321890520 = Temporary8;
                        lineWidget_3321890079.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 0.0)}, NTI2785017867), left: (startOffset_3321890430[0] + offsetFromPartStart_3321890520), right: ((startOffset_3321890430[0] + offsetFromPartStart_3321890520) + (cursorWidth_3321889830 * charWidth_3321889331)), bottom: totalLineHeight_3321889330, fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3321890076, NTI2550136835), lastHierarchyChange: frameIndex_3321890082, m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                        cursorBounds_3321890077 = nimCopy(cursorBounds_3321890077, rect_2147483666((startOffset_3321890430[0] + offsetFromPartStart_3321890520), top_3321890084, (charWidth_3321889331 * cursorWidth_3321889830), lineHeight_3321889329), NTI2147483653);
                        }
                        
                        i_536872734 = addInt(i_536872734, 1);
                        if (!(((colontmp__536872733).length == L_536872735))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                if (((part_3321890438.scope).length == 0)) {
                Temporary9 = textColor_3321889337;
                }
                else {
                Temporary9 = tokenColor_3321890525(app_3321889326.theme, part_3321890438.scope, rgb_2550136919(255, 200, 200));
                }
                
                var color_3321890565 = nimCopy(null, Temporary9, NTI2550136835);
                var partWidget_3321890566 = createPartWidget_3321888836(part_3321890438.text, startOffset_3321890430[0], width_3321890439, totalLineHeight_3321889330, color_3321890565, frameIndex_3321890082);
                styledText_3321890085.parts[chckIndx(partIndex_3321890437, 0, (styledText_3321890085.parts).length - 1)].bounds.x = partWidget_3321890566.left;
                styledText_3321890085.parts[chckIndx(partIndex_3321890437, 0, (styledText_3321890085.parts).length - 1)].bounds.y = lineWidget_3321890079.top;
                styledText_3321890085.parts[chckIndx(partIndex_3321890437, 0, (styledText_3321890085.parts).length - 1)].bounds.w = (partWidget_3321890566.right - partWidget_3321890566.left);
                styledText_3321890085.parts[chckIndx(partIndex_3321890437, 0, (styledText_3321890085.parts).length - 1)].bounds.h = (lineWidget_3321890079.bottom - lineWidget_3321890079.top);
                HEX2BHEX3D_855640304(startOffset_3321890430, 0, width_3321890439);
                startIndex_3321890431 = addInt(startIndex_3321890431, (part_3321890438.text).length);
                lineWidget_3321890079.children.push(partWidget_3321890566);;
                i_536872737 = addInt(i_536872737, 1);
                if (!(((styledText_3321890085.parts).length == L_536872738))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        self_3321889325.lastRenderedLines.push(styledText_3321890085);;
        result_3321890083 = true;
        break BeforeRet;
      };

      return result_3321890083;

    }

  BeforeRet: {
    var lineHeight_3321889329 = lineHeight_2768240794(app_3321889326.platform);
    var totalLineHeight_3321889330 = totalLineHeight_2768240810(app_3321889326.platform);
    var charWidth_3321889331 = charWidth_2768240799(app_3321889326.platform);
    var textColor_3321889337 = color_3321888961(app_3321889326.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var sizeToContent_3321889338 = widget_3321889327.sizeToContent;
    var headerPanel_3321889339 = null;
    var headerPart1Text_3321889340 = null;
    var headerPart2Text_3321889341 = null;
    var contentPanel_3321889342 = null;
    if (((widget_3321889327.children).length == 0)) {
    headerPanel_3321889339 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3321889330, lastHierarchyChange: frameIndex_3321889328, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3321889327.children.push(headerPanel_3321889339);;
    headerPart1Text_3321889340 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(0.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3321889328, foregroundColor: nimCopy(null, textColor_3321889337, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3321889339.children.push(headerPart1Text_3321889340);;
    headerPart2Text_3321889341 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2164261725(1.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), pivot: vec2_2164261725(1.0, 0.0), lastHierarchyChange: frameIndex_3321889328, foregroundColor: nimCopy(null, textColor_3321889337, NTI2550136835), m_type: NTI2785017876, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3321889339.children.push(headerPart2Text_3321889341);;
    contentPanel_3321889342 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3321889330, lastHierarchyChange: frameIndex_3321889328, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3321889342.maskContent = true;
    widget_3321889327.children.push(contentPanel_3321889342);;
    layoutWidget_2785018363(headerPanel_3321889339, widget_3321889327.lastBounds, frameIndex_3321889328, app_3321889326.platform.layoutOptions);
    layoutWidget_2785018363(contentPanel_3321889342, widget_3321889327.lastBounds, frameIndex_3321889328, app_3321889326.platform.layoutOptions);
    }
    else {
      headerPanel_3321889339 = widget_3321889327.children[chckIndx(0, 0, (widget_3321889327.children).length - 1)];
      headerPart1Text_3321889340 = headerPanel_3321889339.children[chckIndx(0, 0, (headerPanel_3321889339.children).length - 1)];
      headerPart2Text_3321889341 = headerPanel_3321889339.children[chckIndx(1, 0, (headerPanel_3321889339.children).length - 1)];
      contentPanel_3321889342 = widget_3321889327.children[chckIndx(1, 0, (widget_3321889327.children).length - 1)];
    }
    
    if (self_3321889325.renderHeader) {
    headerPanel_3321889339.bottom = totalLineHeight_3321889330;
    contentPanel_3321889342.top = totalLineHeight_3321889330;
    if (active_2415919218(self_3321889325)) {
    Temporary1 = color_3321888961(app_3321889326.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3321888961(app_3321889326.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3321889372 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2785018193(headerPanel_3321889339, color_3321889372, frameIndex_3321889328);
    var workspaceName_3321889415 = get_2348810295(map_1291854418(self_3321889325.document.workspace, HEX3Aanonymous_3321889377), []);
    if (((self_3321889325.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3321889325.currentMode;
    }
    
    var mode_3321889416 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3321889421 = [mnewString(0)];
    fmtRes_3321889421[0].push.apply(fmtRes_3321889421[0], [32]);;
    formatValue_721420459(fmtRes_3321889421, 0, mode_3321889416, []);
    fmtRes_3321889421[0].push.apply(fmtRes_3321889421[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3321889421, 0, self_3321889325.document.filename, []);
    fmtRes_3321889421[0].push.apply(fmtRes_3321889421[0], [32]);;
    formatValue_721420459(fmtRes_3321889421, 0, workspaceName_3321889415, []);
    fmtRes_3321889421[0].push.apply(fmtRes_3321889421[0], [32]);;
    headerPart1Text_3321889340.text = nimCopy(null, fmtRes_3321889421[0], NTI33554449);
    var fmtRes_3321889426 = [mnewString(0)];
    fmtRes_3321889426[0].push.apply(fmtRes_3321889426[0], [32]);;
    formatValue_2818572415(fmtRes_3321889426, 0, selection_2818572805(self_3321889325), []);
    fmtRes_3321889426[0].push.apply(fmtRes_3321889426[0], [32,45,32]);;
    formatValue_2701131945(fmtRes_3321889426, 0, self_3321889325.id, []);
    fmtRes_3321889426[0].push.apply(fmtRes_3321889426[0], [32]);;
    headerPart2Text_3321889341.text = nimCopy(null, fmtRes_3321889426[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2785018201(headerPanel_3321889339, frameIndex_3321889328);
    }
    else {
      headerPanel_3321889339.bottom = 0.0;
      contentPanel_3321889342.top = 0.0;
    }
    
    self_3321889325.lastContentBounds = nimCopy(self_3321889325.lastContentBounds, contentPanel_3321889342.lastBounds, NTI2147483653);
    widget_3321889327.lastHierarchyChange = nimMax(widget_3321889327.lastHierarchyChange, headerPanel_3321889339.lastHierarchyChange);
    contentPanel_3321889342.sizeToContent = sizeToContent_3321889338;
    if (active_2415919218(self_3321889325)) {
    Temporary3 = color_3321888961(app_3321889326.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3321888961(app_3321889326.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2785018193(contentPanel_3321889342, Temporary3, frameIndex_3321889328);
      if (changed_2785018364(contentPanel_3321889342, frameIndex_3321889328)) Temporary5 = true; else {        Temporary5 = dirty_2415919140(self_3321889325);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3321889326.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2415919213(self_3321889325);
    if (contentPanel_3321889342.children.length < 0) { for (var i = contentPanel_3321889342.children.length ; i < 0 ; ++i) contentPanel_3321889342.children.push(null); }
               else { contentPanel_3321889342.children.length = 0; };
    if (!(self_3321889325.disableScrolling)) {
    updateBaseIndexAndScrollOffset_3321888843(contentPanel_3321889342, self_3321889325, "previousBaseIndex", self_3321889325, "scrollOffset", (self_3321889325.document.lines).length, totalLineHeight_3321889330, none_3003121842());
    }
    
    var selectionsPerLine_3321889472 = [initTable_3321889461(32)];
    Label6: {
      var s_3321889476 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872727 = [];
      colontmp__536872727 = selections_2818572802(self_3321889325);
      var i_536872728 = 0;
      var L_536872729 = (colontmp__536872727).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872728 < L_536872729)) break Label8;
            s_3321889476 = colontmp__536872727[chckIndx(i_536872728, 0, (colontmp__536872727).length - 1)];
            var sn_3321889477 = normalized_2449473902(s_3321889476);
            Label9: {
              var line_3321889482 = 0;
              var res_536872725 = sn_3321889477.Field0.Field0;
              Label10: {
                  Label11: while (true) {
                  if (!(res_536872725 <= sn_3321889477.Field1.Field0)) break Label11;
                    line_3321889482 = res_536872725;
                    var Temporary13 = nimCopy(null, s_3321889476, NTI2449473547);
                    (Temporary12 = mgetOrPut_3321889513(selectionsPerLine_3321889472[0], line_3321889482, []), Temporary12)[0][Temporary12[1]].push(Temporary13);;
                    res_536872725 = addInt(res_536872725, 1);
                  }
              };
            };
            i_536872728 = addInt(i_536872728, 1);
            if (!(((colontmp__536872727).length == L_536872729))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3321889727 = nimCopy(null, self_3321889325.searchResults, NTI2818572541);
    var lineNumbers_3321889805 = get_3321889791(self_3321889325.lineNumbers, getOption_3321889740(app_3321889326, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3321889805) {
    case 1:
      Temporary14 = addInt(self_3321889325.previousBaseIndex, ((((contentPanel_3321889342.lastBounds.h - self_3321889325.scrollOffset) / totalLineHeight_3321889330)) | 0));
      break;
    case 2:
      Temporary14 = 99;
      break;
    default: 
      Temporary14 = 0;
      break;
    }
    var maxLineNumber_3321889806 = Temporary14;
    var maxLineNumberLen_3321889807 = addInt((HEX24_369098760(maxLineNumber_3321889806)).length, 1);
    var cursorLine_3321889808 = selection_2818572805(self_3321889325).Field1.Field0;
    var lineNumberPadding_3321889809 = charWidth_3321889331;
    if (!((lineNumbers_3321889805 == 0))) {
    Temporary15 = vec2_2164261725((maxLineNumberLen_3321889807 * charWidth_3321889331), 0.0);
    }
    else {
    Temporary15 = vec2_2164261686();
    }
    
    var lineNumberBounds_3321889815 = nimCopy(null, Temporary15, NTI2164261152);
    if (self_3321889325.lastRenderedLines.length < 0) { for (var i = self_3321889325.lastRenderedLines.length ; i < 0 ; ++i) self_3321889325.lastRenderedLines.push(null); }
               else { self_3321889325.lastRenderedLines.length = 0; };
    var isWide_3321889829 = getOption_2818583615(app_3321889326, getContextWithMode_2818583609(self_3321889325, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3321889829) {
    Temporary16 = 1.0;
    }
    else {
    Temporary16 = 0.2;
    }
    
    var cursorWidth_3321889830 = Temporary16;
    var selectionColor_3321889836 = color_3321888961(app_3321889326.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3321889956 = color_3321889841(app_3321889326.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3321890076 = color_3321889961(app_3321889326.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    var cursorBounds_3321890077 = rect_2147483672(vec2_2164261686(), vec2_2164261686());
    var renderOnlyLinesInBounds_3321890592 = !(sizeToContent_3321889338);
    createLinesInPanel_3321888915(app_3321889326, contentPanel_3321889342, self_3321889325.previousBaseIndex, self_3321889325.scrollOffset, (self_3321889325.document.lines).length, frameIndex_3321889328, renderOnlyLinesInBounds_3321890592, renderLine_3321890078);
    if (self_3321889325.showCompletions) {
    renderCompletions_3321888953(self_3321889325, app_3321889326, contentPanel_3321889342, cursorBounds_3321890077, frameIndex_3321889328);
    }
    
    contentPanel_3321889342.lastHierarchyChange = frameIndex_3321889328;
    widget_3321889327.lastHierarchyChange = nimMax(widget_3321889327.lastHierarchyChange, contentPanel_3321889342.lastHierarchyChange);
    self_3321889325.lastContentBounds = nimCopy(self_3321889325.lastContentBounds, contentPanel_3321889342.lastBounds, NTI2147483653);
  };

  
}

function updateWidget_3288334342(self_3288334343, app_3288334344, widget_3288334345, frameIndex_3288334346) {
  
}

function updateWidget_3288334347(self_3288334343, app_3288334344, widget_3288334345, frameIndex_3288334346) {
    chckNilDisp(self_3288334343);
    if (isObj(self_3288334343.m_type, NTI2969568641)) {
    updateWidget_3305113210(self_3288334343, app_3288334344, widget_3288334345, frameIndex_3288334346);
    }
    else {
    if (isObj(self_3288334343.m_type, NTI2818572510)) {
    updateWidget_3321889324(self_3288334343, app_3288334344, widget_3288334345, frameIndex_3288334346);
    }
    else {
    if (isObj(self_3288334343.m_type, NTI2415919108)) {
    updateWidget_3288334342(self_3288334343, app_3288334344, widget_3288334345, frameIndex_3288334346);
    }
    }}

  
}

function dirty_2483027986(self_2483027987) {
  var result_2483027988 = false;

    result_2483027988 = self_2483027987.mDirty;

  return result_2483027988;

}

function resetDirty_2483028016(self_2483028017) {
    self_2483028017.mDirty = false;

  
}

function pop_3338666106(s_3338666108, s_3338666108_Idx) {
  var result_3338666109 = null;

    var L_3338666113 = subInt((s_3338666108[s_3338666108_Idx]).length, 1);
    result_3338666109 = s_3338666108[s_3338666108_Idx][chckIndx(L_3338666113, 0, (s_3338666108[s_3338666108_Idx]).length - 1)];
    if (s_3338666108[s_3338666108_Idx].length < chckRange(L_3338666113, 0, 2147483647)) { for (var i = s_3338666108[s_3338666108_Idx].length ; i < chckRange(L_3338666113, 0, 2147483647) ; ++i) s_3338666108[s_3338666108_Idx].push(null); }
               else { s_3338666108[s_3338666108_Idx].length = chckRange(L_3338666113, 0, 2147483647); };

  return result_3338666109;

}

function updateWidget_3338666021(self_3338666022, app_3338666023, widget_3338666024, frameIndex_3338666025) {
    var Temporary1;

    var textColor_3338666031 = color_3321888961(app_3338666023.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3338666024.children).length == 0)) {
    var text_3338666035 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3338666025, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3338666024.children.push(text_3338666035);;
    Temporary1 = text_3338666035;
    }
    else {
    Temporary1 = widget_3338666024.children[chckIndx(0, 0, (widget_3338666024.children).length - 1)];
    }
    
    var text_3338666040 = Temporary1;
    text_3338666040.text = nimCopy(null, self_3338666022.path, NTI33554449);
    updateForegroundColor_2785018179(text_3338666040, textColor_3338666031, frameIndex_3338666025);
    updateLastHierarchyChangeFromChildren_2785018201(text_3338666040, -1);

  
}

function updateWidget_3338666001(self_3338666002, app_3338666003, widget_3338666004, frameIndex_3338666005) {
    var Temporary1;

    var textColor_3338666011 = color_3321888961(app_3338666003.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3338666004.children).length == 0)) {
    var text_3338666015 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), lastHierarchyChange: frameIndex_3338666005, m_type: NTI2785017876, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3338666004.children.push(text_3338666015);;
    Temporary1 = text_3338666015;
    }
    else {
    Temporary1 = widget_3338666004.children[chckIndx(0, 0, (widget_3338666004.children).length - 1)];
    }
    
    var text_3338666020 = Temporary1;
    text_3338666020.text = nimCopy(null, self_3338666002.path, NTI33554449);
    updateForegroundColor_2785018179(text_3338666020, textColor_3338666011, frameIndex_3338666005);
    updateLastHierarchyChangeFromChildren_2785018201(text_3338666020, -1);

  
}

function updateWidget_3305111580(self_3305111581, app_3305111582, widget_3305111583, frameIndex_3305111584) {
        var Temporary1;
        var Temporary2;

  BeforeRet: {
    var charWidth_3305111585 = charWidth_2768240799(app_3305111582.platform);
    var totalLineHeight_3305111586 = totalLineHeight_2768240810(app_3305111582.platform);
    var textColor_3305111592 = color_3321888961(app_3305111582.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (widget_3305111583.children.length < 0) { for (var i = widget_3305111583.children.length ; i < 0 ; ++i) widget_3305111583.children.push(null); }
               else { widget_3305111583.children.length = 0; };
    var name_3305111597 = [];
    var typ_3305111598 = [];
    var nameColors_3305111603 = [[]];
    var typeColors_3305111604 = [115,116,111,114,97,103,101,46,116,121,112,101];
    switch (self_3305111581.completion.kind) {
    case 0:
        var Temporary2 = self_3305111581.completion;
        if (ConstSet335[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2969568637)); }
        var oHEX60gensym0_3305111607 = getSymbol_3019906948(ctx_2969567289, Temporary2.id);
        if (!isSome_3087009356(oHEX60gensym0_3305111607)) Temporary1 = false; else {          var sym_3305111630 = get_3087009376(oHEX60gensym0_3305111607);
          Temporary1 = true;        }      if (Temporary1) {
      name_3305111597 = nimCopy(null, sym_3305111630.name, NTI33554449);
      typ_3305111598 = nimCopy(null, HEX24_3087008191(computeSymbolType_3019928398(ctx_2969567289, sym_3305111630, true)), NTI33554449);
      nameColors_3305111603 = nimCopy(null, getColorForSymbol_3137341355(ctx_2969567289, sym_3305111630), NTI3137340452);
      }
      
      break;
    default: 
      break BeforeRet;
      break;
    }
    var nameColor_3305111636 = tokenColor_3321889129(app_3305111582.theme, nameColors_3305111603, rgb_2550136919(255, 255, 255));
    var nameWidget_3305111637 = createPartWidget_3321888836(name_3305111597, 0.0, ((name_3305111597).length * charWidth_3305111585), totalLineHeight_3305111586, nameColor_3305111636, frameIndex_3305111584);
    widget_3305111583.children.push(nameWidget_3305111637);;
    var typeColor_3305111647 = tokenColor_3321890525(app_3305111582.theme, typeColors_3305111604, rgb_2550136919(255, 255, 255));
    var typeWidget_3305111648 = createPartWidget_3321888836(typ_3305111598, (-((typ_3305111598).length) * charWidth_3305111585), 0.0, totalLineHeight_3305111586, typeColor_3305111647, frameIndex_3305111584);
    typeWidget_3305111648.anchor.Field0.x = 1.0;
    typeWidget_3305111648.anchor.Field1.x = 1.0;
    widget_3305111583.children.push(typeWidget_3305111648);;
  };

  
}

function updateWidget_3288334354(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358) {
  
}

function updateWidget_3288334359(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358) {
    chckNilDisp(self_3288334355);
    if (isObj(self_3288334355.m_type, NTI1291848506)) {
    updateWidget_3338666021(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358);
    }
    else {
    if (isObj(self_3288334355.m_type, NTI1291848508)) {
    updateWidget_3338666001(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358);
    }
    else {
    if (isObj(self_3288334355.m_type, NTI2969577305)) {
    updateWidget_3305111580(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358);
    }
    else {
    if (isObj(self_3288334355.m_type, NTI3187671048)) {
    updateWidget_3288334354(self_3288334355, app_3288334356, widget_3288334357, frameIndex_3288334358);
    }
    }}}

  
}

function updateWidget_3338666041(self_3338666042, app_3338666043, widget_3338666044, frameIndex_3338666045) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3338666046 = lineHeight_2768240794(app_3338666043.platform);
    var totalLineHeight_3338666047 = totalLineHeight_2768240810(app_3338666043.platform);
    var charWidth_3338666048 = charWidth_2768240799(app_3338666043.platform);
    var textColor_3338666054 = color_3321888961(app_3338666043.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3338666055 = null;
    var contentPanel_3338666056 = null;
    if (((widget_3338666044.children).length == 0)) {
    headerPanel_3338666055 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), bottom: totalLineHeight_3338666047, lastHierarchyChange: frameIndex_3338666045, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3338666044.children.push(headerPanel_3338666055);;
    contentPanel_3338666056 = {anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 1.0)}, NTI2785017867), top: totalLineHeight_3338666047, lastHierarchyChange: frameIndex_3338666045, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3338666056.maskContent = true;
    widget_3338666044.children.push(contentPanel_3338666056);;
    layoutWidget_2785018363(headerPanel_3338666055, widget_3338666044.lastBounds, frameIndex_3338666045, app_3338666043.platform.layoutOptions);
    layoutWidget_2785018363(contentPanel_3338666056, widget_3338666044.lastBounds, frameIndex_3338666045, app_3338666043.platform.layoutOptions);
    }
    else {
      headerPanel_3338666055 = widget_3338666044.children[chckIndx(0, 0, (widget_3338666044.children).length - 1)];
      contentPanel_3338666056 = widget_3338666044.children[chckIndx(1, 0, (widget_3338666044.children).length - 1)];
    }
    
    updateWidget_3288334347(self_3338666042.textEditor, app_3338666043, headerPanel_3338666055, frameIndex_3338666045);
    updateLastHierarchyChangeFromChildren_2785018201(headerPanel_3338666055, frameIndex_3338666045);
    widget_3338666044.lastHierarchyChange = nimMax(widget_3338666044.lastHierarchyChange, headerPanel_3338666055.lastHierarchyChange);
    updateBackgroundColor_2785018193(contentPanel_3338666056, color_3321888961(app_3338666043.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3338666045);
    self_3338666042.lastContentBounds = nimCopy(self_3338666042.lastContentBounds, contentPanel_3338666056.lastBounds, NTI2147483653);
    var fmtRes_3338666078 = [mnewString(0)];
    formatValue_2785018106(fmtRes_3338666078, 0, self_3338666042.lastContentBounds, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3338666078[0], NTI33554449)]);
      if (changed_2785018364(contentPanel_3338666056, frameIndex_3338666045)) Temporary2 = true; else {        Temporary2 = dirty_2483027986(self_3338666042);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3338666043.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2483028016(self_3338666042);
    var maxLineCount_3338666084 = ((Math.floor((widget_3338666044.lastBounds.h / totalLineHeight_3338666047))) | 0);
    var targetNumRenderedItems_3338666088 = nimMin(maxLineCount_3338666084, (self_3338666042.completions).length);
    var lastRenderedIndex_3338666092 = nimMin(subInt(addInt(self_3338666042.scrollOffset, targetNumRenderedItems_3338666088), 1), (self_3338666042.completions).length - 1);
    if ((self_3338666042.selected < self_3338666042.scrollOffset)) {
    self_3338666042.scrollOffset = self_3338666042.selected;
    lastRenderedIndex_3338666092 = nimMin(subInt(addInt(self_3338666042.scrollOffset, targetNumRenderedItems_3338666088), 1), (self_3338666042.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3338666092 < self_3338666042.selected)) {
    self_3338666042.scrollOffset = nimMax(addInt(subInt(self_3338666042.selected, targetNumRenderedItems_3338666088), 1), 0);
    lastRenderedIndex_3338666092 = nimMin(subInt(addInt(self_3338666042.scrollOffset, targetNumRenderedItems_3338666088), 1), (self_3338666042.completions).length - 1);
    }
    
    var numRenderedItems_3338666099 = nimMax(addInt(subInt(lastRenderedIndex_3338666092, self_3338666042.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3338666099 < (contentPanel_3338666056.children).length)) break Label4;
          var _ = pop_3338666106(contentPanel_3338666056, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3338666056.children).length < numRenderedItems_3338666099)) break Label6;
          contentPanel_3338666056.children.push({anchor: nimCopy(null, {Field0: vec2_2164261725(0.0, 0.0), Field1: vec2_2164261725(1.0, 0.0)}, NTI2785017867), m_type: NTI2785017868, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3338666130 = color_3321888961(app_3338666043.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3338666131 = 0.0;
    var widgetIndex_3338666132 = 0;
    Label7: {
      var completionIndex_3338666137 = 0;
      var res_536872809 = self_3338666042.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872809 <= lastRenderedIndex_3338666092)) break Label9;
            completionIndex_3338666137 = res_536872809;
            try {
            var lineWidget_3338666143 = contentPanel_3338666056.children[chckIndx(widgetIndex_3338666132, 0, (contentPanel_3338666056.children).length - 1)];
            lineWidget_3338666143.top = top_3338666131;
            lineWidget_3338666143.bottom = (top_3338666131 + totalLineHeight_3338666047);
            lineWidget_3338666143.lastHierarchyChange = frameIndex_3338666045;
            if ((completionIndex_3338666137 == self_3338666042.selected)) {
            lineWidget_3338666143.fillBackground = true;
            updateBackgroundColor_2785018193(lineWidget_3338666143, selectionColor_3338666130, frameIndex_3338666045);
            }
            else {
              lineWidget_3338666143.fillBackground = false;
              updateBackgroundColor_2785018193(lineWidget_3338666143, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3338666045);
            }
            
            updateWidget_3288334359(self_3338666042.completions[chckIndx(completionIndex_3338666137, 0, (self_3338666042.completions).length - 1)], app_3338666043, lineWidget_3338666143, frameIndex_3338666045);
            top_3338666131 = lineWidget_3338666143.bottom;
            res_536872809 = addInt(res_536872809, 1);
            } finally {
            widgetIndex_3338666132 = addInt(widgetIndex_3338666132, 1);
            }
          }
      };
    };
    contentPanel_3338666056.lastHierarchyChange = frameIndex_3338666045;
    widget_3338666044.lastHierarchyChange = nimMax(widget_3338666044.lastHierarchyChange, contentPanel_3338666056.lastHierarchyChange);
  };

  
}

function updateWidget_3288334348(self_3288334349, app_3288334350, widget_3288334351, frameIndex_3288334352) {
  
}

function updateWidget_3288334353(self_3288334349, app_3288334350, widget_3288334351, frameIndex_3288334352) {
    chckNilDisp(self_3288334349);
    if (isObj(self_3288334349.m_type, NTI3187671062)) {
    updateWidget_3338666041(self_3288334349, app_3288334350, widget_3288334351, frameIndex_3288334352);
    }
    else {
    if (isObj(self_3288334349.m_type, NTI2483027972)) {
    updateWidget_3288334348(self_3288334349, app_3288334350, widget_3288334351, frameIndex_3288334352);
    }
    }

  
}
